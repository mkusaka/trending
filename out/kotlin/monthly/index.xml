<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T02:42:35Z</updated>
  <subtitle>Monthly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hectorqin/reader</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/hectorqin/reader</id>
    <link href="https://github.com/hectorqin/reader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;阅读3服务器版，桌面端，iOS可用。后端 Kotlin + Spring Boot + Vert.x + Coroutine ；前端 Vue.js + Element。麻烦点点star，关注一下公众号【假装大佬】❗️&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;reader&lt;/h1&gt; &#xA;&lt;p&gt;阅读3服务器版，不需要手机。&lt;/p&gt; &#xA;&lt;p&gt;在线体验 👉 &lt;a href=&#34;https://reader.htmake.com&#34;&gt;https://reader.htmake.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;加入TG群(限时开放) 👉 &lt;a href=&#34;https://t.me/+pQ8HDlANPZ84ZWNl&#34;&gt;https://t.me/+pQ8HDlANPZ84ZWNl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;关注公众号，查看教程和书源👇&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hectorqin/reader/master/imgs/mpcode.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;免责声明（Disclaimer）&lt;/summary&gt; 阅读是一款提供网络文学搜索的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。 &#xA; &lt;p&gt;当您搜索一本书的时，阅读会将该书的书名以关键词的形式提交到各个第三方网络文学网站。各第三方网站返回的内容与阅读无关，阅读对其概不负责，亦不承担任何法律责任。任何通过使用阅读而链接到的第三方网页均系他人制作或提供，您可能从第三方网页上获得其他服务，阅读对其合法性概不负责，亦不承担任何法律责任。第三方搜索引擎结果根据您提交的书名自动搜索获得并提供试读，不代表阅读赞成或被搜索链接到的第三方网页上的内容或立场。您应该对使用搜索引擎的结果自行承担风险。&lt;/p&gt; &#xA; &lt;p&gt;阅读不做任何形式的保证：不保证第三方搜索引擎的搜索结果满足您的要求，不保证搜索服务不中断，不保证搜索结果的安全性、正确性、及时性、合法性。因网络状况、通讯线路、第三方网站等任何原因而导致您不能正常使用阅读，阅读不承担任何法律责任。阅读尊重并保护所有使用阅读用户的个人隐私权，您注册的用户名、电子邮件地址等个人资料，非经您亲自许可或根据相关法律、法规的强制性规定，阅读不会主动地泄露给第三方。&lt;/p&gt; &#xA; &lt;p&gt;阅读致力于最大程度地减少网络文学阅读者在自行搜寻过程中的无意义的时间浪费，通过专业搜索展示不同网站中网络文学的最新章节。阅读在为广大小说爱好者提供方便、快捷舒适的试读体验的同时，也使优秀网络文学得以迅速、更广泛的传播，从而达到了在一定程度促进网络文学充分繁荣发展之目的。阅读鼓励广大小说爱好者通过阅读发现优秀网络小说及其提供商，并建议阅读正版图书。任何单位或个人认为通过阅读搜索链接到的第三方网页内容可能涉嫌侵犯其信息网络传播权，应该及时向阅读提出书面权力通知，并提供身份证明、权属证明及详细侵权情况证明。阅读在收到上述法律文件后，将会依法尽快断开相关链接内容。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;功能说明&lt;/summary&gt; 书源管理 &#xA; &lt;br&gt; - 书架管理 &#xA; &lt;br&gt; - 搜索 &#xA; &lt;br&gt; - 书海 &#xA; &lt;br&gt; - 看书 &#xA; &lt;br&gt; - 移动端适配 &#xA; &lt;br&gt; - 换源 &#xA; &lt;br&gt; - 翻页方式 &#xA; &lt;br&gt; - 手势支持 &#xA; &lt;br&gt; - 自定义主题 &#xA; &lt;br&gt; - 自定义样式 &#xA; &lt;br&gt; - WebDAV同步 &#xA; &lt;br&gt; - 文字替换过滤 &#xA; &lt;br&gt; - 听书&#xA; &lt;仅部分浏览器支持，手机端会因为锁屏而失效&gt; &#xA;  &lt;br&gt; - 用户配置备份恢复 &#xA;  &lt;br&gt; - 支持漫画 &#xA;  &lt;br&gt; - 支持音频 &#xA;  &lt;br&gt; - 书源失效检测 &#xA;  &lt;br&gt; - 导入本地TXT、EPUB、UMD格式的书籍 &#xA;  &lt;br&gt; - 书籍分组 &#xA;  &lt;br&gt; - RSS订阅 &#xA;  &lt;br&gt; - 定时更新书架 &#xA;  &lt;br&gt; - 并发搜书 &#xA;  &lt;br&gt; - 本地书仓 &#xA;  &lt;br&gt; &#xA; &lt;/仅部分浏览器支持，手机端会因为锁屏而失效&gt;&#xA;&lt;/details&gt; &#xA;&lt;h2&gt;下载与安装&lt;/h2&gt; &#xA;&lt;p&gt;详见&lt;a href=&#34;https://github.com/hectorqin/reader/raw/master/doc.md&#34;&gt;文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 定时更新书架书籍章节&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多源并发搜索书籍&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 并发更新书架章节&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 并发搜索书籍来源&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; WebDav同步&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 导入本地书籍，支持epub&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 完善接口文档&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 阅读3核心兼容。已最大可能兼容，不支持使用webview，不支持使用cookie、cache及调用原生java等高级Javascript功能&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持RSS订阅&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;部分使用了 &lt;code&gt;Javascript&lt;/code&gt; 的书源可能会报错，不支持 &lt;code&gt;cookie&lt;/code&gt; 和 &lt;code&gt;cache&lt;/code&gt; 功能&lt;/li&gt; &#xA; &lt;li&gt;不支持使用了 &lt;code&gt;webview&lt;/code&gt; 的书源&lt;/li&gt; &#xA; &lt;li&gt;不支持书源登录功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目初期参考了 &lt;a href=&#34;https://github.com/lightink-qingmo/lightink-server&#34;&gt;lightink-小说API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gedoor/MyBookshelf&#34;&gt;阅读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gedoor/legado&#34;&gt;阅读3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;项目初期参考了 &lt;a href=&#34;https://github.com/celetor/web-yuedu3&#34;&gt;阅读3.0Web端&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其它&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hectorqin/reader/raw/master/doc.md&#34;&gt;帮助文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hectorqin/reader/raw/master/preview.md&#34;&gt;界面预览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Kr328/ClashForAndroid</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/Kr328/ClashForAndroid</id>
    <link href="https://github.com/Kr328/ClashForAndroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A rule-based tunnel for Android.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Clash for Android&lt;/h2&gt; &#xA;&lt;p&gt;A Graphical user interface of &lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;clash&lt;/a&gt; for Android&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.github.kr328.clash&#34;&gt;&lt;img width=&#34;200px&#34; alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34;&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/Kr328/ClashForAndroid/releases&#34;&gt;Releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Feature&lt;/h3&gt; &#xA;&lt;p&gt;Fully feature of &lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;clash&lt;/a&gt; &lt;del&gt;(Exclude &lt;code&gt;external-controller&lt;/code&gt;&lt;/del&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Requirement&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 5.0+ (minimum)&lt;/li&gt; &#xA; &lt;li&gt;Android 7.0+ (recommend)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;armeabi-v7a&lt;/code&gt; , &lt;code&gt;arm64-v8a&lt;/code&gt;, &lt;code&gt;x86&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt; Architecture&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/Kr328/ClashForAndroid/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Kr328/ClashForAndroid/main/NOTICE&#34;&gt;NOTICE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Privacy Policy&lt;/h3&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/Kr328/ClashForAndroid/main/PRIVACY_POLICY.md&#34;&gt;PRIVACY_POLICY.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Update submodules&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;strong&gt;OpenJDK 11&lt;/strong&gt;, &lt;strong&gt;Android SDK&lt;/strong&gt;, &lt;strong&gt;CMake&lt;/strong&gt; and &lt;strong&gt;Golang&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;local.properties&lt;/code&gt; in project root with&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;sdk.dir=/path/to/android-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;signing.properties&lt;/code&gt; in project root with&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;keystore.path=/path/to/keystore/file&#xA;keystore.password=&amp;lt;key store password&amp;gt;&#xA;key.alias=&amp;lt;key alias&amp;gt;&#xA;key.password=&amp;lt;key password&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew app:assembleFossRelease&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pick &lt;code&gt;app-foss-&amp;lt;arch&amp;gt;-release.apk&lt;/code&gt; in &lt;code&gt;app/build/outputs/apk/foss/release/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>Shabinder/SpotiFlyer</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/Shabinder/SpotiFlyer</id>
    <link href="https://github.com/Shabinder/SpotiFlyer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Multiplatform Music Downloader, Supports Spotify / Gaana / Youtube Music / Jio Saavn / SoundCloud. NOTE: BEING REWRITTEN, SO STAY TUNED.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Shabinder/SpotiFlyer/main/art/cover-web.jpg&#34; alt=&#34;Web Cover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Shabinder/SpotiFlyer/main/art/cover-android.jpg&#34; alt=&#34;Android Cover&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Shabinder/SpotiFlyer/main/art/cover-desktop.jpg&#34; alt=&#34;Desktop Cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer&#34;&gt;&lt;img src=&#34;https://github.com/Shabinder/SpotiFlyer/raw/Compose/art/SpotiFlyer.svg?sanitize=true&#34; align=&#34;left&#34; height=&#34;80&#34; width=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SpotiFlyer&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kotlin Multiplatform&lt;/strong&gt; Music Downloader ,supports &lt;strong&gt;Spotify, Youtube, Gaana, Jio-Saavn and SoundCloud&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supports- Playlist, Albums, Tracks. &lt;em&gt;(If You know Any Source for Episodes/Podcasts create an Issue sharing It.)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Currently running on:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer#-install&#34;&gt;Android (Jetpack Compose)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer#-install&#34;&gt;Desktop (Compose for Desktop) &lt;sup&gt;β&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spotiflyer.ml/web/&#34;&gt;Web (Kotlin/JS + React Wrapper) &lt;sup&gt;β&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shabinder/spotiflyer-ios&#34;&gt;&lt;em&gt;(WIP)&lt;/em&gt; IOS SOON (SWIFTUI)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--[![Build Status](https://github.com/Shabinder/SpotiFlyer/blob/master/app/build_passing.svg)](https://github.com/Shabinder/SpotiFlyer/releases)&#xA;![API](https://img.shields.io/badge/API-26%2B-brightgreen.svg)&#xA;&lt;/br&gt;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Shabinder/SpotiFlyer?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/Shabinder/SpotiFlyer?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/Shabinder/SpotiFlyer?style=social&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Encourage this repo by giving it a Star⭐ .&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;SpotiFlyer is an &lt;strong&gt;App&lt;/strong&gt;(Written in &lt;strong&gt;Kotlin&lt;/strong&gt;), which &lt;strong&gt;aims&lt;/strong&gt; to work as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Downloads&lt;/strong&gt;: Albums, Tracks and Playlists,etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Save your Data&lt;/strong&gt; ,by not &lt;strong&gt;&lt;em&gt;Streaming&lt;/em&gt;&lt;/strong&gt; your Fav Songs Online again &amp;amp; again(Just Download Them!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No ADS!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Works straight out of the box&lt;/strong&gt; and does not require you to generate or mess with your API keys (already included).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Platforms:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spotify&lt;/li&gt; &#xA; &lt;li&gt;Gaana&lt;/li&gt; &#xA; &lt;li&gt;Youtube&lt;/li&gt; &#xA; &lt;li&gt;Youtube Music&lt;/li&gt; &#xA; &lt;li&gt;Jio-Saavn&lt;/li&gt; &#xA; &lt;li&gt;SoundCloud&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;(more coming soon)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--START_SECTION:DCI &#xA;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/latest&#34;&gt;&lt;img src=&#34;https://hcti.io/v1/image/53d51dc7-91c7-4b9d-b923-2ea32e6b17ad&#34; height=&#34;125&#34; width=&#34;280&#34; alt=&#34;Total Downloads&#34;&gt;&lt;/a&gt;&#xA;&lt;!--END_SECTION:DCI--&gt; &#xA;&lt;h2&gt;💻 Install&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Download&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/SpotiFlyer-3.6.1.apk&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=7885FF&amp;amp;label=Android-Apk&amp;amp;logo=android&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/SpotiFlyer-3.6.1.msi&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=00A8E8&amp;amp;label=Windows-msi&amp;amp;logo=windows&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows-JAR&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/SpotiFlyer-windows-x64-3.6.1.jar&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=00719c&amp;amp;label=Windows-jar&amp;amp;logo=windows&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS-JAR&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/SpotiFlyer-macos-x64-3.6.1.jar&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=5F85CE&amp;amp;label=MacOS-jar&amp;amp;logo=apple&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux-DEB&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/spotiflyer_3.6.1-1_amd64.deb&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=D0074E&amp;amp;label=Linux-deb&amp;amp;logo=debian&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux-JAR&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/releases/download/v3.6.1/SpotiFlyer-linux-x64-3.6.1.jar&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=EBA201&amp;amp;label=Linux-jar&amp;amp;logo=linux&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Stable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://shabinder.github.io/SpotiFlyer/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Shabinder/SpotiFlyer?color=FF7139&amp;amp;label=SpotiFlyer&amp;amp;logo=firefox&amp;amp;style=for-the-badge&#34; alt=&#34;Download Button&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;⚠️ Beta&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run the &lt;code&gt;jar&lt;/code&gt; version, you need JAVA installed.&lt;/li&gt; &#xA; &lt;li&gt;MacOs DMG is not notarized and signed using a certificate , so Use jar in mac for now.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- [![Latest Download](https://img.shields.io/github/downloads/Shabinder/SpotiFlyer/total?style=for-the-badge&amp;color=17B2E7)](https://github.com/Shabinder/SpotiFlyer/releases/latest) --&gt; &#xA;&lt;a href=&#34;https://f-droid.org/packages/com.shabinder.spotiflyer&#34;&gt; &lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;110&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Want to Contribute 🙋‍♂️?&lt;/h3&gt; &#xA;&lt;p&gt;Want to contribute? Great! All contributions are welcome, from code to documentation to graphics to design suggestions to bug reports. Please use GitHub to its fullest-- contribute Pull Requests, contribute tutorials or other wiki content-- whatever you have to offer, we can use it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;strong&gt;Translations&lt;/strong&gt; , read &lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/raw/main/CONTRIBUTING.md&#34;&gt;Contributing.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please Donate to support me and my work!&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://ko-fi.com/R6R84CS1D&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://opencollective.com/spotiflyer/donate&#34;&gt; &lt;img src=&#34;https://opencollective.com/spotiflyer/tiers/donate.svg?avatarHeight=52&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://paypal.me/shabinder&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Want to discuss? 💬&lt;/h3&gt; &#xA;&lt;p&gt;Have any questions, doubts or want to present your opinions, views? You&#39;re always welcome. You can &lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/discussions&#34;&gt;start discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Todos 📄&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write &lt;strong&gt;Tests&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Support for Podcasts/Episodes and Shows.&lt;/li&gt; &#xA; &lt;li&gt;Build a Media Player into this app. &lt;a href=&#34;https://github.com/Shabinder/SpotiFlyer/issues/113&#34;&gt;#113&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Note&lt;/h3&gt; &#xA;&lt;p&gt;The availability of YouTube Music / JioSaavn in your country is important for this app to work. The reason behind this is, we use YouTube Music / JioSaavn to filter out our search results and get the desired song downloaded from Youtube Music OR other providers we may use(like Jio Saavn). To check if YouTube Music is available in your country, visit &lt;a href=&#34;https://music.youtube.com&#34;&gt;YouTube Music&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I am hosting a &lt;strong&gt;server for WEB APP on my own personal device&lt;/strong&gt; , so expect some downtimes, If you have a &lt;strong&gt;server&lt;/strong&gt; available and would like to share , open an issue or ping me wherever you can get a hold of me.&lt;/p&gt; &#xA;&lt;h3&gt;Permissions Info:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;NETWORK&lt;/strong&gt;- &lt;em&gt;(INTERNET, ACCESS_NETWORK_STATE, ACCESS_WIFI_STATE)&lt;/em&gt;: to access the online streaming services, and Confirm Network Connectivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;STORAGE&lt;/strong&gt;- &lt;em&gt;READ_STORAGE_PERMISSION, READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE, MANAGE_EXTERNAL_STORAGE)&lt;/em&gt;: to save Downloaded Media Files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;QUERY_ALL_PACKAGES&lt;/strong&gt;- in order to check if Youtube Music, Spotify, Gaana, JioSaavn, etc apps are installed and if they are, user can directly open them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;REQUEST_IGNORE_BATTERY_OPTIMIZATIONS&lt;/strong&gt;: User Allows App to Run in Background at runtime in Permission Dialog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wake Lock&lt;/strong&gt;: Don&#39;t let Wifi/Internet Sleep in screen off / dozing state when Songs are being downloaded.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Foreground Service&lt;/strong&gt;: Service responsible to download and save songs to storage even after app is exited/background.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Analytics and Crashlytics are &lt;strong&gt;OPT-IN&lt;/strong&gt; &lt;em&gt;(Disabled by Default)&lt;/em&gt; and are &lt;strong&gt;Self-Hosted&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License &lt;img src=&#34;https://img.shields.io/github/license/Shabinder/SpotiFlyer?style=flat-square&#34; alt=&#34;GPL-License&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;GPL-3.0 License&lt;/strong&gt; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Free Software, Hell Yeah!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some Logos are Based on Logos by &lt;a href=&#34;https://www.freepik.com/&#34;&gt;Freepik&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Downloading copyright songs may be illegal in your country. This tool is for educational purposes only and was created only to show how Music Platform&#39;s Apis like Spotify&#39;s API can be exploited to download music. Please support the artists by buying their music.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yairm210/Unciv</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/yairm210/Unciv</id>
    <link href="https://github.com/yairm210/Unciv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Android/Desktop remake of Civ V&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unciv - FOSS Civ V for Android+Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/extraImages/GithubPreviewImage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.unciv.app&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Google&amp;amp;message=Play&amp;amp;color=607D8B&amp;amp;logo=google-play&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/en/packages/com.unciv.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/f-droid/v/com.unciv.app&#34; alt=&#34;F-Droid&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=itch.io&amp;amp;message=Unciv&amp;amp;color=607D8B&amp;amp;logo=itch.io&#34; alt=&#34;itch.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flathub.org/apps/details/io.github.yairm210.unciv&#34;&gt;&lt;img src=&#34;https://img.shields.io/flathub/v/io.github.yairm210.unciv&#34; alt=&#34;Flathub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/yairm210/Unciv/workflows/Build%20and%20deploy/badge.svg?sanitize=true&#34; alt=&#34;Build and deploy&#34;&gt; &lt;a href=&#34;https://discord.gg/bjrB4Xw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/586194543280390151.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is this?&lt;/h1&gt; &#xA;&lt;p&gt;An open-source, mod-friendly Android+Desktop remake of Civ V, made with LibGDX&lt;/p&gt; &#xA;&lt;h2&gt;Is this any good?&lt;/h2&gt; &#xA;&lt;p&gt;Depends what you&#39;re looking for. If you&#39;re in the market for high-res graphics, amazing soundtracks, animations etc, I highly recommend Firaxis&#39;s Civ-V-like game, &#34;Civilization V&#34;.&lt;/p&gt; &#xA;&lt;p&gt;If you want a small, fast, moddable, FOSS, in-depth 4X that can still run on a potato, you&#39;ve come to the right place :)&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the roadmap?&lt;/h2&gt; &#xA;&lt;p&gt;Is this order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Polish! As you may have noticed, Unciv is fully functional but rough around the edges. This means: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UI+UX improvements (suggestions welcome!)&lt;/li&gt; &#xA;   &lt;li&gt;Better automation, AI etc. in-game&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Finishing off Vanilla mechanics - Time Victory, Air sweep action - mostly done!&lt;/li&gt; &#xA; &lt;li&gt;G&amp;amp;K mechanics - espionage, the Maya&#39;s, etc.&lt;/li&gt; &#xA; &lt;li&gt;BNW mechanics - trade routes, world congress, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;How can I help?&lt;/h2&gt; &#xA;&lt;p&gt;Programmers start &lt;a href=&#34;https://yairm210.github.io/Unciv/Developers/Building-Locally/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Translators start &lt;a href=&#34;https://yairm210.github.io/Unciv/Other/Translating/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Modders start &lt;a href=&#34;https://yairm210.github.io/Unciv/Modders/Mods/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;You can join us in any of the open issue, or work on improving anything you want - once you&#39;re finished, issue a pull request and it&#39;ll go into the next version!&lt;/p&gt; &#xA;&lt;p&gt;If not, you can help by spreading the word - vote for Unciv where you can, mention it on Reddit or Twitter etc, and help us with new ideas of how to get the word out!&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Will you implement {feature}?&lt;/h2&gt; &#xA;&lt;p&gt;If it&#39;s in the original Civ V, then yes!&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a lot left to implement, so it&#39;s hard to give an estimation of when exactly each feature will be added, but we&#39;re constantly improving!&lt;/p&gt; &#xA;&lt;p&gt;If not, then the feature won&#39;t be added until we&#39;ve finished all the features from the original Civ - as mentioned, this will take a while!&lt;/p&gt; &#xA;&lt;h3&gt;Why not? This is its own game, why not add features that weren&#39;t in Civ V?&lt;/h3&gt; &#xA;&lt;p&gt;Having a clear vision is important for actually getting things done.&lt;/p&gt; &#xA;&lt;p&gt;Anyone can make a suggestion. Not all are good, viable, or simple. Not many can actually implement stuff.&lt;/p&gt; &#xA;&lt;p&gt;As an open source project, this stuff is done in our spare time, of which there isn&#39;t much.&lt;/p&gt; &#xA;&lt;p&gt;We need a clear-cut criteria to decide what to work on and what not to work on.&lt;/p&gt; &#xA;&lt;h2&gt;Will you implement Civ VI?&lt;/h2&gt; &#xA;&lt;p&gt;Considering how long it took to get this far, no.&lt;/p&gt; &#xA;&lt;h2&gt;Is there a desktop version?&lt;/h2&gt; &#xA;&lt;p&gt;Yes! Windows and Linux versions are available at &lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;itch.io&lt;/a&gt;, and if you&#39;re using the Itch app, your game will stay up-to-date - and we release pretty frequently so that&#39;s an issue ;)&lt;/p&gt; &#xA;&lt;p&gt;Unciv can also be installed on macOS, a guide on how to do that can be found &lt;a href=&#34;https://yairm210.github.io/Unciv/Other/Installing-on-macOS/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have Java 8, and are familiar with the command line, there are (considerably smaller) JARs in &lt;a href=&#34;https://github.com/yairm210/UnCiv/releases&#34;&gt;Releases&lt;/a&gt; which you can run with &lt;code&gt;java -jar Unciv.jar&lt;/code&gt;. For Mac users, you&#39;ll need to add extra parameters, &lt;code&gt;java -XstartOnFirstThread -Djava.awt.headless=true -jar Unciv.jar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use Flatpaks, there&#39;s a Flatpak by &lt;a href=&#34;https://github.com/MayeulC&#34;&gt;MayeulC&lt;/a&gt; and you can know more about it &lt;a href=&#34;https://github.com/flathub/io.github.yairm210.unciv&#34;&gt;here&lt;/a&gt;. Flathub link is available in the &lt;a href=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/#downloads&#34;&gt;Downloads&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build it from scratch for some reason, &lt;a href=&#34;https://yairm210.github.io/Unciv/Developers/Building-locally-without-Android-Studio/&#34;&gt;we have instructions for that as well&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How about IOS?&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m not planning on it.&lt;/p&gt; &#xA;&lt;p&gt;It means paying money to Apple, yet another release path, and since I don&#39;t have an IOS device it means I can&#39;t test it properly.&lt;/p&gt; &#xA;&lt;h2&gt;How can I learn to play? Where&#39;s the wiki?&lt;/h2&gt; &#xA;&lt;p&gt;All the tutorial information is available in-game at menu &amp;gt; civilopedia &amp;gt; tutorials&lt;/p&gt; &#xA;&lt;p&gt;All the information is included in the amazing &lt;a href=&#34;https://civilization.fandom.com/wiki/&#34;&gt;Civ V wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since this is a Civ V clone, you can search Google for how to play Civ V and there are loads of answers =)&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you could &lt;a href=&#34;https://discord.gg/bjrB4Xw&#34;&gt;join us on Discord&lt;/a&gt; and ask there =D&lt;/p&gt; &#xA;&lt;h2&gt;Aren&#39;t you basically making a Civ V clone? Is that even legal?&lt;/h2&gt; &#xA;&lt;p&gt;This is a subject that I&#39;ve heard a lot of hearsay on but no solid sources of law.&lt;/p&gt; &#xA;&lt;p&gt;From what I gather, it is illegal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use the Civilization name&lt;/li&gt; &#xA; &lt;li&gt;To impersonate the Civ games (so calling yourself civi|zation with a similar logo, for instance)&lt;/li&gt; &#xA; &lt;li&gt;To use any assets from the original game (images, sound etc) - they belong to Firaxis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From what I understand, intellectual property rights apply to names, characters and settings. They do not apply to mechanics - as I&#39;m sure you know, there are a billion Flappy Bird knockoffs&lt;/p&gt; &#xA;&lt;p&gt;If anyone has any real legal sources, or can shed some light on the limits of what is and is not allowed, I&#39;d be happy to hear!&lt;/p&gt; &#xA;&lt;h2&gt;Disclosure&lt;/h2&gt; &#xA;&lt;p&gt;Multiplayer takes advantage of Dropbox, which is &lt;em&gt;non-free software&lt;/em&gt;, for syncing purposes.&lt;/p&gt; &#xA;&lt;p&gt;Single player does not use this feature.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;&lt;img src=&#34;https://static.itch.io/images/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.unciv.app&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.unciv.app/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://flathub.org/apps/details/io.github.yairm210.unciv&#34;&gt;&lt;img src=&#34;https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/docs/Credits.md&#34;&gt;Credits and 3rd parties&lt;/a&gt;&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>gedoor/legado</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/gedoor/legado</id>
    <link href="https://github.com/gedoor/legado" rel="alternate"></link>
    <summary type="html">&lt;p&gt;阅读3.0, 阅读是一款可以自定义来源阅读网络内容的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.legado.play.release&#34;&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/icon_android.png&#34; alt=&#34;icon_android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://data.newrank.cn/m/s.html?s=NykyOzI9MS5LNQ%3D%3D&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-微信关注“开源阅读”公众号-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;125&#34; height=&#34;125&#34; src=&#34;https://github.com/gedoor/legado/raw/master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png&#34; alt=&#34;legado&#34;&gt; &#xA; &lt;p&gt;Legado / 开源阅读 &lt;br&gt; &lt;a href=&#34;https://gedoor.github.io&#34; target=&#34;_blank&#34;&gt;gedoor.github.io&lt;/a&gt; / &lt;a href=&#34;https://www.legado.top/&#34; target=&#34;_blank&#34;&gt;legado.top&lt;/a&gt; &lt;br&gt; Legado is a free and open source novel reader for Android.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#contents&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Contents:-696969.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Function-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Function-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Download-%E4%B8%8B%E8%BD%BD-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Download-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Community-%E4%BA%A4%E6%B5%81%E7%A4%BE%E5%8C%BA-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Community-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#API-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-API-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Other-%E5%85%B6%E4%BB%96-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Other-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Grateful-%E6%84%9F%E8%B0%A2-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Grateful-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Interface-%E7%95%8C%E9%9D%A2-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Interface-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;新用户？&lt;/p&gt; &#xA; &lt;p&gt;软件不提供内容，需要您自己手动添加，例如导入书源等。 看看 &lt;a href=&#34;https://www.yuque.com/legado/wiki&#34;&gt;官方帮助文档&lt;/a&gt;，也许里面就有你要的答案。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Function-主要功能 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Function-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Function-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;English&lt;/summary&gt; 1. Online reading from a variety of sources.&#xA; &lt;br&gt; 2. Local reading of downloaded content.&#xA; &lt;br&gt; 3. A configurable reader with multiple viewers, reading directions and other settings. &#xA; &lt;br&gt; 4. Categories to organize your library.&#xA; &lt;br&gt; 5. Light and dark themes.&#xA; &lt;br&gt; 6. Schedule updating your library for new chapters.&#xA; &lt;br&gt; 7. read offline or to your desired cloud service &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;中文&lt;/summary&gt; 1.自定义书源，自己设置规则，抓取网页数据，规则简单易懂，软件内有规则说明。&#xA; &lt;br&gt; 2.列表书架，网格书架自由切换。&#xA; &lt;br&gt; 3.书源规则支持搜索及发现，所有找书看书功能全部自定义，找书更方便。&#xA; &lt;br&gt; 4.订阅内容,可以订阅想看的任何内容,看你想看&#xA; &lt;br&gt; 5.支持替换净化，去除广告替换内容很方便。&#xA; &lt;br&gt; 6.支持本地TXT、EPUB阅读，手动浏览，智能扫描。&#xA; &lt;br&gt; 7.支持高度自定义阅读界面，切换字体、颜色、背景、行距、段距、加粗、简繁转换等。&#xA; &lt;br&gt; 8.支持多种翻页模式，覆盖、仿真、滑动、滚动等。&#xA; &lt;br&gt; 9.软件开源，持续优化，无广告。 &#xA;&lt;/details&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Download-下载 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Download-%E4%B8%8B%E8%BD%BD-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Download-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h4&gt;Android-安卓&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gedoor/legado/releases/latest&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=io.legado.play.release&#34;&gt;Google play - $1.99&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coolapk.com/apk/io.legado.app.release&#34;&gt;Coolapk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cdn.jsdelivr.net/gh/gedoor/release@release/&#34;&gt;Jsdelivr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kunfei.lanzoui.com/b0f810h4b&#34;&gt;#Beta&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/io.legado.app.release&#34;&gt;IzzyOnDroid F-Droid Repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;IOS-苹果&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;准备中(No release) - &lt;a href=&#34;https://github.com/gedoor/YueDuFlutter&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Community-交流社区 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Community-%E4%BA%A4%E6%B5%81%E7%A4%BE%E5%8C%BA-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Community-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h4&gt;Telegram&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/yueduguanfang&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-%E7%BE%A4%E7%BB%84-blue&#34; alt=&#34;Telegram-group&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/legado_channels&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-%E9%A2%91%E9%81%93-blue&#34; alt=&#34;Telegram-channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Discord&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/VtUfRyzRXn&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/560731361414086666?color=%235865f2&amp;amp;label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Other&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/legado/wiki/community&#34;&gt;https://www.yuque.com/legado/wiki/community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;API &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#API-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-API-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;阅读3.0 提供了2种方式的API：&lt;code&gt;Web方式&lt;/code&gt;和&lt;code&gt;Content Provider方式&lt;/code&gt;。您可以在&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/api.md&#34;&gt;这里&lt;/a&gt;根据需要自行调用。&lt;/li&gt; &#xA; &lt;li&gt;可通过url唤起阅读进行一键导入,url格式: legado://import/{path}?src={url}&lt;/li&gt; &#xA; &lt;li&gt;path类型: bookSource,rssSource,replaceRule,textTocRule,httpTTS,theme,readConfig&lt;/li&gt; &#xA; &lt;li&gt;path类型解释: 书源,订阅源,替换规则,本地txt小说目录规则,在线朗读引擎,主题,阅读排版&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Other-其他 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Other-%E5%85%B6%E4%BB%96-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Other-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h5&gt;免责声明&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gedoor.github.io/about.html&#34;&gt;https://gedoor.github.io/about.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;阅读3.0&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://alanskycn.gitee.io/teachme&#34;&gt;书源规则&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/app/src/main/assets/updateLog.md&#34;&gt;更新日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/app/src/main/assets/help/appHelp.md&#34;&gt;帮助文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gedoor/legado_web_bookshelf&#34;&gt;web端&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Grateful-感谢 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Grateful-%E6%84%9F%E8%B0%A2-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Grateful-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;org.jsoup:jsoup&lt;/li&gt; &#xA;  &lt;li&gt;cn.wanghaomiao:JsoupXpath&lt;/li&gt; &#xA;  &lt;li&gt;com.jayway.jsonpath:json-path&lt;/li&gt; &#xA;  &lt;li&gt;com.github.gedoor:rhino-android&lt;/li&gt; &#xA;  &lt;li&gt;com.squareup.okhttp3:okhttp&lt;/li&gt; &#xA;  &lt;li&gt;com.github.bumptech.glide:glide&lt;/li&gt; &#xA;  &lt;li&gt;org.nanohttpd:nanohttpd&lt;/li&gt; &#xA;  &lt;li&gt;org.nanohttpd:nanohttpd-websocket&lt;/li&gt; &#xA;  &lt;li&gt;cn.bingoogolapple:bga-qrcode-zxing&lt;/li&gt; &#xA;  &lt;li&gt;com.jaredrummler:colorpicker&lt;/li&gt; &#xA;  &lt;li&gt;org.apache.commons:commons-text&lt;/li&gt; &#xA;  &lt;li&gt;io.noties.markwon:core&lt;/li&gt; &#xA;  &lt;li&gt;io.noties.markwon:image-glide&lt;/li&gt; &#xA;  &lt;li&gt;com.hankcs:hanlp&lt;/li&gt; &#xA;  &lt;li&gt;com.positiondev.epublib:epublib-core&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Interface-界面 &lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#Interface-%E7%95%8C%E9%9D%A2-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Interface-F5F5F5.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B1.jpg&#34; width=&#34;270&#34;&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B2.jpg&#34; width=&#34;270&#34;&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B3.jpg&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B4.jpg&#34; width=&#34;270&#34;&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B5.jpg&#34; width=&#34;270&#34;&gt;&lt;img src=&#34;https://github.com/gedoor/gedoor.github.io/raw/master/images/%E9%98%85%E8%AF%BB%E7%AE%80%E4%BB%8B6.jpg&#34; width=&#34;270&#34;&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/gedoor/legado/master/#readme&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-返回顶部-orange.svg&#34; alt=&#34;#&#34; align=&#34;right&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>android/compose-samples</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/compose-samples</id>
    <link href="https://github.com/android/compose-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Jetpack Compose samples.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jetpack Compose Samples&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/samples_montage.gif&#34; alt=&#34;Jetpack Compose Samples&#34; width=&#34;1024&#34;&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you learn about Compose in Android. Each sample demonstrates different use cases, complexity levels and APIs.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;read the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To try out these sample apps, you need to use &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;. You can clone this repository or import the project from Android Studio following the steps &lt;a href=&#34;https://developer.android.com/jetpack/compose/setup#sample&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Samples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetnews.png&#34; alt=&#34;JetNews&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt; A sample blog post viewer that demonstrates the use of Compose with a typical Material app and real-world architecture. &lt;br&gt;&lt;br&gt; • Medium complexity&lt;br&gt;• Varied UI&lt;br&gt;• Light &amp;amp; dark themes&lt;br&gt;• Resource loading&lt;br&gt;• UI Testing &lt;br&gt;&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/JetNews/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/JetNews.png&#34; width=&#34;320&#34; alt=&#34;Jetnews sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetchat.png&#34; alt=&#34;Jetchat&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample chat app that focuses on UI state patterns and text input.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• Material Design 3 theme and Material You dynamic color&lt;br&gt;• Resource loading&lt;br&gt;• Back button handling&lt;br&gt;• Integration with Architecture Components: Navigation, Fragments, LiveData, ViewModel&lt;br&gt;• Animation&lt;br&gt;• UI Testing&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetchat/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetchat.png&#34; width=&#34;320&#34; alt=&#34;Jetchat sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetsurvey.png&#34; alt=&#34;Jetsurvey&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample survey app that showcases text input, validation and UI state management in Compose.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• &lt;code&gt;TextField&lt;/code&gt; and form validation&lt;br&gt;• Snackbar implementation&lt;br&gt;• Element reusability and styling&lt;br&gt;• Various form elements&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetsurvey/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetsurvey.png&#34; width=&#34;320&#34; alt=&#34;Jetsurvey sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetsnack.png&#34; alt=&#34;Jetsnack&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;Jetsnack is a sample snack ordering app built with Compose.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Custom design system&lt;br&gt;• Custom layouts&lt;br&gt;• Animation&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetsnack/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetsnack.png&#34; width=&#34;320&#34; alt=&#34;Jetsnack sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetcaster.png&#34; alt=&#34;Jetcaster&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample podcast app that features a full-featured, Redux-style architecture and showcases dynamic themes.&lt;br&gt;&lt;br&gt;• Advanced sample&lt;br&gt;• Dynamic theming using podcast artwork&lt;br&gt;• Image fetching&lt;br&gt;• &lt;a href=&#34;https://developer.android.com/reference/kotlin/android/view/WindowInsets&#34;&gt;&lt;code&gt;WindowInsets&lt;/code&gt;&lt;/a&gt; support&lt;br&gt;• Coroutines&lt;br&gt;• Local storage with Room&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetcaster/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetcaster.png&#34; width=&#34;320&#34; alt=&#34;Jetcaster sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/rally.png&#34; alt=&#34;Rally&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Rally Material study, a financial app that focuses on data, charts, reusability and animations.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• Material theming with a dark-only theme&lt;br&gt;• Custom layouts and reusable elements&lt;br&gt;• Charts and tables&lt;br&gt;• Animations&lt;br&gt;• Screenshot tests&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Rally/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Rally.png&#34; width=&#34;320&#34; alt=&#34;Rally sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/crane.png&#34; alt=&#34;Crane&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Crane Material study, a travel app that uses Material Design components and Material Theming to create a personalized, on-brand experience.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Draggable UI elements&lt;br&gt;• UI state handling&lt;br&gt;• UI Tests&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Crane/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Crane.png&#34; width=&#34;320&#34; alt=&#34;Crane sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/owl.png&#34; alt=&#34;Owl&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Owl Material study. The Owl brand uses bold color, shape, and typography to express its brand attributes: energy, daring, and fun.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Material theming &amp;amp; light/dark themes&lt;br&gt;• Custom layout&lt;br&gt;• Animation&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Owl/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Owl.png&#34; width=&#34;320&#34; alt=&#34;Owl sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🧬 Additional samples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/material_catalog.png&#34; alt=&#34;Material Catalog&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A catalog of Material Design components and features available in Jetpack Compose. See how to implement them and how they look and behave on real devices.&lt;br&gt;&lt;br&gt;• Lives in AOSP—always up to date&lt;br&gt;• Uses the same samples as API reference docs&lt;br&gt;• Theme picker to change Material Theming values at runtime&lt;br&gt;• Links to guidelines, docs, source code, and issue tracker&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=androidx.compose.material.catalog&#34;&gt;&amp;gt; Get it on Google Play&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:compose/integration-tests/material-catalog&#34;&gt;&amp;gt; Browse on AOSP&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Material_Catalog.png&#34; width=&#34;320&#34; alt=&#34;Material Catalog sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/sunflower.png&#34; alt=&#34;Sunflower&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A gardening app illustrating Android development best practices with Android Jetpack. The &lt;code&gt;compose&lt;/code&gt; branch is partially built with Jetpack Compose.&lt;br&gt;&lt;br&gt;• Compose working in an existing app: including integration with strings, resources, and themes and styles&lt;br&gt;• Integration with an existing architecture based on Jetpack libraries&lt;br&gt;• &lt;code&gt;CollapsingToolbarLayout&lt;/code&gt; behavior implemented manually with Compose&lt;br&gt;• Showing &lt;a href=&#34;https://material.io/components/snackbars&#34;&gt;Snackbars&lt;/a&gt; with Compose&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://goo.gle/sunflower-compose&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Sunflower.png&#34; width=&#34;320&#34; alt=&#34;Sunflower sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/tivi.png&#34; alt=&#34;Tivi&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A work-in-progress TV show tracking Android app, which connects to &lt;a href=&#34;https://www.trakt.tv&#34;&gt;Trakt.tv&lt;/a&gt;.&lt;br&gt;&lt;br&gt;• Entirely written in &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; and uses &lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html&#34;&gt;Kotlin Coroutines&lt;/a&gt; throughout&lt;br&gt;• Uses many of the &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture&#34;&gt;Architecture Components&lt;/a&gt;: Room, Lifecycle, Navigation&lt;br&gt;• Uses &lt;a href=&#34;https://dagger.dev/hilt&#34;&gt;Hilt&lt;/a&gt; for dependency injection&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://tivi.app&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Tivi.jpg&#34; width=&#34;320&#34; alt=&#34;Tivi sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/nia.png&#34; alt=&#34;Now in Android&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;An app for keeping up to date with the latest news and developments in Android.&lt;br&gt;&lt;br&gt;• &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; first app.&lt;br&gt;• Implements the recommended Android &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Architecture Guidelines&lt;/a&gt; &lt;br&gt;• Integrates &lt;a href=&#34;https://developer.android.com/jetpack&#34;&gt;Jetpack Libraries&lt;/a&gt; holistically in the context of a real world app&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/android/nowinandroid&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/NiA.png&#34; width=&#34;320&#34; alt=&#34;Now In Android Github Repository&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>LagradOst/CloudStream-3</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/LagradOst/CloudStream-3</id>
    <link href="https://github.com/LagradOst/CloudStream-3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android app for streaming and downloading Movies, TV-Series and Anime.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CloudStream-3&lt;/h1&gt; &#xA;&lt;!-- ![Maintenance](https://img.shields.io/maintenance/yes/2022?color=blue&amp;style=for-the-badge) --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/LagradOst/cloudstream-3?sort=semver&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/lagradost/CloudStream-3/total?color=blue&amp;amp;style=for-the-badge&#34; alt=&#34;Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/lagradost/CloudStream-3/Pre-release?style=for-the-badge&#34; alt=&#34;Build&#34;&gt; &lt;a href=&#34;https://discord.gg/5Hus6fM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/737724143126052974?style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DOWNLOAD:&lt;/strong&gt; &lt;a href=&#34;https://github.com/LagradOst/CloudStream-3/releases&#34;&gt;https://github.com/LagradOst/CloudStream-3/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AdFree&lt;/strong&gt;, No ads whatsoever&lt;/li&gt; &#xA; &lt;li&gt;No tracking/analytics&lt;/li&gt; &#xA; &lt;li&gt;Bookmarks&lt;/li&gt; &#xA; &lt;li&gt;Download and stream movies, tv-shows and anime&lt;/li&gt; &#xA; &lt;li&gt;Chromecast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Screenshots:&lt;/strong&gt;&lt;/em&gt; (All the images are blurred because of DMCA reasons, but are actually not blurred in the app)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LagradOst/CloudStream-3/master/.github/home.jpg&#34; height=&#34;400&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LagradOst/CloudStream-3/master/.github/search.jpg&#34; height=&#34;400&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LagradOst/CloudStream-3/master/.github/downloads.jpg&#34; height=&#34;400&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LagradOst/CloudStream-3/master/.github/results.jpg&#34; height=&#34;400&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/LagradOst/CloudStream-3/master/.github/player.jpg&#34; height=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;The list of supported languages:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🇱🇧 Arabic&lt;/li&gt; &#xA; &lt;li&gt;🇳🇱 Dutch&lt;/li&gt; &#xA; &lt;li&gt;🇬🇧 English&lt;/li&gt; &#xA; &lt;li&gt;🇫🇷 French&lt;/li&gt; &#xA; &lt;li&gt;🇩🇪 German&lt;/li&gt; &#xA; &lt;li&gt;🇬🇷 Greek&lt;/li&gt; &#xA; &lt;li&gt;🇮🇳 Hindi&lt;/li&gt; &#xA; &lt;li&gt;🇮🇩 Indonesian&lt;/li&gt; &#xA; &lt;li&gt;🇮🇹 Italian&lt;/li&gt; &#xA; &lt;li&gt;🇲🇰 Macedonian&lt;/li&gt; &#xA; &lt;li&gt;🇮🇳 Malayalam&lt;/li&gt; &#xA; &lt;li&gt;🇳🇴 Norsk&lt;/li&gt; &#xA; &lt;li&gt;🇵🇱 Polish&lt;/li&gt; &#xA; &lt;li&gt;🇧🇷 Portuguese (Brazil)&lt;/li&gt; &#xA; &lt;li&gt;🇷🇴 Romanian&lt;/li&gt; &#xA; &lt;li&gt;🇪🇸 Spanish&lt;/li&gt; &#xA; &lt;li&gt;🇸🇪 Swedish&lt;/li&gt; &#xA; &lt;li&gt;🇵🇭 Tagalog&lt;/li&gt; &#xA; &lt;li&gt;🇹🇷 Turkish&lt;/li&gt; &#xA; &lt;li&gt;🇻🇳 Vietnamese&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any legal issues regarding the content on this application should be taken up with the actual file hosts and providers themselves as we are not affiliated with them.&lt;/p&gt; &#xA;&lt;p&gt;In case of copyright infringement, please directly contact the responsible parties or the streaming websites.&lt;/p&gt; &#xA;&lt;p&gt;The app is purely for educational and personal use.&lt;/p&gt; &#xA;&lt;p&gt;CloudStream 3 does not host any content on the app, and has no control over what media is put up or taken down. CloudStream 3 functions like any other search engine, such as Google. CloudStream 3 does not host, upload or manage any videos, films or content. It simply crawls, aggregates and displayes links in a convenient, user-friendly interface.&lt;/p&gt; &#xA;&lt;p&gt;It merely scrapes 3rd-party websites that are publicly accessable via any regular web browser. It is the responsibility of user to avoid any actions that might violate the laws governing his/her locality. Use CloudStream 3 at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Sites used:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Look &lt;a href=&#34;https://lagradost.github.io/CloudStream-3/&#34;&gt;here&lt;/a&gt; for a comprehensive list&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tytydraco/LADB</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/tytydraco/LADB</id>
    <link href="https://github.com/tytydraco/LADB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local ADB shell for Android!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LADB&lt;/h1&gt; &#xA;&lt;p&gt;A local ADB shell for Android!&lt;/p&gt; &#xA;&lt;h1&gt;How does it work?&lt;/h1&gt; &#xA;&lt;p&gt;LADB bundles an ADB server within the app libraries. Normally, this server cannot connect to the local device because it requires an active USB connection. However, Android&#39;s Wireless ADB Debugging feature allows the server and the client to speak to each other locally.&lt;/p&gt; &#xA;&lt;h1&gt;Initial Setup:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;About -&amp;gt; Build Number -&amp;gt; Click 7 times&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Troubleshooting:&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter &#34;device unauthorized&#34; or &#34;multiple devices connected&#34;, try this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable Airplane Mode&lt;/li&gt; &#xA; &lt;li&gt;Disconnect any USB devices&lt;/li&gt; &#xA; &lt;li&gt;Kill and restart LADB&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Still not working? Try this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Close LADB completely&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; Off&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; Off&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Revoke authorizations&lt;/li&gt; &#xA; &lt;li&gt;Reboot&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Enable Airplane Mode&lt;/li&gt; &#xA; &lt;li&gt;Open LADB&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Credit&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to Surge1223 for compiling ADB for the ARM/ARM64 architecture.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;While this project is GPLv3 licensed, I would like to add an additional parameter: please do not publish unofficial (user) LADB builds to the Google Play Store.&lt;/p&gt; &#xA;&lt;p&gt;Still confused? Email me at &lt;a href=&#34;mailto:tylernij@gmail.com&#34;&gt;tylernij@gmail.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coil-kt/coil</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/coil-kt/coil</id>
    <link href="https://github.com/coil-kt/coil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Image loading for Android backed by Kotlin Coroutines.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/logo.svg?sanitize=true&#34; alt=&#34;Coil&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An image loading library for Android backed by Kotlin Coroutines. Coil is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Coil performs a number of optimizations including memory and disk caching, downsampling the image in memory, automatically pausing/cancelling requests, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Coil adds ~2000 methods to your APK (for apps that already use OkHttp and Coroutines), which is comparable to Picasso and significantly less than Glide and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: Coil&#39;s API leverages Kotlin&#39;s language features for simplicity and minimal boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern&lt;/strong&gt;: Coil is Kotlin-first and uses modern libraries including Coroutines, OkHttp, Okio, and AndroidX Lifecycles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Coil is an acronym for: &lt;strong&gt;Co&lt;/strong&gt;routine &lt;strong&gt;I&lt;/strong&gt;mage &lt;strong&gt;L&lt;/strong&gt;oader.&lt;/p&gt; &#xA;&lt;p&gt;Made with ❤️ at &lt;a href=&#34;https://www.instacart.com&#34;&gt;Instacart&lt;/a&gt;. Translations: &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-ko.md&#34;&gt;한국어&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-zh.md&#34;&gt;中文&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-tr.md&#34;&gt;Türkçe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Coil is available on &lt;code&gt;mavenCentral()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil:2.1.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h4&gt;ImageViews&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into an &lt;code&gt;ImageView&lt;/code&gt;, use the &lt;code&gt;load&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// URL&#xA;imageView.load(&#34;https://www.example.com/image.jpg&#34;)&#xA;&#xA;// File&#xA;imageView.load(File(&#34;/path/to/image.jpg&#34;))&#xA;&#xA;// And more...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests can be configured with an optional trailing lambda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;imageView.load(&#34;https://www.example.com/image.jpg&#34;) {&#xA;    crossfade(true)&#xA;    placeholder(R.drawable.image)&#xA;    transformations(CircleCropTransformation())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Jetpack Compose&lt;/h4&gt; &#xA;&lt;p&gt;Import the &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; extension library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil-compose:2.1.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image, use the &lt;code&gt;AsyncImage&lt;/code&gt; composable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;AsyncImage(&#xA;    model = &#34;https://example.com/image.jpg&#34;,&#xA;    contentDescription = null&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Image Loaders&lt;/h4&gt; &#xA;&lt;p&gt;Both &lt;code&gt;imageView.load&lt;/code&gt; and &lt;code&gt;AsyncImage&lt;/code&gt; use the singleton &lt;code&gt;ImageLoader&lt;/code&gt; to execute image requests. The singleton &lt;code&gt;ImageLoader&lt;/code&gt; can be accessed using a &lt;code&gt;Context&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = context.imageLoader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ImageLoader&lt;/code&gt;s are designed to be shareable and are most efficient when you create a single instance and share it throughout your app. That said, you can also create your own &lt;code&gt;ImageLoader&lt;/code&gt; instance(s):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = ImageLoader(context)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not want the singleton &lt;code&gt;ImageLoader&lt;/code&gt;, depend on &lt;code&gt;io.coil-kt:coil-base&lt;/code&gt; instead of &lt;code&gt;io.coil-kt:coil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requests&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into a custom target, &lt;code&gt;enqueue&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://www.example.com/image.jpg&#34;)&#xA;    .target { drawable -&amp;gt;&#xA;        // Handle the result.&#xA;    }&#xA;    .build()&#xA;val disposable = imageLoader.enqueue(request)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image imperatively, &lt;code&gt;execute&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://www.example.com/image.jpg&#34;)&#xA;    .build()&#xA;val drawable = imageLoader.execute(request).drawable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out Coil&#39;s &lt;a href=&#34;https://coil-kt.github.io/coil/getting_started/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Min SDK 21+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coil-kt.github.io/coil/faq/#how-do-i-target-java-8&#34;&gt;Java 8+&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;R8 / Proguard&lt;/h2&gt; &#xA;&lt;p&gt;Coil is fully compatible with R8 out of the box and doesn&#39;t require adding any extra rules.&lt;/p&gt; &#xA;&lt;p&gt;If you use Proguard, you may need to add rules for &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines/raw/master/kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro&#34;&gt;Coroutines&lt;/a&gt;, &lt;a href=&#34;https://github.com/square/okhttp/raw/master/okhttp/src/jvmMain/resources/META-INF/proguard/okhttp3.pro&#34;&gt;OkHttp&lt;/a&gt; and &lt;a href=&#34;https://github.com/square/okio/raw/master/okio/src/jvmMain/resources/META-INF/proguard/okio.pro&#34;&gt;Okio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Coil Contributors&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ethereum-lists/chains</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/ethereum-lists/chains</id>
    <link href="https://github.com/ethereum-lists/chains" rel="alternate"></link>
    <summary type="html">&lt;p&gt;provides metadata for networkIDs and chainIDs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EVM-based Chains&lt;/h1&gt; &#xA;&lt;p&gt;The source data is in _data/chains. Each chain has its own file with the filename being the &lt;a href=&#34;https://github.com/ChainAgnostic/CAIPs/raw/master/CAIPs/caip-2.md&#34;&gt;CAIP-2&lt;/a&gt; representation as name and &lt;code&gt;.json&lt;/code&gt; ans extension.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;Ethereum Mainnet&#34;,&#xA;  &#34;chain&#34;: &#34;ETH&#34;,&#xA;  &#34;network&#34;: &#34;mainnet&#34;,&#xA;  &#34;rpc&#34;: [&#xA;    &#34;https://mainnet.infura.io/v3/${INFURA_API_KEY}&#34;,&#xA;    &#34;https://api.mycryptoapi.com/eth&#34;&#xA;  ],&#xA;  &#34;faucets&#34;: [],&#xA;  &#34;nativeCurrency&#34;: {&#xA;    &#34;name&#34;: &#34;Ether&#34;,&#xA;    &#34;symbol&#34;: &#34;ETH&#34;,&#xA;    &#34;decimals&#34;: 18&#xA;  },&#xA;  &#34;infoURL&#34;: &#34;https://ethereum.org&#34;,&#xA;  &#34;shortName&#34;: &#34;eth&#34;,&#xA;  &#34;chainId&#34;: 1,&#xA;  &#34;networkId&#34;: 1,&#xA;  &#34;icon&#34;: &#34;ethereum&#34;,&#xA;  &#34;explorers&#34;: [{&#xA;    &#34;name&#34;: &#34;etherscan&#34;,&#xA;    &#34;url&#34;: &#34;https://etherscan.io&#34;,&#xA;    &#34;icon&#34;: &#34;etherscan&#34;,&#xA;    &#34;standard&#34;: &#34;EIP3091&#34;&#xA;  }]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;when an icon is used in either the network or a explorer there must be a json in _data/icons with the name used (e.g. in the above example there must be a &lt;code&gt;ethereum.json&lt;/code&gt; and a &lt;code&gt;etherscan.json&lt;/code&gt; in there) - the icon jsons look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#xA;[&#xA;    {&#xA;      &#34;url&#34;: &#34;ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt&#34;,&#xA;      &#34;width&#34;: 1000,&#xA;      &#34;height&#34;: 1628,&#xA;      &#34;format&#34;: &#34;png&#34;&#xA;    }&#xA;]&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the URL must be a IPFS url that is publicly resolveable&lt;/li&gt; &#xA; &lt;li&gt;width and height are optional - but when one is there then the other must be there also&lt;/li&gt; &#xA; &lt;li&gt;format is either &#34;png&#34;, &#34;jpg&#34; or &#34;svg&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the chain is an L2 or a shard of another chain you can link it to the parent chain like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  ...&#xA;  &#34;parent&#34;: {&#xA;   &#34;type&#34; : &#34;L2&#34;,&#xA;   &#34;chain&#34;: &#34;eip155-1&#34;,&#xA;   &#34;bridges&#34;: [ {&#34;url&#34;:&#34;https://bridge.arbitrum.io&#34;} ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where you need to specify type 2 and the reference to an existing parent. The field about bridges is optional.&lt;/p&gt; &#xA;&lt;p&gt;You can add a &lt;code&gt;status&lt;/code&gt; field e.g. to &lt;code&gt;deprecate&lt;/code&gt; a chain (a chain should never be deleted as this would open the door to replay attacks) Other options for &lt;code&gt;status&lt;/code&gt; are &lt;code&gt;active&lt;/code&gt; (default) or &lt;code&gt;incubating&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Aggregation&lt;/h2&gt; &#xA;&lt;p&gt;There are also aggregated json files with all chains automatically assembled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainid.network/chains.json&#34;&gt;https://chainid.network/chains.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainid.network/chains_mini.json&#34;&gt;https://chainid.network/chains_mini.json&lt;/a&gt; (miniaturized - fewer fields for smaller filesize)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Collision management&lt;/h2&gt; &#xA;&lt;p&gt;If different chains have the same chainID we list the one with the oldest genesis.&lt;/p&gt; &#xA;&lt;h2&gt;Usages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainlist.org&#34;&gt;chainlist.org&lt;/a&gt; or &lt;a href=&#34;https://networklist-org.vercel.app&#34;&gt;networklist-org.vercel.app&lt;/a&gt; as a staging version with a more up-to-date list&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainid.network&#34;&gt;chainid.network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://walleth.org&#34;&gt;WallETH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trezor.io&#34;&gt;TREZOR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://networks.vercel.app&#34;&gt;networks.vercel.app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taylorjdawson/eth-chains&#34;&gt;eth-chains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/izayl/evm-box&#34;&gt;EVM-BOX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/komputing/FaucETH&#34;&gt;FaucETH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playground.sourcify.dev&#34;&gt;Sourcify playground&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chaindirectory.xyz&#34;&gt;chaindirectory.xyz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chain-list.org&#34;&gt;chain-list.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainlist.defillama.com/&#34;&gt;DefiLlama&#39;s chainlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainlist.network/&#34;&gt;chainlist.network&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evmchainlist.org&#34;&gt;evmchainlist.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://evmchainlist.com&#34;&gt;evmchainlist.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thechainlist.io&#34;&gt;thechainlist.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainlist.info&#34;&gt;chainlist.info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainmap.io&#34;&gt;chainmap.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chainlist.in&#34;&gt;chainlist.in&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chainz.me&#34;&gt;chainz.me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://otterscan.io&#34;&gt;Otterscan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Your project - contact us to add it here!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>android/architecture-samples</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/architecture-samples</id>
    <link href="https://github.com/android/architecture-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Architecture Blueprints&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png&#34; alt=&#34;Illustration by Virginia Poltrack&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Android Architecture Blueprints is a project to showcase different architectural approaches to developing Android apps. In its different branches you&#39;ll find the same app (a TODO app) implemented with small differences.&lt;/p&gt; &#xA;&lt;p&gt;In this branch you&#39;ll find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Interface built with &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A single-activity architecture, using &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose/navigation&#34;&gt;Navigation Compose&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A presentation layer that contains a Compose screen (View) and a &lt;strong&gt;ViewModel&lt;/strong&gt; per screen (or feature).&lt;/li&gt; &#xA; &lt;li&gt;Reactive UIs using &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata&#34;&gt;LiveData&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://kotlinlang.org/docs/coroutines-overview.html&#34;&gt;coroutines&lt;/a&gt;&lt;/strong&gt; for asynchronous operations.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;data layer&lt;/strong&gt; with a repository and two data sources (local using Room and a fake remote).&lt;/li&gt; &#xA; &lt;li&gt;Two &lt;strong&gt;product flavors&lt;/strong&gt;, &lt;code&gt;mock&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;, &lt;a href=&#34;https://android-developers.googleblog.com/2015/12/leveraging-product-flavors-in-android.html&#34;&gt;to ease development and testing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A collection of unit, integration and e2e &lt;strong&gt;tests&lt;/strong&gt;, including &#34;shared&#34; tests that can be run on emulator/device or Robolectric.&lt;/li&gt; &#xA; &lt;li&gt;A simple service locator for inversion of control.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Variations&lt;/h2&gt; &#xA;&lt;p&gt;This project hosts each sample app in separate repository branches. For more information, see the &lt;code&gt;README.md&lt;/code&gt; file in each branch.&lt;/p&gt; &#xA;&lt;h3&gt;Stable samples - Kotlin&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/main&#34;&gt;main&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This branch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/hilt&#34;&gt;hilt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple Hilt setup that removes the two flavors and service locator (not using Compose yet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/usecases&#34;&gt;usecases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds a new domain layer that uses UseCases for business logic (not using Compose yet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/views&#34;&gt;views&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses Views instead of Jetpack Compose to render UI elements on the screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Why a to-do app?&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif&#34; alt=&#34;A demo illustraating the UI of the app&#34; width=&#34;288&#34; height=&#34;512&#34; style=&#34;display: inline; float: right&#34;&gt; &#xA;&lt;p&gt;The app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the &lt;a href=&#34;https://github.com/googlesamples/android-architecture/wiki/To-do-app-specification&#34;&gt;app&#39;s specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is it not?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A UI/Material Design sample. The interface of the app is deliberately kept simple to focus on architecture. Check out the &lt;a href=&#34;https://github.com/android/compose-samples&#34;&gt;Compose Samples&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;A complete Jetpack sample covering all libraries. Check out &lt;a href=&#34;https://github.com/googlesamples/android-sunflower&#34;&gt;Android Sunflower&lt;/a&gt; or the advanced &lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/GithubBrowserSample&#34;&gt;GitHub Browser Sample&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;A real production app with network access, user authentication, etc. Check out the &lt;a href=&#34;https://github.com/android/nowinandroid&#34;&gt;Now in Android app&lt;/a&gt; instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is it for?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intermediate developers and beginners looking for a way to structure their app in a testable and maintainable way.&lt;/li&gt; &#xA; &lt;li&gt;Advanced developers looking for quick reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Opening a sample in Android Studio&lt;/h2&gt; &#xA;&lt;p&gt;To open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the root directory in Android Studio. The following series of steps illustrate how to open the &lt;a href=&#34;https://raw.githubusercontent.com/android/architecture-samples/main/tree/usecases/&#34;&gt;usecases&lt;/a&gt; sample.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:android/architecture-samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This step checks out the master branch. If you want to change to a different sample:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout usecases&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To review a different sample, replace &lt;code&gt;usecases&lt;/code&gt; with the name of sample you want to check out.&lt;/p&gt; &#xA;&lt;p&gt;Finally open the &lt;code&gt;architecture-samples/&lt;/code&gt; directory in Android Studio.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Google, Inc.&#xA;&#xA;Licensed to the Apache Software Foundation (ASF) under one or more contributor&#xA;license agreements. See the NOTICE file distributed with this work for&#xA;additional information regarding copyright ownership. The ASF licenses this&#xA;file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not&#xA;use this file except in compliance with the License. You may obtain a copy of&#xA;the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT&#xA;WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the&#xA;License for the specific language governing permissions and limitations under&#xA;the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>googlecodelabs/android-compose-codelabs</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/googlecodelabs/android-compose-codelabs</id>
    <link href="https://github.com/googlecodelabs/android-compose-codelabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jetpack Compose Codelabs&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of Android Studio projects to help you learn about Compose in Android. Each sample contains the code for a specific Compose codelab.&lt;/p&gt; &#xA;&lt;p&gt;For more information about Jetpack Compose, please &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;read the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio Chipmunk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Codelabs&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-basics&#34;&gt;Basics codelabs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Go hands-on and learn the fundamentals of declarative UI, working with state, layouts and theming.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-layouts&#34;&gt;Layouts codelabs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how layout works in Jetpack Compose, how to use the built-in layouts, &lt;a href=&#34;https://developer.android.com/reference/kotlin/androidx/compose/ui/Modifier&#34;&gt;modifiers&lt;/a&gt;, and even building your own custom layout.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-state&#34;&gt;State codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Understand patterns for working with state in a declarative world by building a Todo application.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-theming&#34;&gt;Theming codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Go hands on with Compose’s implementation of Material Design to understand how to theme an application’s colors, typography and shapes and support light and dark themes.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-migration&#34;&gt;Migration codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Understand how Jetpack Compose and View-based UIs can co-exist and interact, making it easy to adopt Compose at your own pace.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-animation&#34;&gt;Animation codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to use Jetpack Compose Animation APIs.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-navigation&#34;&gt;Navigation codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to use the Jetpack Navigation library in Compose, navigate within your application, navigate with arguments, support deep-links, and test your navigation.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-testing&#34;&gt;Testing codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn about testing Jetpack Compose UIs. Write your first tests, and learn about testing in isolation, debugging tests, the semantics tree, and test synchronization.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-accessibility&#34;&gt;Accessibility codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn about the various ways to improve an app’s accessibility. Increase touch target sizes, add content descriptions, create custom actions, and more.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2021 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>android/wear-os-samples</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/wear-os-samples</id>
    <link href="https://github.com/android/wear-os-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple samples showing best practices in app and watch face development on Wear OS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wear OS Samples Repository&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you get started writing Wear OS apps and watch faces.&lt;/p&gt; &#xA;&lt;p&gt;Read below for a description of each sample.&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/AlwaysOnKotlin&#34;&gt;AlwaysOnKotlin&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates keeping the app visible in ambient mode. Note: While this is valuable for some specific use cases, most use cases won&#39;t need this, because when the watch goes into ambient mode (and shows watch face), if the user interacts with the watch again within several minutes, it will bring the app back up when it transitions out of ambient mode. &lt;a href=&#34;https://developer.android.com/training/wearables/apps/always-on&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/ComposeStarter&#34;&gt;ComposeStarter&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates simple Compose for Wear OS app devs can use as a starting point for their own Compose app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/ComposeAdvanced&#34;&gt;ComposeAdvanced&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates an advanced Compose for Wear OS app devs can use to learn about the Wear Scaffold, Navigation, ScalingLazyColumn, CurvedText, and more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/DataLayer&#34;&gt;DataLayer&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates communicating via the data layer between the watch and the phone. &lt;a href=&#34;https://developer.android.com/training/wearables/data-layer&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/RuntimePermissionsWear&#34;&gt;RuntimePermissionsWear&lt;/a&gt;&lt;/strong&gt; (Kotlin) - Demonstrates requesting permissions not only on a Wear OS device and a mobile device, but also across devices, e.g., request permissions on a mobile device from your wear device and the other way around. Note: It does require you having both the Wear and Mobile version of the app installed on both devices. &lt;a href=&#34;https://developer.android.com/training/articles/wear-permissions&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WatchFaceKotlin&#34;&gt;WatchFaceKotlin&lt;/a&gt;&lt;/strong&gt; (Kotlin) - Demos the new AndroidX Watch Face APIs which provide their own storage mechanism for watch face preference values.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearAccessibilityApp&#34;&gt;WearAccessibilityApp&lt;/a&gt;&lt;/strong&gt; (Java) - Sample demonstrates how to include accessibility support for your wearable app. &lt;a href=&#34;https://developer.android.com/guide/topics/ui/accessibility&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearComplicationDataSourcesTestSuite&#34;&gt;WearComplicationDataSourcesTestSuite&lt;/a&gt;&lt;/strong&gt; (Kotlin) - If you are writing a watch face with complications, this app gives you a full suite of data sources to test against your implementation of complications to make sure it looks good. &lt;a href=&#34;https://developer.android.com/training/wearables/watch-faces/adding-complications&#34;&gt;Complication Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearOAuth&#34;&gt;WearOAuth&lt;/a&gt;&lt;/strong&gt; (Kotlin) - Demonstrates how developers can authenticate a user on their Wear OS app via the user&#39;s mobile/phone device without requiring a mobile app (Wear OS companion app handles the request on the mobile side). The sample uses OAuth. &lt;a href=&#34;https://developer.android.com/training/wearables/apps/auth-wear&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearSpeakerSample&#34;&gt;WearSpeakerSample&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates audio recording and playback if the wearable device has a speaker. This is also an advanced Compose sample, handling permissions, use of &lt;a href=&#34;https://developer.android.com/jetpack/compose/side-effects&#34;&gt;effects&lt;/a&gt;, animations and &lt;a href=&#34;https://developer.android.com/jetpack/compose/layouts/constraintlayout&#34;&gt;ConstraintLayout for Compose&lt;/a&gt;. &lt;a href=&#34;https://developer.android.com/training/wearables/wearable-sounds&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearStandaloneGoogleSignIn&#34;&gt;WearStandaloneGoogleSignIn&lt;/a&gt;&lt;/strong&gt; (Compose/Kotlin) - Demonstrates using Google sign-in to authenticate user. &lt;a href=&#34;https://developer.android.com/training/wearables/apps/auth-wear&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearTilesKotlin&#34;&gt;WearTilesKotlin&lt;/a&gt;&lt;/strong&gt; (Kotlin) - Demonstrates tiles using the new AndroidX library. &lt;a href=&#34;https://developer.android.com/training/articles/wear-tiles&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/wear-os-samples/main/WearVerifyRemoteApp&#34;&gt;WearVerifyRemoteApp&lt;/a&gt;&lt;/strong&gt; (Kotlin) - Verify and open your app on another device, and if it isn&#39;t installed, open the store listing to allow the user to install it (wear or mobile). &lt;a href=&#34;https://developer.android.com/training/wearables/data-layer/messages#SendMessage&#34;&gt;Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>2dust/v2rayNG</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/2dust/v2rayNG</id>
    <link href="https://github.com/2dust/v2rayNG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A V2Ray client for Android, support Xray core and v2fly core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayNG&lt;/h1&gt; &#xA;&lt;p&gt;A V2Ray client for Android, support &lt;a href=&#34;https://github.com/XTLS/Xray-core&#34;&gt;Xray core&lt;/a&gt; and &lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2fly core&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/about/versions/lollipop&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-21%2B-yellow.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Kotlin-1.6.10-blue.svg?sanitize=true&#34; alt=&#34;Kotlin Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/2dust/v2rayNG/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/2dust/v2rayNG&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/2dust/v2rayng&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/2dust/v2rayng/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/2dust/v2rayNG/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/2dust/v2rayNG/latest/total?logo=github&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/v2rayn&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&#34; alt=&#34;Chat on Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.v2ray.ang&#34;&gt; &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; width=&#34;165&#34; height=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;Geoip and Geosite&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;geoip.dat and geosite.dat files are in &lt;code&gt;Android/data/com.v2ray.ang/files/assets&lt;/code&gt; (path may differ on some Android device)&lt;/li&gt; &#xA; &lt;li&gt;download feature will get enhanced version in this &lt;a href=&#34;https://github.com/Loyalsoldier/v2ray-rules-dat&#34;&gt;repo&lt;/a&gt; (Note it need a working proxy)&lt;/li&gt; &#xA; &lt;li&gt;latest official &lt;a href=&#34;https://github.com/v2fly/domain-list-community&#34;&gt;domain list&lt;/a&gt; and &lt;a href=&#34;https://github.com/v2fly/geoip&#34;&gt;ip list&lt;/a&gt; can be imported manually&lt;/li&gt; &#xA; &lt;li&gt;possible to use third party dat file in the same folder, like &lt;a href=&#34;https://guide.v2fly.org/routing/sitedata.html#%E5%A4%96%E7%BD%AE%E7%9A%84%E5%9F%9F%E5%90%8D%E6%96%87%E4%BB%B6&#34;&gt;h2y&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More in our &lt;a href=&#34;https://github.com/2dust/v2rayNG/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Development guide&lt;/h3&gt; &#xA;&lt;p&gt;Android project under V2rayNG folder can be compiled directly in Android Studio, or using Gradle wrapper. But the v2ray core inside the aar is (probably) outdated.&lt;br&gt; The aar can be compiled from the Golang project under AndroidLibV2rayLite folder. For a quick start, read guide for &lt;a href=&#34;https://github.com/golang/go/wiki/Mobile&#34;&gt;Go Mobile&lt;/a&gt; and &lt;a href=&#34;https://tutorialedge.net/golang/makefiles-for-go-developers/&#34;&gt;Makefiles for Go Developers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;v2rayNG can run on Android Emulators. For WSA, VPN permission need to be granted via &lt;code&gt;appops set [package name] ACTIVATE_VPN allow&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/sunflower</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/sunflower</id>
    <link href="https://github.com/android/sunflower" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A gardening app illustrating Android development best practices with Android Jetpack.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Sunflower&lt;/h1&gt; &#xA;&lt;p&gt;A gardening app illustrating Android development best practices with Android Jetpack.&lt;/p&gt; &#xA;&lt;p&gt;Android Sunflower is currently under heavy development. Note that some changes (such as database schema modifications) are not backwards compatible and may cause the app to crash. In this case, please uninstall and re-install the app.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Android Jetpack is a set of components, tools and guidance to make great Android apps. They bring together the existing Support Library and Architecture Components and arrange them into four categories:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/sunflower/main/screenshots/jetpack_donut.png&#34; alt=&#34;Android Jetpack&#34; title=&#34;Android Jetpack Components&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Android Sunflower demonstrates utilizing these components to create a simple gardening app. Read the &lt;a href=&#34;https://medium.com/androiddevelopers/introducing-android-sunflower-e421b43fe0c2&#34;&gt;Introducing Android Sunflower&lt;/a&gt; article for a walkthrough of the app.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the Gradle build system. To build this project, use the &lt;code&gt;gradlew build&lt;/code&gt; command or use &#34;Import Project&#34; in Android Studio.&lt;/p&gt; &#xA;&lt;p&gt;There are two Gradle tasks for testing the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;connectedAndroidTest&lt;/code&gt; - for running Espresso on a connected device&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt; - for running unit tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more resources on learning Android development, visit the &lt;a href=&#34;https://developer.android.com/guide/&#34;&gt;Developer Guides&lt;/a&gt; at &lt;a href=&#34;https://developer.android.com&#34;&gt;developer.android.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unsplash API key&lt;/h3&gt; &#xA;&lt;p&gt;Sunflower uses the &lt;a href=&#34;https://unsplash.com/developers&#34;&gt;Unsplash API&lt;/a&gt; to load pictures on the gallery screen. To use the API, you will need to obtain a free developer API key. See the &lt;a href=&#34;https://unsplash.com/documentation&#34;&gt;Unsplash API Documentation&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;p&gt;Once you have the key, add this line to the &lt;code&gt;gradle.properties&lt;/code&gt; file, either in your user home directory (usually &lt;code&gt;~/.gradle/gradle.properties&lt;/code&gt; on Linux and Mac) or in the project&#39;s root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;unsplash_access_key=&amp;lt;your Unsplash access key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app is still usable without an API key, though you won&#39;t be able to navigate to the gallery screen.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/sunflower/main/screenshots/phone_plant_list.png&#34; alt=&#34;List of plants&#34; title=&#34;A list of plants&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/sunflower/main/screenshots/phone_plant_detail.png&#34; alt=&#34;Plant details&#34; title=&#34;Details for a specific plant&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/sunflower/main/screenshots/phone_my_garden.png&#34; alt=&#34;My Garden&#34; title=&#34;Plants that have been added to your garden&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Libraries Used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/components&#34;&gt;Foundation&lt;/a&gt; - Components for core system capabilities, Kotlin extensions and support for multidex and automated testing. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/support-library/packages#v7-appcompat&#34;&gt;AppCompat&lt;/a&gt; - Degrade gracefully on older versions of Android.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/kotlin/ktx&#34;&gt;Android KTX&lt;/a&gt; - Write more concise, idiomatic Kotlin code.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/training/testing/&#34;&gt;Test&lt;/a&gt; - An Android testing framework for unit and runtime UI tests.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/arch/&#34;&gt;Architecture&lt;/a&gt; - A collection of libraries that help you design robust, testable, and maintainable apps. Start with classes for managing your UI component lifecycle and handling data persistence. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/data-binding/&#34;&gt;Data Binding&lt;/a&gt; - Declaratively bind observable data to UI elements.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/lifecycle&#34;&gt;Lifecycles&lt;/a&gt; - Create a UI that automatically responds to lifecycle events.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata&#34;&gt;LiveData&lt;/a&gt; - Build data objects that notify views when the underlying database changes.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/navigation/&#34;&gt;Navigation&lt;/a&gt; - Handle everything needed for in-app navigation.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/room&#34;&gt;Room&lt;/a&gt; - Access your app&#39;s SQLite database with in-app objects and compile-time checks.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt; - Store UI-related data that isn&#39;t destroyed on app rotations. Easily schedule asynchronous tasks for optimal execution.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/workmanager&#34;&gt;WorkManager&lt;/a&gt; - Manage your Android background jobs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/guide/topics/ui&#34;&gt;UI&lt;/a&gt; - Details on why and how to use UI Components in your apps - together or separate &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/training/animation/&#34;&gt;Animations &amp;amp; Transitions&lt;/a&gt; - Move widgets and transition between screens.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/guide/components/fragments&#34;&gt;Fragment&lt;/a&gt; - A basic unit of composable UI.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/guide/topics/ui/declaring-layout&#34;&gt;Layout&lt;/a&gt; - Lay out widgets using different algorithms.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Third party and miscellaneous libraries &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bumptech.github.io/glide/&#34;&gt;Glide&lt;/a&gt; for image loading&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;: for &lt;a href=&#34;https://developer.android.com/training/dependency-injection&#34;&gt;dependency injection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines-overview.html&#34;&gt;Kotlin Coroutines&lt;/a&gt; for managing background threads with simplified code and reducing needs for callbacks&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upcoming features&lt;/h2&gt; &#xA;&lt;p&gt;Updates will include incorporating additional Jetpack components and updating existing components as the component libraries evolve.&lt;/p&gt; &#xA;&lt;p&gt;Interested in seeing a particular feature of the Android Framework or Jetpack implemented in this app? Please open a new &lt;a href=&#34;https://github.com/android/sunflower/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Android Studio IDE setup&lt;/h2&gt; &#xA;&lt;p&gt;For development, the latest version of Android Studio is required. The latest version can be downloaded from &lt;a href=&#34;https://developer.android.com/studio/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sunflower uses &lt;a href=&#34;https://ktlint.github.io/&#34;&gt;ktlint&lt;/a&gt; to enforce Kotlin coding styles. Here&#39;s how to configure it for use with Android Studio (instructions adapted from the ktlint &lt;a href=&#34;https://github.com/shyiko/ktlint/raw/master/README.md&#34;&gt;README&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Close Android Studio if it&#39;s open&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download ktlint using these &lt;a href=&#34;https://github.com/pinterest/ktlint/raw/master/README.md#installation&#34;&gt;installation instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apply ktlint settings to Android Studio using these &lt;a href=&#34;https://github.com/pinterest/ktlint/raw/master/README.md#-with-intellij-idea&#34;&gt;instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Android Studio&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;p&gt;Check out these Wiki pages to learn more about Android Sunflower:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/android/sunflower/wiki/Notable-Community-Contributions&#34;&gt;Notable Community Contributions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/android/sunflower/wiki/Sunflower-Publications&#34;&gt;Publications&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Non-Goals&lt;/h2&gt; &#xA;&lt;p&gt;The focus of this project is on Android Jetpack and the Android framework. Thus, there are no immediate plans to implement features outside of this scope.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stack Overflow: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/android&#34;&gt;https://stackoverflow.com/questions/tagged/android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/android-jetpack&#34;&gt;https://stackoverflow.com/questions/tagged/android-jetpack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;ve found an error in this sample, please file an issue: &lt;a href=&#34;https://github.com/android/sunflower/issues&#34;&gt;https://github.com/android/sunflower/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Patches are encouraged, and may be submitted by forking this project and submitting a pull request through GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Third Party Content&lt;/h2&gt; &#xA;&lt;p&gt;Select text used for describing the plants (in &lt;code&gt;plants.json&lt;/code&gt;) are used from Wikipedia via CC BY-SA 3.0 US (license in &lt;code&gt;ASSETS_LICENSE&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&#34;&lt;a href=&#34;https://thenounproject.com/search/?q=seed&amp;amp;i=1585971&#34;&gt;seed&lt;/a&gt;&#34; by &lt;a href=&#34;https://thenounproject.com/aisyahalmasyira/&#34;&gt;Aisyah&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/us/legalcode&#34;&gt;CC BY 3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2018 Google, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/user-interface-samples</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/user-interface-samples</id>
    <link href="https://github.com/android/user-interface-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple samples showing the best practices in the user interface on Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android User Interface Samples Repository&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you get started writing/understanding Android user interface features.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/iosched</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/google/iosched</id>
    <link href="https://github.com/google/iosched" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Google I/O Android App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google I/O Android App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/iosched&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/iosched.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2021 Update&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Due to global events, Google I/O 2020 was canceled and Google I/O 2021 is an online-only event, so the companion app hasn&#39;t been updated since 2019. However, the &lt;code&gt;iosched&lt;/code&gt; team has continued adding several architecture improvements to its codebase. The general look and feel of the app is unchanged, and the app still uses the data from Google I/O 2019.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Major improvements implemented in 2021:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Migration from LiveData to Kotlin Flows to observe data.&lt;/li&gt; &#xA; &lt;li&gt;Support for large screens and other form factors.&lt;/li&gt; &#xA; &lt;li&gt;Migration from SharedPreferences to &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/datastore&#34;&gt;Jetpack DataStore&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;(Experimental) Partial migration to Jetpack Compose (in the &lt;a href=&#34;https://github.com/google/iosched/tree/compose&#34;&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt; branch)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;Google I/O is a developer conference with several days of deep technical content featuring technical sessions and hundreds of demonstrations from developers showcasing their technologies.&lt;/p&gt; &#xA;&lt;p&gt;This project is the Android app for the conference.&lt;/p&gt; &#xA;&lt;h1&gt;Running the app&lt;/h1&gt; &#xA;&lt;p&gt;The project contains a &lt;code&gt;staging&lt;/code&gt; variant that replaces some modules at compile time so they don&#39;t depend on remote services such as Firebase. This allows you to try out and test the app without the API keys.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;The app displays a list of conference events - sessions, office hours, app reviews, codelabs, etc. - and allows the user to filter these events by event types and by topics (Android, Firebase, etc.). Users can see details about events, and they can star events that interest them. Conference attendees can reserve events to guarantee a seat.&lt;/p&gt; &#xA;&lt;p&gt;Other features include a Map of the venue, informational pages to guide attendees during the conference in Info, and time-relevant information during the conference in Home.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/google/iosched/main/schedule.png&#34; alt=&#34;Schedule screenshot&#34; height=&#34;640&#34; width=&#34;320&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Development Environment&lt;/h1&gt; &#xA;&lt;p&gt;The app is written entirely in Kotlin and uses the Gradle build system.&lt;/p&gt; &#xA;&lt;p&gt;To build the app, use the &lt;code&gt;gradlew build&lt;/code&gt; command or use &#34;Import Project&#34; in Android Studio. Android Studio Arctic Fox or newer is required and may be downloaded &lt;a href=&#34;https://developer.android.com/studio/preview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The architecture is built around &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/&#34;&gt;Android Architecture Components&lt;/a&gt; and follows the recommendations laid out in the &lt;a href=&#34;https://developer.android.com/jetpack/docs/guide&#34;&gt;Guide to App Architecture&lt;/a&gt;. Logic is kept away from Activities and Fragments and moved to &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt;s. Data is observed using &lt;a href=&#34;https://developer.android.com/kotlin/flow/stateflow-and-sharedflow&#34;&gt;Kotlin Flows&lt;/a&gt; and the &lt;a href=&#34;https://developer.android.com/topic/libraries/data-binding/&#34;&gt;Data Binding Library&lt;/a&gt; binds UI components in layouts to the app&#39;s data sources.&lt;/p&gt; &#xA;&lt;p&gt;The Repository layer handles data operations. IOSched&#39;s data comes from a few different sources - user data is stored in &lt;a href=&#34;https://firebase.google.com/docs/firestore/&#34;&gt;Cloud Firestore&lt;/a&gt; (either remotely or in a local cache for offline use), user preferences and settings are stored in DataStore, conference data is stored remotely and is fetched and stored in memory for the app to use, etc. - and the repository modules are responsible for handling all data operations and abstracting the data sources from the rest of the app.&lt;/p&gt; &#xA;&lt;p&gt;A lightweight domain layer sits between the data layer and the presentation layer, and handles discrete pieces of business logic off the UI thread. See the &lt;code&gt;.\*UseCase.kt&lt;/code&gt; files under &lt;code&gt;shared/domain&lt;/code&gt; for &lt;a href=&#34;https://github.com/google/iosched/search?q=UseCase&amp;amp;unscoped_q=UseCase&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.android.com/guide/navigation&#34;&gt;Navigation component&lt;/a&gt; is used to implement navigation in the app, handling Fragment transactions and providing a consistent user experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/room&#34;&gt;Room&lt;/a&gt; is used for Full Text Search using &lt;a href=&#34;https://developer.android.com/reference/androidx/room/Fts4&#34;&gt;Fts4&lt;/a&gt; to search for a session, speaker, or codelab.&lt;/p&gt; &#xA;&lt;p&gt;UI tests are written with &lt;a href=&#34;https://developer.android.com/training/testing/espresso/&#34;&gt;Espresso&lt;/a&gt; and unit tests use Junit4 with &lt;a href=&#34;https://github.com/mockito/mockito&#34;&gt;Mockito&lt;/a&gt; when necessary.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.android.com/studio/profile/benchmark&#34;&gt;Jetpack Benchmark library&lt;/a&gt; makes it easy to benchmark your code from within Android Studio. The library handles warmup, measures your code performance, and outputs benchmarking results to the Android Studio console. We added a few benchmark tests around critical paths during app startup - in particular, the parsing of the bootstrap data. This enables us to automate measuring and monitoring initial startup time. Here is an example from a benchmark run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Started running tests&#xA;&#xA;Connected to process 30763 on device &#39;google-pixel_3&#39;.&#xA;benchmark:&#xA;benchmark:    76,076,101 ns BootstrapConferenceDataSourceBenchmark.benchmark_json_parsing&#xA;Tests ran to completion.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dependency Injection is implemented with &lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;. For more details on migrating from &lt;em&gt;dagger-android&lt;/em&gt; to Hilt, read the (&lt;a href=&#34;https://medium.com/androiddevelopers/migrating-the-google-i-o-app-to-hilt-f3edf03affe5&#34;&gt;migration article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/training/animation/screen-slide-2&#34;&gt;ViewPager2&lt;/a&gt; offers enhanced functionality over the original ViewPager library, such as right-to-left and vertical orientation support. For more details on migrating from ViewPager to ViewPager2, please see this &lt;a href=&#34;https://developer.android.com/training/animation/vp2-migration&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Firebase&lt;/h2&gt; &#xA;&lt;p&gt;The app makes considerable use of the following Firebase components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/firestore/&#34;&gt;Cloud Firestore&lt;/a&gt; is our source for all user data (events starred or reserved by a user). Firestore gave us automatic sync and also seamlessly managed offline functionality for us.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/functions/&#34;&gt;Firebase Cloud Functions&lt;/a&gt; allowed us to run backend code. The reservations feature heavily depended on Cloud Functions working in conjuction with Firestore.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging/concept-options&#34;&gt;Firebase Cloud Messaging&lt;/a&gt; let us inform the app about changes to conference data on our server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Remote Config&lt;/a&gt; helped us manage in-app constants.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For 2020, the implementation was migrated to the Firebase Kotlin extension (KTX) libraries to write more idiomatic Kotlin code when calling Firebase APIs. To learn more, read this &lt;a href=&#34;https://firebase.googleblog.com/2020/03/firebase-kotlin-ga.html&#34;&gt;Firebase blog article&lt;/a&gt; on the Firebase KTX libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Kotlin&lt;/h2&gt; &#xA;&lt;p&gt;The app is entirely written in Kotlin and uses Jetpack&#39;s &lt;a href=&#34;https://developer.android.com/kotlin/ktx&#34;&gt;Android Ktx extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Asynchronous tasks are handled with &lt;a href=&#34;https://developer.android.com/kotlin/coroutines&#34;&gt;coroutines&lt;/a&gt;. Coroutines allow for simple and safe management of one-shot operations as well as building and consuming streams of data using &lt;a href=&#34;https://developer.android.com/kotlin/flow&#34;&gt;Kotlin Flows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All build scripts are written with the &lt;a href=&#34;https://docs.gradle.org/current/userguide/kotlin_dsl.html&#34;&gt;Kotlin DSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Copyright&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2014 Google Inc. All rights reserved.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/intellij-platform-plugin-template</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/JetBrains/intellij-platform-plugin-template</id>
    <link href="https://github.com/JetBrains/intellij-platform-plugin-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Template repository for creating plugins for IntelliJ Platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IntelliJ Platform Plugin Template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official JetBrains project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/JBPlatform&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/JBPlatform?style=flat-square&amp;amp;logo=twitter&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/intellij-platform-plugin-template/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/JetBrains/intellij-platform-plugin-template/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.jetbrains.com/slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-%23intellij--platform-blue?style=flat-square&amp;amp;logo=Slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/intellij-platform-plugin-template.png&#34; alt=&#34;IntelliJ Platform Plugin Template&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Click the &lt;kbd&gt;Use this template&lt;/kbd&gt; button and clone it in IntelliJ IDEA.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- Plugin description --&gt; &#xA;&lt;p&gt;&lt;strong&gt;IntelliJ Platform Plugin Template&lt;/strong&gt; is a repository that provides a pure template to make it easier to create a new plugin project (check the &lt;a href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template&#34;&gt;Creating a repository from a template&lt;/a&gt; article).&lt;/p&gt; &#xA;&lt;p&gt;The main goal of this template is to speed up the setup phase of plugin development for both new and experienced developers by preconfiguring the project scaffold and CI, linking to the proper documentation pages, and keeping everything organized.&lt;/p&gt; &#xA;&lt;!-- Plugin description end --&gt; &#xA;&lt;p&gt;If you&#39;re still not quite sure what this is all about, read our introduction: &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/intellij-platform.html?from=IJPluginTemplate&#34;&gt;What is the IntelliJ Platform?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: Click the &lt;kbd&gt;Watch&lt;/kbd&gt; button on the top to be notified about releases containing new features and fixes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Table of contents&lt;/h3&gt; &#xA;&lt;p&gt;In this README, we will highlight the following elements of template-project creation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#gradle-configuration&#34;&gt;Gradle configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#plugin-template-structure&#34;&gt;Plugin template structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#plugin-configuration-file&#34;&gt;Plugin configuration file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#sample-code&#34;&gt;Sample code&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;listeners – project and dynamic plugin lifecycle&lt;/li&gt; &#xA;   &lt;li&gt;services – project-related and application-related services&lt;/li&gt; &#xA;   &lt;li&gt;actions – basic action with shortcut binding&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#testing&#34;&gt;Testing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#functional-tests&#34;&gt;Functional tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#ui-tests&#34;&gt;UI tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#qodana-integration&#34;&gt;Qodana integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#predefined-rundebug-configurations&#34;&gt;Predefined Run/Debug configurations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#continuous-integration&#34;&gt;Continuous integration&lt;/a&gt; based on GitHub Actions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#dependencies-management&#34;&gt;Dependencies management&lt;/a&gt; with Dependabot&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#changelog-maintenance&#34;&gt;Changelog maintenance&lt;/a&gt; with the Gradle Changelog Plugin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#release-flow&#34;&gt;Release flow&lt;/a&gt; using GitHub Releases&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#plugin-signing&#34;&gt;Plugin signing&lt;/a&gt; with your private certificate&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#publishing-the-plugin&#34;&gt;Publishing the plugin&lt;/a&gt; with the Gradle IntelliJ Plugin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#useful-links&#34;&gt;Useful links&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Before we dive into plugin development and everything related to it, it&#39;s worth mentioning the benefits of using GitHub Templates. By creating a new project using the current template, you start with no history or reference to this repository. This allows you to create a new repository easily without copying and pasting previous content, clone repositories, or clearing the history manually.&lt;/p&gt; &#xA;&lt;p&gt;All you have to do is click the &lt;kbd&gt;Use this template&lt;/kbd&gt; button (you must be logged in with your GitHub account).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/use-this-template.png&#34; alt=&#34;Use this template&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After using the template to create your blank project, the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/template-cleanup.yml&#34;&gt;Template Cleanup&lt;/a&gt; workflow will be triggered to override or remove any template-specific configurations, such as the plugin name, current changelog, etc. Once this is complete, the project is ready to be cloned to your local environment and opened with &lt;a href=&#34;https://www.jetbrains.com/idea/download&#34;&gt;IntelliJ IDEA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the last step, you have to manually review the configuration variables described in the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/gradle.properties&#34;&gt;&lt;code&gt;gradle.properties&lt;/code&gt;&lt;/a&gt; file and &lt;em&gt;optionally&lt;/em&gt; move sources from the &lt;em&gt;com.github.username.repository&lt;/em&gt; package to the one that works best for you. Then you can get to work implementing your ideas.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; To use Java in your plugin, create the &lt;code&gt;/src/main/java&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Gradle configuration&lt;/h2&gt; &#xA;&lt;p&gt;The recommended method for plugin development involves using the &lt;a href=&#34;https://gradle.org&#34;&gt;Gradle&lt;/a&gt; setup with the &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin&#34;&gt;gradle-intellij-plugin&lt;/a&gt; installed. The &lt;code&gt;gradle-intellij-plugin&lt;/code&gt; makes it possible to run the IDE with your plugin and publish your plugin to JetBrains Marketplace Repository.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Make sure to always upgrade to the latest version of &lt;code&gt;gradle-intellij-plugin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A project built using the IntelliJ Platform Plugin Template includes a Gradle configuration already set up. Feel free to read through the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/gradle-build-system.html?from=IJPluginTemplate&#34;&gt;Using Gradle&lt;/a&gt; articles to understand your build better and learn how to customize it.&lt;/p&gt; &#xA;&lt;p&gt;The most significant parts of the current configuration are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration written with &lt;a href=&#34;https://docs.gradle.org/current/userguide/kotlin_dsl.html&#34;&gt;Gradle Kotlin DSL&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Support for Kotlin and Java implementation.&lt;/li&gt; &#xA; &lt;li&gt;Integration with the &lt;a href=&#34;https://github.com/JetBrains/gradle-changelog-plugin&#34;&gt;gradle-changelog-plugin&lt;/a&gt;, which automatically patches the change notes and description based on the &lt;code&gt;CHANGELOG.md&lt;/code&gt; and &lt;code&gt;README.md&lt;/code&gt; files.&lt;/li&gt; &#xA; &lt;li&gt;Integration with the &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin&#34;&gt;gradle-intellij-plugin&lt;/a&gt; for smoother development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/publishing-plugin.html?from=IJPluginTemplate&#34;&gt;Plugin publishing&lt;/a&gt; using the token.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details regarding Kotlin integration, please see &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/kotlin.html#adding-kotlin-support&#34;&gt;Kotlin for Plugin Developers&lt;/a&gt; section in the IntelliJ Platform Plugin SDK documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Gradle properties&lt;/h3&gt; &#xA;&lt;p&gt;The project-specific configuration file &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/gradle.properties&#34;&gt;gradle.properties&lt;/a&gt; contains:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pluginGroup&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Package name - after &lt;em&gt;using&lt;/em&gt; the template, this will be set to &lt;code&gt;com.github.username.repo&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pluginName&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Plugin name displayed in the JetBrains Marketplace and the Plugins Repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pluginVersion&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The current version of the plugin in &lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt; format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pluginSinceBuild&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;since-build&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;idea-version&amp;gt;&lt;/code&gt; tag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pluginUntilBuild&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;until-build&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;idea-version&amp;gt;&lt;/code&gt; tag.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;platformType&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The type of IDE distribution.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;platformVersion&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The version of the IntelliJ Platform IDE will be used to build the plugin.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;platformDownloadSources&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IDE sources downloaded while initializing the Gradle build.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;platformPlugins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma-separated list of dependencies to the bundled IDE plugins and plugins from the Plugin Repositories.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;javaVersion&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java language level used to compile sources and generate the files for - Java 11 is required since 2020.3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;gradleVersion&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Version of Gradle used for plugin development.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The properties listed define the plugin itself or configure the &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin&#34;&gt;gradle-intellij-plugin&lt;/a&gt; – check its documentation for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Some values used for the Gradle configuration shouldn&#39;t be stored in files to avoid publishing them to the Version Control System.&lt;/p&gt; &#xA;&lt;p&gt;To avoid that, environment variables are introduced, which can be provided within the &lt;em&gt;Run/Debug Configuration&lt;/em&gt; within the IDE, or on the CI – like for GitHub: &lt;code&gt;⚙️ Settings &amp;gt; Secrets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Environment variables used by the current project are related to the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#plugin-signing&#34;&gt;plugin signing&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#publishing-the-plugin&#34;&gt;publishing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variable name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PRIVATE_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certificate private key, should contain: &lt;code&gt;-----BEGIN ENCRYPTED PRIVATE KEY-----&lt;br&gt;...&lt;br&gt;-----END ENCRYPTED PRIVATE KEY-----&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PRIVATE_KEY_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Password used for encrypting the certificate file.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CERTIFICATE_CHAIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certificate chain, should contain: &lt;code&gt;-----BEGIN CERTIFICATE-----&lt;br&gt;...&lt;br&gt;-----END CERTIFICATE----&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PUBLISH_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Publishing token generated in your JetBrains Marketplace profile dashboard.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For more details on how to generate proper values, check the relevant sections mentioned above.&lt;/p&gt; &#xA;&lt;p&gt;To configure GitHub secret environment variables, go to the &lt;code&gt;⚙️ Settings &amp;gt; Secrets&lt;/code&gt; section of your project repository:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/settings-secrets.png&#34; alt=&#34;Settings &gt; Secrets&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Plugin template structure&lt;/h2&gt; &#xA;&lt;p&gt;A generated IntelliJ Platform Plugin Template repository contains the following content structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── .github/                GitHub Actions workflows and Dependabot configuration files&#xA;├── .run/                   Predefined Run/Debug Configurations&#xA;├── gradle&#xA;│   └── wrapper/            Gradle Wrapper&#xA;├── build/                  Output build directory&#xA;├── src                     Plugin sources&#xA;│   └── main&#xA;│       ├── kotlin/         Kotlin production sources&#xA;│       └── resources/      Resources - plugin.xml, icons, messages&#xA;│   └── test&#xA;│       ├── kotlin/         Kotlin test sources&#xA;│       └── testData/       Test data used by tests&#xA;├── .gitignore              Git ignoring rules&#xA;├── build.gradle.kts        Gradle configuration&#xA;├── CHANGELOG.md            Full change history&#xA;├── gradle.properties       Gradle configuration properties&#xA;├── gradlew                 *nix Gradle Wrapper script&#xA;├── gradlew.bat             Windows Gradle Wrapper script&#xA;├── LICENSE                 License, MIT by default&#xA;├── qodana.yml              Qodana configuration file&#xA;├── README.md               README&#xA;└── settings.gradle.kts     Gradle project settings&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to the configuration files, the most crucial part is the &lt;code&gt;src&lt;/code&gt; directory, which contains our implementation and the manifest for our plugin – &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/src/main/resources/META-INF/plugin.xml&#34;&gt;plugin.xml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; To use Java in your plugin, create the &lt;code&gt;/src/main/java&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Plugin configuration file&lt;/h2&gt; &#xA;&lt;p&gt;The plugin configuration file is a &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/src/main/resources/META-INF/plugin.xml&#34;&gt;plugin.xml&lt;/a&gt; file located in the &lt;code&gt;src/main/resources/META-INF&lt;/code&gt; directory. It provides general information about the plugin, its dependencies, extensions, and listeners.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;idea-plugin&amp;gt;&#xA;  &amp;lt;id&amp;gt;org.jetbrains.plugins.template&amp;lt;/id&amp;gt;&#xA;  &amp;lt;name&amp;gt;Template&amp;lt;/name&amp;gt;&#xA;  &amp;lt;vendor&amp;gt;JetBrains&amp;lt;/vendor&amp;gt;&#xA;  &amp;lt;depends&amp;gt;com.intellij.modules.platform&amp;lt;/depends&amp;gt;&#xA;&#xA;  &amp;lt;extensions defaultExtensionNs=&#34;com.intellij&#34;&amp;gt;&#xA;    &amp;lt;applicationService serviceImplementation=&#34;...&#34;/&amp;gt;&#xA;    &amp;lt;projectService serviceImplementation=&#34;...&#34;/&amp;gt;&#xA;  &amp;lt;/extensions&amp;gt;&#xA;&#xA;  &amp;lt;projectListeners&amp;gt;&#xA;    &amp;lt;listener class=&#34;...&#34; topic=&#34;...&#34;/&amp;gt;&#xA;  &amp;lt;/projectListeners&amp;gt;&#xA;&amp;lt;/idea-plugin&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about this file in the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html?from=IJPluginTemplate&#34;&gt;Plugin Configuration File&lt;/a&gt; section of our documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Sample code&lt;/h2&gt; &#xA;&lt;p&gt;The prepared template provides as little code as possible because it is impossible for a general scaffold to fulfill all the specific requirements for all types of plugins (language support, build tools, VCS related tools). Therefore, the template contains only the following files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── MyBundle.kt                         Bundle class providing access to the resources messages&#xA;├── listeners&#xA;│   └── MyProjectManagerListener.kt     Project Manager listener - handles project lifecycle&#xA;└── services&#xA;    ├── MyApplicationService.kt         Application-level service available for all projects&#xA;    └── MyProjectService.kt             Project level service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These files are located in &lt;code&gt;src/main/kotlin&lt;/code&gt;. This location indicates the language being used. So if you decide to use Java instead (or in addition to Kotlin), these sources should be located in the &lt;code&gt;src/main/java&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;To start with the actual implementation, you may check our &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij?from=IJPluginTemplate&#34;&gt;IntelliJ Platform SDK DevGuide&lt;/a&gt;, which contains an introduction to the essential areas of the plugin development together with dedicated tutorials.&lt;/p&gt; &#xA;&lt;p&gt;For those who value example codes the most, there are also available &lt;a href=&#34;https://github.com/JetBrains/intellij-sdk-code-samples&#34;&gt;IntelliJ SDK Code Samples&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/intellij-platform-explorer&#34;&gt;IntelliJ Platform Explorer&lt;/a&gt; – a search tool for browsing Extension Points inside existing implementations of open-source IntelliJ Platform plugins.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/testing-plugins.html&#34;&gt;Testing plugins&lt;/a&gt; is an essential part of the plugin development to make sure that everything works as expected between IDE releases and plugin refactorings. The IntelliJ Platform Plugin Template project provides integration of two testing approaches – functional and UI tests.&lt;/p&gt; &#xA;&lt;h3&gt;Functional tests&lt;/h3&gt; &#xA;&lt;p&gt;Most of the IntelliJ Platform codebase tests are model-level, run in a headless environment using an actual IDE instance. The tests usually test a feature as a whole rather than individual functions that comprise its implementation, like in unit tests.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;src/test/kotlin&lt;/code&gt;, you&#39;ll find a basic &lt;code&gt;MyPluginTest&lt;/code&gt; test that utilizes &lt;code&gt;BasePlatformTestCase&lt;/code&gt; and runs a few checks against the XML files to indicate an example operation of creating files on the fly or reading them from &lt;code&gt;src/test/resources/rename&lt;/code&gt; test resources.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; Run your tests using predefined &lt;em&gt;Run Tests&lt;/em&gt; configuration or by invoking the &lt;code&gt;./gradlew test&lt;/code&gt; Gradle task.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;UI tests&lt;/h3&gt; &#xA;&lt;p&gt;If your plugin provides complex user interfaces, you should consider covering them with tests and the functionality they utilize.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/intellij-ui-test-robot&#34;&gt;IntelliJ UI Test Robot&lt;/a&gt; allows you to write and execute UI tests within the IntelliJ IDE running instance. You can use the &lt;a href=&#34;https://www.w3.org/TR/xpath-21/&#34;&gt;XPath query language&lt;/a&gt; to find components in the currently available IDE view. Once IDE with &lt;code&gt;robot-server&lt;/code&gt; has started, you can open the &lt;code&gt;http://localhost:8082&lt;/code&gt; page that presents the currently available IDEA UI components hierarchy in HTML format and use a simple &lt;code&gt;XPath&lt;/code&gt; generator, which can help test your plugin&#39;s interface.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; Run IDE for UI tests using predefined &lt;em&gt;Run IDE for UI Tests&lt;/em&gt; and then &lt;em&gt;Run Tests&lt;/em&gt; configurations or by invoking the &lt;code&gt;./gradlew runIdeForUiTests&lt;/code&gt; and &lt;code&gt;./gradlew tests&lt;/code&gt; Gradle tasks.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Check the UI Test Example project you can use as a reference for setting up UI testing in your plugin: &lt;a href=&#34;https://github.com/JetBrains/intellij-ui-test-robot/tree/master/ui-test-example&#34;&gt;intellij-ui-test-robot/ui-test-example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class MyUITest {&#xA;&#xA;  @Test&#xA;  fun openAboutFromWelcomeScreen() {&#xA;    val robot = RemoteRobot(&#34;http://127.0.0.1:8082&#34;)&#xA;    robot.find&amp;lt;ComponentFixture&amp;gt;(byXpath(&#34;//div[@myactionlink = &#39;gearHover.svg&#39;]&#34;)).click()&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/ui-testing.png&#34; alt=&#34;UI Testing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A dedicated &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/run-ui-tests.yml&#34;&gt;Run UI Tests&lt;/a&gt; workflow is available for manual triggering to run UI tests against three different operating systems: macOS, Windows, and Linux. Due to its optional nature, this workflow isn&#39;t set as an automatic one, but this can be easily achieved by changing the &lt;code&gt;on&lt;/code&gt; trigger event, like in the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/build.yml&#34;&gt;Build&lt;/a&gt; workflow file.&lt;/p&gt; &#xA;&lt;h2&gt;Qodana integration&lt;/h2&gt; &#xA;&lt;p&gt;To increase the project value, the IntelliJ Platform Plugin Template got integrated with &lt;a href=&#34;https://www.jetbrains.com/help/qodana&#34;&gt;Qodana&lt;/a&gt;, a code quality monitoring platform that allows you to check the condition of your implementation and find any possible problems that may require enhancing.&lt;/p&gt; &#xA;&lt;p&gt;Qodana brings into your CI/CD pipelines all the smart features you love in the JetBrains IDEs and generates an HTML report with the actual inspection status.&lt;/p&gt; &#xA;&lt;p&gt;Qodana inspections are accessible within the project on two levels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;using the &lt;a href=&#34;https://www.jetbrains.com/help/qodana/qodana-intellij-github-action.html&#34;&gt;Qodana IntelliJ GitHub Action&lt;/a&gt;, run automatically within the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/build.yml&#34;&gt;Build&lt;/a&gt; workflow,&lt;/li&gt; &#xA; &lt;li&gt;with the &lt;a href=&#34;https://github.com/JetBrains/gradle-qodana-plugin&#34;&gt;Gradle Qodana Plugin&lt;/a&gt;, so you can use it on the local environment or any CI other than GitHub Actions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Qodana inspection is configured with the &lt;code&gt;qodana { ... }&lt;/code&gt; section in the Gradle build file and &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/qodana.yml&#34;&gt;&lt;code&gt;qodana.yml&lt;/code&gt;&lt;/a&gt; YAML configuration file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Qodana requires Docker to be installed and available in your environment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To run inspections, you can use a predefined &lt;em&gt;Run Qodana&lt;/em&gt; configuration, which will provide a full report on &lt;code&gt;http://localhost:8080&lt;/code&gt;, or invoke the Gradle task directly with the &lt;code&gt;./gradlew runInspections&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;A final report is available in the &lt;code&gt;./build/reports/inspections/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/qodana.png&#34; alt=&#34;Qodana&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Predefined Run/Debug configurations&lt;/h2&gt; &#xA;&lt;p&gt;Within the default project structure, there is a &lt;code&gt;.run&lt;/code&gt; directory provided containing predefined &lt;em&gt;Run/Debug configurations&lt;/em&gt; that expose corresponding Gradle tasks:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/run-debug-configurations.png&#34; alt=&#34;Run/Debug configurations&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Configuration name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run Plugin&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin#running-dsl&#34;&gt;&lt;code&gt;:runIde&lt;/code&gt;&lt;/a&gt; Gradle IntelliJ Plugin task. Use the &lt;em&gt;Debug&lt;/em&gt; icon for plugin debugging.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run Verifications&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin#plugin-verifier-dsl&#34;&gt;&lt;code&gt;:runPluginVerifier&lt;/code&gt;&lt;/a&gt; Gradle IntelliJ Plugin task to check the plugin compatibility against the specified IntelliJ IDEs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run Tests&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;a href=&#34;https://docs.gradle.org/current/userguide/java_plugin.html#lifecycle_tasks&#34;&gt;&lt;code&gt;:test&lt;/code&gt;&lt;/a&gt; Gradle task.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run IDE for UI Tests&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;a href=&#34;https://github.com/JetBrains/intellij-ui-test-robot&#34;&gt;&lt;code&gt;:runIdeForUiTests&lt;/code&gt;&lt;/a&gt; Gradle IntelliJ Plugin task to allow for running UI tests within the IntelliJ IDE running instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run Qodana&lt;/td&gt; &#xA;   &lt;td&gt;Runs &lt;a href=&#34;https://github.com/JetBrains/gradle-qodana-plugin&#34;&gt;&lt;code&gt;:runInspections&lt;/code&gt;&lt;/a&gt; Gradle Qodana Plugin task. Starts Qodana inspections in a Docker container and serves generated report on &lt;code&gt;localhost:8080&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; You can find the logs from the running task in the &lt;code&gt;idea.log&lt;/code&gt; tab.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/run-logs.png&#34; alt=&#34;Run/Debug configuration logs&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Continuous integration&lt;/h2&gt; &#xA;&lt;p&gt;Continuous integration depends on &lt;a href=&#34;https://help.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt;, a set of workflows that make it possible to automate your testing and release process. Thanks to such automation, you can delegate the testing and verification phases to the Continuous Integration (CI) and instead focus on development (and writing more tests).&lt;/p&gt; &#xA;&lt;p&gt;In the &lt;code&gt;.github/workflows&lt;/code&gt; directory, you can find definitions for the following GitHub Actions workflows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/build.yml&#34;&gt;Build&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Triggered on &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pull_request&lt;/code&gt; events.&lt;/li&gt; &#xA;   &lt;li&gt;Runs the &lt;em&gt;Gradle Wrapper Validation Action&lt;/em&gt; to verify the wrapper&#39;s checksum.&lt;/li&gt; &#xA;   &lt;li&gt;Runs the &lt;code&gt;verifyPlugin&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; Gradle tasks.&lt;/li&gt; &#xA;   &lt;li&gt;Builds the plugin with the &lt;code&gt;buildPlugin&lt;/code&gt; Gradle task and provides the artifact for the next jobs in the workflow.&lt;/li&gt; &#xA;   &lt;li&gt;Verifies the plugin using the &lt;em&gt;IntelliJ Plugin Verifier&lt;/em&gt; tool.&lt;/li&gt; &#xA;   &lt;li&gt;Prepares a draft release of the GitHub Releases page for manual verification.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/release.yml&#34;&gt;Release&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Triggered on &lt;code&gt;released&lt;/code&gt; event.&lt;/li&gt; &#xA;   &lt;li&gt;Updates &lt;code&gt;CHANGELOG.md&lt;/code&gt; file with the content provided with the release note.&lt;/li&gt; &#xA;   &lt;li&gt;Signs the plugin with a provided certificate before publishing.&lt;/li&gt; &#xA;   &lt;li&gt;Publishes the plugin to JetBrains Marketplace using the provided &lt;code&gt;PUBLISH_TOKEN&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Sets publish channel depending on the plugin version, i.e. &lt;code&gt;1.0.0-beta&lt;/code&gt; -&amp;gt; &lt;code&gt;beta&lt;/code&gt; channel.&lt;/li&gt; &#xA;   &lt;li&gt;Patches the Changelog and commits.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/run-ui-tests.yml&#34;&gt;Run UI Tests&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Triggered manually.&lt;/li&gt; &#xA;   &lt;li&gt;Runs for macOS, Windows, and Linux separately.&lt;/li&gt; &#xA;   &lt;li&gt;Runs &lt;code&gt;runIdeForUiTests&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; Gradle tasks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/template-cleanup.yml&#34;&gt;Template Cleanup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Triggered once on the &lt;code&gt;push&lt;/code&gt; event when a new template-based repository has been created.&lt;/li&gt; &#xA;   &lt;li&gt;Overrides the scaffold with files from the &lt;code&gt;.github/template-cleanup&lt;/code&gt; directory.&lt;/li&gt; &#xA;   &lt;li&gt;Overrides JetBrains-specific sentences or package names with ones specific to the target repository.&lt;/li&gt; &#xA;   &lt;li&gt;Removes redundant files.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All the workflow files have accurate documentation, so it&#39;s a good idea to take a look through their sources.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies management&lt;/h3&gt; &#xA;&lt;p&gt;This Template project depends on Gradle plugins and external libraries – and during the development, you will add more of them.&lt;/p&gt; &#xA;&lt;p&gt;Keeping the project in good shape and having all the dependencies up-to-date requires time and effort, but it is possible to automate that process using &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/keeping-your-dependencies-updated-automatically&#34;&gt;Dependabot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dependabot is a bot provided by GitHub to check the build configuration files and review any outdated or insecure dependencies of yours – in case if any update is available, it creates a new pull request providing &lt;a href=&#34;https://github.com/JetBrains/intellij-platform-plugin-template/pull/73&#34;&gt;the proper change&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Dependabot doesn&#39;t yet support checking of the Gradle Wrapper. Check the &lt;a href=&#34;https://gradle.org/releases&#34;&gt;Gradle Releases&lt;/a&gt; page and update your &lt;code&gt;gradle.properties&lt;/code&gt; file with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;gradleVersion = 7.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;and run&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew wrapper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Changelog maintenance&lt;/h3&gt; &#xA;&lt;p&gt;When releasing an update, it is essential to let your users know what the new version offers. The best way to do this is to provide release notes.&lt;/p&gt; &#xA;&lt;p&gt;The changelog is a curated list that contains information about any new features, fixes, and deprecations. When they are provided, these lists are available in a few different places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; file,&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://github.com/JetBrains/intellij-platform-plugin-template/releases&#34;&gt;Releases page&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;the &lt;em&gt;What&#39;s new&lt;/em&gt; section of JetBrains Marketplace Plugin page,&lt;/li&gt; &#xA; &lt;li&gt;and inside the Plugin Manager&#39;s item details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are many methods for handling the project&#39;s changelog. The one used in the current template project is the &lt;a href=&#34;https://keepachangelog.com&#34;&gt;Keep a Changelog&lt;/a&gt; approach.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/JetBrains/gradle-changelog-plugin&#34;&gt;Gradle Changelog Plugin&lt;/a&gt; takes care of propagating information provided within the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; to the &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin&#34;&gt;Gradle IntelliJ Plugin&lt;/a&gt;. You only have to take care of writing down the actual changes in proper sections of the &lt;code&gt;[Unreleased]&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;You start with an almost empty changelog:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# YourPlugin Changelog&#xA;&#xA;## [Unreleased]&#xA;### Added&#xA;- Initial scaffold created from [IntelliJ Platform Plugin Template](https://github.com/JetBrains/intellij-platform-plugin-template)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now proceed with providing more entries to the &lt;code&gt;Added&lt;/code&gt; group, or any other one that suits your change the most (see &lt;a href=&#34;https://keepachangelog.com/en/1.0.0/#how&#34;&gt;How do I make a good changelog?&lt;/a&gt; for more details).&lt;/p&gt; &#xA;&lt;p&gt;When releasing a plugin update, you don&#39;t have to care about bumping the &lt;code&gt;[Unreleased]&lt;/code&gt; header to the upcoming version – it will be handled automatically on the Continuous Integration (CI) after you publish your plugin. GitHub Actions will swap it and provide you an empty section for the next release so that you can proceed with your development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# YourPlugin Changelog&#xA;&#xA;## [Unreleased]&#xA;&#xA;## [0.0.1]&#xA;### Added&#xA;- An awesome feature&#xA;- Initial scaffold created from [IntelliJ Platform Plugin Template](https://github.com/JetBrains/intellij-platform-plugin-template)&#xA;&#xA;### Fixed&#xA;- One annoying bug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To configure how the Changelog plugin behaves, i.e., to create headers with the release date, see &lt;a href=&#34;https://github.com/JetBrains/gradle-changelog-plugin&#34;&gt;Gradle Changelog Plugin&lt;/a&gt; README file.&lt;/p&gt; &#xA;&lt;h3&gt;Release flow&lt;/h3&gt; &#xA;&lt;p&gt;The release process depends on the workflows already described above. When your main branch receives a new pull request or a direct push, the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/build.yml&#34;&gt;Build&lt;/a&gt; workflow runs multiple tests on your plugin and prepares a draft release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/readme/draft-release.png&#34; alt=&#34;Release draft&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The draft release is a working copy of a release, which you can review before publishing. It includes a predefined title and git tag, the current plugin version, for example, &lt;code&gt;v0.0.1&lt;/code&gt;. The changelog is provided automatically using the &lt;a href=&#34;https://github.com/JetBrains/gradle-changelog-plugin&#34;&gt;gradle-changelog-plugin&lt;/a&gt;. An artifact file is also built with the plugin attached. Every new Build overrides the previous draft to keep your &lt;em&gt;Releases&lt;/em&gt; page clean.&lt;/p&gt; &#xA;&lt;p&gt;When you edit the draft and use the &lt;kbd&gt;Publish release&lt;/kbd&gt; button, GitHub will tag your repository with the given version and add a new entry to the Releases tab. Next, it will notify users who are &lt;em&gt;watching&lt;/em&gt; the repository, triggering the final &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/release.yml&#34;&gt;Release&lt;/a&gt; workflow.&lt;/p&gt; &#xA;&lt;h3&gt;Plugin signing&lt;/h3&gt; &#xA;&lt;p&gt;Plugin Signing is a mechanism introduced in the 2021.2 release cycle to increase security in &lt;a href=&#34;https://plugins.jetbrains.com&#34;&gt;JetBrains Marketplace&lt;/a&gt; and all of our IntelliJ-based IDEs.&lt;/p&gt; &#xA;&lt;p&gt;JetBrains Marketplace signing is designed to ensure that plugins are not modified over the course of the publishing and delivery pipeline.&lt;/p&gt; &#xA;&lt;p&gt;The current project provides a predefined plugin signing configuration that lets you sign and publish your plugin from the Continuous Integration (CI) and local environments. All the configuration related to the signing should be provided using &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/#environment-variables&#34;&gt;environment variables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To find out how to generate signing certificates, check the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/plugin-signing.html?from=IJPluginTemplate&#34;&gt;Plugin Signing&lt;/a&gt; section in the IntelliJ Platform Plugin SDK documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Publishing the plugin&lt;/h3&gt; &#xA;&lt;p&gt;Releasing a plugin to JetBrains Marketplace is a straightforward operation that uses the &lt;code&gt;publishPlugin&lt;/code&gt; Gradle task provided by the &lt;a href=&#34;https://github.com/JetBrains/gradle-intellij-plugin&#34;&gt;gradle-intellij-plugin&lt;/a&gt;. In addition, the &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/intellij-platform-plugin-template/main/.github/workflows/release.yml&#34;&gt;Release&lt;/a&gt; workflow automates this process by running the task when a new release appears in the GitHub Releases section.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: Set a suffix to the plugin version to publish it in the custom repository channel, i.e. &lt;code&gt;v1.0.0-beta&lt;/code&gt; will push your plugin to the &lt;code&gt;beta&lt;/code&gt; &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/deployment.html?from=IJPluginTemplate#specifying-a-release-channel&#34;&gt;release channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The authorization process relies on the &lt;code&gt;PUBLISH_TOKEN&lt;/code&gt; secret environment variable, specified in the &lt;em&gt;Secrets&lt;/em&gt; section of the repository &lt;em&gt;Settings&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can get that token in your JetBrains Marketplace profile dashboard in the &lt;a href=&#34;https://plugins.jetbrains.com/author/me/tokens&#34;&gt;My Tokens&lt;/a&gt; tab.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Before using the automated deployment process, it is necessary to manually create a new plugin in JetBrains Marketplace to specify options like the license, repository URL, etc. Please follow the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/publishing-plugin.html?from=IJPluginTemplate&#34;&gt;Publishing a Plugin&lt;/a&gt; instructions.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How to use Java in my project?&lt;/h3&gt; &#xA;&lt;p&gt;Java language is supported by default along with Kotlin. Initially, the &lt;code&gt;/src/main/kotlin&lt;/code&gt; directory is available with minimal examples. You can still replace it or add the &lt;code&gt;/src/main/java&lt;/code&gt; directory to start working with Java language instead.&lt;/p&gt; &#xA;&lt;h3&gt;How to disable &lt;em&gt;tests&lt;/em&gt; or &lt;em&gt;build&lt;/em&gt; job using the &lt;code&gt;[skip ci]&lt;/code&gt; commit message?&lt;/h3&gt; &#xA;&lt;p&gt;Since February 2021, GitHub Actions &lt;a href=&#34;https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/&#34;&gt;support the skip CI feature&lt;/a&gt;. If the message contains one of the following strings: &lt;code&gt;[skip ci]&lt;/code&gt;, &lt;code&gt;[ci skip]&lt;/code&gt;, &lt;code&gt;[no ci]&lt;/code&gt;, &lt;code&gt;[skip actions]&lt;/code&gt;, or &lt;code&gt;[actions skip]&lt;/code&gt; – workflows will not be triggered.&lt;/p&gt; &#xA;&lt;h3&gt;Why draft release no longer contains built plugin artifact?&lt;/h3&gt; &#xA;&lt;p&gt;All the binaries created with each workflow are still available, but as an output artifact of each run together with tests and Qodana results. That approach gives more possibilities for testing and debugging pre-releases, for example, in your local environment.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij?from=IJPluginTemplate&#34;&gt;IntelliJ Platform SDK DevGuide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/intellij-platform-explorer&#34;&gt;IntelliJ Platform Explorer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/marketplace/quality-guidelines.html&#34;&gt;Marketplace Quality Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jetbrains.github.io/ui&#34;&gt;IntelliJ Platform UI Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/marketplace/paid-plugins-marketplace.html&#34;&gt;Marketplace Paid Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/kotlin-ui-dsl.html?from=IJPluginTemplate&#34;&gt;Kotlin UI DSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/intellij-sdk-code-samples&#34;&gt;IntelliJ SDK Code Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/slack&#34;&gt;JetBrains Platform Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/JBPlatform&#34;&gt;JetBrains Platform Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intellij-support.jetbrains.com/hc/en-us/community/topics/200366979-IntelliJ-IDEA-Open-API-and-Plugin-Development&#34;&gt;IntelliJ IDEA Open API and Plugin Development Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keepachangelog.com&#34;&gt;Keep a Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mamoe/mirai</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/mamoe/mirai</id>
    <link href="https://github.com/mamoe/mirai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;高效率 QQ 机器人支持库&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/mirai.png&#34; alt=&#34;logo&#34;&gt;&#xA; &lt;br&gt; &#xA; &lt;img width=&#34;95&#34; src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/mirai.svg?sanitize=true&#34; alt=&#34;title&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gitter.im/mamoe/mirai?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/mamoe/mirai.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mirai.mamoe.net&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/post-on%20MiraiForum-yellow&#34; alt=&#34;MiraiForum&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;mirai 是一个在全平台下运行，提供 QQ Android 协议支持的高效率机器人库&lt;/p&gt; &#xA; &lt;p&gt;这个项目的名字来源于 &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;http://www.kyotoanimation.co.jp/&#34;&gt;京都动画&lt;/a&gt;作品&lt;a href=&#34;https://zh.moegirl.org.cn/zh-hans/%E5%A2%83%E7%95%8C%E7%9A%84%E5%BD%BC%E6%96%B9&#34;&gt;《境界的彼方》&lt;/a&gt;的&lt;a href=&#34;https://zh.moegirl.org.cn/zh-hans/%E6%A0%97%E5%B1%B1%E6%9C%AA%E6%9D%A5&#34;&gt;栗山未来(Kuriyama &lt;b&gt;mirai&lt;/b&gt;)&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.crypton.co.jp/&#34;&gt;CRYPTON&lt;/a&gt;以&lt;a href=&#34;https://www.crypton.co.jp/miku_eng&#34;&gt;初音未来&lt;/a&gt;为代表的创作与活动&lt;a href=&#34;https://magicalmirai.com/2019/index_en.html&#34;&gt;(Magical &lt;b&gt;mirai&lt;/b&gt;)&lt;/a&gt;&lt;/p&gt; 图标以及形象由画师&#xA; &lt;a href=&#34;https://github.com/DazeCake&#34;&gt;DazeCake&lt;/a&gt;绘制&#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;mirai&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/README-eng.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;h3&gt;一切开发旨在学习，请勿用于非法用途&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mirai 是完全免费且开放源代码的软件，仅供学习和娱乐用途使用&lt;/li&gt; &#xA; &lt;li&gt;mirai 不会通过任何方式强制收取费用，或对使用者提出物质条件&lt;/li&gt; &#xA; &lt;li&gt;mirai 由整个开源社区维护，并不是属于某个个体的作品，所有贡献者都享有其作品的著作权。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;许可证&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2019-2022 Mamoe Technologies and contributors.&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU Affero General Public License as&#xA;published by the Free Software Foundation, either version 3 of the&#xA;License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU Affero General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU Affero General Public License&#xA;along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;mirai&lt;/code&gt; 采用 &lt;code&gt;AGPLv3&lt;/code&gt; 协议开源。为了整个社区的良性发展，我们&lt;strong&gt;强烈建议&lt;/strong&gt;您做到以下几点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;间接接触（包括但不限于使用 &lt;code&gt;Http API&lt;/code&gt; 或 跨进程技术）到 &lt;code&gt;mirai&lt;/code&gt; 的软件使用 &lt;code&gt;AGPLv3&lt;/code&gt; 开源&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;不鼓励，不支持一切商业使用&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;鉴于项目的特殊性，开发团队可能在任何时间&lt;strong&gt;停止更新&lt;/strong&gt;或&lt;strong&gt;删除项目&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;mirai 的形象图及项目图标都拥有著作权保护。&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;在未经过允许的情况下，任何人都不可以使用形象图和图标，或本文初的有关 mirai 名称来历的介绍原文，用于商业用途或是放置在项目首页，或其他未许可的行为。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;衍生软件需声明引用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;若引用 mirai 发布的软件包而不修改 mirai，则衍生项目需在描述的任意部位提及使用 mirai。&lt;/li&gt; &#xA; &lt;li&gt;若修改 mirai 源代码再发布，&lt;strong&gt;或参考 mirai 内部实现发布另一个项目&lt;/strong&gt;，则衍生项目必须在&lt;strong&gt;文章首部&lt;/strong&gt;或 &#39;mirai&#39; 相关内容&lt;strong&gt;首次出现&lt;/strong&gt;的位置&lt;strong&gt;明确声明&lt;/strong&gt;来源于本仓库 (&lt;code&gt;https://github.com/mamoe/mirai&lt;/code&gt;)。不得扭曲或隐藏免费且开源的事实。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;协议支持&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;支持的协议列表&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;消息相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;文字&lt;/li&gt; &#xA;  &lt;li&gt;原生表情&lt;/li&gt; &#xA;  &lt;li&gt;商城表情&lt;/li&gt; &#xA;  &lt;li&gt;戳一戳&lt;/li&gt; &#xA;  &lt;li&gt;图片 （自定义表情）&lt;/li&gt; &#xA;  &lt;li&gt;XML，JSON 等富文本消息&lt;/li&gt; &#xA;  &lt;li&gt;长消息（5000 字符 + 50 图片）&lt;/li&gt; &#xA;  &lt;li&gt;引用回复&lt;/li&gt; &#xA;  &lt;li&gt;合并转发&lt;/li&gt; &#xA;  &lt;li&gt;撤回&lt;/li&gt; &#xA;  &lt;li&gt;提及群员&lt;/li&gt; &#xA;  &lt;li&gt;提及全体成员&lt;/li&gt; &#xA;  &lt;li&gt;语音&lt;/li&gt; &#xA;  &lt;li&gt;闪照&lt;/li&gt; &#xA;  &lt;li&gt;撤回群员消息&lt;/li&gt; &#xA;  &lt;li&gt;自定义消息&lt;/li&gt; &#xA;  &lt;li&gt;音乐分享&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;群相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;群列表&lt;/li&gt; &#xA;  &lt;li&gt;成员列表&lt;/li&gt; &#xA;  &lt;li&gt;群员权限&lt;/li&gt; &#xA;  &lt;li&gt;禁言&lt;/li&gt; &#xA;  &lt;li&gt;全体禁言&lt;/li&gt; &#xA;  &lt;li&gt;群公告管理&lt;/li&gt; &#xA;  &lt;li&gt;群设置（自动审批、入群公告、成员邀请、匿名聊天）&lt;/li&gt; &#xA;  &lt;li&gt;处理入群申请&lt;/li&gt; &#xA;  &lt;li&gt;移除群员&lt;/li&gt; &#xA;  &lt;li&gt;群文件&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;好友相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;好友列表&lt;/li&gt; &#xA;  &lt;li&gt;处理新好友申请&lt;/li&gt; &#xA;  &lt;li&gt;删除好友&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;其他客户端&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;同步其他客户端的消息&lt;/li&gt; &#xA;  &lt;li&gt;向其他客户端发送消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;不会支持的协议&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;金钱相关，如点赞、收付款&lt;/li&gt; &#xA; &lt;li&gt;敏感操作，如主动添加好友、主动加入群、主动邀请好友加群&lt;/li&gt; &#xA; &lt;li&gt;安全相关，获取账号登录凭证(token，cookie等)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一切开发旨在学习，请勿用于非法用途&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开始&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;用户手册&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/UserManual.md&#34;&gt;UserManual&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发文档: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/README.md&#34;&gt;在 GitHub 阅读&lt;/a&gt; 或 &lt;a href=&#34;https://docs.mirai.mamoe.net/&#34;&gt;在 docs.mirai.mamoe.net 阅读&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;论坛: &lt;a href=&#34;https://mirai.mamoe.net/&#34;&gt;Mirai Forum&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;em&gt;Mirai 只有唯一一个官方论坛 Mirai Forum&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;更新日志: &lt;a href=&#34;https://github.com/mamoe/mirai/releases&#34;&gt;release&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发计划: &lt;a href=&#34;https://github.com/mamoe/mirai/milestones&#34;&gt;milestones&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线讨论: &lt;a href=&#34;https://gitter.im/mamoe/mirai?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;Gitter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mirai 开发组和官方系列项目: &lt;a href=&#34;https://github.com/project-mirai&#34;&gt;project-mirai&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mirai 社区相关项目 (旧): &lt;a href=&#34;https://github.com/project-mirai/awsome-mirai/raw/master/README.md&#34;&gt;awesome-mirai&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;帮助 mirai: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本着与更多 mirai 开发者、用户、支持者共建更好的学习环境为目的，mirai 自 2021 年 3 月 1 日发起官方社区的建设。社区建设可能涉及：&lt;a href=&#34;https://mirai.mamoe.net&#34;&gt;学习论坛&lt;/a&gt;、&lt;a href=&#34;https://github.com/project-mirai/mirai-plugin-center&#34;&gt;插件中心（在建）&lt;/a&gt;等。由于社区的运维需要经费，mirai 项目开启 sponsor 功能。&lt;/li&gt; &#xA; &lt;li&gt;请注意，赞助是全自愿的。赞助者不会获得特权，不赞助也可以使用全部的功能。为资金管理方便，赞助后不设退款、折现等选项。最终解释权归社区运营团队所有。&lt;/li&gt; &#xA; &lt;li&gt;全部赞助金额、流向、票据单号等将&lt;a href=&#34;https://github.com/project-mirai/mirai-sponsor/tree/main&#34;&gt;透明化公示&lt;/a&gt;，欢迎任何人随时查看及提出建议。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-hans/IntelliJ_IDEA&#34;&gt;IntelliJ IDEA&lt;/a&gt; 是一个在各个方面都最大程度地提高开发人员的生产力的 IDE，适用于 JVM 平台语言。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;特别感谢 &lt;a href=&#34;https://www.jetbrains.com/?from=mirai&#34;&gt;JetBrains&lt;/a&gt; 为开源项目提供免费的 &lt;a href=&#34;https://www.jetbrains.com/idea/?from=mirai&#34;&gt;IntelliJ IDEA&lt;/a&gt; 等 IDE 的授权&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com/?from=mirai&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/.github/jetbrains-variant-3.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mozilla-mobile/fenix</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/mozilla-mobile/fenix</id>
    <link href="https://github.com/mozilla-mobile/fenix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firefox for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firefox for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://firefox-ci-tc.services.mozilla.com/api/github/v1/repository/mozilla-mobile/fenix/main/latest&#34;&gt;&lt;img src=&#34;https://firefox-ci-tc.services.mozilla.com/api/github/v1/repository/mozilla-mobile/fenix/main/badge.svg?sanitize=true&#34; alt=&#34;Task Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mozilla-mobile/fenix&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mozilla-mobile/fenix/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fenix (internal codename) is the all-new Firefox for Android browser, based on &lt;a href=&#34;https://mozilla.github.io/geckoview/&#34;&gt;GeckoView&lt;/a&gt; and &lt;a href=&#34;https://mozac.org/&#34;&gt;Mozilla Android Components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.firefox&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://www.mozilla.org/en-US/about/governance/policies/participation/&#34;&gt;Community Participation Guidelines&lt;/a&gt; and the &lt;a href=&#34;https://bugzilla.mozilla.org/page.cgi?id=etiquette.html&#34;&gt;Bugzilla Etiquette guidelines&lt;/a&gt; before filing an issue. This is our professional working environment as much as it is our bug tracker, and we want to keep our workspace clean and healthy.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/CONTRIBUTING.md&#34;&gt;Guide to Contributing&lt;/a&gt; (&lt;strong&gt;New contributors start here!&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browse our &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/issues&#34;&gt;current Issues&lt;/a&gt;, or &lt;a href=&#34;https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&amp;amp;bug_ignored=0&amp;amp;bug_severity=normal&amp;amp;bug_status=NEW&amp;amp;cf_fx_iteration=---&amp;amp;cf_fx_points=---&amp;amp;component=Security%3A%20Android&amp;amp;contenttypemethod=list&amp;amp;contenttypeselection=text%2Fplain&amp;amp;defined_groups=1&amp;amp;flag_type-4=X&amp;amp;flag_type-607=X&amp;amp;flag_type-791=X&amp;amp;flag_type-800=X&amp;amp;flag_type-803=X&amp;amp;flag_type-936=X&amp;amp;flag_type-937=X&amp;amp;form_name=enter_bug&amp;amp;groups=mobile-core-security&amp;amp;maketemplate=Remember%20values%20as%20bookmarkable%20template&amp;amp;op_sys=Unspecified&amp;amp;priority=--&amp;amp;product=Fenix&amp;amp;rep_platform=Unspecified&amp;amp;target_milestone=---&amp;amp;version=unspecified&#34;&gt;file a security issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Matrix: &lt;a href=&#34;https://chat.mozilla.org/#/room/#fenix:mozilla.org&#34;&gt;#fenix:mozilla.org channel&lt;/a&gt; (&lt;strong&gt;We&#39;re available Monday-Friday, GMT and PST working hours&lt;/strong&gt;). Related channels:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#mobile-test-eng:mozilla.org&#34;&gt;#mobile-test-eng:mozilla.org channel&lt;/a&gt;: for UI test automation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#perf-android-frontend:mozilla.org&#34;&gt;#perf-android-frontend:mozilla.org channel&lt;/a&gt;: for front-end (JVM) performance of Android apps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#android-tips:mozilla.org&#34;&gt;#android-tips:mozilla.org channel&lt;/a&gt;: for tips on Android development&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check out the &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/wiki&#34;&gt;project wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/writing_lint_rules.md&#34;&gt;our guide on Writing Custom Lint Rules&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Localization happens on &lt;a href=&#34;https://pontoon.mozilla.org/projects/android-l10n/&#34;&gt;Pontoon&lt;/a&gt;. Please get in touch with delphine (at) mozilla (dot) com directly for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beginners!&lt;/strong&gt; - Watch out for &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;Issues with the &#34;Good First Issue&#34; label&lt;/a&gt;. These are easy bugs that have been left for first timers to have a go, get involved and make a positive contribution to the project!&lt;/p&gt; &#xA;&lt;h2&gt;I want to open a Pull Request!&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any other kind of positive contribution.&lt;/p&gt; &#xA;&lt;p&gt;Since we are a small team, however, &lt;strong&gt;we do not have the bandwidth to review unsolicited PRs&lt;/strong&gt;. Please follow our &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/CONTRIBUTING_code.md#creating-a-pull-request&#34;&gt;Pull Request guidelines&lt;/a&gt;, or &lt;strong&gt;we may close the PR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier to review, we have these PR requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every PR must have &lt;strong&gt;exactly&lt;/strong&gt; one issue associated with it.&lt;/li&gt; &#xA; &lt;li&gt;Write a clear explanation of what the code is doing when opening the pull request, and optionally add comments to the PR.&lt;/li&gt; &#xA; &lt;li&gt;Make sure there are tests - or ask for help on how the code should be tested in the Issue!&lt;/li&gt; &#xA; &lt;li&gt;Keep PRs small and to the point. For extra code-health changes, either file a separate issue, or make it a separate PR that can be easily reviewed.&lt;/li&gt; &#xA; &lt;li&gt;Use micro-commits. This makes it easier and faster to review.&lt;/li&gt; &#xA; &lt;li&gt;Add a screenshot for UX changes (this is part of the PR checklist)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a small team, we have to prioritize our work, and reviewing PRs takes time. We receive lots of PRs every day, so if you can keep your PRs small, it helps our small team review and merge code faster, minimizing stale code.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that the team is very overloaded, so PRs sometimes wait for a &lt;em&gt;very&lt;/em&gt; long time. However this is not for lack of interest, but because we find ourselves in a constant need to prioritize certain issues/PRs over others. If you think your issue/PR is very important, try to popularize it by getting other users to comment and share their point of view.&lt;/p&gt; &#xA;&lt;h2&gt;I want to file an issue!&lt;/h2&gt; &#xA;&lt;p&gt;Great! We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any other kind of positive contribution.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier to triage, we have these issue requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please do your best to search for duplicate issues before filing a new issue so we can keep our issue board clean.&lt;/li&gt; &#xA; &lt;li&gt;Every issue should have &lt;strong&gt;exactly&lt;/strong&gt; one bug/feature request described in it. Please do not file meta feedback list tickets as it is difficult to parse them and address their individual points.&lt;/li&gt; &#xA; &lt;li&gt;Feature Requests are better when they’re open-ended instead of demanding a specific solution -ie “I want an easier way to do X” instead of “add Y”&lt;/li&gt; &#xA; &lt;li&gt;Issues are not the place to go off topic or debate. If you have questions, please join the &lt;a href=&#34;https://chat.mozilla.org/#/room/#fenix:mozilla.org&#34;&gt;#fenix:mozilla.org channel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please always remember our &lt;a href=&#34;https://www.mozilla.org/en-US/about/governance/policies/participation/&#34;&gt;Community Participation Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Please do not tag specific team members to try to get your issue looked at faster. We have a triage process that will tag and label issues correctly in due time. If you think an issue is very severe, you can ask about it in Matrix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please keep in mind that even though a feature you have in mind may seem like a small ask, as a small team, we have to prioritize our planned work and every new feature adds complexity and maintenance and may take up design, research, marketing, product, and engineering time. We appreciate everyone’s passion but we will not be able to incorporate every feature request or even fix every bug. That being said, just because we haven&#39;t replied, doesn&#39;t mean we don&#39;t care about the issue, please be patient with our response times as we&#39;re very busy.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android SDK&lt;/li&gt; &#xA; &lt;li&gt;To run command line tools, you&#39;ll need to configure Java: see &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/configure_java.md&#34;&gt;our how-to guide&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone or Download the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/mozilla-mobile/fenix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt; the project into Android Studio &lt;strong&gt;or&lt;/strong&gt; build on the command line:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew clean app:assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this errors out, make sure that you have an &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; environment variable pointing to the right path.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to select the correct build variant in Android Studio. See the next section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to select &#34;Default APK&#34; under Installation Options inside Run/Debug configuration: see &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1529082&#34;&gt;this bug&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build Variants&lt;/h3&gt; &#xA;&lt;p&gt;For general development, we recommend the &lt;strong&gt;debug&lt;/strong&gt; build variant. Here&#39;s an explanation of each variant:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;debug&lt;/strong&gt;: the default for developers, similar to most other Android apps. It is debuggable, uses a Nightly GeckoView with debug symbols, adds tools like LeakCanary for troublingshooting, and does not strip unused code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nightly&lt;/strong&gt;: what we ship to the Firefox Nightly channel, using GeckoView Nightly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beta&lt;/strong&gt;: what we ship to the Firefox Beta channel, using GeckoView Beta. It is more stable than nightly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;release&lt;/strong&gt;: what we ship as Firefox for Android, using GeckoView Release. It is the most stable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;nightly, beta, and release are unsigned and &lt;code&gt;debuggable=false&lt;/code&gt; by default. If you want these variants to be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;automatically signed, see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#automatically-sign-release-builds&#34;&gt;Automatically signing release builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debuggable=true&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#building-debuggable-release-variants&#34;&gt;Building debuggable release variants&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Performance Build Variants&lt;/h4&gt; &#xA;&lt;p&gt;For accurate performance measurements, read this section!&lt;/p&gt; &#xA;&lt;p&gt;To analyze performance during &lt;strong&gt;local development&lt;/strong&gt; build a production variant locally (this could either be the Nightly, beta or release). Otherwise, you could also grab a pre-existing APK if you don&#39;t need to test some local changes. Then, use the Firefox profiler to profile what you need!&lt;/p&gt; &#xA;&lt;p&gt;For more information on how to use the profiler or how to use the build, refer to this &lt;a href=&#34;https://wiki.mozilla.org/Performance/How_to_get_started_on_Fenix&#34;&gt;how to measure performance with the build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to run &lt;strong&gt;performance tests/benchmarks&lt;/strong&gt; in automation or locally use a production build since it is much closer in behavior compared to what users see in the wild.&lt;/p&gt; &#xA;&lt;p&gt;Before you can install any release builds, &lt;strong&gt;You will need to sign production build variants:&lt;/strong&gt; see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#automatically-sign-release-builds&#34;&gt;Automatically signing release builds&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h5&gt;Known disabled-by-default features&lt;/h5&gt; &#xA;&lt;p&gt;Some features are disabled by default when Fenix is built locally. This can be problematic at times for checking performance since you might want to know how your code behaves with those features. The known features that are disabled by default are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sentry&lt;/li&gt; &#xA; &lt;li&gt;Adjust&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Location Services (also known as MLS)&lt;/li&gt; &#xA; &lt;li&gt;Firebase Push Services&lt;/li&gt; &#xA; &lt;li&gt;Telemetry (only disabled by default in debug builds)&lt;/li&gt; &#xA; &lt;li&gt;Nimbus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-push hooks&lt;/h2&gt; &#xA;&lt;p&gt;To reduce review turn-around time, we&#39;d like all pushes to run tests locally. We&#39;d recommend you use our provided pre-push hook in &lt;code&gt;config/pre-push-recommended.sh&lt;/code&gt;. Using this hook will guarantee your hook gets updated as the repository changes. This hook tries to run as much as possible without taking too much time.&lt;/p&gt; &#xA;&lt;p&gt;Before you can run the hook, you&#39;ll need to configure Java properly because it relies on command line tools: see &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/configure_java.md&#34;&gt;our how-to guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add it on Mac/Linux, run this command from the project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ln -s ../../config/pre-push-recommended.sh .git/hooks/pre-push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for Windows run this command using the Command Prompt with administrative privileges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mklink .git\hooks\pre-push ..\..\config\pre-push-recommended.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;New-Item -ItemType SymbolicLink -Path .git\hooks\pre-push -Value (Resolve-Path config\pre-push-recommended.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To push without running the pre-push hook (e.g. doc updates):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git push &amp;lt;remote&amp;gt; --no-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If while pushing you encounter this error &#34;Could not initialize class org.codehaus.groovy.runtime.InvokerHelper&#34; and are currently on Java14 then downgrading your Java version to Java13 or lower can resolve the issue&lt;/p&gt; &#xA;&lt;p&gt;Steps to downgrade Java Version on Mac with Brew:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Homebrew (&lt;a href=&#34;https://brew.sh/&#34;&gt;https://brew.sh/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To uninstall your current java version, run &lt;code&gt;sudo rm -fr /Library/Java/JavaVirtualMachines/&amp;lt;jdk-version&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew tap homebrew/cask-versions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew search java&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you see java11, then run &lt;code&gt;brew install java11&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Verify java-version by running &lt;code&gt;java -version&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;local.properties helpers&lt;/h2&gt; &#xA;&lt;p&gt;You can speed up local development by setting a few helper flags available in &lt;code&gt;local.properties&lt;/code&gt;. Some flags will make it easy to work across multiple layers of the dependency stack - specifically, with android-components, geckoview or application-services.&lt;/p&gt; &#xA;&lt;h3&gt;Automatically sign release builds&lt;/h3&gt; &#xA;&lt;p&gt;To sign your release builds with your debug key automatically, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;autosignReleaseWithDebugKey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this line, release build variants will automatically be signed with your debug key (like debug builds), allowing them to be built and installed directly through Android Studio or the command line.&lt;/p&gt; &#xA;&lt;p&gt;This is helpful when you&#39;re building release variants frequently, for example to test feature flags and or do performance analyses.&lt;/p&gt; &#xA;&lt;h3&gt;Building debuggable release variants&lt;/h3&gt; &#xA;&lt;p&gt;Nightly, Beta and Release variants are getting published to Google Play and therefore are not debuggable. To locally create debuggable builds of those variants, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;debuggable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting raptor manifest flag&lt;/h3&gt; &#xA;&lt;p&gt;To set the raptor manifest flag in Nightly, Beta and Release variants, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;raptorEnabled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Auto-publication workflow for android-components and application-services&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re making changes to these projects and want to test them in Fenix, auto-publication workflow is the fastest, most reliable way to do that.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;local.properties&lt;/code&gt;, specify a relative path to your local &lt;code&gt;android-components&lt;/code&gt; and/or &lt;code&gt;application-services&lt;/code&gt; checkouts. E.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;autoPublish.android-components.dir=../android-components&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autoPublish.application-services.dir=../application-services&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once these flags are set, your Fenix builds will include any local modifications present in these projects.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://www.youtube.com/watch?v=qZKlBzVvQGc&#34;&gt;demo of auto-publication workflow in action&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to build successfully, you need to check out a commit in the dependency repository that has no breaking changes. The two best ways to do this are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;&amp;lt;android-components&amp;gt;/tools/list_compatible_dependency_versions.py&lt;/code&gt; script to output a compatible commit&lt;/li&gt; &#xA; &lt;li&gt;Check out the latest commit from main in this repository and the dependency repository. However, this may fail if there were breaking changes added recently to the dependency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re trying to build fenix with a local ac AND a local GV, you&#39;ll have to use another method: see &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/raw/main/docs/substituting-local-ac-and-gv.md&#34;&gt;this doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Nimbus servers during local development&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re working with the Nimbus experiments platform, by default for local development Fenix configures Nimbus to not use a server.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use a Nimbus server during local development, you can add a &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt; endpoint to the &lt;code&gt;local.properties&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nimbus.remote-settings.url&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Testing experimental branches should be possible without a server.&lt;/p&gt; &#xA;&lt;h3&gt;GeckoView&lt;/h3&gt; &#xA;&lt;p&gt;Specify a relative path to your local &lt;code&gt;mozilla-central&lt;/code&gt; checkout via &lt;code&gt;dependencySubstitutions.geckoviewTopsrcdir&lt;/code&gt;, and optional a path to m-c object directory via &lt;code&gt;dependencySubstitutions.geckoviewTopobjdir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If these are configured, local builds of GeckoView will be used instead of what&#39;s configured in Dependencies.kt. For more details, see &lt;a href=&#34;https://firefox-source-docs.mozilla.org/mobile/android/geckoview/contributor/geckoview-quick-start.html#include-geckoview-as-a-dependency&#34;&gt;https://firefox-source-docs.mozilla.org/mobile/android/geckoview/contributor/geckoview-quick-start.html#include-geckoview-as-a-dependency&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See notes on building successfully in the &lt;code&gt;android-components&lt;/code&gt; auto-publication section.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public&#xA;License, v. 2.0. If a copy of the MPL was not distributed with this&#xA;file, You can obtain one at http://mozilla.org/MPL/2.0/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>google/ksp</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/google/ksp</id>
    <link href="https://github.com/google/ksp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Symbol Processing API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kotlin Symbol Processing API&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to KSP!&lt;/p&gt; &#xA;&lt;p&gt;Kotlin Symbol Processing (KSP) is an API that you can use to develop lightweight compiler plugins. KSP provides a simplified compiler plugin API that leverages the power of Kotlin while keeping the learning curve at a minimum. Compared to KAPT, annotation processors that use KSP can run up to 2x faster.&lt;/p&gt; &#xA;&lt;p&gt;Most of the documentation of KSP can be found on &lt;a href=&#34;https://kotlinlang.org/docs/ksp-overview.html&#34;&gt;kotlinlang.org&lt;/a&gt;. Here are some handy links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-overview.html&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-quickstart.html&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-overview.html#supported-libraries&#34;&gt;Libraries that support KSP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-why-ksp.html&#34;&gt;Why KSP?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-examples.html&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-additional-details.html&#34;&gt;How KSP models Kotlin code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-reference.html&#34;&gt;Reference for Java annotation processor authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-incremental.html&#34;&gt;Incremental processing notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-multi-round.html&#34;&gt;Multiple round processing notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-multiplatform.html&#34;&gt;KSP on multiplatform projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-command-line.html&#34;&gt;Running KSP from command line&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/ksp-faq.html&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback and Bug Reporting&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/ksp/issues&#34;&gt;Please let us know what you think about KSP by filing a Github issue&lt;/a&gt; or connecting with our team in the &lt;code&gt;#ksp&lt;/code&gt; channel in the &lt;a href=&#34;https://kotlinlang.slack.com/&#34;&gt;Kotlin Slack workspace&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in sending PRs, please also check out the &lt;a href=&#34;https://raw.githubusercontent.com/google/ksp/main/CONTRIBUTING.md&#34;&gt;Contributor guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ongoing and Future Works&lt;/h2&gt; &#xA;&lt;p&gt;Here are some planned features that have not yet been completely implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support &lt;a href=&#34;https://kotlinlang.org/docs/roadmap.html&#34;&gt;new Kotlin compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Improve support to multiplatform. E.g., running KSP on a subset of targets / sharing computations between targets&lt;/li&gt; &#xA; &lt;li&gt;Improve performance. There a bunch of optimizations to be done!&lt;/li&gt; &#xA; &lt;li&gt;Make the IDE aware of the generated code&lt;/li&gt; &#xA; &lt;li&gt;Keep fixing bugs!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Leon406/ToolsFx</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/Leon406/ToolsFx</id>
    <link href="https://github.com/Leon406/ToolsFx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于kotlin+tornadoFx的跨平台密码学工具箱.包含编解码,编码转换,加解密, 哈希,MAC,签名,大数运算,压缩,二维码功能,ctf等实用功能,支持插件&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/tb.png&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;ToolsFx&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Leon406/ToolsFx/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Leon406/ToolsFx.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Leon406/ToolsFx/actions/workflows/detekt-analysis.yml/badge.svg&#34;&gt;&lt;img src=&#34;https://github.com/Leon406/ToolsFx/actions/workflows/detekt-analysis.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;img src=&#34;https://img.shields.io/badge/language-kotlin-orange.svg?sanitize=true&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/changelog.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/updates-%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97-brightgreen&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/license-ISC-green&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Leon406/Toolsfx/total&#34;&gt; &lt;a href=&#34;https://gitter.im/ToolsFx/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ToolsFx/community.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/README.md&#34;&gt;English&lt;/a&gt;|&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/README-zh.md&#34;&gt;中文&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Visitors &lt;span&gt;👀&lt;/span&gt;&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://profile-counter.glitch.me/Leon406_ToolsFx/count.svg?sanitize=true&#34; alt=&#34;ToolsFx :: Visitor&#39;s Count&#34;&gt; &lt;img width=&#34;0&#34; height=&#34;0&#34; src=&#34;https://profile-counter.glitch.me/Leon406/count.svg?sanitize=true&#34; alt=&#34;Leon406:: Visitor&#39;s Count&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Function&lt;/h2&gt; &#xA;&lt;h3&gt;Encoding&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; base64&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; urlBase64&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; base16/32/36/45/58/62/85/91/92/100&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; base58check&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; UrlEncode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Unicode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; js hex(\x61)/js octal(\140)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; binary/octal/decimal/hex&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; custom base serial dict&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; puny code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; quote printable&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; uuEncode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; xxEncode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; escape/escapeAll&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/encode.gif&#34; alt=&#34;encode&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;String Process(e.g. Split)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/encode_split.gif&#34; alt=&#34;encode_split&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Encoding Transfer (not raw data)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Transfer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/encode_transfer.gif&#34; alt=&#34;encode&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Digest(Hash)&lt;/h3&gt; &#xA;&lt;p&gt;support file, big file which is larger than 8Gi&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; md serial&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha1&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RIPEMD&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; whirlpool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tiger&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/hash.gif&#34; alt=&#34;hash&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MAC&lt;/h3&gt; &#xA;&lt;h4&gt;HMAC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; md serial&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha1&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sha3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RIPEMD&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; whirpool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tiger&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;CMAC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AESCMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BLOWFISHCMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DESCMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DESEDECMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SEED-CMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Shacal-2CMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM4-CMAC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Three-fish-256CMAC / Three-fish-512CMAC / Three-fish-1024CMAC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;GMAC&lt;/h4&gt; &#xA;&lt;h4&gt;POLY1305&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-AES&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-ARIA&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-CAMELLIA&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-CAST6&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-NOEKEON&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-RC6&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-SEED&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-SERPENT&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-SM4&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; POLY1305-Twofish&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Symmetric Crypto(block cipher)&lt;/h3&gt; &#xA;&lt;h4&gt;Encrypt Algorithm&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DES/3DES&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AES&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM4&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Blowfish&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Twofish&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RC2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;support mode&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;ECB&lt;/li&gt; &#xA;  &lt;li&gt;CBC&lt;/li&gt; &#xA;  &lt;li&gt;OFB(n)&lt;/li&gt; &#xA;  &lt;li&gt;CFB(n)&lt;/li&gt; &#xA;  &lt;li&gt;SIC (also known as CTR)&lt;/li&gt; &#xA;  &lt;li&gt;CTS (equivalent to CBC/WithCTS)&lt;/li&gt; &#xA;  &lt;li&gt;CCM (AEAD)&lt;/li&gt; &#xA;  &lt;li&gt;EAX (AEAD)&lt;/li&gt; &#xA;  &lt;li&gt;GCM (AEAD)&lt;/li&gt; &#xA;  &lt;li&gt;OCB (AEAD)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;support padding scheme&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No padding&lt;/li&gt; &#xA;  &lt;li&gt;PKCS5/7&lt;/li&gt; &#xA;  &lt;li&gt;ISO10126/ISO10126-2&lt;/li&gt; &#xA;  &lt;li&gt;ISO7816-4/ISO9797-1&lt;/li&gt; &#xA;  &lt;li&gt;X9.23/X923&lt;/li&gt; &#xA;  &lt;li&gt;TBC&lt;/li&gt; &#xA;  &lt;li&gt;ZeroByte&lt;/li&gt; &#xA;  &lt;li&gt;withCTS (if used with ECB mode)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/sym.gif&#34; alt=&#34;sym&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Symmetric Crypto (stream cipher)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RC4&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; HC128/HC256&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChaCha/ChaCha20/ChaCha20-Poly1305&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Salsa20&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; XSalsa20&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; VMPC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Grain v1&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Grain128&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Zuc128&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Asymmetric Crypto RSA&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support pkcs1 /pkcs8 key&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support 512/1024/2048/3072/4096 bit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support plain text length longer than key size&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support public key encrypt and private key encrypt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support openssl pkcs1/pkcs8 private key format&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support certification cer file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support pem and pk8 format &lt;span&gt;🆕&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/asy.gif&#34; alt=&#34;sym&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Digital Signature&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RSA serial&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DSA&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ECDSA&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EC&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EdDSA(ED448/ED25192)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SM2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; other&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Classical Crypto (for CTF)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; caesar&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rot5/rot13/rot18/rot47&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; affine&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; virgenene&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; atbash&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; morse&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; qwe keyboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; polybius&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bacon 24/bacon 26&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; one time pad&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; socialist core value&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ADFGX/ADFGVX&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto Key&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rail-fence normal /rail-fence w-type&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; playfair&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; brainfuck/troll/ook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Braille&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; alphabet index&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 01248&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; BubbleBabble&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Element Periodic Table&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PawnShop Cipher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Handy code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Beaufort&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Porta Cipher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bifid/Trifid/FourSquare Cipher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gronsfeld Cipher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gray code&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Buddha Says(佛曰)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hill Cipher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 新佛曰/兽曰/熊曰(online)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rabbit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; aaencode/jjencode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/ctf.gif&#34; alt=&#34;ctf&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PBE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/art/pbe.gif&#34; alt=&#34;pbe&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Qrcode/OCR&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; String Process&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Big Integer Calculator&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; support drag file&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Symmetric Crypto support base64/hex encoded key, iv&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Digest and Symmetric Crypto support multi files&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; i18n&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CTF related&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; PBE&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; module configurable,support online url&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bouncycastle.org/specifications.html&#34;&gt;bouncy castle document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Leon406/ToolsFx/releases&#34;&gt;GitHub release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/LeonShih/ToolsFx&#34;&gt;gitte mirror(for Chinese user)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;download boost &lt;a href=&#34;https://leon.lanzoui.com/b0d9av2kb&#34;&gt;https://leon.lanzoui.com/b0d9av2kb&lt;/a&gt; code：52pj plugin download &lt;a href=&#34;https://leon.lanzoub.com/b0d9w4cof&#34;&gt;https://leon.lanzoub.com/b0d9w4cof&lt;/a&gt; 提取码：ax63&lt;/p&gt; &#xA;&lt;h3&gt;Issues, PRs are welcome!!!&lt;/h3&gt; &#xA;&lt;h2&gt;Version Choose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with jre environment &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;jdk8 choose suffix with jdk8&lt;/li&gt; &#xA;   &lt;li&gt;jdk11+ choose suffix with jdk11 &amp;amp; also need to config javafx environment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;w/o jre environment(Windows user only) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;64bit Windows x64 (jre11)&lt;/li&gt; &#xA;   &lt;li&gt;32/64bit Windows x86 (jre8,have no idea, choose this)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;beta (jar file) copy jar file to lib directory and delete ToolsFx-xxx.jar or app-xx.jar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Run&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux/macOS double-click ToolsFx in root directory&lt;/li&gt; &#xA; &lt;li&gt;Windows double-click ToolsFx.bat or vbs file(remove black command window)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Config&lt;/h2&gt; &#xA;&lt;p&gt;When Application is running ,it will generate ToolsFx.properties automatically , just modify the value. Below are the details.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;key&lt;/th&gt; &#xA;   &lt;th&gt;value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableClassical&lt;/td&gt; &#xA;   &lt;td&gt;Classical module switch,default is false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnablePBE&lt;/td&gt; &#xA;   &lt;td&gt;PBE module switch,default is false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableSignature&lt;/td&gt; &#xA;   &lt;td&gt;Signature module switch,default is true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableMac&lt;/td&gt; &#xA;   &lt;td&gt;MAC module switch,default is true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableSymmetricStream&lt;/td&gt; &#xA;   &lt;td&gt;Symmetric( Stream) module switch,default is true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableQrcode&lt;/td&gt; &#xA;   &lt;td&gt;Qrcode module switch,default is true&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;isEnableInternalWebview&lt;/td&gt; &#xA;   &lt;td&gt;Internal Browser switch,default is false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;extUrls&lt;/td&gt; &#xA;   &lt;td&gt;Internal Browser favourite urls, spit with comma&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/README-plugin.md&#34;&gt;PLUGIN&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ApiPost Network Debug Tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CHANGE LOG&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/changelog.md&#34;&gt;changelog.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CREDIT&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bcgit/bc-java&#34;&gt;bouncy castle&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/edvin/tornadofx&#34;&gt;tornadofx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shields.io/&#34;&gt;badge maker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Leon406/ToolsFx&#34;&gt;&lt;img src=&#34;https://starchart.cc/Leon406/ToolsFx.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;ISC License&#xA;&#xA;Copyright (c) 2021, Leon406&#xA;&#xA;Permission to use, copy, modify, and/or distribute this software for any&#xA;purpose with or without fee is hereby granted, provided that the above&#xA;copyright notice and this permission notice appear in all copies.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34; AND THE AUTHOR DISCLAIMS ALL WARRANTIES&#xA;WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF&#xA;MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR&#xA;ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES&#xA;WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN&#xA;ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF&#xA;OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/ToolsFx/main/#top&#34;&gt;Go Top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/architecture-components-samples</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android/architecture-components-samples</id>
    <link href="https://github.com/android/architecture-components-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Samples for Android Architecture Components.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Architecture Components samples&lt;/h1&gt; &#xA;&lt;p&gt;A collection of samples using the &lt;a href=&#34;https://developer.android.com/arch&#34;&gt;Architecture Components&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/room&#34;&gt;Room&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/lifecycle&#34;&gt;Lifecycle-aware components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata&#34;&gt;LiveData&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/paging/&#34;&gt;Paging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/navigation/&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/view-binding&#34;&gt;ViewBinding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/workmanager/&#34;&gt;WorkManager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicSample&#34;&gt;BasicSample&lt;/a&gt;&lt;/strong&gt; - Shows how to persist data using a SQLite database and Room. Also uses ViewModels and LiveData.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/PersistenceContentProviderSample&#34;&gt;PersistenceContentProviderSample&lt;/a&gt;&lt;/strong&gt; - Shows how to expose data via a Content Provider using Room.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/GithubBrowserSample&#34;&gt;GithubBrowserSample&lt;/a&gt;&lt;/strong&gt; - An &lt;strong&gt;advanced&lt;/strong&gt; sample that uses the Architecture components, Dagger and the Github API, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicRxJavaSample&#34;&gt;BasicRxJavaSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use Room with RxJava 2. Also uses ViewModels.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/PersistenceMigrationsSample&#34;&gt;PersistenceMigrationsSample&lt;/a&gt;&lt;/strong&gt; - Shows how to implement migrations in Room.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicRxJavaSampleKotlin&#34;&gt;BasicRxJavaKotlinSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use ViewModels and Room together with RxJava, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/PagingSample&#34;&gt;PagingSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use the Paging library with Room, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/PagingWithNetworkSample&#34;&gt;PagingNetworkSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use the Paging library with a backend API via Retrofit, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/NavigationBasicSample&#34;&gt;NavigationBasicSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use Navigation to perform navigation and deep linking in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/NavigationAdvancedSample&#34;&gt;NavigationAdvancedSample&lt;/a&gt;&lt;/strong&gt; - Shows how to handle multiple back stacks with Navigation and a BottomNavigationView.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/LiveDataSample&#34;&gt;LiveDataSample&lt;/a&gt;&lt;/strong&gt; - Shows how to integrate Kotlin coroutines with Architecture Components such as &lt;code&gt;LiveData&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/ViewBindingSample&#34;&gt;ViewBindingSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use view bindings in an activity and in fragments.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerSample&#34;&gt;WorkManagerSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use WorkManager to do background work, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerMultiprocessSample&#34;&gt;WorkManagerMultiprocessSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use WorkManager in apps that manage multiple processes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting Issues&lt;/h3&gt; &#xA;&lt;p&gt;You can report an &lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/issues&#34;&gt;Issue&lt;/a&gt; on the samples using this repository. If you find an issue with the Architecture Components, report it using the &lt;a href=&#34;https://issuetracker.google.com/issues/new?component=197448&amp;amp;template=878802&#34;&gt;Architecture Components Issue Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2018 The Android Open Source Project, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android10/Android-CleanArchitecture-Kotlin</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/android10/Android-CleanArchitecture-Kotlin</id>
    <link href="https://github.com/android10/Android-CleanArchitecture-Kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a movies sample app in Kotlin, which is part of a serie of blog posts I have written about architecting android application using different approaches.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/37318022/40349145-3e0c8d8a-5dd8-11e8-8654-5784f9ab7554.png&#34; alt=&#34;banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Android - Clean Architecture - Kotlin &lt;a href=&#34;https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin&#34;&gt;&lt;img src=&#34;https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/android10/Android-CleanArchitecture-Kotlin&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/android10/Android-CleanArchitecture-Kotlin/branch/main/graph/badge.svg?token=x1AtDcNuDv&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The purpose of this repo is to follow up Clean Architecture principles by bringing them to Android. It is worth saying that the idea is to take advantage of the Kotlin Programming Language features plus also pull in lessons learned and ideas from other interesting approaches like Functional Programming.&lt;/p&gt; &#xA;&lt;h2&gt;Blog post with implementation details explanation:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fernandocejas.com/2018/05/07/architecting-android-reloaded/&#34;&gt;Architecting Android… Reloaded&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Android - Clean Architecture - Java:&lt;/h2&gt; &#xA;&lt;p&gt;There is another Android Clean Architecture repository written in Java: &lt;a href=&#34;https://github.com/android10/Android-CleanArchitecture&#34;&gt;https://github.com/android10/Android-CleanArchitecture&lt;/a&gt; with really nice discussions: &lt;a href=&#34;https://github.com/android10/Android-CleanArchitecture/issues&#34;&gt;https://github.com/android10/Android-CleanArchitecture/issues&lt;/a&gt;. Article, lessons learned and some more material coming up. Check the following known bugs and TODO list.&lt;/p&gt; &#xA;&lt;h2&gt;Other material worth reading:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/&#34;&gt;Architecting Android…The clean way?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/&#34;&gt;Architecting Android…The evolution&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fernandocejas.com/2015/04/11/tasting-dagger-2-on-android/&#34;&gt;Tasting Dagger 2 on Android&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://fernandocejas.com/2016/12/24/clean-architecture-dynamic-parameters-in-use-cases/&#34;&gt;Clean Architecture…Dynamic Parameters in Use Cases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;Sample app&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1360604/31345866-679a221a-ad17-11e7-8097-7800edb677fa.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;Clean Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_main.png&#34; alt=&#34;https://fernandocejas.com/2018/05/07/architecting-android-reloaded/&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;Android 3 Layers Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_layers.png&#34; alt=&#34;https://fernandocejas.com/2018/05/07/architecting-android-reloaded/&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;UI Layer: MVVM&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_mvvm_app.png&#34; alt=&#34;https://fernandocejas.com/2018/05/07/architecting-android-reloaded/&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;Data Layer: Repository&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_archictecture_reloaded_repository.png&#34; alt=&#34;https://fernandocejas.com/2018/05/07/architecting-android-reloaded/&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;Here are some useful Gradle/adb commands for executing this example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew runApp&lt;/code&gt; - Builds and install the debug apk on the current connected device.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew compileApp&lt;/code&gt; - Builds the debug apk.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew runUnitTests&lt;/code&gt; - Execute unit tests (both unit and integration).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew runAcceptanceTests&lt;/code&gt; - Execute acceptance and instrumentation tests in the connected device.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew runTestCoverage&lt;/code&gt; - Reports code coverage on tests within the Android codebase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew runStaticCodeAnalysis&lt;/code&gt; - Run static analysis on the Android codebase.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Discussions&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the issues section: &lt;a href=&#34;https://github.com/android10/Android-CleanArchitecture-Kotlin/issues&#34;&gt;https://github.com/android10/Android-CleanArchitecture-Kotlin/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Fernando Cejas&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/android10/Sample-Data/raw/master/android10/android10_logo_big.png&#34; alt=&#34;https://fernandocejas.com&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/android10&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: auto !important;width: auto !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SimpleMobileTools/Simple-Calendar</title>
    <updated>2022-05-29T02:42:35Z</updated>
    <id>tag:github.com,2022-05-29:/SimpleMobileTools/Simple-Calendar</id>
    <link href="https://github.com/SimpleMobileTools/Simple-Calendar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple calendar with events, customizable widgets and no ads.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple Calendar&lt;/h1&gt; &#xA;&lt;img alt=&#34;Logo&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Calendar/master/fastlane/metadata/android/en-US/images/icon.png&#34; width=&#34;120&#34;&gt; &#xA;&lt;p&gt;A simple calendar with events and a customizable widget.&lt;/p&gt; &#xA;&lt;p&gt;A simple calendar with optional CalDAV synchronization. You can easily create recurring events and setup reminders, it can also display week numbers.&lt;/p&gt; &#xA;&lt;p&gt;Contains a monthly view and an event list widget where you can customize the color of the text, as well as the alpha and the color of the background.&lt;/p&gt; &#xA;&lt;p&gt;Contains no ads or unnecessary permissions. It is fully opensource, provides customizable colors.&lt;/p&gt; &#xA;&lt;p&gt;The Storage permission is needed only for exporting or importing events from .ics files.&lt;/p&gt; &#xA;&lt;p&gt;The Contacts permission is used only at importing contact birthdays and anniversaries.&lt;/p&gt; &#xA;&lt;p&gt;This app is just one piece of a bigger series of apps. You can find the rest of them at &lt;a href=&#34;https://www.simplemobiletools.com&#34;&gt;https://www.simplemobiletools.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.simplemobiletools.calendar.pro&#34;&gt;&lt;img src=&#34;https://simplemobiletools.com/images/button-google-play.svg?sanitize=true&#34; alt=&#34;Get it on Google Play&#34; height=&#34;45&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.simplemobiletools.calendar.pro&#34;&gt;&lt;img src=&#34;https://simplemobiletools.com/images/button-f-droid.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;45&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div style=&#34;display:flex;&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Calendar/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/1.jpg&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Calendar/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/2.jpg&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Calendar/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/3.jpg&#34; width=&#34;30%&#34;&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>