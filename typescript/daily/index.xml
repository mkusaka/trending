<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-16T01:38:45Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>buxuku/video-subtitle-master</title>
    <updated>2025-02-16T01:38:45Z</updated>
    <id>tag:github.com,2025-02-16:/buxuku/video-subtitle-master</id>
    <link href="https://github.com/buxuku/video-subtitle-master" rel="alternate"></link>
    <summary type="html">&lt;p&gt;批量为视频或者音频生成字幕，并可批量将字幕翻译成其它语言。这是一个客户端工具, 跨平台支持 mac 和 windows 系统, 支持百度，火山，deeplx, openai, deepseek, ollama 等多个翻译服务&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;video-subtitle-master&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/buxuku/video-subtitle-master/main/README_EN.md&#34;&gt;English&lt;/a&gt; | 中文&lt;/p&gt; &#xA;&lt;p&gt;批量为视频生成字幕，并可将字幕翻译成其它语言。这是在之前的一个开源项目 &lt;a href=&#34;https://github.com/buxuku/VideoSubtitleGenerator&#34;&gt;VideoSubtitleGenerator&lt;/a&gt; 的基础上，制作成的一个客户端工具，以方便更多朋友们的使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/buxuku/video-subtitle-master/main/resources/preview.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 当前 release 包在 mac 环境下测试通过， window 仅在虚拟机测试通过，如果大家在运行过程中遇到问题，欢迎提 Issue 反馈。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💥特性&lt;/h2&gt; &#xA;&lt;p&gt;它保留了之前 &lt;a href=&#34;https://github.com/buxuku/VideoSubtitleGenerator&#34;&gt;VideoSubtitleGenerator&lt;/a&gt; 这个命令行工具的全部特性，并新增了以下功能:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图形用户界面，操作更加便捷&lt;/li&gt; &#xA; &lt;li&gt;源语言字幕文件和目标语言字幕文件放在视频同目录下，方便播放时任意挂载字幕文件&lt;/li&gt; &#xA; &lt;li&gt;批量处理视频/音频/字幕文件&lt;/li&gt; &#xA; &lt;li&gt;支持视频/音频生成字幕&lt;/li&gt; &#xA; &lt;li&gt;支持对生成的字幕，或者导入的字幕进行翻译&lt;/li&gt; &#xA; &lt;li&gt;支持多种翻译服务: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;火山引擎翻译&lt;/li&gt; &#xA;   &lt;li&gt;百度翻译&lt;/li&gt; &#xA;   &lt;li&gt;DeepLX 翻译 （批量翻译容易存在被限流的情况）&lt;/li&gt; &#xA;   &lt;li&gt;本地模型 Ollama 翻译&lt;/li&gt; &#xA;   &lt;li&gt;支持 OpenAI 风格 API 翻译，如 &lt;a href=&#34;https://www.deepseek.com/&#34;&gt;deepseek&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;azure&lt;/a&gt; 等&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;自定义字幕文件名，方便兼容不同的播放器挂载字幕识别&lt;/li&gt; &#xA; &lt;li&gt;自定义翻译后的字幕文件内容，支持纯翻译结果或原字幕+翻译结果&lt;/li&gt; &#xA; &lt;li&gt;项目集成 &lt;code&gt;whisper.cpp&lt;/code&gt;，对 Apple Silicon 进行了优化，有较快的生成速度&lt;/li&gt; &#xA; &lt;li&gt;项目集成了 &lt;code&gt;fluent-ffmpeg&lt;/code&gt;，无须单独安装 &lt;code&gt;ffmpeg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持运行本地安装的 &lt;code&gt;whisper&lt;/code&gt; 命令&lt;/li&gt; &#xA; &lt;li&gt;支持选择模型下载源（国内镜像源或官方源）&lt;/li&gt; &#xA; &lt;li&gt;支持自定义并发任务数量&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core ML 支持&lt;/h2&gt; &#xA;&lt;p&gt;从 1.20.0 版本开始，在苹果芯片上，支持使用 Core ML 加速语音识别。对于之前安装过老版本的朋友，请先卸载老版本，然后重新安装新版本。并在设置界面里面，选择重新安装 &lt;code&gt;whisper.cpp&lt;/code&gt;。即可正常使用 Core ML 加速。&lt;/p&gt; &#xA;&lt;h2&gt;翻译服务&lt;/h2&gt; &#xA;&lt;p&gt;本项目支持多种翻译服务，包括百度翻译、火山引擎翻译、DeepLX、Ollama 本地模型以及 OpenAI 风格的 API。使用这些服务需要相应的 API 密钥或配置。&lt;/p&gt; &#xA;&lt;p&gt;对于百度翻译、火山引擎等服务的 API 申请方法，可以参考 &lt;a href=&#34;https://bobtranslate.com/service/&#34;&gt;https://bobtranslate.com/service/&lt;/a&gt; ，感谢 &lt;a href=&#34;https://bobtranslate.com/&#34;&gt;Bob&lt;/a&gt; 这款优秀的软件提供的信息。&lt;/p&gt; &#xA;&lt;h2&gt;🔦使用 (普通用户)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;前往 &lt;a href=&#34;https://github.com/buxuku/video-subtitle-master/releases&#34;&gt;release&lt;/a&gt; 页面根据自己的操作系统下载安装包&lt;/li&gt; &#xA; &lt;li&gt;安装并运行程序&lt;/li&gt; &#xA; &lt;li&gt;在程序中配置所需的翻译服务&lt;/li&gt; &#xA; &lt;li&gt;选择要处理的视频文件或字幕文件&lt;/li&gt; &#xA; &lt;li&gt;设置相关参数（如源语言、目标语言、模型等）&lt;/li&gt; &#xA; &lt;li&gt;开始处理任务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔦使用 (开发用户)&lt;/h2&gt; &#xA;&lt;p&gt;1️⃣ 克隆本项目到本地 1️⃣ 克隆本项目在本地&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/buxuku/video-subtitle-master.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2️⃣ 在项目中执行 &lt;code&gt;yarn install&lt;/code&gt; 或者 &lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd video-subtitle-master&#xA;yarn install &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3️⃣ 依赖包安装好之后，执行 &lt;code&gt;yarn start&lt;/code&gt; 或者 &lt;code&gt;npm start&lt;/code&gt; 启动项目&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;手动下载和导入模型&lt;/h2&gt; &#xA;&lt;p&gt;因为模型文件比较大，如果通过该软件下载模型会存在难以下载的情况，可以手动下载模型并导入到应用中。以下是两个可用于下载模型的链接：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;国内镜像源（下载速度较快）： &lt;a href=&#34;https://hf-mirror.com/ggerganov/whisper.cpp/tree/main&#34;&gt;https://hf-mirror.com/ggerganov/whisper.cpp/tree/main&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hugging Face 官方源： &lt;a href=&#34;https://huggingface.co/ggerganov/whisper.cpp/tree/main&#34;&gt;https://huggingface.co/ggerganov/whisper.cpp/tree/main&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;下载完成后，您可以通过应用的&#34;模型管理&#34;页面中的&#34;导入模型&#34;功能将下载的模型文件导入到应用中。&lt;/p&gt; &#xA;&lt;p&gt;导入步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在&#34;模型管理&#34;页面中，点击&#34;导入模型&#34;按钮。&lt;/li&gt; &#xA; &lt;li&gt;在弹出的文件选择器中，选择您下载的模型文件。&lt;/li&gt; &#xA; &lt;li&gt;确认导入后，模型将被添加到您的已安装模型列表中。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;h5&gt;1.提示应用程序已损坏，无法打开。&lt;/h5&gt; &#xA;&lt;p&gt;在终端中执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo xattr -dr com.apple.quarantine /Applications/Video\ Subtitle\ Master.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后再次运行应用程序。&lt;/p&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;p&gt;欢迎提交 Issue 和 Pull Request 来帮助改进这个项目！&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;本项目采用 MIT 许可证。详情请见 &lt;a href=&#34;https://raw.githubusercontent.com/buxuku/video-subtitle-master/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; 文件。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eez-open/studio</title>
    <updated>2025-02-16T01:38:45Z</updated>
    <id>tag:github.com,2025-02-16:/eez-open/studio</id>
    <link href="https://github.com/eez-open/studio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform low-code GUI and automation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/eez-open/studio.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eez-open/studio/raw/master/LICENSE.TXT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/eez-open/studio.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/eez-open/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/liberapay/receives/eez-open.svg?logo=liberapay&#34; alt=&#34;liberapay&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eez-open/studio/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/eez-open/studio/total&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ownership and License&lt;/h3&gt; &#xA;&lt;p&gt;The contributors are listed in CONTRIB.TXT. This project uses the GPL v3 license, see LICENSE.TXT. EEZ Studio uses the &lt;a href=&#34;http://rfc.zeromq.org/spec:22&#34;&gt;C4.1 (Collective Code Construction Contract)&lt;/a&gt; process for contributions. To report an issue, use the &lt;a href=&#34;https://github.com/eez-open/studio/issues&#34;&gt;EEZ Studio issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Important note: Envox d.o.o. does not claim any ownership rights to the source code generated by the &lt;code&gt;Build&lt;/code&gt; command except in the case of a project that uses EEZ Flow when it is given under the MIT license.&lt;/em&gt;&lt;br&gt; &lt;em&gt;The user owns the &lt;code&gt;.eez-project&lt;/code&gt; file and all the source code generated from the file template definitions that are part of &lt;code&gt;eez-project&lt;/code&gt; file. EEZ Studio may also generate files that are under MIT, BSD 2.0 or Public Domain license.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.envox.eu/studio/studio-introduction/&#34;&gt;Web page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/wiki/Q&amp;amp;A&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/q5KAeeenNG&#34;&gt;Discord&lt;/a&gt; server&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/envox&#34;&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.social/@envox&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/eezopen&#34;&gt;YouTube&lt;/a&gt; channel&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://liberapay.com/eez-open/donate&#34;&gt;Liberapay&lt;/a&gt; donations &lt;img src=&#34;https://liberapay.com/assets/liberapay/icon-v2_white-on-yellow.svg?sanitize=true&#34; width=&#34;16&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;EEZ Studio is a free and open source cross-platform low-code visual tool for desktop and embedded GUIs with &lt;a href=&#34;https://lvgl.io/&#34;&gt;LVGL&lt;/a&gt; support. Built-in &lt;em&gt;EEZ Flow&lt;/em&gt; enables the creation of complex scenarios for test and measurement automation, and the Instruments feature offers remote control of multiple devices and T&amp;amp;M equipment including &lt;a href=&#34;https://github.com/eez-open/modular-psu&#34;&gt;EEZ BB3&lt;/a&gt; T&amp;amp;M chassis and &lt;a href=&#34;https://github.com/eez-open/psu-hw&#34;&gt;EEZ H24005&lt;/a&gt; programmable power supply and any other T&amp;amp;M devices that support &lt;a href=&#34;https://www.ivifoundation.org/scpi/&#34;&gt;SCPI&lt;/a&gt; from manufacturers such as Keysight, Rigol, Siglent, etc.&lt;/p&gt; &#xA;&lt;h3&gt;EEZ Studio &lt;em&gt;Project&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eez-open/studio/master/docs/images/projects_intro.png&#34; alt=&#34;EEZ Studio Project&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modular visual development environment for designing TFT display screen decorations and defining user interaction (embedded GUI)&lt;/li&gt; &#xA; &lt;li&gt;Generate C++ code for embedded GUI functionality that can be directly included in &lt;a href=&#34;https://www.st.com/en/development-tools/stm32cubeide.html&#34;&gt;STM32CubeIDE&lt;/a&gt; for BB3 and other STM32 target platforms or &lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;Arduino IDE&lt;/a&gt; for H24005 and other Arduino compatible target platforms&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Instrument definition file&lt;/em&gt; (IDF) builder with context sensitive SCPI commands help (based on Keysight’s &lt;a href=&#34;https://www.keysight.com/main/software.jspx?cc=US&amp;amp;lc=eng&amp;amp;ckey=2333687&amp;amp;nid=-11143.0.00&amp;amp;id=2333687&#34;&gt;Offline Command Expert command set&lt;/a&gt; XML structure) suitable for EEZ Studio &lt;em&gt;Instrument&lt;/em&gt; and &lt;a href=&#34;https://www.keysight.com/en/pd-2036130/command-expert&#34;&gt;Keysight Command Expert&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SCPI command help generator based on bookmarked HTML generated directly from .odt file using &lt;a href=&#34;https://github.com/eez-open/WebPublish&#34;&gt;EEZ WebPublish&lt;/a&gt; extension for OpenOffice/LibreOffice.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lvgl.io/&#34;&gt;LVGL&lt;/a&gt; (Light and Versatile Graphics Library) 8.x and 9.x support&lt;/li&gt; &#xA; &lt;li&gt;Project templates (using giteo.io repositories) and comparison of projects&lt;/li&gt; &#xA; &lt;li&gt;Drag&amp;amp;drop editor for creating instrument&#39;s desktop dashboard (for remote control and management)&lt;/li&gt; &#xA; &lt;li&gt;Flowchart based low-code programming for desktop dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eez-open/studio/master/docs/images/flow_intro.png&#34; alt=&#34;Flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;EEZ Studio &lt;em&gt;Instrument&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eez-open/studio/master/docs/images/instruments_intro.png&#34; alt=&#34;EEZ Studio Instrument&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic environment where multiple instruments can be configured and easily accessed&lt;/li&gt; &#xA; &lt;li&gt;Session oriented interaction with each SCPI instrument&lt;/li&gt; &#xA; &lt;li&gt;Serial (via USB), Ethernet and VISA (via free &lt;a href=&#34;https://www.rohde-schwarz.com/us/driver-pages/remote-control/3-visa-and-tools_231388.html&#34;&gt;R&amp;amp;S®VISA&lt;/a&gt;) T&amp;amp;M instrument interfaces support&lt;/li&gt; &#xA; &lt;li&gt;Direct import of EEZ Studio generated IDFs and &lt;strong&gt;Keysight’s Offline Command Expert command&lt;/strong&gt; sets&lt;/li&gt; &#xA; &lt;li&gt;IEXT (Instrument EXTension) catalog with growing number of supported instruments (Rigol, Siglent, Keysight, etc.)&lt;/li&gt; &#xA; &lt;li&gt;History of all activities with search/content filtering&lt;/li&gt; &#xA; &lt;li&gt;Quick navigation via calendar (&#34;heatmap&#34;) or sessions list view&lt;/li&gt; &#xA; &lt;li&gt;Shortcuts (hotkeys and buttons) that can be user defined or come predefined from imported IDF. The shortcut can contain single or sequence of SCPI commands or Javascript code.&lt;/li&gt; &#xA; &lt;li&gt;Javascript code for task automation (e.g. logfile, or programming list upload/download, etc.) can be also assigned to the shortcut&lt;/li&gt; &#xA; &lt;li&gt;SCPI commands context sensitive help with search&lt;/li&gt; &#xA; &lt;li&gt;File upload (instrument to PC) with image preview (e.g. screenshots)&lt;/li&gt; &#xA; &lt;li&gt;File download (PC to instrument) automation for transferring instrument profiles&lt;/li&gt; &#xA; &lt;li&gt;Simple arbitrary waveform editor (envelope and table mode)&lt;/li&gt; &#xA; &lt;li&gt;Displaying measurement data as graphs&lt;/li&gt; &#xA; &lt;li&gt;FFT analysis, harmonics and simple math functions (Period, Frequency, Min, Max, Peak-to-Peak, Average)&lt;/li&gt; &#xA; &lt;li&gt;Export graphs as .CSV file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;New functionality is under development thanks to the sponsorship of the &lt;a href=&#34;https://nlnet.nl/project/EEZ-DIB/&#34;&gt;NGI0 PET&lt;/a&gt; and &lt;a href=&#34;https://nlnet.nl/project/EEZ-Studio/#ack&#34;&gt;NGI0 Entrust&lt;/a&gt; funds from NLnet. The following milestones have been achieved so far:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/issues/102&#34;&gt;M1&lt;/a&gt; - Visual editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/issues/103&#34;&gt;M2&lt;/a&gt; - Interpreter for PC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/issues/104&#34;&gt;M3&lt;/a&gt; - Interpreter for BB3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/issues/134&#34;&gt;M4&lt;/a&gt; - Debugger for PC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/issues/135&#34;&gt;M5&lt;/a&gt; - Debugger for BB3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/0.9.90&#34;&gt;M6&lt;/a&gt; - EEZ flow engine unification&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.91&#34;&gt;M7&lt;/a&gt; - Multilanguage support in project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.92&#34;&gt;M8&lt;/a&gt; - Widgets advanced control&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.93&#34;&gt;M9&lt;/a&gt; - Project templates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.94&#34;&gt;M10&lt;/a&gt; - Gitea.io integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.95&#34;&gt;M11&lt;/a&gt; - New EEZ Flow extensions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.96&#34;&gt;M12&lt;/a&gt; - LVGL integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.98&#34;&gt;M13&lt;/a&gt; - Standalone Flow dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.9.99&#34;&gt;M14&lt;/a&gt; - Home page modifications and enhancements&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.10.1&#34;&gt;M15&lt;/a&gt; - Enhancements (more examples, extension manager, MQTT)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.10.2&#34;&gt;M16&lt;/a&gt; - Online help, enhancements, bug fixing for “Actions”&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.10.3&#34;&gt;M17&lt;/a&gt; - Online help, enhancements, bug fixing for “Widgets”&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.12.0&#34;&gt;M18&lt;/a&gt; - Simultaneous control of multiple instruments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.13.0&#34;&gt;M19&lt;/a&gt; - Support for non-SCPI instruments and devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.14.0&#34;&gt;M20&lt;/a&gt; - Hybrid table/tree/grid widget&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.15.0&#34;&gt;M21&lt;/a&gt; - Project scrapbook&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.16.0&#34;&gt;M22&lt;/a&gt; - Improvement of session-centric work with instruments and data management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eez-open/studio/releases/tag/v0.17.0&#34;&gt;M23&lt;/a&gt; - Multimedia support / Support for networking / other Instruments related&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;64-bit OS is required in all cases.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Depending on your linux distribution, choose one of the listed packages (.deb, .rpm) and start the installation using the associated installer. In addition, there is a self-executing .AppImage version that, after downloading, needs to enable the &lt;code&gt;Allow executing file as program&lt;/code&gt; under file &lt;code&gt;Permissions&lt;/code&gt; before starting it. If you encounter a problem running the .AppImage version on your Linux distribution, try running it using the &lt;code&gt;--no-sandbox&lt;/code&gt; option, i.e. &lt;code&gt;./EEZ-Studio-[version].AppImage --no-sandbox&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;p&gt;Download &lt;code&gt;eezstudio-mac.zip&lt;/code&gt;, unpack and move &lt;code&gt;eezstudio.app&lt;/code&gt; to Applications.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Download and start &lt;code&gt;EEZ_Studio_setup.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;p&gt;The Nix flake provides a derivation for EEZ Studio or an overlay that provides that derivation. It can be used to install the project using &lt;a href=&#34;https://nixos.org/&#34;&gt;Nix package manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build and run from source (all operating systems)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;Node.JS 16.x&lt;/code&gt; or newer&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;node-gyp&lt;/code&gt;, more information at &lt;a href=&#34;https://github.com/nodejs/node-gyp#installation&#34;&gt;https://github.com/nodejs/node-gyp#installation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Only Linux:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential libudev-dev libnss3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Only Raspbian:&lt;/h4&gt; &#xA;&lt;p&gt;Install Node.js 16 and npm on Raspberry Pi: &lt;a href=&#34;https://lindevs.com/install-node-js-and-npm-on-raspberry-pi/&#34;&gt;https://lindevs.com/install-node-js-and-npm-on-raspberry-pi/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential libudev-dev libopenjp2-tools ruby-full&#xA;sudo gem install fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;All platforms:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/eez-open/studio&#xA;cd studio&#xA;npm install&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create distribution packages (except MacOS and Raspbian):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On MacOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dist-mac-arm64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dist-mac-x64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Raspbian:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dist-raspbian&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Nix&lt;/h4&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix build &#39;github:eez-open/studio&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix run &#39;github:eez-open/studio&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USB TMC&lt;/h2&gt; &#xA;&lt;p&gt;The USB TMC driver must be installed if you want to access the T&amp;amp;M instrument using the USB-TMC interface from EEZ Studio &lt;em&gt;Instrument&lt;/em&gt; section.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Download and start &lt;a href=&#34;http://zadig.akeo.ie/&#34;&gt;Zadig&lt;/a&gt;. Select your device, select libusb-win32 and press &#34;Replace Driver&#34; button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eez-open/studio/master/docs/images/usbtmc_zadin_windows.png&#34; alt=&#34;Zadig&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;You will probably need to add your Linux account to the usbtmc group before you can access the instrument using EEZ Studio. Connect your instrument with a USB cable and turn it on. Wait until booting is complete. Now check the instrument group name by entering the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ls -l /dev/usbtmc*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case it is root, enter the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo groupadd usbtmc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, add your account (&#xA; &lt;username&gt;&#xA;  ) to the group:&#xA; &lt;/username&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo usermod -a -G usbtmc &amp;lt;username&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A reboot is required. After that, the gid of &lt;code&gt;/dev/usbtmc0&lt;/code&gt; should be set to &lt;code&gt;usbtmc&lt;/code&gt; and you are ready to use your instrument via USB-TMC interface.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eez-open/studio/wiki/FAQ&#34;&gt;FAQ Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: Where is the database file by default? &lt;strong&gt;A&lt;/strong&gt;: Depending on the operating system, it can be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;~/.config/eezstudio/storage.db&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac: &lt;code&gt;~/Library/Application\ Support/eezstudio/storage.db&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;%appdata%\eezstudio\storage.db&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The default created database as well as its location can be changed later through the options in the &lt;em&gt;Settings&lt;/em&gt; section of EEZ Studio.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: Where are the IEXTs (Instrument EXTensions) used to access T&amp;amp;M instruments stored? &lt;strong&gt;A&lt;/strong&gt;: Depending on the operating system, it can be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;~/.config/eezstudio/extensions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac: &lt;code&gt;~/Library/Application\ Support/eezstudio/extensions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;%appdata%\eezstudio\extensions&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>