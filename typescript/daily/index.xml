<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-12T02:00:45Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DulLabs/bhai-lang</title>
    <updated>2023-12-12T02:00:45Z</updated>
    <id>tag:github.com,2023-12-12:/DulLabs/bhai-lang</id>
    <link href="https://github.com/DulLabs/bhai-lang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A toy programming language written in Typescript&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Bhai Lang&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://lgtm.com/projects/g/DulLabs/bhai-lang/alerts/&#34;&gt;&lt;img alt=&#34;Total alerts&#34; src=&#34;https://img.shields.io/lgtm/alerts/g/DulLabs/bhai-lang.svg?logo=lgtm&amp;amp;logoWidth=18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/DulLabs/bhai-lang/context:javascript&#34;&gt;&lt;img alt=&#34;Language grade: JavaScript&#34; src=&#34;https://img.shields.io/lgtm/grade/javascript/g/DulLabs/bhai-lang.svg?logo=lgtm&amp;amp;logoWidth=18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/DulLabs/bhai-lang/actions/workflows/node.js.yml/badge.svg&#34;&gt;&lt;img alt=&#34;Build&#34; src=&#34;https://github.com/DulLabs/bhai-lang/actions/workflows/node.js.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bhailang.js.org/&#34;&gt;&lt;img alt=&#34;Build&#34; src=&#34;https://img.shields.io/badge/website-bhailang.js.org-orange&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/bhailang&#34;&gt;&lt;img alt=&#34;Build&#34; src=&#34;https://img.shields.io/badge/npm-bhailang-orange&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; This is official repository for bhai-lang.&lt;br&gt;&lt;br&gt; &lt;b&gt;Bhai lang is a toy programming language written in Typescript.&lt;/b&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i -g bhailang&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Usage&lt;/h2&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt;Create a new file (&lt;code&gt;test.bhai&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt;Edit the file with a text editor. You can also try out your code on &lt;a href=&#34;https://bhailang.js.org/#playground&#34;&gt;Bhai Lang PlayGround&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;hi bhai&#xA;  bol bhai &#34;Hello bhai&#34;;&#xA;bye bhai&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt;Run&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;bhailang test.bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;hello bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;General&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;code&gt;hi bhai&lt;/code&gt; is the entrypoint for the program and all program must end with &lt;code&gt;bye bhai&lt;/code&gt;. Anything outside of it will be ignored.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;This will be ignored&#xA;&#xA;hi bhai&#xA;// Write code here&#xA;bye bhai&#xA;&#xA;This too&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Variables&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Variables can be declared using &lt;code&gt;bhai ye hai&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;hi bhai&#xA;  bhai ye hai a = 10;&#xA;  bhai ye hai b = &#34;two&#34;;&#xA;  bhai ye hai c = 15;&#xA;  a = a + 1;&#xA;  b = 21;&#xA;  c *= 2;&#xA;bye bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Types&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Numbers and strings are like other languages. Null values can be denoted using &lt;code&gt;nalla&lt;/code&gt;. &lt;code&gt;sahi&lt;/code&gt; and &lt;code&gt;galat&lt;/code&gt; are the boolean values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;hi bhai&#xA;  bhai ye hai a = 10;&#xA;  bhai ye hai b = 10 + (15*20);&#xA;  bhai ye hai c = &#34;two&#34;;&#xA;  bhai ye hai d = &#39;ok&#39;;&#xA;  bhai ye hai e = nalla;&#xA;  bhai ye hai f = sahi;&#xA;  bhai ye hai g = galat;&#xA;bye bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Built-ins&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Use &lt;code&gt;bol bhai&lt;/code&gt; to print anything to console.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;hi bhai&#xA;  bol bhai &#34;Hello World&#34;;&#xA;  bhai ye hai a = 10;&#xA;  {&#xA;    bhai ye hai b = 20;&#xA;    bol bhai a + b;&#xA;  }&#xA;  bol bhai 5, &#39;ok&#39;, nalla , sahi , galat;&#xA;bye bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Conditionals&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Bhailang supports if-else-if ladder construct , &lt;code&gt;agar bhai&lt;/code&gt; block will execute if condition is &lt;code&gt;sahi&lt;/code&gt;, otherwise one of the subsequently added &lt;code&gt;nahi to bhai&lt;/code&gt; blocks will execute if their respective condition is &lt;code&gt;sahi&lt;/code&gt;, and the &lt;code&gt;warna bhai&lt;/code&gt; block will eventually execute if all of the above conditions are &lt;code&gt;galat&lt;/code&gt; &lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&#xA;hi bhai&#xA;â€ƒâ€ƒbhai ye hai a = 10;&#xA;â€ƒâ€ƒagar bhai (a &amp;lt; 20) {&#xA;    bol bhai &#34;a is less than 20&#34;;&#xA;  } nahi to bhai ( a &amp;lt; 25 ) {&#xA;    bol bhai &#34;a is less than 25&#34;;&#xA;  } warna bhai {&#xA;    bol bhai &#34;a is greater than or equal to 25&#34;;&#xA;  }&#xA;bye bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Loops&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Statements inside &lt;code&gt;jab tak bhai&lt;/code&gt; blocks are executed as long as a specified condition evaluates to sahi. If the condition becomes &lt;code&gt;galat&lt;/code&gt;, statement within the loop stops executing and control passes to the statement following the loop. Use &lt;code&gt;bas kar bhai&lt;/code&gt; to break the loop and &lt;code classname=&#34;language-cpp&#34;&gt;agla dekh bhai&lt;/code&gt; to continue within loop.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;hi bhai&#xA;â€ƒâ€ƒbhai ye hai a = 0;&#xA;â€ƒâ€ƒjab tak bhai (a &amp;lt; 10) {&#xA;â€ƒâ€ƒâ€ƒa += 1;&#xA;â€ƒâ€ƒâ€ƒagar bhai (a == 5) {&#xA;â€ƒâ€ƒâ€ƒâ€ƒbol bhai &#34;andar se bol bhai &#34;, a;&#xA;â€ƒâ€ƒâ€ƒâ€ƒagla dekh bhai;&#xA;â€ƒâ€ƒâ€ƒ}&#xA;â€ƒâ€ƒâ€ƒagar bhai (a == 6) {&#xA;â€ƒâ€ƒâ€ƒâ€ƒbas kar bhai;&#xA;â€ƒâ€ƒâ€ƒ}&#xA;â€ƒâ€ƒâ€ƒbol bhai a;&#xA;â€ƒâ€ƒ}&#xA;â€ƒâ€ƒbol bhai &#34;done&#34;;&#xA;bye bhai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Development&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;You can explore abstract syntax tree(AST) of bhailang &lt;a href=&#34;https://bhailang-ast.netlify.app/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SnosMe/awakened-poe-trade</title>
    <updated>2023-12-12T02:00:45Z</updated>
    <id>tag:github.com,2023-12-12:/SnosMe/awakened-poe-trade</id>
    <link href="https://github.com/SnosMe/awakened-poe-trade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ’² ðŸ”¨ Path of Exile trading app for price checking&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://web.poecdn.com/image/Art/2DItems/Currency/TransferOrb.png&#34; alt=&#34;Awakener&#39;s Orb&#34;&gt; Awakened PoE Trade&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://somsubhra.github.io/github-release-stats/?username=SnosMe&amp;amp;repository=awakened-poe-trade&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4292308/153364874-dde23599-278c-4350-8d86-dadbc4b978b3.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://patreon.com/awakened_poe_trade&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4292308/153364769-e4fe1e82-1bbc-46ac-8a3c-f5a98a5667cc.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/SnosMe/awakened-poe-trade/issues/22&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4292308/153364565-7a545d26-e617-4a33-a919-ff90d8feda3d.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;âž¡ &lt;a href=&#34;https://snosme.github.io/awakened-poe-trade/download&#34;&gt;Download for Windows &amp;amp; Linux&lt;/a&gt; â¬…&lt;/p&gt; &#xA;&lt;h2&gt;Tool showcase&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Gem&lt;/th&gt; &#xA;   &lt;th&gt;Rare&lt;/th&gt; &#xA;   &lt;th&gt;Unique&lt;/th&gt; &#xA;   &lt;th&gt;Currency&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://i.imgur.com/LTsH2DZ.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://i.imgur.com/2XL5Wl8.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://i.imgur.com/UTV6prE.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://i.imgur.com/dQ9Sns6.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/SnosMe/awakened-poe-trade/master/DEVELOPING.md&#34;&gt;DEVELOPING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgments&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kwhat/libuiohook&#34;&gt;libuiohook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brather1ng/RePoE&#34;&gt;RePoE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.poeprices.info/&#34;&gt;poeprices.info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://poe.ninja/&#34;&gt;poe.ninja&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/MATqhv7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>