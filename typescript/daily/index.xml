<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-04T01:44:39Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bclswl0827/ChatGemini</title>
    <updated>2024-02-04T01:44:39Z</updated>
    <id>tag:github.com,2024-02-04:/bclswl0827/ChatGemini</id>
    <link href="https://github.com/bclswl0827/ChatGemini" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✨ ChatGemini 是一个基于 Google Gemini 的网页客户端，对标 ChatGPT 3.5，操作逻辑同 ChatGPT 3.5 一致，同时支持在聊天中上传图片，应用会自动调用 Gemini-Pro-Vision 模型进行识图。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGemini&lt;/h1&gt; &#xA;&lt;p&gt;ChatGemini 是一个基于 Google Gemini 的网页客户端，对标 ChatGPT 3.5，使用逻辑同 ChatGPT 3.5 一致，同时支持在聊天中上传图片，自动调用 Gemini-Pro-Vision 模型进行识图。&lt;/p&gt; &#xA;&lt;p&gt;本项目还可自定义 Gemini API 服务器地址，用户可将本项目部署至支持 PHP 的服务器或虚拟主机上，或是自行配置 Nginx 反向代理，透过修改 Gemini API 路径，从而在中国大陆无障碍使用。&lt;/p&gt; &#xA;&lt;p&gt;如果您对本项目感兴趣，欢迎 Star 和 Fork。&lt;/p&gt; &#xA;&lt;h2&gt;功能特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;适配移动端&lt;/li&gt; &#xA; &lt;li&gt;支持多 API 密钥分流&lt;/li&gt; &#xA; &lt;li&gt;操作逻辑同 ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;仿 ChatGPT 3.5 界面&lt;/li&gt; &#xA; &lt;li&gt;支持多轮聊天对话&lt;/li&gt; &#xA; &lt;li&gt;支持上传图片进行识别&lt;/li&gt; &#xA; &lt;li&gt;逐字输出（SSE）回应&lt;/li&gt; &#xA; &lt;li&gt;集成 PHP 版反向代理&lt;/li&gt; &#xA; &lt;li&gt;自定义 Gemini API 地址&lt;/li&gt; &#xA; &lt;li&gt;可启用站点通行码防止滥用&lt;/li&gt; &#xA; &lt;li&gt;聊天内容导出（HTML 和 PDF）&lt;/li&gt; &#xA; &lt;li&gt;对话内容保存在 IndexedDB 中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;演示站点（需翻墙）&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ibcl.us/ChatGemini&#34;&gt;ChatGemini&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;界面预览&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;点击展开网页效果&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;功能&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;预览&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;主界面&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/home.png&#34; alt=&#34;主界面&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;多轮聊天&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/chat.png&#34; alt=&#34;多轮聊天&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;附件识图&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/attachment.png&#34; alt=&#34;附件识图&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;逐字输出回应&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/sse.png&#34; alt=&#34;逐字输出回应&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;聊天导出 HTML&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/export_html.png&#34; alt=&#34;聊天导出 HTML&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;聊天导出 PDF&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/preview/export_pdf.png&#34; alt=&#34;聊天导出 PDF&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;应用部署&lt;/h2&gt; &#xA;&lt;p&gt;请确保您已经得到 Gemini API 密钥，有关 Gemini API 的申请，请前往 &lt;a href=&#34;https://makersuite.google.com/app/apikey&#34;&gt;Google AI Studio&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;手动部署&lt;/h3&gt; &#xA;&lt;p&gt;确保已安装 &lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;Node.js&lt;/a&gt; 和 &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;准备工作完成后，执行以下步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;将仓库 clone 至本地&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/bclswl0827/ChatGemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;进入项目目录&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd ChatGemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;安装依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;修改配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;参考下方的 &lt;a href=&#34;https://raw.githubusercontent.com/bclswl0827/ChatGemini/master/#%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE&#34;&gt;应用配置&lt;/a&gt; 章节&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;构建项目&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;部署项目&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;将 &lt;code&gt;build&lt;/code&gt; 目录下的文件部署至服务器或虚拟主机上&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Docker 部署&lt;/h3&gt; &#xA;&lt;p&gt;确保服务器上已安装 &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;，然后执行以下步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;拉取镜像&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker pull ghcr.io/bclswl0827/chatgemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;运行容器&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d \&#xA;    --name chatgemini \&#xA;    --restart always \&#xA;    --publish 8080:8080 \&#xA;    --env REACT_APP_GEMINI_API_KEY=&#34;您的密钥&#34; \&#xA;    ghcr.io/bclswl0827/chatgemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;若要在 Docker 版本中启用自动设定的 Nginx 反向代理，请将 &lt;code&gt;REACT_APP_GEMINI_API_URL&lt;/code&gt; 变量值设为 &lt;code&gt;__use_nginx__&lt;/code&gt;，即在创建容器时加上 &lt;code&gt;--env REACT_APP_GEMINI_API_URL=&#34;__use_nginx__&#34;&lt;/code&gt; 参数&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;访问应用&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;访问 &lt;code&gt;http://&amp;lt;IP&amp;gt;:8080&lt;/code&gt; 即可&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Vercel 部署&lt;/h3&gt; &#xA;&lt;p&gt;本项目支持 Vercel 一键部署，点击下方按钮即可部署至 Vercel 平台。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fbclswl0827%2FChatGemini&amp;amp;env=REACT_APP_GEMINI_API_KEY&amp;amp;envDescription=REACT_APP_GEMINI_API_KEY%20is%20essential&amp;amp;envLink=https%3A%2F%2Fgithub.com%2Fbclswl0827%2FChatGemini%2Fblob%2Fmaster%2FREADME.md&amp;amp;demo-title=ChatGemini&amp;amp;demo-url=https%3A%2F%2Fibcl.us%2FChatGemini&amp;amp;demo-image=https%3A%2F%2Fraw.githubusercontent.com%2Fbclswl0827%2FChatGemini%2Fmaster%2Fsrc%2Fassets%2Flogo.svg&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;模板中仅留下了必填的 &lt;code&gt;REACT_APP_GEMINI_API_KEY&lt;/code&gt; 变量， 在部署完成过后，若需修改或新增配置，请前往 Vercel 控制台，点击对应项目，再点击 &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Environment Variables&lt;/code&gt; 进行修改。修改完成后，需要在 Vercel 控制台重新触发部署，以使新配置生效。&lt;/p&gt; &#xA;&lt;h2&gt;保持更新&lt;/h2&gt; &#xA;&lt;h3&gt;若使用手动部署&lt;/h3&gt; &#xA;&lt;p&gt;若使用手动部署，可透过以下步骤保持更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;进入项目目录&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd ChatGemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;拉取最新代码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;安装依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;重新构建项目&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;部署项目&lt;/li&gt; &#xA; &lt;li&gt;重启服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;若使用 Docker 部署&lt;/h3&gt; &#xA;&lt;p&gt;若是使用传统 &lt;code&gt;docker run&lt;/code&gt; 指令部署的版本，可透过以下步骤保持更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;删除旧容器&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker rm -f chatgemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;拉取最新镜像&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker pull ghcr.io/bclswl0827/chatgemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;运行新容器&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d \&#xA;    --name chatgemini \&#xA;    --restart always \&#xA;    --publish 8080:8080 \&#xA;    --env REACT_APP_GEMINI_API_KEY=&#34;您的密钥&#34; \&#xA;    ghcr.io/bclswl0827/chatgemini&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若是使用 &lt;code&gt;docker-compose&lt;/code&gt; 指令部署的版本，可透过以下步骤保持更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;进入 &lt;code&gt;docker-compose.yml&lt;/code&gt; 所在目录&lt;/li&gt; &#xA; &lt;li&gt;拉取最新镜像&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;重启容器&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose up -d --remove-orphans&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;移除旧镜像（可选）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker image prune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;若使用 Vercel 部署&lt;/h3&gt; &#xA;&lt;p&gt;使用 Vercel 部署的项目，平台会在用户 GitHub 仓库创建一个新仓库，而不是 Fork 本仓库，因此无法正确检测更新。请按照下列步骤手动更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;删掉由 Vercel 创建的仓库&lt;/li&gt; &#xA; &lt;li&gt;使用页面右上角的 Fork 按钮，Fork 本项目&lt;/li&gt; &#xA; &lt;li&gt;在 Vercel 重新选择并部署 Fork 后的项目并完成部署&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Fork 后的仓库，由于 GitHub 存在限制，需要手动去您 Fork 后仓库的 Actions 页面启用 Workflows，并启用 Upstream Sync Action，启用之后即可开启每小时定时自动同步上游代码。&lt;/p&gt; &#xA;&lt;h2&gt;应用配置&lt;/h2&gt; &#xA;&lt;p&gt;项目基础配置位于根目录下的 &lt;code&gt;.env&lt;/code&gt; 文件中，手动部署时，请创建该文件并根据实际情况进行配置；若使用 Docker 方式部署，请在创建容器时传入 &lt;code&gt;--env&lt;/code&gt; 参数进行配置。&lt;/p&gt; &#xA;&lt;p&gt;配置格式均为 &lt;code&gt;KEY=&#34;VALUE&#34;&lt;/code&gt;，建议使用双引号包裹值，例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_GEMINI_API_KEY=&#34;您的密钥&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;各配置项说明如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;配置项&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;必填&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;可选值&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;说明&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_GEMINI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;|&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;空&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;填入 Gemini API 密钥，多个以 &lt;code&gt;|&lt;/code&gt; 分隔&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;存在多个密钥时，每次应用加载时随机选用一个&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_GEMINI_API_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;空&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自定义 Gemini API 地址，具体参考下方说明&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_GEMINI_API_SSE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;true&lt;/code&gt;|&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是否逐字输出 Gemini 回应，即是否使能 SSE&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_TITLE_SITE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;ChatGemini&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;站点标题，将显示在浏览器标签页上&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_TITLE_HEADER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;Gemini Pro&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;应用标题，显示在应用侧边栏和头部&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;REACT_APP_PASSCODE_MD5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;否&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;string&lt;/code&gt;|&lt;code&gt;string[]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;空&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MD5 格式通行码，多个以 &lt;code&gt;|&lt;/code&gt; 分隔&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;存在多个通行码时，任意一个通过验证即可登入&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;站点通行码&lt;/h3&gt; &#xA;&lt;p&gt;启用通行码后，用户在每次访问应用时，需要先输入通行码，才能开始使用应用。&lt;/p&gt; &#xA;&lt;p&gt;若要为您的站点启用通行码，可以在 &lt;code&gt;.env&lt;/code&gt; 中的 &lt;code&gt;REACT_APP_PASSCODE_MD5&lt;/code&gt; 字段填入 MD5 格式的通行码，多个以 &lt;code&gt;|&lt;/code&gt; 分隔，例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_PASSCODE_MD5=&#34;E10ADC3949BA59ABBE56E057F20F883E|C33367701511B4F6020EC61DED352059&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;要生成 MD5 格式的通行码，可以使用相关在线工具，例如 &lt;a href=&#34;https://passwordsgenerator.net/md5-hash-generator/&#34;&gt;MD5 Hash Generator&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意：本应用通行码为无盐值 MD5 格式，有一定概率被破解，因此请勿将您的重要密码作为通行码。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;直连 Gemini API&lt;/h3&gt; &#xA;&lt;p&gt;若要直连 Gemini API，请将 &lt;code&gt;.env&lt;/code&gt; 中的 &lt;code&gt;REACT_APP_GEMINI_API_URL&lt;/code&gt; 字段留空，即：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_GEMINI_API_URL=&#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nginx 反向代理 Gemini API&lt;/h3&gt; &#xA;&lt;p&gt;若要使用 Nginx 反向代理，请将 &lt;code&gt;.env&lt;/code&gt; 中的 &lt;code&gt;REACT_APP_GEMINI_API_URL&lt;/code&gt; 修改为反向代理后的地址，例如 &lt;code&gt;https://example.org/api&lt;/code&gt;，即：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_GEMINI_API_URL=&#34;https://example.org/api&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;若反代同网站位于相同基础路径下，也可简写为 &lt;code&gt;/api&lt;/code&gt;，跨域则须填写完整地址。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;下面是一个 Nginx 反代配置示例供参考，路径以 &lt;code&gt;/api&lt;/code&gt; 为例：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;location /api {&#xA;    proxy_http_version 1.1;&#xA;    proxy_read_timeout 86400s;&#xA;    proxy_cache off; # 注意关闭缓存&#xA;    proxy_buffering off; # 注意关闭缓冲&#xA;    proxy_pass https://generativelanguage.googleapis.com/;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PHP 反向代理 Gemini API&lt;/h3&gt; &#xA;&lt;p&gt;若部署平台不允许修改 Nginx 配置，但是提供 PHP 环境，或是您有闲置的 PHP 虚拟主机，可以考虑使用项目集成的 PHP 反向代理，脚本位于 &lt;code&gt;public/gemini.php&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;要使用 PHP 反向代理，&lt;strong&gt;请修改 PHP 脚本中的 &lt;code&gt;ACCESS_TOKEN&lt;/code&gt; 定义后&lt;/strong&gt;，将 PHP 脚本上传到相应平台，再修改 &lt;code&gt;.env&lt;/code&gt; 中的 &lt;code&gt;REACT_APP_GEMINI_API_URL&lt;/code&gt; 为 &lt;code&gt;https://example.org/gemini.php?token=&amp;lt;您定义的 Access Token&amp;gt;&amp;amp;path=&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;Access Token 以 &lt;code&gt;Nt6PRcQ2BZ8FY9y7Lnk35S&lt;/code&gt; 为例，即：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_GEMINI_API_URL=&#34;https://example.org/gemini.php?token=Nt6PRcQ2BZ8FY9y7Lnk35S&amp;amp;path=&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;若反代同网站位于相同基础路径下，也可简写为 &lt;code&gt;/gemini.php?token=Nt6PRcQ2BZ8FY9y7Lnk35S&amp;amp;path=&lt;/code&gt;，跨域则须填写完整地址。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Netlify 反向代理 Gemini API&lt;/h3&gt; &#xA;&lt;p&gt;Netlify 亦可以用于反向代理 Gemini API，有关使用方法和部署链接，请前往 &lt;a href=&#34;https://github.com/antergone/palm-netlify-proxy&#34;&gt;antergone/palm-netlify-proxy&lt;/a&gt; 查看。&lt;/p&gt; &#xA;&lt;p&gt;部署好应用过后，分配的域名以 &lt;code&gt;example.netlify.app&lt;/code&gt; 为例，即：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REACT_APP_GEMINI_API_URL=&#34;https://example.netlify.app&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;开源许可&lt;/h2&gt; &#xA;&lt;p&gt;本项目基于 MIT 协议开源，具体请参阅 &lt;a href=&#34;https://github.com/bclswl0827/ChatGemini/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=bclswl0827/ChatGemini&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>benvinegar/counterscale</title>
    <updated>2024-02-04T01:44:39Z</updated>
    <id>tag:github.com,2024-02-04:/benvinegar/counterscale</id>
    <link href="https://github.com/benvinegar/counterscale" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scalable web analytics you run yourself on Cloudflare&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Counterscale&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/benvinegar/counterscale/main/public/counterscale-logo-300x300.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/benvinegar/counterscale/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;ci status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/benvinegar/counterscale&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/benvinegar/counterscale/graph/badge.svg?token=NUHURNB682&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Counterscale is a simple web analytics tracker and dashboard that you self-host on Cloudflare.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s designed to be easy to deploy and maintain, and should cost you near-zero to operate –&amp;nbsp;even at high levels of traffic (Cloudflare&#39;s &lt;a href=&#34;https://developers.cloudflare.com/workers/platform/pricing/#workers&#34;&gt;free tier&lt;/a&gt; could hypothetically support up to 100k hits/day).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE: Counterscale is currently in very early development and shouldn&#39;t be used in any actual production setting. We welcome people trying it and giving feedback/contributing, but heads up this project is still super early.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t have one already, &lt;a href=&#34;https://dash.cloudflare.com/sign-up&#34;&gt;create a Cloudflare account here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to your Cloudflare dashboard and set up a Cloudflare Workers subdomain&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://developers.cloudflare.com/analytics/analytics-engine/get-started/&#34;&gt;Cloudflare Analytics Engine beta&lt;/a&gt; for your account&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://developers.cloudflare.com/fundamentals/api/get-started/create-token/&#34;&gt;Cloudflare API token&lt;/a&gt;. This token needs &lt;code&gt;Account.Account Analytics&lt;/code&gt; permissions at a minimum.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npx wrangler secret put CF_BEARER_TOKEN&lt;/code&gt; → when prompted, paste the API token you created&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npx wrangler secret put CF_ACCOUNT_ID&lt;/code&gt; → when prompted, paste your Cloudflare Account ID&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run deploy&lt;/code&gt; –&amp;nbsp;this will do two things: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Create a new worker, &lt;code&gt;counterscale&lt;/code&gt;, now visible under &lt;em&gt;Workers and Pages&lt;/em&gt; in Cloudflare&lt;/li&gt; &#xA;   &lt;li&gt;Create a new Analytics Engine dataset, called &lt;code&gt;metricsDataset&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;It should now be live. Visit &lt;code&gt;https://counterscale.{yoursubdomain}.workers.dev&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If the website is not immediately available (e.g. &#34;Secure Connection Failed&#34;), it could be because Cloudflare has not yet activated your subdomain (yoursubdomain.workers.dev). This process can take a minute; you can check in on the progress by visiting the newly created worker in your Cloudflare dashboard (Workers &amp;amp; Pages → counterscale).&lt;/p&gt; &#xA;&lt;h3&gt;Custom Domains&lt;/h3&gt; &#xA;&lt;p&gt;The deployment URL can always be changed to go behind a custom domain you own. &lt;a href=&#34;https://developers.cloudflare.com/workers/configuration/routing/custom-domains/&#34;&gt;More here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing the Tracker&lt;/h2&gt; &#xA;&lt;p&gt;When Counterscale is deployed, it makes &lt;code&gt;tracker.js&lt;/code&gt; available at the URL you deployed to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://counterscale.{yoursubdomain}.workers.dev/tracker.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start tracking website traffic on your web property, copy/paste the following snippet into your website HTML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script&amp;gt;&#xA;(function () {&#xA;    window.counterscale = {&#xA;        q: [&#xA;            [&#34;set&#34;, &#34;siteId&#34;, &#34;your-unique-site-id&#34;],&#xA;            [&#34;trackPageview&#34;],&#xA;        ],&#xA;    };&#xA;})();&#xA;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script id=&#34;counterscale-script&#34; src=&#34;https://counterscale.{yoursubdomain}.workers.dev/tracker.js&#34; defer&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be sure to replace &lt;code&gt;your-unique-site-id&lt;/code&gt; with a unique string/slug representing your web property. Use a unique site ID for each property you place the tracking script on.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;To get started, in the project root, copy &lt;code&gt;.dev.vars.example&lt;/code&gt; to &lt;code&gt;.dev.vars&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open &lt;code&gt;.dev.vars&lt;/code&gt; and enter the same values for &lt;code&gt;CF_BEARER_TOKEN&lt;/code&gt; and &lt;code&gt;CF_ACCOUNT_ID&lt;/code&gt; you used earlier.&lt;/p&gt; &#xA;&lt;h3&gt;Running the Server&lt;/h3&gt; &#xA;&lt;p&gt;Counterscale is built on Remix and Cloudflare Workers. In development, you&#39;ll run two servers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Remix development server&lt;/li&gt; &#xA; &lt;li&gt;The Miniflare server (local environment for Cloudflare Workers)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You run both using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards, the dashboard should be visible at &lt;a href=&#34;http://127.0.0.1:8787&#34;&gt;http://127.0.0.1:8787&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to check the production build, you can stop the dev server and run following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run build&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then refresh the same URL in your browser (no live reload for production builds).&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;p&gt;There is only one &#34;database&#34;: the Cloudflare Analytics Engine dataset, which is communicated entirely over HTTP using Cloudflare&#39;s API.&lt;/p&gt; &#xA;&lt;p&gt;Right now there is no local &#34;test&#34; database. This means in local development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Writes will no-op (no hits will be recorded)&lt;/li&gt; &#xA; &lt;li&gt;Reads will be read from the production Analaytics Engine dataset (local development shows production data)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>code100x/cms</title>
    <updated>2024-02-04T01:44:39Z</updated>
    <id>tag:github.com,2024-02-04:/code100x/cms</id>
    <link href="https://github.com/code100x/cms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Setup procedure -&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy .env.example to .env&lt;/li&gt; &#xA; &lt;li&gt;Get a postgres db from &lt;a href=&#34;https://neon.tech/&#34;&gt;https://neon.tech/&lt;/a&gt; (or any other provider)&lt;/li&gt; &#xA; &lt;li&gt;replace the DATABASE_URL in .env&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npx prisma migrate dev&lt;/code&gt; to setup schema&lt;/li&gt; &#xA; &lt;li&gt;cd migrations, Seed SQL data -&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    psql -h your_db_host -d your_db -U your_username  &amp;lt; neondb_backup.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    psql -h ep-super-wildflower-a5sqjjhz.us-east-2.aws.neon.tech -d neondb -U harkirat  &amp;lt; neondb_backup.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;npm install&lt;/li&gt; &#xA; &lt;li&gt;npm run dev&lt;/li&gt; &#xA; &lt;li&gt;Login using any userid and password 123456&lt;/li&gt; &#xA; &lt;li&gt;You should be able to see some test courses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/code100x/cms/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to start making contributions&lt;/p&gt;</summary>
  </entry>
</feed>