<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-11T01:45:25Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Orillusion/orillusion</title>
    <updated>2023-05-11T01:45:25Z</updated>
    <id>tag:github.com,2023-05-11:/Orillusion/orillusion</id>
    <link href="https://github.com/Orillusion/orillusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Orillusion is a pure Web3D rendering engine which is fully developed based on the WebGPU standard.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/Orillusion/orillusion-webgpu-samples/raw/main/logo_new.png&#34; alt=&#34;Cover Art&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Orillusion&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Orillusion/orillusion/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/Orillusion/orillusion/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@orillusion/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@orillusion/core&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Orillusion&lt;/code&gt; is a pure Web3D rendering engine which is fully developed based on the &lt;code&gt;WebGPU&lt;/code&gt; standard. It aims to achieve desktop-level rendering effects and supports 3D rendering of complex scenes in the browser.&lt;/p&gt; &#xA;&lt;h2&gt;Need to know&lt;/h2&gt; &#xA;&lt;p&gt;Beta version, &lt;strong&gt;NOT&lt;/strong&gt; recommended for any commercial application.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;NPM&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using front-end build tools for developing Web3D applications, such &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt; or &lt;a href=&#34;https://webpack.js.org/&#34;&gt;Webpack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;npm install @orillusion/core --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import on-demand:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { Engine3D, Camera3D } from &#39;@orillusion/core&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Import globally:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as Orillusion from &#39;@orillusion/core&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CDN&lt;/h3&gt; &#xA;&lt;p&gt;In order to use the engine more conveniently, we support to use native &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to import &lt;code&gt;Orillusion&lt;/code&gt;. Three different ways to import using the official &lt;code&gt;CDN&lt;/code&gt; link:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Global Build:&lt;/strong&gt; You can use &lt;code&gt;Orillusion&lt;/code&gt; directly from a CDN via a script tag:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://unpkg.com/@orillusion/core/dist/orillusion.umd.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script&amp;gt;  &#xA;    const { Engine3D, Camera3D } = Orillusion  &#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above link loads the global build of &lt;code&gt;Orillusion&lt;/code&gt;, where all top-level APIs are exposed as properties on the global &lt;code&gt;Orillusion&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESModule Build:&lt;/strong&gt; We recommend using the &lt;a href=&#34;https://developer.mozilla.org/docs/Web/JavaScript/Guide/Modules&#34;&gt;ESModule&lt;/a&gt; way for development. As most browsers have supported &lt;code&gt;ES&lt;/code&gt; module, we just need to import the &lt;code&gt;ES&lt;/code&gt; build version of &lt;code&gt;orillusion.es.js&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;  &#xA;    import { Engine3D, Camera3D } from &#34;https://unpkg.com/@orillusion/core/dist/orillusion.es.js&#34; &#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import Maps:&lt;/strong&gt; In order to manage the name of dependencies, we recommend using &lt;a href=&#34;https://caniuse.com/import-maps&#34;&gt;Import Maps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- Define the name or address of ES Module --&amp;gt;  &#xA;&amp;lt;script  type=&#34;importmap&#34;&amp;gt;  &#xA;{  &#xA;    &#34;imports&#34;: { &#34;@orillusion/core&#34;: &#34;https://unpkg.com/@orillusion/core/dist/orillusion.es.js&#34; }  &#xA;}  &#xA;&amp;lt;/script&amp;gt;  &#xA;&amp;lt;!-- Customerized names could be imported --&amp;gt;  &#xA;&amp;lt;script  type=&#34;module&#34;&amp;gt;  &#xA;    import { Engine3D, Camera3D } from &#34;@orillusion/core&#34;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Create Engine3D instance&lt;/h3&gt; &#xA;&lt;p&gt;At the beginning, we need to use &lt;code&gt;Engine3D.init()&lt;/code&gt; and then the instance &lt;code&gt;Engine3D&lt;/code&gt; will be created for further use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { Engine3D } from &#39;@orillusion/core&#39; &#xA;Engine3D.init().then(()=&amp;gt;{  &#xA;    // Next&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As &lt;code&gt;Engine3D.init()&lt;/code&gt; is asynchronous, we recommend using &lt;code&gt;async/await&lt;/code&gt; in the code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { Engine3D } from &#39;@orillusion/core&#39;  &#xA;async function demo(){  &#xA;    await Engine3D.init();  &#xA;    // Next &#xA;}  &#xA;demo()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create canvas&lt;/h3&gt; &#xA;&lt;p&gt;In default, &lt;code&gt;Engine3D.init()&lt;/code&gt;will create a &lt;code&gt;canvas&lt;/code&gt; the same size with the window. Also, we could create a &lt;code&gt;canvas&lt;/code&gt; manually using tag &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; with a &lt;code&gt;id&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;canvas id=&#34;canvas&#34; width=&#34;800&#34; height=&#34;500&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, we need to get the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; via &lt;code&gt;id&lt;/code&gt; and then init engine by passing the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; to &lt;code&gt;canvasConfig&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { Engine3D } from &#39;@orillusion/core&#39;;  &#xA;let canvas = document.getElementById(&#39;canvas&#39;)  &#xA;&#xA;await Engine3D.init({  &#xA;    canvasConfig: { canvas }  &#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://www.orillusion.com/guide/&#34;&gt;Docs&lt;/a&gt; to Learn More.&lt;/p&gt; &#xA;&lt;h2&gt;Platform&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chrome Desktop: 113+&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Edge Desktop: 113+&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.orillusion.com/&#34;&gt;Official Web Site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.orillusion.com/guide/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.orillusion.com/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dev and Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://raw.githubusercontent.com/Orillusion/orillusion/main/.github/contributing.md&#34;&gt;Contributing Guide&lt;/a&gt; before developing or making a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Orillusion engine is released under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chaitin/safeline</title>
    <updated>2023-05-11T01:45:25Z</updated>
    <id>tag:github.com,2023-05-11:/chaitin/safeline</id>
    <link href="https://github.com/chaitin/safeline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;长亭科技自研，基于业界领先的语义引擎检测技术，打造的简洁、易用的免费 WAF&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/veinmind/safeline-assets/safeline_logo.png&#34; width=&#34;120&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;SafeLine Community Edition&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Keep hackers at bay&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/SafeLine-BEST_WAF-blue&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/chaitin/safeline.svg?color=blue&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/chaitin/safeline.svg?color=blue&amp;amp;label=update&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/v/chaitin/safeline-mgt-api?color=blue&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/chaitin/safeline?style=social&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://waf-ce.chaitin.cn/&#34;&gt;Official Website&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; English | &lt;a href=&#34;https://raw.githubusercontent.com/chaitin/safeline/main/README_CN.md&#34;&gt;中文文档&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;A simple and easy to use WAF tool. Built on &lt;a href=&#34;https://www.chaitin.cn/en/&#34;&gt;Chaitin Technology&lt;/a&gt;&#39;s ace 🤖️Intelligent Semantic Analysis algorithm🤖️, designed for the community.&lt;/p&gt; &#xA;&lt;h2&gt;✨ Demo&lt;/h2&gt; &#xA;&lt;h3&gt;🔥🔥🔥 Online Demo: &lt;a href=&#34;https://demo.waf-ce.chaitin.cn:9443/&#34;&gt;https://demo.waf-ce.chaitin.cn:9443/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;There is a simple http server, listened on &lt;code&gt;http://127.0.0.1:8889&lt;/code&gt;, can be used as for testing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/veinmind/safeline-assets/safeline_detect_log.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/veinmind/safeline-assets/safeline_website.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Installation&lt;/h2&gt; &#xA;&lt;h3&gt;1. Make sure &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Compose V2&lt;/a&gt; are installed correctly on the machine&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker info # &amp;gt;= 20.10.6&#xA;docker compose version # &amp;gt;= 2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Setup and deploy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p safeline &amp;amp;&amp;amp; cd safeline&#xA;# setup&#xA;curl -kfLsS https://waf-ce.chaitin.cn/release/latest/setup.sh | bash&#xA;&#xA;# launch&#xA;sudo docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Upgrade&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARN: SafeLine will be restarted and your traffic will be unavailable for a short period of time. You may need to choose a proper time for upgration.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -kfLsS https://waf-ce.chaitin.cn/release/latest/upgrade.sh | bash&#xA;&#xA;# replace with `docker-compose` if necessary.&#xA;docker compose down &amp;amp;&amp;amp; docker compose pull &amp;amp;&amp;amp; docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🕹️ Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;1. Login&lt;/h3&gt; &#xA;&lt;p&gt;Open admin page &lt;code&gt;https://&amp;lt;waf-ip&amp;gt;:9443&lt;/code&gt; and scan qrcode with any authenticator Apps that support TOTP, enter the code to login.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/veinmind/safeline-assets/safeline_login.gif&#34; alt=&#34;safeline_login.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Create website&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/veinmind/safeline-assets/safeline_website.gif&#34; alt=&#34;safeline_website.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;font color=&#34;grey&#34;&gt;💡 TIPS: After creating website，execute &lt;code&gt;curl -H &#34;Host: &amp;lt;Domain&amp;gt;&#34; http://&amp;lt;WAF IP&amp;gt;:&amp;lt;Port&amp;gt;&lt;/code&gt; to check if you can get correct response from web server.&lt;/font&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. Deploy your website to SafeLine&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If your website is hosted by DNS, just modify your DNS record to WAF&lt;/li&gt; &#xA; &lt;li&gt;If your website is behind any reverse-proxy like nginx, you can modify your nginx conf and set upstream to WAF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Protected!👌&lt;/h3&gt; &#xA;&lt;p&gt;Try these:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;http://&amp;lt;IP or Domain&amp;gt;:&amp;lt;Port&amp;gt;/webshell.php&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http://&amp;lt;IP or Domain&amp;gt;:&amp;lt;Port&amp;gt;/?id=1%20AND%201=1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http://&amp;lt;IP or Domain&amp;gt;:&amp;lt;Port&amp;gt;/?a=&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/chaitin/safeline/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt; first if you have any questions.&lt;/p&gt; &#xA;&lt;p&gt;For examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chaitin/safeline/main/FAQ.md#docker-compose-or-docker-compose&#34;&gt;docker compose or docker-compose?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chaitin/safeline/main/FAQ.md#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98&#34;&gt;website configurations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chaitin/safeline/main/FAQ.md#%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E4%B9%8B%E5%90%8E%E8%BF%98%E6%98%AF%E6%B2%A1%E6%9C%89%E6%88%90%E5%8A%9F%E8%AE%BF%E9%97%AE%E5%88%B0%E4%B8%8A%E6%B8%B8%E6%9C%8D%E5%8A%A1%E5%99%A8&#34;&gt;website not working / not correctly response&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏘️ Contact Us&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can make bug feedback and feature suggestions directly through GitHub Issues.&lt;/li&gt; &#xA; &lt;li&gt;By scanning the QR code below (use wechat or qq), you can join the discussion group of SafeLine users for detailed discussions.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://waf-ce.chaitin.cn/images/wechat-light.png&#34; width=&#34;30%&#34;&gt; &#xA;&lt;h2&gt;✨ CTStack&lt;/h2&gt; &#xA;&lt;img src=&#34;https://ctstack-oss.oss-cn-beijing.aliyuncs.com/CT%20Stack-2.png&#34; width=&#34;30%&#34;&gt; &#xA;&lt;p&gt;SafeLine has already joined &lt;a href=&#34;https://stack.chaitin.com/tool/detail?id=717&#34;&gt;CTStack&lt;/a&gt; community.&lt;/p&gt; &#xA;&lt;h2&gt;Star History &lt;a name=&#34;star-history&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/chaitin/safeline/stargazers&#34;&gt; &lt;img width=&#34;500&#34; alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=chaitin/safeline&amp;amp;type=Date&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>