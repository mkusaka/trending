<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-27T01:40:55Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tensorflow/tfjs</title>
    <updated>2022-10-27T01:40:55Z</updated>
    <id>tag:github.com,2022-10-27:/tensorflow/tfjs</id>
    <link href="https://github.com/tensorflow/tfjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A WebGL accelerated JavaScript library for training and deploying ML models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TensorFlow.js&lt;/h1&gt; &#xA;&lt;p&gt;TensorFlow.js is an open-source hardware-accelerated JavaScript library for training and deploying machine learning models.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Develop ML in the Browser&lt;/strong&gt; &lt;br&gt; Use flexible and intuitive APIs to build models from scratch using the low-level JavaScript linear algebra library or the high-level layers API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Develop ML in Node.js&lt;/strong&gt; &lt;br&gt; Execute native TensorFlow with the same TensorFlow.js API under the Node.js runtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run Existing models&lt;/strong&gt; &lt;br&gt; Use TensorFlow.js model converters to run pre-existing TensorFlow models right in the browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Retrain Existing models&lt;/strong&gt; &lt;br&gt; Retrain pre-existing ML models using sensor data connected to the browser or other client-side data.&lt;/p&gt; &#xA;&lt;h2&gt;About this repo&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the logic and scripts that combine several packages.&lt;/p&gt; &#xA;&lt;p&gt;APIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-core&#34;&gt;TensorFlow.js Core&lt;/a&gt;, a flexible low-level API for neural networks and numerical computation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-layers&#34;&gt;TensorFlow.js Layers&lt;/a&gt;, a high-level API which implements functionality similar to &lt;a href=&#34;https://keras.io/&#34;&gt;Keras&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-data&#34;&gt;TensorFlow.js Data&lt;/a&gt;, a simple API to load and prepare data analogous to &lt;a href=&#34;https://www.tensorflow.org/guide/datasets&#34;&gt;tf.data&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-converter&#34;&gt;TensorFlow.js Converter&lt;/a&gt;, tools to import a TensorFlow SavedModel to TensorFlow.js&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-vis&#34;&gt;TensorFlow.js Vis&lt;/a&gt;, in-browser visualization for TensorFlow.js models&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-automl&#34;&gt;TensorFlow.js AutoML&lt;/a&gt;, Set of APIs to load and run models produced by &lt;a href=&#34;https://cloud.google.com/vision/automl/docs/edge-quickstart&#34;&gt;AutoML Edge&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Backends/Platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-backend-cpu&#34;&gt;TensorFlow.js CPU Backend&lt;/a&gt;, pure-JS backend for Node.js and the browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-backend-webgl&#34;&gt;TensorFlow.js WebGL Backend&lt;/a&gt;, WebGL backend for the browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-backend-wasm&#34;&gt;TensorFlow.js WASM Backend&lt;/a&gt;, WebAssembly backend for the browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-backend-webgpu&#34;&gt;TensorFlow.js WebGPU&lt;/a&gt;, WebGPU backend for the browser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-node&#34;&gt;TensorFlow.js Node&lt;/a&gt;, Node.js platform via TensorFlow C++ adapter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-react-native&#34;&gt;TensorFlow.js React Native&lt;/a&gt;, React Native platform via expo-gl adapter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you care about bundle size, you can import those packages individually.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for Node.js support, check out the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/tfjs-node&#34;&gt;TensorFlow.js Node directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://github.com/tensorflow/tfjs-examples&#34;&gt;examples repository&lt;/a&gt; and our &lt;a href=&#34;https://js.tensorflow.org/tutorials/&#34;&gt;tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;p&gt;Be sure to check out &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tfjs/master/GALLERY.md&#34;&gt;the gallery&lt;/a&gt; of all projects related to TensorFlow.js.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-trained models&lt;/h2&gt; &#xA;&lt;p&gt;Be sure to also check out our &lt;a href=&#34;https://github.com/tensorflow/tfjs-models&#34;&gt;models repository&lt;/a&gt; where we host pre-trained models on NPM.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tfjs-benchmarks.web.app/&#34;&gt;Local benchmark tool&lt;/a&gt;. Use this webpage tool to collect the performance related metrics (speed, memory, etc) of TensorFlow.js models and kernels &lt;strong&gt;on your local device&lt;/strong&gt; with CPU, WebGL or WASM backends. You can benchmark custom models by following this &lt;a href=&#34;https://github.com/tensorflow/tfjs/raw/master/e2e/benchmarks/local-benchmark/README.md&#34;&gt;guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tensorflow/tfjs/tree/master/e2e/benchmarks/browserstack-benchmark/README.md&#34;&gt;Multi-device benchmark tool&lt;/a&gt;. Use this tool to collect the same performance related metrics &lt;strong&gt;on a collection of remote devices&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;There are two main ways to get TensorFlow.js in your JavaScript project: via &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_JavaScript_within_a_webpage&#34; target=&#34;_blank&#34;&gt;script tags&lt;/a&gt; &lt;strong&gt;or&lt;/strong&gt; by installing it from &lt;a href=&#34;https://www.npmjs.com/&#34; target=&#34;_blank&#34;&gt;NPM&lt;/a&gt; and using a build tool like &lt;a href=&#34;https://parceljs.org/&#34; target=&#34;_blank&#34;&gt;Parcel&lt;/a&gt;, &lt;a href=&#34;https://webpack.js.org/&#34; target=&#34;_blank&#34;&gt;WebPack&lt;/a&gt;, or &lt;a href=&#34;https://rollupjs.org/guide/en&#34; target=&#34;_blank&#34;&gt;Rollup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;via Script Tag&lt;/h3&gt; &#xA;&lt;p&gt;Add the following code to an HTML file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;!-- Load TensorFlow.js --&amp;gt;&#xA;    &amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs/dist/tf.min.js&#34;&amp;gt; &amp;lt;/script&amp;gt;&#xA;&#xA;&#xA;    &amp;lt;!-- Place your code in the script tag below. You can also use an external .js file --&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      // Notice there is no &#39;import&#39; statement. &#39;tf&#39; is available on the index-page&#xA;      // because of the script tag above.&#xA;&#xA;      // Define a model for linear regression.&#xA;      const model = tf.sequential();&#xA;      model.add(tf.layers.dense({units: 1, inputShape: [1]}));&#xA;&#xA;      // Prepare the model for training: Specify the loss and the optimizer.&#xA;      model.compile({loss: &#39;meanSquaredError&#39;, optimizer: &#39;sgd&#39;});&#xA;&#xA;      // Generate some synthetic data for training.&#xA;      const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);&#xA;      const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);&#xA;&#xA;      // Train the model using the data.&#xA;      model.fit(xs, ys).then(() =&amp;gt; {&#xA;        // Use the model to do inference on a data point the model hasn&#39;t seen before:&#xA;        // Open the browser devtools to see the output&#xA;        model.predict(tf.tensor2d([5], [1, 1])).print();&#xA;      });&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;&#xA;  &amp;lt;body&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open up that HTML file in your browser, and the code should run!&lt;/p&gt; &#xA;&lt;h3&gt;via NPM&lt;/h3&gt; &#xA;&lt;p&gt;Add TensorFlow.js to your project using &lt;a href=&#34;https://yarnpkg.com/en/&#34; target=&#34;_blank&#34;&gt;yarn&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href=&#34;https://docs.npmjs.com/cli/npm&#34; target=&#34;_blank&#34;&gt;npm&lt;/a&gt;. &lt;b&gt;Note:&lt;/b&gt; Because we use ES2017 syntax (such as &lt;code&gt;import&lt;/code&gt;), this workflow assumes you are using a modern browser or a bundler/transpiler to convert your code to something older browsers understand. See our &lt;a href=&#34;https://github.com/tensorflow/tfjs-examples&#34; target=&#34;_blank&#34;&gt;examples&lt;/a&gt; to see how we use &lt;a href=&#34;https://parceljs.org/&#34; target=&#34;_blank&#34;&gt;Parcel&lt;/a&gt; to build our code. However, you are free to use any build tool that you prefer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import * as tf from &#39;@tensorflow/tfjs&#39;;&#xA;&#xA;// Define a model for linear regression.&#xA;const model = tf.sequential();&#xA;model.add(tf.layers.dense({units: 1, inputShape: [1]}));&#xA;&#xA;// Prepare the model for training: Specify the loss and the optimizer.&#xA;model.compile({loss: &#39;meanSquaredError&#39;, optimizer: &#39;sgd&#39;});&#xA;&#xA;// Generate some synthetic data for training.&#xA;const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);&#xA;const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);&#xA;&#xA;// Train the model using the data.&#xA;model.fit(xs, ys).then(() =&amp;gt; {&#xA;  // Use the model to do inference on a data point the model hasn&#39;t seen before:&#xA;  model.predict(tf.tensor2d([5], [1, 1])).print();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://js.tensorflow.org/tutorials/&#34; target=&#34;_blank&#34;&gt;tutorials&lt;/a&gt;, &lt;a href=&#34;https://github.com/tensorflow/tfjs-examples&#34; target=&#34;_blank&#34;&gt;examples&lt;/a&gt; and &lt;a href=&#34;https://js.tensorflow.org/api/latest/&#34;&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Importing pre-trained models&lt;/h2&gt; &#xA;&lt;p&gt;We support porting pre-trained models from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tensorflow/tfjs-converter&#34;&gt;TensorFlow SavedModel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://js.tensorflow.org/tutorials/import-keras.html&#34;&gt;Keras&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Various ops supported in different backends&lt;/h2&gt; &#xA;&lt;p&gt;Please refer below :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1D25XtWaBrmUEErbGQB0QmNhH-xtwHo9LDl59w0TbxrI/edit#gid=0&#34;&gt;TFJS Ops Matrix&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Find out more&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://js.tensorflow.org&#34;&gt;TensorFlow.js&lt;/a&gt; is a part of the &lt;a href=&#34;https://www.tensorflow.org&#34;&gt;TensorFlow&lt;/a&gt; ecosystem. For more info:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For help from the community, use the &lt;code&gt;tfjs&lt;/code&gt; tag on the &lt;a href=&#34;https://discuss.tensorflow.org/tag/tfjs&#34;&gt;TensorFlow Forum&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://js.tensorflow.org&#34;&gt;TensorFlow.js Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://js.tensorflow.org/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://js.tensorflow.org/api/latest/&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.tensorflow.org/search?label=TensorFlow.js&#34;&gt;TensorFlow.js Blog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks, &lt;a href=&#34;https://www.browserstack.com/&#34;&gt;BrowserStack&lt;/a&gt;, for providing testing support.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OfficeDev/TeamsFx</title>
    <updated>2022-10-27T01:40:55Z</updated>
    <id>tag:github.com,2022-10-27:/OfficeDev/TeamsFx</id>
    <link href="https://github.com/OfficeDev/TeamsFx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Developer tools for building Teams apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Teams Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/sdk-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/sdk-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;SDK CI workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/dotnetsdk-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/dotnetsdk-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;DotNet SDK CI workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/FunctionExtensionCI.yml&#34;&gt;&lt;img src=&#34;https://github.com/OfficeDev/TeamsFx/actions/workflows/FunctionExtensionCI.yml/badge.svg?sanitize=true&#34; alt=&#34;Function Extension CI workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/OfficeDev/TeamsFx/context:javascript&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/javascript/g/OfficeDev/TeamsFx.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: JavaScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/OfficeDev/TeamsFx&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/OfficeDev/TeamsFx/branch/dev/graph/badge.svg?token=QQX8WVOEC3&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Teams Toolkit for Visual Studio, Visual Studio Code, and Command Line Interface (CLI) are tools for building Teams apps, fast. Whether you are new to Teams platform or a seasoned developer, Teams Toolkit is the best way to create, build, debug, test, and deploy apps.&lt;/p&gt; &#xA;&lt;img width=&#34;1350&#34; alt=&#34;MicrosoftTeams-image&#34; src=&#34;https://aka.ms/teamsfx-hero-image&#34;&gt; &#xA;&lt;p&gt;Teams Toolkit provides support for the end-to-end Teams development journey, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for all major Teams extensibility surfaces, including tabs, bots, and message extensions.&lt;/li&gt; &#xA; &lt;li&gt;Integrations with the tools, languages, and frameworks you know and love.&lt;/li&gt; &#xA; &lt;li&gt;Scaffolds for getting started fast with Teams extensibility surfaces and common scenarios such as notifications and command &amp;amp; response-style bots.&lt;/li&gt; &#xA; &lt;li&gt;Rapid iteration with full stack debugging, hot reload, and secure tunneling.&lt;/li&gt; &#xA; &lt;li&gt;Simplified SSO authentication.&lt;/li&gt; &#xA; &lt;li&gt;Integrated support for hosting, data storage, and serverless functions.&lt;/li&gt; &#xA; &lt;li&gt;CI/CD actions for GitHub and Azure DevOps to deliver apps with confidence.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Pick your preferred tool to get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For JavaScript and TypeScript developers, install &lt;a href=&#34;https://docs.microsoft.com/microsoftteams/platform/toolkit/teams-toolkit-fundamentals#install-teams-toolkit-for-visual-studio-code&#34;&gt;Teams Toolkit for Visual Studio Code&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For .NET developers, install &lt;a href=&#34;https://docs.microsoft.com/microsoftteams/platform/toolkit/visual-studio-overview#install-teams-toolkit-for-visual-studio&#34;&gt;Teams Toolkit for Visual Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For command line users, install &lt;a href=&#34;https://docs.microsoft.com/microsoftteams/platform/toolkit/teamsfx-cli#get-started&#34;&gt;Teams Toolkit CLI&lt;/a&gt;: &lt;code&gt;npm install -g @microsoft/teamsfx-cli&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://aka.ms/teamsfx-docs&#34;&gt;Microsoft Teams developer documentation&lt;/a&gt; to get started with building apps with Teams Toolkit today.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Teams Toolkit for Visual Studio, Visual Studio Code, and Command Line Interface (CLI) will be updated regularly with new features and bug fixes to continuously improve end-to-end Teams development experience. Visit our &lt;a href=&#34;https://aka.ms/teamsfx-roadmap&#34;&gt;product roadmap&lt;/a&gt; to find out what&#39;s coming.&lt;/p&gt; &#xA;&lt;h2&gt;Support Policy&lt;/h2&gt; &#xA;&lt;p&gt;Teams Toolkit products will follow &lt;a href=&#34;https://docs.microsoft.com/lifecycle/policies/modern&#34;&gt;Modern Lifecycle Policy&lt;/a&gt; and extended support as described in our &lt;a href=&#34;https://aka.ms/teamsfx-support&#34;&gt;lifecycle and support document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask a question on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/teams-toolkit&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;Request a new feature&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;File an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send an email to &lt;a href=&#34;mailto:ttkfeedback@microsoft.com&#34;&gt;ttkfeedback@microsoft.com&lt;/a&gt; to chat with the product team&lt;/li&gt; &#xA; &lt;li&gt;Report security issues and bugs to the Microsoft Security Response Center (MSRC) via &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. Further information can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue?rtc=1&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the following packages:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Teams Toolkit for Visual Studio Code&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/vscode-extension&#34;&gt;packages/vscode-extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Teams Toolkit for Visual Studio Code enables you to scaffold, run, debug, and deploy custom Teams apps directly from Visual Studio Code. It provides all the features of the Teams Toolkit CLI tool integrated into the IDE, as well as easy access to more samples, docs and tools.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Teams Toolkit CLI&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/cli&#34;&gt;packages/cli&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether you prefer keyboard-centric developer operations, or you are automating your CI/CD pipeline, the Teams Toolkit CLI tool offers the same features as the IDE extensions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SDK&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/sdk&#34;&gt;packages/sdk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The main code library encapsulating simple authentication for both client and server-side code tailored for Teams developers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;API&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/api&#34;&gt;packages/api&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The API package is a collection of contracts supported by the IDE Extensions and CLI. It enables developers to write plugins to extend TeamsFx with new capabilities.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Core&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/fx-core&#34;&gt;packages/fx-core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Core package centralizes implementation of capabilities shared by the IDE Extensions and the CLI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Azure Functions Support&lt;/strong&gt; &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/tree/main/packages/function-extension&#34;&gt;packages/function-extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Teams Toolkit helps developers include server-side code in their Teams application backed by &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/&#34;&gt;Azure Functions&lt;/a&gt;. This plugin adds support to simplify the integration of an authentication-aware Azure Function into your Teams app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;Contributor License Agreement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download our latest daily Builds &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/releases&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out our &lt;a href=&#34;https://github.com/OfficeDev/TeamsFx/raw/main/CONTRIBUTING.md&#34;&gt;contribution&lt;/a&gt; page for more information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;Teams Toolkit collects usage data and sends it to Microsoft to help improve our products and services. Read our &lt;a href=&#34;https://privacy.microsoft.com/privacystatement&#34;&gt;Privacy Statement&lt;/a&gt; and &lt;a href=&#34;https://docs.opensource.microsoft.com/content/releasing/telemetry.html&#34;&gt;Data Collection Notice&lt;/a&gt; to learn more. Learn more in our &lt;a href=&#34;https://code.visualstudio.com/docs/supporting/faq#_how-to-disable-telemetry-reporting&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bdebon/choiceof.dev</title>
    <updated>2022-10-27T01:40:55Z</updated>
    <id>tag:github.com,2022-10-27:/bdebon/choiceof.dev</id>
    <link href="https://github.com/bdebon/choiceof.dev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Developers have to cope with pretty hard choices every day. This is a collection of the most complex and funny choices. What will be yours?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Choiceof.dev&lt;/h1&gt; &#xA;&lt;p&gt;Developers have to cope with pretty hard choices every day. This is a collection of the most complex and funny choices. What will be yours?&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdebon/choiceof.dev/main/readme/github-home.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;🗺 &lt;strong&gt;By the developers for the developers&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to add a question to choiceof.dev&lt;/h2&gt; &#xA;&lt;p&gt;As it is a project by the developers for the developers, we want to make the act to contribute a cool and fun way to learn how to contribute to open source project. To add a question, you must clone the project locally, built it, updating one file and adding your two images. The file to edit is: &lt;code&gt;apps/devchoices-next/public/assets/data/questions.ts&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdebon/choiceof.dev/main/readme/question-format.jpg&#34; width=&#34;450&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will find there a list of questions, with a slug, a title, a description, the right and left choices and their respective images. You can add a question at the end of the list, or in the middle, it doesn&#39;t matter. Then you have to add two images in the folder &lt;code&gt;apps/devchoices-next/public/assets/img&lt;/code&gt; with the name you have precise in the other file.&lt;/p&gt; &#xA;&lt;p&gt;Then you can run the project locally and check if everything is working fine. You can test your question directly by going to the following url: &lt;code&gt;localhost:4200/question/your-slug&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you like the result, you can submit your PR, we will review it and if everything is fine, and the joke is fun, we will merge it and your question will be available on the website 🎉&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;In the issues of the repository, you will see many open tickets. You can take one of them if you fancy and propose your solution on a PR. You can also create issues by yourself if you experienced a bug or if you have an idea for a new feature.&lt;/p&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;p&gt;The project is modernised copy of his little brother &lt;a href=&#34;https://choixdemerde.fr&#34;&gt;choixdemerde.fr&lt;/a&gt; It is built with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nx.dev/&#34;&gt;Nx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://storybook.js.org/&#34;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/fr/&#34;&gt;Jest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing-library.com/&#34;&gt;Testing Library&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are also many &lt;a href=&#34;https://nx.dev/community&#34;&gt;community plugins&lt;/a&gt; you could add.&lt;/p&gt; &#xA;&lt;h2&gt;Run the project locally&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository, install the dependencies and run the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  yarn install&#xA;  npx nx serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see this:&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdebon/choiceof.dev/main/readme/server-running.jpg&#34; width=&#34;450&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;And going on &lt;code&gt;localhost:4200&lt;/code&gt; you should see the project running.&lt;/p&gt; &#xA;&lt;h2&gt;Run the storybook&lt;/h2&gt; &#xA;&lt;p&gt;If you want to work on components, on design system, or on a dedicated environment without bore effects of the app, you can run the storybook:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; nx run shared-ui:storybook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see this in your terminal&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdebon/choiceof.dev/main/readme/storybook-running.jpg&#34; width=&#34;450&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;and on &lt;code&gt;localhost:4400&lt;/code&gt; you should see the storybook running.&lt;/p&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bdebon/choiceof.dev/main/readme/storybook-screenshot.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This open source project and this website have been created by Benjamin Code to celebrate his 100k subscribers on YouTube. The project is inspired by &lt;a href=&#34;https://choixdemerde.fr&#34;&gt;choixdemerde.fr&lt;/a&gt; which is a project also created by &lt;a href=&#34;https://twitter.com/benjamincode&#34;&gt;Benjamin Code&lt;/a&gt; and that costed him a lot of money back in the day... If you want to learn more about this story and how a big buzz on your funny side project can ruins you, you will find &lt;a href=&#34;https://medium.com/@benjamindebonmountain/choixdemerde-fr-le-buzz-couteux-6a46d3d6a480&#34;&gt;this article on Medium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#34;The story of choix de merde is terrible. It costed me a lot of time and money and never brought me anything. But the stories about this catastrophic development made me starts a YouTube channel and it has been so far the best experience of my life. For the 100k subscribers I wanted to bring back some light on this story and complete the loop.&#34; – Benjamin Code&lt;/p&gt;</summary>
  </entry>
</feed>