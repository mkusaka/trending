<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-08T01:43:21Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>refly-ai/refly</title>
    <updated>2025-02-08T01:43:21Z</updated>
    <id>tag:github.com,2025-02-08:/refly-ai/refly</id>
    <link href="https://github.com/refly-ai/refly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Refly is an open-source AI-native creation engine. Its intuitive free-form canvas interface combines multi-threaded dialogues, AI knowledge base integration, chrome extension clip &amp; save, contextual memory, intelligent search, WYSIWYG AI editor and more, empowering you to effortlessly transform ideas into production-ready content.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/2930c555-09a7-4ea2-a18a-2b1d8a7ef4ae&#34; alt=&#34;refly-cover&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34; style=&#34;border-bottom: none&#34;&gt; &lt;b&gt; &lt;a href=&#34;https://www.refly.ai&#34;&gt;Refly.AI&lt;/a&gt;&lt;br&gt; &lt;/b&gt; ⭐️ The AI Native Creation Engine ⭐️ &lt;br&gt; &lt;/h1&gt; &#xA; &lt;p&gt;Refly is an open-source AI-native creation engine. It&#39;s intuitive free-form canvas interface combines multi-threaded conversations, knowledge base RAG integration, contextual memory, intelligent search, WYSIWYG AI editor and more, empowering you to effortlessly transform ideas into production-ready content.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.refly.ai/guide/chrome-extension&#34;&gt;🚀 Refly Chrome Extension web clipper launched! ⚡️!&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://refly.ai/&#34;&gt;Refly Cloud&lt;/a&gt; · &lt;a href=&#34;https://refly.ai/&#34;&gt;Self-hosting&lt;/a&gt; · &lt;a href=&#34;https://github.com/refly-ai/refly/discussions&#34;&gt;Forum&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/bWjffrb89h&#34;&gt;Discord&lt;/a&gt; · &lt;a href=&#34;https://x.com/reflyai&#34;&gt;Twitter&lt;/a&gt; · &lt;a href=&#34;https://docs.refly.ai/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://refly.ai&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/Product-F04438&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://refly.ai/pricing&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/free-pricing?logo=free&amp;amp;color=%20%23155EEF&amp;amp;label=pricing&amp;amp;labelColor=%20%23528bff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/bWjffrb89h&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Discord Chat&#34; src=&#34;https://img.shields.io/discord/1323513432686989362?label=chat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat&amp;amp;color=5865F2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/reflyai&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/twitter/follow/reflyai&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt;&lt;img alt=&#34;README in English&#34; src=&#34;https://img.shields.io/badge/English-d9d9d9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/refly-ai/refly/main/README_CN.md&#34;&gt;&lt;img alt=&#34;简体中文版自述文件&#34; src=&#34;https://img.shields.io/badge/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-d9d9d9&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Before installing ReflyAI, ensure your machine meets these minimum system requirements:&lt;/p&gt; &#xA; &lt;p&gt;CPU &amp;gt;= 2 cores&lt;/p&gt; &#xA; &lt;p&gt;Memory &amp;gt;= 4GB&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Self-deploy with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Deploy your own feature-rich, unlimited version of ReflyAI using Docker. Our team is working hard to keep up with the latest versions.&lt;/p&gt; &#xA;&lt;p&gt;To start deployment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd deploy/docker&#xA;cp .env.example .env # make sure all required envs are properly set&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://localhost:5700/&#34;&gt;http://localhost:5700&lt;/a&gt; to start using ReflyAI.&lt;/p&gt; &#xA;&lt;h3&gt;Local Development&lt;/h3&gt; &#xA;&lt;p&gt;View details in &lt;a href=&#34;https://raw.githubusercontent.com/refly-ai/refly/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-threaded dialogues:&lt;/strong&gt; Refly implements an innovative multi-threaded dialogues mechanism that allows you to freely switch between multiple independent conversation topics. This enables more fluid and natural thought expansion and in-depth discussions, effectively breaking through the limitations of traditional conversations. It helps build complex and effective &lt;strong&gt;Agentic Workflows&lt;/strong&gt; in &lt;strong&gt;human-AI collaboration&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/9dbff21f-cf01-42e7-a76f-eb16b1a11c97&#34;&gt;https://github.com/user-attachments/assets/9dbff21f-cf01-42e7-a76f-eb16b1a11c97&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-Powered Capabilities:&lt;/strong&gt; Leveraging AI models, after inputting a question, users can flexibly select any node on the canvas as context to generate new node content. This includes &lt;strong&gt;AI web search, AI knowledge base search, AI-recommended questions, and AI document smart generation&lt;/strong&gt;. It integrates capabilities like Perplexity AI and Stanford Storm into a single workspace.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/be4e18f9-07bb-4b91-90a5-ee2c27bfbf6f&#34;&gt;https://github.com/user-attachments/assets/be4e18f9-07bb-4b91-90a5-ee2c27bfbf6f&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Context Memory:&lt;/strong&gt; Providing precise temporary knowledge base support for each conversation, ensuring the AI model can accurately understand and respond to your questions. Similar to Cursor, you can flexibly select any node in the canvas or add references as context.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/fd95abae-8090-4a6f-a67b-99246568f5d7&#34;&gt;https://github.com/user-attachments/assets/fd95abae-8090-4a6f-a67b-99246568f5d7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Knowledge Base Integration:&lt;/strong&gt; Supports importing diverse external resources and intelligently integrating them into the canvas based on your needs. This helps build a comprehensive knowledge system and create a personalized thinking space. With intelligent retrieval technologies like RAG (Retrieval-Augmented Generation), you can make semantic queries, making it a true second brain.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/263425a8-ed18-4765-9c6a-020fcd867ab2&#34;&gt;https://github.com/user-attachments/assets/263425a8-ed18-4765-9c6a-020fcd867ab2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Quotes:&lt;/strong&gt; Support flexible selection of content from various resources, documents, memos, or skill outputs, allowing one-click addition as contextual references to enhance the accuracy and depth of conversations.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/27725ad6-cca2-490a-ba50-59a9577dd174&#34;&gt;https://github.com/user-attachments/assets/27725ad6-cca2-490a-ba50-59a9577dd174&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI Document Editing:&lt;/strong&gt; Beyond providing powerful real-time Markdown editing capabilities, it supports intelligent selection of document content and AI-assisted precise modifications and refinements based on your needs, offering you a Notion-like powerful AI editor.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/9f11b8eb-dd9d-4691-aca1-d3f11ff801ab&#34;&gt;https://github.com/user-attachments/assets/9f11b8eb-dd9d-4691-aca1-d3f11ff801ab&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;How to Use?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We&#39;ve deployed a Refly Cloud version that allows zero-configuration usage, offering all capabilities of the self-hosted version, including free access to GPT-4o-mini and limited trials of GPT-4o and Claude-3.5-Sonnet. Visit &lt;a href=&#34;https://refly.ai/&#34;&gt;https://refly.ai/&lt;/a&gt; to get started.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-hosting Refly Community Edition&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Get started quickly with our &lt;a href=&#34;https://raw.githubusercontent.com/refly-ai/refly/main/CONTRIBUTING.md&#34;&gt;Getting Started Guide&lt;/a&gt; to run Refly in your environment. For more detailed references and in-depth instructions, please refer to our documentation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Refly for enterprise / organizations&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Please contact us at &lt;a href=&#34;mailto:support@refly.ai&#34;&gt;support@refly.ai&lt;/a&gt; for private deployment solutions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stay Updated&lt;/h2&gt; &#xA;&lt;p&gt;Star Refly on GitHub to receive instant notifications about new version releases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/877dfeb7-1088-41f1-9176-468d877ded0a&#34; alt=&#34;stay-tuned&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Guidelines&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Bug Reports&lt;/th&gt; &#xA;   &lt;th&gt;Feature Requests&lt;/th&gt; &#xA;   &lt;th&gt;Issues/Discussions&lt;/th&gt; &#xA;   &lt;th&gt;ReflyAI Community&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/refly-ai/refly/issues/new/choose&#34;&gt;Create Bug Report&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/refly-ai/refly/pulls&#34;&gt;Submit Feature Request&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/refly-ai/refly/discussions&#34;&gt;View GitHub Discussions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.refly.ai/community/contact-us&#34;&gt;Visit ReflyAI Community&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Something isn&#39;t working as expected&lt;/td&gt; &#xA;   &lt;td&gt;Ideas for new features or improvements&lt;/td&gt; &#xA;   &lt;td&gt;Discuss and raise questions&lt;/td&gt; &#xA;   &lt;td&gt;A place to ask questions, learn, and connect with others&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, please check our &lt;a href=&#34;https://raw.githubusercontent.com/refly-ai/refly/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and feel free to browse our &lt;a href=&#34;https://github.com/refly-ai/refly/issues&#34;&gt;GitHub issues&lt;/a&gt; to show us what you can do.&lt;/p&gt; &#xA;&lt;p&gt;For bug reports, feature requests, and other suggestions, you can also &lt;a href=&#34;https://github.com/refly-ai/refly/issues/new/choose&#34;&gt;create a new issue&lt;/a&gt; and choose the most appropriate template to provide feedback.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, feel free to reach out to us. One of the best places to get more information and learn is the &lt;a href=&#34;https://docs.refly.ai/community/contact-us&#34;&gt;ReflyAI Community&lt;/a&gt;, where you can connect with other like-minded individuals.&lt;/p&gt; &#xA;&lt;h2&gt;Community and Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/refly-ai/refly/discussions&#34;&gt;GitHub Discussion&lt;/a&gt;: Best for sharing feedback and asking questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/refly-ai/refly/issues&#34;&gt;GitHub Issues&lt;/a&gt;: Best for reporting bugs and suggesting features when using ReflyAI. Please refer to our contribution guidelines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/bWjffrb89h&#34;&gt;Discord&lt;/a&gt;: Best for sharing your applications and interacting with the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/reflyai&#34;&gt;X(Twitter)&lt;/a&gt;: Best for sharing your applications and staying connected with the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upstream Projects&lt;/h2&gt; &#xA;&lt;p&gt;We would also like to thank the following open-source projects that make ReflyAI possible:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchainjs&#34;&gt;LangChain&lt;/a&gt; - Library for building AI applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xyflow/xyflow&#34;&gt;ReactFlow&lt;/a&gt; - Library for building visual workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ueberdosis/tiptap&#34;&gt;Tiptap&lt;/a&gt; - Library for building collaborative editors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ant-design/ant-design&#34;&gt;Ant Design&lt;/a&gt; - UI library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yjs/yjs&#34;&gt;yjs&lt;/a&gt; - Provides CRDT foundation for our state management and data sync implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React&lt;/a&gt; - Library for web and native user interfaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nestjs/nest&#34;&gt;NestJS&lt;/a&gt; - Library for building Node.js servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmndrs/zustand&#34;&gt;Zustand&lt;/a&gt; - Primitive and flexible state management for React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite&#34;&gt;Vite&lt;/a&gt; - Next generation frontend tooling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tailwindcss/tailwindcss&#34;&gt;TailwindCSS&lt;/a&gt; - CSS library for writing beautiful styles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tanstack/query&#34;&gt;Tanstack Query&lt;/a&gt; - Library for frontend request handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radix-ui&#34;&gt;Radix-UI&lt;/a&gt; - Library for building accessible React UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elastic/elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt; - Library for building search functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;QDrant&lt;/a&gt; - Library for building vector search functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email&#34;&gt;Resend&lt;/a&gt; - Library for building email sending functionality.&lt;/li&gt; &#xA; &lt;li&gt;Other upstream dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We are deeply grateful to the community for providing such powerful yet simple libraries that allow us to focus more on implementing product logic. We hope that our project will also provide an easier-to-use AI Native content creation engine for everyone in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Security Issues&lt;/h2&gt; &#xA;&lt;p&gt;To protect your privacy, please avoid posting security-related issues on GitHub. Instead, send your questions to &lt;a href=&#34;mailto:support@refly.ai&#34;&gt;support@refly.ai&lt;/a&gt;, and we will provide you with a more detailed response.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/refly-ai/refly/main/LICENSE&#34;&gt;ReflyAI Open Source License&lt;/a&gt;, which is essentially the Apache 2.0 License with some additional restrictions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-samples/well-architected-iac-analyzer</title>
    <updated>2025-02-08T01:43:21Z</updated>
    <id>tag:github.com,2025-02-08:/aws-samples/well-architected-iac-analyzer</id>
    <link href="https://github.com/aws-samples/well-architected-iac-analyzer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Well-Architected IaC (Infrastructure as Code) Analyzer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_genai_app_diagram.png&#34; alt=&#34;solutions_diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Well-Architected Infrastructure as Code (IaC) Analyzer is a project that demonstrates how generative AI can be used to evaluate infrastructure code for alignment with best practices.&lt;/p&gt; &#xA;&lt;p&gt;It features a modern web application built with React and AWS Cloudscape Design System, allowing users to upload IaC documents (e.g., AWS CloudFormation or Terraform templates) or architecture diagrams for assessment. The application leverages Amazon Bedrock to analyze the infrastructure against AWS Well-Architected best practices. These best practices are sourced from AWS Well-Architected whitepapers and synchronized with the Amazon Bedrock knowledge base.&lt;/p&gt; &#xA;&lt;p&gt;This tool provides users with insights into how well their infrastructure code aligns with or deviates from established AWS best practices, offering suggestions for improving cloud architecture designs. For architecture diagrams, it can even generate corresponding IaC templates following AWS best practices.&lt;/p&gt; &#xA;&lt;p&gt;The project deploys resources running on the following AWS services:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amazon Virtual Private Cloud (VPC)&lt;/li&gt; &#xA; &lt;li&gt;Application Load Balancer&lt;/li&gt; &#xA; &lt;li&gt;Amazon Elastic Container Service (ECS)&lt;/li&gt; &#xA; &lt;li&gt;AWS Fargate&lt;/li&gt; &#xA; &lt;li&gt;Amazon S3&lt;/li&gt; &#xA; &lt;li&gt;AWS Lambda&lt;/li&gt; &#xA; &lt;li&gt;Amazon Bedrock&lt;/li&gt; &#xA; &lt;li&gt;Amazon Cognito (Optional - Check the &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/#authentication-options&#34;&gt;Authentication Options section&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload and analyze Infrastructure as Code templates: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CloudFormation (YAML/JSON)&lt;/li&gt; &#xA;   &lt;li&gt;Terraform (.tf)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upload and analyze architecture diagrams: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PNG format&lt;/li&gt; &#xA;   &lt;li&gt;JPEG/JPG format&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Generate IaC templates from architecture diagrams&lt;/li&gt; &#xA; &lt;li&gt;Real-time analysis against Well-Architected best practices&lt;/li&gt; &#xA; &lt;li&gt;Integration with AWS Well-Architected Tool&lt;/li&gt; &#xA; &lt;li&gt;Export analysis results and recommendations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_aic_analyzer_screenshot_main.png&#34; alt=&#34;wa_aic_analyzer_screenshot_main&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_aic_analyzer_screenshot_results.png&#34; alt=&#34;wa_aic_analyzer_screenshot_results&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_aic_analyzer_screenshot_details.png&#34; alt=&#34;wa_aic_analyzer_screenshot_details&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_aic_analyzer_screenshot_wa_tool.png&#34; alt=&#34;wa_aic_analyzer_screenshot_wa_tool&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/assets/wa_aic_analyzer_screenshot_template_generation.png&#34; alt=&#34;wa_aic_analyzer_screenshot_template_generation&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;The following tools must be installed on your local machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;Node.js&lt;/a&gt; (v18 or later) and npm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&lt;/a&gt; (v3.11 or later) and pip&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cdk/v2/guide/cli.html&#34;&gt;AWS CDK CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Either one of these container tools: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/runfinch/finch?tab=readme-ov-file#installing-finch&#34;&gt;Finch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-started/get-docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/v1/userguide/cli-chap-install.html&#34;&gt;AWS CLI&lt;/a&gt; configured with &lt;a href=&#34;https://docs.aws.amazon.com/cli/v1/userguide/cli-chap-configure.html&#34;&gt;appropriate credentials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AWS Bedrock Model Access&lt;/h3&gt; &#xA;&lt;p&gt;You must enable access to the following models in your AWS region:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Titan Text Embeddings V2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Claude 3.5 Sonnet v2&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable these models, follow the instructions &lt;a href=&#34;https://docs.aws.amazon.com/bedrock/latest/userguide/model-access-modify.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Deployment&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you would like to change the default Load Balancer scheme, AI model or authentication options, check the &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/#configuration-options&#34;&gt;Configuration Options section&lt;/a&gt; first before deploying.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You have two options for deploying this solution:&lt;/p&gt; &#xA;&lt;h3&gt;Option 1: Using the Deployment Script (Recommended)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the Repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aws-samples/well-architected-iac-analyzer.git&#xA;cd well-architected-iac-analyzer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Make the deployment script executable:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x deploy-wa-analyzer.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Deploy with required parameters:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Deploy using Docker&#xA;./deploy-wa-analyzer.sh -r us-west-2 -c docker&#xA;&#xA;# Or deploy using Finch&#xA;./deploy-wa-analyzer.sh -r us-west-2 -c finch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will automatically:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check for prerequisites&lt;/li&gt; &#xA; &lt;li&gt;Set up the Python virtual environment&lt;/li&gt; &#xA; &lt;li&gt;Install all dependencies&lt;/li&gt; &#xA; &lt;li&gt;Deploy the CDK stack&lt;/li&gt; &#xA; &lt;li&gt;Provide post-deployment information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 2: Manual Deployment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;If you prefer to deploy step by step, expand this section for more instructions:&lt;/summary&gt; &#xA; &lt;h4&gt;1. Clone the Repository&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aws-samples/well-architected-iac-analyzer.git&#xA;cd well-architected-iac-analyzer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;2. Set Up Python Virtual Environment&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create virtual environment&#xA;python -m venv .venv&#xA;&#xA;# Activate virtual environment&#xA;# On Linux/macOS:&#xA;source .venv/bin/activate&#xA;# On Windows:&#xA;.venv\Scripts\activate&#xA;&#xA;# Verify you&#39;re in the virtual environment&#xA;# You should see (.venv) at the beginning of your prompt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;3. Install Dependencies&lt;/h4&gt; &#xA; &lt;p&gt;Install Python dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Install CDK dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Install Frontend dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ecs_fargate_app/frontend&#xA;npm install&#xA;cd ../..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Install Backend dependencies:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ecs_fargate_app/backend&#xA;npm install&#xA;cd ../..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;4. Deploy the Stack&lt;/h4&gt; &#xA; &lt;p&gt;Set the AWS region and ignore ECR credentials storage during CDK deployment:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CDK_DEPLOY_REGION=us-west-2&#xA;export AWS_ECR_IGNORE_CREDS_STORAGE=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Set the container runtime:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CDK_DOCKER=finch  # For Finch&#xA;&#xA;# OR&#xA;&#xA;export CDK_DOCKER=docker # For Docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Bootstrap CDK (if not already done):&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cdk bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Deploy the stack:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cdk deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Accessing the Application&lt;/h2&gt; &#xA;&lt;p&gt;After successful deployment, you can find the Application Load Balancer (ALB) DNS name in:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The outputs of the &lt;code&gt;cdk deploy&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;The outputs section of the CloudFormation stack named &lt;code&gt;WA-IaC-Analyzer-{region}-GenAIStack&lt;/code&gt; in the AWS Console&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configuration Options&lt;/h2&gt; &#xA;&lt;h3&gt;Model Selection&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use a different model than &#34;Claude 3.5 Sonnet v2&#34;, update the config.ini with the correct &lt;a href=&#34;https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns&#34;&gt;model ID&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[settings]&#xA;model_id = anthropic.claude-3-5-sonnet-20241022-v2:0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This application has been primarily tested with &#34;Claude 3.5 Sonnet v2&#34;. While other Bedrock models may work, using different models might lead to unexpected results. The default model ID is set to &lt;code&gt;anthropic.claude-3-5-sonnet-20241022-v2:0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Load Balancer Scheme Selection&lt;/h3&gt; &#xA;&lt;p&gt;By default, this project will deploy the Load Balancer scheme as &lt;a href=&#34;https://docs.aws.amazon.com./elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme&#34;&gt;&lt;strong&gt;internal&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(Private load balancer)&lt;/strong&gt;. To access the application, you will need to be in the private network connected to the deployed VPC, either via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VPC peering&lt;/li&gt; &#xA; &lt;li&gt;VPN&lt;/li&gt; &#xA; &lt;li&gt;AWS Direct Connect&lt;/li&gt; &#xA; &lt;li&gt;Other network connectivity solutions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need to change the load balancer scheme to &lt;a href=&#34;https://docs.aws.amazon.com./elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme&#34;&gt;&lt;strong&gt;internet-facing&lt;/strong&gt;&lt;/a&gt;, you can modify the &lt;code&gt;public_load_balancer&lt;/code&gt; parameter in the config.ini file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[settings]&#xA;public_load_balancer = True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ &lt;strong&gt;Security Warning&lt;/strong&gt;: If you change the load balancer to be &lt;strong&gt;internet-facing&lt;/strong&gt;, make sure to also define the Authentication Options as per below. Otherwise, the application and all its functionalities will be accessible directly through the Internet without authentication. Proceed with caution and understand the security implications.&lt;/p&gt; &#xA;&lt;h3&gt;Authentication Options&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Before enabling authentication, make sure you have a valid AWS Certificate Manager (ACM) certificate covering the DNS domain name (CNAME or Alias) that you plan to use to point to this application&#39;s ALB.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;For Example:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;If you own the domain &lt;code&gt;*.example.com&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;And you plan to access the application via &lt;code&gt;wa-analyzer.example.com&lt;/code&gt; (with a CNAME or Alias pointing to the ALB deployed by this stack)&lt;/li&gt; &#xA;  &lt;li&gt;You must first &lt;a href=&#34;https://docs.aws.amazon.com/acm/latest/userguide/gs.html&#34;&gt;create or import a certificate in ACM&lt;/a&gt; that covers either: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;*.example.com&lt;/code&gt;, or&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;wa-analyzer.example.com&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Then, you can add the certificate&#39;s ARN in the &lt;code&gt;certificate_arn&lt;/code&gt; parameter below when deploying the stack&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The application can be deployed with different authentication configurations managed via the config.ini file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A. Default Deployment (No Authentication)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTP listener only&lt;/li&gt; &#xA; &lt;li&gt;Can be deployed as public or private ALB&lt;/li&gt; &#xA; &lt;li&gt;Example settings in config.ini: &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;authentication = False&#xA;auth_type = none&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;B. New Cognito User Pool&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTPS listener with AWS Cognito authentication&lt;/li&gt; &#xA; &lt;li&gt;Creates a new Cognito user pool&lt;/li&gt; &#xA; &lt;li&gt;Self-signup disabled by default&lt;/li&gt; &#xA; &lt;li&gt;Example settings in config.ini: &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# In below example, &#34;wa-analyzer.example.com&#34; is the DNS alias that you would create pointing to the ALB deployed by this CDK stack&#xA;authentication = True&#xA;auth_type = new-cognito&#xA;certificate_arn = arn:aws:acm:region:account:certificate/certificate-id&#xA;cognito_domain_prefix = your-domain-prefix&#xA;allback_urls = https://wa-analyzer.example.com/oauth2/idpresponse&#xA;logout_url = https://wa-analyzer.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;C. Existing Cognito User Pool&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTPS listener with existing AWS Cognito authentication&lt;/li&gt; &#xA; &lt;li&gt;Uses an existing Cognito user pool&lt;/li&gt; &#xA; &lt;li&gt;Example settings in config.ini: &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# In below example, &#34;wa-analyzer.example.com&#34; is the DNS alias that you would create pointing to the ALB deployed by this CDK stack&#xA;authentication = True&#xA;auth_type = existing-cognito&#xA;certificate_arn = arn:aws:acm:region:account:certificate/certificate-id&#xA;existing_user_pool_arn = arn:aws:cognito-idp:&amp;lt;aws-region&amp;gt;:&amp;lt;aws-account-id&amp;gt;:userpool/&amp;lt;user-pool-id&amp;gt;&#xA;existing_user_pool_client_id = &amp;lt;user-pool-client-id&amp;gt;&#xA;existing_user_pool_domain = &amp;lt;your-existing-cognito-domain-prefix&amp;gt;.auth.&amp;lt;aws-region&amp;gt;.amazoncognito.com # Example using Cognito prefix domain: https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-assign-domain-prefix.html&#xA;# Or; existing_user_pool_domain = wa-analyzer-auth.example.com # Example of custom domain (e.g. wa-analyzer-auth.example.com): https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html)&#xA;existing_cognito_logout_url = https://wa-analyzer.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;D. OpenID Connect (OIDC)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTPS listener with OIDC authentication&lt;/li&gt; &#xA; &lt;li&gt;Compatible with any OIDC-compliant identity provider&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you plan to use OIDC authentication (&lt;code&gt;auth_type = oidc&lt;/code&gt;), follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Before deployment&lt;/strong&gt;, create a secret in AWS Secrets Manager named &lt;code&gt;WAIaCAnalyzerOIDCSecret&lt;/code&gt; containing your OIDC client secret &lt;strong&gt;before&lt;/strong&gt; deploying the stack. The secret must be created in the same AWS region where you plan to deploy the stack:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using AWS CLI&#xA;aws secretsmanager create-secret \&#xA;  --name WAIaCAnalyzerOIDCSecret \&#xA;  --secret-string &#34;your-oidc-client-secret&#34; \&#xA;  --region &amp;lt;aws-region&amp;gt;&#xA;&#xA;# Or you can create it via the AWS Console:&#xA;# 1. Go to AWS Secrets Manager console&#xA;# 2. Click &#34;Store a new secret&#34;&#xA;# 3. Choose &#34;Other type of secret&#34;&#xA;# 4. Enter your OIDC client secret as a plaintext value&#xA;# 5. Set the secret name exactly as: WAIaCAnalyzerOIDCSecret&#xA;# 6. Do not add any automatic rotation&#xA;# 7. Complete the secret creation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure OIDC settings in config.ini:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# Below is an example when using Okta as your OIDC IdP, refer to the config.ini file for more examples. &#xA;# In below example, &#34;wa-analyzer.example.com&#34; is the DNS alias that you would create pointing to the ALB deployed by this CDK stack&#xA;authentication = True&#xA;auth_type = oidc&#xA;certificate_arn = arn:aws:acm:region:account:certificate/certificate-id&#xA;oidc_issuer = https://&amp;lt;okta-tenant-id&amp;gt;.us.auth0.com/authorize&#xA;oidc_client_id = &amp;lt;okta-client-id&amp;gt;&#xA;oidc_authorization_endpoint = https://&amp;lt;okta-tenant-id&amp;gt;.us.auth0.com/authorize&#xA;oidc_token_endpoint = https://&amp;lt;okta-tenant-id&amp;gt;.us.auth0.com/oauth/token&#xA;oidc_user_info_endpoint = https://&amp;lt;okta-tenant-id&amp;gt;.us.auth0.com/userinfo&#xA;oidc_logout_url = https://&amp;lt;okta-tenant-id&amp;gt;.us.auth0.com/v2/logout?client_id=&amp;lt;oidc-client-id&amp;gt;&amp;amp;returnTo=https://wa-analyzer.example.com (# Refer to https://auth0.com/docs/authenticate/login/logout)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Clean up&lt;/h2&gt; &#xA;&lt;p&gt;You have two options to remove all resources created by this solution:&lt;/p&gt; &#xA;&lt;h3&gt;Option 1 - Using the Destroy Script (Recommended)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make the destroy script executable:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x destroy-wa-analyzer.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run the script with required parameters. Make sure to use the same region where you deployed the stack:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clean up using Docker&#xA;./destroy-wa-analyzer.sh -r us-west-2 -c docker&#xA;&#xA;# Or clean up using Finch&#xA;./destroy-wa-analyzer.sh -r us-west-2 -c finch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script will automatically:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Verify prerequisites&lt;/li&gt; &#xA; &lt;li&gt;Set up the necessary environment&lt;/li&gt; &#xA; &lt;li&gt;Destroy all resources in the stack&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Option 2 - Using AWS Console&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the CloudFormation console&lt;/li&gt; &#xA; &lt;li&gt;Find and delete the stack named &lt;code&gt;WA-IaC-Analyzer-{region}-GenAIStack&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;For development purposes, you can run the application locally using either Finch or Docker containers. This allows you to make changes to the code and see them reflected immediately without having to deploy code changes into your AWS stack.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites for Local Development&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the main prerequisites, ensure you have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Either Finch or Docker installed and running&lt;/li&gt; &#xA; &lt;li&gt;AWS credentials configured with access to required services&lt;/li&gt; &#xA; &lt;li&gt;Access to Amazon Bedrock service and the required models (as described in the main Prerequisites section)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting up Required AWS Resources&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note for Existing Stack Users&lt;/strong&gt;: If you have already deployed this CDK stack in your AWS account, you can skip the manual resource creation steps below. Instead:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Go to the CloudFormation console and find your stack (it starts with &#34;WA-IaC-Analyzer-&#34;)&lt;/li&gt; &#xA;  &lt;li&gt;In the &#34;Outputs&#34; tab of the CDK CloudFormation stack, find: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;KnowledgeBaseID&lt;/code&gt;: Use this value for KNOWLEDGE_BASE_ID in your .env file (for &#34;Setting up Local Development Environment&#34; section below)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;WellArchitectedDocsS3Bucket&lt;/code&gt;: Use this value for WA_DOCS_S3_BUCKET in your .env file (for &#34;Setting up Local Development Environment&#34; section below)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;If you haven&#39;t deployed the stack yet, follow the steps below to create the required resources manually:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an S3 bucket:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;aws s3 mb s3://your-bucket-name --region your-aws-region&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Upload Well-Architected documents:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;aws s3 cp ecs_fargate_app/well_architected_docs/ s3://your-bucket-name/ --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a Bedrock Knowledge Base:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to the Amazon Bedrock console&lt;/li&gt; &#xA;   &lt;li&gt;Navigate to Knowledge bases&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Create knowledge base with vector store&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Enter a name for your knowledge base&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;Amazon S3&#34; as the data source&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Next&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Add your S3 bucket as a data source: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Choose the bucket you created&lt;/li&gt; &#xA;     &lt;li&gt;Leave all other settings as default&lt;/li&gt; &#xA;     &lt;li&gt;Click &#34;Next&#34;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;Titan Text Embeddings v2&#34; as the embedding model and use the default Vector database settings&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Next&#34; and Complete the knowledge base creation&lt;/li&gt; &#xA;   &lt;li&gt;Note the Knowledge Base ID from the details page&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Setting up Local Development Environment&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory with the following variables:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;AWS_REGION=your-aws-region-key&#xA;AWS_ACCESS_KEY_ID=your-access-key&#xA;AWS_SECRET_ACCESS_KEY=your-secret-key&#xA;AWS_SESSION_TOKEN=your-session-token&#xA;WA_DOCS_S3_BUCKET=your-s3-bucket&#xA;KNOWLEDGE_BASE_ID=your-kb-id&#xA;MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Security Note&lt;/strong&gt;: Even not mandatory, it is encouraged the use of temporary credentials (including AWS_SESSION_TOKEN) when running the application locally. More details in &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html&#34;&gt;Temporary security credentials in IAM&lt;/a&gt;. Temporary credentials have a limited lifetime and automatically expire, providing an additional layer of security.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Make the development script executable:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x dev.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start the development environment using either Docker or Finch:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using Docker&#xA;./dev.sh -c docker -up&#xA;&#xA;# Or using Finch&#xA;./dev.sh -c finch -up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and start the frontend container (available at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Build and start the backend container (available at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Enable hot reloading for both frontend and backend changes&lt;/li&gt; &#xA; &lt;li&gt;Mount source code directories as volumes for immediate updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;To stop the development environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using Docker&#xA;./dev.sh -c docker -down&#xA;&#xA;# Or using Finch&#xA;./dev.sh -c finch -down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development Commands Reference&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start development environment&#xA;./dev.sh -c &amp;lt;container_tool&amp;gt; -up&#xA;&#xA;# Stop development environment&#xA;./dev.sh -c &amp;lt;container_tool&amp;gt; -down&#xA;&#xA;# Show help and usage information&#xA;./dev.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;&amp;lt;container_tool&amp;gt;&lt;/code&gt; is either &lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;finch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Switching Between Development and Production&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local development uses &lt;code&gt;finch-compose.dev.yaml&lt;/code&gt; for container configuration&lt;/li&gt; &#xA; &lt;li&gt;Production deployment continues to use CDK as described in the Installation and Deployment section&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/well-architected-iac-analyzer/main/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under the MIT-0 License. See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
</feed>