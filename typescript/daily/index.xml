<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-08T01:42:36Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>clauderic/dnd-kit</title>
    <updated>2022-12-08T01:42:36Z</updated>
    <id>tag:github.com,2022-12-08:/clauderic/dnd-kit</id>
    <link href="https://github.com/clauderic/dnd-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The modern, lightweight, performant, accessible and extensible drag &amp; drop toolkit for React.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dndkit.com&#34;&gt; &lt;img alt=&#34;@dnd-kit – the modern drag &amp;amp; drop toolkit for React&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/dnd-kit-hero-banner.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@dnd-kit/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@dnd-kit/core.svg?sanitize=true&#34; alt=&#34;Stable Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/clauderic/dnd-kit/actions&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/clauderic/dnd-kit&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=@dnd-kit/core&#34;&gt;&lt;img alt=&#34;gzip size&#34; src=&#34;https://badgen.net/bundlephobia/minzip/@dnd-kit/core?label=gzip%20size&amp;amp;color=green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/LICENSE&#34;&gt;&lt;img allt=&#34;MIT License&#34; src=&#34;https://badgen.now.sh/badge/license/MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=dndkit&#34;&gt; &lt;img alt=&#34;Follow us on Twitter&#34; src=&#34;https://img.shields.io/twitter/follow/dndkit?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feature packed:&lt;/strong&gt; customizable collision detection algorithms, multiple activators, draggable overlay, drag handles, auto-scrolling, constraints, and so much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built for React:&lt;/strong&gt; exposes hooks such as &lt;a href=&#34;https://docs.dndkit.com/api-documentation/draggable&#34;&gt;&lt;code&gt;useDraggable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://docs.dndkit.com/api-documentation/droppable&#34;&gt;&lt;code&gt;useDroppable&lt;/code&gt;&lt;/a&gt;. and won&#39;t force you to re-architect your app or create additional wrapper DOM nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports a wide range of use cases:&lt;/strong&gt; lists, grids, multiple containers, nested contexts, variable sized items, virtualized lists, 2D Games, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero dependencies and modular:&lt;/strong&gt; the core of the library weighs around 10kb minified and has no external dependencies. It&#39;s built around built-in React state management and context, which keeps the library lean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built-in support for multiple input methods:&lt;/strong&gt; Pointer, mouse, touch and keyboard sensors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully customizable &amp;amp; extensible:&lt;/strong&gt; Customize every detail: animations, transitions, behaviours, styles. Build your own sensors, collision detection algorithms, customize key bindings and so much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Accessibility:&lt;/strong&gt; Keyboard support, sensible default aria attributes, customizable screen reader instructions and live regions built-in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; It was built with performance in mind in order to support silky smooth animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Presets:&lt;/strong&gt; Need to build a sortable interface? Check out &lt;code&gt;@dnd-kit/sortable&lt;/code&gt;, which is a thin layer built on top of &lt;code&gt;@dnd-kit/core&lt;/code&gt;. More presets coming in the future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to get started with &lt;strong&gt;dnd kit&lt;/strong&gt;, visit the official documentation website. You&#39;ll find in-depth API documentation, tips and guides to help you build drag and drop interfaces.&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://docs.dndkit.com&#34;&gt; &lt;img alt=&#34;Visit @dnd-kit documentation&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/documentation.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Key concepts&lt;/h2&gt; &#xA;&lt;p&gt;The core library of &lt;strong&gt;dnd kit&lt;/strong&gt; exposes two main concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dndkit.com/api-documentation/draggable&#34;&gt;Draggable elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dndkit.com/api-documentation/droppable&#34;&gt;Droppable areas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Augment your existing components using the &lt;code&gt;useDraggable&lt;/code&gt; and &lt;code&gt;useDroppable&lt;/code&gt; hooks, or combine both to create components that can both be dragged and dropped over.&lt;/p&gt; &#xA;&lt;p&gt;Handle events and customize the behaviour of your draggable elements and droppable areas using the &lt;code&gt;&amp;lt;DndContext&amp;gt;&lt;/code&gt; provider. Configure sensors to handle different input methods.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;&amp;lt;DragOverlay&amp;gt;&lt;/code&gt; component to render a draggable overlay that is removed from the normal document flow and is positioned relative to the viewport.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.dndkit.com/introduction/getting-started&#34;&gt;quick start guide&lt;/a&gt; to learn how get started.&lt;/p&gt; &#xA;&lt;h3&gt;Extensibility&lt;/h3&gt; &#xA;&lt;p&gt;Extensibility is at the core of &lt;strong&gt;dnd kit&lt;/strong&gt;. It is built to be lean and extensible. It ships with the features we believe most people will want most of the time, and provides extension points to build the rest on top of &lt;code&gt;@dnd-kit/core&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A prime example of the level of extensibility of &lt;strong&gt;dnd kit&lt;/strong&gt; is the &lt;a href=&#34;https://docs.dndkit.com/presets/sortable&#34;&gt;Sortable preset&lt;/a&gt;, which is built using the extension points that are exposed by &lt;code&gt;@dnd-kit/core&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The primary extension points of &lt;strong&gt;dnd kit&lt;/strong&gt; are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sensors&lt;/li&gt; &#xA; &lt;li&gt;Modifiers&lt;/li&gt; &#xA; &lt;li&gt;Constraints&lt;/li&gt; &#xA; &lt;li&gt;Custom collision detection algorithms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessibility&lt;/h3&gt; &#xA;&lt;p&gt;Building accessible drag and drop interfaces is hard; &lt;strong&gt;dnd kit&lt;/strong&gt; has a number of sensible defaults and starting points to help you make your drag and drop interface accessible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable &lt;strong&gt;screen reader instructions&lt;/strong&gt; for how to interact with draggable items&lt;/li&gt; &#xA; &lt;li&gt;Customizable &lt;strong&gt;live region updates&lt;/strong&gt; to provide screen reader announcements in real-time of what is currently happening with draggable and droppable elements.&lt;/li&gt; &#xA; &lt;li&gt;Sensible defaults for &lt;strong&gt;&lt;code&gt;aria&lt;/code&gt; attributes&lt;/strong&gt; that should be passed to draggable items&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.dndkit.com/guides/accessibility&#34;&gt;Accessibility guide&lt;/a&gt; to learn more about how you can help provide a better experience for screen readers.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;p&gt;Unlike most drag and drop libraries, &lt;strong&gt;dnd kit&lt;/strong&gt; intentionally is &lt;strong&gt;not&lt;/strong&gt; built on top of the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API&#34;&gt;HTML5 Drag and drop API&lt;/a&gt;. This was a deliberate architectural decision, that does come with tradeoffs that you should be aware of before deciding to use it, but for most applications, we believe the benefits outweigh the tradeoffs.&lt;/p&gt; &#xA;&lt;p&gt;The HTML5 Drag and drop API has some severe &lt;strong&gt;limitations&lt;/strong&gt;. It does not support touch devices or using the keyboard to drag items, which means that the libraries that are built on top of it need to expose an entirely different implementation to support those input methods. It also doesn&#39;t support common use-cases such as locking dragging to a specific axis or to the bounds of a container, custom collision detection strategies, or even customizing the preview of the dragged item.&lt;/p&gt; &#xA;&lt;p&gt;While there are workarounds to some of these issues, those workarounds typically increase the complexity of the codebase and the overall bundle size of the library, and lead to inconsistencies between the mouse, touch and keyboard layers because they&#39;re powered by entirely different implementations.&lt;/p&gt; &#xA;&lt;p&gt;The main &lt;strong&gt;tradeoff&lt;/strong&gt; with not using the HTML5 Drag and drop API is that you won&#39;t be able to drag from the desktop or between windows. If the drag and drop use-case you have in mind involves this kind of functionality, you&#39;ll definitely want to use a library that&#39;s built on top of the HTML 5 Drag and drop API. We highly recommend you check out &lt;a href=&#34;https://github.com/react-dnd/react-dnd/&#34;&gt;react-dnd&lt;/a&gt; for a React library that&#39;s has a native HTML 5 Drag and drop backend.&lt;/p&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Minimizing DOM mutations&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;dnd kit&lt;/strong&gt; lets you build drag and drop interfaces without having to mutate the DOM every time an item needs to shift position.&lt;/p&gt; &#xA;&lt;p&gt;This is possible because &lt;strong&gt;dnd kit&lt;/strong&gt; lazily calculates and stores the initial positions and layout of your droppable containers when a drag operation is initiated. These positions are passed down to your components that use &lt;code&gt;useDraggable&lt;/code&gt; and &lt;code&gt;useDroppable&lt;/code&gt; so that you can compute the new positions of your items while a drag operation is underway, and move them to their new positions using performant CSS properties that do not trigger a repaint such as &lt;code&gt;translate3d&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt;. For an example of how this can be achieved, check out the implementation of the sorting strategies that are exposed by the &lt;a href=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/packages/sortable/README.md&#34;&gt;&lt;code&gt;@dnd-kit/sortable&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;This isn&#39;t to say that you can&#39;t shift the position of the items in the DOM while dragging, this is something that &lt;strong&gt;is supported&lt;/strong&gt; and sometimes inevitable. In some cases, it won&#39;t be possible to know in advance what the new position and layout of the item until you move it in the DOM. Just know that these kind of mutations to the DOM while dragging are much more expensive and will cause a repaint, so if possible, prefer computing the new positions using &lt;code&gt;translate3d&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Synthetic events&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;dnd kit&lt;/strong&gt; also uses &lt;a href=&#34;https://reactjs.org/docs/events.html&#34;&gt;SyntheticEvent listeners&lt;/a&gt; for the activator events of all sensors, which leads to improved performance over manually adding event listeners to each individual draggable node.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Playful illustration of draggable and droppable concepts. A robot picks up a draggable card and moves it over a droppable container.&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/concepts-illustration.svg?sanitize=true&#34; width=&#34;75%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Working in the &lt;code&gt;@dnd-kit&lt;/code&gt; repository&lt;/h2&gt; &#xA;&lt;h3&gt;Packages contained within this repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/core&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/accessibility&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/sortable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/modifiers&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/utilities&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to install all the dependencies in the root directory. Since the &lt;code&gt;@dnd-kit&lt;/code&gt; is a monorepo that uses Lerna and Yarn Workspaces, npm CLI is not supported (only yarn).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install all dependencies in each project, build them, and symlink them via Lerna&lt;/p&gt; &#xA;&lt;h3&gt;Development workflow&lt;/h3&gt; &#xA;&lt;p&gt;In one terminal, run &lt;code&gt;yarn start&lt;/code&gt; in parallel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This builds each package to &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/dist&lt;/code&gt; and runs the project in watch mode so any edits you save inside &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/src&lt;/code&gt; cause a rebuild to &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/dist&lt;/code&gt;. The results will stream to to the terminal.&lt;/p&gt; &#xA;&lt;h3&gt;Running storybook&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start:storybook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Runs the storybook Open &lt;a href=&#34;http://localhost:6006&#34;&gt;http://localhost:6006&lt;/a&gt; to view it in the browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/storybook-screenshot.png&#34; alt=&#34;Screenshot of Storybook running locally&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Working with the playground&lt;/h3&gt; &#xA;&lt;p&gt;You can play with local packages in the Parcel-powered playground.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start:playground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the playground on &lt;code&gt;localhost:1234&lt;/code&gt;. If you have lerna running watch in parallel mode in one terminal, and then you run parcel, your playground will hot reload when you make changes to any imported module whose source is inside of &lt;code&gt;packages/*/src/*&lt;/code&gt;. Note that to accomplish this, each package&#39;s &lt;code&gt;start&lt;/code&gt; command passes TDSX the &lt;code&gt;--noClean&lt;/code&gt; flag. This prevents Parcel from exploding between rebuilds because of File Not Found errors.&lt;/p&gt; &#xA;&lt;p&gt;Important Safety Tip: When adding/altering packages in the playground, use &lt;code&gt;alias&lt;/code&gt; object in package.json. This will tell Parcel to resolve them to the filesystem instead of trying to install the package from NPM. It also fixes duplicate React errors you may run into.&lt;/p&gt; &#xA;&lt;h3&gt;Running Cypress&lt;/h3&gt; &#xA;&lt;p&gt;(In a third terminal) you can run Cypress and it will run the integration tests against storybook.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>transitive-bullshit/chatgpt-twitter-bot</title>
    <updated>2022-12-08T01:42:36Z</updated>
    <id>tag:github.com,2022-12-08:/transitive-bullshit/chatgpt-twitter-bot</id>
    <link href="https://github.com/transitive-bullshit/chatgpt-twitter-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twitter bot powered by OpenAI&#39;s ChatGPT. It&#39;s aliveeeee 🤖&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/ChatGPTBot&#34;&gt; &lt;img alt=&#34;Example Twitter thread using @ChatGPTBot&#34; src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/media/demo.jpg&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;ChatGPT Twitter Bot &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Twitter bot powered by OpenAI&#39;s ChatGPT.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot/raw/main/license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prettier.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-brightgreen.svg?sanitize=true&#34; alt=&#34;Prettier Code Formatting&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/#note&#34;&gt;Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/#related&#34;&gt;Related&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-twitter-bot/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ChatGPTBot&#34;&gt;@ChatGPTBot&lt;/a&gt; is a Twitter bot where you can @mention it with a prompt and it will respond with a twitter thread containing the &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;ChatGPT&lt;/a&gt; response.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Just create a tweet @mentioning &lt;code&gt;@ChatGPTBot&lt;/code&gt; containing your prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@ChatGPTBot What is 1 + 1?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then wait until the bot responds, which can be anywhere from a few seconds to a few minutes (hopefully not longer), depending on how much usage the bot receives.&lt;/p&gt; &#xA;&lt;p&gt;The ChatGPT response will be split up into multiple tweet-sized replies.&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t be surprised if it takes awhile for the bot to respond to you&lt;/strong&gt;. This is due to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Twitter heavily rate-limits bots.&lt;/li&gt; &#xA; &lt;li&gt;This bot is just running on my local dev machine, so please be kind 🙏&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Any improper use of ChatGPTBot will result in an immediate block on Twitter. Improper use covers everything &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;OpenAI&lt;/a&gt;&#39;s API would consider disallowed / harmful / banned.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Powered by the &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;Node.js ChatGPT API&lt;/a&gt; (unofficial)&lt;/li&gt; &#xA; &lt;li&gt;Inspired by this &lt;a href=&#34;https://github.com/danielgross/whatsapp-gpt&#34;&gt;Go module&lt;/a&gt; by &lt;a href=&#34;https://github.com/danielgross&#34;&gt;Daniel Gross&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m1guelpf/chatgpt-telegram&#34;&gt;Telegram bot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://transitivebullsh.it&#34;&gt;Travis Fischer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you found this project interesting, please consider &lt;a href=&#34;https://github.com/sponsors/transitive-bullshit&#34;&gt;sponsoring me&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actions/toolkit</title>
    <updated>2022-12-08T01:42:36Z</updated>
    <id>tag:github.com,2022-12-08:/actions/toolkit</id>
    <link href="https://github.com/actions/toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The GitHub ToolKit for developing GitHub Actions.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/actions/toolkit/main/res/at-logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/actions/toolkit/actions?query=workflow%3Atoolkit-unit-tests&#34;&gt;&lt;img alt=&#34;Toolkit unit tests status&#34; src=&#34;https://github.com/actions/toolkit/workflows/toolkit-unit-tests/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions/toolkit/actions?query=workflow%3Atoolkit-audit&#34;&gt;&lt;img alt=&#34;Toolkit audit status&#34; src=&#34;https://github.com/actions/toolkit/workflows/toolkit-audit/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;GitHub Actions Toolkit&lt;/h2&gt; &#xA;&lt;p&gt;The GitHub Actions ToolKit provides a set of packages to make creating actions easier.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Get started with the &lt;a href=&#34;https://github.com/actions/javascript-action&#34;&gt;javascript-action template&lt;/a&gt;!&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/core&#34;&gt;@actions/core&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions for inputs, outputs, results, logging, secrets and variables. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/core&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;🏃&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/exec&#34;&gt;@actions/exec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions to exec cli tools and process output. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/exec&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/exec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;🍨&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/glob&#34;&gt;@actions/glob&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions to search for files matching glob patterns. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/glob&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/glob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;☎&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/http-client&#34;&gt;@actions/http-client&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A lightweight HTTP client optimized for building actions. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/http-client&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/http-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;✏&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/io&#34;&gt;@actions/io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides disk i/o functions like cp, mv, rmRF, which etc. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/io&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/tool-cache&#34;&gt;@actions/tool-cache&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions for downloading and caching tools. e.g. setup-* actions. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/tool-cache&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See @actions/cache for caching workflow dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/tool-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/github&#34;&gt;@actions/github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides an Octokit client hydrated with the context that the current action is being run in. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/github&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;💾&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/artifact&#34;&gt;@actions/artifact&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions to interact with actions artifacts. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/artifact&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/artifact&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;span&gt;🎯&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/cache&#34;&gt;@actions/cache&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides functions to cache dependencies and build outputs to improve workflow execution time. Read more &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/packages/cache&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install @actions/cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Creating an Action with the Toolkit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;❓&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/docs/action-types.md&#34;&gt;Choosing an action type&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Outlines the differences and why you would want to create a JavaScript or a container based action. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;➰&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/docs/action-versioning.md&#34;&gt;Versioning&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Actions are downloaded and run from the GitHub graph of repos. This contains guidance for versioning actions and safe releases. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/docs/problem-matchers.md&#34;&gt;Problem Matchers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Problem Matchers are a way to scan the output of actions for a specified regex pattern and surface that information prominently in the UI. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/docs/proxy-support.md&#34;&gt;Proxy Server Support&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Self-hosted runners can be configured to run behind proxy servers. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/actions/hello-world-javascript-action&#34;&gt;Hello World JavaScript Action&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Illustrates how to create a simple hello world javascript action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;...&#xA;  const nameToGreet = core.getInput(&#39;who-to-greet&#39;);&#xA;  console.log(`Hello ${nameToGreet}!`);&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/actions/javascript-action&#34;&gt;JavaScript Action Walkthrough&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Walkthrough and template for creating a JavaScript Action with tests, linting, workflow, publishing, and versioning.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;async function run() {&#xA;  try {&#xA;    const ms = core.getInput(&#39;milliseconds&#39;);&#xA;    console.log(`Waiting ${ms} milliseconds ...`)&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;PASS ./index.test.js&#xA;  ✓ throws invalid number&#xA;  ✓ wait 500 ms&#xA;  ✓ test runs&#xA;&#xA;Test Suites: 1 passed, 1 total&#xA;Tests:       3 passed, 3 total&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/actions/typescript-action&#34;&gt;TypeScript Action Walkthrough&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Walkthrough creating a TypeScript Action with compilation, tests, linting, workflow, publishing, and versioning.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as core from &#39;@actions/core&#39;;&#xA;&#xA;async function run() {&#xA;  try {&#xA;    const ms = core.getInput(&#39;milliseconds&#39;);&#xA;    console.log(`Waiting ${ms} milliseconds ...`)&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;PASS ./index.test.js&#xA;  ✓ throws invalid number&#xA;  ✓ wait 500 ms&#xA;  ✓ test runs&#xA;&#xA;Test Suites: 1 passed, 1 total&#xA;Tests:       3 passed, 3 total&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/docs/container-action.md&#34;&gt;Docker Action Walkthrough&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Create an action that is delivered as a container and run with docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;FROM alpine:3.10&#xA;COPY LICENSE README.md /&#xA;COPY entrypoint.sh /entrypoint.sh&#xA;ENTRYPOINT [&#34;/entrypoint.sh&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/actions/container-toolkit-action&#34;&gt;Docker Action Walkthrough with Octokit&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Create an action that is delivered as a container which uses the toolkit. This example uses the GitHub context to construct an Octokit client.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;FROM node:slim&#xA;COPY . .&#xA;RUN npm install --production&#xA;ENTRYPOINT [&#34;node&#34;, &#34;/lib/main.js&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const myInput = core.getInput(&#39;myInput&#39;);&#xA;core.debug(`Hello ${myInput} from inside a container`);&#xA;&#xA;const context = github.context;&#xA;console.log(`We can even get context data, like the repo: ${context.repo.repo}`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions. See &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/.github/CONTRIBUTING.md&#34;&gt;how to contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/actions/toolkit/main/CODE_OF_CONDUCT.md&#34;&gt;our code of conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>