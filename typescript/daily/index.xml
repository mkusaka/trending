<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-20T01:46:28Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>socketio/socket.io</title>
    <updated>2023-07-20T01:46:28Z</updated>
    <id>tag:github.com,2023-07-20:/socketio/socket.io</id>
    <link href="https://github.com/socketio/socket.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Realtime application framework (Node.JS server)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;socket.io&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://replit.com/@socketio/socketio-minimal-example&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/socketio/socket.io&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/socketio/socket.io/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/socketio/socket.io/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/socketio/socket.io/actions&#34;&gt;&lt;img src=&#34;https://github.com/socketio/socket.io/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/socket.io&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/socket.io.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/socket.io.svg?style=flat&#34; alt=&#34;Downloads&#34;&gt; &lt;a href=&#34;https://slackin-socketio.now.sh&#34;&gt;&lt;img src=&#34;https://slackin-socketio.now.sh/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Socket.IO enables real-time bidirectional event-based communication. It consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a Node.js server (this repository)&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://github.com/socketio/socket.io-client&#34;&gt;Javascript client library&lt;/a&gt; for the browser (or a Node.js client)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some implementations in other languages are also available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketio/socket.io-client-java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketio/socket.io-client-cpp&#34;&gt;C++&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/socketio/socket.io-client-swift&#34;&gt;Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rikulo/socket.io-client-dart&#34;&gt;Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/miguelgrinberg/python-socketio&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doghappy/socket.io-client-csharp&#34;&gt;.NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/1c3t3a/rust-socketio&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Its main features are:&lt;/p&gt; &#xA;&lt;h4&gt;Reliability&lt;/h4&gt; &#xA;&lt;p&gt;Connections are established even in the presence of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;proxies and load balancers.&lt;/li&gt; &#xA; &lt;li&gt;personal firewall and antivirus software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For this purpose, it relies on &lt;a href=&#34;https://github.com/socketio/engine.io&#34;&gt;Engine.IO&lt;/a&gt;, which first establishes a long-polling connection, then tries to upgrade to better transports that are &#34;tested&#34; on the side, like WebSocket. Please see the &lt;a href=&#34;https://github.com/socketio/engine.io#goals&#34;&gt;Goals&lt;/a&gt; section for more information.&lt;/p&gt; &#xA;&lt;h4&gt;Auto-reconnection support&lt;/h4&gt; &#xA;&lt;p&gt;Unless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options &lt;a href=&#34;https://socket.io/docs/v3/client-api/#new-Manager-url-options&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Disconnection detection&lt;/h4&gt; &#xA;&lt;p&gt;A heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.&lt;/p&gt; &#xA;&lt;p&gt;That functionality is achieved with timers set on both the server and the client, with timeout values (the &lt;code&gt;pingInterval&lt;/code&gt; and &lt;code&gt;pingTimeout&lt;/code&gt; parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the &lt;code&gt;sticky-session&lt;/code&gt; requirement when using multiples nodes.&lt;/p&gt; &#xA;&lt;h4&gt;Binary support&lt;/h4&gt; &#xA;&lt;p&gt;Any serializable data structures can be emitted, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&#34;&gt;ArrayBuffer&lt;/a&gt; and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Blob&#34;&gt;Blob&lt;/a&gt; in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&#34;&gt;ArrayBuffer&lt;/a&gt; and &lt;a href=&#34;https://nodejs.org/api/buffer.html&#34;&gt;Buffer&lt;/a&gt; in Node.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Simple and convenient API&lt;/h4&gt; &#xA;&lt;p&gt;Sample code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;io.on(&#39;connection&#39;, socket =&amp;gt; {&#xA;  socket.emit(&#39;request&#39;, /* … */); // emit an event to the socket&#xA;  io.emit(&#39;broadcast&#39;, /* … */); // emit an event to all connected sockets&#xA;  socket.on(&#39;reply&#39;, () =&amp;gt; { /* … */ }); // listen to the event&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cross-browser&lt;/h4&gt; &#xA;&lt;p&gt;Browser support is tested in Sauce Labs:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://saucelabs.com/u/socket&#34;&gt;&lt;img src=&#34;https://saucelabs.com/browser-matrix/socket.svg?sanitize=true&#34; alt=&#34;Sauce Test Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Multiplexing support&lt;/h4&gt; &#xA;&lt;p&gt;In order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several &lt;code&gt;Namespaces&lt;/code&gt;, which will act as separate communication channels but will share the same underlying connection.&lt;/p&gt; &#xA;&lt;h4&gt;Room support&lt;/h4&gt; &#xA;&lt;p&gt;Within each &lt;code&gt;Namespace&lt;/code&gt;, you can define arbitrary channels, called &lt;code&gt;Rooms&lt;/code&gt;, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it.&lt;/p&gt; &#xA;&lt;p&gt;This is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Socket.IO is not a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server (like &lt;code&gt;ws://echo.websocket.org&lt;/code&gt;) either. Please see the protocol specification &lt;a href=&#34;https://github.com/socketio/socket.io-protocol&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;// with npm&#xA;npm install socket.io&#xA;&#xA;// with yarn&#xA;yarn add socket.io&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;The following example attaches socket.io to a plain Node.JS HTTP server listening on port &lt;code&gt;3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const server = require(&#39;http&#39;).createServer();&#xA;const io = require(&#39;socket.io&#39;)(server);&#xA;io.on(&#39;connection&#39;, client =&amp;gt; {&#xA;  client.on(&#39;event&#39;, data =&amp;gt; { /* … */ });&#xA;  client.on(&#39;disconnect&#39;, () =&amp;gt; { /* … */ });&#xA;});&#xA;server.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const io = require(&#39;socket.io&#39;)();&#xA;io.on(&#39;connection&#39;, client =&amp;gt; { ... });&#xA;io.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Module syntax&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Server } from &#34;socket.io&#34;;&#xA;const io = new Server(server);&#xA;io.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In conjunction with Express&lt;/h3&gt; &#xA;&lt;p&gt;Starting with &lt;strong&gt;3.0&lt;/strong&gt;, express applications have become request handler functions that you pass to &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;http&lt;/code&gt; &lt;code&gt;Server&lt;/code&gt; instances. You need to pass the &lt;code&gt;Server&lt;/code&gt; to &lt;code&gt;socket.io&lt;/code&gt;, not the express application function. Also make sure to call &lt;code&gt;.listen&lt;/code&gt; on the &lt;code&gt;server&lt;/code&gt;, not the &lt;code&gt;app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const app = require(&#39;express&#39;)();&#xA;const server = require(&#39;http&#39;).createServer(app);&#xA;const io = require(&#39;socket.io&#39;)(server);&#xA;io.on(&#39;connection&#39;, () =&amp;gt; { /* … */ });&#xA;server.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In conjunction with Koa&lt;/h3&gt; &#xA;&lt;p&gt;Like Express.JS, Koa works by exposing an application as a request handler function, but only by calling the &lt;code&gt;callback&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const app = require(&#39;koa&#39;)();&#xA;const server = require(&#39;http&#39;).createServer(app.callback());&#xA;const io = require(&#39;socket.io&#39;)(server);&#xA;io.on(&#39;connection&#39;, () =&amp;gt; { /* … */ });&#xA;server.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In conjunction with Fastify&lt;/h3&gt; &#xA;&lt;p&gt;To integrate Socket.io in your Fastify application you just need to register &lt;code&gt;fastify-socket.io&lt;/code&gt; plugin. It will create a &lt;code&gt;decorator&lt;/code&gt; called &lt;code&gt;io&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const app = require(&#39;fastify&#39;)();&#xA;app.register(require(&#39;fastify-socket.io&#39;));&#xA;app.io.on(&#39;connection&#39;, () =&amp;gt; { /* … */ });&#xA;app.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please see the documentation &lt;a href=&#34;https://socket.io/docs/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The source code of the website can be found &lt;a href=&#34;https://github.com/socketio/socket.io-website&#34;&gt;here&lt;/a&gt;. Contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Debug / logging&lt;/h2&gt; &#xA;&lt;p&gt;Socket.IO is powered by &lt;a href=&#34;https://github.com/visionmedia/debug&#34;&gt;debug&lt;/a&gt;. In order to see all the debug output, run your app with the environment variable &lt;code&gt;DEBUG&lt;/code&gt; including the desired scope.&lt;/p&gt; &#xA;&lt;p&gt;To see the output from all of Socket.IO&#39;s debugging scopes you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DEBUG=socket.io* node myapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This runs the &lt;code&gt;gulp&lt;/code&gt; task &lt;code&gt;test&lt;/code&gt;. By default the test will be run with the source code in &lt;code&gt;lib&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Set the environmental variable &lt;code&gt;TEST_VERSION&lt;/code&gt; to &lt;code&gt;compat&lt;/code&gt; to test the transpiled es5-compat version of the code.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;gulp&lt;/code&gt; task &lt;code&gt;test&lt;/code&gt; will always transpile the source code into es5 and export to &lt;code&gt;dist&lt;/code&gt; first before running the test.&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Support us with a monthly donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/socketio#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/socketio/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/backer/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/backer/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on Github with a link to your site. [&lt;a href=&#34;https://opencollective.com/socketio#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/socketio/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/21/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/21/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/22/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/22/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/23/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/23/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/24/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/24/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/25/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/25/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/26/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/26/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/27/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/27/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/28/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/28/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/socketio/sponsor/29/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/socketio/sponsor/29/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/socketio/socket.io/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LegendApp/legend-state</title>
    <updated>2023-07-20T01:46:28Z</updated>
    <id>tag:github.com,2023-07-20:/LegendApp/legend-state</id>
    <link href="https://github.com/LegendApp/legend-state" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Legend-State is a super fast and powerful state library that enables fine-grained reactivity and easy automatic persistence&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Legend-State&lt;/h1&gt; &#xA;&lt;p&gt;Legend-State is a super fast and powerful state manager for JavaScript apps with two primary goals:&lt;/p&gt; &#xA;&lt;h3&gt;1. &lt;span classname=&#34;text-xl&#34;&gt;🦄&lt;/span&gt; As easy as possible to use&lt;/h3&gt; &#xA;&lt;p&gt;There is no boilerplate and there are no actions, reducers, selectors, dispatchers, sagas, thunks, or epics. Observables are just normal objects that you can listen to for changes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Create an observable object&#xA;const state = observable({ settings: { theme: &#39;dark&#39; } })&#xA;&#xA;// Just get and set&#xA;state.settings.theme.get() === &#39;dark&#39;&#xA;state.settings.theme.set(&#39;light&#39;)&#xA;&#xA;// observe re-runs when accessed observables change&#xA;observe(() =&amp;gt; {&#xA;    console.log(state.settings.theme.get())&#xA;})&#xA;&#xA;// Observer components automatically track observables and re-render when they change&#xA;const Component = observer(function Component() {&#xA;    const theme = state.settings.theme.get()&#xA;&#xA;    return &amp;lt;div&amp;gt;Theme: {theme}&amp;lt;/div&amp;gt;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. &lt;span classname=&#34;text-xl&#34;&gt;⚡️&lt;/span&gt; The fastest React state library&lt;/h3&gt; &#xA;&lt;p&gt;Legend-State beats every other state library on just about every metric and is so optimized for arrays that it even beats vanilla JS on the swap benchmark. At only &lt;code&gt;3kb&lt;/code&gt; and with the massive reduction in boilerplate code, you&#39;ll have big savings in file size too.&lt;/p&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://www.legendapp.com/img/dev/state/times.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.legendapp.com/open-source/state&#34;&gt;the documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;npm install @legendapp/state&lt;/code&gt; or &lt;code&gt;yarn add @legendapp/state&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { observable } from &#34;@legendapp/state&#34;&#xA;import { observer } from &#34;@legendapp/state/react&#34;;&#xA;import { persistObservable } from &#34;@legendapp/state/persist&#34;;&#xA;&#xA;// Create an observable object&#xA;const state = observable({ settings: { theme: &#39;dark&#39; } })&#xA;&#xA;// get() returns the raw data&#xA;state.settings.theme.get() === &#39;dark&#39;&#xA;&#xA;// observe re-runs when any observables change&#xA;observe(() =&amp;gt; {&#xA;    console.log(state.settings.theme.get())&#xA;})&#xA;&#xA;// Assign to state with set&#xA;state.settings.theme.set(&#39;light&#39;)&#xA;&#xA;// Automatically persist state. Refresh this page to try it.&#xA;persistObservable(state, { local: &#39;exampleState&#39; })&#xA;&#xA;// Components re-render only when accessed observables change&#xA;const Component = observer(function Component() {&#xA;    const theme = state.settings.theme.get()&#xA;    // state.settings.theme is automatically tracked for changes&#xA;&#xA;    const toggle = () =&amp;gt; {&#xA;        state.settings.theme.set(theme =&amp;gt;&#xA;            theme === &#39;dark&#39; ? &#39;light&#39; : &#39;dark&#39;&#xA;        )&#xA;    }&#xA;&#xA;    return (&#xA;        &amp;lt;div&#xA;            className={theme === &#39;dark&#39; ? &#39;theme-dark&#39; : &#39;theme-light&#39;}&#xA;        &amp;gt;&#xA;            &amp;lt;div&amp;gt;Theme: {theme}&amp;lt;/div&amp;gt;&#xA;            &amp;lt;Button onClick={toggle}&amp;gt;&#xA;                Toggle theme&#xA;            &amp;lt;/Button&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;    )&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✨ Super easy to use - observables are normal objects&lt;/li&gt; &#xA; &lt;li&gt;✨ No boilerplate&lt;/li&gt; &#xA; &lt;li&gt;✨ Safe from 🔫 footguns&lt;/li&gt; &#xA; &lt;li&gt;✨ Designed for maximum performance and scalability&lt;/li&gt; &#xA; &lt;li&gt;✨ React components re-render only on changes&lt;/li&gt; &#xA; &lt;li&gt;✨ Very strongly typed with TypeScript&lt;/li&gt; &#xA; &lt;li&gt;✨ Persistence plugins for automatically saving/loading from storage&lt;/li&gt; &#xA; &lt;li&gt;✨ State can be global or within components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.legendapp.com/open-source/state/why/&#34;&gt;Read more&lt;/a&gt; about why Legend-State might be right for you.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.legendapp.com/open-source/state/&#34;&gt;the documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://join.slack.com/t/legendappcommunity/shared_invite/zt-1mfjknpna-vUL2s1qOuNeZL12~t2RruQ&#34;&gt;Slack&lt;/a&gt; to get involved with the Legend community.&lt;/p&gt; &#xA;&lt;h2&gt;Road to 1.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; An examples page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix types for TypeScript strict mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Also in progress&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; IndexedDB persistence plugin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Remote persistence plugin for Firebase Realtime Database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👩‍⚖️ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LegendApp/legend-state/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Legend-State is created and maintained by &lt;a href=&#34;https://github.com/jmeistrich&#34;&gt;Jay Meistrich&lt;/a&gt; with &lt;a href=&#34;https://www.legendapp.com&#34;&gt;Legend&lt;/a&gt; and &lt;a href=&#34;https://www.bravely.io&#34;&gt;Bravely&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.legendapp.com&#34;&gt;&lt;img src=&#34;https://www.legendapp.com/img/LogoTextOnWhite.png&#34; height=&#34;56&#34; alt=&#34;Legend&#34;&gt;&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;https://www.bravely.io&#34;&gt;&lt;img src=&#34;https://www.legendapp.com/img/bravely-logo.png&#34; height=&#34;56&#34; alt=&#34;Bravely&#34;&gt;&lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>