<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-09T01:42:33Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JedWatson/react-select</title>
    <updated>2022-11-09T01:42:33Z</updated>
    <id>tag:github.com,2022-11-09:/JedWatson/react-select</id>
    <link href="https://github.com/JedWatson/react-select" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Select Component for React.js&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-select&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-select.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/JedWatson/react-select/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/JedWatson/react-select/tree/master.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/JedWatson/react-select?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/JedWatson/react-select/badge.svg?branch=master&amp;amp;service=github&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://thinkmill.com.au/?utm_source=github&amp;amp;utm_medium=badge&amp;amp;utm_campaign=react-select&#34;&gt;&lt;img src=&#34;https://thinkmill.github.io/badge/heart.svg?sanitize=true&#34; alt=&#34;Supported by Thinkmill&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;React-Select&lt;/h1&gt; &#xA;&lt;p&gt;The Select control for &lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt;. Initially built for use in &lt;a href=&#34;https://www.keystonejs.com&#34;&gt;KeystoneJS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.react-select.com&#34;&gt;react-select.com&lt;/a&gt; for live demos and comprehensive docs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;react-select&lt;/code&gt; is funded by &lt;a href=&#34;https://www.thinkmill.com.au&#34;&gt;Thinkmill&lt;/a&gt; and &lt;a href=&#34;https://atlaskit.atlassian.com&#34;&gt;Atlassian&lt;/a&gt;. We are an open source project that is continously supported by the community.&lt;/p&gt; &#xA;&lt;p&gt;React Select helps you develop powerful select components that &lt;em&gt;just work&lt;/em&gt; out of the box, without stopping you from customising the parts that are important to you.&lt;/p&gt; &#xA;&lt;p&gt;For the story behind this component, watch Jed&#39;s talk at React Conf 2019 - &lt;a href=&#34;https://youtu.be/yS0jUnmBujE&#34;&gt;building React Select&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flexible approach to data, with customisable functions&lt;/li&gt; &#xA; &lt;li&gt;Extensible styling API with &lt;a href=&#34;https://emotion.sh&#34;&gt;emotion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Component Injection API for complete control over the UI behaviour&lt;/li&gt; &#xA; &lt;li&gt;Controllable state props and modular architecture&lt;/li&gt; &#xA; &lt;li&gt;Long-requested features like option groups, portal support, animation, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using an older version?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-select.com/upgrade&#34;&gt;v3, v4, and v5 upgrade guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-select.com/upgrade-to-v2&#34;&gt;v2 upgrade guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React Select v1 documentation and examples are available at &lt;a href=&#34;https://v1.react-select.com&#34;&gt;v1.react-select.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation and usage&lt;/h1&gt; &#xA;&lt;p&gt;The easiest way to use react-select is to install it from npm and build it into your app with Webpack.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn add react-select&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use it in your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React, { useState } from &#39;react&#39;;&#xA;import Select from &#39;react-select&#39;;&#xA;&#xA;const options = [&#xA;  { value: &#39;chocolate&#39;, label: &#39;Chocolate&#39; },&#xA;  { value: &#39;strawberry&#39;, label: &#39;Strawberry&#39; },&#xA;  { value: &#39;vanilla&#39;, label: &#39;Vanilla&#39; },&#xA;];&#xA;&#xA;export default function App() {&#xA;  const [selectedOption, setSelectedOption] = useState(null);&#xA;&#xA;  return (&#xA;    &amp;lt;div className=&#34;App&#34;&amp;gt;&#xA;      &amp;lt;Select&#xA;        defaultValue={selectedOption}&#xA;        onChange={setSelectedOption}&#xA;        options={options}&#xA;      /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Props&lt;/h2&gt; &#xA;&lt;p&gt;Common props you may want to specify include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;autoFocus&lt;/code&gt; - focus the control when it mounts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;className&lt;/code&gt; - apply a className to the control&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;classNamePrefix&lt;/code&gt; - apply classNames to inner elements with the given prefix&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isDisabled&lt;/code&gt; - disable the control&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isMulti&lt;/code&gt; - allow the user to select multiple values&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isSearchable&lt;/code&gt; - allow the user to search for matching options&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt; - generate an HTML input with this name, containing the current value&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onChange&lt;/code&gt; - subscribe to change events&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;options&lt;/code&gt; - specify the options the user can select from&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;placeholder&lt;/code&gt; - change the text displayed when no option is selected&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;noOptionsMessage&lt;/code&gt; - ({ inputValue: string }) =&amp;gt; string | null - Text to display when there are no options&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;value&lt;/code&gt; - control the current value&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.react-select.com/props&#34;&gt;props documentation&lt;/a&gt; for complete documentation on the props react-select supports.&lt;/p&gt; &#xA;&lt;h2&gt;Controllable Props&lt;/h2&gt; &#xA;&lt;p&gt;You can control the following props by providing values for them. If you don&#39;t, react-select will manage them for you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;value&lt;/code&gt; / &lt;code&gt;onChange&lt;/code&gt; - specify the current value of the control&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;menuIsOpen&lt;/code&gt; / &lt;code&gt;onMenuOpen&lt;/code&gt; / &lt;code&gt;onMenuClose&lt;/code&gt; - control whether the menu is open&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;inputValue&lt;/code&gt; / &lt;code&gt;onInputChange&lt;/code&gt; - control the value of the search input (changing this will update the available options)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you don&#39;t provide these props, you can set the initial value of the state they control:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;defaultValue&lt;/code&gt; - set the initial value of the control&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;defaultMenuIsOpen&lt;/code&gt; - set the initial open value of the menu&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;defaultInputValue&lt;/code&gt; - set the initial value of the search input&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Methods&lt;/h2&gt; &#xA;&lt;p&gt;React-select exposes two public methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;focus()&lt;/code&gt; - focus the control programmatically&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;blur()&lt;/code&gt; - blur the control programmatically&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customisation&lt;/h2&gt; &#xA;&lt;p&gt;Check the docs for more information on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/styles&#34;&gt;Customising the styles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/components&#34;&gt;Using custom components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/home#animated-components&#34;&gt;Using the built-in animated components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/async&#34;&gt;Creating an async select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/creatable&#34;&gt;Allowing users to create new options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/advanced&#34;&gt;Advanced use-cases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.react-select.com/typescript&#34;&gt;TypeScript guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TypeScript&lt;/h2&gt; &#xA;&lt;p&gt;The v5 release represents a rewrite from JavaScript to TypeScript. The types for v4 and earlier releases are available at &lt;a href=&#34;https://www.npmjs.com/package/@types/react-select&#34;&gt;@types&lt;/a&gt;. See the &lt;a href=&#34;https://www.react-select.com/typescript&#34;&gt;TypeScript guide&lt;/a&gt; for how to use the types starting with v5.&lt;/p&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;p&gt;Thank you to everyone who has contributed to this project. It&#39;s been a wild ride.&lt;/p&gt; &#xA;&lt;p&gt;If you like React Select, you should &lt;a href=&#34;https://twitter.com/jedwatson&#34;&gt;follow me on Twitter&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Shout out to &lt;a href=&#34;https://github.com/jossmac&#34;&gt;Joss Mackison&lt;/a&gt;, &lt;a href=&#34;https://github.com/gwyneplaine&#34;&gt;Charles Lee&lt;/a&gt;, &lt;a href=&#34;https://github.com/Noviny&#34;&gt;Ben Conolly&lt;/a&gt;, &lt;a href=&#34;https://github.com/bladey&#34;&gt;Tom Walker&lt;/a&gt;, &lt;a href=&#34;https://github.com/Methuselah96&#34;&gt;Nathan Bierema&lt;/a&gt;, &lt;a href=&#34;https://github.com/ebonow&#34;&gt;Eric Bonow&lt;/a&gt;, &lt;a href=&#34;https://github.com/mitchellhamilton&#34;&gt;Mitchell Hamilton&lt;/a&gt;, &lt;a href=&#34;https://github.com/bruderstein&#34;&gt;Dave Brotherstone&lt;/a&gt;, &lt;a href=&#34;https://github.com/bvaughn&#34;&gt;Brian Vaughn&lt;/a&gt;, and the &lt;a href=&#34;https://atlassian.design&#34;&gt;Atlassian Design System&lt;/a&gt; team who along with many other contributors have made this possible ❤️&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT Licensed. Copyright (c) Jed Watson 2022.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eoin-barr/pathfinding-visualizer</title>
    <updated>2022-11-09T01:42:33Z</updated>
    <id>tag:github.com,2022-11-09:/eoin-barr/pathfinding-visualizer</id>
    <link href="https://github.com/eoin-barr/pathfinding-visualizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pathfinding Visualizer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/eoin-barr/pathfinding-visualizer/main/assets/visualizer.gif&#34; alt=&#34;visualizer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I saw &lt;a href=&#34;https://github.com/clementmihailescu/Pathfinding-Visualizer&#34;&gt;Clement Mihailescu&#39;s&lt;/a&gt; pathing visualizer using plain JavaScript and CSS as well as other derivatives (&lt;a href=&#34;https://github.com/richwill28/pathfinding-visualizer&#34;&gt;richwill28&lt;/a&gt;) and decided to make one using Next.js, TypeScript and Tailwind. This project implements four pathfinding algorithms (Breadth-First Search, Depth-First Search, Dijkstra, and A-Star) and two maze generation algorithms (Binary Tree and Recursive Division). The deployed pathfinding visualizer can be found &lt;a href=&#34;https://pathfinding-visualizer-nu.vercel.app/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Technologies used&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Next.js&lt;/th&gt; &#xA;   &lt;th&gt;TypeScript&lt;/th&gt; &#xA;   &lt;th&gt;Tailwind&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How run the app locally&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to the repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;yarn dev&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a new browser window &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>didi/LogicFlow</title>
    <updated>2022-11-09T01:42:33Z</updated>
    <id>tag:github.com,2022-11-09:/didi/LogicFlow</id>
    <link href="https://github.com/didi/LogicFlow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A flow chart editing framework focusing on business customization. 专注于业务自定义的流程图编辑框架，支持实现脑图、ER图、UML、工作流等各种图编辑场景。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://logic-flow.org&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;http://logic-flow.org/new-logo.png&#34; alt=&#34;LogicFlow logo&#34; width=&#34;250&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@logicflow/core&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@logicflow/core&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@logicflow/core&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/@logicflow/core&#34; alt=&#34;Download&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/didi/LogicFlow/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/l/@logicflow/core&#34; alt=&#34;LICENSE&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;LogicFlow 是一款流程图编辑框架，提供了一系列流程图交互、编辑所必需的功能和简单灵活的节点自定义、插件等拓展机制，方便我们快速在业务系统内满足类流程图的需求。&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🛠 高拓展性&lt;/p&gt; &lt;p&gt;兼容各种产品自定义的流程编辑需求，绝大部分模块以插件的形式实现，支持各模块自由插拔。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🚀 重执行&lt;/p&gt; &lt;p&gt;流程图能完备的表达业务逻辑，不受流程引擎限制。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🎯 专业&lt;/p&gt; &lt;p&gt;专注于业务流程图编辑的框架&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;h3&gt;安装&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# npm&#xA;$ npm install @logicflow/core @logicflow/extension --save&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;代码示例&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// 创建容器&#xA;&amp;lt;div id=&#34;container&#34;&amp;gt;&amp;lt;/div&amp;gt;;&#xA;&#xA;// 准备数据&#xA;const data = {&#xA;  // 节点&#xA;  nodes: [&#xA;    {&#xA;      id: 21,&#xA;      type: &#39;rect&#39;,&#xA;      x: 100,&#xA;      y: 200,&#xA;      text: {&#xA;        value: &#39;矩形节点&#39;,&#xA;        x: 100,&#xA;        y: 200,&#xA;      },&#xA;    },&#xA;    {&#xA;      id: 50,&#xA;      type: &#39;circle&#39;,&#xA;      x: 300,&#xA;      y: 400,&#xA;      text: {&#xA;        value: &#39;圆形节点&#39;,&#xA;        x: 300,&#xA;        y: 400,&#xA;      },&#xA;    },&#xA;  ],&#xA;  // 边&#xA;  edges: [&#xA;    {&#xA;      type: &#39;polyline&#39;,&#xA;      sourceNodeId: 50,&#xA;      targetNodeId: 21,&#xA;    },&#xA;  ],&#xA;};&#xA;// 渲染画布&#xA;const lf = new LogicFlow({&#xA;  container: document.querySelector(&#39;#container&#39;),&#xA;  width: 700,&#xA;  height: 600,&#xA;});&#xA;&#xA;lf.render(data);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://logic-flow.org&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logic-flow.org/guide/start.html#%E5%AE%89%E8%A3%85&#34;&gt;快速上手&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logic-flow.org/guide/basic/logic-flow.html&#34;&gt;基础教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logic-flow.org/guide/advance/theme.html&#34;&gt;进阶指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logic-flow.org/guide/extension/extension-components.html&#34;&gt;拓展&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logic-flow.org/usage/bpmn.html&#34;&gt;示例&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;核心能力&lt;/h2&gt; &#xA;&lt;h3&gt;流程图编辑器快速搭建&lt;/h3&gt; &#xA;&lt;p&gt;提供了一个流程图编辑所必需的各项能力，这也是 LogicFlow 的基础能力：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;图的绘制能力。基于 SVG 来绘制形状各异的节点和线，并提供了基础的节点（矩形、圆形、多边形等）和线（直线、折线、曲线）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;各类交互能力，让图动起来。根据节点、线、图的各类鼠标事件（hover、点击、拖拽等）做出反应。比如节点拖拽、拖拽创建边、线的调整、双击节点编辑文本等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提升编辑效率的能力。提供网格、对齐线，上一步、下一步，键盘快捷键，图放大缩小等配套能力，帮助用户提升编辑效率&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提供了丰富的 API ，宿主研发通过 API 传参调用和监听事件的方式，与 LogicFlow 完成交互&lt;/p&gt; &lt;p&gt;下面是通过 LogicFlow 内置的节点和配套能力，做的流程图示例 ：&lt;/p&gt; &lt;img src=&#34;https://dpubstatic.udache.com/static/dpubimg/eEMT14E7BR/lfexample1.gif&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;基于业务场景拓展&lt;/h3&gt; &#xA;&lt;p&gt;当基础能力无法满足业务需求的时候，便需要基于业务场景拓展。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置图上所有元素的样式，比如各种节点、线、锚点、箭头、对齐线的大小颜色等，满足对前端样式调整的需求&lt;/li&gt; &#xA; &lt;li&gt;API 拓展。支持在 LogicFlow 上注册自定义的方法，比如通过 API 拓展提供图片下载的方法&lt;/li&gt; &#xA; &lt;li&gt;自定义节点、线。内置的矩形、圆形等图形类节点往往无法满足实际的业务需求，需要定义具有业务意义的节点。LogicFlow 提供了 的方式让用户定制具有自定义图形、业务数据的节点，比如流程审批场景中的 “审批” 节点&lt;/li&gt; &#xA; &lt;li&gt;拓展组件。LogicFlow 在 SVG 图层上提供了 HTML 层和一系列坐标转换逻辑，并支持在 HTML 层注册组件。宿主研发可以通过 LogicFlow 的 API，基于任何 View 框架开发组件，比如节点的右键菜单、控制面板等&lt;/li&gt; &#xA; &lt;li&gt;数据转换 adapter。LogicFlow 默认导出的图数据不一定适合所有业务，此时可以通过 adapter API，在图数据从 LogicFlow 输入、输出的时候做自定义转换，比如转换成 BPMN 规范的图数据&lt;/li&gt; &#xA; &lt;li&gt;内置部分拓展能力。基于上述拓展能力，我们还单独提供了 extension 的包，用来存放当前业务下沉淀出的具有通用性的节点、组件等，比如面向 BPMN 规范的节点和数据 adapter，默认菜单。注意 extension 可以单独安装，并支持按需引入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;基于上述拓展的能力，前端研发能够根据实际业务场景的需求，灵活的开发出所需的节点、组件等。下面有两个基于 LogicFlow 拓展能力做出的流程图：&lt;/p&gt; &#xA;&lt;h3&gt;BPMN应用demo&lt;/h3&gt; &#xA;&lt;p&gt;示例地址：&lt;a href=&#34;http://logic-flow.org/examples/#/extension/bpmn&#34;&gt;http://logic-flow.org/examples/#/extension/bpmn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;源码地址：&lt;a href=&#34;https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/bpmn&#34;&gt;https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/bpmn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dpubstatic.udache.com/static/dpubimg/CS6S6q9Yxf/lfexample2.gif&#34; alt=&#34;图片:bpmn&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;审批流应用demo&lt;/h4&gt; &#xA;&lt;p&gt;示例地址：&lt;a href=&#34;http://logic-flow.org/examples/#/usage/approve&#34;&gt;http://logic-flow.org/examples/#/usage/approve&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;源码地址：&lt;a href=&#34;https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/approve&#34;&gt;https://github.com/didi/LogicFlow/tree/master/examples/src/pages/usage/approve&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dpubstatic.udache.com/static/dpubimg/uBeSlMEytL/lfexample3.gif&#34; alt=&#34;图片: 审批流&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;vue 应用 demo&lt;/h4&gt; &#xA;&lt;p&gt;源码地址 &lt;a href=&#34;https://github.com/xinxin93/logicflow_vue_demo&#34;&gt;https://github.com/xinxin93/logicflow_vue_demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://dpubstatic.udache.com/static/dpubimg/e35cef10-bb7c-4662-a494-f5aac024c092.gif&#34; alt=&#34;https://dpubstatic.udache.com/static/dpubimg/e35cef10-bb7c-4662-a494-f5aac024c092.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;作图工具示例&lt;/h4&gt; &#xA;&lt;p&gt;LogicFlow不仅支持开发类似bpmn.js这种固定整体样式、更偏向生成数据在流程引擎可执行的流程图工具。也支持实现类似ProcessOn这种自由控制样式的作图工具。&lt;/p&gt; &#xA;&lt;p&gt;示例地址：&lt;a href=&#34;http://logic-flow.org/mvp/index.html&#34;&gt;http://logic-flow.org/mvp/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;源码地址：&lt;a href=&#34;https://github.com/didi/LogicFlow/tree/master/site/mvp&#34;&gt;https://github.com/didi/LogicFlow/tree/master/site/mvp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;示例图如下: &lt;img src=&#34;https://raw.githubusercontent.com/didi/LogicFlow/master/docs/assets/images/LogicFlow-1.0-4.png&#34; alt=&#34;logicflow-1.0-4.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;vue3 node-red风格示例&lt;/h4&gt; &#xA;&lt;p&gt;源码地址: &lt;a href=&#34;https://github.com/Logic-Flow/logicflow-node-red-vue3&#34;&gt;https://github.com/Logic-Flow/logicflow-node-red-vue3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Logic-Flow/static@latest/core/node-red.png&#34; alt=&#34;node-red&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;联系我们&lt;/h2&gt; &#xA;&lt;h3&gt;加入微信群&lt;/h3&gt; &#xA;&lt;p&gt;添加微信号：logic-flow 加入用户群&lt;/p&gt; &#xA;&lt;h3&gt;加入 QQ 群&lt;/h3&gt; &#xA;&lt;img src=&#34;https://dpubstatic.udache.com/static/dpubimg/VMBzV7jhh8/qq.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;h3&gt;贡献代码&lt;/h3&gt; &#xA;&lt;p&gt;LogicFlow对外持开放态度，不论是只修改文档的标点符号还是对LogicFlow的整体功能有大的重构我们都欢迎。对于您的每一个PR我们都会认真查看、回复、合并。详情见&lt;a href=&#34;https://github.com/didi/LogicFlow/raw/master/CONTRIBUTING.md&#34;&gt;LogicFlow贡献指南&lt;/a&gt;。&lt;/p&gt;</summary>
  </entry>
</feed>