<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-26T01:41:25Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Nutlope/pdftochat</title>
    <updated>2024-01-26T01:41:25Z</updated>
    <id>tag:github.com,2024-01-26:/Nutlope/pdftochat</id>
    <link href="https://github.com/Nutlope/pdftochat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chat with your PDFs with AI&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://www.pdftochat.com/&#34;&gt; &lt;img alt=&#34;PDFToChat –&amp;nbsp;Chat with your PDFs in seconds.&#34; src=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/public/og-image.png&#34;&gt; &lt;h1 align=&#34;center&#34;&gt;PDFToChat&lt;/h1&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Chat with your PDFs in seconds. Powered by Together AI and Pinecone. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/#tech-stack&#34;&gt;&lt;strong&gt;Tech Stack&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/#deploy-your-own&#34;&gt;&lt;strong&gt;Deploy Your Own&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/#common-errors&#34;&gt;&lt;strong&gt;Common Errors&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/#credits&#34;&gt;&lt;strong&gt;Credits&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/Nutlope/pdftochat/main/#future-tasks&#34;&gt;&lt;strong&gt;Future Tasks&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js &lt;a href=&#34;https://nextjs.org/docs/app&#34;&gt;App Router&lt;/a&gt; for the framework&lt;/li&gt; &#xA; &lt;li&gt;Mixtral through &lt;a href=&#34;https://dub.sh/together-ai&#34;&gt;Together AI&lt;/a&gt; inference for the LLM&lt;/li&gt; &#xA; &lt;li&gt;M2 Bert 80M through &lt;a href=&#34;https://dub.sh/together-ai&#34;&gt;Together AI&lt;/a&gt; for embeddings&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://js.langchain.com/docs/get_started/introduction/&#34;&gt;Langchain.js&lt;/a&gt; for the RAG code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pinecone.io/&#34;&gt;Pinecone&lt;/a&gt; for the vector database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bytescale.com/&#34;&gt;Bytescale&lt;/a&gt; for the PDF storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; for hosting and for the postgres DB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clerk.dev/&#34;&gt;Clerk&lt;/a&gt; for user authentication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; for styling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy Your Own&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy this template to Vercel or any other host. Note that you&#39;ll need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://dub.sh/together-ai/&#34;&gt;Together.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://www.pinecone.io/&#34;&gt;Pinecone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://www.bytescale.com/&#34;&gt;Bytescale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://clerk.dev/&#34;&gt;Clerk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the .example.env for a list of all the required environment variables.&lt;/p&gt; &#xA;&lt;h2&gt;Common errors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check that you&#39;ve created an &lt;code&gt;.env&lt;/code&gt; file that contains your valid (and working) API keys, environment and index name.&lt;/li&gt; &#xA; &lt;li&gt;Check that you&#39;ve set the vector dimensions to &lt;code&gt;768&lt;/code&gt; and that &lt;code&gt;index&lt;/code&gt; matched your specified field in the &lt;code&gt;.env variable&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check that you&#39;ve added a credit card on Together AI if you&#39;re hitting rate limiting issues due to the free tier&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/YoussefUiUx&#34;&gt;Youssef&lt;/a&gt; for the design of the app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/mayowaoshin&#34;&gt;Mako&lt;/a&gt; for the original RAG repo and inspiration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Hacubu&#34;&gt;Joseph&lt;/a&gt; for the langchain help&lt;/li&gt; &#xA; &lt;li&gt;Together AI, Bytescale, Pinecone, and Clerk for sponsoring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future tasks&lt;/h2&gt; &#xA;&lt;p&gt;These are some future tasks that I have planned. Contributions are welcome!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add a trash icon for folks to delete PDFs from the dashboard and implement delete functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add footer to the dashboard page with a support email so folks can contact me with questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Research best practices for chunking and retrieval and play around with them – ideally run benchmarks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try out Langsmith for more observability into how the RAG app runs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Explore best practices for auto scrolling based on other chat apps like chatGPT&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Do some prompt engineering for Mixtral to make replies as good as possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Change the header at the top with something more similar to roomGPT to make it cleaner&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Configure emails on Clerk if I want to eventually add this&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add demo video to the homepage to demonstrate functionality more easily&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Upgrade to Next.js 14 and fix any issues with that&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement sources like perplexity to be clickable with more info&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add analytics to track the number of chats &amp;amp; errors with Vercel Analytics events&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make some changes to the default tailwind &lt;code&gt;prose&lt;/code&gt; to decrease padding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add an initial message with sample questions or just add them as bubbles on the page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Protect API routes by making sure users are signed in before executing chats&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add an option to get answers as markdown or in regular paragraphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement something like SWR to automatically revalidate data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Save chats for each user to get back to later in the postgres DB&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Clean up and customize how the PDF viewer looks to be very minimal&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bring up a message to direct folks to compress PDFs if they&#39;re beyond 10MB&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Migrate to the latest bytescale library and use a self-designed custom uploader&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use a session tracking tool to better understand how folks are using the site&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add better error handling overall with appropriate toasts when actions fail&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for images in PDFs with something like &lt;a href=&#34;https://replicate.com/meta/nougat&#34;&gt;Nougat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add rate limiting for uploads to only allow up to 5-10 uploads a day using upstash redis&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>