<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-27T01:48:04Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>total-typescript/beginners-typescript</title>
    <updated>2022-08-27T01:48:04Z</updated>
    <id>tag:github.com,2022-08-27:/total-typescript/beginners-typescript</id>
    <link href="https://github.com/total-typescript/beginners-typescript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;18 interactive exercises for TypeScript beginners&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://totaltypescript.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/total-typescript/beginners-typescript/main/og-image.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Clone this repo or &lt;a href=&#34;https://gitpod.io/#https://github.com/total-typescript/beginners-typescript&#34;&gt;open in Gitpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Installs all dependencies&#xA;yarn install&#xA;&#xA;# Starts the first exercise&#xA;yarn exercise 01&#xA;&#xA;# Runs linting and tests on the solution&#xA;yarn solution 01&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Video Walkthrough&lt;/h2&gt; &#xA;&lt;p&gt;I walked through the first few exercises on &lt;a href=&#34;https://www.youtube.com/watch?v=p6dO9u0M7MQ&#34;&gt;VSCode&#39;s live stream&lt;/a&gt;! The plan for these exercises is to develop them into a full workshop, and then bundle them into the full video course - &lt;a href=&#34;https://totaltypescript.com&#34;&gt;Total TypeScript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to take the course&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll notice that the course is split into exercises. Each exercise is split into a &lt;code&gt;*.problem.ts&lt;/code&gt; and a &lt;code&gt;*.solution.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To take an exercise:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go into &lt;code&gt;*.problem.ts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn exercise 01&lt;/code&gt;, where &lt;code&gt;01&lt;/code&gt; is the number of the exercise you&#39;re on.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The &lt;code&gt;exercise&lt;/code&gt; script will run TypeScript typechecks and a test suite on the exercise.&lt;/p&gt; &#xA;&lt;p&gt;This course encourages &lt;strong&gt;active, exploratory learning&lt;/strong&gt;. In the video, I&#39;ll explain a problem, and &lt;strong&gt;you&#39;ll be asked to try to find a solution&lt;/strong&gt;. To attempt a solution, you&#39;ll need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/intro.html&#34;&gt;TypeScript&#39;s docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try to find something that looks relevant.&lt;/li&gt; &#xA; &lt;li&gt;Give it a go to see if it solves the problem.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You&#39;ll know if you&#39;ve succeeded because the tests will pass.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you succeed&lt;/strong&gt;, or &lt;strong&gt;if you get stuck&lt;/strong&gt;, unpause the video and check out the &lt;code&gt;*.solution.ts&lt;/code&gt;. You can see if your solution is better or worse than mine!&lt;/p&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;yarn solution 01&lt;/code&gt; to run the tests and typechecking on the solution.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Say thanks to Matt on &lt;a href=&#34;https://twitter.com/mattpocockuk&#34;&gt;Twitter&lt;/a&gt; or by joining his &lt;a href=&#34;https://discord.gg/8S5ujhfTB3&#34;&gt;Discord&lt;/a&gt;. Consider signing up to his &lt;a href=&#34;https://totaltypescript.com&#34;&gt;Total TypeScript course&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;yarn exercise 01&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alias: &lt;code&gt;yarn e 01&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the corresponding &lt;code&gt;*.problem.ts&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;yarn solution 01&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alias: &lt;code&gt;yarn s 01&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the corresponding &lt;code&gt;*.solution.ts&lt;/code&gt; file. If there are multiple, it runs only the first one.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apify/crawlee</title>
    <updated>2022-08-27T01:48:04Z</updated>
    <id>tag:github.com,2022-08-27:/apify/crawlee</id>
    <link href="https://github.com/apify/crawlee" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Crawlee‚ÄîA web scraping and browser automation library for Node.js that helps you build reliable crawlers. Fast.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://crawlee.dev&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/apify/crawlee/master/website/static/img/crawlee-dark.svg?sanitize=true&#34;&gt; &#xA;   &lt;img alt=&#34;Crawlee&#34; src=&#34;https://raw.githubusercontent.com/apify/crawlee/master/website/static/img/crawlee-light.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;small&gt;A web scraping and browser automation library&lt;/small&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@crawlee/core&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@crawlee/core.svg?sanitize=true&#34; alt=&#34;NPM latest version&#34; data-canonical-src=&#34;https://img.shields.io/npm/v/@crawlee/core/next.svg&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@crawlee/core&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@crawlee/core.svg?sanitize=true&#34; alt=&#34;Downloads&#34; data-canonical-src=&#34;https://img.shields.io/npm/dm/@crawlee/core.svg&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/jyEM2PRvMU&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/801163717915574323?label=discord&#34; alt=&#34;Chat on discord&#34; data-canonical-src=&#34;https://img.shields.io/discord/801163717915574323?label=discord&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apify/crawlee/actions/workflows/test-and-release.yml&#34;&gt;&lt;img src=&#34;https://github.com/apify/crawlee/actions/workflows/test-and-release.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ÑπÔ∏è Crawlee is the successor to &lt;a href=&#34;https://sdk.apify.com&#34;&gt;Apify SDK&lt;/a&gt;. üéâ Fully rewritten in &lt;strong&gt;TypeScript&lt;/strong&gt; for a better developer experience, and with even more powerful anti-blocking features. The interface is almost the same as Apify SDK so upgrading is a breeze. Read &lt;a href=&#34;https://crawlee.dev/docs/upgrading/upgrading-to-v3&#34;&gt;the upgrading guide&lt;/a&gt; to learn about the changes. ‚ÑπÔ∏è&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Crawlee covers your crawling and scraping end-to-end and &lt;strong&gt;helps you build reliable scrapers. Fast.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your crawlers will appear human-like and fly under the radar of modern bot protections even with the default configuration. Crawlee gives you the tools to crawl the web for links, scrape data, and store it to disk or cloud while staying configurable to suit your project&#39;s needs.&lt;/p&gt; &#xA;&lt;p&gt;Crawlee is available as the &lt;a href=&#34;https://www.npmjs.com/package/crawlee&#34;&gt;&lt;code&gt;crawlee&lt;/code&gt;&lt;/a&gt; NPM package.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üëâ &lt;strong&gt;View full documentation, guides and examples on the &lt;a href=&#34;https://crawlee.dev&#34;&gt;Crawlee project website&lt;/a&gt;&lt;/strong&gt; üëà&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;We recommend visiting the &lt;a href=&#34;https://crawlee.dev/docs/introduction&#34;&gt;Introduction tutorial&lt;/a&gt; in Crawlee documentation for more information.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Crawlee requires &lt;strong&gt;Node.js 16 or higher&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;With Crawlee CLI&lt;/h3&gt; &#xA;&lt;p&gt;The fastest way to try Crawlee out is to use the &lt;strong&gt;Crawlee CLI&lt;/strong&gt; and choose the &lt;strong&gt;Getting started example&lt;/strong&gt;. The CLI will install all the necessary dependencies and add boilerplate code for you to play with.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx crawlee create my-crawler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd my-crawler&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer adding Crawlee &lt;strong&gt;into your own project&lt;/strong&gt;, try the example below. Because it uses &lt;code&gt;PlaywrightCrawler&lt;/code&gt; we also need to install &lt;a href=&#34;https://playwright.dev&#34;&gt;Playwright&lt;/a&gt;. It&#39;s not bundled with Crawlee to reduce install size.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install crawlee playwright&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { PlaywrightCrawler, Dataset } from &#39;crawlee&#39;;&#xA;&#xA;// PlaywrightCrawler crawls the web using a headless&#xA;// browser controlled by the Playwright library.&#xA;const crawler = new PlaywrightCrawler({&#xA;    // Use the requestHandler to process each of the crawled pages.&#xA;    async requestHandler({ request, page, enqueueLinks, log }) {&#xA;        const title = await page.title();&#xA;        log.info(`Title of ${request.loadedUrl} is &#39;${title}&#39;`);&#xA;&#xA;        // Save results as JSON to ./storage/datasets/default&#xA;        await Dataset.pushData({ title, url: request.loadedUrl });&#xA;&#xA;        // Extract links from the current page&#xA;        // and add them to the crawling queue.&#xA;        await enqueueLinks();&#xA;    },&#xA;    // Uncomment this option to see the browser window.&#xA;    // headless: false,&#xA;});&#xA;&#xA;// Add first URL to the queue and start the crawl.&#xA;await crawler.run([&#39;https://crawlee.dev&#39;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, Crawlee stores data to &lt;code&gt;./storage&lt;/code&gt; in the current working directory. You can override this directory via Crawlee configuration. For details, see &lt;a href=&#34;https://crawlee.dev/docs/guides/configuration&#34;&gt;Configuration guide&lt;/a&gt;, &lt;a href=&#34;https://crawlee.dev/docs/guides/request-storage&#34;&gt;Request storage&lt;/a&gt; and &lt;a href=&#34;https://crawlee.dev/docs/guides/result-storage&#34;&gt;Result storage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ† Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single interface for &lt;strong&gt;HTTP and headless browser&lt;/strong&gt; crawling&lt;/li&gt; &#xA; &lt;li&gt;Persistent &lt;strong&gt;queue&lt;/strong&gt; for URLs to crawl (breadth &amp;amp; depth first)&lt;/li&gt; &#xA; &lt;li&gt;Pluggable &lt;strong&gt;storage&lt;/strong&gt; of both tabular data and files&lt;/li&gt; &#xA; &lt;li&gt;Automatic &lt;strong&gt;scaling&lt;/strong&gt; with available system resources&lt;/li&gt; &#xA; &lt;li&gt;Integrated &lt;strong&gt;proxy rotation&lt;/strong&gt; and session management&lt;/li&gt; &#xA; &lt;li&gt;Lifecycles customizable with &lt;strong&gt;hooks&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt; to bootstrap your projects&lt;/li&gt; &#xA; &lt;li&gt;Configurable &lt;strong&gt;routing&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt; and &lt;strong&gt;retries&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dockerfiles&lt;/strong&gt; ready to deploy&lt;/li&gt; &#xA; &lt;li&gt;Written in &lt;strong&gt;TypeScript&lt;/strong&gt; with generics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üëæ HTTP crawling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zero config &lt;strong&gt;HTTP2 support&lt;/strong&gt;, even for proxies&lt;/li&gt; &#xA; &lt;li&gt;Automatic generation of &lt;strong&gt;browser-like headers&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Replication of browser &lt;strong&gt;TLS fingerprints&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integrated fast &lt;strong&gt;HTML parsers&lt;/strong&gt;. Cheerio and JSDOM&lt;/li&gt; &#xA; &lt;li&gt;Yes, you can scrape &lt;strong&gt;JSON APIs&lt;/strong&gt; as well&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üíª Real browser crawling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JavaScript &lt;strong&gt;rendering&lt;/strong&gt; and &lt;strong&gt;screenshots&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Headless&lt;/strong&gt; and &lt;strong&gt;headful&lt;/strong&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Zero-config generation of &lt;strong&gt;human-like fingerprints&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic &lt;strong&gt;browser management&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;Playwright&lt;/strong&gt; and &lt;strong&gt;Puppeteer&lt;/strong&gt; with the same interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;, &lt;strong&gt;Firefox&lt;/strong&gt;, &lt;strong&gt;Webkit&lt;/strong&gt; and many others&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage on the Apify platform&lt;/h2&gt; &#xA;&lt;p&gt;Crawlee is open-source and runs anywhere, but since it&#39;s developed by &lt;a href=&#34;https://apify.com&#34;&gt;Apify&lt;/a&gt;, it&#39;s easy to set up on the Apify platform and run in the cloud. Visit the &lt;a href=&#34;https://sdk.apify.com&#34;&gt;Apify SDK website&lt;/a&gt; to learn more about deploying Crawlee to the Apify platform.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you find any bug or issue with Crawlee, please &lt;a href=&#34;https://github.com/apify/crawlee/issues&#34;&gt;submit an issue on GitHub&lt;/a&gt;. For questions, you can ask on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/apify&#34;&gt;Stack Overflow&lt;/a&gt;, in GitHub Discussions or you can join our &lt;a href=&#34;https://discord.com/invite/jyEM2PRvMU&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Your code contributions are welcome, and you&#39;ll be praised to eternity! If you have any ideas for improvements, either submit an issue or create a pull request. For contribution guidelines and the code of conduct, see &lt;a href=&#34;https://github.com/apify/crawlee/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&#34;https://github.com/apify/crawlee/raw/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yarnpkg/berry</title>
    <updated>2022-08-27T01:48:04Z</updated>
    <id>tag:github.com,2022-08-27:/yarnpkg/berry</id>
    <link href="https://github.com/yarnpkg/berry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì¶üêà Active development trunk for Yarn ‚öí&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://yarnpkg.com/&#34;&gt; &lt;img alt=&#34;Yarn&#34; src=&#34;https://github.com/yarnpkg/assets/raw/master/yarn-kitten-full.png?raw=true&#34; width=&#34;546&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Fast, reliable, and secure dependency management. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry&#34;&gt;&lt;img alt=&#34;GitHub Actions status&#34; src=&#34;https://github.com/yarnpkg/berry/workflows/Integration/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yarnpkg&#34;&gt;&lt;img alt=&#34;Discord Chat&#34; src=&#34;https://img.shields.io/discord/226791405589233664.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry&#34;&gt;&lt;img alt=&#34;Latest CLI Release&#34; src=&#34;https://img.shields.io/npm/v/@yarnpkg/cli/latest?label=latest&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Yarn is a modern package manager split into various packages. Its novel architecture allows to do things currently impossible with existing solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Yarn supports &lt;a href=&#34;https://yarnpkg.com/features/plugins&#34;&gt;plugins&lt;/a&gt;; adding a plugin is as simple as adding it into your repository&lt;/li&gt; &#xA; &lt;li&gt;Yarn supports Node by default but isn&#39;t limited to it - plugins can add support for other languages&lt;/li&gt; &#xA; &lt;li&gt;Yarn supports &lt;a href=&#34;https://yarnpkg.com/features/workspaces&#34;&gt;workspaces&lt;/a&gt; natively, and its CLI takes advantage of that&lt;/li&gt; &#xA; &lt;li&gt;Yarn uses a bash-like &lt;a href=&#34;https://github.com/yarnpkg/berry/tree/master/packages/yarnpkg-shell#yarnpkgshell&#34;&gt;portable shell&lt;/a&gt; to make package scripts portable across of Windows, Linux, and macOS&lt;/li&gt; &#xA; &lt;li&gt;Yarn is first and foremost a &lt;a href=&#34;https://yarnpkg.com/api/&#34;&gt;Node API&lt;/a&gt; that can be used programmatically (via &lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-core&#34;&gt;@yarnpkg/core&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Yarn is written in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; and is fully type-checked&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Our supports&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/yarnpkg&#34;&gt;Gold sponsors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;table width=&#34;100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=yarn&amp;amp;utm_source=github#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://assets.website-files.com/5de9972f49103c5df3964004/5f0c1146992a5e9e4fa553e6_logo.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=yarn&amp;amp;utm_source=github#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1037931/151548177-308f0a41-fb0e-4311-9969-4a2455b08686.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;All your environment variables, in one place&lt;/b&gt;. Stop struggling with scattered API keys, hacking together home-brewed tools, and avoiding access controls. Keep your team and servers in sync with &lt;b&gt;&lt;a href=&#34;https://www.doppler.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=yarn&amp;amp;utm_source=github&#34;&gt;Doppler&lt;/a&gt;&lt;/b&gt;. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=berry&amp;amp;utm_source=github#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1037931/151547094-7aa4a5cb-07e4-4b8a-ab8f-0a15fd63ab7d.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=berry&amp;amp;utm_source=github#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1037931/151547899-3655e0d3-3bdb-4351-bd75-af2bebd3ce92.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;Your app, enterprise-ready&lt;/b&gt;. Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months with &lt;b&gt;&lt;a href=&#34;https://workos.com/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=berry&amp;amp;utm_source=github&#34;&gt;WorkOS&lt;/a&gt;&lt;/b&gt;. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;But also&lt;/h3&gt; &#xA;&lt;table width=&#34;100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.datadoghq.com/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1037931/86770706-62299e00-c051-11ea-931a-2831c894ab6a.png&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;a href=&#34;https://www.datadoghq.com/&#34;&gt;Datadog&lt;/a&gt;&lt;/b&gt; has been sponsoring the time from our lead maintainer for more than a year now. They also upgraded our account so that we can benefit from long-term telemetry (&lt;a href=&#34;https://github.com/yarnpkg/berry/issues/1250&#34;&gt;RFC&lt;/a&gt;). &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://sysgears.com/&#34;&gt; &lt;img src=&#34;https://cdn3.sysgears.com/images/logo-128bacee32b1c70b00b6454397eeedc5.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;a href=&#34;https://sysgears.com/&#34;&gt;Sysgears&lt;/a&gt;&lt;/b&gt; also sponsored time from very early in the 2.x development. In particular, their strong investment is the reason why Yarn 2 supports node_modules installs even better than it used to. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.netlify.com/&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/b8/Netlify_logo.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;&lt;/b&gt; has been the historical provider for our website. Each time we got issues, they jumped to our help. Their live previews have been super helpful in our development process. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1037931/86770912-bc2a6380-c051-11ea-9f99-97161b2d7cf2.png&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Cloudflare&lt;/a&gt;&lt;/b&gt; has also been a historical partner. While we don&#39;t directly mirror the npm registry anymore, they still power our website to make its delivery as fast as possible. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.algolia.com/&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/d/da/Algolia_logo.svg?sanitize=true&#34; width=&#34;140&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;b&gt;&lt;a href=&#34;https://www.algolia.com/&#34;&gt;Algolia&lt;/a&gt;&lt;/b&gt; contributed a lot to our documentation over the years. They still power the search engine we use on both versions of the documentation. &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Consult the &lt;a href=&#34;https://yarnpkg.com/getting-started/install&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;Consult the &lt;a href=&#34;https://yarnpkg.com/getting-started/migration&#34;&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation can be found at &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarnpkg.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;The API documentation can be found at &lt;a href=&#34;https://yarnpkg.com/api&#34;&gt;yarnpkg.com/api&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Current status&lt;/h2&gt; &#xA;&lt;p&gt;On top of our classic integration tests, we also run Yarn every day against the latest versions of the toolchains used by our community - just in case. Everything should be green!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th&gt;Toolchains&lt;/th&gt;&#xA;   &lt;th&gt;Tooling&lt;/th&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-nm-angular-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20NM%20Angular/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-pnp-angular-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20PnP%20Angular/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-cra-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20CRA/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-create-vue-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Create-Vue/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-gatsby-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Gatsby/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-gulp-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Gulp/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-next-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Next/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-preact-cli-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Preact%20CLI/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-svelte-kit-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20SvelteKit/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-vue-cli-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Vue-CLI/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &lt;/td&gt;&#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-esbuild-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20ESBuild/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-docusaurus-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Docusaurus/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-eslint-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20ESLint/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-fsevents-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20FSEvents/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-husky-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Husky/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-jest-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Jest/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-mocha-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Mocha/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-nyc-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20NYC/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-parcel-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Parcel/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-prettier-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Prettier/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-rollup-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Rollup/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-snowpack-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Snowpack/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-storybook-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Storybook/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-typescript-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20TypeScript/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/yarnpkg/berry/actions/workflows/e2e-webpack-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/yarnpkg/berry/workflows/E2E%20Webpack/badge.svg?event=schedule&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Consult the &lt;a href=&#34;https://yarnpkg.com/advanced/contributing&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building your own bundle&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository, then run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn build:cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;After building the CLI your global &lt;code&gt;yarn&lt;/code&gt; will immediately start to reflect your local changes. This is because Yarn will pick up the &lt;a href=&#34;https://yarnpkg.com/configuration/yarnrc#yarnPath&#34;&gt;&lt;code&gt;yarnPath&lt;/code&gt;&lt;/a&gt; settings in this repository&#39;s &lt;a href=&#34;https://yarnpkg.com/configuration/yarnrc&#34;&gt;&lt;code&gt;.yarnrc.yml&lt;/code&gt;&lt;/a&gt;, which is configured to use the newly built CLI if available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Works out of the box!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that no other command is needed! Given that our dependencies are checked-in within the repository (within the &lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/.yarn/cache&#34;&gt;&lt;code&gt;.yarn/cache&lt;/code&gt;&lt;/a&gt; directory), you don&#39;t even need to run &lt;a href=&#34;https://yarnpkg.com/cli/install&#34;&gt;&lt;code&gt;yarn install&lt;/code&gt;&lt;/a&gt;. Everything just works right after cloning the project and is guaranteed to continue to work ten years from now üôÇ&lt;/p&gt; &#xA;&lt;h2&gt;Yarn plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Default plugins&lt;/h3&gt; &#xA;&lt;p&gt;Those plugins typically come bundled with Yarn. You don&#39;t need to do anything special to use them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-compat&#34;&gt;plugin-compat&lt;/a&gt; contains a few built-in patches applied to improve PnP support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-constraints&#34;&gt;plugin-constraints&lt;/a&gt; adds support for &lt;a href=&#34;https://yarnpkg.com/features/constraints&#34;&gt;constraints&lt;/a&gt; to Yarn.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-dlx&#34;&gt;plugin-dlx&lt;/a&gt; adds support for the &lt;a href=&#34;https://yarnpkg.com/cli/dlx&#34;&gt;&lt;code&gt;yarn dlx&lt;/code&gt;&lt;/a&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-essentials&#34;&gt;plugin-essentials&lt;/a&gt; adds various commands deemed necessary for a package manager (add, remove, ...).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-exec&#34;&gt;plugin-exec&lt;/a&gt; adds support for using the &lt;a href=&#34;https://github.com/yarnpkg/berry/tree/master/packages/plugin-exec#documentation&#34;&gt;&lt;code&gt;exec:&lt;/code&gt;&lt;/a&gt; protocol within your dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-file&#34;&gt;plugin-file&lt;/a&gt; adds support for using the &lt;code&gt;file:&lt;/code&gt; protocol within your dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-git&#34;&gt;plugin-git&lt;/a&gt; adds support for cloning packages from Git repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-github&#34;&gt;plugin-github&lt;/a&gt; adds support for using GitHub references as dependencies. &lt;a href=&#34;https://stackoverflow.com/a/13636954/880703&#34;&gt;This plugin doesn&#39;t use git.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-http&#34;&gt;plugin-http&lt;/a&gt; adds support for using straight URL references as dependencies (tgz archives only).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-init&#34;&gt;plugin-init&lt;/a&gt; adds support for the &lt;a href=&#34;https://yarnpkg.com/cli/init&#34;&gt;&lt;code&gt;yarn init&lt;/code&gt;&lt;/a&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-interactive-tools&#34;&gt;plugin-interactive-tools&lt;/a&gt; adds support for various interactive commands (&lt;a href=&#34;https://yarnpkg.com/cli/upgrade-interactive&#34;&gt;&lt;code&gt;yarn upgrade-interactive&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-link&#34;&gt;plugin-link&lt;/a&gt; adds support for using &lt;a href=&#34;https://yarnpkg.com/features/protocols#whats-the-difference-between-link-and-portal&#34;&gt;&lt;code&gt;link:&lt;/code&gt; and &lt;code&gt;portal:&lt;/code&gt;&lt;/a&gt; references as dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-nm&#34;&gt;plugin-nm&lt;/a&gt; adds support for installing packages through a &lt;code&gt;node_modules&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-npm&#34;&gt;plugin-npm&lt;/a&gt; adds support for using &lt;a href=&#34;https://semver.org&#34;&gt;semver ranges&lt;/a&gt; dependencies, resolving them from an npm-like registry.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-npm-cli&#34;&gt;plugin-npm-cli&lt;/a&gt; adds support for npm-specific commands (&lt;a href=&#34;https://yarnpkg.com/cli/npm/login&#34;&gt;&lt;code&gt;yarn npm login&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://yarnpkg.com/cli/npm/publish&#34;&gt;&lt;code&gt;yarn npm publish&lt;/code&gt;&lt;/a&gt;, ...).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-pack&#34;&gt;plugin-pack&lt;/a&gt; adds support for the &lt;a href=&#34;https://yarnpkg.com/cli/pack&#34;&gt;&lt;code&gt;yarn pack&lt;/code&gt;&lt;/a&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-patch&#34;&gt;plugin-patch&lt;/a&gt; adds support for the &lt;code&gt;patch:&lt;/code&gt; protocol.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-pnp&#34;&gt;plugin-pnp&lt;/a&gt; adds support for installing JavaScript dependencies through the &lt;a href=&#34;https://yarnpkg.com/features/pnp&#34;&gt;Plug&#39;n&#39;Play&lt;/a&gt; specification.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-stage&#34;&gt;plugin-stage&lt;/a&gt; adds support for the &lt;a href=&#34;https://yarnpkg.com/cli/stage&#34;&gt;&lt;code&gt;yarn stage&lt;/code&gt;&lt;/a&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-typescript&#34;&gt;plugin-typescript&lt;/a&gt; improves the user experience when working with TypeScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-version&#34;&gt;plugin-version&lt;/a&gt; adds support for the new &lt;a href=&#34;https://yarnpkg.com/features/release-workflow&#34;&gt;release workflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/plugin-workspace-tools&#34;&gt;plugin-workspace-tools&lt;/a&gt; adds support for the &lt;a href=&#34;https://yarnpkg.com/cli/workspaces/foreach&#34;&gt;&lt;code&gt;yarn workspaces foreach&lt;/code&gt;&lt;/a&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Third-party plugins&lt;/h3&gt; &#xA;&lt;p&gt;Plugins can be developed by third-party entities. To use them within your applications, just specify the full plugin URL when calling &lt;a href=&#34;https://yarnpkg.com/cli/plugin/import&#34;&gt;&lt;code&gt;yarn plugin import&lt;/code&gt;&lt;/a&gt;. Note that plugins aren&#39;t fetched from the npm registry at this time - they must be distributed as a single JavaScript file.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a new plugin&lt;/h3&gt; &#xA;&lt;p&gt;To create your own plugin, please refer to the &lt;a href=&#34;https://yarnpkg.com/features/plugins&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Generic packages&lt;/h2&gt; &#xA;&lt;p&gt;The following packages are generic and can be used in a variety of purposes (including to implement other package managers, but not only):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-core&#34;&gt;@yarnpkg/core&lt;/a&gt; allows any application to manipulate a project programmatically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-fslib&#34;&gt;@yarnpkg/fslib&lt;/a&gt; is a set of tools to abstract the filesystem through type-safe primitives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-libzip&#34;&gt;@yarnpkg/libzip&lt;/a&gt; contains zlib+libzip bindings compiled to WebAssembly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-nm&#34;&gt;@yarnpkg/nm&lt;/a&gt; contains the &lt;code&gt;node_modules&lt;/code&gt; tree builder and hoister.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-parsers&#34;&gt;@yarnpkg/parsers&lt;/a&gt; can be used to parse the language used by &lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-shell&#34;&gt;@yarnpkg/shell&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-pnp&#34;&gt;@yarnpkg/pnp&lt;/a&gt; can be used to generate &lt;a href=&#34;https://yarnpkg.com/features/pnp&#34;&gt;Plug&#39;n&#39;Play&lt;/a&gt;-compatible hooks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-pnpify&#34;&gt;@yarnpkg/pnpify&lt;/a&gt; is a CLI tool to transparently add PnP support to various tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-sdks&#34;&gt;@yarnpkg/sdks&lt;/a&gt; is a CLI tool to generate the &lt;a href=&#34;https://yarnpkg.com/getting-started/editor-sdks&#34;&gt;PnP Editor SDKs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-shell&#34;&gt;@yarnpkg/shell&lt;/a&gt; is a portable bash-like shell interpreter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Yarn packages&lt;/h2&gt; &#xA;&lt;p&gt;The following packages are meant to be used by Yarn itself, and probably won&#39;t be useful to other applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-builder&#34;&gt;@yarnpkg/builder&lt;/a&gt; contains a CLI tool to package berry and its plugins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-cli&#34;&gt;@yarnpkg/cli&lt;/a&gt; is a CLI entry point built on top of &lt;a href=&#34;https://raw.githubusercontent.com/yarnpkg/berry/master/packages/yarnpkg-core&#34;&gt;@yarnpkg/core&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>