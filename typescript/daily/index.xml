<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-04T01:47:32Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>triggerdotdev/trigger.dev</title>
    <updated>2023-02-04T01:47:32Z</updated>
    <id>tag:github.com,2023-02-04:/triggerdotdev/trigger.dev</id>
    <link href="https://github.com/triggerdotdev/trigger.dev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚ú® Trigger.dev is an open-source platform that makes it easy for developers to create event-driven background tasks directly in their code.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/triggerdotdev/trigger.dev/eebe37109e33beae6390ee19029fce8a5934c84b/apps/webapp/public/images/logo-banner.png&#34; alt=&#34;Hero&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://twitter.com/triggerdotdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/triggerdotdev.svg?style=social&amp;amp;label=Follow%20%40trigger.dev&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@triggerdotdev&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/channel/subscribers/UCu-PdxpWtIrrd7vW0N5T6ZA?style=social&#34; alt=&#34;YouTube Channel Subscribers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/triggerdotdev/trigger.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/triggerdotdev/trigger.dev?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://trigger.dev&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/JtBAxBr2m3&#34;&gt;Community&lt;/a&gt; | &lt;a href=&#34;https://docs.trigger.dev&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;&lt;strong&gt;‚ú® Trigger.dev&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;strong&gt;The developer-first open source Zapier alternative.&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Trigger.dev is an open source platform that makes it easy for developers to create event-driven background tasks directly in their code. Build, test and run workflows locally using our SDK. Subscribe to webhooks, schedule jobs, run background jobs and add long delays easily and reliably. In our web app you get full visibility of every run your workflow has ever made making it easier to monitor and debug.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;‚≠êÔ∏è Features:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üëÇ Easily subscribe to &lt;a href=&#34;https://docs.trigger.dev/triggers/webhooks&#34;&gt;webhooks&lt;/a&gt; ‚Äî they work locally without tunnelling.&lt;/li&gt; &#xA; &lt;li&gt;üî• Fire your own &lt;a href=&#34;https://docs.trigger.dev/triggers/custom-events&#34;&gt;custom events&lt;/a&gt;‚Äîa single event can trigger multiple workflows.&lt;/li&gt; &#xA; &lt;li&gt;üìÜ &lt;a href=&#34;https://docs.trigger.dev/triggers/scheduled&#34;&gt;Schedule workflows&lt;/a&gt;‚Äîeasily repeat tasks or use CRON syntax for advanced cases.&lt;/li&gt; &#xA; &lt;li&gt;üö¶ Add &lt;a href=&#34;https://docs.trigger.dev/functions/delays&#34;&gt;long delays&lt;/a&gt; inside workflows (up to a year) and they will pick up where they left off.&lt;/li&gt; &#xA; &lt;li&gt;ü§ù When your server goes down &lt;a href=&#34;https://docs.trigger.dev/guides/resumability&#34;&gt;it‚Äôs not a problem&lt;/a&gt;, workflows will reconnect and continue.&lt;/li&gt; &#xA; &lt;li&gt;ü™ß &lt;a href=&#34;https://docs.trigger.dev/viewing-runs&#34;&gt;View every step of every run&lt;/a&gt;, with data, previews and errors.&lt;/li&gt; &#xA; &lt;li&gt;üëã Connect to and authenticate with APIs using our custom integrations.&lt;/li&gt; &#xA; &lt;li&gt;üöó If you have a custom use case, we support &lt;a href=&#34;https://docs.trigger.dev/functions/fetch&#34;&gt;Fetch for calling any HTTP endpoint&lt;/a&gt; or &lt;a href=&#34;https://docs.trigger.dev/triggers/webhooks&#34;&gt;webhooks&lt;/a&gt; for subscribing to events from APIs.&lt;/li&gt; &#xA; &lt;li&gt;üì° All API calls are automatically retried with exponential back off.&lt;/li&gt; &#xA; &lt;li&gt;üòÄ TypeScript SDK, so whether you‚Äôre using JavaScript or TypeScript you will have a great experience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üå± Documentation:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/getting-started&#34;&gt;Getting Started with Trigger.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Example workflows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/examples/resend&#34;&gt;Welcome email drip campaign using Resend and Slack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/examples/slack&#34;&gt;Post to Slack when a GitHub issue is created or modified&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/examples/shopify&#34;&gt;Create a new product on Shopify&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/examples/github&#34;&gt;When a GitHub repo is starred, post information about the user to Slack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Triggers: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/triggers/webhooks&#34;&gt;Webhooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/triggers/custom-events&#34;&gt;Custom events&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/triggers/scheduled&#34;&gt;Scheduled&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Functions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/functions/fetch&#34;&gt;Fetch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/functions/logging&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/functions/delays&#34;&gt;Delays&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/functions/send-event&#34;&gt;Send event&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.trigger.dev/functions/loops-conditionals-etc&#34;&gt;Loops, conditionals, etc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;üî¨ &lt;strong&gt;Anatomy of a workflow&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You create workflows in code on your server using our SDK&lt;/li&gt; &#xA; &lt;li&gt;Each API integration is a separate package, e.g. &lt;code&gt;@trigger.dev/slack&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Each workflow has an event that triggers it, e.g. &lt;code&gt;github.events.newStarEvent&lt;/code&gt;, &lt;code&gt;scheduleEvent&lt;/code&gt;, &lt;code&gt;customEvent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Each workflow has a &lt;code&gt;run&lt;/code&gt; function that is called when the event is triggered&lt;/li&gt; &#xA; &lt;li&gt;If we don&#39;t have an integration for the API you want to use, you can use &lt;code&gt;fetch&lt;/code&gt; to call any HTTP endpoint and &lt;code&gt;webhookEvent&lt;/code&gt; to subscribe to webhooks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Example workflows&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;details open&gt;&#xA; &lt;summary&gt; Post to Slack when a GitHub issue is created or modified &lt;/summary&gt; &#xA; &lt;p&gt;&lt;em&gt;Integrations required: Slack, GitHub&lt;/em&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { Trigger } from &#34;@trigger.dev/sdk&#34;;&#xA;import * as github from &#34;@trigger.dev/github&#34;;&#xA;import * as slack from &#34;@trigger.dev/slack&#34;;&#xA;&#xA;new Trigger({&#xA;  id: &#34;new-github-star-to-slack&#34;,&#xA;  name: &#34;New GitHub Star: triggerdotdev/trigger.dev&#34;,&#xA;  apiKey: &#34;&amp;lt;my_api_key&amp;gt;&#34;,&#xA;  on: github.events.newStarEvent({&#xA;    repo: &#34;triggerdotdev/trigger.dev&#34;,&#xA;  }),&#xA;  run: async (event) =&amp;gt; {&#xA;    await slack.postMessage(&#34;github-stars&#34;, {&#xA;      channelName: &#34;github-stars&#34;,&#xA;      text: `New GitHub star from \n&amp;lt;${event.sender.html_url}|${event.sender.login}&amp;gt;`,&#xA;    });&#xA;  },&#xA;}).listen();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Welcome email drip campaign &lt;/summary&gt; &#xA; &lt;p&gt;&lt;em&gt;Integrations required: Slack, Resend&lt;/em&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { customEvent, Trigger, sendEvent } from &#34;@trigger.dev/sdk&#34;;&#xA;import * as resend from &#34;@trigger.dev/resend&#34;;&#xA;import * as slack from &#34;@trigger.dev/slack&#34;;&#xA;import React from &#34;react&#34;;&#xA;import { z } from &#34;zod&#34;;&#xA;import { getUser } from &#34;../db&#34;;&#xA;import { InactiveEmail, TipsEmail, WelcomeEmail } from &#34;./email-templates&#34;;&#xA;&#xA;new Trigger({&#xA;  id: &#34;welcome-email-campaign&#34;,&#xA;  name: &#34;Welcome email drip campaign&#34;,&#xA;  apiKey: &#34;&amp;lt;my_api_key&amp;gt;&#34;,&#xA;  on: customEvent({&#xA;    name: &#34;user.created&#34;,&#xA;    schema: z.object({&#xA;      userId: z.string(),&#xA;    }),&#xA;  }),&#xA;  async run(event, context) {&#xA;    //get the user data from the database&#xA;    const user = await getUser(event.userId);&#xA;&#xA;    await slack.postMessage(&#34;send-to-slack&#34;, {&#xA;      channelName: &#34;new-users&#34;,&#xA;      text: `New user signed up: ${user.name} (${user.email})`,&#xA;    });&#xA;&#xA;    //Send the first email&#xA;    const welcomeResponse = await resend.sendEmail(&#34;welcome-email&#34;, {&#xA;      from: &#34;Trigger.dev &amp;lt;james@email.trigger.dev&amp;gt;&#34;,&#xA;      replyTo: &#34;James &amp;lt;james@trigger.dev&amp;gt;&#34;,&#xA;      to: user.email,&#xA;      subject: &#34;Welcome to Trigger.dev&#34;,&#xA;      react: &amp;lt;WelcomeEmail name={user.name} /&amp;gt;,&#xA;    });&#xA;    await context.logger.debug(&#xA;      `Sent welcome email to ${welcomeResponse.to} with id ${welcomeResponse.id}`&#xA;    );&#xA;&#xA;    //wait 1 day, check if the user has created a workflow and send the appropriate email&#xA;    await context.waitFor(&#34;wait-a-while&#34;, { days: 1 });&#xA;    const updatedUser = await getUser(event.userId);&#xA;&#xA;    if (updatedUser.hasOnboarded) {&#xA;      await resend.sendEmail(&#34;onboarding-complete&#34;, {&#xA;        from: &#34;Trigger.dev &amp;lt;james@email.trigger.dev&amp;gt;&#34;,&#xA;        replyTo: &#34;James &amp;lt;james@trigger.dev&amp;gt;&#34;,&#xA;        to: updatedUser.email,&#xA;        subject: &#34;Pro tips for workflows&#34;,&#xA;        react: &amp;lt;TipsEmail name={updatedUser.name} /&amp;gt;,&#xA;      });&#xA;    } else {&#xA;      await resend.sendEmail(&#34;onboarding-incomplete&#34;, {&#xA;        from: &#34;Trigger.dev &amp;lt;james@email.trigger.dev&amp;gt;&#34;,&#xA;        replyTo: &#34;James &amp;lt;james@trigger.dev&amp;gt;&#34;,&#xA;        to: updatedUser.email,&#xA;        subject: &#34;Help with your first workflow&#34;,&#xA;        react: &amp;lt;InactiveEmail name={updatedUser.name} /&amp;gt;,&#xA;      });&#xA;    }&#xA;  },&#xA;}).listen();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.trigger.dev/examples/examples&#34;&gt;More examples here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;üëÄ &lt;strong&gt;Viewing runs:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;One of the most powerful features of Trigger.dev is the &lt;a href=&#34;https://docs.trigger.dev/viewing-runs&#34;&gt;runs page&lt;/a&gt;. All of the steps in a workflow, including the initial event, can be viewed in detail. See the status / output of each step, the logs, rich previews, errors and much more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/triggerdotdev/trigger.dev/raw/main/apps/docs/images/run-succeeded.png&#34; alt=&#34;Viewing runs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üè† Running Trigger.dev locally:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;To run Trigger.dev locally, &lt;a href=&#34;https://github.com/triggerdotdev/trigger.dev/raw/main/DEVELOPMENT.md&#34;&gt;follow these steps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üëè Contributing:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;We are open source and love contributions!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Request a feature in our &lt;a href=&#34;https://discord.gg/JtBAxBr2m3&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open a PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üßò‚Äç‚ôÇÔ∏è Self-hosting guide:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;coming soon...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;strong&gt;üìß Support &amp;amp; contact:&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://discord.gg/JtBAxBr2m3&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you have any other questions, get in touch at &lt;a href=&#34;mailto:hello@trigger.dev&#34;&gt;hello@trigger.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aisuda/amis-editor-demo</title>
    <updated>2023-02-04T01:47:32Z</updated>
    <id>tag:github.com,2023-02-04:/aisuda/amis-editor-demo</id>
    <link href="https://github.com/aisuda/amis-editor-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;amis ÂèØËßÜÂåñÁºñËæëÂô®Á§∫‰æã http://aisuda.github.io/amis-editor-demo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;amis-editor-demo&lt;/h1&gt; &#xA;&lt;p&gt;amis ÂèØËßÜÂåñÁºñËæëÂô®, Âú®Á∫ø‰ΩìÈ™åÔºö&lt;a href=&#34;https://aisuda.github.io/amis-editor-demo&#34;&gt;https://aisuda.github.io/amis-editor-demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ë¶Å‰ΩøÁî®ÁºñËæëÂô®ÂøÖÈ°ªÁÜüÊÇâ ReactÔºåÂ¶ÇÊûú‰∏ç‰∫ÜËß£Âª∫ËÆÆ‰ΩøÁî®&lt;a href=&#34;https://aisuda.baidu.com/&#34;&gt;ÈÄüÊê≠&lt;/a&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Êú¨Âú∞ËøêË°åËøô‰∏™È°πÁõÆ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;npm i&lt;/code&gt; ÂÆâË£Ö‰æùËµñ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; ÂºÄÊúçÂä°&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt; ÂºÄÂßãÁºñËØëÔºåÁ≠âÁºñËØëÂá∫Áé∞Êó∂Èó¥‰ø°ÊÅØÂêéÂ∞±ÂèØ‰ª•Âà∑Êñ∞È°µÈù¢ÁúãÊïàÊûú‰∫Ü„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Âú®ÂÖ∂‰ªñÈ°πÁõÆ‰∏≠‰ΩøÁî® amis-editor&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i amis-editor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‰ΩøÁî® ÊñπÊ≥ï&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import {Editor} from &#39;amis-editor&#39;;&#xA;&#xA;&#xA;render() {&#xA;  return (&#xA;    &amp;lt;Editor&#xA;      {...props}&#xA;    /&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Â±ûÊÄßËØ¥ÊòéÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;value: any&lt;/code&gt; ÂÄºÔºåamis ÁöÑ json ÈÖçÁΩÆ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onChange: (value: any) =&amp;gt; void&lt;/code&gt;„ÄÇ ÂΩìÁºñËæëÂô®‰øÆÊîπÁöÑÊó∂ÂÄô‰ºöËß¶Âèë„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;preview?: boolean&lt;/code&gt; ÊòØÂê¶‰∏∫È¢ÑËßàÁä∂ÊÄÅ„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autoFocus?: boolean&lt;/code&gt; ÊòØÂê¶Ëá™Âä®ËÅöÁÑ¶Á¨¨‰∏Ä‰∏™ÂèØÁºñËæëÁöÑÁªÑ‰ª∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;plugins&lt;/code&gt; Êèí‰ª∂Á±ªÈõÜÂêà&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Êâ©ÂÖÖËá™ÂÆö‰πâÁºñËæëÂô®ÔºàÊóßÁâàÔºâ&lt;/h2&gt; &#xA;&lt;p&gt;Â¶Ç‰ΩïÊâ©ÂÖÖ amis Ê∏≤ÊüìÂô®ÔºåËØ∑ÂâçÂæÄ&lt;a href=&#34;https://baidu.github.io/amis/docs/start/custom#%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B&#34;&gt;Â¶Ç‰ΩïÊ≥®ÂÜåËá™ÂÆö‰πâÁ±ªÂûã&lt;/a&gt;ÔºåËøôÈáå‰∏ªË¶Å‰ªãÁªçÂ¶Ç‰ΩïÊääËá™ÂÆö‰πâÁöÑÁªÑ‰ª∂Âä†ÂÖ•Âà∞ÁºñËæëÂô®ÈáåÈù¢Êù•„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Á§∫‰æãÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;./renderer/MyRenderer.tsx&lt;/li&gt; &#xA; &lt;li&gt;./editor/MyRenderer.tsx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;È¶ñÂÖàÔºåÊ≥®ÂÜåËá™ÂÆö‰πâÁªÑ‰ª∂ÁöÑÊó∂ÂÄôÈúÄË¶ÅËÆæÁΩÆ‰∏Ä‰∏™ &lt;code&gt;name&lt;/code&gt; Â±ûÊÄßÔºåËøô‰∏™Â±ûÊÄßÂÄºÂ∫îËØ•ÊòØÂîØ‰∏ÄÁöÑ„ÄÇÂêéÁª≠Ê≥®ÂÜåÁºñËæëÂô®ÊòØÈù†Ëøô‰∏™ÂÖ≥ËÅî„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Â¶ÇÊú¨‰ªìÂ∫ì‰∏≠Á§∫‰æãÔºåname ÂÄº‰∏∫ &lt;code&gt;my-renderer&lt;/code&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;@Renderer({&#xA;    test: /\bmy-renderer$/,&#xA;    name: &#39;my-renderer&#39;&#xA;})&#xA;export default class MyRenderer extends React.Component&amp;lt;MyRendererProps&amp;gt; {&#xA;    static defaultProps = {&#xA;        target: &#39;world&#39;&#xA;    };&#xA;&#xA;    render() {&#xA;        const {target} = this.props;&#xA;&#xA;        return &amp;lt;p&amp;gt;Hello {target}!&amp;lt;/p&amp;gt;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁÑ∂ÂêéÂºÄÂßãÊ≥®ÂÜåÁºñËæëÂô®„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import {RendererEditor, BasicEditor} from &#39;amis-editor&#39;;&#xA;&#xA;@RendererEditor(&#39;my-renderer&#39;, {&#xA;    name: &#39;Ëá™ÂÆö‰πâÊ∏≤ÊüìÂô®&#39;,&#xA;    description: &#39;ËøôÂè™ÊòØ‰∏™Á§∫‰æã&#39;,&#xA;    // docLink: &#39;/docs/renderers/Nav&#39;,&#xA;    type: &#39;my-renderer&#39;, // Ëøô‰∏™Âú® scaffold Ê≤°ËÆæÁΩÆÁöÑÊó∂ÂÄôÊúâÁî®„ÄÇ&#xA;    previewSchema: {&#xA;        // Áî®Êù•ÁîüÊàêÈ¢ÑËßàÂõæÁöÑ&#xA;        type: &#39;my-renderer&#39;,&#xA;        target: &#39;demo&#39;&#xA;    },&#xA;    scaffold: {&#xA;        // ÊãñÂÖ•ÁªÑ‰ª∂ÈáåÈù¢Êó∂ÁöÑÂàùÂßãÊï∞ÊçÆ&#xA;        type: &#39;my-renderer&#39;,&#xA;        target: &#39;233&#39;&#xA;    }&#xA;})&#xA;export default class MyRendererEditor extends BasicEditor {&#xA;    tipName = &#39;Ëá™ÂÆö‰πâÁªÑ‰ª∂&#39;;&#xA;    settingsSchema = {&#xA;        title: &#39;Ëá™ÂÆö‰πâÁªÑ‰ª∂ÈÖçÁΩÆ&#39;,&#xA;        body: [&#xA;            {&#xA;                type: &#39;tabs&#39;,&#xA;                tabsMode: &#39;line&#39;,&#xA;                className: &#39;m-t-n-xs&#39;,&#xA;                contentClassName: &#39;no-border p-l-none p-r-none&#39;,&#xA;                tabs: [&#xA;                    {&#xA;                        title: &#39;Â∏∏ËßÑ&#39;,&#xA;                        controls: [&#xA;                            {&#xA;                                name: &#39;target&#39;,&#xA;                                label: &#39;Target&#39;,&#xA;                                type: &#39;text&#39;&#xA;                            }&#xA;                        ]&#xA;                    },&#xA;&#xA;                    {&#xA;                        title: &#39;Â§ñËßÇ&#39;,&#xA;                        controls: []&#xA;                    }&#xA;                ]&#xA;            }&#xA;        ]&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÁÑ∂ÂêéÁõ¥Êé•ÁúãÊïàÊûúÂêß &lt;a href=&#34;https://github.com/fex-team/amis-editor&#34;&gt;https://github.com/fex-team/amis-editor&lt;/a&gt; ËøôÈáåÈù¢ÊèíÂÖ•ÁöÑÊó∂ÂÄôÈÄâÊã©ËæìÂÖ• my-renderer ÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÊèíÂÖ•Ëá™ÂÆö‰πâÁöÑÁªÑ‰ª∂‰∫Ü„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;Êâ©ÂÖÖËá™ÂÆö‰πâÁºñËæëÂô®ÔºàÊñ∞ÁâàÔºâ&lt;/h2&gt; &#xA;&lt;p&gt;amis-editor ÈáçÊûÑ‰∫Ü‰∏ÄÁâàÔºå‰πãÂâçÂÆö‰πâÊ≥®ÂÜåËá™ÂÆö‰πâÁªÑ‰ª∂ÁöÑÊñπÂºè‰πüËÉΩÁî®Ôºå‰ΩÜÊòØÂ∑≤ÁªèÊ†áËÆ∞‰∫Ü &lt;code&gt;deprecated&lt;/code&gt;ÔºåÊñ∞ÁöÑÊ∑ªÂä†Ëá™ÂÆö‰πâÁºñËæëÂô®ÁöÑÊñπÂºèÊúâ‰∏§Áßç„ÄÇ&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;registerEditorPlugin Ê≥®ÂÜåÂÖ®Â±ÄÊèí‰ª∂„ÄÇ&lt;/li&gt; &#xA; &lt;li&gt;‰∏çÊ≥®ÂÜåÔºå‰ΩÜÊòØË∞ÉÁî® &lt;code&gt;&amp;lt;Editor&amp;gt;&lt;/code&gt; ÁöÑÊó∂ÂÄôÊó∂ÂÄôÈÄöËøá &lt;code&gt;plugins&lt;/code&gt; Â±ûÊÄß‰º†ÂÖ•„ÄÇ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;ÊïàÊûúÈÉΩ‰∏ÄÊ†∑ÔºåÈáçÁÇπËøòÊòØÊÄé‰πàÂÜô‰∏™ PluginÔºåÁ§∫‰æãÔºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import {BasePlugin} from &#39;amis-editor&#39;;&#xA;&#xA;export class MyRendererPlugin extends BasePlugin {&#xA;    rendererName = &#39;my-renderer&#39;;&#xA;&#xA;    // ÊöÇÊó∂Âè™ÊîØÊåÅËøô‰∏™ÔºåÈÖçÁΩÆÂêé‰ºöÂºÄÂêØ‰ª£Á†ÅÁºñËæëÂô®&#xA;    $schema = &#39;/schemas/UnkownSchema.json&#39;;&#xA;&#xA;    // Áî®Êù•ÈÖçÁΩÆÂêçÁß∞ÂíåÊèèËø∞&#xA;    name = &#39;Ëá™ÂÆö‰πâÊ∏≤ÊüìÂô®&#39;;&#xA;    description = &#39;ËøôÂè™ÊòØ‰∏™Á§∫‰æã&#39;;&#xA;&#xA;    // tagÔºåÂÜ≥ÂÆö‰ºöÂú®Âì™‰∏™ tab ‰∏ãÈù¢ÊòæÁ§∫ÁöÑ&#xA;    tags = [&#39;Ëá™ÂÆö‰πâ&#39;, &#39;Ë°®ÂçïÈ°π&#39;];&#xA;&#xA;    // ÂõæÊ†á&#xA;    icon = &#39;fa fa-user&#39;;&#xA;&#xA;    // Áî®Êù•ÁîüÊàêÈ¢ÑËßàÂõæÁöÑ&#xA;    previewSchema = {&#xA;        type: &#39;my-renderer&#39;,&#xA;        target: &#39;demo&#39;&#xA;    };&#xA;&#xA;    // ÊãñÂÖ•ÁªÑ‰ª∂ÈáåÈù¢Êó∂ÁöÑÂàùÂßãÊï∞ÊçÆ&#xA;    scaffold = {&#xA;        type: &#39;my-renderer&#39;,&#xA;        target: &#39;233&#39;&#xA;    };&#xA;&#xA;    // Âè≥‰æßÈù¢ÊùøÁõ∏ÂÖ≥&#xA;    panelTitle = &#39;Ëá™ÂÆö‰πâÁªÑ‰ª∂&#39;;&#xA;    panelControls = [&#xA;        {&#xA;            type: &#39;tabs&#39;,&#xA;            tabsMode: &#39;line&#39;,&#xA;            className: &#39;m-t-n-xs&#39;,&#xA;            contentClassName: &#39;no-border p-l-none p-r-none&#39;,&#xA;            tabs: [&#xA;                {&#xA;                    title: &#39;Â∏∏ËßÑ&#39;,&#xA;                    controls: [&#xA;                        {&#xA;                            name: &#39;target&#39;,&#xA;                            label: &#39;Target&#39;,&#xA;                            type: &#39;text&#39;&#xA;                        }&#xA;                    ]&#xA;                },&#xA;&#xA;                {&#xA;                    title: &#39;Â§ñËßÇ&#39;,&#xA;                    controls: []&#xA;                }&#xA;            ]&#xA;        }&#xA;    ];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂÆö‰πâÂ•Ω plugin ÂêéÔºåÂèØ‰ª•Êúâ‰∏§ÁßçÊñπÂºèÂêØÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// ÊñπÂºè 1ÔºåÊ≥®ÂÜåÈªòËÆ§Êèí‰ª∂ÔºåÊâÄÊúâÁºñËæëÂô®ÂÆû‰æãÈÉΩ‰ºöËá™Âä®ÂÆû‰æãËØù„ÄÇ&#xA;import {registerEditorPlugin} from &#39;amis-editor&#39;;&#xA;&#xA;registerEditorPlugin(MyRendererPlugin);&#xA;&#xA;// ÊñπÂºè2ÔºåÂè™ËÆ©Êüê‰∫õÁºñËæëÂô®ÂêØÁî®&#xA;() =&amp;gt; &amp;lt;Editor plugins={[MyRendererPlugin]} /&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÂâçÈù¢ÁöÑÁ§∫‰æãÂè™ÂÅö‰∫ÜÁÆÄÂçïÁöÑËØ¥ÊòéÔºåÂèØÁî®Â±ûÊÄßËøòÊúâ, ÂÖ∑‰ΩìËøòÊòØÂÖàÁúã npm ÂåÖÈáåÈù¢ÁöÑ .d.ts Êñá‰ª∂ÂêßÔºåÂêéÈù¢ÂÜçË°•ÂÖÖÊõ¥ËØ¶ÁªÜÁöÑÊñáÊ°£„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;export interface PluginEventListener {&#xA;    onActive?: (event: PluginEvent&amp;lt;ActiveEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * ‰∫ã‰ª∂ÔºåÂΩìÊúâÈÖçÁΩÆÈ°πÊèíÂÖ•ÂâçË∞ÉÁî®„ÄÇÈÄöËøá event.preventDefault() ÂèØ‰ª•Âπ≤È¢Ñ„ÄÇ&#xA;     */&#xA;    beforeInsert?: (event: PluginEvent&amp;lt;InsertEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterInsert?: (event: PluginEvent&amp;lt;InsertEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * Èù¢ÊùøÈáåÈù¢ÁºñËæë‰øÆÊîπÁöÑ‰∫ã‰ª∂„ÄÇ&#xA;     */&#xA;    beforeUpdate?: (event: PluginEvent&amp;lt;ChangeEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterUpdate?: (event: PluginEvent&amp;lt;ChangeEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * Êõ¥Êñ∞Ê∏≤ÊüìÂô®ÔºåÊàñËÄÖÂè≥ÈîÆÁ≤òË¥¥ÈÖçÁΩÆ„ÄÇ&#xA;     */&#xA;    beforeReplace?: (event: PluginEvent&amp;lt;ReplaceEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterReplace?: (event: PluginEvent&amp;lt;ReplaceEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * ÁßªÂä®ËäÇÁÇπÁöÑÊó∂ÂÄôËß¶ÂèëÔºåÂåÖÊã¨‰∏äÁßªÔºå‰∏ãÁßª&#xA;     */&#xA;    beforeMove?: (event: PluginEvent&amp;lt;MoveEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    aftterMove?: (event: PluginEvent&amp;lt;MoveEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * Âà†Èô§ÁöÑÊó∂ÂÄôËß¶Âèë&#xA;     */&#xA;    beforeDelete?: (event: PluginEvent&amp;lt;BaseEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterDelete?: (event: PluginEvent&amp;lt;BaseEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    beforeResolveEditorInfo?: (event: PluginEvent&amp;lt;RendererInfoResolveEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterResolveEditorInfo?: (event: PluginEvent&amp;lt;RendererInfoResolveEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    beforeResolveJsonSchema?: (event: PluginEvent&amp;lt;RendererJSONSchemaResolveEventContext&amp;gt;) =&amp;gt; false | void;&#xA;    afterResolveJsonSchema?: (event: PluginEvent&amp;lt;RendererJSONSchemaResolveEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    onDndAccept?: (event: PluginEvent&amp;lt;DragEventContext&amp;gt;) =&amp;gt; false | void;&#xA;&#xA;    onBuildPanels?: (event: PluginEvent&amp;lt;BuildPanelEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    onBuildContextMenus?: (event: PluginEvent&amp;lt;ContextMenuEventContext&amp;gt;) =&amp;gt; void;&#xA;&#xA;    onPreventClick?: (event: PluginEvent&amp;lt;PreventClickEventContext&amp;gt;) =&amp;gt; false | void;&#xA;}&#xA;&#xA;/**&#xA; * Êèí‰ª∂ÁöÑ interface ÂÆö‰πâ&#xA; */&#xA;export interface PluginInterface extends Partial&amp;lt;BasicRendererInfo&amp;gt;, Partial&amp;lt;BasicSubRenderInfo&amp;gt;, PluginEventListener {&#xA;    readonly manager: EditorManager;&#xA;&#xA;    order?: number;&#xA;&#xA;    /**&#xA;     * Ê∏≤ÊüìÂô®ÁöÑÂêçÂ≠óÔºåÂÖ≥ËÅîÂêé‰∏çÁî®Ëá™Â∑±ÂÆûÁé∞ getRendererInfo ‰∫Ü„ÄÇ&#xA;     */&#xA;    rendererName?: string;&#xA;&#xA;    /**&#xA;     * ÈªòËÆ§ÁöÑÈÖçÁΩÆÈù¢Êùø‰ø°ÊÅØ&#xA;     */&#xA;    panelIcon?: string;&#xA;    panelTitle?: string;&#xA;    panelControls?: Array&amp;lt;any&amp;gt;;&#xA;    panelDefinitions?: any;&#xA;    panelApi?: any;&#xA;    panelSubmitOnChange?: boolean;&#xA;    panelControlsCreator?: (context: BaseEventContext) =&amp;gt; Array&amp;lt;any&amp;gt;;&#xA;&#xA;    /**&#xA;     * ËøîÂõûÊ∏≤ÊüìÂô®‰ø°ÊÅØ„ÄÇ‰∏çÊòØÊØè‰∏™Êèí‰ª∂ÈÉΩÈúÄË¶Å„ÄÇ&#xA;     */&#xA;    getRendererInfo?: (context: RendererInfoResolveEventContext) =&amp;gt; BasicRendererInfo | void;&#xA;&#xA;    /**&#xA;     * ÁîüÊàêËäÇÁÇπÁöÑ JSON Schema ÁöÑ uri Âú∞ÂùÄ„ÄÇ&#xA;     */&#xA;    buildJSONSchema?: (context: RendererJSONSchemaResolveEventContext) =&amp;gt; void | string;&#xA;&#xA;    /**&#xA;     * ÊûÑÂª∫Âè≥‰∏äËßíÂäüËÉΩÊåâÈíÆÈõÜÂêà&#xA;     */&#xA;    buildEditorToolbar?: (context: BaseEventContext, toolbars: Array&amp;lt;BasicToolbarItem&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * ÊûÑÂª∫Âè≥ÈîÆËèúÂçïÈ°π&#xA;     */&#xA;    buildEditorContextMenu?: (context: ContextMenuEventContext, menus: Array&amp;lt;ContextMenuItem&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * ÊûÑÂª∫ÁºñËæëÂô®Èù¢Êùø„ÄÇ&#xA;     */&#xA;    buildEditorPanel?: (context: BaseEventContext, panels: Array&amp;lt;BasicPanelItem&amp;gt;) =&amp;gt; void;&#xA;&#xA;    /**&#xA;     * ÊûÑÂª∫Â≠êÊ∏≤ÊüìÂô®‰ø°ÊÅØÈõÜÂêà„ÄÇ&#xA;     */&#xA;    buildSubRenderers?: (&#xA;        context: RendererEventContext,&#xA;        subRenderers: Array&amp;lt;SubRendererInfo&amp;gt;,&#xA;        renderers: Array&amp;lt;RendererConfig&amp;gt;&#xA;    ) =&amp;gt; BasicSubRenderInfo | Array&amp;lt;BasicSubRenderInfo&amp;gt; | void;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‰ΩøÁî®ÂçèËÆÆ&lt;/h2&gt; &#xA;&lt;p&gt;ÁõÆÂâç amis-editor Êú™ÂºÄÊ∫êÔºå‰ΩÜÂèØ‰ª•ÂÖçË¥π‰ΩøÁî®ÔºàÂåÖÊã¨ÂïÜÁî®Ôºâ„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ËøëÊúü amis-editor È°πÁõÆÂ∞Ü‰ºöÊãÜÂàÜÔºåÂ∞Ü plugins ÂºÄÊ∫êÔºåÊñπ‰æøËøõË°åË∞ÉÊï¥„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devcontainers/cli</title>
    <updated>2023-02-04T01:47:32Z</updated>
    <id>tag:github.com,2023-02-04:/devcontainers/cli</id>
    <link href="https://github.com/devcontainers/cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reference implementation for the specification that can create and configure a dev container from a devcontainer.json.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dev Container CLI&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds the dev container CLI, which can take a devcontainer.json and create and configure a dev container from it.&lt;/p&gt; &#xA;&lt;h2&gt;Context&lt;/h2&gt; &#xA;&lt;p&gt;A development container allows you to use a container as a full-featured development environment. It can be used to run an application, to separate tools, libraries, or runtimes needed for working with a codebase, and to aid in continuous integration and testing. Dev containers can be run locally or remotely, in a private or public cloud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/images/dev-container-stages.png&#34; alt=&#34;Diagram of inner and outerloop development with dev containers&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This CLI is in active development. Current status:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer build&lt;/code&gt; - Enables building/pre-building images&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer up&lt;/code&gt; - Spins up containers with &lt;code&gt;devcontainer.json&lt;/code&gt; settings applied&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer run-user-commands&lt;/code&gt; - Runs lifecycle commands like &lt;code&gt;postCreateCommand&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer read-configuration&lt;/code&gt; - Outputs current configuration for workspace&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer exec&lt;/code&gt; - Executes a command in a container with &lt;code&gt;userEnvProbe&lt;/code&gt;, &lt;code&gt;remoteUser&lt;/code&gt;, &lt;code&gt;remoteEnv&lt;/code&gt;, and other properties applied&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer features &amp;lt;...&amp;gt;&lt;/code&gt; - Tools to assist in authoring and testing &lt;a href=&#34;https://containers.dev/implementors/features/&#34;&gt;Dev Container Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;devcontainer templates &amp;lt;...&amp;gt;&lt;/code&gt; - Tools to assist in authoring and testing &lt;a href=&#34;https://containers.dev/implementors/templates/&#34;&gt;Dev Container Templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;devcontainer stop&lt;/code&gt; - Stops containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;devcontainer down&lt;/code&gt; - Stops and deletes containers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Try it out&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love for you to try out the dev container CLI and let us know what you think. You can quickly try it out in just a few simple steps, either by installing its npm package or building the CLI repo from sources (see &#34;&lt;a href=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/#build-from-sources&#34;&gt;Build from sources&lt;/a&gt;&#34;).&lt;/p&gt; &#xA;&lt;p&gt;To install the npm package you will need Python and C/C++ installed to build one of the dependencies (see, e.g., &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute&#34;&gt;here&lt;/a&gt; for instructions).&lt;/p&gt; &#xA;&lt;h3&gt;npm install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @devcontainers/cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify you can run the CLI and see its help text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devcontainer &amp;lt;command&amp;gt;&#xA;&#xA;Commands:&#xA;  devcontainer up                   Create and run dev container&#xA;  devcontainer build [path]         Build a dev container image&#xA;  devcontainer run-user-commands    Run user commands&#xA;  devcontainer read-configuration   Read configuration&#xA;  devcontainer features             Features commands&#xA;  devcontainer templates            Templates commands&#xA;  devcontainer exec &amp;lt;cmd&amp;gt; [args..]  Execute a command on a running dev container&#xA;&#xA;Options:&#xA;  --help     Show help                                                 [boolean]&#xA;  --version  Show version number                                       [boolean]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Try out the CLI&lt;/h3&gt; &#xA;&lt;p&gt;Once you have the CLI, you can try it out with a sample project, like this &lt;a href=&#34;https://github.com/microsoft/vscode-remote-try-rust&#34;&gt;Rust sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Clone the Rust sample to your machine, and start a dev container with the CLI&#39;s &lt;code&gt;up&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/microsoft/vscode-remote-try-rust&#xA;devcontainer up --workspace-folder &amp;lt;path-to-vscode-remote-try-rust&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download the container image from a container registry and start the container. Your Rust container should now be running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[88 ms] dev-containers-cli 0.1.0.&#xA;[165 ms] Start: Run: docker build -f /home/node/vscode-remote-try-rust/.devcontainer/Dockerfile -t vsc-vscode-remote-try-rust-89420ad7399ba74f55921e49cc3ecfd2 --build-arg VARIANT=bullseye /home/node/vscode-remote-try-rust/.devcontainer&#xA;[+] Building 0.5s (5/5) FINISHED&#xA; =&amp;gt; [internal] load build definition from Dockerfile                       0.0s&#xA; =&amp;gt; =&amp;gt; transferring dockerfile: 38B                                        0.0s&#xA; =&amp;gt; [internal] load .dockerignore                                          0.0s&#xA; =&amp;gt; =&amp;gt; transferring context: 2B                                            0.0s&#xA; =&amp;gt; [internal] load metadata for mcr.microsoft.com/vscode/devcontainers/r  0.4s&#xA; =&amp;gt; CACHED [1/1] FROM mcr.microsoft.com/vscode/devcontainers/rust:1-bulls  0.0s&#xA; =&amp;gt; exporting to image                                                     0.0s&#xA; =&amp;gt; =&amp;gt; exporting layers                                                    0.0s&#xA; =&amp;gt; =&amp;gt; writing image sha256:39873ccb81e6fb613975e11e37438eee1d49c963a436d  0.0s&#xA; =&amp;gt; =&amp;gt; naming to docker.io/library/vsc-vscode-remote-try-rust-89420ad7399  0.0s&#xA;[1640 ms] Start: Run: docker run --sig-proxy=false -a STDOUT -a STDERR --mount type=bind,source=/home/node/vscode-remote-try-rust,target=/workspaces/vscode-remote-try-rust -l devcontainer.local_folder=/home/node/vscode-remote-try-rust --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --entrypoint /bin/sh vsc-vscode-remote-try-rust-89420ad7399ba74f55921e49cc3ecfd2-uid -c echo Container started&#xA;Container started&#xA;{&#34;outcome&#34;:&#34;success&#34;,&#34;containerId&#34;:&#34;f0a055ff056c1c1bb99cc09930efbf3a0437c54d9b4644695aa23c1d57b4bd11&#34;,&#34;remoteUser&#34;:&#34;vscode&#34;,&#34;remoteWorkspaceFolder&#34;:&#34;/workspaces/vscode-remote-try-rust&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run commands in this dev container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;devcontainer exec --workspace-folder &amp;lt;path-to-vscode-remote-try-rust&amp;gt; cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will compile and run the Rust sample, outputting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[33 ms] dev-containers-cli 0.1.0.&#xA;   Compiling hello_remote_world v0.1.0 (/workspaces/vscode-remote-try-rust)&#xA;    Finished dev [unoptimized + debuginfo] target(s) in 1.06s&#xA;     Running `target/debug/hello_remote_world`&#xA;Hello, VS Code Remote - Containers!&#xA;{&#34;outcome&#34;:&#34;success&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congrats, you&#39;ve just run the dev container CLI and seen it in action!&lt;/p&gt; &#xA;&lt;h2&gt;More CLI examples&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/example-usage&#34;&gt;example-usage&lt;/a&gt; folder contains some simple shell scripts to illustrate how the CLI can be used to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inject tools for use inside a development container&lt;/li&gt; &#xA; &lt;li&gt;Use a dev container as your CI build environment to build an application (even if it is not deployed as a container)&lt;/li&gt; &#xA; &lt;li&gt;Build a container image from a devcontainer.json file that includes &lt;a href=&#34;https://containers.dev/implementors/features/#devcontainer-json-properties&#34;&gt;dev container features&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build from sources&lt;/h2&gt; &#xA;&lt;p&gt;This repository has a &lt;a href=&#34;https://github.com/devcontainers/cli/tree/main/.devcontainer&#34;&gt;dev container configuration&lt;/a&gt;, which you can use to ensure you have the right dependencies installed.&lt;/p&gt; &#xA;&lt;p&gt;Compile the CLI with yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn&#xA;yarn compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify you can run the CLI and see its help text:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;node devcontainer.js --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Specification&lt;/h2&gt; &#xA;&lt;p&gt;The dev container CLI is part of the &lt;a href=&#34;https://github.com/devcontainers/spec&#34;&gt;Development Containers Specification&lt;/a&gt;. This spec seeks to find ways to enrich existing formats with common development specific settings, tools, and configuration while still providing a simplified, un-orchestrated single container option ‚Äì so that they can be used as coding environments or for continuous integration and testing.&lt;/p&gt; &#xA;&lt;p&gt;Learn more on the &lt;a href=&#34;https://devcontainers.github.io/&#34;&gt;dev container spec website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;p&gt;You may review other resources part of the specification in the &lt;a href=&#34;https://github.com/devcontainers&#34;&gt;&lt;code&gt;devcontainers&lt;/code&gt; GitHub organization&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional information on using the built-in &lt;a href=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/docs/features/test.md&#34;&gt;Features testing command&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out how to contribute to the CLI in &lt;a href=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is under an &lt;a href=&#34;https://raw.githubusercontent.com/devcontainers/cli/main/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>