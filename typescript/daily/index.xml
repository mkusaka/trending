<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-26T01:45:45Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kanaries/Rath</title>
    <updated>2023-04-26T01:45:45Z</updated>
    <id>tag:github.com,2023-04-26:/Kanaries/Rath</id>
    <link href="https://github.com/Kanaries/Rath" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated data exploratory analysis and visualization tools.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/rath-main-banner2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div id=&#34;header&#34; align=&#34;center&#34;&gt; &#xA; &lt;div id=&#34;badges&#34;&gt; &#xA;  &lt;a href=&#34;https://www.linkedin.com/company/kanaries-data&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/LinkedIn-blue?style=flat-square&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;Follow RATH on LinkedIn&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.youtube.com/@kanaries_data&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/YouTube-red?style=flat-square&amp;amp;logo=youtube&amp;amp;logoColor=white&#34; alt=&#34;Follow RATH on Youtube&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://twitter.com/kanaries_data&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Twitter-blue?style=flat-square&amp;amp;logo=twitter&amp;amp;logoColor=white&#34; alt=&#34;Follow RATH on Twitter&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://medium.com/@kanaries_data&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Medium-grey?style=flat-square&amp;amp;logo=medium&amp;amp;logoColor=white&#34; alt=&#34;Read about RATH on medium&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/Z4ngFWXz2U&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Discord-indigo?style=flat-square&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Join RATH on Discord&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://join.slack.com/t/kanaries-community/shared_invite/zt-1pcosgbua-E_GBPawQOI79C41dPDyyvw&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Slack-green?style=flat-square&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Join RATH on Slack&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.en.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-AGPL-brightgreen?style=flat-square&#34; alt=&#34;AGPL License&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Kanaries/Rath/stargazers&#34;&gt; &lt;img src=&#34;https://badgen.net/github/stars/kanaries/rath?style=flat-square&#34; alt=&#34;RATH GitHub Stars&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Kanaries/Rath/fork&#34;&gt; &lt;img src=&#34;https://badgen.net/github/forks/kanaries/rath?style=flat-square&#34; alt=&#34;RATH GitHub Forks&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Kanaries/Rath/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/kanaries/rath/auto-build.yml?branch=master&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ch-resources.oss-cn-shanghai.aliyuncs.com/images/lang-icons/icon128px.png&#34; width=&#34;22px&#34;&gt; English | &lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/docs/README-jp.md&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/docs/README-zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;RATH&lt;/strong&gt; is not just an open-source alternative to Data Analysis and Visualization tools such as Tableau, but it automates your Exploratory Data Analysis workflow with an Augmented Analytic engine by discovering patterns, insights, causals and presents those insights with powerful auto-generated multi-dimensional data visualization.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22167673/234053551-24e0f1c9-1efb-4250-a2f8-dbf148f5f4d0.mp4&#34;&gt;https://user-images.githubusercontent.com/22167673/234053551-24e0f1c9-1efb-4250-a2f8-dbf148f5f4d0.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;Get started with RATH now!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://rath.kanaries.net&#34;&gt;Sandbox demo for parts of features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://docs.kanaries.net&#34;&gt;Read RATH Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/djqePNyhz7w&#34;&gt;Video introducing RATH&#39;s data painter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 &lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/automated-data-insight&#34;&gt;AutoPilot for Data Exploration&lt;/a&gt;: Get Insights with One Click! Augmented analytic engine for discovering patterns, insights, and causals. A fully-automated way to explore and visualize dataset with one click.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🛠 &lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/data-exploration-copilot&#34;&gt;Copilot for Data Exploration&lt;/a&gt;: RATH will work as your copilot in data science, learn your intends and generate relevant recommendations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Natural Language interface: Ask questions in natural language to get answers/visualizations from your data.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AutoVis: RATH will generate the best visualization for the data you selected. It makes you focus on data and variables, not how to make a visualization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;👓 &lt;a href=&#34;https://docs.kanaries.net/rath/prepare-data/extract-text-patterns&#34;&gt;Data Wrangler&lt;/a&gt;: Automated data wrangler for generating summary of the data and data transformation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🎨 &lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/data-painter&#34;&gt;Data Painter&lt;/a&gt;: An interactive, instinctive yet powerful tool for exploratory data analysis by directly coloring your data, with further analytical features. Watch &lt;a href=&#34;https://youtu.be/djqePNyhz7w&#34;&gt;this video&lt;/a&gt; demonstrating about how to discover data insights with Data Painter.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span&gt;📊&lt;/span&gt; Dashboard: build a beautiful interactive data dashboard (including a automated dashboard designer which can provide suggestions to your dashboard).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Causal Analysis: Identify and examine the causal relationship between variables, which can help explore the data, create better prediction models and make business decission.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Walkthroughs&lt;/h2&gt; &#xA;&lt;h3&gt;Import data from online databases or CSV/JSON files.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/connect-your-data&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/ds-create.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;View statistics from your data source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/prepare-data/data-profiling#data-profiling-with-rath&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/data-profiling-readme.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Data Preparation&lt;/h3&gt; &#xA;&lt;p&gt;RATH support data preparation with black magic like predictive transformation operations. It will automatically generate suggestions of transformations and cleaning, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/prepare-data/data-transformation&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/text-pattern-general.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;One-click automated data analysis with visualizations&lt;/h3&gt; &#xA;&lt;p&gt;Augmented analytic engine for discovering patterns, insights, and causals. A fully-automated way to explore and visualize dataset with one click.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/automated-data-insight&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/autopilot.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Use RATH as your Copilot in Data Exploration&lt;/h3&gt; &#xA;&lt;p&gt;RATH will work as your copilot in data science, learn your intends and generate relevant recommendations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/22167673/234018034-c7441549-e83b-4f5e-94c7-f772527a7094.mp4&#34;&gt;https://user-images.githubusercontent.com/22167673/234018034-c7441549-e83b-4f5e-94c7-f772527a7094.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Ask about your data&lt;/h3&gt; &#xA;&lt;p&gt;Ask questions about your data, RATH integrates with GPT to generate answers and visualizations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/ask-rath.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manually explore your data with drag and drop:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/explore-data-graphic-walker&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/graphic-walker.gif&#34; alt=&#34;Manually explore your data with a Tableau-like UI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Manual Exploration is an independent embedding module. You can use it independently in your apps. For more details, refer to the README.md in in &lt;code&gt;packages/graphic-walker/README.md&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Install Graphic Walker&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add @kanaries/graphic-walker&#xA;# or&#xA;npm i --save @kanaries/graphic-walker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;span&gt;✨&lt;/span&gt; Interactive data analysis workflow by data painting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/djqePNyhz7w&#34;&gt;Data Painter Video 🔥 on Youtube&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/rath/explore-data/data-painter&#34;&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/data-painter.gif&#34; alt=&#34;Interactive data analysis by painting&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🌅 Causal Analysis (Alpha stage)&lt;/h3&gt; &#xA;&lt;p&gt;Causal analysis could be defined as the way to identify and examine the causal relationship between variables, which can help explore the data, create better prediction models and make business decision.&lt;/p&gt; &#xA;&lt;p&gt;RATH&#39;s causal analysis feature include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Causal Discovery&lt;/li&gt; &#xA; &lt;li&gt;Editable graphical causal models&lt;/li&gt; &#xA; &lt;li&gt;Causal interpretability&lt;/li&gt; &#xA; &lt;li&gt;Interactive tools for deeper exploration&lt;/li&gt; &#xA; &lt;li&gt;What-if analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs-us.oss-us-west-1.aliyuncs.com/images/readme/causal-feature.png&#34; alt=&#34;Causal Analysis&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more about Causal Analysis features, refer to &lt;a href=&#34;https://docs.kanaries.net/rath/discover-causals/causal-analysis&#34;&gt;RATH Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Databases&lt;/h2&gt; &#xA;&lt;p&gt;RATH supports a wide range of data sources. Here are some of the major database solutions that you can connect to RATH:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/athena.png&#34; alt=&#34;Amazon Athena&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/redshift.png&#34; alt=&#34;Amazon Redshift&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/spark.png&#34; alt=&#34;Apache Spark SQL&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/doris.png&#34; alt=&#34;Apache Doris&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/clickhouse.png&#34; alt=&#34;Clickhouse&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/hive.png&#34; alt=&#34;Apache Hive&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/mysql.png&#34; alt=&#34;MySQL&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/postgresql.png&#34; alt=&#34;Postgre SQL&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/impala.png&#34; alt=&#34;Apache Impala&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/kylin.png&#34; alt=&#34;Apache Kylin&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/oracle.png&#34; alt=&#34;Oracle&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/github-logos/airtable.png&#34; alt=&#34;AirTable&#34; border=&#34;0&#34; width=&#34;200&#34; height=&#34;80&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you want to add support for more database types or data engines, feel free to &lt;a href=&#34;https://docs.kanaries.net/support&#34;&gt;Contact us&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developer Documentation&lt;/h2&gt; &#xA;&lt;p&gt;RATH software is in open alpha stage. We are working on improving its code and documentation.&lt;/p&gt; &#xA;&lt;p&gt;If you are using RATH for your project(s), please let us know what are you using it for by emailing us at &lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/support@kanaries.org&#34;&gt;support@kanaries.org&lt;/a&gt;. Feedbacks are also welcomed. If you find a bug or have a feature request, please create an issue.&lt;/p&gt; &#xA;&lt;p&gt;We encourage you to check out our &lt;a href=&#34;https://docs.kanaries.net&#34;&gt;RATH Docs&lt;/a&gt; for references and guidance.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/0aa0df006ea6857c02565043d39c2b0da5380f93.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.kanaries.net/community&#34;&gt;Kanaries community&lt;/a&gt; is a place to have open discussions on features, voice your ideas, or get help with general questions. Get onboard with us through the following channels:&lt;/p&gt; &#xA;&lt;p&gt;Our developer community is the backbone of the ongoing RATH project. We sincerely welcome you to &lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/join&#34;&gt;join our community&lt;/a&gt;, participate in the conversation and stay connected with us for the latest updates.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/kanaries-community/shared_invite/zt-1pcosgbua-E_GBPawQOI79C41dPDyyvw&#34;&gt;Join our Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/Z4ngFWXz2U&#34;&gt;Join our Discord&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/contribution-guide&#34;&gt;contribute to the RATH project&lt;/a&gt;, submit any issues on our GitHub page, or split your grand new ideas in our chats.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/kanaries-community/shared_invite/zt-1pcosgbua-E_GBPawQOI79C41dPDyyvw&#34;&gt;&lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/slack.png&#34; alt=&#34;Join our Slack community&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Z4ngFWXz2U&#34;&gt;&lt;img src=&#34;https://kanaries-docs.oss-cn-hangzhou.aliyuncs.com/img/discord.png&#34; alt=&#34;Join our Discord community&#34; width=&#34;200&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please consider sharing your experience or thoughts about &lt;a href=&#34;https://kanaries.net&#34;&gt;Kanaries RATH&lt;/a&gt; with the border Open Source community. It really does help!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reddit.com/submit?url=https://github.com/Kanaries/Rath&amp;amp;title=OpenSource%20Augmented%20Analytic%20BI%20Solution:%20Automated%20Exploratory%20Data%20Analysis%20for%20Data%20Science&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share%20on-reddit-red?style=flat-square&amp;amp;logo=reddit&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://news.ycombinator.com/submitlink?u=https://github.com/Kanaries/Rath&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share%20on-hacker%20news-orange?style=flat-square&amp;amp;logo=ycombinator&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/share?url=https://github.com/Kanaries/Rath&amp;amp;text=OpenSource%20Augmented%20Analytic%20BI%20Solution:%20Automated%20Exploratory%20Data%20Analysis%20for%20Data%20Science&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share%20on-twitter-03A9F4?style=flat-square&amp;amp;logo=twitter&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/sharer/sharer.php?u=https://github.com/Kanaries/Rath&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share%20on-facebook-1976D2?style=flat-square&amp;amp;logo=facebook&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/shareArticle?url=https://github.com/Kanaries/Rath&amp;amp;title=OpenSource%20Augmented%20Analytic%20BI%20Solution:%20Automated%20Exploratory%20Data%20Analysis%20for%20Data%20Science&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/share%20on-linkedin-3949AB?style=flat-square&amp;amp;logo=linkedin&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://docs.kanaries.net/community/contribution-guide&#34;&gt;Contributing to RATH guide&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to all contributors &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/kanaries/rath/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=kanaries/rath&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;LICENSE (AGPL)&lt;/h2&gt; &#xA;&lt;p&gt;Rath is an automated data analysis and visualization tool (auto-EDA). It is a free and open-source software licensed under the AGPL.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Branded icons are licensed under their copyright license. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;strong&gt;Have fun with data!&lt;/strong&gt; ❤️ &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kanaries/Rath/master/#introduction&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wojtekmaj/react-pdf</title>
    <updated>2023-04-26T01:45:45Z</updated>
    <id>tag:github.com,2023-04-26:/wojtekmaj/react-pdf</id>
    <link href="https://github.com/wojtekmaj/react-pdf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Display PDFs in your React app as easily as if they were images.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-pdf.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/react-pdf.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt; &lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/actions&#34;&gt;&lt;img src=&#34;https://github.com/wojtekmaj/react-pdf/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;React-PDF&lt;/h1&gt; &#xA;&lt;p&gt;Display PDFs in your React app as easily as if they were images.&lt;/p&gt; &#xA;&lt;h2&gt;Lost?&lt;/h2&gt; &#xA;&lt;p&gt;This package is used to &lt;em&gt;display&lt;/em&gt; existing PDFs. If you wish to &lt;em&gt;create&lt;/em&gt; PDFs using React, you may be looking for &lt;a href=&#34;https://github.com/diegomura/react-pdf&#34;&gt;@react-pdf/renderer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;tl;dr&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install by executing &lt;code&gt;npm install react-pdf&lt;/code&gt; or &lt;code&gt;yarn add react-pdf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Import by adding &lt;code&gt;import { Document } from &#39;react-pdf&#39;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use by adding &lt;code&gt;&amp;lt;Document file=&#34;...&#34; /&amp;gt;&lt;/code&gt;. &lt;code&gt;file&lt;/code&gt; can be a URL, base64 content, Uint8Array, and more.&lt;/li&gt; &#xA; &lt;li&gt;Put &lt;code&gt;&amp;lt;Page /&amp;gt;&lt;/code&gt; components inside &lt;code&gt;&amp;lt;Document /&amp;gt;&lt;/code&gt; to render pages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;A minimal demo page can be found in &lt;code&gt;sample&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://projects.wojtekmaj.pl/react-pdf/&#34;&gt;Online demo&lt;/a&gt; is also available!&lt;/p&gt; &#xA;&lt;h2&gt;Before you continue&lt;/h2&gt; &#xA;&lt;p&gt;React-PDF is under constant development. This documentation is written for React-PDF 7.x branch. If you want to see documentation for other versions of React-PDF, use dropdown on top of GitHub page to switch to an appropriate tag. Here are quick links to the newest docs from each branch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v6.x/README.md&#34;&gt;v6.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v5.x/README.md&#34;&gt;v5.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v4.x/README.md&#34;&gt;v4.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v3.x/README.md&#34;&gt;v3.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v2.x/README.md&#34;&gt;v2.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/raw/v1.x/README.md&#34;&gt;v1.x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;h4&gt;Browser support&lt;/h4&gt; &#xA;&lt;p&gt;React-PDF supports all modern browsers. It is tested with the latest versions of Chrome, Edge, Safari, Firefox, and Opera.&lt;/p&gt; &#xA;&lt;p&gt;The following browsers are supported in React-PDF v7:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chrome ≥87&lt;/li&gt; &#xA; &lt;li&gt;Edge ≥87&lt;/li&gt; &#xA; &lt;li&gt;Safari ≥14.1&lt;/li&gt; &#xA; &lt;li&gt;Firefox ESR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may extend the list of supported browsers by providing additional polyfills (e.g. for &lt;code&gt;Promise.allSettled&lt;/code&gt;) and configuring your bundler to transpile &lt;code&gt;pdfjs-dist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to support older browsers, you will need to use React-PDF v5.&lt;/p&gt; &#xA;&lt;p&gt;If you need to support Internet Explorer 11, you will need to use React-PDF v4.&lt;/p&gt; &#xA;&lt;h4&gt;React&lt;/h4&gt; &#xA;&lt;p&gt;To use the latest version of React-PDF, your project needs to use React 16.8 or later.&lt;/p&gt; &#xA;&lt;p&gt;If you use an older version of React, please refer to the table below to a find suitable React-PDF version.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;React version&lt;/th&gt; &#xA;   &lt;th&gt;Newest compatible React-PDF version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;≥16.8&lt;/td&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;≥16.3&lt;/td&gt; &#xA;   &lt;td&gt;5.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;≥15.5&lt;/td&gt; &#xA;   &lt;td&gt;4.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Preact&lt;/h4&gt; &#xA;&lt;p&gt;React-PDF may be used with Preact.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Add React-PDF to your project by executing &lt;code&gt;npm install react-pdf&lt;/code&gt; or &lt;code&gt;yarn add react-pdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s an example of basic usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React, { useState } from &#39;react&#39;;&#xA;import { Document, Page } from &#39;react-pdf&#39;;&#xA;&#xA;function MyApp() {&#xA;  const [numPages, setNumPages] = useState(null);&#xA;  const [pageNumber, setPageNumber] = useState(1);&#xA;&#xA;  function onDocumentLoadSuccess({ numPages }) {&#xA;    setNumPages(numPages);&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;Document file=&#34;somefile.pdf&#34; onLoadSuccess={onDocumentLoadSuccess}&amp;gt;&#xA;        &amp;lt;Page pageNumber={pageNumber} /&amp;gt;&#xA;      &amp;lt;/Document&amp;gt;&#xA;      &amp;lt;p&amp;gt;&#xA;        Page {pageNumber} of {numPages}&#xA;      &amp;lt;/p&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/tree/main/sample&#34;&gt;sample directory&lt;/a&gt; in this repository for a full working example. For more examples and more advanced use cases, check &lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/wiki/Recipes&#34;&gt;Recipes&lt;/a&gt; in &lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/wiki/&#34;&gt;React-PDF Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Configure PDF.js worker&lt;/h3&gt; &#xA;&lt;p&gt;For React-PDF to work, PDF.js worker needs to be provided.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier, special entry files were prepared for most popular bundlers. You can find them in the table below.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to use React-PDF with Webpack 5, instead of writing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Document, Page } from &#39;react-pdf&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Document, Page } from &#39;react-pdf/dist/esm/index.webpack5&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Bundler&lt;/th&gt; &#xA;   &lt;th&gt;Entry file&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parcel 1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;react-pdf/dist/esm/index.parcel&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parcel 2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;react-pdf/dist/esm/index.parcel2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vite&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;react-pdf/dist/esm/index.vite&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Webpack 4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;react-pdf/dist/esm/index.webpack&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Webpack 5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;react-pdf/dist/esm/index.webpack5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Webpack 4&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use React-PDF with Webpack 4, you&#39;ll need to manually install &lt;code&gt;file-loader&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;h4&gt;Create React App&lt;/h4&gt; &#xA;&lt;p&gt;Create React App 4 (&lt;code&gt;react-scripts@4.0.0&lt;/code&gt;) uses Webpack 4 under the hood, so you can use the entry file built for Webpack 4.&lt;/p&gt; &#xA;&lt;p&gt;Create React App 5 (&lt;code&gt;react-scripts@5.0.0&lt;/code&gt;) uses Webpack 5 under the hood, so the aim is to use the entry file built for Webpack 5. However, the way Webpack is configured in CRA 5 causes it to crash at build time on most machines with &lt;em&gt;JavaScript heap out of memory&lt;/em&gt; error.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wojtekmaj/react-pdf/main/#standard-browserify-esbuild-and-others&#34;&gt;Standard instructions&lt;/a&gt; will also work with Create React App. Please note that in CRA, you can copy &lt;code&gt;pdf.worker.js&lt;/code&gt; file from &lt;code&gt;pdfjs-dist/build&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt; directory in order for it to be copied to your project&#39;s output folder at build time.&lt;/p&gt; &#xA;&lt;h4&gt;Standard (Browserify, esbuild and others)&lt;/h4&gt; &#xA;&lt;p&gt;If you use Browserify, esbuild, or other bundlers, you will have to make sure on your own that &lt;code&gt;pdf.worker.js&lt;/code&gt; file from &lt;code&gt;pdfjs-dist/build&lt;/code&gt; is copied to your project&#39;s output folder.&lt;/p&gt; &#xA;&lt;p&gt;For example, you could use a custom script like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import path from &#39;node:path&#39;;&#xA;import fs from &#39;node:fs&#39;;&#xA;&#xA;const pdfjsDistPath = path.dirname(require.resolve(&#39;pdfjs-dist/package.json&#39;));&#xA;const pdfWorkerPath = path.join(pdfjsDistPath, &#39;build&#39;, &#39;pdf.worker.js&#39;);&#xA;&#xA;fs.copyFileSync(pdfWorkerPath, &#39;./dist/pdf.worker.js&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t need to debug &lt;code&gt;pdf.worker.js&lt;/code&gt;, you can use &lt;code&gt;pdf.worker.min.js&lt;/code&gt; file instead, which is roughly half the size. For this to work, however, you will need to specify &lt;code&gt;workerSrc&lt;/code&gt; manually like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { pdfjs } from &#39;react-pdf&#39;;&#xA;pdfjs.GlobalWorkerOptions.workerSrc = &#39;pdf.worker.min.js&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could use the minified &lt;code&gt;pdf.worker.min.js&lt;/code&gt; from an external CDN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { pdfjs } from &#39;react-pdf&#39;;&#xA;pdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support for annotations&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use annotations (e.g. links) in PDFs rendered by React-PDF, then you would need to include stylesheet necessary for annotations to be correctly displayed like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#39;react-pdf/dist/esm/Page/AnnotationLayer.css&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support for text layer&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use text layer in PDFs rendered by React-PDF, then you would need to include stylesheet necessary for text layer to be correctly displayed like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#39;react-pdf/dist/esm/Page/TextLayer.css&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support for non-latin characters&lt;/h3&gt; &#xA;&lt;p&gt;If you want to ensure that PDFs with non-latin characters will render perfectly, or you have encountered the following warning:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Warning: The CMap &#34;baseUrl&#34; parameter must be specified, ensure that the &#34;cMapUrl&#34; and &#34;cMapPacked&#34; API parameters are provided.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then you would also need to include cMaps in your build and tell React-PDF where they are.&lt;/p&gt; &#xA;&lt;h4&gt;Copying cMaps&lt;/h4&gt; &#xA;&lt;p&gt;First, you need to copy cMaps from &lt;code&gt;pdfjs-dist&lt;/code&gt; (React-PDF&#39;s dependency - it should be in your &lt;code&gt;node_modules&lt;/code&gt; if you have React-PDF installed). cMaps are located in &lt;code&gt;pdfjs-dist/cmaps&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Webpack&lt;/h5&gt; &#xA;&lt;p&gt;Add &lt;code&gt;copy-webpack-plugin&lt;/code&gt; to your project if you haven&#39;t already:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install copy-webpack-plugin --save-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, in your Webpack config, import the plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import path from &#39;node:path&#39;;&#xA;import CopyWebpackPlugin from &#39;copy-webpack-plugin&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and in &lt;code&gt;plugins&lt;/code&gt; section of your config, add the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new CopyWebpackPlugin({&#xA;  patterns: [&#xA;    {&#xA;      from: path.join(path.dirname(require.resolve(&#39;pdfjs-dist/package.json&#39;)), &#39;cmaps&#39;),&#xA;      to: &#39;cmaps/&#39;&#xA;    },&#xA;  ],&#xA;}),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Parcel, Browserify and others&lt;/h5&gt; &#xA;&lt;p&gt;If you use Parcel, Browserify or other bundling tools, you will have to make sure on your own that cMaps are copied to your project&#39;s output folder.&lt;/p&gt; &#xA;&lt;p&gt;For example, you could use a custom script like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import path from &#39;node:path&#39;;&#xA;import fs from &#39;node:fs&#39;;&#xA;&#xA;const cMapsDir = path.join(path.dirname(require.resolve(&#39;pdfjs-dist/package.json&#39;)), &#39;cmaps&#39;);&#xA;&#xA;function copyDir(from, to) {&#xA;  // Ensure target directory exists&#xA;  fs.mkdirSync(to, { recursive: true });&#xA;&#xA;  const files = fs.readdirSync(from);&#xA;  files.forEach((file) =&amp;gt; {&#xA;    fs.copyFileSync(path.join(from, file), path.join(to, file));&#xA;  });&#xA;}&#xA;&#xA;copyDir(cMapsDir, &#39;dist/cmaps/&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting up React-PDF&lt;/h4&gt; &#xA;&lt;p&gt;Now that you have cMaps in your build, pass required options to Document component by using &lt;code&gt;options&lt;/code&gt; prop, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;Document&#xA;  options={{&#xA;    cMapUrl: &#39;cmaps/&#39;,&#xA;    cMapPacked: true,&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could use cMaps from external CDN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { pdfjs } from &#39;react-pdf&#39;;&#xA;&#xA;&amp;lt;Document&#xA;  options={{&#xA;    cMapUrl: `https://unpkg.com/pdfjs-dist@${pdfjs.version}/cmaps/`,&#xA;    cMapPacked: true,&#xA;  }}&#xA;/&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Support for standard fonts&lt;/h3&gt; &#xA;&lt;p&gt;If you want to support PDFs using standard fonts (deprecated in PDF 1.5, but still around), then you would also need to include standard fonts in your build and tell React-PDF where they are.&lt;/p&gt; &#xA;&lt;h4&gt;Copying fonts&lt;/h4&gt; &#xA;&lt;p&gt;First, you need to copy standard fonts from &lt;code&gt;pdfjs-dist&lt;/code&gt; (React-PDF&#39;s dependency - it should be in your &lt;code&gt;node_modules&lt;/code&gt; if you have React-PDF installed). Standard fonts are located in &lt;code&gt;pdfjs-dist/standard_fonts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Webpack&lt;/h5&gt; &#xA;&lt;p&gt;Add &lt;code&gt;copy-webpack-plugin&lt;/code&gt; to your project if you haven&#39;t already:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install copy-webpack-plugin --save-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, in your Webpack config, import the plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import path from &#39;node:path&#39;;&#xA;import CopyWebpackPlugin from &#39;copy-webpack-plugin&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and in &lt;code&gt;plugins&lt;/code&gt; section of your config, add the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new CopyWebpackPlugin({&#xA;  patterns: [&#xA;    {&#xA;      from: path.join(path.dirname(require.resolve(&#39;pdfjs-dist/package.json&#39;)), &#39;standard_fonts&#39;),&#xA;      to: &#39;standard_fonts/&#39;&#xA;    },&#xA;  ],&#xA;}),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Parcel, Browserify and others&lt;/h5&gt; &#xA;&lt;p&gt;If you use Parcel, Browserify or other bundling tools, you will have to make sure on your own that standard fonts are copied to your project&#39;s output folder.&lt;/p&gt; &#xA;&lt;p&gt;For example, you could use a custom script like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import path from &#39;node:path&#39;;&#xA;import fs from &#39;node:fs&#39;;&#xA;&#xA;const standardFontsDir = path.join(&#xA;  path.dirname(require.resolve(&#39;pdfjs-dist/package.json&#39;)),&#xA;  &#39;standard_fonts&#39;,&#xA;);&#xA;&#xA;function copyDir(from, to) {&#xA;  // Ensure target directory exists&#xA;  fs.mkdirSync(to, { recursive: true });&#xA;&#xA;  const files = fs.readdirSync(from);&#xA;  files.forEach((file) =&amp;gt; {&#xA;    fs.copyFileSync(path.join(from, file), path.join(to, file));&#xA;  });&#xA;}&#xA;&#xA;copyDir(standardFontsDir, &#39;dist/standard_fonts/&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setting up React-PDF&lt;/h4&gt; &#xA;&lt;p&gt;Now that you have standard fonts in your build, pass required options to Document component by using &lt;code&gt;options&lt;/code&gt; prop, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;lt;Document&#xA;  options={{&#xA;    standardFontDataUrl: &#39;standard_fonts/&#39;,&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could use standard fonts from external CDN:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { pdfjs } from &#39;react-pdf&#39;;&#xA;&#xA;&amp;lt;Document&#xA;  options={{&#xA;    standardFontDataUrl: `https://unpkg.com/pdfjs-dist@${pdfjs.version}/standard_fonts`,&#xA;  }}&#xA;/&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;h3&gt;Document&lt;/h3&gt; &#xA;&lt;p&gt;Loads a document passed using &lt;code&gt;file&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;h4&gt;Props&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prop name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;className&lt;/td&gt; &#xA;   &lt;td&gt;Class name(s) that will be added to rendered element along with the default &lt;code&gt;react-pdf__Document&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;custom-class-name-1 custom-class-name-2&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Array of strings:&lt;br&gt;&lt;code&gt;[&#34;custom-class-name-1&#34;, &#34;custom-class-name-2&#34;]&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;error&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display in case of an error.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;Failed to load PDF file.&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;An error occurred!&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;An error occurred!&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderError&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;externalLinkRel&lt;/td&gt; &#xA;   &lt;td&gt;Link rel for links rendered in annotations.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;noopener noreferrer nofollow&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;One of valid &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-rel&#34;&gt;values for &lt;code&gt;rel&lt;/code&gt; attribute&lt;/a&gt;.&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_self&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_blank&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_parent&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_top&#34;&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;externalLinkTarget&lt;/td&gt; &#xA;   &lt;td&gt;Link target for external links rendered in annotations.&lt;/td&gt; &#xA;   &lt;td&gt;unset, which means that default behavior will be used&lt;/td&gt; &#xA;   &lt;td&gt;One of valid &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target&#34;&gt;values for &lt;code&gt;target&lt;/code&gt; attribute&lt;/a&gt;.&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_self&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_blank&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_parent&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;&lt;code&gt;&#34;_top&#34;&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;What PDF should be displayed.&lt;br&gt;Its value can be an URL, a file (imported using &lt;code&gt;import ... from ...&lt;/code&gt; or from file input form element), or an object with parameters (&lt;code&gt;url&lt;/code&gt; - URL; &lt;code&gt;data&lt;/code&gt; - data, preferably Uint8Array; &lt;code&gt;range&lt;/code&gt; - PDFDataRangeTransport.&lt;br&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Since equality check (&lt;code&gt;===&lt;/code&gt;) is used to determine if &lt;code&gt;file&lt;/code&gt; object has changed, it must be memoized by setting it in component&#39;s state, &lt;code&gt;useMemo&lt;/code&gt; or other similar technique.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;URL:&lt;br&gt;&lt;code&gt;&#34;http://example.com/sample.pdf&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;File:&lt;br&gt;&lt;code&gt;import sample from &#39;../static/sample.pdf&#39;&lt;/code&gt; and then&lt;br&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Parameter object:&lt;br&gt;&lt;code&gt;{ url: &#39;http://example.com/sample.pdf&#39; }&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;imageResourcesPath&lt;/td&gt; &#xA;   &lt;td&gt;The path used to prefix the src attributes of annotation SVGs.&lt;/td&gt; &#xA;   &lt;td&gt;n/a (pdf.js will fallback to an empty string)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;/public/images/&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;inputRef&lt;/td&gt; &#xA;   &lt;td&gt;A prop that behaves like &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;ref&lt;/a&gt;, but it&#39;s passed to main &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; rendered by &lt;code&gt;&amp;lt;Document&amp;gt;&lt;/code&gt; component.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;(ref) =&amp;gt; { this.myDocument = ref; }&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.createRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;this.ref = React.createRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={this.ref}&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.useRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;const ref = React.useRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={ref}&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loading&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display while loading.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;Loading PDF…&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;Please wait!&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;Please wait!&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderLoader&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;noData&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display in case of no data.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;No PDF file specified.&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;Please select a file.&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;Please select a file.&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderNoData&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onItemClick&lt;/td&gt; &#xA;   &lt;td&gt;Function called when an outline item has been clicked. Usually, you would like to use this callback to move the user wherever they requested to.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;({ dest, pageIndex, pageNumber }) =&amp;gt; alert(&#39;Clicked an item from page &#39; + pageNumber + &#39;!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while loading a document.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading document! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadProgress&lt;/td&gt; &#xA;   &lt;td&gt;Function called, potentially multiple times, as the loading progresses.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;({ loaded, total }) =&amp;gt; alert(&#39;Loading a document: &#39; + (loaded / total) * 100 + &#39;%&#39;);&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when the document is successfully loaded.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(pdf) =&amp;gt; alert(&#39;Loaded a file with &#39; + pdf.numPages + &#39; pages!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onPassword&lt;/td&gt; &#xA;   &lt;td&gt;Function called when a password-protected PDF is loaded.&lt;/td&gt; &#xA;   &lt;td&gt;Function that prompts the user for password.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(callback) =&amp;gt; callback(&#39;s3cr3t_p4ssw0rd&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onSourceError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while retrieving document source from &lt;code&gt;file&lt;/code&gt; prop.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while retrieving document source! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onSourceSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when document source is successfully retrieved from &lt;code&gt;file&lt;/code&gt; prop.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;() =&amp;gt; alert(&#39;Document source retrieved!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;options&lt;/td&gt; &#xA;   &lt;td&gt;An object in which additional parameters to be passed to PDF.js can be defined. Most notably: &lt;code&gt;cMapUrl&lt;/code&gt;, &lt;code&gt;cMapPacked&lt;/code&gt; - required for CMap support; &lt;code&gt;httpHeaders&lt;/code&gt; - custom request headers, e.g. for authorization); &lt;code&gt;withCredentials&lt;/code&gt; - a boolean to indicate whether or not to include cookies in the request (defaults to &lt;code&gt;false&lt;/code&gt;). For a full list of possible parameters, check &lt;a href=&#34;https://mozilla.github.io/pdf.js/api/draft/module-pdfjsLib.html#~DocumentInitParameters&#34;&gt;PDF.js documentation on DocumentInitParameters&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{ cMapUrl: &#39;cmaps/&#39;, cMapPacked: true }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;renderMode&lt;/td&gt; &#xA;   &lt;td&gt;Rendering mode of the document. Can be &lt;code&gt;&#34;canvas&#34;&lt;/code&gt;, &lt;code&gt;&#34;svg&#34;&lt;/code&gt; or &lt;code&gt;&#34;none&#34;&lt;/code&gt;.&lt;br&gt;&lt;strong&gt;Warning&lt;/strong&gt;: SVG render mode is no longer maintained and may be removed in the future.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;canvas&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;svg&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rotate&lt;/td&gt; &#xA;   &lt;td&gt;Rotation of the document in degrees. If provided, will change rotation globally, even for the pages which were given &lt;code&gt;rotate&lt;/code&gt; prop of their own. &lt;code&gt;90&lt;/code&gt; = rotated to the right, &lt;code&gt;180&lt;/code&gt; = upside down, &lt;code&gt;270&lt;/code&gt; = rotated to the left.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;90&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Page&lt;/h3&gt; &#xA;&lt;p&gt;Displays a page. Should be placed inside &lt;code&gt;&amp;lt;Document /&amp;gt;&lt;/code&gt;. Alternatively, it can have &lt;code&gt;pdf&lt;/code&gt; prop passed, which can be obtained from &lt;code&gt;&amp;lt;Document /&amp;gt;&lt;/code&gt;&#39;s &lt;code&gt;onLoadSuccess&lt;/code&gt; callback function, however some advanced functions like linking between pages inside a document may not be working correctly.&lt;/p&gt; &#xA;&lt;h4&gt;Props&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prop name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;canvasBackground&lt;/td&gt; &#xA;   &lt;td&gt;Canvas background color. Any valid &lt;code&gt;canvas.fillStyle&lt;/code&gt; can be used. If you set &lt;code&gt;renderMode&lt;/code&gt; to &lt;code&gt;&#34;svg&#34;&lt;/code&gt; this prop will be ignored.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;transparent&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;canvasRef&lt;/td&gt; &#xA;   &lt;td&gt;A prop that behaves like &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;ref&lt;/a&gt;, but it&#39;s passed to &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; rendered by &lt;code&gt;&amp;lt;PageCanvas&amp;gt;&lt;/code&gt; component. If you set &lt;code&gt;renderMode&lt;/code&gt; to &lt;code&gt;&#34;svg&#34;&lt;/code&gt; this prop will be ignored.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;(ref) =&amp;gt; { this.myPage = ref; }&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.createRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;this.ref = React.createRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={this.ref}&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.useRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;const ref = React.useRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={ref}&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;className&lt;/td&gt; &#xA;   &lt;td&gt;Class name(s) that will be added to rendered element along with the default &lt;code&gt;react-pdf__Page&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;custom-class-name-1 custom-class-name-2&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Array of strings:&lt;br&gt;&lt;code&gt;[&#34;custom-class-name-1&#34;, &#34;custom-class-name-2&#34;]&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;customTextRenderer&lt;/td&gt; &#xA;   &lt;td&gt;Function that customizes how a text layer is rendered.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;({ str, itemIndex }) =&amp;gt; str.replace(/ipsum/g, value =&amp;gt; `&amp;lt;mark&amp;gt;${value}&amp;lt;/mark&amp;gt;`)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;devicePixelRatio&lt;/td&gt; &#xA;   &lt;td&gt;The ratio between physical pixels and device-independent pixels (DIPs) on the current device.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;window.devicePixelRatio&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;error&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display in case of an error.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;Failed to load the page.&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;An error occurred!&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;An error occurred!&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderError&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;height&lt;/td&gt; &#xA;   &lt;td&gt;Page height. If neither &lt;code&gt;height&lt;/code&gt; nor &lt;code&gt;width&lt;/code&gt; are defined, page will be rendered at the size defined in PDF. If you define &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; at the same time, &lt;code&gt;height&lt;/code&gt; will be ignored. If you define &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; at the same time, the height will be multiplied by a given factor.&lt;/td&gt; &#xA;   &lt;td&gt;Page&#39;s default height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;imageResourcesPath&lt;/td&gt; &#xA;   &lt;td&gt;The path used to prefix the src attributes of annotation SVGs.&lt;/td&gt; &#xA;   &lt;td&gt;n/a (pdf.js will fallback to an empty string)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;/public/images/&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;inputRef&lt;/td&gt; &#xA;   &lt;td&gt;A prop that behaves like &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;ref&lt;/a&gt;, but it&#39;s passed to main &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; rendered by &lt;code&gt;&amp;lt;Page&amp;gt;&lt;/code&gt; component.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;(ref) =&amp;gt; { this.myPage = ref; }&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.createRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;this.ref = React.createRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={this.ref}&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.useRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;const ref = React.useRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={ref}&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loading&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display while loading.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;Loading page…&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;Please wait!&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;Please wait!&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderLoader&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;noData&lt;/td&gt; &#xA;   &lt;td&gt;What the component should display in case of no data.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;No page specified.&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;Please select a page.&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;React element:&lt;br&gt;&lt;code&gt;&amp;lt;div&amp;gt;Please select a page.&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;this.renderNoData&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while loading the page.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading page! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when the page is successfully loaded.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(page) =&amp;gt; alert(&#39;Now displaying a page number &#39; + page.pageNumber + &#39;!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onRenderError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while rendering the page.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading page! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onRenderSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when the page is successfully rendered on the screen.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;() =&amp;gt; alert(&#39;Rendered the page!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onRenderTextLayerError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while rendering the text layer.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading page! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onRenderTextLayerSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when the text layer is successfully rendered on the screen.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;() =&amp;gt; alert(&#39;Rendered the page!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onGetAnnotationsSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when annotations are successfully loaded.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(annotations) =&amp;gt; alert(&#39;Now displaying &#39; + annotations.length + &#39; annotations!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onGetAnnotationsError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while loading annotations.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading annotations! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onGetTextSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when text layer items are successfully loaded.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;({ items, styles }) =&amp;gt; alert(&#39;Now displaying &#39; + items.length + &#39; text layer items!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onGetTextError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while loading text layer items.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while loading text layer items! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pageIndex&lt;/td&gt; &#xA;   &lt;td&gt;Which page from PDF file should be displayed, by page index.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pageNumber&lt;/td&gt; &#xA;   &lt;td&gt;Which page from PDF file should be displayed, by page number. If provided, &lt;code&gt;pageIndex&lt;/code&gt; prop will be ignored.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;renderAnnotationLayer&lt;/td&gt; &#xA;   &lt;td&gt;Whether annotations (e.g. links) should be rendered.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;renderForms&lt;/td&gt; &#xA;   &lt;td&gt;Whether forms should be rendered. &lt;code&gt;renderAnnotationLayer&lt;/code&gt; prop must be set to &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;renderMode&lt;/td&gt; &#xA;   &lt;td&gt;Rendering mode of the document. Can be &lt;code&gt;&#34;canvas&#34;&lt;/code&gt;, &lt;code&gt;&#34;svg&#34;&lt;/code&gt; or &lt;code&gt;&#34;none&#34;&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;canvas&#34;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;svg&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;renderTextLayer&lt;/td&gt; &#xA;   &lt;td&gt;Whether a text layer should be rendered.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rotate&lt;/td&gt; &#xA;   &lt;td&gt;Rotation of the page in degrees. &lt;code&gt;90&lt;/code&gt; = rotated to the right, &lt;code&gt;180&lt;/code&gt; = upside down, &lt;code&gt;270&lt;/code&gt; = rotated to the left.&lt;/td&gt; &#xA;   &lt;td&gt;Page&#39;s default setting, usually &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;90&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scale&lt;/td&gt; &#xA;   &lt;td&gt;Page scale.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;width&lt;/td&gt; &#xA;   &lt;td&gt;Page width. If neither &lt;code&gt;height&lt;/code&gt; nor &lt;code&gt;width&lt;/code&gt; are defined, page will be rendered at the size defined in PDF. If you define &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; at the same time, &lt;code&gt;height&lt;/code&gt; will be ignored. If you define &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; at the same time, the width will be multiplied by a given factor.&lt;/td&gt; &#xA;   &lt;td&gt;Page&#39;s default width&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Outline&lt;/h3&gt; &#xA;&lt;p&gt;Displays an outline (table of contents). Should be placed inside &lt;code&gt;&amp;lt;Document /&amp;gt;&lt;/code&gt;. Alternatively, it can have &lt;code&gt;pdf&lt;/code&gt; prop passed, which can be obtained from &lt;code&gt;&amp;lt;Document /&amp;gt;&lt;/code&gt;&#39;s &lt;code&gt;onLoadSuccess&lt;/code&gt; callback function.&lt;/p&gt; &#xA;&lt;h4&gt;Props&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prop name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Example values&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;className&lt;/td&gt; &#xA;   &lt;td&gt;Class name(s) that will be added to rendered element along with the default &lt;code&gt;react-pdf__Outline&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;String:&lt;br&gt;&lt;code&gt;&#34;custom-class-name-1 custom-class-name-2&#34;&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Array of strings:&lt;br&gt;&lt;code&gt;[&#34;custom-class-name-1&#34;, &#34;custom-class-name-2&#34;]&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;inputRef&lt;/td&gt; &#xA;   &lt;td&gt;A prop that behaves like &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html&#34;&gt;ref&lt;/a&gt;, but it&#39;s passed to main &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; rendered by &lt;code&gt;&amp;lt;Outline&amp;gt;&lt;/code&gt; component.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Function:&lt;br&gt;&lt;code&gt;(ref) =&amp;gt; { this.myOutline = ref; }&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.createRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;this.ref = React.createRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={this.ref}&lt;/code&gt;&lt;/li&gt;&#xA;     &lt;li&gt;Ref created using &lt;code&gt;React.useRef&lt;/code&gt;:&lt;br&gt;&lt;code&gt;const ref = React.useRef();&lt;/code&gt;&lt;br&gt;…&lt;br&gt;&lt;code&gt;inputRef={ref}&lt;/code&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onItemClick&lt;/td&gt; &#xA;   &lt;td&gt;Function called when an outline item has been clicked. Usually, you would like to use this callback to move the user wherever they requested to.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;({ dest, pageIndex, pageNumber }) =&amp;gt; alert(&#39;Clicked an item from page &#39; + pageNumber + &#39;!&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadError&lt;/td&gt; &#xA;   &lt;td&gt;Function called in case of an error while retrieving the outline.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(error) =&amp;gt; alert(&#39;Error while retrieving the outline! &#39; + error.message)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;onLoadSuccess&lt;/td&gt; &#xA;   &lt;td&gt;Function called when the outline is successfully retrieved.&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;(outline) =&amp;gt; alert(&#39;The outline has been successfully retrieved.&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojtekmaj/react-pdf/wiki/&#34;&gt;React-PDF Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/wojtekmaj.png?s=100&#34; width=&#34;100&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; Wojciech Maj&lt;br&gt; &lt;a href=&#34;mailto:kontakt@wojtekmaj.pl&#34;&gt;kontakt@wojtekmaj.pl&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://wojtekmaj.pl&#34;&gt;https://wojtekmaj.pl&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Thank you&lt;/h2&gt; &#xA;&lt;p&gt;This project wouldn&#39;t be possible without the awesome work of Niklas Närhinen &lt;a href=&#34;mailto:niklas@narhinen.net&#34;&gt;niklas@narhinen.net&lt;/a&gt; who created its original version and without Mozilla, author of &lt;a href=&#34;http://mozilla.github.io/pdf.js&#34;&gt;pdf.js&lt;/a&gt;. Thank you!&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our sponsors! &lt;a href=&#34;https://opencollective.com/react-pdf-wojtekmaj#sponsor&#34;&gt;Become a sponsor&lt;/a&gt; and get your image on our README on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/react-pdf-wojtekmaj#sponsors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/react-pdf-wojtekmaj/sponsors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! &lt;a href=&#34;https://opencollective.com/react-pdf-wojtekmaj#backer&#34;&gt;Become a backer&lt;/a&gt; and get your image on our README on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/react-pdf-wojtekmaj#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/react-pdf-wojtekmaj/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Top Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our contributors that helped on this project!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencollective.com/react-pdf/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Top Contributors&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/blockly</title>
    <updated>2023-04-26T01:45:45Z</updated>
    <id>tag:github.com,2023-04-26:/google/blockly</id>
    <link href="https://github.com/google/blockly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The web-based visual programming editor.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blockly&lt;/h1&gt; &#xA;&lt;p&gt;Google&#39;s Blockly is a library that adds a visual code editor to web and mobile apps. The Blockly editor uses interlocking, graphical blocks to represent code concepts like variables, logical expressions, loops, and more. It allows users to apply programming principles without having to worry about syntax or the intimidation of a blinking cursor on the command line. All code is free and open source.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://developers.google.com/blockly/images/sample.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started with Blockly&lt;/h2&gt; &#xA;&lt;p&gt;Blockly has many resources for learning how to use the library. Start at our &lt;a href=&#34;https://developers.google.com/blockly&#34;&gt;Google Developers Site&lt;/a&gt; to read the documentation on how to get started, configure Blockly, and integrate it into your application. The developers site also contains links to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/blockly/guides/get-started/web&#34;&gt;Getting Started article&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blocklycodelabs.dev/codelabs/getting-started/index.html#0&#34;&gt;Getting Started codelab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blocklycodelabs.dev/&#34;&gt;More codelabs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://google.github.io/blockly-samples/&#34;&gt;Demos and plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Help us focus our development efforts by telling us &lt;a href=&#34;https://developers.google.com/blockly/registration&#34;&gt;what you are doing with Blockly&lt;/a&gt;. The questionnaire only takes a few minutes and will help us better support the Blockly community.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Blockly&lt;/h3&gt; &#xA;&lt;p&gt;Blockly is &lt;a href=&#34;https://www.npmjs.com/package/blockly&#34;&gt;available on npm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install blockly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on installing and using Blockly, see the &lt;a href=&#34;https://developers.google.com/blockly/guides/get-started/web&#34;&gt;Getting Started article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Help&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/blockly/guides/modify/contribute/write_a_good_issue&#34;&gt;Report a bug&lt;/a&gt; or file a feature request on GitHub&lt;/li&gt; &#xA; &lt;li&gt;Ask a question, or search others&#39; questions, on our &lt;a href=&#34;https://groups.google.com/forum/#!forum/blockly&#34;&gt;developer forum&lt;/a&gt;. You can also drop by to say hello and show us your prototypes; collectively we have a lot of experience and can offer hints which will save you time. We actively monitor the forums and typically respond to questions within 2 working days.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;blockly-samples&lt;/h3&gt; &#xA;&lt;p&gt;We have a number of resources such as example code, demos, and plugins in another repository called &lt;a href=&#34;https://github.com/google/blockly-samples/&#34;&gt;blockly-samples&lt;/a&gt;. A plugin is a self-contained piece of code that adds functionality to Blockly. Plugins can add fields, define themes, create renderers, and much more. For more information, see the &lt;a href=&#34;https://developers.google.com/blockly/guides/plugins/overview&#34;&gt;Plugins documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Blockly&lt;/h2&gt; &#xA;&lt;p&gt;Want to make Blockly better? We welcome contributions to Blockly in the form of pull requests, bug reports, documentation, answers on the forum, and more! Check out our &lt;a href=&#34;https://developers.google.com/blockly/guides/modify/contributing&#34;&gt;Contributing Guidelines&lt;/a&gt; for more information. You might also want to look for issues tagged &#34;&lt;a href=&#34;https://github.com/google/blockly/labels/help%20wanted&#34;&gt;Help Wanted&lt;/a&gt;&#34; which are issues we think would be great for external contributors to help with.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;We release by pushing the latest code to the master branch, followed by updating the npm package, our &lt;a href=&#34;https://developers.google.com/blockly&#34;&gt;docs&lt;/a&gt;, and &lt;a href=&#34;https://google.github.io/blockly-samples/&#34;&gt;demo pages&lt;/a&gt;. We typically release a new version of Blockly once a quarter (every 3 months). If there are breaking bugs, such as a crash when performing a standard action or a rendering issue that makes Blockly unusable, we will cherry-pick fixes to master between releases to fix them. The &lt;a href=&#34;https://github.com/google/blockly/releases&#34;&gt;releases page&lt;/a&gt; has a list of all releases.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt;. Releases that have breaking changes or are otherwise not backwards compatible will have a new major version. Patch versions are reserved for bug-fix patches between scheduled releases.&lt;/p&gt; &#xA;&lt;p&gt;We now have a &lt;a href=&#34;https://www.npmjs.com/package/blockly?activeTab=versions&#34;&gt;beta release on npm&lt;/a&gt;. If you&#39;d like to test the upcoming release, or try out a not-yet-released new API, you can use the beta channel with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install blockly@beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As it is a beta channel, it may be less stable, and the APIs there are subject to change.&lt;/p&gt; &#xA;&lt;h3&gt;Branches&lt;/h3&gt; &#xA;&lt;p&gt;There are two main branches for Blockly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/google/blockly&#34;&gt;master&lt;/a&gt;&lt;/strong&gt; - This is the (mostly) stable current release of Blockly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/google/blockly/tree/develop&#34;&gt;develop&lt;/a&gt;&lt;/strong&gt; - This is where most of our work happens. Pull requests should always be made against develop. This branch will generally be usable, but may be less stable than the master branch. Once something is in develop we expect it to merge to master in the next release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;other branches:&lt;/strong&gt; - Larger changes may have their own branches until they are good enough for people to try out. These will be developed separately until we think they are almost ready for release. These branches typically get merged into develop immediately after a release to allow extra time for testing.&lt;/p&gt; &#xA;&lt;h3&gt;New APIs&lt;/h3&gt; &#xA;&lt;p&gt;Once a new API is merged into master it is considered beta until the following release. We generally try to avoid changing an API after it has been merged to master, but sometimes we need to make changes after seeing how an API is used. If an API has been around for at least two releases we&#39;ll do our best to avoid breaking it.&lt;/p&gt; &#xA;&lt;p&gt;Unreleased APIs may change radically. Anything that is in &lt;code&gt;develop&lt;/code&gt; but not &lt;code&gt;master&lt;/code&gt; is subject to change without warning.&lt;/p&gt; &#xA;&lt;h2&gt;Issues and Milestones&lt;/h2&gt; &#xA;&lt;p&gt;We typically triage all bugs within 2 working days, which includes adding any appropriate labels and assigning it to a milestone. Please keep in mind, we are a small team so even feature requests that everyone agrees on may not be prioritized.&lt;/p&gt; &#xA;&lt;h3&gt;Milestones&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upcoming release&lt;/strong&gt; - The upcoming release milestone is for all bugs we plan on fixing before the next release. This typically has the form of &lt;code&gt;year_quarter_release&lt;/code&gt; (such as &lt;code&gt;2019_q2_release&lt;/code&gt;). Some bugs will be added to this release when they are triaged, others may be added closer to a release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bug Bash Backlog&lt;/strong&gt; - These are bugs that we&#39;re still prioritizing. They haven&#39;t been added to a specific release yet, but we&#39;ll consider them for each release depending on relative priority and available time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Icebox&lt;/strong&gt; - These are bugs that we do not intend to spend time on. They are either too much work or minor enough that we don&#39;t expect them to ever take priority. We are still happy to accept pull requests for these bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Good to Know&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-browser Testing Platform and Open Source &amp;lt;3 Provided by &lt;a href=&#34;https://saucelabs.com&#34;&gt;Sauce Labs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;We test browsers using &lt;a href=&#34;https://browserstack.com&#34;&gt;BrowserStack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>