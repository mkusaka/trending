<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-25T01:40:20Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tensorflow/tensorboard</title>
    <updated>2024-09-25T01:40:20Z</updated>
    <id>tag:github.com,2024-09-25:/tensorflow/tensorboard</id>
    <link href="https://github.com/tensorflow/tensorboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TensorFlow&#39;s Visualization Toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TensorBoard &lt;a href=&#34;https://github.com/tensorflow/tensorboard/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tensorboard/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/tensorboard/actions?query=workflow%3Anightly-release+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tensorboard/workflows/nightly-release/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Nightly CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/py/tensorboard&#34;&gt;&lt;img src=&#34;https://badge.fury.io/py/tensorboard.svg?sanitize=true&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;TensorBoard is a suite of web applications for inspecting and understanding your TensorFlow runs and graphs.&lt;/p&gt; &#xA;&lt;p&gt;This README gives an overview of key concepts in TensorBoard, as well as how to interpret the visualizations TensorBoard provides. For an in-depth example of using TensorBoard, see the tutorial: &lt;a href=&#34;https://www.tensorflow.org/tensorboard/get_started&#34;&gt;TensorBoard: Getting Started&lt;/a&gt;. Documentation on how to use TensorBoard to work with images, graphs, hyper parameters, and more are linked from there, along with tutorial walk-throughs in Colab.&lt;/p&gt; &#xA;&lt;p&gt;TensorBoard is designed to run entirely offline, without requiring any access to the Internet. For instance, this may be on your local machine, behind a corporate firewall, or in a datacenter.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Before running TensorBoard, make sure you have generated summary data in a log directory by creating a summary writer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# sess.graph contains the graph definition; that enables the Graph Visualizer.&#xA;&#xA;file_writer = tf.summary.FileWriter(&#39;/path/to/logs&#39;, sess.graph)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details, see &lt;a href=&#34;https://www.tensorflow.org/get_started/summaries_and_tensorboard&#34;&gt;the TensorBoard tutorial&lt;/a&gt;. Once you have event files, run TensorBoard and provide the log directory. If you&#39;re using a precompiled TensorFlow package (e.g. you installed via pip), run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensorboard --logdir path/to/logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you are building from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bazel build tensorboard:tensorboard&#xA;./bazel-bin/tensorboard/tensorboard --logdir path/to/logs&#xA;&#xA;# or even more succinctly&#xA;bazel run tensorboard -- --logdir path/to/logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should print that TensorBoard has started. Next, connect to &lt;a href=&#34;http://localhost:6006&#34;&gt;http://localhost:6006&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;TensorBoard requires a &lt;code&gt;logdir&lt;/code&gt; to read logs from. For info on configuring TensorBoard, run &lt;code&gt;tensorboard --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;TensorBoard can be used in Google Chrome or Firefox. Other browsers might work, but there may be bugs or performance issues.&lt;/p&gt; &#xA;&lt;h1&gt;Key Concepts&lt;/h1&gt; &#xA;&lt;h3&gt;Summary Ops: How TensorBoard gets data from TensorFlow&lt;/h3&gt; &#xA;&lt;p&gt;The first step in using TensorBoard is acquiring data from your TensorFlow run. For this, you need &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary&#34;&gt;summary ops&lt;/a&gt;. Summary ops are ops, just like &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/linalg/matmul&#34;&gt;&lt;code&gt;tf.matmul&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/nn/relu&#34;&gt;&lt;code&gt;tf.nn.relu&lt;/code&gt;&lt;/a&gt;, which means they take in tensors, produce tensors, and are evaluated from within a TensorFlow graph. However, summary ops have a twist: the Tensors they produce contain serialized protobufs, which are written to disk and sent to TensorBoard. To visualize the summary data in TensorBoard, you should evaluate the summary op, retrieve the result, and then write that result to disk using a summary.FileWriter. A full explanation, with examples, is in &lt;a href=&#34;https://www.tensorflow.org/get_started/summaries_and_tensorboard&#34;&gt;the tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The supported summary ops include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary/scalar&#34;&gt;&lt;code&gt;tf.summary.scalar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary/image&#34;&gt;&lt;code&gt;tf.summary.image&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary/audio&#34;&gt;&lt;code&gt;tf.summary.audio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary/text&#34;&gt;&lt;code&gt;tf.summary.text&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/summary/histogram&#34;&gt;&lt;code&gt;tf.summary.histogram&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tags: Giving names to data&lt;/h3&gt; &#xA;&lt;p&gt;When you make a summary op, you will also give it a &lt;code&gt;tag&lt;/code&gt;. The tag is basically a name for the data recorded by that op, and will be used to organize the data in the frontend. The scalar and histogram dashboards organize data by tag, and group the tags into folders according to a directory/like/hierarchy. If you have a lot of tags, we recommend grouping them with slashes.&lt;/p&gt; &#xA;&lt;h3&gt;Event Files &amp;amp; LogDirs: How TensorBoard loads the data&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;summary.FileWriters&lt;/code&gt; take summary data from TensorFlow, and then write them to a specified directory, known as the &lt;code&gt;logdir&lt;/code&gt;. Specifically, the data is written to an append-only record dump that will have &#34;tfevents&#34; in the filename. TensorBoard reads data from a full directory, and organizes it into the history of a single TensorFlow execution.&lt;/p&gt; &#xA;&lt;p&gt;Why does it read the whole directory, rather than an individual file? You might have been using &lt;a href=&#34;https://github.com/tensorflow/tensorflow/raw/master/tensorflow/python/training/supervisor.py&#34;&gt;supervisor.py&lt;/a&gt; to run your model, in which case if TensorFlow crashes, the supervisor will restart it from a checkpoint. When it restarts, it will start writing to a new events file, and TensorBoard will stitch the various event files together to produce a consistent history of what happened.&lt;/p&gt; &#xA;&lt;h3&gt;Runs: Comparing different executions of your model&lt;/h3&gt; &#xA;&lt;p&gt;You may want to visually compare multiple executions of your model; for example, suppose you&#39;ve changed the hyperparameters and want to see if it&#39;s converging faster. TensorBoard enables this through different &#34;runs&#34;. When TensorBoard is passed a &lt;code&gt;logdir&lt;/code&gt; at startup, it recursively walks the directory tree rooted at &lt;code&gt;logdir&lt;/code&gt; looking for subdirectories that contain tfevents data. Every time it encounters such a subdirectory, it loads it as a new &lt;code&gt;run&lt;/code&gt;, and the frontend will organize the data accordingly.&lt;/p&gt; &#xA;&lt;p&gt;For example, here is a well-organized TensorBoard log directory, with two runs, &#34;run1&#34; and &#34;run2&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/some/path/mnist_experiments/&#xA;/some/path/mnist_experiments/run1/&#xA;/some/path/mnist_experiments/run1/events.out.tfevents.1456525581.name&#xA;/some/path/mnist_experiments/run1/events.out.tfevents.1456525585.name&#xA;/some/path/mnist_experiments/run2/&#xA;/some/path/mnist_experiments/run2/events.out.tfevents.1456525385.name&#xA;/tensorboard --logdir /some/path/mnist_experiments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Logdir &amp;amp; Logdir_spec (Legacy Mode)&lt;/h4&gt; &#xA;&lt;p&gt;You may also pass a comma separated list of log directories, and TensorBoard will watch each directory. You can also assign names to individual log directories by putting a colon between the name and the path, as in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensorboard --logdir_spec name1:/path/to/logs/1,name2:/path/to/logs/2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;This flag (&lt;code&gt;--logdir_spec&lt;/code&gt;) is discouraged and can usually be avoided&lt;/em&gt;. TensorBoard walks log directories recursively; for finer-grained control, prefer using a symlink tree. &lt;em&gt;Some features may not work when using &lt;code&gt;--logdir_spec&lt;/code&gt; instead of &lt;code&gt;--logdir&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The Visualizations&lt;/h1&gt; &#xA;&lt;h3&gt;Scalar Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;TensorBoard&#39;s Scalar Dashboard visualizes scalar statistics that vary over time; for example, you might want to track the model&#39;s loss or learning rate. As described in &lt;em&gt;Key Concepts&lt;/em&gt;, you can compare multiple runs, and the data is organized by tag. The line charts have the following interactions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Clicking on the small blue icon in the lower-left corner of each chart will expand the chart&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dragging a rectangular region on the chart will zoom in&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Double clicking on the chart will zoom out&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mousing over the chart will produce crosshairs, with data values recorded in the run-selector on the left.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, you can create new folders to organize tags by writing regular expressions in the box in the top-left of the dashboard.&lt;/p&gt; &#xA;&lt;h3&gt;Histogram Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Histogram Dashboard displays how the statistical distribution of a Tensor has varied over time. It visualizes data recorded via &lt;code&gt;tf.summary.histogram&lt;/code&gt;. Each chart shows temporal &#34;slices&#34; of data, where each slice is a histogram of the tensor at a given step. It&#39;s organized with the oldest timestep in the back, and the most recent timestep in front. By changing the Histogram Mode from &#34;offset&#34; to &#34;overlay&#34;, the perspective will rotate so that every histogram slice is rendered as a line and overlaid with one another.&lt;/p&gt; &#xA;&lt;h3&gt;Distribution Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Distribution Dashboard is another way of visualizing histogram data from &lt;code&gt;tf.summary.histogram&lt;/code&gt;. It shows some high-level statistics on a distribution. Each line on the chart represents a percentile in the distribution over the data: for example, the bottom line shows how the minimum value has changed over time, and the line in the middle shows how the median has changed. Reading from top to bottom, the lines have the following meaning: &lt;code&gt;[maximum, 93%, 84%, 69%, 50%, 31%, 16%, 7%, minimum]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;These percentiles can also be viewed as standard deviation boundaries on a normal distribution: &lt;code&gt;[maximum, μ+1.5σ, μ+σ, μ+0.5σ, μ, μ-0.5σ, μ-σ, μ-1.5σ, minimum]&lt;/code&gt; so that the colored regions, read from inside to outside, have widths &lt;code&gt;[σ, 2σ, 3σ]&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;h3&gt;Image Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Image Dashboard can display pngs that were saved via a &lt;code&gt;tf.summary.image&lt;/code&gt;. The dashboard is set up so that each row corresponds to a different tag, and each column corresponds to a run. Since the image dashboard supports arbitrary pngs, you can use this to embed custom visualizations (e.g. matplotlib scatterplots) into TensorBoard. This dashboard always shows you the latest image for each tag.&lt;/p&gt; &#xA;&lt;h3&gt;Audio Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Audio Dashboard can embed playable audio widgets for audio saved via a &lt;code&gt;tf.summary.audio&lt;/code&gt;. The dashboard is set up so that each row corresponds to a different tag, and each column corresponds to a run. This dashboard always embeds the latest audio for each tag.&lt;/p&gt; &#xA;&lt;h3&gt;Graph Explorer&lt;/h3&gt; &#xA;&lt;p&gt;The Graph Explorer can visualize a TensorBoard graph, enabling inspection of the TensorFlow model. To get best use of the graph visualizer, you should use name scopes to hierarchically group the ops in your graph - otherwise, the graph may be difficult to decipher. For more information, including examples, see the &lt;a href=&#34;https://www.tensorflow.org/tensorboard/graphs&#34;&gt;examining the TensorFlow graph&lt;/a&gt; tutorial.&lt;/p&gt; &#xA;&lt;h3&gt;Embedding Projector&lt;/h3&gt; &#xA;&lt;p&gt;The Embedding Projector allows you to visualize high-dimensional data; for example, you may view your input data after it has been embedded in a high- dimensional space by your model. The embedding projector reads data from your model checkpoint file, and may be configured with additional metadata, like a vocabulary file or sprite images. For more details, see &lt;a href=&#34;https://www.tensorflow.org/tutorials/text/word_embeddings&#34;&gt;the embedding projector tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Text Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Text Dashboard displays text snippets saved via &lt;code&gt;tf.summary.text&lt;/code&gt;. Markdown features including hyperlinks, lists, and tables are all supported.&lt;/p&gt; &#xA;&lt;h3&gt;Time Series Dashboard&lt;/h3&gt; &#xA;&lt;p&gt;The Time Series Dashboard shows a unified interface containing all your Scalars, Histograms, and Images saved via &lt;code&gt;tf.summary.scalar&lt;/code&gt;, &lt;code&gt;tf.summary.image&lt;/code&gt;, or &lt;code&gt;tf.summary.histogram&lt;/code&gt;. It enables viewing your &#39;accuracy&#39; line chart side by side with activation histograms and training example images, for example.&lt;/p&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom run colors: click on the colored circles in the run selector to change a run&#39;s color.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pinned cards: click the &#39;pin&#39; icon on any card to add it to the pinned section at the top for quick comparison.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Settings: the right pane offers settings for charts and other visualizations. Important settings will persist across TensorBoard sessions, when hosted at the same URL origin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Autocomplete in tag filter: search for specific charts more easily.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Frequently Asked Questions&lt;/h1&gt; &#xA;&lt;h3&gt;My TensorBoard isn&#39;t showing any data! What&#39;s wrong?&lt;/h3&gt; &#xA;&lt;p&gt;First, check that the directory passed to &lt;code&gt;--logdir&lt;/code&gt; is correct. You can also verify this by navigating to the Scalars dashboard (under the &#34;Inactive&#34; menu) and looking for the log directory path at the bottom of the left sidebar.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re loading from the proper path, make sure that event files are present. TensorBoard will recursively walk its logdir, it&#39;s fine if the data is nested under a subdirectory. Ensure the following shows at least one result:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;find DIRECTORY_PATH | grep tfevents&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also check that the event files actually have data by running tensorboard in inspect mode to inspect the contents of your event files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tensorboard --inspect --logdir DIRECTORY_PATH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The output for an event file corresponding to a blank TensorBoard may still sometimes show a few steps, representing a few initial events that aren&#39;t shown by TensorBoard (for example, when using the Keras TensorBoard callback):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor&#xA;   first_step           0&#xA;   last_step            2&#xA;   max_step             2&#xA;   min_step             0&#xA;   num_steps            2&#xA;   outoforder_steps     [(2, 0), (2, 0), (2, 0)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In contrast, the output for an event file with more data might look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tensor&#xA;   first_step           0&#xA;   last_step            55&#xA;   max_step             250&#xA;   min_step             0&#xA;   num_steps            60&#xA;   outoforder_steps     [(2, 0), (2, 0), (2, 0), (2, 0), (50, 9), (100, 19), (150, 29), (200, 39), (250, 49)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TensorBoard is showing only some of my data, or isn&#39;t properly updating!&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; After &lt;a href=&#34;https://github.com/tensorflow/tensorboard/releases/tag/2.3.0&#34;&gt;2.3.0 release&lt;/a&gt;, TensorBoard no longer auto reloads every 30 seconds. To re-enable the behavior, please open the settings by clicking the gear icon in the top-right of the TensorBoard web interface, and enable &#34;Reload data&#34;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; the &lt;a href=&#34;https://github.com/tensorflow/tensorboard/pull/1867&#34;&gt;experimental &lt;code&gt;--reload_multifile=true&lt;/code&gt; option&lt;/a&gt; can now be used to poll all &#34;active&#34; files in a directory for new data, rather than the most recent one as described below. A file is &#34;active&#34; as long as it received new data within &lt;code&gt;--reload_multifile_inactive_secs&lt;/code&gt; seconds ago, defaulting to 86400.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This issue usually comes about because of how TensorBoard iterates through the &lt;code&gt;tfevents&lt;/code&gt; files: it progresses through the events file in timestamp order, and only reads one file at a time. Let&#39;s suppose we have files with timestamps &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, where &lt;code&gt;a&amp;lt;b&lt;/code&gt;. Once TensorBoard has read all the events in &lt;code&gt;a&lt;/code&gt;, it will never return to it, because it assumes any new events are being written in the more recent file. This could cause an issue if, for example, you have two &lt;code&gt;FileWriters&lt;/code&gt; simultaneously writing to the same directory. If you have multiple summary writers, each one should be writing to a separate directory.&lt;/p&gt; &#xA;&lt;h3&gt;Does TensorBoard support multiple or distributed summary writers?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; the &lt;a href=&#34;https://github.com/tensorflow/tensorboard/pull/1867&#34;&gt;experimental &lt;code&gt;--reload_multifile=true&lt;/code&gt; option&lt;/a&gt; can now be used to poll all &#34;active&#34; files in a directory for new data, defined as any file that received new data within &lt;code&gt;--reload_multifile_inactive_secs&lt;/code&gt; seconds ago, defaulting to 86400.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;No. TensorBoard expects that only one events file will be written to at a time, and multiple summary writers means multiple events files. If you are running a distributed TensorFlow instance, we encourage you to designate a single worker as the &#34;chief&#34; that is responsible for all summary processing. See &lt;a href=&#34;https://github.com/tensorflow/tensorflow/raw/master/tensorflow/python/training/supervisor.py&#34;&gt;supervisor.py&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;h3&gt;I&#39;m seeing data overlapped on itself! What gives?&lt;/h3&gt; &#xA;&lt;p&gt;If you are seeing data that seems to travel backwards through time and overlap with itself, there are a few possible explanations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You may have multiple execution of TensorFlow that all wrote to the same log directory. Please have each TensorFlow run write to its own logdir.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; the &lt;a href=&#34;https://github.com/tensorflow/tensorboard/pull/1867&#34;&gt;experimental &lt;code&gt;--reload_multifile=true&lt;/code&gt; option&lt;/a&gt; can now be used to poll all &#34;active&#34; files in a directory for new data, defined as any file that received new data within &lt;code&gt;--reload_multifile_inactive_secs&lt;/code&gt; seconds ago, defaulting to 86400.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You may have a bug in your code where the global_step variable (passed to &lt;code&gt;FileWriter.add_summary&lt;/code&gt;) is being maintained incorrectly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It may be that your TensorFlow job crashed, and was restarted from an earlier checkpoint. See &lt;em&gt;How to handle TensorFlow restarts&lt;/em&gt;, below.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a workaround, try changing the x-axis display in TensorBoard from &lt;code&gt;steps&lt;/code&gt; to &lt;code&gt;wall_time&lt;/code&gt;. This will frequently clear up the issue.&lt;/p&gt; &#xA;&lt;h3&gt;How should I handle TensorFlow restarts?&lt;/h3&gt; &#xA;&lt;p&gt;TensorFlow is designed with a mechanism for graceful recovery if a job crashes or is killed: TensorFlow can periodically write model checkpoint files, which enable you to restart TensorFlow without losing all your training progress.&lt;/p&gt; &#xA;&lt;p&gt;However, this can complicate things for TensorBoard; imagine that TensorFlow wrote a checkpoint at step &lt;code&gt;a&lt;/code&gt;, and then continued running until step &lt;code&gt;b&lt;/code&gt;, and then crashed and restarted at timestamp &lt;code&gt;a&lt;/code&gt;. All of the events written between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; were &#34;orphaned&#34; by the restart event and should be removed.&lt;/p&gt; &#xA;&lt;p&gt;To facilitate this, we have a &lt;code&gt;SessionLog&lt;/code&gt; message in &lt;code&gt;tensorflow/core/util/event.proto&lt;/code&gt; which can record &lt;code&gt;SessionStatus.START&lt;/code&gt; as an event; like all events, it may have a &lt;code&gt;step&lt;/code&gt; associated with it. If TensorBoard detects a &lt;code&gt;SessionStatus.START&lt;/code&gt; event with step &lt;code&gt;a&lt;/code&gt;, it will assume that every event with a step greater than &lt;code&gt;a&lt;/code&gt; was orphaned, and it will discard those events. This behavior may be disabled with the flag &lt;code&gt;--purge_orphaned_data false&lt;/code&gt; (in versions after 0.7).&lt;/p&gt; &#xA;&lt;h3&gt;How can I export data from TensorBoard?&lt;/h3&gt; &#xA;&lt;p&gt;The Scalar Dashboard supports exporting data; you can click the &#34;enable download links&#34; option in the left-hand bar. Then, each plot will provide download links for the data it contains.&lt;/p&gt; &#xA;&lt;p&gt;If you need access to the full dataset, you can read the event files that TensorBoard consumes by using the &lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/compat/v1/train/summary_iterator&#34;&gt;&lt;code&gt;summary_iterator&lt;/code&gt;&lt;/a&gt; method.&lt;/p&gt; &#xA;&lt;h3&gt;Can I make my own plugin?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! You can clone and tinker with one of the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/tensorboard/examples/plugins&#34;&gt;examples&lt;/a&gt; and make your own, amazing visualizations. More documentation on the plugin system is described in the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/ADDING_A_PLUGIN.md&#34;&gt;ADDING_A_PLUGIN&lt;/a&gt; guide. Feel free to file feature requests or questions about plugin functionality.&lt;/p&gt; &#xA;&lt;p&gt;Once satisfied with your own groundbreaking new plugin, see the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/ADDING_A_PLUGIN.md#distribution&#34;&gt;distribution section&lt;/a&gt; on how to publish to PyPI and share it with the community.&lt;/p&gt; &#xA;&lt;h3&gt;Can I customize which lines appear in a plot?&lt;/h3&gt; &#xA;&lt;p&gt;Using the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/tensorboard/plugins/custom_scalar&#34;&gt;custom scalars plugin&lt;/a&gt;, you can create scalar plots with lines for custom run-tag pairs. However, within the original scalars dashboard, each scalar plot corresponds to data for a specific tag and contains lines for each run that includes that tag.&lt;/p&gt; &#xA;&lt;h3&gt;Can I visualize margins above and below lines?&lt;/h3&gt; &#xA;&lt;p&gt;Margin plots (that visualize lower and upper bounds) may be created with the &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/tensorboard/plugins/custom_scalar&#34;&gt;custom scalars plugin&lt;/a&gt;. The original scalars plugin does not support visualizing margins.&lt;/p&gt; &#xA;&lt;h3&gt;Can I create scatterplots (or other custom plots)?&lt;/h3&gt; &#xA;&lt;p&gt;This isn&#39;t yet possible. As a workaround, you could create your custom plot in your own code (e.g. matplotlib) and then write it into an &lt;code&gt;SummaryProto&lt;/code&gt; (&lt;code&gt;core/framework/summary.proto&lt;/code&gt;) and add it to your &lt;code&gt;FileWriter&lt;/code&gt;. Then, your custom plot will appear in the TensorBoard image tab.&lt;/p&gt; &#xA;&lt;h3&gt;Is my data being downsampled? Am I really seeing all the data?&lt;/h3&gt; &#xA;&lt;p&gt;TensorBoard uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Reservoir_sampling&#34;&gt;reservoir sampling&lt;/a&gt; to downsample your data so that it can be loaded into RAM. You can modify the number of elements it will keep per tag by using the &lt;code&gt;--samples_per_plugin&lt;/code&gt; command line argument (ex: &lt;code&gt;--samples_per_plugin=scalars=500,images=20&lt;/code&gt;). See this &lt;a href=&#34;http://stackoverflow.com/questions/43702546/tensorboard-doesnt-show-all-data-points/&#34;&gt;Stack Overflow question&lt;/a&gt; for some more information.&lt;/p&gt; &#xA;&lt;h3&gt;I get a network security popup every time I run TensorBoard on a mac!&lt;/h3&gt; &#xA;&lt;p&gt;Versions of TensorBoard prior to TensorBoard 2.0 would by default serve on host &lt;code&gt;0.0.0.0&lt;/code&gt;, which is publicly accessible. For those versions of TensorBoard, you can stop the popups by specifying &lt;code&gt;--host localhost&lt;/code&gt; at startup.&lt;/p&gt; &#xA;&lt;p&gt;In TensorBoard 2.0 and up, &lt;code&gt;--host localhost&lt;/code&gt; is the default. Use &lt;code&gt;--bind_all&lt;/code&gt; to restore the old behavior of serving to the public network on both IPv4 and IPv6.&lt;/p&gt; &#xA;&lt;h3&gt;Can I run &lt;code&gt;tensorboard&lt;/code&gt; without a TensorFlow installation?&lt;/h3&gt; &#xA;&lt;p&gt;TensorBoard 1.14+ can be run with a reduced feature set if you do not have TensorFlow installed. The primary limitation is that as of 1.14, only the following plugins are supported: scalars, custom scalars, image, audio, graph, projector (partial), distributions, histograms, text, PR curves, mesh. In addition, there is no support for log directories on Google Cloud Storage.&lt;/p&gt; &#xA;&lt;h3&gt;How can I contribute to TensorBoard development?&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tensorboard/master/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I have a different issue that wasn&#39;t addressed here!&lt;/h3&gt; &#xA;&lt;p&gt;First, try searching our &lt;a href=&#34;https://github.com/tensorflow/tensorboard/issues&#34;&gt;GitHub issues&lt;/a&gt; and &lt;a href=&#34;https://stackoverflow.com/questions/tagged/tensorboard&#34;&gt;Stack Overflow&lt;/a&gt;. It may be that someone else has already had the same issue or question.&lt;/p&gt; &#xA;&lt;p&gt;General usage questions (or problems that may be specific to your local setup) should go to &lt;a href=&#34;https://stackoverflow.com/questions/tagged/tensorboard&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have found a bug in TensorBoard, please &lt;a href=&#34;https://github.com/tensorflow/tensorboard/issues/new&#34;&gt;file a GitHub issue&lt;/a&gt; with as much supporting information as you can provide (e.g. attaching events files, including the output of &lt;code&gt;tensorboard --inspect&lt;/code&gt;, etc.).&lt;/p&gt;</summary>
  </entry>
</feed>