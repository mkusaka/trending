<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-20T01:52:05Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mind-network/mind-lake-sdk-typescript</title>
    <updated>2023-06-20T01:52:05Z</updated>
    <id>tag:github.com,2023-06-20:/mind-network/mind-lake-sdk-typescript</id>
    <link href="https://github.com/mind-network/mind-lake-sdk-typescript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mind Lake SDK in TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mind Lake Typescript SDK&lt;/h1&gt; &#xA;&lt;p&gt;An Typescript implementation for Mind Lake&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The Mind Lake SDK utilizes Mind Lake&#39;s encryption storage and privacy computing capabilities to provide secure data management.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mind Lake is the backbone of Mind Network.&lt;/li&gt; &#xA; &lt;li&gt;All data is end-to-end encrypted at the client-side SDK side, ensuring that plaintext data never leaves the user&#39;s client.&lt;/li&gt; &#xA; &lt;li&gt;Cryptographic principles ensure that only the data owner can access their own plaintext data.&lt;/li&gt; &#xA; &lt;li&gt;Additionally, Mind Lake&#39;s powerful privacy computing capabilities enable the performance of calculations and querying of encrypted data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;node [16, 18)&lt;/li&gt; &#xA; &lt;li&gt;web3js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install --save mind-lake-sdk&#xA;# or&#xA;$ yarn add mind-lake-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Import&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;import { MindLake } from &#34;mind-lake-sdk&#34;;&#xA;const mindLake = await MindLake.getInstance(&#34;YOUR OWN APP KEY&#34;)&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Executing program&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mind-network/mind-lake-sdk-typescript/main/tutorial/README.md&#34;&gt;step-by-step tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mind-network.gitbook.io/mind-lake-sdk/get-started&#34;&gt;quick starts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mind-network.gitbook.io/mind-lake-sdk/use-cases&#34;&gt;more examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mind-lake-sdk-typescript&#xA;|-- src # source code&#xA;|   |-- MindLake.ts&#xA;|   |-- DataLake.ts&#xA;|   |-- Permission.ts&#xA;|   |-- Cryptor.ts&#xA;|-- tests # unit test code&#xA;|-- examples # use case examples&#xA;|-- tutorial # step-by-step tutorial&#xA;|-- README.md&#xA;└--- LICENSE&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;Full doc: &lt;a href=&#34;https://mind-network.gitbook.io/mind-lake-sdk&#34;&gt;https://mind-network.gitbook.io/mind-lake-sdk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Joshua &lt;a href=&#34;https://twitter.com/JoshuaW55818202&#34;&gt;@JoshuaW55818202&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lee &lt;a href=&#34;https://twitter.com/LeeTan853917&#34;&gt;@LeeTan853917&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version History&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;v1.0.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Initial Release&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;v1.0.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fix bug&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;v1.0.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fix bug&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;v1.0.4 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add listOwner method to Permission Class&lt;/li&gt; &#xA;   &lt;li&gt;Add listOwnerColumn method to Permission Class&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the [MIT] License - see the LICENSE.md file for details&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vercel-labs/ai-chatbot</title>
    <updated>2023-06-20T01:52:05Z</updated>
    <id>tag:github.com,2023-06-20:/vercel-labs/ai-chatbot</id>
    <link href="https://github.com/vercel-labs/ai-chatbot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A full-featured, hackable Next.js AI chatbot built by Vercel Labs&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://chat.vercel.ai/&#34;&gt; &lt;img alt=&#34;Next.js 13 and app template Router-ready AI chatbot.&#34; src=&#34;https://chat.vercel.ai/opengraph-image.png&#34;&gt; &lt;h1 align=&#34;center&#34;&gt;Next.js AI Chatbot&lt;/h1&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34;&gt; An open-source AI chatbot app template built with Next.js, the Vercel AI SDK, OpenAI, and Vercel KV. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/#features&#34;&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/#model-providers&#34;&gt;&lt;strong&gt;Model Providers&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/#deploy-your-own&#34;&gt;&lt;strong&gt;Deploy Your Own&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/#running-locally&#34;&gt;&lt;strong&gt;Running locally&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/#authors&#34;&gt;&lt;strong&gt;Authors&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org&#34;&gt;Next.js&lt;/a&gt; App Router&lt;/li&gt; &#xA; &lt;li&gt;React Server Components (RSCs), Suspense, and Server Actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sdk.vercel.ai/docs&#34;&gt;Vercel AI SDK&lt;/a&gt; for streaming chat UI&lt;/li&gt; &#xA; &lt;li&gt;Support for OpenAI (default), Anthropic, HuggingFace, or custom AI chat models and/or LangChain&lt;/li&gt; &#xA; &lt;li&gt;Edge runtime-ready&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.shadcn.com&#34;&gt;shadcn/ui&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Styling with &lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://radix-ui.com&#34;&gt;Radix UI&lt;/a&gt; for headless component primitives&lt;/li&gt; &#xA;   &lt;li&gt;Icons from &lt;a href=&#34;https://phosphoricons.com&#34;&gt;Phosphor Icons&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Chat History, rate limiting, and session storage with &lt;a href=&#34;https://vercel.com/storage/kv&#34;&gt;Vercel KV&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nextauthjs/next-auth&#34;&gt;Next Auth&lt;/a&gt; for authentication&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model Providers&lt;/h2&gt; &#xA;&lt;p&gt;This template ships with OpenAI &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; as the default. However, thanks to the &lt;a href=&#34;https://sdk.vercel.ai/docs&#34;&gt;Vercel AI SDK&lt;/a&gt;, you can switch LLM providers to &lt;a href=&#34;https://anthropic.com&#34;&gt;Anthropic&lt;/a&gt;, &lt;a href=&#34;https://huggingface.co&#34;&gt;HuggingFace&lt;/a&gt;, or using &lt;a href=&#34;https://js.langchain.com&#34;&gt;LangChain&lt;/a&gt; with just a few lines of code.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy Your Own&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy your own version of the Next.js AI Chatbot to Vercel with one click:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?demo-title=Next.js+Chat&amp;amp;demo-description=A+full-featured%2C+hackable+Next.js+AI+chatbot+built+by+Vercel+Labs&amp;amp;demo-url=https%3A%2F%2Fchat.vercel.ai%2F&amp;amp;demo-image=%2F%2Fimages.ctfassets.net%2Fe5382hct74si%2F4aVPvWuTmBvzM5cEdRdqeW%2F4234f9baf160f68ffb385a43c3527645%2FCleanShot_2023-06-16_at_17.09.21.png&amp;amp;project-name=Next.js+Chat&amp;amp;repository-name=nextjs-chat&amp;amp;repository-url=https%3A%2F%2Fgithub.com%2Fvercel-labs%2Fai-chatbot&amp;amp;from=templates&amp;amp;skippable-integrations=1&amp;amp;env=OPENAI_API_KEY%2CAUTH_GITHUB_ID%2CAUTH_GITHUB_SECRET&amp;amp;envDescription=How+to+get+these+env+vars&amp;amp;envLink=https%3A%2F%2Fgithub.com%2Fvercel-labs%2Fai-chatbot%2Fblob%2Fmain%2F.env.example&amp;amp;teamCreateStatus=hidden&amp;amp;stores=%5B%7B%22type%22:%22kv%22%7D%5D&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Creating a KV Database Instance&lt;/h2&gt; &#xA;&lt;p&gt;Follow the steps outlined in the &lt;a href=&#34;https://vercel.com/docs/storage/vercel-kv/quickstart#create-a-kv-database&#34;&gt;quick start guide&lt;/a&gt; provided by Vercel. This guide will assist you in creating and configuring your KV database instance on Vercel, enabling your application to interact with it.&lt;/p&gt; &#xA;&lt;p&gt;Remember to update your environment variables (&lt;code&gt;KV_URL&lt;/code&gt;, &lt;code&gt;KV_REST_API_URL&lt;/code&gt;, &lt;code&gt;KV_REST_API_TOKEN&lt;/code&gt;, &lt;code&gt;KV_REST_API_READ_ONLY_TOKEN&lt;/code&gt;) in the &lt;code&gt;.env&lt;/code&gt; file with the appropriate credentials provided during the KV database setup.&lt;/p&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;p&gt;You will need to use the environment variables &lt;a href=&#34;https://raw.githubusercontent.com/vercel-labs/ai-chatbot/main/.env.example&#34;&gt;defined in &lt;code&gt;.env.example&lt;/code&gt;&lt;/a&gt; to run Next.js AI Chatbot. It&#39;s recommended you use &lt;a href=&#34;https://vercel.com/docs/concepts/projects/environment-variables&#34;&gt;Vercel Environment Variables&lt;/a&gt; for this, but a &lt;code&gt;.env&lt;/code&gt; file is all that is necessary.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You should not commit your &lt;code&gt;.env&lt;/code&gt; file or it will expose secrets that will allow others to control access to your various OpenAI and authentication provider accounts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Vercel CLI: &lt;code&gt;npm i -g vercel&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Link local instance with Vercel and GitHub accounts (creates &lt;code&gt;.vercel&lt;/code&gt; directory): &lt;code&gt;vercel link&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download your environment variables: &lt;code&gt;vercel env pull&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Your app template should now be running on &lt;a href=&#34;http://localhost:3000/&#34;&gt;localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;This library is created by &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt; and &lt;a href=&#34;https://nextjs.org&#34;&gt;Next.js&lt;/a&gt; team members, with contributions from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jared Palmer (&lt;a href=&#34;https://twitter.com/jaredpalmer&#34;&gt;@jaredpalmer&lt;/a&gt;) - &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Shu Ding (&lt;a href=&#34;https://twitter.com/shuding_&#34;&gt;@shuding_&lt;/a&gt;) - &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;shadcn (&lt;a href=&#34;https://twitter.com/shadcn&#34;&gt;@shadcn&lt;/a&gt;) - &lt;a href=&#34;https://shadcn.com&#34;&gt;Contractor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PostHog/HouseWatch</title>
    <updated>2023-06-20T01:52:05Z</updated>
    <id>tag:github.com,2023-06-20:/PostHog/HouseWatch</id>
    <link href="https://github.com/PostHog/HouseWatch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source tool for monitoring and managing ClickHouse clusters&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/banner-light.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/overview.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;📈 Open source tool for monitoring and managing ClickHouse clusters&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get an overview of cluster load and performance&lt;/li&gt; &#xA; &lt;li&gt;Drill down into your queries and understand the load they put on your cluster&lt;/li&gt; &#xA; &lt;li&gt;Search through logs and errors&lt;/li&gt; &#xA; &lt;li&gt;Monitor and kill running queries with the click of a button&lt;/li&gt; &#xA; &lt;li&gt;Get stats on your disk usage per node, and understand how much disk space tables, columns, and parts take up&lt;/li&gt; &#xA; &lt;li&gt;Run your own queries straight from the interface to further dig into performance and cluster issues&lt;/li&gt; &#xA; &lt;li&gt;Setup operations to run in the background with automatic rollbacks for failures&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💻 Deploy&lt;/h2&gt; &#xA;&lt;p&gt;To deploy HouseWatch, clone this repo and then run the following, substituting the environment variables for the relevant values of one of your ClickHouse instances:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CLICKHOUSE_HOST=localhost \&#xA;CLICKHOUSE_CLUSTER=mycluster \&#xA;CLICKHOUSE_USER=default \&#xA;CLICKHOUSE_PASSWORD=xxxxxxxxxxx \&#xA;docker compose -f docker-compose.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the above, the UI will be running on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;. For production installs, you might want to setup something like &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy&lt;/a&gt; or &lt;a href=&#34;https://nginx.org/en/&#34;&gt;NGINX&lt;/a&gt; with a &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&#39;s Encrypt&lt;/a&gt; TLS certificate.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Read more&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;The following are the supported environment variables for configuring your HouseWatch deployment:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_HOST&lt;/code&gt;: Required - hostname of the instance to connect to.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_USER&lt;/code&gt;: Required - username to access ClickHouse. Can be a read-only user, but in that case not all features will work.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_PASSWORD&lt;/code&gt;: Required - password for the specified user.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_DATABASE&lt;/code&gt;: Optional - database to connect to by default.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_CLUSTER&lt;/code&gt;: Optional - cluster name, to analyze data from the whole cluster.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_SECURE&lt;/code&gt;: Optional - see &lt;a href=&#34;https://clickhouse-driver.readthedocs.io/en/latest/index.html&#34;&gt;clickhouse-driver docs&lt;/a&gt; for more information&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_VERIFY&lt;/code&gt;: Optional - see &lt;a href=&#34;https://clickhouse-driver.readthedocs.io/en/latest/index.html&#34;&gt;clickhouse-driver docs&lt;/a&gt; for more information&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;CLICKHOUSE_CA&lt;/code&gt;: Optional - see &lt;a href=&#34;https://clickhouse-driver.readthedocs.io/en/latest/index.html&#34;&gt;clickhouse-driver docs&lt;/a&gt; for more information&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;: Optional - enables the experimental &#34;AI Tools&#34; page, which currently features a natural language query editor&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;OPENAI_MODEL&lt;/code&gt;: Optional - a valid OpenAI model (e.g. &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;, &lt;code&gt;gpt-4&lt;/code&gt;) that you have access to with the key above to be used for the AI features&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;💡 Motivation&lt;/h2&gt; &#xA;&lt;p&gt;At PostHog we manage a few large ClickHouse clusters and found ourselves in need of a tool to monitor and manage these more easily.&lt;/p&gt; &#xA;&lt;p&gt;ClickHouse is fantastic at introspection, providing a lot of metadata about the system in its system tables so that it can be easily queried. However, knowing exactly how to query and parse the available information can be a difficult task. Over the years at PostHog, we&#39;ve developed great intuition for how to debug ClickHouse issues using ClickHouse, and HouseWatch is the compilation of this knowledge into a tool.&lt;/p&gt; &#xA;&lt;p&gt;Beyond monitoring, we also built internal systems and processes for managing the clusters that spanned various platforms. We would use Grafana to look at metrics, SSH into nodes for running operations and using specialized tooling, query via Metabase to dig deeper into the data in the system tables and create dashboards, and then a combination of tools baked into the PostHog product for further debugging and streamlined operations such as our &lt;a href=&#34;https://posthog.com/blog/async-migrations&#34;&gt;async migrations&lt;/a&gt; tool, and internal views for listing queries and analyzing their performance.&lt;/p&gt; &#xA;&lt;p&gt;As a result, we felt it was appropriate to have these tools live in one place. Ultimately, our vision for HouseWatch is that it can both serve the purpose of a pganalyze for the ClickHouse ecosystem, while also including tooling for taking action on insights derived from the analysis.&lt;/p&gt; &#xA;&lt;h2&gt;🏗️ Status of the project&lt;/h2&gt; &#xA;&lt;p&gt;HouseWatch is in its early days and we have a lot more features in mind that we&#39;d like to build into it going forward. The code could also use some cleaning up :) As of right now, it is considered Beta software and you should exercise caution when using it in production.&lt;/p&gt; &#xA;&lt;p&gt;One potential approach is to connect HouseWatch to ClickHouse using a read-only user. In this case, the cluster management features will not work (e.g. operations, query editor), but the analysis toolset will function normally.&lt;/p&gt; &#xA;&lt;h2&gt;ℹ️ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are certainly welcome! However, if you&#39;d like to build a new feature, please open up an issue first.&lt;/p&gt; &#xA;&lt;h2&gt;⭐ Features&lt;/h2&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Query performance&lt;/h2&gt; &#xA;&lt;div style=&#34;display: flex&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/slow-queries.png&#34; width=&#34;48%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/normalized-query.png&#34; width=&#34;48%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div style=&#34;display: flex&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/query-stats.png&#34; width=&#34;48%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/explain.png&#34; width=&#34;48%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Schema stats&lt;/h2&gt; &#xA;&lt;div style=&#34;display: flex&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/schema.png&#34; width=&#34;48%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/schema-drilldown.png&#34; width=&#34;48%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Query benchmarking&lt;/h2&gt; &#xA;&lt;div style=&#34;display: flex&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/benchmark1.png&#34; width=&#34;48%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/benchmark2.png&#34; width=&#34;48%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Logs&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/logs.png&#34; align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Query editor&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/query-editor.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Disk usage&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/disk-usage.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Errors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/errors.png&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Operations&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PostHog/HouseWatch/main/operations.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;🗒️ To-do list&lt;/h2&gt; &#xA;&lt;p&gt;A public list of things we intend to do with HouseWatch in the near future.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;See list&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;b&gt;Features&lt;/b&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; System issues tab&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; EXPLAIN visualizer&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Multiple instance support&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Stats on page cache hit percentage&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make operations resilient to Celery going down (as we do in PostHog with async migrations)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Read-only mode&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Button to force refresh running queries list&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Logs pagination&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Allow copying example queries&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Configurable time ranges&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Whole cluster schema stats&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More operation controls: view, delete, edit, re-run, display errors&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;b&gt;Developer experience&lt;/b&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Configure instance from UI&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Publish a Docker image&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Development docker-compose.yml with baked in ClickHouse&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;b&gt;Cleanup&lt;/b&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Extract README images out of repo&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make banner subtitle work on dark mode&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fetch data independently on the query analyzer&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Breakpoint for logs search&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Run Django &#34;production server&#34;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write tests :)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Query editor pipe all errors to client&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Abstraction to load data from API as JSON&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>