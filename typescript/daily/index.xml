<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-12T01:44:10Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hydralauncher/hydra</title>
    <updated>2024-04-12T01:44:10Z</updated>
    <id>tag:github.com,2024-04-12:/hydralauncher/hydra</id>
    <link href="https://github.com/hydralauncher/hydra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hydra&lt;/h1&gt; &#xA;&lt;p&gt;Hydra is a game launcher with its own embedded bittorrent client and a self-managed repack scraper. The launcher is written in TypeScript (Electron) and Python, which handles the torrenting system by using &lt;a href=&#34;https://www.libtorrent.org/&#34;&gt;libtorrent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hydralauncher/hydra/main/docs/screenshot.png&#34; alt=&#34;Hydra Catalogue&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install Node.js&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have Node.js installed on your machine. If not, download and install it from &lt;a href=&#34;https://raw.githubusercontent.com/hydralauncher/hydra/main/nodejs.org&#34;&gt;nodejs.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install Yarn&lt;/h3&gt; &#xA;&lt;p&gt;Yarn is a package manager for Node.js. If you haven&#39;t installed Yarn yet, you can do so by following the instructions on &lt;a href=&#34;https://raw.githubusercontent.com/hydralauncher/hydra/main/yarnpkg.com&#34;&gt;yarnpkg.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Clone the Repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/hydralauncher/hydra.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Node Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to the project directory and install the Node dependencies using Yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd hydra&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Python 3.9&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have Python installed on your machine. You can download and install it from &lt;a href=&#34;https://raw.githubusercontent.com/hydralauncher/hydra/main/python.org&#34;&gt;python.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install Python Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Install the required Python dependencies using pip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need an SteamGridDB API Key in order to fetch the game icons on installation. Once you have it, you can paste the &lt;code&gt;.env.example&lt;/code&gt; file and put it on &lt;code&gt;STEAMGRIDDB_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve installed all dependencies, you can build and run Hydra Download Manager. Here are the basic commands:&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Build the bittorrent client&lt;/h3&gt; &#xA;&lt;p&gt;Build the bittorrent client by using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pyinstaller torrent-client/main.py --distpath resources/dist --icon=images/icon.ico -n hydra-download-manager&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build the Electron application&lt;/h3&gt; &#xA;&lt;p&gt;Build the Electron application by using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Hydra is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/hydralauncher/hydra/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ashleyrudland/nextjs_vps</title>
    <updated>2024-04-12T01:44:10Z</updated>
    <id>tag:github.com,2024-04-12:/ashleyrudland/nextjs_vps</id>
    <link href="https://github.com/ashleyrudland/nextjs_vps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NextJS VPS Example&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Do we need Vercel? Can we just run our NextJS apps on a VM? Maybe all our apps on one machine?&lt;/h1&gt; &#xA;&lt;p&gt;I love NextJS, but I don&#39;t like Vercels pricing. It seems nuts to me and it seems many other people do too. So I spent a few hours playing with this and &lt;del&gt;Digital Ocean&lt;/del&gt; Hetzner Cloud (‚Ç¨3.30/mo ü§£) to see what was possible.&lt;/p&gt; &#xA;&lt;p&gt;All thanks goes to &lt;a href=&#34;https://github.com/basecamp/kamal&#34;&gt;kamal&lt;/a&gt; and @ImSh4yy, I built this using his &lt;a href=&#34;https://logsnag.com/blog/self-host-nextjs-hetzner-kamal&#34;&gt;post&lt;/a&gt; üôè&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the objective here?&lt;/h2&gt; &#xA;&lt;p&gt;Figure out if we can have all the requirements of most indie hacker apps on a little VM instead of Vercel?&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the list of to dos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Can we run NextJS on VPS easily? ‚úÖ&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Is the latency acceptable? ‚úÖ 35ms, roughly same as Vercel&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Can we auto deploy? ‚úÖ see &lt;a href=&#34;https://raw.githubusercontent.com/ashleyrudland/nextjs_vps/main/.github/workflows/deploy-on-main.yml&#34;&gt;deploy-on-main.yml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Can we persist data on this machine when using Docker?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; How much traffic can this machine handle concurrently? Around 750 HTTP requests/sec on Hetzner ‚Ç¨3.29/mo VPS, before it starts to slow down, see this load test &lt;a href=&#34;https://loader.io/reports/e86c09956f73bb12f0e2b15900947a60/results/9ba8eb7e6dc70fd3966f3abed65e2166&#34;&gt;report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; What&#39;s the writes per second using SQL Lite? &lt;a href=&#34;https://twitter.com/ashleyrudland/status/1777597718560444498&#34;&gt;‚úÖ 14,000/sec on Hetzner ‚Ç¨3.29/mo VPS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; What&#39;s the uptime of this? ‚úÖ so far 100%&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NextJS Feature: Image Optimization? ‚úÖ works!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NextJS Feature: Can we use Server Actions? ‚úÖ SQLite write test runs on Server Actions. See &lt;a href=&#34;https://raw.githubusercontent.com/ashleyrudland/nextjs_vps/main/src/app/actions/&#34;&gt;actions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NextJS Feature: API routes? ‚úÖ see &lt;a href=&#34;https://raw.githubusercontent.com/ashleyrudland/nextjs_vps/main/src/app/api/vm/&#34;&gt;/api/vm/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; NextJS Feature: Can we use the NextJS Caching? Custom Cache?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Can/how we run multiple apps on the same machine? Switch app based on domain name?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s not the objective?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infinite scale - do indie hackers really need this?&lt;/li&gt; &#xA; &lt;li&gt;Complex architecture&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How does this auto deploy?&lt;/h3&gt; &#xA;&lt;p&gt;Basically GitHub actions run on each commit to main, builds image using Docker, uploads then Kamal connects to machine via SSH (with passphrase), then reboots app with new code.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>payloadcms/payload-3.0-demo</title>
    <updated>2024-04-12T01:44:10Z</updated>
    <id>tag:github.com,2024-04-12:/payloadcms/payload-3.0-demo</id>
    <link href="https://github.com/payloadcms/payload-3.0-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Payload 3.0 Beta Demo&lt;/h1&gt; &#xA;&lt;p&gt;This repo showcases a demo of the Payload 3.0 Beta running completely within Next.js.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] It&#39;s extremely important to note that as of now, this demo contains BETA software and you are 100% guaranteed to run into bugs / weird stuff.&lt;/p&gt; &#xA; &lt;p&gt;We&#39;re actively working toward a stable release as fast as we possibly can.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Highlights&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Payload is now Next.js-native&lt;/li&gt; &#xA; &lt;li&gt;Turbopack works out of the box (this will get faster over time, expect more here)&lt;/li&gt; &#xA; &lt;li&gt;The Payload admin UI is built with React Server Components and automatically eliminates server-side code from your admin bundle, completely alleviating the need to use Webpack aliases to remove hooks, access control, etc.&lt;/li&gt; &#xA; &lt;li&gt;Payload is now fully-ESM across the board&lt;/li&gt; &#xA; &lt;li&gt;GraphQL is now initialized only when you hit the GraphQL endpoint, and does not affect overhead of REST API routes&lt;/li&gt; &#xA; &lt;li&gt;All UI components have been abstracted into a separate &lt;code&gt;@payloadcms/ui&lt;/code&gt; package, which will be fully documented and exposed for your re-use once we hit stable 3.0 or before&lt;/li&gt; &#xA; &lt;li&gt;You can run your own Next.js site alongside of Payload in the same app&lt;/li&gt; &#xA; &lt;li&gt;You can now deploy Payload to Vercel, and there will be official support for Vercel Blob Storage coming soon (so no S3 needed for files)&lt;/li&gt; &#xA; &lt;li&gt;Server-side HMR works out of the box, with no need for &lt;code&gt;nodemon&lt;/code&gt; or similar. When the Payload config changes, your app will automatically re-initialize Payload seamlessly in the background&lt;/li&gt; &#xA; &lt;li&gt;All custom React components can be server components by default, and you can decide if you want them to be server components or client components&lt;/li&gt; &#xA; &lt;li&gt;Sharp has been abstracted to be an optional dependency&lt;/li&gt; &#xA; &lt;li&gt;Payload now relies on the Web Request / Response APIs rather than the Node Request / Response&lt;/li&gt; &#xA; &lt;li&gt;Express can still be used with Next.js&#39; Custom Server functionality&lt;/li&gt; &#xA; &lt;li&gt;Payload itself has slimmed down significantly and can now be fully portable, run anywhere. You can leverage the Payload Local API completely outside of Next.js if you want.&lt;/li&gt; &#xA; &lt;li&gt;The data layer, including the shape of the database Payload used and the API responses in 2.0, has not been affected whatsoever&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Work to come&lt;/h3&gt; &#xA;&lt;p&gt;We are making this available to our community so that we can gather your feedback and test the new approach that Payload is taking. Don&#39;t expect it to be fully functional yet. There are some things that we are aware of that are not yet completed, but we&#39;re going to keep blazing through the remaining items as fast as we can to reach stable 3.0 as quickly and efficiently as possible. Here are a few of the items that we are still working on (not a full list):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Documentation&lt;/li&gt; &#xA; &lt;li&gt;Vercel Blob Storage adapter&lt;/li&gt; &#xA; &lt;li&gt;Lots of bugs for sure&lt;/li&gt; &#xA; &lt;li&gt;100% of tests passing&lt;/li&gt; &#xA; &lt;li&gt;Compiler speed improvements (turbo is beta still, it is slower than it should be. it will get faster)&lt;/li&gt; &#xA; &lt;li&gt;Overall speed improvements&lt;/li&gt; &#xA; &lt;li&gt;An install script to be able to install Payload easily into any existing Next.js app&lt;/li&gt; &#xA; &lt;li&gt;A full list of breaking changes for 2.0 -&amp;gt; 3.0, including an in-depth migration guide&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Existing Nextjs project&lt;/h3&gt; &#xA;&lt;p&gt;You can install Payload into your existing Nextjs project using this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx create-payload-app@beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Contents from &lt;code&gt;src/app&lt;/code&gt; will have to be moved into a new directory &lt;code&gt;src/app/(app)&lt;/code&gt; so that Payload&#39;s root layout and routes can remain isolated from the rest of your app.&lt;/p&gt; &#xA;&lt;h3&gt;Using this repo&lt;/h3&gt; &#xA;&lt;p&gt;To try out this repo yourself, follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo to your computer (&lt;code&gt;git clone git@github.com:payloadcms/payload-3.0-demo.git&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the new folder by running &lt;code&gt;cd ./payload-3.0-demo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; by running &lt;code&gt;cp .env.example .env&lt;/code&gt; in the repo, then fill out the values including the connection string to your DB&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies with whatever package manager you use (&lt;code&gt;yarn&lt;/code&gt;, &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;pnpm i&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Start your database. For local postgresql use &lt;code&gt;.\start-database.sh&lt;/code&gt; to start it in docker container.&lt;/li&gt; &#xA; &lt;li&gt;Fire it up (&lt;code&gt;yarn dev&lt;/code&gt;, &lt;code&gt;npm run dev&lt;/code&gt;, &lt;code&gt;pnpm dev&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://localhost:3000&#34;&gt;https://localhost:3000&lt;/a&gt; and log in with the user created within the config&#39;s &lt;code&gt;onInit&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Follow along with breaking changes&lt;/h3&gt; &#xA;&lt;p&gt;There is a possibility that we will make breaking changes before releasing the full stable version of Payload 3.0.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To follow along with breaking changes in advance of the full, stable release,&lt;/strong&gt; you can keep an eye on the &lt;a href=&#34;https://github.com/payloadcms/payload-3.0-demo/raw/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Technical details&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;The app folder&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll see that Payload requires a few files to be present in your &lt;code&gt;/app&lt;/code&gt; folder. There are files for the admin UI as well as files for all route handlers. We&#39;ve consolidated all admin views into a single &lt;code&gt;page.tsx&lt;/code&gt; and consolidated most of the REST endpoints into a single &lt;code&gt;route.ts&lt;/code&gt; file for simplicity, but also for development performance. With this pattern, you only have to compile the admin UI / REST API / GraphQL API a single time - and from there, it will be lightning-fast.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The &lt;code&gt;next.config.js&lt;/code&gt; &lt;code&gt;withPayload&lt;/code&gt; function&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll see in the Next.js config that we have a &lt;code&gt;withPayload&lt;/code&gt; function installed. This function is required for Payload to operate, and it ensures compatibility with packages that Payload needs such as &lt;code&gt;drizzle-kit&lt;/code&gt;, &lt;code&gt;sharp&lt;/code&gt;, &lt;code&gt;pino&lt;/code&gt;, and &lt;code&gt;mongodb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using a TypeScript alias to point to your Payload config&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the &lt;code&gt;tsconfig.json&lt;/code&gt; within this repo, you&#39;ll see that we have &lt;code&gt;paths&lt;/code&gt; set up to point &lt;code&gt;@payload-config&lt;/code&gt; to the Payload config, which is located in the root. You can put your config wherever you want. By default, the &lt;code&gt;page.tsx&lt;/code&gt; files and &lt;code&gt;route.ts&lt;/code&gt; files within the &lt;code&gt;/app&lt;/code&gt; folder use this alias. In the future, we might make it optional to use &lt;code&gt;paths&lt;/code&gt; - and by default, we might just hard-code relative path imports to the config. We would like to hear your feedback on this part. What do you prefer? Use &lt;code&gt;paths&lt;/code&gt; or just use relative imports?&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Find a bug?&lt;/h3&gt; &#xA;&lt;p&gt;Open an issue on this repo at &lt;code&gt;https://github.com/payloadcms/payload-3.0-demo&lt;/code&gt; with as much detail as you can provide and we will tackle them as fast as we can. Let&#39;s get stable!&lt;/p&gt;</summary>
  </entry>
</feed>