<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-11T01:35:54Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sussy-code/smov</title>
    <updated>2024-07-11T01:35:54Z</updated>
    <id>tag:github.com,2024-07-11:/sussy-code/smov</id>
    <link href="https://github.com/sussy-code/smov" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sudo-flix&#39;s source code (Allegedly)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sudo-Flix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.sudo-flix.lol&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sussy-code/smov/main/.github/Sudo-Flix.png&#34; alt=&#34;Sudo-Flix Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I &lt;em&gt;do not&lt;/em&gt; endorse piracy of any kind I simply enjoy programming and large user counts.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links And Resources&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;   &lt;th&gt;Source Code&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sudo-Flix Docs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sussy-code.github.io/docs&#34;&gt;sudo-docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sussy-code/docs&#34;&gt;source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Extension&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sussy-code.github.io/docs/extension&#34;&gt;extension&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sussy-code/browser-ext&#34;&gt;source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sudo-proxy.up.railway.app&#34;&gt;sudo-proxy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sussy-code/sudo-proxy&#34;&gt;source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Backend&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://backend.sudo-flix.lol&#34;&gt;sudo-backend&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sussy-code/backend&#34;&gt;source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Frontend&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sudo-flix.lol&#34;&gt;sudo-flix&lt;/a&gt;, &lt;a href=&#34;https://flix.kanded.xyz&#34;&gt;2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sussy-code/smov&#34;&gt;source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;I provide these if you are not able to host yourself, though I do encourage hosting the frontend.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Referrers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/Piracy/s/iymSloEpXn&#34;&gt;Piracy Subreddit Megathread&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://erynith.github.io/movie-web-instances&#34;&gt;Toon&#39;s Instances&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sussy-code.github.io/docs&#34;&gt;Sudo-Flix docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/r5cYshWM4G&#34;&gt;Sudo-Flix Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search Engines: DuckDuckGo, Bing, Google&lt;/li&gt; &#xA; &lt;li&gt;Rentry.co&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;Type the following commands into your terminal / command line to run Sudo-Flix locally&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sussy-code/smov.git&#xA;cd smov&#xA;git pull&#xA;pnpm install&#xA;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can visit the local instance &lt;a href=&#34;http://localhost:5173&#34;&gt;here&lt;/a&gt; or, at local host on port 5173.&lt;/p&gt; &#xA;&lt;h2&gt;Updating a sudo-flix Instance&lt;/h2&gt; &#xA;&lt;p&gt;To update a sudo-flix instance you can type the below commands into a terminal at the root of your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/sussy-code/smov.git&#xA;git fetch upstream # Grab the contents of the new remote source&#xA;git checkout &amp;lt;YOUR_MAIN_BRANCH&amp;gt;  # Most likely this would be `origin/main`&#xA;git merge upstream/main&#xA;# * Fix any conflicts present during merge *&#xA;git add .  # Add all changes made during merge and conflict fixing&#xA;git commit -m &#34;Update sudo-flix instance (merge upstream/main)&#34;&#xA;git push  # Push to YOUR repository&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Email:&lt;/strong&gt; &lt;em&gt;&lt;a href=&#34;mailto:dev@sudo-flix.lol&#34;&gt;dev@sudo-flix.lol&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RamiAwar/dataline</title>
    <updated>2024-07-11T01:35:54Z</updated>
    <id>tag:github.com,2024-07-11:/RamiAwar/dataline</id>
    <link href="https://github.com/RamiAwar/dataline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chat with your data - AI data analysis and visualization on CSV, Postgres, MySQL, Snowflake, SQLite...&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dataline.app&#34;&gt;&lt;img src=&#34;https://github.com/RamiAwar/dataline/assets/8523191/97e3a26c-e064-4e4e-b804-4e739986dbe9&#34; alt=&#34;DataLine logo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;üí¨ Chat with your data using natural language üìä&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Introducing DataLine, &lt;em&gt;the simplest and fastest way&lt;/em&gt;‚ö°Ô∏è to analyze and visualize your data!&lt;br&gt;&lt;em&gt;Generate and export charts, tables, reports in seconds with DataLine - Your AI-driven data analysis and visualization tool&lt;/em&gt; ü§ì &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/downloads/ramiawar/dataline/total?style=flat&amp;amp;color=%2322c55e&#34;&gt; &#xA; &lt;img src=&#34;https://img.shields.io/docker/pulls/ramiawar/dataline?color=%2338bdf8&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#who-is-this-for&#34;&gt;Who is this for&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#what-is-it&#34;&gt;What is it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#where-is-it-going&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#feature-support&#34;&gt;Feature Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#mac&#34;&gt;Mac&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#running-manually&#34;&gt;Running manually&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#authentication&#34;&gt;Authentication&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#with-docker&#34;&gt;With Docker&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#startup-quest&#34;&gt;Startup Quest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is this for?&lt;/h2&gt; &#xA;&lt;p&gt;Technical or non-technical people who want to explore data, fast. ‚ö°Ô∏è‚ö°Ô∏è&lt;/p&gt; &#xA;&lt;p&gt;It also works for backend developers to speed up drafting queries and explore new DBs with ease. üòé&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s especially well-suited for businesses given its security-first üîí and open-source üìñ nature.&lt;/p&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;p&gt;DataLine is an AI-driven data analysis and visualization tool.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s privacy-focused, storing everything on your device. No ‚òÅÔ∏è, only ‚òÄÔ∏è!&lt;/p&gt; &#xA;&lt;p&gt;It hides your data from the LLMs used by default, but this can be disabled if the data is not deemed sensitive.&lt;/p&gt; &#xA;&lt;p&gt;It can connect to a variety of data sources (Postgres, Snowflake, MySQL, SQLite, CSV, sas7bdat, and more), execute queries, generate charts, and allow for copying the results to build reports quickly.&lt;/p&gt; &#xA;&lt;h2&gt;Where is it going?&lt;/h2&gt; &#xA;&lt;p&gt;For now, we&#39;re trying to help people get insights out of their data, fast.&lt;/p&gt; &#xA;&lt;p&gt;This is meant to enable non-technical folks to query data and aid data analysts in getting their jobs done 10x as fast.&lt;/p&gt; &#xA;&lt;p&gt;But you can still influence the direction we go in. We&#39;re building this for you, so you have the biggest say.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Broad DB support: Postgres, MySQL, Snowflake, CSV, SQLite, and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Generating and executing SQL from natural language&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ability to modify SQL results, save them, and re-run&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Better support for explorative questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Querying data files like CSV, SQLite, sas7bdat (more connection types)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Charting via natural language&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modifying chart queries and re-rendering/refreshing charts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With a lot more coming soon. You can still influence what we build, so if you&#39;re a user and you&#39;re down for it, we&#39;d love to interview you! Book some time with one of us here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendly.com/ramiawar/quick&#34;&gt;Rami&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendly.com/anthonymalkoun&#34;&gt;Anthony&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;There are multiple ways of setting up DataLine, simplest being using a binary executable. This allows you to download a file and run it to get started.&lt;/p&gt; &#xA;&lt;p&gt;A more flexible option is using our hosted Docker image. This allows you to setup authentication and other features if you need them.&lt;/p&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;Head over to our &lt;a href=&#34;https://github.com/RamiAwar/dataline/tags&#34;&gt;releases&lt;/a&gt; page, and open the most recent one. There you should find a windows-exe.zip file. Download it, unzip it, and run the &lt;code&gt;DataLine.exe&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;You might get a &lt;code&gt;&#34;Windows protected your PC&#34;&lt;/code&gt; message, which is normal (more info -&amp;gt; run anyway). Finally, open &lt;a href=&#34;http://localhost:7377/&#34;&gt;http://localhost:7377/&lt;/a&gt; in your browser.&lt;/p&gt; &#xA;&lt;h4&gt;Mac&lt;/h4&gt; &#xA;&lt;p&gt;Homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install dataline&#xA;brew tap ramiawar/dataline&#xA;brew install dataline&#xA;&#xA;# run dataline&#xA;dataline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DataLine should then be running on port 5173 accessible from your browser: &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;You can use Homebrew, see the &lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#mac&#34;&gt;Mac&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;You may also wish to use the binary instead, to do so, follow the instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/#windows&#34;&gt;Windows&lt;/a&gt; section, and use the &lt;code&gt;dataline-linux.tar.zip&lt;/code&gt; file instead.&lt;/p&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;You can also use our official docker image and get started in one command. This is more suitable for business use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 7377:7377 -v dataline:/home/.dataline --name dataline ramiawar/dataline:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can manage this as you would any other container. &lt;code&gt;docker start dataline&lt;/code&gt;, &lt;code&gt;docker stop dataline&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For updating to a new version, just remove the container and rerun the command. This way the volume is persisted across updates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker rm dataline&#xA;docker run -p 7377:7377 -v dataline:/home/.dataline --name dataline ramiawar/dataline:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect to the frontend, you can then visit: &lt;a href=&#34;http://localhost:7377&#34;&gt;http://localhost:7377&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Running manually&lt;/h4&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/backend/README.md&#34;&gt;backend&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/RamiAwar/dataline/main/frontend/README.md&#34;&gt;frontend&lt;/a&gt; readmes.&lt;/p&gt; &#xA;&lt;h2&gt;Authentication&lt;/h2&gt; &#xA;&lt;p&gt;DataLine also supports basic auth üîí in self-hosted mode ü•≥ in case you&#39;re hosting it and would like to secure it with a username/password.&lt;/p&gt; &#xA;&lt;p&gt;Auth is NOT supported ‚ùå when running the DataLine executable.&lt;/p&gt; &#xA;&lt;p&gt;To enable authentication on the self-hosted version, add the environment variables AUTH_USERNAME and AUTH_PASSWORD while launching the service. ‚úÖ&lt;/p&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;p&gt;Inject the env vars with the docker run command as follows: &lt;code&gt;docker run -p 7377:7377 -v dataline:/home/.dataline --name dataline -e AUTH_USERNAME=admin -e AUTH_PASSWORD=admin ramiawar/dataline:latest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We plan on supporting multiple user auth in the future, but for now it supports a single user by default.&lt;/p&gt; &#xA;&lt;h2&gt;Startup Quest&lt;/h2&gt; &#xA;&lt;p&gt;Go through the following checklist to explore DataLine&#39;s features!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create a sample database connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create a new chat and rename it&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Start asking questions about your data and getting answers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Refresh the page and re-run some SQL queries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Click inside an SQL query, modify it, and save your modification for later!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try to modify your sample DB connection and explore the connection editor page&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try asking for a chart!&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; To really challenge it, ask a question that is answered with multiple results (charts, tables, etc.) - &lt;a href=&#34;https://www.youtube.com/watch?v=6ouSok9bOVo&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add a profile picture&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;The one thing you must configure when deploying DataLine to a custom domain is CORS allowed origins. To do this, add the environment variable &lt;code&gt;ALLOWED_ORIGINS&lt;/code&gt; (comma separated list of origins) to your domain name(s).&lt;/p&gt; &#xA;&lt;p&gt;By default, it is set to &lt;code&gt;http://localhost:7377,http://0.0.0.0:7377&lt;/code&gt; to make it work with local Docker and local binaries.&lt;/p&gt;</summary>
  </entry>
</feed>