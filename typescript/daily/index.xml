<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-12T01:42:06Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>githubnext/monaspace</title>
    <updated>2023-11-12T01:42:06Z</updated>
    <id>tag:github.com,2023-11-12:/githubnext/monaspace</id>
    <link href="https://github.com/githubnext/monaspace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An innovative superfamily of fonts for code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaspace&lt;/h1&gt; &#xA;&lt;p&gt;The Monaspace type system is a monospaced type superfamily with some modern tricks up its sleeve. It consists of five variable axis typefaces. Each one has a distinct voice, but they are all metrics-compatible with one another, allowing you to mix and match them for a more expressive typographical palette.&lt;/p&gt; &#xA;&lt;p&gt;Letters on a grid is how we see our code. Why not make those letters better?&lt;/p&gt; &#xA;&lt;p&gt;âœ¨ An exploration from &lt;a href=&#34;https://githubnext.com&#34;&gt;GitHub Next&lt;/a&gt;. âœ¨ See the full story of Monaspace at &lt;a href=&#34;https://monaspace.githubnext.com&#34;&gt;monaspace.githubnext.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;ðŸ”¤ &lt;strong&gt;&lt;a href=&#34;https://github.com/githubnext/monaspace/releases/latest&#34;&gt;Download the latest release&lt;/a&gt;&lt;/strong&gt; ðŸ”¤&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/githubnext/monaspace/assets/22723/301020e0-f138-44af-abb1-48efa610be08&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Monaspace is available as a variable-axis font and a static build. You can install them both side-by-side; their family names are distinct. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Monaspace _____&lt;/code&gt;: the static family&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Monaspace _____ Var&lt;/code&gt; or &lt;code&gt;VF&lt;/code&gt;: the variable family&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The variable fonts have one file per family (Neon, Argon, etc.). Modern and convenient!&lt;/p&gt; &#xA;&lt;p&gt;The static fonts have one file per cut, per family. The variable axes have named stops for each axis, like &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;bold&lt;/code&gt; for weight, &lt;code&gt;italic&lt;/code&gt; for italics, and &lt;code&gt;semiwide&lt;/code&gt; or &lt;code&gt;wide&lt;/code&gt; for width. The combinatorial explosion of all these properties means the complete installation of static fonts involves hundreds of font files. But for situations that don&#39;t yet support variable fonts, the static builds give you a wide variety of stops throughout the range of each axis.&lt;/p&gt; &#xA;&lt;h2&gt;Coding Ligatures&lt;/h2&gt; &#xA;&lt;p&gt;There are eight groups of coding ligatures, separated into stylistic sets. You may be able to enable or disable individual sets selectively:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ss01&lt;/code&gt;: ligatures related to the equals glyph like &lt;code&gt;!=&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss02&lt;/code&gt;: ligatures related to the greater than or less than operators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss03&lt;/code&gt;: ligatures related to arrows like &lt;code&gt;-&amp;gt;&lt;/code&gt; and &lt;code&gt;=&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss04&lt;/code&gt;: ligatures related to markup, like &lt;code&gt;&amp;lt;/&lt;/code&gt; and &lt;code&gt;/&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss05&lt;/code&gt;: ligatures related to the Fâ™¯ programming language, like &lt;code&gt;|&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss06&lt;/code&gt;: ligatures related to repeated uses of &lt;code&gt;#&lt;/code&gt; such as &lt;code&gt;##&lt;/code&gt; or &lt;code&gt;###&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss07&lt;/code&gt;: ligatures related to the asterisk like &lt;code&gt;***&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ss08&lt;/code&gt;: ligatures related to combinations like &lt;code&gt;.=&lt;/code&gt; or &lt;code&gt;.-&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You must enable discretionary ligatures first, often using the &lt;code&gt;dlig&lt;/code&gt; setting. See below for editor-specific instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/githubnext/monaspace/assets/22723/49b4f802-265d-414c-94c0-ec712e3c0ecc&#34; alt=&#34;A visual glossary of code ligatures available in the Monaspace type system&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Desktop Installation&lt;/h2&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;You can manually drag the fonts from the &lt;code&gt;fonts/otf&lt;/code&gt; or &lt;code&gt;fonts/variable&lt;/code&gt; directory into Font Book.&lt;/p&gt; &#xA;&lt;p&gt;There is also a script that automates the deletion of all Monaspace fonts from &lt;code&gt;~/Library/Fonts&lt;/code&gt; and then copies over the latest versions. Invoke it from the root of the repo like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd util&#xA;$ bash ./install_macos.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;https://brew.sh/&#34;&gt;homebrew&lt;/a&gt; as an alternative:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap homebrew/cask-fonts&#xA;brew install font-monaspace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;You can manually drag the fonts from the &lt;code&gt;fonts/otf&lt;/code&gt; or &lt;code&gt;fonts/variable&lt;/code&gt; directory into &lt;code&gt;C:\Windows\Fonts&lt;/code&gt;. Alternatively, right-click the fonts you want and click Install.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;You can manually drag the fonts from the &lt;code&gt;fonts/otf&lt;/code&gt; and &lt;code&gt;fonts/variable&lt;/code&gt; directory into &lt;code&gt;~/.local/share/fonts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is also a script which automates the deletion of all Monaspace fonts from &lt;code&gt;~/.local/share/fonts&lt;/code&gt; and then copies over the latest versions. Invoke it from the root of the repo like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd util&#xA;$ bash ./install_linux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Webfonts&lt;/h3&gt; &#xA;&lt;p&gt;All files with a &lt;code&gt;.woff&lt;/code&gt; or &lt;code&gt;.woff2&lt;/code&gt; suffix are intended for use on the web. You do not install them with your operating system but add them to your web development project.&lt;/p&gt; &#xA;&lt;p&gt;As with the desktop fonts, they are available in variable and static versions.&lt;/p&gt; &#xA;&lt;h2&gt;Editors&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;Set the font family:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;    &#34;editor.fontFamily&#34;: &#34;&#39;Monaspace Neon&#39;, monospace&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Variable fonts are not yet well-supported in VS Code, and it is not yet possible to mix multiple fonts. Stay tuned, we&#39;re talking with the VS Code team about it!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The same setting controls texture healing and coding ligatures. You can enable either or both.&lt;/p&gt; &#xA;&lt;p&gt;If you only want texture healing and basic coding ligatures, add the following line to your &lt;code&gt;settings.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;editor.fontLigatures&#34;: true,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This setting is unavailable from the graphical settings editor; you must create it manually.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want more coding ligatures, you must customize that setting to specify all the sets you wish to enable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;editor.fontLigatures&#34;: &#34;&#39;calt&#39;, &#39;liga&#39;, &#39;dlig&#39;, &#39;ss01&#39;, &#39;ss02&#39;, ... (more stylistic sets) ...&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You must start the setting with &lt;code&gt;&#39;calt&#39;, &#39;liga&#39;, &#39;dlig&#39;&lt;/code&gt;! The stylistic sets will only have an effect by enabling contextual alternates, ligatures, and discretionary ligatures.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you want coding ligatures but do &lt;em&gt;not&lt;/em&gt; want texture healing, you can omit the &lt;code&gt;calt&lt;/code&gt; setting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;  &#34;editor.fontLigatures&#34;: &#34;&#39;liga&#39;, &#39;dlig&#39;, &#39;ss01&#39;, &#39;ss02&#39;, ... (more stylistic sets) ...&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s no formal contribution guide yet! If you&#39;re interested in contributing to the typefaces, you should read the &lt;a href=&#34;https://github.com/githubnext/monaspace/raw/main/docs/Texture%20Healing.md&#34;&gt;Texture Healing&lt;/a&gt; guide, as it explains how to produce the necessary alternate glyphs.&lt;/p&gt; &#xA;&lt;h3&gt;Renamer utility&lt;/h3&gt; &#xA;&lt;p&gt;This convenience utility renames and moves the built fonts into their respective directories. You will need &lt;a href=&#34;https://deno.land&#34;&gt;Deno&lt;/a&gt; installed, and invoke it thus:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./util/renamer.ts --src=&#34;~/path/to/the/built/fonts&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SIL OFL. See &lt;a href=&#34;https://github.com/githubnext/monaspace/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please file issues in this repo. Monaspace is not a supported product; do not contact GitHub support with questions, as they do not support GitHub Next explorations.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Monaspace was made to improve all code for all developers. &lt;a href=&#34;https://githubnext.com&#34;&gt;GitHub Next&lt;/a&gt; set out on this journey in 2022, and we were fortunate to find a type foundry that shares our passion for improving software in &lt;a href=&#34;https://lettermatic.com/&#34;&gt;Lettermatic&lt;/a&gt;. The result is a marriage of form and function that opens the door to new developer experiences, and that would not have been possible without the domain expertise and skill of the Lettermatic team and the time they invested in working with GitHub Next on figuring out how typography ought to work for code.&lt;/p&gt; &#xA;&lt;h4&gt;Lettermatic&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/githubnext/monaspace/assets/22723/36280a3a-ed6f-45a9-8e74-44c9d005794d&#34; alt=&#34;lettermatic logo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rileycran&#34;&gt;Riley Cran&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Danelle Cheney&lt;/li&gt; &#xA; &lt;li&gt;Heather Cran&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;GitHub Next&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/githubnext/monaspace/assets/22723/744f8ba3-6dd7-4c67-b7e3-8e7d408d9dd9&#34; alt=&#34;GitHub Next Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/colebemis&#34;&gt;Cole Bemis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wattenberger&#34;&gt;Amelia Wattenberger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krzysztof-cieslak&#34;&gt;Krzysztof CieÅ›lak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/idan&#34;&gt;Idan Gazit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Special Thanks To&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anna Thomas&lt;/li&gt; &#xA; &lt;li&gt;Marg Chronister&lt;/li&gt; &#xA; &lt;li&gt;Jane Solomon&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Hacker-GPT/HackerGPT</title>
    <updated>2023-11-12T01:42:06Z</updated>
    <id>tag:github.com,2023-11-12:/Hacker-GPT/HackerGPT</id>
    <link href="https://github.com/Hacker-GPT/HackerGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HackerGPT&lt;/h1&gt; &#xA;&lt;p&gt;HackerGPT is your indispensable digital companion in the world of hacking. Crafted with the unique needs of ethical hackers in mind, this AI-powered assistant stands at the forefront of hacking knowledge and assistance. Equipped with an extensive database of hacking techniques, tools, and strategies, HackerGPT is more than just an information resourceâ€”it&#39;s an active participant in your hacking journey. Whether you&#39;re a beginner looking to learn the ropes or a seasoned professional seeking deeper insights, HackerGPT is your ally in navigating the ever-changing landscape of hacking challenges.&lt;/p&gt; &#xA;&lt;h2&gt;How does HackerGPT work?&lt;/h2&gt; &#xA;&lt;p&gt;When you ask a question, it&#39;s sent to our server. We verify user authenticity and manage the number of questions you can submit based on your user type (free or plus). Our next step is to search our database for information closely matching your question. If we find a strong match, we incorporate this into the AI&#39;s response process. Finally, your question is securely passed to either Google or OpenAI for processing. Importantly, we only send the question and previous ones from the same chat without any personal information. The response you receive varies based on the selected module:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HackerGPT&lt;/strong&gt;: A tuned version of Palm 2 with semantic search on our data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GPT-4 Turbo&lt;/strong&gt;: The latest and greatest from OpenAI, paired with our unique prompt.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started with HackerGPT Locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Clone Repo&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Hacker-GPT/HackerGPT.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Install Dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Configure Environment Variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Initialize your environment settings by creating a &lt;code&gt;.env.local&lt;/code&gt; file in the project&#39;s root directory. Simply duplicate the &lt;code&gt;.env.local.example&lt;/code&gt; file, rename it to &lt;code&gt;.env.local&lt;/code&gt;, and then update the values with your specific configurations. For PALM 2 usage, you&#39;ll need to modify the following entries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SECRET_PALM2_CHAT_BISON_API_KEY=YOUR_OPENROUTER_API_KEY&#xA;SECRET_PALM2_SYSTEM_PROMPT=YOUR_SYSTEM_PROMPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Run App&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Use It&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to start chatting.&lt;/p&gt; &#xA;&lt;h2&gt;Have a feature request, question, comment?&lt;/h2&gt; &#xA;&lt;p&gt;You can get in touch with us through email at &lt;a href=&#34;mailto:github@hackergpt.chat&#34;&gt;github@hackergpt.chat&lt;/a&gt; or connect with us on &lt;a href=&#34;https://twitter.com/thehackergpt&#34;&gt;X&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Code&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/Hacker-GPT/HackerGPT/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions and guidelines for new contributors.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Funds&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute financially to the development of HackerGPT, you can make a donation at the following link: &lt;a href=&#34;https://donate.stripe.com/9AQeWn6UScl6dlm5ks&#34;&gt;Donate to HackerGPT Development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://github.com/Hacker-GPT/HackerGPT/raw/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>StaticMania/keep-react</title>
    <updated>2023-11-12T01:42:06Z</updated>
    <id>tag:github.com,2023-11-12:/StaticMania/keep-react</id>
    <link href="https://github.com/StaticMania/keep-react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Keep React is an open-source component library built on Tailwind CSS and React.js. It provides a versatile set of pre-designed UI components to build modern web applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KEEP REACT&lt;/h1&gt; &#xA;&lt;p&gt;Keep React is an open-source component library built on Tailwind CSS and React.js. It provides a versatile set of pre-designed UI components that enable developers to streamline the creation of modern, responsive, and visually appealing web applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.prismic.io/staticmania/468819ab-dcc8-4393-85b2-b93913eee369_For+Github.png?auto=compress,format&#34; alt=&#34;Keep React&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#components&#34;&gt;Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#figma&#34;&gt;Figma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StaticMania/keep-react/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Vite React Application&lt;/h3&gt; &#xA;&lt;p&gt;After creating a React application with Vite, follow these steps to install Keep React:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 1:&lt;/code&gt; Install Tailwind CSS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i autoprefixer postcss tailwindcss&#xA;npx tailwindcss init -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 2:&lt;/code&gt; Install Keep React:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i keep-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with Yarn&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;yarn add keep-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 3:&lt;/code&gt; Go to the &lt;code&gt;tailwind.config.js&lt;/code&gt; file and paste the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import keepPreset from &#34;keep-react/src/keep-preset.js&#34;;&#xA;export default {&#xA;  content: [&#34;node_modules/keep-react/**/*.{js,jsx,ts,tsx}&#34;],&#xA;  presets: [keepPreset],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 4:&lt;/code&gt; Add Tailwind CSS to index.css File:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &#34;keep-react/src/main.min.css&#34;;&#xA;@tailwind base;&#xA;@tailwind components;&#xA;@tailwind utilities;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Next JS Application&lt;/h3&gt; &#xA;&lt;p&gt;You can easily integrate &lt;code&gt;keep-react&lt;/code&gt; into your Next.js application. Starting from Next.js version 13.4, the app router automatically installs Tailwind CSS, eliminating the need for a separate Tailwind CSS installation. If you have already installed Tailwind CSS as part of the Next.js application setup, you can proceed with Step 2. Otherwise, start with Step 1.&lt;/p&gt; &#xA;&lt;p&gt;After creating a Next JS application, follow these steps to install Keep React:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 1:&lt;/code&gt; Install Tailwind CSS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i autoprefixer postcss tailwindcss&#xA;npx tailwindcss init -p&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 2:&lt;/code&gt; Install Keep React&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i keep-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with yarn&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;yarn add keep-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 3:&lt;/code&gt; Go to the &lt;code&gt;tailwind.config.js&lt;/code&gt; file and paste the following code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;module.exports = {&#xA;    content: [&#34;node_modules/keep-react/**/*.{js,jsx,ts,tsx}&#34;],&#xA;    presets: [require(&#34;keep-react/src/keep-preset.js&#34;)],&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Step 4:&lt;/code&gt; Add Tailwind CSS to globals.css File:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &#34;keep-react/src/main.min.css&#34;;&#xA;@tailwind base;&#xA;@tailwind components;&#xA;@tailwind utilities;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congratulations! You have successfully installed the Keep React. Now you can import any component from keep-react and use it in your project.&lt;/p&gt; &#xA;&lt;h2&gt;usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&#39;use client&#39;;&#xA;import { Button } from &#34;keep-react&#34;;&#xA;  const App = () =&amp;gt; {&#xA;    return (&#xA;      &amp;lt;Button size=&#34;md&#34;&amp;gt;Default&amp;lt;/Button&amp;gt;&#xA;    )&#xA;  }&#xA;export default App;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;The Keep React offers a wide range of components to build your user interfaces. For detailed usage and examples of each component, refer to our &lt;a href=&#34;https://react.keepdesign.io/docs/getting-started/Introduction&#34;&gt;component documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to the Keep React, you can follow the &lt;a href=&#34;https://github.com/StaticMania/keep-react/raw/main/Contribute.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Figma&lt;/h2&gt; &#xA;&lt;p&gt;If you need access to Figma design files for the components, you can check out our website for more information:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://keepdesign.io&#34;&gt;Get access to the Figma design files&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Keep-React name and logos are trademarks of StaticMania.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/StaticMania/keep-react/raw/main/License&#34;&gt;Read about the licensing terms&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>