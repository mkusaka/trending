<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-16T01:34:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hcengineering/platform</title>
    <updated>2024-08-16T01:34:49Z</updated>
    <id>tag:github.com,2024-08-16:/hcengineering/platform</id>
    <link href="https://github.com/hcengineering/platform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Huly — All-in-One Project Management Platform (alternative to Linear, Jira, Slack, Notion, Motion)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Huly Platform&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/huly_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/huly_io?style=for-the-badge&#34; alt=&#34;X (formerly Twitter) Follow&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/hcengineering/platform?style=for-the-badge&#34; alt=&#34;GitHub License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;⭐️ Your star shines on us. Star us on GitHub!&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;The Huly Platform is a robust framework designed to accelerate the development of business applications, such as CRM systems. This repository includes several applications, such as Chat, Project Management, CRM, HRM, and ATS. Various teams are building products on top of the Platform, including &lt;a href=&#34;https://huly.io&#34;&gt;Huly&lt;/a&gt; and &lt;a href=&#34;https://tracex.co&#34;&gt;TraceX&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/392073243/6d27d5cc-38cd-4d88-affe-bb88b393180c&#34; alt=&#34;Huly&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Self-Hosting&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re primarily interested in self-hosting Huly without the intention to modify or contribute to its development, please use &lt;a href=&#34;https://github.com/hcengineering/huly-selfhost&#34;&gt;huly-selfhost&lt;/a&gt;. This project offers a convenient method to host Huly using &lt;code&gt;docker&lt;/code&gt;, designed for ease of use and quick setup. Explore this option to effortlessly enjoy Huly on your own server.&lt;/p&gt; &#xA;&lt;h2&gt;Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/c42c99e21691fa60ea61b5cdf11c2e0647621534.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#huly-platform&#34;&gt;Huly Platform&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#self-hosting&#34;&gt;Self-Hosting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#activity&#34;&gt;Activity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#table-of-content&#34;&gt;Table of Content&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#pre-requisites&#34;&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#verification&#34;&gt;Verification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#build-and-run&#34;&gt;Build and run&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#run-in-development-mode&#34;&gt;Run in development mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#update-project-structure-and-database&#34;&gt;Update project structure and database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#build--watch&#34;&gt;Build &amp;amp; Watch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#tests&#34;&gt;Tests&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#unit-tests&#34;&gt;Unit tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#ui-tests&#34;&gt;UI tests&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#package-publishing&#34;&gt;Package publishing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#additional-testing&#34;&gt;Additional testing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before proceeding, ensure that your system meets the following requirements: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt; (v20.11.0 is required)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Verification&lt;/h2&gt; &#xA;&lt;p&gt;To verify the installation, perform the following checks in your terminal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure that the &lt;code&gt;docker&lt;/code&gt; commands are available: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker --version&#xA;docker compose version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fast start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/fast-start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You need Microsoft&#39;s &lt;a href=&#34;https://rushjs.io&#34;&gt;rush&lt;/a&gt; to install application.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Rush globally using the command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @microsoft/rush&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigate to the repository root and run the following commands: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush install&#xA;rush build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/presetup-rush.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build and run&lt;/h2&gt; &#xA;&lt;p&gt;Development environment setup requires Docker to be installed on system.&lt;/p&gt; &#xA;&lt;p&gt;Support is available for both amd64 and arm64 containers on Linux and macOS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./dev/&#xA;rush build    # Will build all the required packages. &#xA;# rush rebuild  # could be used to omit build cache.&#xA;rush bundle   # Will prepare bundles.&#xA;rush package  # Will build all webpack packages.&#xA;rush validate # Will validate all sources with typescript and generate d.ts files required for ts-node execution.&#xA;rush svelte-check # Optional. svelte files validation using svelte-check.&#xA;rush docker:build   # Will build Docker containers for all applications in the local Docker environment.&#xA;rush docker:up # Will set up all the containers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be aware &lt;code&gt;rush docker:build&lt;/code&gt; will automatically execute all required phases like build, bundle, package.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, Docker volumes named dev_db, dev_elastic, and dev_files will be created for the MongoDB, Elasticsearch, and MinIO instances.&lt;/p&gt; &#xA;&lt;p&gt;Before you can begin, you need to create a workspace and an account and associate it with the workspace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tool # dev/tool in the repository root&#xA;rushx run-local create-workspace ws1 -w DevWorkspace # Create workspace&#xA;rushx run-local create-account user1 -p 1234 -f John -l Appleseed # Create account&#xA;rushx run-local configure ws1 --list --enable &#39;*&#39; # Enable all modules, even if they are not yet intended to be used by a wide audience.&#xA;rushx run-local assign-workspace user1 ws1 # Assign workspace to user.&#xA;rushx run-local confirm-email user1 # To allow the creation of additional test workspaces.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/create-workspace.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessing the URL &lt;a href=&#34;http://localhost:8087&#34;&gt;http://localhost:8087&lt;/a&gt; will lead you to the app in production mode.&lt;/p&gt; &#xA;&lt;p&gt;Limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local installation does not support sending emails, thus disabling functionalities such as password recovery and email notifications.&lt;/li&gt; &#xA; &lt;li&gt;Integrations with Telegram, Gmail, and other content sources are exclusively available as Docker containers, sourced from private repositories. However, these integrations are fully functional and can be utilized with the platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run in development mode&lt;/h2&gt; &#xA;&lt;p&gt;Development mode allows for live reloading and a smoother development process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd dev/prod&#xA;rushx dev-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use the following login credentials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;Email: user1&#xA;Password: 1234&#xA;Workspace: ws1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Update project structure and database&lt;/h2&gt; &#xA;&lt;p&gt;If the project&#39;s structure is updated, it may be necessary to relink and rebuild the projects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush update&#xA;rush build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It may also be necessary to upgrade the running database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./dev/tool&#xA;rushx upgrade -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If a build fails, but the code is correct, try to delete the &lt;a href=&#34;https://rushjs.io/pages/maintainer/build_cache/&#34;&gt;build cache&lt;/a&gt; and retry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# from the project root&#xA;rm -rf common/temp/build-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build &amp;amp; Watch&lt;/h2&gt; &#xA;&lt;p&gt;For development purpose &lt;code&gt;rush build:watch&lt;/code&gt; action could be used.&lt;/p&gt; &#xA;&lt;p&gt;It includes build and validate phases in watch mode.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;h3&gt;Unit tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush test # To execute all tests&#xA;&#xA;rushx test # For individual test execution inside a package directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;UI tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tests&#xA;rush build&#xA;rush bundle&#xA;rush docker:build&#xA;## creates test Docker containers and sets up test database&#xA;./prepare.sh&#xA;## runs UI tests&#xA;rushx uitest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To execute tests in the development environment, please follow these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tests&#xA;./create-local.sh ## use ./restore-local.sh if you only want to restore the workspace to a predefined initial state for sanity.&#xA;cd ./sanity&#xA;rushx dev-uitest # To execute all tests against the development environment.&#xA;rushx dev-debug -g &#39;pattern&#39; # To execute tests in debug mode with only the matching test pattern.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Package publishing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node ./common/scripts/bump.js -p projectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional testing&lt;/h2&gt; &#xA;&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;&lt;sup&gt;© 2024 &lt;a href=&#34;https://hardcoreeng.com&#34;&gt;Hardcore Engineering Inc&lt;/a&gt;.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>conanbatt/interview-practice</title>
    <updated>2024-08-16T01:34:49Z</updated>
    <id>tag:github.com,2024-08-16:/conanbatt/interview-practice</id>
    <link href="https://github.com/conanbatt/interview-practice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repo for interview practice.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Interview Ready&lt;/h1&gt; &#xA;&lt;p&gt;This repo is managed by &lt;a href=&#34;https://silver.dev&#34;&gt;Silver.dev&lt;/a&gt; and collects various challenges for different roles and positions at startups.&lt;/p&gt; &#xA;&lt;p&gt;Consult the &lt;a href=&#34;https://www.notion.so/silverdev/Candidate-Handbook-Interview-Readiness-e02b5d4cf8d049998bb568d69c4c80aa&#34;&gt;Interview Readiness Guide for an overview&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Prepping&lt;/h2&gt; &#xA;&lt;p&gt;The following materials apply for almost any engineering role.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/coding-challenges&#34;&gt;Coding Challenges&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/behavioral&#34;&gt;Behavioral Prepping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/system-design&#34;&gt;System Design&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Profile-specific Prepping&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/profile-specific/backend&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/profile-specific/frontend&#34;&gt;Frontend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/profile-specific/data-engineering&#34;&gt;Data Engineering&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced &amp;amp; Skill based Prepping&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/misc/quizzes&#34;&gt;Quizzes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conanbatt/interview-practice/tree/main/misc/typing&#34;&gt;Typing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SilverEd - Recoup up to 1000$ on your education spending&lt;/h2&gt; &#xA;&lt;p&gt;SilverEd is a program where Silver covers your education costs on selected courses if you are placed through Silver.dev. Check qualifying courses and benefits at &lt;a href=&#34;https://silver.dev/ed&#34;&gt;SilverEd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributinos as additions of problems and sections based on expertise, real life interview experience, or freely available academic materials.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>callstack/react-native-pager-view</title>
    <updated>2024-08-16T01:34:49Z</updated>
    <id>tag:github.com,2024-08-16:/callstack/react-native-pager-view</id>
    <link href="https://github.com/callstack/react-native-pager-view" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native wrapper for the Android ViewPager and iOS UIPageViewController.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;react-native-pager-view &lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/viewpager-logo.png&#34; alt=&#34;ViewPager&#34; width=&#34;24&#34; height=&#34;24&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/react-native-pager-view&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/react-native-pager-view.svg?sanitize=true&#34; alt=&#34;npm package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/react-native/issues/23313&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Lean%20Core-Extracted-brightgreen.svg?sanitize=true&#34; alt=&#34;Lean Core Extracted&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/callstack/react-native-pager-view?color=blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/ios.yml&#34;&gt;&lt;img src=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/ios.yml/badge.svg?sanitize=true&#34; alt=&#34;iOS Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/callstack/react-native-pager-view/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This component allows the user to swipe left and right through pages of data. Under the hood it is using the native &lt;a href=&#34;https://developer.android.com/reference/android/support/v4/view/ViewPager&#34;&gt;Android ViewPager&lt;/a&gt; and the &lt;a href=&#34;https://developer.apple.com/documentation/uikit/uipageviewcontroller&#34;&gt;iOS UIPageViewController&lt;/a&gt; implementations. &lt;a href=&#34;https://github.com/callstack/react-native-pager-view#preview&#34;&gt;See it in action!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/vp-carousel.gif&#34; alt=&#34;ViewPager&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;4.x&lt;/th&gt; &#xA;   &lt;th&gt;5.x and above&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;iOS support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ViewPager1&lt;/td&gt; &#xA;   &lt;td&gt;ViewPager2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;In version &lt;strong&gt;6.x&lt;/strong&gt; support for &lt;code&gt;transitionStyle&lt;/code&gt; property has been dropped. More information &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/raw/master/MIGRATION.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&#34;@react-native-community/viewpager&#34;&lt;/code&gt; library has been changed to &lt;code&gt;react-native-pager-view&lt;/code&gt;. Here you can find more information, how to migrate pager view to the latest &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/raw/master/MIGRATION.md&#34;&gt;version&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;yarn add react-native-pager-view&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linking&lt;/h2&gt; &#xA;&lt;h3&gt;&amp;gt;= 0.60&lt;/h3&gt; &#xA;&lt;p&gt;Autolinking will just do the job.&lt;/p&gt; &#xA;&lt;h3&gt;&amp;lt; 0.60&lt;/h3&gt; &#xA;&lt;h4&gt;Mostly automatic&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;react-native link react-native-pager-view&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Manual linking&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Manually link the library on iOS&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;Follow the &lt;a href=&#34;https://facebook.github.io/react-native/img/linking-libraries-ios#manual-linking&#34;&gt;instructions in the React Native documentation&lt;/a&gt; to manually link the framework or link using &lt;a href=&#34;https://cocoapods.org&#34;&gt;Cocoapods&lt;/a&gt; by adding this to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;react-native-pager-view&#39;, :path =&amp;gt; &#39;../node_modules/react-native-pager-view&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Manually link the library on Android&lt;/summary&gt; &#xA; &lt;br&gt; Make the following changes: &#xA; &lt;h4&gt;&lt;code&gt;android/settings.gradle&lt;/code&gt;&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;include &#39;:react-native-pager-view&#39;&#xA;project(&#39;:react-native-pager-view&#39;).projectDir = new File(rootProject.projectDir, &#39;../node_modules/react-native-pager-view/android&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;&lt;code&gt;android/app/build.gradle&lt;/code&gt;&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;   ...&#xA;   implementation project(&#39;:react-native-pager-view&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;&lt;code&gt;android/app/src/main/.../MainApplication.java&lt;/code&gt;&lt;/h4&gt; &#xA; &lt;p&gt;On top, where imports are:&lt;/p&gt; &#xA; &lt;p&gt;Add &lt;code&gt;import com.reactnativepagerview.PagerViewPackage;&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Add the &lt;code&gt;PagerViewPackage&lt;/code&gt; class to your list of exported packages.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Override&#xA;protected List&amp;lt;ReactPackage&amp;gt; getPackages() {&#xA;  return Arrays.&amp;lt;ReactPackage&amp;gt;asList(&#xA;    new MainReactPackage(),&#xA;    new PagerViewPackage()&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React from &#39;react&#39;;&#xA;import { StyleSheet, View, Text } from &#39;react-native&#39;;&#xA;import PagerView from &#39;react-native-pager-view&#39;;&#xA;&#xA;const MyPager = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;PagerView style={styles.pagerView} initialPage={0}&amp;gt;&#xA;      &amp;lt;View key=&#34;1&#34;&amp;gt;&#xA;        &amp;lt;Text&amp;gt;First page&amp;lt;/Text&amp;gt;&#xA;      &amp;lt;/View&amp;gt;&#xA;      &amp;lt;View key=&#34;2&#34;&amp;gt;&#xA;        &amp;lt;Text&amp;gt;Second page&amp;lt;/Text&amp;gt;&#xA;      &amp;lt;/View&amp;gt;&#xA;    &amp;lt;/PagerView&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;const styles = StyleSheet.create({&#xA;  pagerView: {&#xA;    flex: 1,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; Note that you can only use &lt;code&gt;View&lt;/code&gt; components as children of &lt;code&gt;PagerView&lt;/code&gt; (cf. folder &lt;em&gt;/example&lt;/em&gt;) . For Android if &lt;code&gt;View&lt;/code&gt; has own children, set prop &lt;code&gt;collapsable&lt;/code&gt; to false &lt;a href=&#34;https://reactnative.dev/docs/view#collapsable-android&#34;&gt;https://reactnative.dev/docs/view#collapsable-android&lt;/a&gt;, otherwise react-native might remove those children views and and its children will be rendered as separate pages&lt;/p&gt; &#xA;&lt;h2&gt;Advanced usage&lt;/h2&gt; &#xA;&lt;p&gt;For advanced usage please take a look into our &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/raw/master/example/src/BasicPagerViewExample.tsx&#34;&gt;example project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prop&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;initialPage&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Index of initial page that should be selected&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;scrollEnabled: boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Should pager view scroll, when scroll enabled&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onPageScroll: (e: PageScrollEvent) =&amp;gt; void&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Executed when transitioning between pages (ether because the animation for the requested page has changed or when the user is swiping/dragging between pages)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onPageScrollStateChanged: (e: PageScrollStateChangedEvent) =&amp;gt; void&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Function called when the page scrolling state has changed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;onPageSelected: (e: PageSelectedEvent) =&amp;gt; void&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;This callback will be called once the ViewPager finishes navigating to the selected page&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pageMargin: number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Blank space to be shown between pages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;keyboardDismissMode: (&#39;none&#39; / &#39;on-drag&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Determines whether the keyboard gets dismissed in response to a drag&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;orientation: Orientation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set &lt;code&gt;horizontal&lt;/code&gt; or &lt;code&gt;vertical&lt;/code&gt; scrolling orientation (it does &lt;strong&gt;not&lt;/strong&gt; work dynamically)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;overScrollMode: OverScrollMode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Used to override default value of overScroll mode. Can be &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;always&lt;/code&gt; or &lt;code&gt;never&lt;/code&gt;. Defaults to &lt;code&gt;auto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;offscreenPageLimit: number&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Set the number of pages that should be retained to either side of the currently visible page(s). Pages beyond this limit will be recreated from the adapter when needed. Defaults to RecyclerView&#39;s caching strategy. The given value must either be larger than 0.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;overdrag: boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Allows for overscrolling after reaching the end or very beginning or pages. Defaults to &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;layoutDirection: (&#39;ltr&#39; / &#39;rtl&#39; / &#39;locale&#39;)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Specifies layout direction. Use &lt;code&gt;ltr&lt;/code&gt; or &lt;code&gt;rtl&lt;/code&gt; to set explicitly or &lt;code&gt;locale&lt;/code&gt; to deduce from the default language script of a locale. Defaults to &lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setPage(index: number)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Function to scroll to a specific page in the PagerView. Invalid index is ignored.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setPageWithoutAnimation(index: number)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Function to scroll to a specific page in the PagerView. Invalid index is ignored.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setScrollEnabled(scrollEnabled: boolean)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A helper function to enable/disable scroll imperatively. The recommended way is using the scrollEnabled prop, however, there might be a case where a imperative solution is more useful (e.g. for not blocking an animation)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;both&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn how to contribute to the repository and the development workflow.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;flex:1&lt;/code&gt; does not work for child views, please use &lt;code&gt;width: &#39;100%&#39;, height: &#39;100%&#39;&lt;/code&gt; &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/issues/186#issuecomment-675320732&#34;&gt;instead&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[iOS]: In case of &lt;code&gt;UIViewControllerHierarchyInconsistency&lt;/code&gt; error, please use below fix:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;requestAnimationFrame(() =&amp;gt; refPagerView.current?.setPage(index));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;horizontal&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;vertical&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/android-viewpager.gif&#34; alt=&#34;ViewPager&#34; width=&#34;325&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/android-viewpager-vertical.gif&#34; alt=&#34;ViewPager&#34; width=&#34;325&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;horizontal&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;vertical&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/ios-viewpager-scroll.gif&#34; alt=&#34;ViewPager&#34; width=&#34;325&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/callstack/react-native-pager-view/master/img/ios-viewpager-vertical.gif&#34; alt=&#34;ViewPager&#34; width=&#34;325&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Reanimated onPageScroll handler&lt;/h2&gt; &#xA;&lt;p&gt;An example can be found &lt;a href=&#34;https://github.com/callstack/react-native-pager-view/raw/master/example/src/ReanimatedOnPageScrollExample.tsx&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Instructions&lt;/h4&gt; &#xA;&lt;p&gt;To attach reanimated handler with &lt;code&gt;onPageScroll&lt;/code&gt; follow the below steps.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// 1. Define the handler&#xA;function usePageScrollHandler(handlers, dependencies) {&#xA;  const { context, doDependenciesDiffer } = useHandler(handlers, dependencies);&#xA;  const subscribeForEvents = [&#39;onPageScroll&#39;];&#xA;&#xA;  return useEvent(&#xA;    (event) =&amp;gt; {&#xA;      &#39;worklet&#39;;&#xA;      const { onPageScroll } = handlers;&#xA;      if (onPageScroll &amp;amp;&amp;amp; event.eventName.endsWith(&#39;onPageScroll&#39;)) {&#xA;        onPageScroll(event, context);&#xA;      }&#xA;    },&#xA;    subscribeForEvents,&#xA;    doDependenciesDiffer&#xA;  );&#xA;}&#xA;&#xA;// 2. Attach the event handler&#xA;import PagerView from &#39;react-native-pager-view&#39;;&#xA;import Animated from &#39;react-native-reanimated&#39;;&#xA;const AnimatedPagerView = Animated.createAnimatedComponent(PagerView);&#xA;&#xA;const pageScrollHandler = usePageScrollHandler({&#xA;  onPageScroll: (e) =&amp;gt; {&#xA;    &#39;worklet&#39;;&#xA;    offset.value = e.offset;&#xA;    console.log(e.offset, e.position);&#xA;  },&#xA;});&#xA;&#xA;&amp;lt;AnimatedPagerView onPageScroll={pageScrollHandler} /&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>