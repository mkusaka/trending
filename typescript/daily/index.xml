<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-15T09:04:13Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>googleapis/release-please-action</title>
    <updated>2024-05-15T09:04:13Z</updated>
    <id>tag:github.com,2024-05-15:/googleapis/release-please-action</id>
    <link href="https://github.com/googleapis/release-please-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;automated releases based on conventional commits&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Release Please Action&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://conventionalcommits.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg?sanitize=true&#34; alt=&#34;Conventional Commits&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automate releases with Conventional Commit Messages.&lt;/p&gt; &#xA;&lt;h2&gt;Basic Configuration&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.github/workflows/release-please.yml&lt;/code&gt; file with these contents:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;&#xA;permissions:&#xA;  contents: write&#xA;  pull-requests: write&#xA;&#xA;name: release-please&#xA;&#xA;jobs:&#xA;  release-please:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: googleapis/release-please-action@v4&#xA;        with:&#xA;          # this assumes that you have created a personal access token&#xA;          # (PAT) and configured it as a GitHub action secret named&#xA;          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).&#xA;          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}&#xA;          # this is a built-in strategy in release-please, see &#34;Action Inputs&#34;&#xA;          # for more options&#xA;          release-type: simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Specifying a &lt;code&gt;release-type&lt;/code&gt; configuration is the most straight-forward configuration option, but allows for no further customization. For advanced configuration options, see the &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please-action/main/#advanced-release-configuration&#34;&gt;Advanced Configuration section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Merge the above action into your repository and make sure new commits follow the &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/&#34;&gt;Conventional Commits&lt;/a&gt; convention, &lt;a href=&#34;https://github.com/googleapis/release-please&#34;&gt;release-please&lt;/a&gt; will start creating Release PRs for you.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Advanced Release Configuration&lt;/h2&gt; &#xA;&lt;p&gt;For any advanced configuration, please set up a &lt;a href=&#34;https://github.com/googleapis/release-please/raw/master/docs/manifest-releaser.md&#34;&gt;manifest config&lt;/a&gt; and then configure this action as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#...(same as above)&#xA;steps:&#xA;  - uses: googleapis/release-please-action@v4&#xA;    with:&#xA;      # this assumes that you have created a personal access token&#xA;      # (PAT) and configured it as a GitHub action secret named&#xA;      # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).&#xA;      token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}&#xA;      # optional. customize path to release-please-config.json&#xA;      config-file: release-please-config.json&#xA;      # optional. customize path to .release-please-manifest.json&#xA;      manifest-file: .release-please-manifest.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Action Inputs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;input&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;token&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A GitHub secret token, the action defaults to using the special &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If specified, defines the release strategy to use for the repository. Reference &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please-action/main/#release-types-supported&#34;&gt;Release types supported&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create a release from a path other than the repository&#39;s root&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;target-branch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;branch to open pull release PR against (detected by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;config-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the release-please config in the repository. Defaults to &lt;code&gt;release-please-config.json&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;manifest-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to the release-please versions manifest. Defaults to &lt;code&gt;.release-please-manifest.json&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;repo-url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub repository name in the form of &lt;code&gt;&amp;lt;owner&amp;gt;/&amp;lt;repo&amp;gt;&lt;/code&gt;. Defaults to the repository the action is running in.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;github-api-url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Override the GitHub API URL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;github-graphql-url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Override the GitHub GraphQL URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, send the PR from a fork. This requires the &lt;code&gt;token&lt;/code&gt; to be a user that can create forks (e.g. not the default &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;include-component-in-tag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If true, add prefix to tags and branches, allowing multiple libraries to be released from the same repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;proxy-server&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure a proxy servier in the form of &lt;code&gt;&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt; e.g. &lt;code&gt;proxy-host.com:8080&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, do not attempt to create releases. This is useful if splitting release tagging from PR creation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-pull-request&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, do not attempt to create release pull requests. This is useful if splitting release tagging from PR creation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;GitHub Credentials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;release-please&lt;/code&gt; requires a GitHub token to access the GitHub API. You configure this token via the &lt;code&gt;token&lt;/code&gt; configuration option.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; If using GitHub Actions, you will need to specify a &lt;code&gt;token&lt;/code&gt; for your workflows to run on Release Please&#39;s releases and PRs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;By default, Release Please uses the built-in &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; secret. However, all resources created by &lt;code&gt;release-please&lt;/code&gt; (release tag or release pull request) will not trigger future GitHub actions workflows, and workflows normally triggered by &lt;code&gt;release.created&lt;/code&gt; events will also not run. From GitHub&#39;s &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When you use the repository&#39;s &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; to perform tasks, events triggered by the &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; will not create a new workflow run. This prevents you from accidentally creating recursive workflow runs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You will want to configure a GitHub Actions secret with a &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;Personal Access Token&lt;/a&gt; if you want GitHub Actions CI checks to run on Release Please PRs.&lt;/p&gt; &#xA;&lt;h3&gt;Workflow Permissions&lt;/h3&gt; &#xA;&lt;p&gt;This workflow will need the following permissions in your workflow file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;permissions:&#xA;  contents: write&#xA;  pull-requests: write&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to set &#34;Allow GitHub Actions to create and approve pull requests&#34; under repository Settings &amp;gt; Actions &amp;gt; General.&lt;/p&gt; &#xA;&lt;p&gt;For more information about permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub APIs &lt;a href=&#34;https://docs.github.com/en/rest/overview/permissions-required-for-github-apps?apiVersion=2022-11-28#contents&#34;&gt;protected by &lt;code&gt;contents&lt;/code&gt; permission&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub APIs &lt;a href=&#34;https://docs.github.com/en/rest/overview/permissions-required-for-github-apps?apiVersion=2022-11-28#pull-requests&#34;&gt;protected by &lt;code&gt;pull_requests&lt;/code&gt; permission&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github Actions: &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token&#34;&gt;permissions for the &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github Repositories: &lt;a href=&#34;https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#enabling-workflows-for-private-repository-forks&#34;&gt;enabling workflows for forks of private repositories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github Actions: &lt;a href=&#34;https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs&#34;&gt;assigning permissions to jobs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Release Types Supported&lt;/h3&gt; &#xA;&lt;p&gt;Release Please automates releases for the following flavors of repositories:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;release type&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dart&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a pubspec.yaml and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;elixir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An elixir repository with a mix.exs and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;expo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An Expo based React Native repository, with a package.json, app.json and CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go repository, with a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;helm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A helm chart repository with a Chart.yaml and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;java&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/docs/java.md&#34;&gt;A strategy that generates SNAPSHOT version after each release&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;krm-blueprint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/blueprints/tree/main/catalog/project&#34;&gt;A kpt package, with 1 or more KRM files and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/docs/java.md&#34;&gt;Strategy for Maven projects, generates SNAPSHOT version after each release and updates &lt;code&gt;pom.xml&lt;/code&gt; automatically&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;node&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yargs/yargs&#34;&gt;A Node.js repository, with a package.json and CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ocaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grain-lang/binaryen.ml&#34;&gt;An OCaml repository, containing 1 or more opam or esy files and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/python-storage&#34;&gt;A Python repository, with a setup.py, setup.cfg, version.py and CHANGELOG.md&lt;/a&gt; and optionally a pyproject.toml and a &amp;lt;project&amp;gt;/__init__.py&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;php&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/setnemo/asterisk-notation&#34;&gt;A php composer package with composer.json and CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/google-id-token&#34;&gt;A Ruby repository, with version.rb and CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rust&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Rust repository, with a Cargo.toml (either as a crate or workspace) and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sfdx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a &lt;a href=&#34;https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_ws_config.htm&#34;&gt;sfdx-project.json&lt;/a&gt; and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;simple&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/gapic-generator&#34;&gt;A repository with a version.txt and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-module&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terraform-google-modules/terraform-google-project-factory&#34;&gt;A terraform module, with a version in the README.md, and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;New types of releases can be &lt;a href=&#34;https://github.com/googleapis/release-please/tree/main/src/strategies&#34;&gt;added here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also find them in the &lt;a href=&#34;https://github.com/googleapis/release-please/tree/main#strategy-language-types-supported&#34;&gt;release-please repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Outputs&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Properties that are available after the action executed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;output&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;releases_created&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; if any release was created, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;paths_released&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A JSON string of the array of paths that had releases created (&lt;code&gt;[]&lt;/code&gt; if )&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prs_created&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; if any pull request was created or updated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A JSON string of the &lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/src/pull-request.ts#L15&#34;&gt;PullRequest object&lt;/a&gt; (unset if no release created)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A JSON string of the array of &lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/src/pull-request.ts#L15&#34;&gt;PullRequest objects&lt;/a&gt; (unset if no release created)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Root component outputs&lt;/h3&gt; &#xA;&lt;p&gt;If you have a root component (path is &lt;code&gt;.&lt;/code&gt; or unset), then the action will also output:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;output&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release_created&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; if a root component release was created, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;upload_url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;html_url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag_name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing major semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;minor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing minor semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing patch semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SHA that a GitHub release was tagged at&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Path outputs&lt;/h3&gt; &#xA;&lt;p&gt;If you have a monorepo or a component with &lt;code&gt;path&lt;/code&gt; different than the root (&lt;code&gt;.&lt;/code&gt;) directory, then your outputs will have the &lt;code&gt;path&lt;/code&gt; prefixed to the output name.&lt;/p&gt; &#xA;&lt;p&gt;This prefix allows you to distinguish values for different releases.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;output&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--release_created&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt; if the release was created, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--upload_url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--html_url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--tag_name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Directly related to &lt;a href=&#34;https://developer.github.com/v3/repos/releases/#response-4&#34;&gt;&lt;strong&gt;Create a release&lt;/strong&gt;&lt;/a&gt; API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing major semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--minor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing minor semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--patch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number representing patch semver value&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;path&amp;gt;--sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;sha that a GitHub release was tagged at&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How release please works&lt;/h2&gt; &#xA;&lt;p&gt;Release Please automates CHANGELOG generation, the creation of GitHub releases, and version bumps for your projects. Release Please does so by parsing your git history, looking for &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commit messages&lt;/a&gt;, and creating release PRs.&lt;/p&gt; &#xA;&lt;h3&gt;What&#39;s a Release PR?&lt;/h3&gt; &#xA;&lt;p&gt;Rather than continuously releasing what&#39;s landed to your default branch, release-please maintains Release PRs:&lt;/p&gt; &#xA;&lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/googleapis/release-please-action/main/screen.png&#34;&gt; &#xA;&lt;p&gt;These Release PRs are kept up-to-date as additional work is merged. When you&#39;re ready to tag a release, simply merge the release PR.&lt;/p&gt; &#xA;&lt;h3&gt;How should I write my commits?&lt;/h3&gt; &#xA;&lt;p&gt;Release Please assumes you are using &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commit messages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most important prefixes you should have in mind are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; which represents bug fixes, and correlates to a &lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt; patch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; which represents a new feature, and correlates to a SemVer minor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feat!:&lt;/code&gt;, or &lt;code&gt;fix!:&lt;/code&gt;, &lt;code&gt;refactor!:&lt;/code&gt;, etc., which represent a breaking change (indicated by the &lt;code&gt;!&lt;/code&gt;) and will result in a SemVer major.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supporting multiple release branches&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;release-please&lt;/code&gt; has the ability to target not default branches. You can even use separate release strategies (&lt;code&gt;release-type&lt;/code&gt;). To configure, simply configure multiple workflows that specify a different &lt;code&gt;target-branch&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Configuration for &lt;code&gt;main&lt;/code&gt; (default) branch (&lt;code&gt;.github/workflows/release-main.yaml&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;      - 1.x&#xA;name: release-please&#xA;jobs:&#xA;  release-please:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: googleapis/release-please-action@v4&#xA;        with:&#xA;          release-type: node&#xA;          # The short ref name of the branch or tag that triggered&#xA;          #  the workflow run. For example, `main` or `1.x`&#xA;          target-branch: ${{ github.ref_name }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Automating publication to npm&lt;/h2&gt; &#xA;&lt;p&gt;With a few additions, the Release Please action can be made to publish to npm when a Release PR is merged:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;name: release-please&#xA;jobs:&#xA;  release-please:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: googleapis/release-please-action@v4&#xA;        id: release&#xA;        with:&#xA;          release-type: node&#xA;      # The logic below handles the npm publication:&#xA;      - uses: actions/checkout@v4&#xA;        # these if statements ensure that a publication only occurs when&#xA;        # a new release is created:&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;      - uses: actions/setup-node@v4&#xA;        with:&#xA;          node-version: 12&#xA;          registry-url: &#39;https://registry.npmjs.org&#39;&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;      - run: npm ci&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;      - run: npm publish&#xA;        env:&#xA;          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;So that you can keep 2FA enabled for npm publications, we recommend setting &lt;code&gt;registry-url&lt;/code&gt; to your own &lt;a href=&#34;https://github.com/GoogleCloudPlatform/wombat-dressing-room&#34;&gt;Wombat Dressing Room&lt;/a&gt; deployment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Creating major/minor tags&lt;/h2&gt; &#xA;&lt;p&gt;If you are using release-please to publish a GitHub action, you will likely want to tag a major and minor tag during a release, i.e., if you are releasing &lt;code&gt;v2.8.3&lt;/code&gt;, you will also want to update tags &lt;code&gt;v2&lt;/code&gt; and &lt;code&gt;v2.8&lt;/code&gt;. This allows your users to pin to &lt;code&gt;v2&lt;/code&gt;, and get updates to your library without updating their workflows.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;release-please-action&lt;/code&gt; has the outputs &lt;code&gt;major&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, and &lt;code&gt;release_created&lt;/code&gt; to facilitate this. These outputs can be used conditionally, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;name: release-please&#xA;jobs:&#xA;  release-please:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: googleapis/release-please-action@v4&#xA;        id: release&#xA;        with:&#xA;          release-type: node&#xA;      - uses: actions/checkout@v4&#xA;      - name: tag major and minor versions&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;        run: |&#xA;          git config user.name github-actions[bot]&#xA;          git config user.email 41898282+github-actions[bot]@users.noreply.github.com&#xA;          git remote add gh-token &#34;https://${{ secrets.GITHUB_TOKEN }}@github.com/googleapis/release-please-action.git&#34;&#xA;          git tag -d v${{ steps.release.outputs.major }} || true&#xA;          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true&#xA;          git push origin :v${{ steps.release.outputs.major }} || true&#xA;          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true&#xA;          git tag -a v${{ steps.release.outputs.major }} -m &#34;Release v${{ steps.release.outputs.major }}&#34;&#xA;          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m &#34;Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}&#34;&#xA;          git push origin v${{ steps.release.outputs.major }}&#xA;          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Attaching files to the GitHub release&lt;/h2&gt; &#xA;&lt;p&gt;You can attach additional files, such as release artifacts, to the GitHub release that is created. The &lt;code&gt;gh&lt;/code&gt; CLI tool, which is installed on all runners, can be used for this.&lt;/p&gt; &#xA;&lt;p&gt;This example uses the &lt;code&gt;gh&lt;/code&gt; tool to attach the file &lt;code&gt;./artifact/some-build-artifact.zip&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches:&#xA;      - main&#xA;name: release-please&#xA;jobs:&#xA;  release-please:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: googleapis/release-please-action@v4&#xA;        id: release&#xA;        with:&#xA;          release-type: node&#xA;      - name: Upload Release Artifact&#xA;        if: ${{ steps.release.outputs.release_created }}&#xA;        env:&#xA;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#xA;        run: gh release upload ${{ steps.release.outputs.tag_name }} ./artifact/some-build-artifact.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading from v3 to v4&lt;/h2&gt; &#xA;&lt;h3&gt;Command&lt;/h3&gt; &#xA;&lt;p&gt;If you were setting the &lt;code&gt;command&lt;/code&gt; option, you will likely need to modify your configuration.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;New Configuration&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;github-release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-pull-request: true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This command was used for only tagging releases. Now we tell release-please to skip opening release PRs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-pr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-release: true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This command was used for only opening release PRs. Now we tell release-please to skip tagging releases.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;manifest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;do not set &lt;code&gt;release-type&lt;/code&gt; option&lt;/td&gt; &#xA;   &lt;td&gt;This command told release-please to use a manifest config file. This is now the default behavior unless you explicitly set a &lt;code&gt;release-type&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;manifest-pr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-release: true&lt;/code&gt; and do not set &lt;code&gt;release-type&lt;/code&gt; option&lt;/td&gt; &#xA;   &lt;td&gt;This command told release-please to use a manifest config file and only open the pull reuqest.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Package options&lt;/h3&gt; &#xA;&lt;p&gt;If you were previously configuring advanced options via GitHub action inputs, you will need to configure via the release-please manifest configuration instead. Below, you can see a mapping of the old option to the new option:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Old Option&lt;/th&gt; &#xA;   &lt;th&gt;New Option&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.packages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The root &lt;code&gt;packages&lt;/code&gt; field is an object where the key is the &lt;code&gt;path&lt;/code&gt; being configured&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;changelog-path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.packages[path].changelog-path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Package-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;component&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.packages[path].component&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Package-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;package-name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.packages[path].package-name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Package-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;always-link-local&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.always-link-loca&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bootstrap-sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.bootstrap-sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;commit-search-depth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.commit-search-depth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;group-pull-request-title-pattern&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.group-pull-request-title-pattern&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;last-release-sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.last-release-sha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;plugins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.plugins&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-search-depth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.release-search-depth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sequential-calls&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.sequential-calls&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-labeling&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.skip-labeling&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;signoff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.signoff&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root-only option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bump-minor-pre-major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.bump-minor-pre-major&lt;/code&gt; or &lt;code&gt;$.packages[path].bump-minor-pre-major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bump-patch-for-minor-pre-major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.bump-path-for-minor-pre-major&lt;/code&gt; or &lt;code&gt;$.packages[path].bump-path-for-minor-pre-major&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;changelog-host&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.changelog-host&lt;/code&gt; or &lt;code&gt;$.packages[path].changelog-host&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;changelog-notes-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.changelog-type&lt;/code&gt; or &lt;code&gt;$.packages[path].changelog-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;changelog-types&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.changelog-sections&lt;/code&gt; or &lt;code&gt;$.packages[path].changelog-sections&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;extra-files&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.extra-files&lt;/code&gt; or &lt;code&gt;$.packages[path].extra-files&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;include-v-in-tag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.include-v-in-tag&lt;/code&gt; or &lt;code&gt;$.packages[path].include-v-in-tag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;labels&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.label&lt;/code&gt; or &lt;code&gt;$.packages[path].label&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;monorepo-tags&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.include-component-in-tag&lt;/code&gt; or &lt;code&gt;$.packages[path].include-component-in-tag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prerelease&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.prerelease&lt;/code&gt; or &lt;code&gt;$.packages[path].prerelease&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pull-request-header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.pull-request-header&lt;/code&gt; or &lt;code&gt;$.packages[path].pull-request-header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pull-request-title-pattern&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.pull-request-title-pattern&lt;/code&gt; or &lt;code&gt;$.packages[path].pull-request-title-pattern&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-as&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.release-as&lt;/code&gt; or &lt;code&gt;$.packages[path].release-as&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-labels&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.release-label&lt;/code&gt; or &lt;code&gt;$.packages[path].release-label&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;release-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.release-type&lt;/code&gt; or &lt;code&gt;$.packages[path].release-type&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;separate-pull-requests&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.separate-pull-requests&lt;/code&gt; or &lt;code&gt;$.packages[path].separate-pull-requests&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;skip-github-release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.skip-github-release&lt;/code&gt; or &lt;code&gt;$.packages[path].skip-github-release&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;snapshot-labels&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.snapshot-label&lt;/code&gt; or &lt;code&gt;$.packages[path].snapshot-label&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tag-separator&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.tag-separator&lt;/code&gt; or &lt;code&gt;$.packages[path].tag-separator&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;version-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.version-file&lt;/code&gt; or &lt;code&gt;$.packages[path].version-file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;versioning-strategy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$.versioning&lt;/code&gt; or &lt;code&gt;$.packages[path].versioning&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Root or per-package option&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache Version 2.0&lt;/p&gt;</summary>
  </entry>
</feed>