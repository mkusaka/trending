<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-27T01:35:15Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ragapp/ragapp</title>
    <updated>2024-05-27T01:35:15Z</updated>
    <id>tag:github.com,2024-05-27:/ragapp/ragapp</id>
    <link href="https://github.com/ragapp/ragapp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The easiest way to use Agentic RAG in any enterprise&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img alt=&#34;Logo - RAGapp&#34; src=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/docs/logo.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;The easiest way to use Agentic RAG in any enterprise.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;As simple to configure as &lt;a href=&#34;https://openai.com/index/introducing-gpts&#34; target=&#34;_blank&#34;&gt;OpenAI&#39;s custom GPTs&lt;/a&gt;, but deployable in your own cloud infrastructure using Docker. Built using &lt;a href=&#34;https://github.com/run-llama/llama_index&#34;&gt;LlamaIndex&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/#get-started&#34;&gt;&lt;strong&gt;Get Started&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/#endpoints&#34;&gt;&lt;strong&gt;Endpoints&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/#deployment&#34;&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/#contact&#34;&gt;&lt;strong&gt;Contact&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img alt=&#34;Screenshot&#34; src=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/docs/screenshot.png&#34;&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;To run, start a docker container with our image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 8000:8000 ragapp/ragapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, access the Admin UI at &lt;a href=&#34;http://localhost:8000/admin&#34;&gt;http://localhost:8000/admin&lt;/a&gt; to configure your RAGapp.&lt;/p&gt; &#xA;&lt;p&gt;You can use hosted AI models from OpenAI or Gemini, and local models using &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Endpoints&lt;/h2&gt; &#xA;&lt;p&gt;The docker container exposes the following endpoints:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Admin UI: &lt;a href=&#34;http://localhost:8000/admin&#34;&gt;http://localhost:8000/admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat UI: &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;API: &lt;a href=&#34;http://localhost:8000/docs&#34;&gt;http://localhost:8000/docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The Chat UI and API are only functional if the RAGapp is configured.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;RAGapp doesn&#39;t come with any authentication layer by design. Just protect the &lt;code&gt;/admin&lt;/code&gt; path in your cloud environment to secure your RAGapp.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;Using Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;We provide a &lt;code&gt;docker-compose.yml&lt;/code&gt; file to make deploying RAGapp with &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt; and &lt;a href=&#34;https://qdrant.tech/&#34;&gt;Qdrant&lt;/a&gt; easy in your own infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;MODEL&lt;/code&gt; environment variable, you can specify which model to use, e.g. &lt;a href=&#34;https://ollama.com/library/llama3&#34;&gt;&lt;code&gt;llama3&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;MODEL=llama3 docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t specify the &lt;code&gt;MODEL&lt;/code&gt; variable, the default model used is &lt;code&gt;phi3&lt;/code&gt;, which is less capable than &lt;code&gt;llama3&lt;/code&gt; but faster to download.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: The &lt;code&gt;setup&lt;/code&gt; container in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file will download the selected model into the &lt;a href=&#34;https://raw.githubusercontent.com/ragapp/ragapp/main/ollama/&#34;&gt;&lt;code&gt;ollama&lt;/code&gt;&lt;/a&gt; folder - this will take a few minutes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; environment variables, you can specify which Ollama host to use. If you don&#39;t specify the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; variable, the default points to the Ollama instance started by Docker Compose (&lt;code&gt;http://ollama:11434&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re running a local Ollama instance, you can choose to connect it to RAGapp by setting the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; variable to &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;MODEL=llama3 OLLAMA_BASE_URL=http://host.docker.internal:11434 docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is necessary if you&#39;re running RAGapp on macOS, as Docker for Mac does not support GPU acceleration.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s easy to deploy RAGapp in your own cloud infrastructure. Customized K8S deployment descriptors are coming soon.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;poetry install --no-root&#xA;make build-frontends&#xA;make dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: To check out the admin UI during development, please go to &lt;a href=&#34;http://localhost:3000/admin&#34;&gt;http://localhost:3000/admin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Questions, feature requests or found a bug? &lt;a href=&#34;https://github.com/ragapp/ragapp/issues/new/choose&#34;&gt;Open an issue&lt;/a&gt; or reach out to &lt;a href=&#34;https://github.com/marcusschiesser&#34;&gt;marcusschiesser&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hoarder-app/hoarder</title>
    <updated>2024-05-27T01:35:15Z</updated>
    <id>tag:github.com,2024-05-27:/hoarder-app/hoarder</id>
    <link href="https://github.com/hoarder-app/hoarder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A self-hostable bookmark-everything app (links, notes and images) with AI-based automatic tagging and full text search&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/hoarder-app/hoarder/actions/workflows/ci.yml&#34;&gt; &lt;img alt=&#34;GitHub Actions Workflow Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/hoarder-app/hoarder/ci.yml&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/hoarder-app/hoarder/releases&#34;&gt; &lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/v/release/hoarder-app/hoarder&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/NrgeYywsFh&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1223681308962721802?label=chat%20on%20discord&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;&lt;img height=&#34;50px&#34; src=&#34;https://raw.githubusercontent.com/hoarder-app/hoarder/main/screenshots/logo.png&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A self-hostable bookmark-everything app with a touch of AI for the data hoarders out there.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/hoarder-app/hoarder/raw/main/screenshots/homepage.png?raw=true&#34; alt=&#34;homepage screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üîó Bookmark links, take simple notes and store images.&lt;/li&gt; &#xA; &lt;li&gt;‚¨áÔ∏è Automatic fetching for link titles, descriptions and images.&lt;/li&gt; &#xA; &lt;li&gt;üìã Sort your bookmarks into lists.&lt;/li&gt; &#xA; &lt;li&gt;üîé Full text search of all the content stored.&lt;/li&gt; &#xA; &lt;li&gt;‚ú® AI-based (aka chatgpt) automatic tagging. With supports for local models using ollama!&lt;/li&gt; &#xA; &lt;li&gt;üîñ &lt;a href=&#34;https://chromewebstore.google.com/detail/hoarder/kgcjekpmcjjogibpjebkhaanilehneje&#34;&gt;Chrome plugin&lt;/a&gt; and &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/hoarder/&#34;&gt;Firefox addon&lt;/a&gt; for quick bookmarking.&lt;/li&gt; &#xA; &lt;li&gt;üì± An &lt;a href=&#34;https://apps.apple.com/us/app/hoarder-app/id6479258022&#34;&gt;iOS app&lt;/a&gt;, and an &lt;a href=&#34;https://play.google.com/store/apps/details?id=app.hoarder.hoardermobile&amp;amp;pcampaignid=web_share&#34;&gt;Android app&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;üåô Dark mode support (web only so far).&lt;/li&gt; &#xA; &lt;li&gt;üíæ Self-hosting first.&lt;/li&gt; &#xA; &lt;li&gt;[Planned] Downloading the content for offline reading.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è This app is under heavy development and it&#39;s far from stable.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hoarder.app/installation/docker&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hoarder.app/configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hoarder.app/screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hoarder.app/security-considerations&#34;&gt;Security Considerations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.hoarder.app/Development/setup&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;You can access the demo at &lt;a href=&#34;https://try.hoarder.app&#34;&gt;https://try.hoarder.app&lt;/a&gt;. Login with the following creds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;email: demo@hoarder.app&#xA;password: demodemo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The demo is seeded with some content, but it&#39;s in read-only mode to prevent abuse.&lt;/p&gt; &#xA;&lt;h2&gt;Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;NextJS&lt;/a&gt; for the web app. Using app router.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle&lt;/a&gt; for the database and its migrations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://next-auth.js.org&#34;&gt;NextAuth&lt;/a&gt; for authentication.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trpc.io&#34;&gt;tRPC&lt;/a&gt; for client-&amp;gt;server communication.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pptr.dev/&#34;&gt;Puppeteer&lt;/a&gt; for crawling the bookmarks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; because AI is so hot right now.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bullmq.io&#34;&gt;BullMQ&lt;/a&gt; for scheduling the background jobs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meilisearch.com&#34;&gt;Meilisearch&lt;/a&gt; for the full content search.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why did I build it?&lt;/h2&gt; &#xA;&lt;p&gt;I browse reddit, twitter and hackernews a lot from my phone. I frequently find interesting stuff (articles, tools, etc) that I&#39;d like to bookmark and read later when I&#39;m in front of a laptop. Typical read-it-later apps usecase. Initially, I was using &lt;a href=&#34;https://raw.githubusercontent.com/hoarder-app/hoarder/main/getpocket.com&#34;&gt;Pocket&lt;/a&gt; for that. Then I got into self-hosting and I wanted to self-host this usecase. I used &lt;a href=&#34;https://github.com/usememos/memos&#34;&gt;memos&lt;/a&gt; for those quick notes and I loved it but it was lacking some features that I found important for that usecase such as link previews and automatic tagging (more on that in the next section).&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m a systems engineer in my day job (and have been for the past 7 years). I didn&#39;t want to get too detached from the web development world. I decided to build this app as a way to keep my hand dirty with web development, and at the same time, build something that I care about and use every day.&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usememos/memos&#34;&gt;memos&lt;/a&gt;: I love memos. I have it running on my home server and it&#39;s one of my most used self-hosted apps. It doesn&#39;t, however, archive or preview the links shared in it. It&#39;s just that I dump a lot of links there and I&#39;d have loved if I&#39;d be able to figure which link is that by just looking at my timeline. Also, given the variety of things I dump there, I&#39;d have loved if it does some sort of automatic tagging for what I save there. This is exactly the usecase that I&#39;m trying to tackle with Hoarder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mymind.com/&#34;&gt;mymind&lt;/a&gt;: Mymind is the closest alternative to this project and from where I drew a lot of inspirations. It&#39;s a commercial product though.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raindrop.io&#34;&gt;raindrop&lt;/a&gt;: A polished open source bookmark manager that supports links, images and files. It&#39;s not self-hostable though.&lt;/li&gt; &#xA; &lt;li&gt;Bookmark managers (mostly focused on bookmarking links): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hoarder-app/hoarder/main/getpocket.com&#34;&gt;Pocket&lt;/a&gt;: Pocket is what hooked me into the whole idea of read-it-later apps. I used it &lt;a href=&#34;https://blog.mbassem.com/2019/01/27/favorite-articles-2018/&#34;&gt;a lot&lt;/a&gt;. However, I recently got into home-labbing and became obsessed with the idea of running my services in my home server. Hoarder is meant to be a self-hosting first app.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://linkwarden.app/&#34;&gt;Linkwarden&lt;/a&gt;: An open-source self-hostable bookmark manager that I ran for a bit in my homelab. It&#39;s focused mostly on links and supports collaborative collections.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://omnivore.app/&#34;&gt;Omnivore&lt;/a&gt;: Omnivore is pretty cool open source read-it-later app. Unfortunately, it&#39;s heavily dependent on google cloud infra which makes self-hosting it quite hard. They published a &lt;a href=&#34;https://docs.omnivore.app/self-hosting/self-hosting.html&#34;&gt;blog post&lt;/a&gt; on how to run a minimal omnivore but it was lacking a lot of stuff. Self-hosting doesn&#39;t really seem to be a high priority for them, and that&#39;s something I care about, so I decided to build an alternative.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wallabag.it&#34;&gt;Wallabag&lt;/a&gt;: Wallabag is a well-established open source read-it-later app written in php and I think it&#39;s the common recommendation on reddit for such apps. To be honest, I didn&#39;t give it a real shot, and the UI just felt a bit dated for my liking. Honestly, it&#39;s probably much more stable and feature complete than this app, but where&#39;s the fun in that?&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/go-shiori/shiori&#34;&gt;Shiori&lt;/a&gt;: Shiori is meant to be an open source pocket clone written in Go. It ticks all the marks but doesn&#39;t have my super sophisticated AI-based tagging. (JK, I only found about it after I decided to build my own app, so here we are ü§∑).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#hoarder-app/hoarder&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=hoarder-app/hoarder&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>normal-computing/fuji-web</title>
    <updated>2024-05-27T01:35:15Z</updated>
    <id>tag:github.com,2024-05-27:/normal-computing/fuji-web</id>
    <link href="https://github.com/normal-computing/fuji-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fuji is an AI agent that lives in your browser&#39;s sidepanel. You can now get tasks done online with a single command!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/normal-computing/fuji-web/main/public/icon-128.png&#34; alt=&#34;Fuji-web Logo&#34; width=&#34;100&#34;&gt; &#xA;&lt;h1&gt;Fuji-Web: AI based Full Browser Automation üóª&lt;/h1&gt; &#xA;&lt;p&gt;Fuji-Web is an intelligent AI partner that understands the user‚Äôs intent, navigates websites autonomously, and executes tasks on the user‚Äôs behalf while explaining each action step.&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/normal-computing/fuji-web/assets/1001890/88a2fa12-31d9-4856-be67-27dcf9f1e634&#34;&gt;https://github.com/normal-computing/fuji-web/assets/1001890/88a2fa12-31d9-4856-be67-27dcf9f1e634&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please read &lt;a href=&#34;https://blog.normalcomputing.ai/posts/2024-05-22-introducing-fuji-web/fuji-web.html&#34;&gt;our blog post&lt;/a&gt; for a demo video, benchmarks and deep-dive technical overview!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing and Running&lt;/h2&gt; &#xA;&lt;h3&gt;Download and Install the extension in your browser&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://github.com/normal-computing/fuji-web/releases&#34;&gt;releases page&lt;/a&gt;, find the latest version of the extension and download &#34;fuji-extension.zip&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Unzip the file.&lt;/li&gt; &#xA; &lt;li&gt;Load your extension on Chrome by doing the following: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Navigate to &lt;code&gt;chrome://extensions/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle &lt;code&gt;Developer mode&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Click on &lt;code&gt;Load unpacked extension&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Select the unzipped folder&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Use the extension&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note that you may need to refresh the page for the extension to work.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find the Fuji icon in the top right corner of your browser and click on it to open the sidepanel.&lt;/li&gt; &#xA; &lt;li&gt;Create or access an existing &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API Key&lt;/a&gt; and paste it in the provided box. This key will be stored in your browser, and will not be uploaded to a third party.&lt;/li&gt; &#xA; &lt;li&gt;Finally, navigate to a webpage you want Fuji-Web and type in the task you want it to perform.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: all prompts (text and image) are sent directly to the API of your selection. Fuji-Web does not attempt to collect any information from you.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build the extension&lt;/h3&gt; &#xA;&lt;p&gt;If you want to build the extension from source, follow these instructions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure you have &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt;. The development was done on Node v20 but it should work with some lower versions.&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;pnpm&lt;/code&gt; globally: &lt;code&gt;npm install -g pnpm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pnpm dev&lt;/code&gt; to start the development server, or &lt;code&gt;pnpm build&lt;/code&gt; to build the extension.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When loading the extension, you will need to load the &lt;code&gt;dist&lt;/code&gt; folder created by the build process.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Expose API for easy integration with browser automation frameworks (e.g. Puppeteer, Playwright, Selenium)&lt;/li&gt; &#xA; &lt;li&gt;Add support for more complex &amp;amp; cross-tab workflows&lt;/li&gt; &#xA; &lt;li&gt;Add support for more browsing behaviors (select from dropdown, extract content from entire page etc.)&lt;/li&gt; &#xA; &lt;li&gt;Add support for saving workflows&lt;/li&gt; &#xA; &lt;li&gt;Add support for sharing workflows &amp;amp; instructions with others&lt;/li&gt; &#xA; &lt;li&gt;Create wikipedia-like knowledge base where users can work together to create knowledge that can improve the Fuji-Web&#39;s performance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/normal-computing/fuji-web/main/TROUBLESHOOTING.md&#34;&gt;Troubleshooting Guide&lt;/a&gt; for help with common problems.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in contributing to Fuji-Web? We&#39;d love your help! Check out our &lt;a href=&#34;https://raw.githubusercontent.com/normal-computing/fuji-web/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; for guidelines on how to contribute, report bugs, suggest enhancements, and more.&lt;/p&gt; &#xA;&lt;p&gt;We also have set up a dedicated channel for Fuji-Web feedback on Discord at &lt;a href=&#34;https://discord.gg/yfMjZ8udb5&#34;&gt;https://discord.gg/yfMjZ8udb5&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fuji-Web&#39;s image annotation method was inspired by Microsoft&#39;s &lt;a href=&#34;https://arxiv.org/abs/2402.07939&#34;&gt;UFO paper&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fuji as a tool that lives in the browser sidepanel was inspired by &lt;a href=&#34;https://github.com/TaxyAI/browser-extension&#34;&gt;TaxyAI&#39;s browser extension&lt;/a&gt;. We also used some of its UI code.&lt;/li&gt; &#xA; &lt;li&gt;The Chrome extension set-up leveraged an awesome boilerplate project &lt;a href=&#34;https://github.com/Jonghakseo/chrome-extension-boilerplate-react-vite&#34;&gt;Jonghakseo/chrome-extension-boilerplate-react-vite&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The Fuji logo is from &lt;a href=&#34;https://emojipedia.org/toss-face&#34;&gt;Toss Face&lt;/a&gt; Emoji design set.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>