<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-10T01:38:17Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rsrohan99/rag-stream-intermediate-events-tutorial</title>
    <updated>2024-04-10T01:38:17Z</updated>
    <id>tag:github.com,2024-04-10:/rsrohan99/rag-stream-intermediate-events-tutorial</id>
    <link href="https://github.com/rsrohan99/rag-stream-intermediate-events-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tutorial on how to properly send intermediate LlamaIndex events to vercel ai sdk via server-sent events during RAG.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;In this tutorial, we&#39;ll see how to use LlamaIndex Instrumentation module to send intermediate steps in a RAG pipeline to the frontend for an intuitive user experience.&lt;/p&gt; &#xA;&lt;p&gt;Full video tutorial under 3 minutes ðŸ”¥ðŸ‘‡&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JOM8WgmNCvI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/JOM8WgmNCvI/maxresdefault.jpg&#34; alt=&#34;Stream Intermediate events in RAG&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We use Server-Sent Events which will be recieved by Vercel AI SDK on the frontend.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First clone the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/rsrohan99/rag-stream-intermediate-events-tutorial.git&#xA;&#xA;cd rag-stream-intermediate-events-tutorial&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start the Backend&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;backend&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd backend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;First create &lt;code&gt;.env&lt;/code&gt; from &lt;code&gt;.env.example&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set the OpenAI key in .env&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=****&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install the dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generate the Index for the first time&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run python app/engine/generate.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the backend server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;poetry run python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Start the Frontend&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;frontend&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;First create &lt;code&gt;.env&lt;/code&gt; from &lt;code&gt;.env.example&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install the dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the frontend server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jeffvli/feishin</title>
    <updated>2024-04-10T01:38:17Z</updated>
    <id>tag:github.com,2024-04-10:/jeffvli/feishin</id>
    <link href="https://github.com/jeffvli/feishin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern self-hosted music player.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/assets/icons/icon.png&#34; alt=&#34;logo&#34; title=&#34;feishin&#34; align=&#34;right&#34; height=&#34;60px&#34;&gt; &#xA;&lt;h1&gt;Feishin&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jeffvli/feishin/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/jeffvli/feishin?style=flat-square&amp;amp;color=brightgreen&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/jeffvli/feishin/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/jeffvli/feishin?style=flat-square&amp;amp;color=blue&#34; alt=&#34;Release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/jeffvli/feishin/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/jeffvli/feishin/total?style=flat-square&amp;amp;color=orange&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/FVKpcMDy5f&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/922656312888811530?color=black&amp;amp;label=discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#sonixd:matrix.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/matrix/sonixd:matrix.org?color=black&amp;amp;label=matrix&amp;amp;logo=matrix&amp;amp;logoColor=white&#34; alt=&#34;Matrix&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Rewrite of &lt;a href=&#34;https://github.com/jeffvli/sonixd&#34;&gt;Sonixd&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MPV player backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Web player backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Modern UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Scrobble playback to your server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Smart playlist editor (Navidrome)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Synchronized and unsynchronized lyrics support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/jeffvli/feishin/issues&#34;&gt;Request a feature&lt;/a&gt; or &lt;a href=&#34;https://github.com/users/jeffvli/projects/5/views/1&#34;&gt;view taskboard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_full_screen_player.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_full_screen_player.png&#34; width=&#34;49.5%&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_album_artist_detail.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_album_artist_detail.png&#34; width=&#34;49.5%&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_album_detail.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_album_detail.png&#34; width=&#34;49.5%&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_smart_playlist.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jeffvli/feishin/development/media/preview_smart_playlist.png&#34; width=&#34;49.5%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Desktop (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;Download the &lt;a href=&#34;https://github.com/jeffvli/feishin/releases&#34;&gt;latest desktop client&lt;/a&gt;. The desktop client is the recommended way to use Feishin. It supports both the MPV and web player backends, as well as includes built-in fetching for lyrics.&lt;/p&gt; &#xA;&lt;h4&gt;MacOS Notes&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re using a device running macOS 12 (Monterey) or higher, &lt;a href=&#34;https://github.com/jeffvli/feishin/issues/104#issuecomment-1553914730&#34;&gt;check here&lt;/a&gt; for instructions on how to remove the app from quarantine.&lt;/p&gt; &#xA;&lt;p&gt;For media keys to work, you will be prompted to allow Feishin to be a Trusted Accessibility Client. After allowing, you will need to restart Feishin for the privacy settings to take effect.&lt;/p&gt; &#xA;&lt;h3&gt;Web and Docker&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://feishin.vercel.app&#34;&gt;https://feishin.vercel.app&lt;/a&gt; to use the hosted web version of Feishin. The web client only supports the web player backend.&lt;/p&gt; &#xA;&lt;p&gt;Feishin is also available as a Docker image. The images are hosted via &lt;code&gt;ghcr.io&lt;/code&gt; and are available to view &lt;a href=&#34;https://github.com/jeffvli/feishin/pkgs/container/feishin&#34;&gt;here&lt;/a&gt;. You can run the container using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run the latest version&#xA;docker run --name feishin -p 9180:9180 ghcr.io/jeffvli/feishin:latest&#xA;&#xA;# Build the image locally&#xA;docker build -t feishin .&#xA;docker run --name feishin -p 9180:9180 feishin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Upon startup you will be greeted with a prompt to select the path to your MPV binary. If you do not have MPV installed, you can download it &lt;a href=&#34;https://mpv.io/installation/&#34;&gt;here&lt;/a&gt; or install it using any package manager supported by your OS. After inputting the path, restart the app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After restarting the app, you will be prompted to select a server. Click the &lt;code&gt;Open menu&lt;/code&gt; button and select &lt;code&gt;Manage servers&lt;/code&gt;. Click the &lt;code&gt;Add server&lt;/code&gt; button in the popup and fill out all applicable details. You will need to enter the full URL to your server, including the protocol and port if applicable (e.g. &lt;code&gt;https://navidrome.my-server.com&lt;/code&gt; or &lt;code&gt;http://192.168.0.1:4533&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Navidrome&lt;/strong&gt; - For the best experience, select &#34;Save password&#34; when creating the server and configure the &lt;code&gt;SessionTimeout&lt;/code&gt; setting in your Navidrome config to a larger value (e.g. 72h). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Linux users&lt;/strong&gt; - The default password store uses &lt;code&gt;libsecret&lt;/code&gt;. &lt;code&gt;kwallet4/5/6&lt;/code&gt; are also supported, but must be explicitly set in Settings &amp;gt; Window &amp;gt; Passwords/secret score.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Optional&lt;/em&gt; - If you want to host Feishin on a subpath (not &lt;code&gt;/&lt;/code&gt;), then pass in the following environment variable: &lt;code&gt;PUBLIC_PATH=PATH&lt;/code&gt;. For example, to host on &lt;code&gt;/feishin&lt;/code&gt;, pass in &lt;code&gt;PUBLIC_PATH=/feishin&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Optional&lt;/em&gt; - To hard code the server url, pass the following environment variables: &lt;code&gt;SERVER_NAME&lt;/code&gt;, &lt;code&gt;SERVER_TYPE&lt;/code&gt; (one of &lt;code&gt;jellyfin&lt;/code&gt; or &lt;code&gt;navidrome&lt;/code&gt;), &lt;code&gt;SERVER_URL&lt;/code&gt;. To prevent users from changing these settings, pass &lt;code&gt;SERVER_LOCK=true&lt;/code&gt;. This can only be set if all three of the previous values are set.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;MPV is either not working or is rapidly switching between pause/play states&lt;/h3&gt; &#xA;&lt;p&gt;First thing to do is check that your MPV binary path is correct. Navigate to the settings page and re-set the path and restart the app. If your issue still isn&#39;t resolved, try reinstalling MPV. Known working versions include &lt;code&gt;v0.35.x&lt;/code&gt; and &lt;code&gt;v0.36.x&lt;/code&gt;. &lt;code&gt;v0.34.x&lt;/code&gt; is a known broken version.&lt;/p&gt; &#xA;&lt;h3&gt;What music servers does Feishin support?&lt;/h3&gt; &#xA;&lt;p&gt;Feishin supports any music server that implements a &lt;a href=&#34;https://www.navidrome.org/&#34;&gt;Navidrome&lt;/a&gt; or &lt;a href=&#34;https://jellyfin.org/&#34;&gt;Jellyfin&lt;/a&gt; API. &lt;strong&gt;Subsonic API is not currently supported&lt;/strong&gt;. This will likely be added in &lt;a href=&#34;https://support.symfonium.app/t/subsonic-servers-participation/1233&#34;&gt;later when the new Subsonic API is decided on&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/navidrome/navidrome&#34;&gt;Navidrome&lt;/a&gt; version 0.48.0 and newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jellyfin/jellyfin&#34;&gt;Jellyfin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://funkwhale.audio/&#34;&gt;Funkwhale&lt;/a&gt; - TBD&lt;/li&gt; &#xA; &lt;li&gt;Subsonic-compatible servers - TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Built and tested using Node &lt;code&gt;v16.15.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project is built off of &lt;a href=&#34;https://github.com/electron-react-boilerplate/electron-react-boilerplate&#34;&gt;electron-react-boilerplate&lt;/a&gt; v4.6.0.&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://hosted.weblate.org/projects/feishin/&#34;&gt;Weblate&lt;/a&gt; for translations. If you would like to contribute, please visit the link and submit a translation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jeffvli/feishin/raw/dev/LICENSE&#34;&gt;GNU General Public License v3.0 Â©&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>