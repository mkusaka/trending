<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-19T01:47:19Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rocketseat-education/nlw-12-spacetime-ignite</title>
    <updated>2023-05-19T01:47:19Z</updated>
    <id>tag:github.com,2023-05-19:/rocketseat-education/nlw-12-spacetime-ignite</id>
    <link href="https://github.com/rocketseat-education/nlw-12-spacetime-ignite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aplicação de recordação de memórias desenvolvida no NLW 12&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Rocketseat Education&#34; src=&#34;https://avatars.githubusercontent.com/u/69590972?s=200&amp;amp;v=4&#34; width=&#34;100px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Rocketseat&amp;amp;message=Education&amp;amp;color=8257e5&amp;amp;labelColor=202024&#34; alt=&#34;Rocketseat Project&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rocketseat-education/nlw-12-spacetime-ignite/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=License&amp;amp;message=MIT&amp;amp;color=8257e5&amp;amp;labelColor=202024&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;💻 Projeto&lt;/h2&gt; &#xA;&lt;p&gt;Aplicação de recordação de memórias, onde o usuário poderá adicionar à uma timeline textos, fotos e vídeos de acontecimentos marcantes da sua vida, organizados por mês e ano.&lt;/p&gt; &#xA;&lt;h2&gt;📝 Licença&lt;/h2&gt; &#xA;&lt;p&gt;Esse projeto está sob a licença MIT. Veja o arquivo &lt;a href=&#34;https://raw.githubusercontent.com/rocketseat-education/nlw-12-spacetime-ignite/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; para mais detalhes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Feito com 💜 by Rocketseat &lt;/p&gt; &#xA;&lt;!--START_SECTION:footer--&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/rocketseat&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://storage.googleapis.com/golden-wind/comunidade/rodape.svg?sanitize=true&#34; alt=&#34;banner&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--END_SECTION:footer--&gt;</summary>
  </entry>
  <entry>
    <title>creatorsgarten/kaogeek-discord-bot</title>
    <updated>2023-05-19T01:47:19Z</updated>
    <id>tag:github.com,2023-05-19:/creatorsgarten/kaogeek-discord-bot</id>
    <link href="https://github.com/creatorsgarten/kaogeek-discord-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Discord bot for KaoGeek, built with TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kao.Geek bot&lt;/h1&gt; &#xA;&lt;p&gt;Discord bot for KaoGeek, built with TypeScript and &lt;a href=&#34;https://discord.js.org&#34;&gt;discord.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to use same node version as specified in &lt;code&gt;.nvmrc&lt;/code&gt; by using &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvm use&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If not installed, use &lt;code&gt;nvm install&lt;/code&gt; to install specified version in &lt;code&gt;.nvmrc&lt;/code&gt; (at the time of writing &lt;code&gt;lts/hydrogen&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Discord Bot &amp;amp; Server Setup (For Development)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Open Discord app, create your own Discord server for bot development&lt;/summary&gt;&#xA;   &lt;img width=&#34;416&#34; alt=&#34;00&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/7cfc809c-42b0-4587-8ed7-113ffa4a8edd&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt;&#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Right click at your server&#39;s icon, copy server ID (This will be &lt;code&gt;GUILD_ID&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt;)&lt;/summary&gt;&#xA;   &lt;img width=&#34;191&#34; alt=&#34;01-copy-server-id&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/86d029de-16a6-4686-ae7d-9586f522e956&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt; Right clict at your text channel, copy channel ID (This will be &lt;code&gt;MOD_CHANNEL_ID&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt;)&lt;/summary&gt;&#xA;   &lt;img width=&#34;332&#34; alt=&#34;4&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/a0c19b2f-6985-4fa4-bda1-030a3679bac4&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Go to &lt;a href=&#34;https://discord.com/developerQs/applications&#34; target=&#34;_blank&#34;&gt;Discord Developer Portal&lt;/a&gt; and create a new application, name it whatever you want&lt;/summary&gt;&#xA;   &lt;img width=&#34;1259&#34; alt=&#34;1&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/a6b79d46-ca2c-4dad-8ed0-e419cbe8dda7&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Go to your application&#39;s &lt;code&gt;Bot&lt;/code&gt; tab get the bot&#39;s token by clicking &lt;code&gt;Reset Token&lt;/code&gt; button, copy the token and keep it save, don&#39;t share this to anyone! (This will be &lt;code&gt;BOT_TOKEN&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt;)&lt;/summary&gt;&#xA;   &lt;img width=&#34;758&#34; alt=&#34;2&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/dcbba104-d60d-421e-adeb-e43f5fcebe87&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;In the same window under the &lt;code&gt;Privileged Gateway Intents&lt;/code&gt; section, enable &lt;code&gt;PRESENCE INTENT&lt;/code&gt;, &lt;code&gt;SERVER MEMBERS INTENT&lt;/code&gt;, and &lt;code&gt;MESSAGE CONTENT INTENT&lt;/code&gt;&lt;/summary&gt;&#xA;   &lt;img width=&#34;1246&#34; alt=&#34;3&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/c080d952-3407-4b0d-9dca-0ae338f08aab&#34;&gt;&#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt;&#xA;   &lt;summary&gt;Go to &lt;code&gt;OAuth2&lt;/code&gt; -&amp;gt; &lt;code&gt;URL Generator&lt;/code&gt; tab, select &lt;code&gt;bot&lt;/code&gt; and &lt;code&gt;applications.commands&lt;/code&gt; scopes, then select permissions under &lt;code&gt;Bot Permissions&lt;/code&gt; section, copy the generated URL and paste it in your browser, then choose your server to add the bot.&lt;/summary&gt;&#xA;   &lt;img width=&#34;1250&#34; alt=&#34;5&#34; src=&#34;https://github.com/narze/kaogeek-discord-bot/assets/248741/51727677-ff83-4103-a5c7-9e4e4a36284e&#34;&gt;&#xA;  &lt;/details&gt; You can set to &lt;code&gt;Administrator&lt;/code&gt; for ease of development, but it&#39;s not recommended for production. &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then, set all variables in &lt;code&gt;.env&lt;/code&gt; file&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;ENV Variables&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;BOT_TOKEN&lt;/code&gt; Discord bot token&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;GUILD_ID&lt;/code&gt; Discord server ID&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;MOD_CHANNEL_ID&lt;/code&gt; Discord channel ID for bot to report moderation actions&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;DATABASE_URL&lt;/code&gt; Prisma database URL, you can use SQLite for development, set it to &lt;code&gt;file:./dev.db&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run the bot in development mode&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run with Docker &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t kaogeek-discord-bot .&#xA;docker run -d --env-file=.env --name kaogeek-discord-bot kaogeek-discord-bot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run with Node &lt;pre&gt;&lt;code&gt;pnpm install&#xA;pnpm build&#xA;pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>r2d4/react-llm</title>
    <updated>2023-05-19T01:47:19Z</updated>
    <id>tag:github.com,2023-05-19:/r2d4/react-llm</id>
    <link href="https://github.com/r2d4/react-llm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy-to-use headless React Hooks to run LLMs in the browser with WebGPU. Just useLLM().&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@react-llm/headless&lt;/h1&gt; &#xA;&lt;p&gt;Easy-to-use headless React Hooks to run LLMs in the browser with WebGPU. As simple as &lt;code&gt;useLLM()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://chat.matt-rickard.com&#34;&gt;&lt;strong&gt;Live Demo&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/assets/demo.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://lmsys.org/blog/2023-03-30-vicuna/&#34;&gt;Vicuna 13B&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use custom system prompts and &#34;user:&#34;/&#34;assistant:&#34; role names&lt;/li&gt; &#xA; &lt;li&gt;Completion options like &lt;code&gt;max tokens&lt;/code&gt; and &lt;code&gt;stop sequences&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;No data leaves the browser. Accelerated via WebGPU.&lt;/li&gt; &#xA; &lt;li&gt;Hooks built to &#39;Bring your own UI&#39;&lt;/li&gt; &#xA; &lt;li&gt;Persistent storage for conversations in browser storage. Hooks for loading and saving conversations.&lt;/li&gt; &#xA; &lt;li&gt;Model caching for faster subsequent loads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @react-llm/headless&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Packages in this repository&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/packages/model&#34;&gt;@react-llm/model&lt;/a&gt; - The LLM model and tokenizer compiled for the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/packages/retro-ui&#34;&gt;@react-llm/retro-ui&lt;/a&gt; - Retro-themed UI for the hooks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/packages/extension&#34;&gt;@react-llm/extension&lt;/a&gt; - Chrome Extension that uses the hooks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/packages/headless&#34;&gt;@react-llm/headless&lt;/a&gt; - Headless React Hooks for running LLMs in the browser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;useLLM&lt;/strong&gt; API&lt;/h2&gt; &#xA;&lt;h3&gt;Types&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;// Model Initialization&#xA;init: () =&amp;gt; void;&#xA;&#xA;// Model Generation&#xA;send: (msg: string, maxTokens: number, stopSequences: string[]) =&amp;gt; void;&#xA;onMessage: (msg: GenerateTextResponse) =&amp;gt; void;&#xA;setOnMessage: (cb: (msg: GenerateTextResponse) =&amp;gt; void) =&amp;gt; void;&#xA;&#xA;// Model Status&#xA;loadingStatus: InitProgressReport;&#xA;isGenerating: boolean;&#xA;gpuDevice: GPUDeviceInfo;&#xA;&#xA;// Model Configuration&#xA;userRoleName: string;&#xA;setUserRoleName: (roleName: string) =&amp;gt; void;&#xA;assistantRoleName: string;&#xA;setAssistantRoleName: (roleName: string) =&amp;gt; void;&#xA;&#xA;// Conversation Management&#xA;conversation: Conversation | undefined;&#xA;allConversations: Conversation[] | undefined;&#xA;createConversation: (title?: string, prompt?: string) =&amp;gt; void;&#xA;setConversationId: (conversationId: string) =&amp;gt; void;&#xA;deleteConversation: (conversationId: string) =&amp;gt; void;&#xA;deleteAllConversations: () =&amp;gt; void;&#xA;deleteMessages: () =&amp;gt; void;&#xA;setConversationTitle: (conversationId: string, title: string) =&amp;gt; void;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hooks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import useLLM from &#39;@react-llm/headless&#39;;&#xA;&#xA;const MyComponent = () =&amp;gt; {&#xA;  const {&#xA;    conversation,&#xA;    allConversations,&#xA;    loadingStatus,&#xA;    isGenerating,&#xA;    createConversation,&#xA;    setConversationId,&#xA;    deleteConversation,&#xA;    deleteAllConversations,&#xA;    deleteMessages,&#xA;    setConversationTitle,&#xA;    onMessage,&#xA;    setOnMessage,&#xA;    userRoleName,&#xA;    setUserRoleName,&#xA;    assistantRoleName,&#xA;    setAssistantRoleName,&#xA;    gpuDevice,&#xA;    send,&#xA;    init,&#xA;  } = useLLM();&#xA;&#xA;  // Component logic...&#xA;&#xA;  return null;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@react-llm/headless&lt;/code&gt; - Headless React Hooks for running LLMs in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@react-llm/retro-ui&lt;/code&gt; - Retro-themed UI for the hooks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;This library is a set of React Hooks that provide a simple interface to run LLMs in the browser. It uses Vicuna 13B.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SentencePiece tokenizer (compiled for the browser via Emscripten)&lt;/li&gt; &#xA; &lt;li&gt;Vicuna 13B (transformed to Apache TVM format)&lt;/li&gt; &#xA; &lt;li&gt;Apache TVM and MLC Relax (compiled for the browser via Emscripten)&lt;/li&gt; &#xA; &lt;li&gt;Off-the-main-thread WebWorker to run the model (bundled with the library)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The model, tokenizer, and TVM runtime are loaded from a CDN (huggingface). The model is cached in browser storage for faster subsequent loads.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/r2d4/react-llm/main/packages/retro-ui&#34;&gt;packages/retro-ui&lt;/a&gt; for the full demo code. This is a simple example of how to use the hooks. To run it, after cloning the repo,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd packages/retro-ui&#xA;pnpm install&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;The code under &lt;code&gt;packages/headless/worker/lib/tvm&lt;/code&gt; is licensed under Apache 2.0.&lt;/p&gt;</summary>
  </entry>
</feed>