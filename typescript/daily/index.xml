<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-09T01:38:08Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>executeautomation/mcp-playwright</title>
    <updated>2025-03-09T01:38:08Z</updated>
    <id>tag:github.com,2025-03-09:/executeautomation/mcp-playwright</id>
    <link href="https://github.com/executeautomation/mcp-playwright" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository contains Playwright Model Context Protocol to automate Browser and APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Playwright MCP Server üé≠&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smithery.ai/server/@executeautomation/playwright-mcp-server&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/@executeautomation/playwright-mcp-server&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Model Context Protocol server that provides browser automation capabilities using Playwright. This server enables LLMs to interact with web pages, take screenshots, and execute JavaScript in a real browser environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://glama.ai/mcp/servers/yh4lgtwgbe&#34;&gt;&lt;img width=&#34;380&#34; height=&#34;200&#34; src=&#34;https://glama.ai/mcp/servers/yh4lgtwgbe/badge&#34; alt=&#34;mcp-playwright MCP server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/executeautomation/mcp-playwright/main/image/playwright_claude.png&#34; alt=&#34;Playwright + Claude&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://executeautomation.github.io/mcp-playwright/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://executeautomation.github.io/mcp-playwright/docs/playwright-web/Supported-Tools&#34;&gt;API reference&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install the package using either npm, mcp-get, or Smithery:&lt;/p&gt; &#xA;&lt;p&gt;Using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @executeautomation/playwright-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using mcp-get:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx @michaellatman/mcp-get@latest install @executeautomation/playwright-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using Smithery&lt;/p&gt; &#xA;&lt;p&gt;To install Playwright MCP for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/@executeautomation/playwright-mcp-server&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install @executeautomation/playwright-mcp-server --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration to use Playwright Server&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s the Claude Desktop configuration to use the Playwright server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;playwright&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;-y&#34;, &#34;@executeautomation/playwright-mcp-server&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#executeautomation/mcp-playwright&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=executeautomation/mcp-playwright&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>arc53/DocsGPT</title>
    <updated>2025-03-09T01:38:08Z</updated>
    <id>tag:github.com,2025-03-09:/arc53/DocsGPT</id>
    <link href="https://github.com/arc53/DocsGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chatbot for documentation, that allows you to chat with your data. Privately deployable, provides AI knowledge sharing and integrates knowledge into your AI workflow&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; DocsGPT ü¶ñ &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Open-Source RAG Assistant&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://www.docsgpt.cloud/&#34;&gt;DocsGPT&lt;/a&gt;&lt;/strong&gt; is an open-source genAI tool that helps users get reliable answers from any knowledge source, while avoiding hallucinations. It enables quick and reliable information retrieval, with tooling and agentic system capability built in. &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/arc53/DocsGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/arc53/docsgpt?style=social&#34; alt=&#34;link to main GitHub showing Stars number&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arc53/DocsGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/arc53/docsgpt?style=social&#34; alt=&#34;link to main GitHub showing Forks number&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arc53/DocsGPT/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/arc53/docsgpt&#34; alt=&#34;link to license file&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bestpractices.dev/projects/9907&#34;&gt;&lt;img src=&#34;https://www.bestpractices.dev/projects/9907/badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/n5BX8dh8rU&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1070046503302877216&#34; alt=&#34;link to discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/docsgptai&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/docsgptai&#34; alt=&#34;X (formerly Twitter) URL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.docsgpt.cloud/quickstart&#34;&gt;‚ö°Ô∏è Quickstart&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://app.docsgpt.cloud/&#34;&gt;‚òÅÔ∏è Cloud Version&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://discord.gg/n5BX8dh8rU&#34;&gt;üí¨ Discord&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://docs.docsgpt.cloud/&#34;&gt;üìñ Documentation&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/arc53/DocsGPT/raw/main/CONTRIBUTING.md&#34;&gt;üë´ Contribute&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://blog.docsgpt.cloud/&#34;&gt;üóû Blog&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://d3dg1063dc54p9.cloudfront.net/videos/demov7.gif&#34; alt=&#34;video-example-of-docs-gpt&#34; width=&#34;800&#34; height=&#34;450&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;left&#34;&gt; &lt;strong&gt;Key Features:&lt;/strong&gt; &lt;/h3&gt; &#xA;&lt;ul align=&#34;left&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;üóÇÔ∏è Wide Format Support:&lt;/strong&gt; Reads PDF, DOCX, CSV, XLSX, EPUB, MD, RST, HTML, MDX, JSON, PPTX, and images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üåê Web &amp;amp; Data Integration:&lt;/strong&gt; Ingests from URLs, sitemaps, Reddit, GitHub and web crawlers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;‚úÖ Reliable Answers:&lt;/strong&gt; Get accurate, hallucination-free responses with source citations viewable in a clean UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîë Streamlined API Keys:&lt;/strong&gt; Generate keys linked to your settings, documents, and models, simplifying chatbot and integration setup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîó Actionable Tooling:&lt;/strong&gt; Connect to APIs, tools, and other services to enable LLM actions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üß© Pre-built Integrations:&lt;/strong&gt; Use readily available HTML/React chat widgets, search tools, Discord/Telegram bots, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîå Flexible Deployment:&lt;/strong&gt; Works with major LLMs (OpenAI, Google, Anthropic) and local models (Ollama, llama_cpp).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üè¢ Secure &amp;amp; Scalable:&lt;/strong&gt; Run privately and securely with Kubernetes support, designed for enterprise-grade reliability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Full GoogleAI compatibility (Jan 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add tools (Jan 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Manually updating chunks in the app UI (Feb 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Devcontainer for easy development (Feb 2025)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Anthropic Tool compatibility&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add triggerable actions / tools (webhook)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add OAuth 2.0 authentication for tools and sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Chatbots menu re-design to handle tools, scheduling, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find our full roadmap &lt;a href=&#34;https://github.com/orgs/arc53/projects/2&#34;&gt;here&lt;/a&gt;. Please don&#39;t hesitate to contribute or create issues, it helps us improve DocsGPT!&lt;/p&gt; &#xA;&lt;h3&gt;Production Support / Help for Companies:&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re eager to provide personalized assistance when deploying your DocsGPT to a live environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.docsgpt.cloud/contact&#34;&gt;Get a Demo &lt;span&gt;üëã&lt;/span&gt;&lt;/a&gt;‚Å†&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:support@docsgpt.cloud?subject=DocsGPT%20support%2Fsolutions&#34;&gt;Send Email &lt;span&gt;üìß&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Join the Lighthouse Program üåü&lt;/h2&gt; &#xA;&lt;p&gt;Calling all developers and GenAI innovators! The &lt;strong&gt;DocsGPT Lighthouse Program&lt;/strong&gt; connects technical leaders actively deploying or extending DocsGPT in real-world scenarios. Collaborate directly with our team to shape the roadmap, access priority support, and build enterprise-ready solutions with exclusive community insights.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/forms/d/1KAADiJinUJ8EMQyfTXUIGyFbqINNClNR3jBNWq7DgTE&#34;&gt;Learn More &amp;amp; Apply ‚Üí&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;QuickStart&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] Make sure you have &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt; installed&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A more detailed &lt;a href=&#34;https://docs.docsgpt.cloud/quickstart&#34;&gt;Quickstart&lt;/a&gt; is available in our documentation&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/arc53/DocsGPT.git&#xA;cd DocsGPT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;For macOS and Linux:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the setup script:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This interactive script will guide you through setting up DocsGPT. It offers four options: using the public API, running locally, connecting to a local inference engine, or using a cloud API provider. The script will automatically configure your &lt;code&gt;.env&lt;/code&gt; file and handle necessary downloads and installations based on your chosen option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Windows:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Follow the Docker Deployment Guide:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Please refer to the &lt;a href=&#34;https://docs.docsgpt.cloud/Deploying/Docker-Deploying&#34;&gt;Docker Deployment documentation&lt;/a&gt; for detailed step-by-step instructions on setting up DocsGPT using Docker.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Navigate to &lt;a href=&#34;http://localhost:5173/&#34;&gt;http://localhost:5173/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To stop DocsGPT, open a terminal in the &lt;code&gt;DocsGPT&lt;/code&gt; directory and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f deployment/docker-compose.yaml down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or use the specific &lt;code&gt;docker compose down&lt;/code&gt; command shown after running &lt;code&gt;setup.sh&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] For development environment setup instructions, please refer to the &lt;a href=&#34;https://docs.docsgpt.cloud/Deploying/Development-Environment&#34;&gt;Development Environment Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/arc53/DocsGPT/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for information about how to get involved. We welcome issues, questions, and pull requests.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/fc6a7841-ddfc-45e6-b5a0-d05fe648cbe2&#34; alt=&#34;Architecture chart&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Application - Flask app (main application).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extensions - Extensions, like react widget or discord bot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Frontend - Frontend uses &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt; and &lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scripts - Miscellaneous scripts.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;We as members, contributors, and leaders, pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/arc53/DocsGPT/main/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt; file for more information about contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Many Thanks To Our Contributors‚ö°&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/arc53/DocsGPT/graphs/contributors&#34; alt=&#34;View Contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=arc53/DocsGPT&#34; alt=&#34;Contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The source code license is &lt;a href=&#34;https://opensource.org/license/mit/&#34;&gt;MIT&lt;/a&gt;, as described in the &lt;a href=&#34;https://raw.githubusercontent.com/arc53/DocsGPT/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;This project is supported by:&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.digitalocean.com/?utm_medium=opensource&amp;amp;utm_source=DocsGPT&#34;&gt; &lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&#34; width=&#34;201px&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>takram-design-engineering/three-geospatial</title>
    <updated>2025-03-09T01:38:08Z</updated>
    <id>tag:github.com,2025-03-09:/takram-design-engineering/three-geospatial</id>
    <link href="https://github.com/takram-design-engineering/three-geospatial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Geospatial Rendering in Three.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Geospatial Rendering in Three.js&lt;/h1&gt; &#xA;&lt;p&gt;This repository hosts a prototype of the rendering aspect of a Web GIS engine. It‚Äôs part of Takram‚Äôs client projects, commissioned by a company selected by the Cabinet Office of Japan under the SBIR (Small/Startup Business Innovation Research) program.&lt;/p&gt; &#xA;&lt;p&gt;Since the Web GIS engine is planned to be developed as an open-source project, this prototype is also being developed openly. While it‚Äôs uncertain whether we can provide long-term maintenance, we hope this work proves to be valuable.&lt;/p&gt; &#xA;&lt;p&gt;Our contribution to the project is scheduled to conclude by March 2025.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;NPM&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/packages/atmosphere&#34;&gt;atmosphere&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An implementation of Precomputed Atmospheric Scattering&lt;/td&gt; &#xA;   &lt;td&gt;Beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@takram/three-atmosphere&#34;&gt;@takram/three-atmosphere&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/packages/clouds&#34;&gt;clouds&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Geospatial volumetric clouds&lt;/td&gt; &#xA;   &lt;td&gt;Beta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@takram/three-clouds&#34;&gt;@takram/three-clouds&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/packages/core&#34;&gt;core&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provides fundamental functions for rendering GIS data&lt;/td&gt; &#xA;   &lt;td&gt;Alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@takram/three-geospatial&#34;&gt;@takram/three-geospatial&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/packages/effects&#34;&gt;effects&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A collection of post-processing effects&lt;/td&gt; &#xA;   &lt;td&gt;Alpha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@takram/three-geospatial-effects&#34;&gt;@takram/three-geospatial-effects&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Other packages not listed above are considered ‚Äúexamples‚Äù and are not intended for production use.&lt;/p&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses a monorepo setup with &lt;a href=&#34;https://nx.dev&#34;&gt;Nx&lt;/a&gt;. Please refer to its documentation for details of the concept.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;packages&lt;/code&gt; directory contains the publishable NPM packages listed above.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;storybook&lt;/code&gt; directory contains &lt;a href=&#34;https://storybook.js.org&#34;&gt;Storybook&lt;/a&gt; stories across the libraries. The stories are separated from the libraries to avoid circular dependencies. Story files and components are also separated to enable fast-refresh, which only supports files containing components only.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;apps&lt;/code&gt; directory contains standalone applications.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;data&lt;/code&gt;: A command-line app for generating data.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:takram-design-engineering/three-geospatial.git&#xA;cd three-geospatial&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://git-lfs.com&#34;&gt;Git LFS&lt;/a&gt; for assets. You may need to &lt;a href=&#34;https://docs.github.com/en/repositories/working-with-files/managing-large-files/installing-git-large-file-storage&#34;&gt;install it&lt;/a&gt; and pull/fetch the assets using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git lfs pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Project level commands are defined in &lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/project.json&#34;&gt;&lt;code&gt;project.json&lt;/code&gt;&lt;/a&gt;. Although library and app-specific commands are defined in the respective &lt;code&gt;project.json&lt;/code&gt;, most of them are inferred targets, and you may need to run &lt;code&gt;nx show project {name}&lt;/code&gt; to see them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nx storybook&lt;/code&gt;: Run Storybook locally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx build&lt;/code&gt;: Build all libraries and apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx build-libs&lt;/code&gt;: Build all libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx build {name}&lt;/code&gt;: Build a specific library or app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx test&lt;/code&gt;: Run unit tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx lint&lt;/code&gt;: Run linter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nx format-all&lt;/code&gt;: Run prettier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory with the following variables:&lt;/p&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;STORYBOOK_GOOGLE_MAP_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developers.google.com/maps/documentation/tile/get-api-key&#34;&gt;Google Maps API key&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;STORYBOOK_ION_API_TOKEN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cesium.com/learn/ion/cesium-ion-access-tokens/&#34;&gt;Cesium Ion API access token&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Formatting and linting&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;nx format-all&lt;/code&gt; to format your source code using Prettier. Ignore files you did not edit, as other files might also be formatted.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;nx lint&lt;/code&gt; to check for non-formatting-related code conventions.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, if you use VS Code, installing the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&#34;&gt;Prettier extension&lt;/a&gt; and &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&#34;&gt;ESLint extension&lt;/a&gt; can help.&lt;/p&gt; &#xA;&lt;h3&gt;Running Storybook&lt;/h3&gt; &#xA;&lt;p&gt;All examples are created as &lt;a href=&#34;https://storybook.js.org&#34;&gt;Storybook&lt;/a&gt; stories, hosted at: &lt;a href=&#34;https://takram-design-engineering.github.io/three-geospatial/&#34;&gt;https://takram-design-engineering.github.io/three-geospatial/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The command below runs Storybook locally on port 4400 by default. You can override the port by adding the &lt;code&gt;--port&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nx storybook&#xA;nx storybook --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some stories use Cesium Ion assets. To display them correctly, search for the following assets in the &lt;a href=&#34;https://ion.cesium.com/assetdepot/&#34;&gt;Asset Depot&lt;/a&gt; and add them to your &lt;a href=&#34;https://ion.cesium.com/assets/&#34;&gt;My Assets&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Asset ID&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cesium World Terrain&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (likely exists by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Japan Regional Terrain&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2767062&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Note on Storybook errors&lt;/h3&gt; &#xA;&lt;p&gt;You may occasionally encounter the following errors, especially when switching branches:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The file does not exist at &#34;...&#34; which is in the optimize deps directory.&#xA;The dependency might be incompatible with the dep optimizer.&#xA;Try adding it to `optimizeDeps.exclude`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or even &lt;code&gt;R3F: Hooks can only be used within the Canvas component!&lt;/code&gt; error in the browser.&lt;/p&gt; &#xA;&lt;p&gt;If the Storybook build succeeded on the commit you‚Äôre currently on in the Github Actions, the problem is likely not in the source or Storybook configuration. I haven‚Äôt found a reliable way to prevent this problem or recover from it reliably.&lt;/p&gt; &#xA;&lt;p&gt;In most cases, removing the Storybook cache, resetting NX, restarting Storybook, and opening the Storybook in a &lt;em&gt;new browser window&lt;/em&gt; will recover from it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm -r storybook/node_modules&#xA;nx reset&#xA;nx storybook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the problem persists, try clearing the browser cache.&lt;/p&gt; &#xA;&lt;h3&gt;Generating a library&lt;/h3&gt; &#xA;&lt;p&gt;To generate a React library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nx generate @nx/react:library --name={name} --bundler=vite --directory=packages/{name} --compiler=swc --importPath={package_name} --style=none --unitTestRunner=jest --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To add a Storybook configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nx generate @nx/storybook:configuration --project={name} --uiFramework=@storybook/react-vite --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/takram-design-engineering/three-geospatial/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>