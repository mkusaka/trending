<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:56:48Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/TypeScript</title>
    <updated>2022-07-15T01:56:48Z</updated>
    <id>tag:github.com,2022-07-15:/microsoft/TypeScript</id>
    <link href="https://github.com/microsoft/TypeScript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TypeScript is a superset of JavaScript that compiles to clean JavaScript output.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TypeScript&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/microsoft/TypeScript/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/typescript/TypeScript/_build?definitionId=7&#34;&gt;&lt;img src=&#34;https://dev.azure.com/typescript/TypeScript/_apis/build/status/Typescript/node10&#34; alt=&#34;Devops Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/typescript&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/typescript.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/typescript&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/typescript.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; is a language for application-scale JavaScript. TypeScript adds optional types to JavaScript that support tools for large-scale JavaScript applications for any browser, for any host, on any OS. TypeScript compiles to readable, standards-based JavaScript. Try it out at the &lt;a href=&#34;https://www.typescriptlang.org/play/&#34;&gt;playground&lt;/a&gt;, and stay up to date via &lt;a href=&#34;https://blogs.msdn.microsoft.com/typescript&#34;&gt;our blog&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/typescript&#34;&gt;Twitter account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find others who are using TypeScript at &lt;a href=&#34;https://www.typescriptlang.org/community/&#34;&gt;our community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;For the latest stable version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For our nightly builds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g typescript@next&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways to &lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt; to TypeScript.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript/issues&#34;&gt;Submit bugs&lt;/a&gt; and help us verify fixes as they are checked in.&lt;/li&gt; &#xA; &lt;li&gt;Review the &lt;a href=&#34;https://github.com/microsoft/TypeScript/pulls&#34;&gt;source code changes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Engage with other TypeScript users and developers on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/typescript&#34;&gt;StackOverflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Help each other in the &lt;a href=&#34;https://discord.gg/typescript&#34;&gt;TypeScript Community Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://twitter.com/search?q=%23TypeScript&#34;&gt;#typescript&lt;/a&gt; discussion on Twitter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/CONTRIBUTING.md&#34;&gt;Contribute bug fixes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read the archived language specification (&lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/doc/TypeScript%20Language%20Specification%20-%20ARCHIVED.docx?raw=true&#34;&gt;docx&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/doc/TypeScript%20Language%20Specification%20-%20ARCHIVED.pdf?raw=true&#34;&gt;pdf&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/doc/spec-ARCHIVED.md&#34;&gt;md&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html&#34;&gt;TypeScript in 5 minutes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/intro.html&#34;&gt;Programming handbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;In order to build the TypeScript compiler, ensure that you have &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Clone a copy of the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/microsoft/TypeScript.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change to the TypeScript directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd TypeScript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://gulpjs.com/&#34;&gt;Gulp&lt;/a&gt; tools and dev dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g gulp&#xA;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use one of the following to build and test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gulp local             # Build the compiler into built/local.&#xA;gulp clean             # Delete the built compiler.&#xA;gulp LKG               # Replace the last known good with the built one.&#xA;                       # Bootstrapping step to be executed when the built compiler reaches a stable state.&#xA;gulp tests             # Build the test infrastructure using the built compiler.&#xA;gulp runtests          # Run tests using the built compiler and test infrastructure.&#xA;                       # You can override the specific suite runner used or specify a test for this command.&#xA;                       # Use --tests=&amp;lt;testPath&amp;gt; for a specific test and/or --runner=&amp;lt;runnerName&amp;gt; for a specific suite.&#xA;                       # Valid runners include conformance, compiler, fourslash, project, user, and docker&#xA;                       # The user and docker runners are extended test suite runners - the user runner&#xA;                       # works on disk in the tests/cases/user directory, while the docker runner works in containers.&#xA;                       # You&#39;ll need to have the docker executable in your system path for the docker runner to work.&#xA;gulp runtests-parallel # Like runtests, but split across multiple threads. Uses a number of threads equal to the system&#xA;                       # core count by default. Use --workers=&amp;lt;number&amp;gt; to adjust this.&#xA;gulp baseline-accept   # This replaces the baseline test results with the results obtained from gulp runtests.&#xA;gulp lint              # Runs eslint on the TypeScript source.&#xA;gulp help              # List the above commands.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node built/local/tsc.js hello.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;For details on our planned features and future direction please refer to our &lt;a href=&#34;https://github.com/microsoft/TypeScript/wiki/Roadmap&#34;&gt;roadmap&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TanStack/query</title>
    <updated>2022-07-15T01:56:48Z</updated>
    <id>tag:github.com,2022-07-15:/TanStack/query</id>
    <link href="https://github.com/TanStack/query" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Powerful asynchronous state management, server-state utilities and data fetching for TS/JS, React, Solid, Svelte and Vue.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://static.scarf.sh/a.png?x-pxid=be2d8a11-9712-4c1d-9963-580b2d4fb133&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tannerlinsley/react-query/raw/beta/media/repo-header.png&#34; alt=&#34;React Query Header&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hooks for fetching, caching and updating asynchronous data in React&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/tweet?button_hashtag=TanStack&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;#TanStack&#34; src=&#34;https://img.shields.io/twitter/url?color=%2308a0e9&amp;amp;label=%23TanStack&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://discord.com/invite/WrRKjPJ&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Discord-TanStack-%235865F2&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/actions?query=workflow%3A%22react-query+tests%22&#34;&gt; &lt;img src=&#34;https://github.com/tannerlinsley/react-query/workflows/react-query%20tests/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://npmjs.com/package/react-query&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/npm/dm/react-query.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://bundlephobia.com/result?p=react-query@latest&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/bundlephobia/minzip/react-query@latest&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#badge&#34;&gt; &lt;img alt=&#34;semantic-release&#34; src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/discussions&#34;&gt; &lt;img alt=&#34;Join the discussion on Github&#34; src=&#34;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://bestofjs.org/projects/react-query&#34;&gt;&lt;img alt=&#34;Best of JS&#34; src=&#34;https://img.shields.io/endpoint?url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=TanStack%2Fquery%26since=daily&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tannerlinsley/react-query&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/stars/tannerlinsley/react-query.svg?style=social&amp;amp;label=Star&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://twitter.com/tannerlinsley&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;amp;label=Follow&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://gitpod.io/from-referrer/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Enjoy this library? Try the entire &lt;a href=&#34;https://tanstack.com&#34;&gt;TanStack&lt;/a&gt;! &lt;a href=&#34;https://github.com/tannerlinsley/react-table&#34;&gt;React Table&lt;/a&gt;, &lt;a href=&#34;https://github.com/tannerlinsley/react-form&#34;&gt;React Form&lt;/a&gt;, &lt;a href=&#34;https://github.com/tannerlinsley/react-charts&#34;&gt;React Charts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visit &lt;a href=&#34;https://tanstack.com/query&#34;&gt;tanstack.com/query&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt; &#xA;&lt;p&gt;Still on &lt;strong&gt;React Query v2&lt;/strong&gt;? No problem! Check out the v2 docs here: &lt;a href=&#34;https://react-query-v2.tanstack.com/&#34;&gt;https://react-query-v2.tanstack.com/&lt;/a&gt;. &lt;br&gt; Would you like to try &lt;strong&gt;React Query v4beta&lt;/strong&gt;? Check out the v4 beta docs here: &lt;a href=&#34;https://react-query-beta.tanstack.com/&#34;&gt;https://react-query-beta.tanstack.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Transport/protocol/backend agnostic data fetching (REST, GraphQL, promises, whatever!)&lt;/li&gt; &#xA; &lt;li&gt;Auto Caching + Refetching (stale-while-revalidate, Window Refocus, Polling/Realtime)&lt;/li&gt; &#xA; &lt;li&gt;Parallel + Dependent Queries&lt;/li&gt; &#xA; &lt;li&gt;Mutations + Reactive Query Refetching&lt;/li&gt; &#xA; &lt;li&gt;Multi-layer Cache + Automatic Garbage Collection&lt;/li&gt; &#xA; &lt;li&gt;Paginated + Cursor-based Queries&lt;/li&gt; &#xA; &lt;li&gt;Load-More + Infinite Scroll Queries w/ Scroll Recovery&lt;/li&gt; &#xA; &lt;li&gt;Request Cancellation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/concurrent-mode-suspense.html&#34;&gt;React Suspense&lt;/a&gt; + Fetch-As-You-Render Query Prefetching&lt;/li&gt; &#xA; &lt;li&gt;Dedicated Devtools&lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=react-query@latest&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/bundlephobia/minzip/react-query@latest&#34;&gt; &lt;/a&gt; (depending on features imported) &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/sponsors/tannerlinsley/&#34;&gt;Become a Sponsor!&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Contributors ✨&lt;/h1&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tannerlinsley.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5580297?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tanner Linsley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=tannerlinsley&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#ideas-tannerlinsley&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#example-tannerlinsley&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#maintenance-tannerlinsley&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/pulls?q=is%3Apr+reviewed-by%3Atannerlinsley&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://cherniavskii.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/13808724?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Cherniavskii&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=cherniavskii&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/issues?q=author%3Acherniavskii&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://twitter.com/tibotiber&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/5635553?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thibaut Tiberghien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=tibotiber&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gargroh&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/42495927?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rohit Garg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#tool-gargroh&#34; title=&#34;Tools&#34;&gt;🔧&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Avi98&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/26133749?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Avinash&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=Avi98&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/issues?q=author%3AAvi98&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/CreativeTechGuy&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/12002072?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jason O&#39;Neill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#maintenance-CreativeTechGuy&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=CreativeTechGuy&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://fb.me/yz&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/14841421?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack Zhao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=bugzpodder&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/issues?q=author%3Abugzpodder&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dpyzo0o&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/24768249?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dpyzo0o&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=dpyzo0o&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jelteliekens&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3418474?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jelte Liekens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=jelteliekens&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jgettings&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/4183742?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jen Gettings&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=jgettings&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/justincy&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1037458?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=justincy&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.marceloalves.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/216782?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcelo Alves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=MarceloAlves&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zorzysty&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5398733?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zorza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=zorzysty&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tkdodo.eu&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1021430?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Dorfmeister&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=tkdodo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=tkdodo&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#maintenance-tkdodo&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/TanStack/query/beta/#question-tkdodo&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/pulls?q=is%3Apr+reviewed-by%3Atkdodo&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://katt.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/459267?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Johansson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=KATT&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.eddyvinck.nl&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/23434753?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eddy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=EddyVinck&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://prateeksurana.me&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21277179?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Prateek Surana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=prateek3255&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/babycourageous&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14936212?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rene Dellefont&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=babycourageous&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=babycourageous&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jvuoti&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3702781?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Janne Vuoti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=jvuoti&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://seaviewlab.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20332397?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arnaud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=arnaudbzn&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=arnaudbzn&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zrwsk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9089600?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Żurawski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-query/commits?author=zrwsk&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;!-- Use the force, Luke --&gt;</summary>
  </entry>
  <entry>
    <title>piotrwitek/react-redux-typescript-guide</title>
    <updated>2022-07-15T01:56:48Z</updated>
    <id>tag:github.com,2022-07-15:/piotrwitek/react-redux-typescript-guide</id>
    <link href="https://github.com/piotrwitek/react-redux-typescript-guide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The complete guide to static typing in &#34;React &amp; Redux&#34; apps using TypeScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;React &amp;amp; Redux in TypeScript - Complete Guide&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;&#34;This guide is a &lt;strong&gt;living compendium&lt;/strong&gt; documenting the most important patterns and recipes on how to use &lt;strong&gt;React&lt;/strong&gt; (and its Ecosystem) in a &lt;strong&gt;functional style&lt;/strong&gt; using &lt;strong&gt;TypeScript&lt;/strong&gt;. It will help you make your code &lt;strong&gt;completely type-safe&lt;/strong&gt; while focusing on &lt;strong&gt;inferring the types from implementation&lt;/strong&gt; so there is less noise coming from excessive type annotations and it&#39;s easier to write and maintain correct types in the long run.&#34;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://spectrum.chat/react-redux-ts&#34;&gt;&lt;img src=&#34;https://withspectrum.github.io/badge/badge.svg?sanitize=true&#34; alt=&#34;Join the community on Spectrum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/react-redux-typescript-guide/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/react-redux-typescript-guide/Lobby&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Found it useful? Want more updates?&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/stargazers&#34;&gt;&lt;strong&gt;Show your support by giving a &lt;span&gt;⭐&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;https://www.buymeacoffee.com/piotrekwitek&#34;&gt; &lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me a Coffee&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.patreon.com/piotrekwitek&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; alt=&#34;Become a Patron&#34; width=&#34;160&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;br&gt;&lt;/p&gt;&#xA; &lt;hr&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;h2&gt;&lt;strong&gt;What&#39;s new?&lt;/strong&gt;&lt;/h2&gt; &#xA; &lt;p&gt;&lt;span&gt;🎉&lt;/span&gt; &lt;em&gt;Now updated to support &lt;strong&gt;TypeScript v4.6&lt;/strong&gt;&lt;/em&gt; &lt;span&gt;🎉&lt;/span&gt; &lt;span&gt;🚀&lt;/span&gt; _Updated to &lt;code&gt;typesafe-actions@5.x&lt;/code&gt; &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; &#xA; &lt;hr&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Goals&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete type safety (with &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/compiler-options.html&#34;&gt;&lt;code&gt;--strict&lt;/code&gt;&lt;/a&gt; flag) without losing type information downstream through all the layers of our application (e.g. no type assertions or hacking with &lt;code&gt;any&lt;/code&gt; type)&lt;/li&gt; &#xA; &lt;li&gt;Make type annotations concise by eliminating redundancy in types using advanced TypeScript Language features like &lt;strong&gt;Type Inference&lt;/strong&gt; and &lt;strong&gt;Control flow analysis&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Reduce repetition and complexity of types with TypeScript focused &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#react-redux-typescript-ecosystem&#34;&gt;complementary libraries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;React, Redux, Typescript Ecosystem&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/piotrwitek/typesafe-actions&#34;&gt;typesafe-actions&lt;/a&gt; - Typesafe utilities for &#34;action-creators&#34; in Redux / Flux Architecture&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/piotrwitek/utility-types&#34;&gt;utility-types&lt;/a&gt; - Collection of generic types for TypeScript, complementing built-in mapped types and aliases - think lodash for reusable types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-scripts&#34;&gt;react-redux-typescript-scripts&lt;/a&gt; - dev-tools configuration files shared between projects based on this guide&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Todo-App playground: &lt;a href=&#34;https://codesandbox.io/s/github/piotrwitek/typesafe-actions/tree/master/codesandbox&#34;&gt;Codesandbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;React, Redux, TypeScript - RealWorld App: &lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-realworld-app&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://react-redux-typescript-realworld-app.netlify.com/&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Playground Project&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://semaphoreci.com/piotrekwitek/react-redux-typescript-guide&#34;&gt;&lt;img src=&#34;https://semaphoreci.com/api/v1/piotrekwitek/react-redux-typescript-guide/branches/master/shields_badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out our Playground Project located in the &lt;code&gt;/playground&lt;/code&gt; folder. It contains all source files of the code examples found in the guide. They are all tested with the most recent version of TypeScript and 3rd party type-definitions (like &lt;code&gt;@types/react&lt;/code&gt; or &lt;code&gt;@types/react-redux&lt;/code&gt;) to ensure the examples are up-to-date and not broken with updated definitions (It&#39;s based on &lt;code&gt;create-react-app --typescript&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Playground project was created so that you can simply clone the repository locally and immediately play around with all the component patterns found in the guide. It will help you to learn all the examples from this guide in a real project environment without the need to create complicated environment setup by yourself.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing Guide&lt;/h2&gt; &#xA;&lt;p&gt;You can help make this project better by contributing. If you&#39;re planning to contribute please make sure to check our contributing guide: &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Funding&lt;/h2&gt; &#xA;&lt;p&gt;You can also help by funding issues. Issues like bug fixes or feature requests can be very quickly resolved when funded through the IssueHunt platform.&lt;/p&gt; &#xA;&lt;p&gt;I highly recommend to add a bounty to the issue that you&#39;re waiting for to increase priority and attract contributors willing to work on it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://issuehunt.io/repos/76996763&#34;&gt;&lt;img src=&#34;https://issuehunt.io/static/embed/issuehunt-button-v1.svg?sanitize=true&#34; alt=&#34;Let&#39;s fund issues in this repository&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;🌟 - &lt;em&gt;New or updated section&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#react-types-cheatsheet&#34;&gt;React Types Cheatsheet&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactfcprops--reactfunctioncomponentprops&#34;&gt;&lt;code&gt;React.FC&amp;lt;Props&amp;gt;&lt;/code&gt; | &lt;code&gt;React.FunctionComponent&amp;lt;Props&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactcomponentprops-state&#34;&gt;&lt;code&gt;React.Component&amp;lt;Props, State&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactcomponenttypeprops&#34;&gt;&lt;code&gt;React.ComponentType&amp;lt;Props&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactcomponentpropstypeof-xxx&#34;&gt;&lt;code&gt;React.ComponentProps&amp;lt;typeof XXX&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactreactelement--jsxelement&#34;&gt;&lt;code&gt;React.ReactElement&lt;/code&gt; | &lt;code&gt;JSX.Element&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactreactnode&#34;&gt;&lt;code&gt;React.ReactNode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactcssproperties&#34;&gt;&lt;code&gt;React.CSSProperties&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactxxxhtmlattributeshtmlxxxelement&#34;&gt;&lt;code&gt;React.XXXHTMLAttributes&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactreacteventhandlerhtmlxxxelement&#34;&gt;&lt;code&gt;React.ReactEventHandler&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reactxxxeventhtmlxxxelement&#34;&gt;&lt;code&gt;React.XXXEvent&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#react&#34;&gt;React&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#function-components---fc&#34;&gt;Function Components - FC&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--counter-component&#34;&gt;- Counter Component&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--counter-component-with-default-props&#34;&gt;- Counter Component with default props&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--spreading-attributes-in-component&#34;&gt;- Spreading attributes in Component&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#class-components&#34;&gt;Class Components&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--class-counter-component&#34;&gt;- Class Counter Component&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--class-component-with-default-props&#34;&gt;- Class Component with default props&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#generic-components&#34;&gt;Generic Components&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--generic-list-component&#34;&gt;- Generic List Component&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#hooks&#34;&gt;Hooks&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--usestate&#34;&gt;- useState&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--usecontext&#34;&gt;- useContext&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--usereducer&#34;&gt;- useReducer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#render-props&#34;&gt;Render Props&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--name-provider-component&#34;&gt;- Name Provider Component&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--mouse-provider-component&#34;&gt;- Mouse Provider Component&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#higher-order-components&#34;&gt;Higher-Order Components&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--hoc-wrapping-a-component&#34;&gt;- HOC wrapping a component&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--hoc-wrapping-a-component-and-injecting-props&#34;&gt;- HOC wrapping a component and injecting props&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--nested-hoc---wrapping-a-component-injecting-props-and-connecting-to-redux-&#34;&gt;- Nested HOC - wrapping a component, injecting props and connecting to redux 🌟&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#redux-connected-components&#34;&gt;Redux Connected Components&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--redux-connected-counter&#34;&gt;- Redux connected counter&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--redux-connected-counter-with-own-props&#34;&gt;- Redux connected counter with own props&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--redux-connected-counter-via-hooks&#34;&gt;- Redux connected counter via hooks&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--redux-connected-counter-with-redux-thunk-integration&#34;&gt;- Redux connected counter with &lt;code&gt;redux-thunk&lt;/code&gt; integration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#context&#34;&gt;Context&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#themecontext&#34;&gt;ThemeContext&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#themeprovider&#34;&gt;ThemeProvider&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#themeconsumer&#34;&gt;ThemeConsumer&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#themeconsumer-in-class-component&#34;&gt;ThemeConsumer in class component&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#redux&#34;&gt;Redux&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#store-configuration&#34;&gt;Store Configuration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#create-global-store-types&#34;&gt;Create Global Store Types&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#create-store&#34;&gt;Create Store&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#action-creators-&#34;&gt;Action Creators 🌟&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#reducers&#34;&gt;Reducers&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#state-with-type-level-immutability&#34;&gt;State with Type-level Immutability&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-reducer&#34;&gt;Typing reducer&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-reducer-with-typesafe-actions&#34;&gt;Typing reducer with &lt;code&gt;typesafe-actions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#testing-reducer&#34;&gt;Testing reducer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#async-flow-with-redux-observable&#34;&gt;Async Flow with &lt;code&gt;redux-observable&lt;/code&gt;&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-epics&#34;&gt;Typing epics&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#testing-epics&#34;&gt;Testing epics&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#selectors-with-reselect&#34;&gt;Selectors with &lt;code&gt;reselect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#connect-with-react-redux&#34;&gt;Connect with &lt;code&gt;react-redux&lt;/code&gt;&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-connected-component&#34;&gt;Typing connected component&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-useselector-and-usedispatch&#34;&gt;Typing &lt;code&gt;useSelector&lt;/code&gt; and &lt;code&gt;useDispatch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#typing-connected-component-with-redux-thunk-integration&#34;&gt;Typing connected component with &lt;code&gt;redux-thunk&lt;/code&gt; integration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#configuration--dev-tools&#34;&gt;Configuration &amp;amp; Dev Tools&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#common-npm-scripts&#34;&gt;Common Npm Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#tsconfigjson&#34;&gt;tsconfig.json&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#tslib&#34;&gt;TSLib&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#eslint&#34;&gt;ESLint&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#eslintrcjs&#34;&gt;.eslintrc.js&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#jest&#34;&gt;Jest&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#jestconfigjson&#34;&gt;jest.config.json&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#jeststubsjs&#34;&gt;jest.stubs.js&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#style-guides&#34;&gt;Style Guides&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#react-styleguidist&#34;&gt;react-styleguidist&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#faq&#34;&gt;FAQ&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#ambient-modules&#34;&gt;Ambient Modules&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#imports-in-ambient-modules&#34;&gt;Imports in ambient modules&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#type-definitions&#34;&gt;Type-Definitions&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#missing-type-definitions-error&#34;&gt;Missing type-definitions error&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#using-custom-dts-files-for-npm-modules&#34;&gt;Using custom &lt;code&gt;d.ts&lt;/code&gt; files for npm modules&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#type-augmentation&#34;&gt;Type Augmentation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#augmenting-library-internal-declarations---using-relative-import&#34;&gt;Augmenting library internal declarations - using relative import&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#augmenting-library-public-declarations---using-node_modules-import&#34;&gt;Augmenting library public declarations - using node_modules import&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#misc&#34;&gt;Misc&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--should-i-still-use-reactproptypes-in-ts&#34;&gt;- should I still use React.PropTypes in TS?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--when-to-use-interface-declarations-and-when-type-aliases&#34;&gt;- when to use &lt;code&gt;interface&lt;/code&gt; declarations and when &lt;code&gt;type&lt;/code&gt; aliases?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--whats-better-default-or-named-exports&#34;&gt;- what&#39;s better default or named exports?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--how-to-best-initialize-class-instance-or-static-properties&#34;&gt;- how to best initialize class instance or static properties?&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--how-to-best-declare-component-handler-functions&#34;&gt;- how to best declare component handler functions?&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#tutorials--articles&#34;&gt;Tutorials &amp;amp; Articles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Types for React &amp;amp; Redux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i -D @types/react @types/react-dom @types/react-redux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;react&#34; - &lt;code&gt;@types/react&lt;/code&gt;&lt;br&gt; &#34;react-dom&#34; - &lt;code&gt;@types/react-dom&lt;/code&gt;&lt;br&gt; &#34;redux&#34; - (types included with npm package)*&lt;br&gt; &#34;react-redux&#34; - &lt;code&gt;@types/react-redux&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;*NB: Guide is based on types for Redux &amp;gt;= v4.x.x.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;React Types Cheatsheet&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.FC&amp;lt;Props&amp;gt;&lt;/code&gt; | &lt;code&gt;React.FunctionComponent&amp;lt;Props&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing a functional component&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const MyComponent: React.FC&amp;lt;Props&amp;gt; = ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.Component&amp;lt;Props, State&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing a class component&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;class MyComponent extends React.Component&amp;lt;Props, State&amp;gt; { ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.ComponentType&amp;lt;Props&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing union of (&lt;code&gt;React.FC&amp;lt;Props&amp;gt; | React.Component&amp;lt;Props&amp;gt;&lt;/code&gt;) - used in HOC&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const withState = &amp;lt;P extends WrappedComponentProps&amp;gt;(&#xA;  WrappedComponent: React.ComponentType&amp;lt;P&amp;gt;,&#xA;) =&amp;gt; { ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.ComponentProps&amp;lt;typeof XXX&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Gets Props type of a specified component XXX (WARNING: does not work with statically declared default props and generic props)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;type MyComponentProps = React.ComponentProps&amp;lt;typeof MyComponent&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.ReactElement&lt;/code&gt; | &lt;code&gt;JSX.Element&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing a concept of React Element - representation of a native DOM component (e.g. &lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;), or a user-defined composite component (e.g. &lt;code&gt;&amp;lt;MyComponent /&amp;gt;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const elementOnly: React.ReactElement = &amp;lt;div /&amp;gt; || &amp;lt;MyComponent /&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.ReactNode&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing any possible type of React node (basically ReactElement (including Fragments and Portals) + primitive JS types)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const elementOrPrimitive: React.ReactNode = &#39;string&#39; || 0 || false || null || undefined || &amp;lt;div /&amp;gt; || &amp;lt;MyComponent /&amp;gt;;&#xA;const Component = ({ children: React.ReactNode }) =&amp;gt; ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.CSSProperties&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing style object in JSX - for css-in-js styles&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const styles: React.CSSProperties = { flexDirection: &#39;row&#39;, ...&#xA;const element = &amp;lt;div style={styles} ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.XXXHTMLAttributes&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing HTML attributes of specified HTML Element - for extending HTML Elements&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const Input: React.FC&amp;lt;Props &amp;amp; React.InputHTMLAttributes&amp;lt;HTMLInputElement&amp;gt;&amp;gt; = props =&amp;gt; { ... }&#xA;&#xA;&amp;lt;Input about={...} accept={...} alt={...} ... /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.ReactEventHandler&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing generic event handler - for declaring event handlers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const handleChange: React.ReactEventHandler&amp;lt;HTMLInputElement&amp;gt; = (ev) =&amp;gt; { ... } &#xA;&#xA;&amp;lt;input onChange={handleChange} ... /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;React.XXXEvent&amp;lt;HTMLXXXElement&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type representing more specific event. Some common event examples: &lt;code&gt;ChangeEvent, FormEvent, FocusEvent, KeyboardEvent, MouseEvent, DragEvent, PointerEvent, WheelEvent, TouchEvent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const handleChange = (ev: React.MouseEvent&amp;lt;HTMLDivElement&amp;gt;) =&amp;gt; { ... }&#xA;&#xA;&amp;lt;div onMouseMove={handleChange} ... /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In code above &lt;code&gt;React.MouseEvent&amp;lt;HTMLDivElement&amp;gt;&lt;/code&gt; is type of mouse event, and this event happened on &lt;code&gt;HTMLDivElement&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;React&lt;/h1&gt; &#xA;&lt;h2&gt;Function Components - FC&lt;/h2&gt; &#xA;&lt;h3&gt;- Counter Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = {&#xA;  label: string;&#xA;  count: number;&#xA;  onIncrement: () =&amp;gt; void;&#xA;};&#xA;&#xA;export const FCCounter: React.FC&amp;lt;Props&amp;gt; = props =&amp;gt; {&#xA;  const { label, count, onIncrement } = props;&#xA;&#xA;  const handleIncrement = () =&amp;gt; {&#xA;    onIncrement();&#xA;  };&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;span&amp;gt;&#xA;        {label}: {count}&#xA;      &amp;lt;/span&amp;gt;&#xA;      &amp;lt;button type=&#34;button&#34; onClick={handleIncrement}&amp;gt;&#xA;        {`Increment`}&#xA;      &amp;lt;/button&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#fccounter&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Counter Component with default props&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = {&#xA;  label: string;&#xA;  count: number;&#xA;  onIncrement: () =&amp;gt; void;&#xA;};&#xA;&#xA;// React.FC is unaplicable here due not working properly with default props&#xA;// https://github.com/facebook/create-react-app/pull/8177&#xA;export const FCCounterWithDefaultProps = (props: Props): JSX.Element =&amp;gt; {&#xA;  const { label, count, onIncrement } = props;&#xA;&#xA;  const handleIncrement = () =&amp;gt; {&#xA;    onIncrement();&#xA;  };&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;span&amp;gt;&#xA;        {label}: {count}&#xA;      &amp;lt;/span&amp;gt;&#xA;      &amp;lt;button type=&#34;button&#34; onClick={handleIncrement}&amp;gt;&#xA;        {`Increment`}&#xA;      &amp;lt;/button&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;FCCounterWithDefaultProps.defaultProps = { count: 5 };&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#fccounterwithdefaultprops&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- &lt;a href=&#34;https://facebook.github.io/react/docs/jsx-in-depth.html#spread-attributes&#34;&gt;Spreading attributes&lt;/a&gt; in Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = React.PropsWithChildren&amp;lt;{&#xA;  className?: string;&#xA;  style?: React.CSSProperties;&#xA;}&amp;gt;;&#xA;&#xA;export const FCSpreadAttributes: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {&#xA;  const { children, ...restProps } = props;&#xA;&#xA;  return &amp;lt;div {...restProps}&amp;gt;{children}&amp;lt;/div&amp;gt;;&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#fcspreadattributes&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Class Components&lt;/h2&gt; &#xA;&lt;h3&gt;- Class Counter Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = {&#xA;  label: string;&#xA;};&#xA;&#xA;type State = {&#xA;  count: number;&#xA;};&#xA;&#xA;export class ClassCounter extends React.Component&amp;lt;Props, State&amp;gt; {&#xA;  readonly state: State = {&#xA;    count: 0,&#xA;  };&#xA;&#xA;  handleIncrement = () =&amp;gt; {&#xA;    this.setState({ count: this.state.count + 1 });&#xA;  };&#xA;&#xA;  render() {&#xA;    const { handleIncrement } = this;&#xA;    const { label } = this.props;&#xA;    const { count } = this.state;&#xA;&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;span&amp;gt;&#xA;          {label}: {count}&#xA;        &amp;lt;/span&amp;gt;&#xA;        &amp;lt;button type=&#34;button&#34; onClick={handleIncrement}&amp;gt;&#xA;          {`Increment`}&#xA;        &amp;lt;/button&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#classcounter&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Class Component with default props&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = {&#xA;  label: string;&#xA;  initialCount: number;&#xA;};&#xA;&#xA;type State = {&#xA;  count: number;&#xA;};&#xA;&#xA;export class ClassCounterWithDefaultProps extends React.Component&amp;lt;&#xA;  Props,&#xA;  State&#xA;&amp;gt; {&#xA;  static defaultProps = {&#xA;    initialCount: 0,&#xA;  };&#xA;&#xA;  readonly state: State = {&#xA;    count: this.props.initialCount,&#xA;  };&#xA;&#xA;  handleIncrement = () =&amp;gt; {&#xA;    this.setState({ count: this.state.count + 1 });&#xA;  };&#xA;&#xA;  render() {&#xA;    const { handleIncrement } = this;&#xA;    const { label } = this.props;&#xA;    const { count } = this.state;&#xA;&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;span&amp;gt;&#xA;          {label}: {count}&#xA;        &amp;lt;/span&amp;gt;&#xA;        &amp;lt;button type=&#34;button&#34; onClick={handleIncrement}&amp;gt;&#xA;          {`Increment`}&#xA;        &amp;lt;/button&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#classcounterwithdefaultprops&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Generic Components&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;easily create typed component variations and reuse common logic&lt;/li&gt; &#xA; &lt;li&gt;common use case is a generic list components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;- Generic List Component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;export interface GenericListProps&amp;lt;T&amp;gt; {&#xA;  items: T[];&#xA;  itemRenderer: (item: T) =&amp;gt; JSX.Element;&#xA;}&#xA;&#xA;export class GenericList&amp;lt;T&amp;gt; extends React.Component&amp;lt;GenericListProps&amp;lt;T&amp;gt;, {}&amp;gt; {&#xA;  render() {&#xA;    const { items, itemRenderer } = this.props;&#xA;&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        {items.map(itemRenderer)}&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#genericlist&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Hooks&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-intro.html&#34;&gt;https://reactjs.org/docs/hooks-intro.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;- useState&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-reference.html#usestate&#34;&gt;https://reactjs.org/docs/hooks-reference.html#usestate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;type Props = { initialCount: number };&#xA;&#xA;export default function Counter({initialCount}: Props) {&#xA;  const [count, setCount] = React.useState(initialCount);&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      Count: {count}&#xA;      &amp;lt;button onClick={() =&amp;gt; setCount(initialCount)}&amp;gt;Reset&amp;lt;/button&amp;gt;&#xA;      &amp;lt;button onClick={() =&amp;gt; setCount(prevCount =&amp;gt; prevCount + 1)}&amp;gt;+&amp;lt;/button&amp;gt;&#xA;      &amp;lt;button onClick={() =&amp;gt; setCount(prevCount =&amp;gt; prevCount - 1)}&amp;gt;-&amp;lt;/button&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- useContext&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-reference.html#usecontext&#34;&gt;https://reactjs.org/docs/hooks-reference.html#usecontext&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;import ThemeContext from &#39;../context/theme-context&#39;;&#xA;&#xA;type Props = {};&#xA;&#xA;export default function ThemeToggleButton(props: Props) {&#xA;  const { theme, toggleTheme } = React.useContext(ThemeContext);&#xA;  return (&#xA;    &amp;lt;button onClick={toggleTheme} style={theme} &amp;gt;&#xA;      Toggle Theme&#xA;    &amp;lt;/button&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- useReducer&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-reference.html#usereducer&#34;&gt;https://reactjs.org/docs/hooks-reference.html#usereducer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;interface State {&#xA;  count: number;&#xA;}&#xA;&#xA;type Action = { type: &#39;reset&#39; } | { type: &#39;increment&#39; } | { type: &#39;decrement&#39; };&#xA;&#xA;function reducer(state: State, action: Action): State {&#xA;  switch (action.type) {&#xA;    case &#39;increment&#39;:&#xA;      return { count: state.count + 1 };&#xA;    case &#39;decrement&#39;:&#xA;      return { count: state.count - 1 };&#xA;    case &#39;reset&#39;:&#xA;      return { count: 0 };&#xA;    default:&#xA;      throw new Error();&#xA;  }&#xA;}&#xA;&#xA;interface CounterProps {&#xA;  initialCount: number;&#xA;}&#xA;&#xA;function Counter({ initialCount }: CounterProps) {&#xA;  const [state, dispatch] = React.useReducer(reducer, {&#xA;    count: initialCount,&#xA;  });&#xA;&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      Count: {state.count}&#xA;      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &#39;reset&#39; })}&amp;gt;Reset&amp;lt;/button&amp;gt;&#xA;      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &#39;increment&#39; })}&amp;gt;+&amp;lt;/button&amp;gt;&#xA;      &amp;lt;button onClick={() =&amp;gt; dispatch({ type: &#39;decrement&#39; })}&amp;gt;-&amp;lt;/button&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;export default Counter;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Render Props&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/render-props.html&#34;&gt;https://reactjs.org/docs/render-props.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;- Name Provider Component&lt;/h3&gt; &#xA;&lt;p&gt;Simple component using children as a render prop&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;interface NameProviderProps {&#xA;  children: (state: NameProviderState) =&amp;gt; React.ReactNode;&#xA;}&#xA;&#xA;interface NameProviderState {&#xA;  readonly name: string;&#xA;}&#xA;&#xA;export class NameProvider extends React.Component&amp;lt;NameProviderProps, NameProviderState&amp;gt; {&#xA;  readonly state: NameProviderState = { name: &#39;Piotr&#39; };&#xA;&#xA;  render() {&#xA;    return this.props.children(this.state);&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#nameprovider&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Mouse Provider Component&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Mouse&lt;/code&gt; component found in &lt;a href=&#34;https://reactjs.org/docs/render-props.html#use-render-props-for-cross-cutting-concerns&#34;&gt;Render Props React Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;export interface MouseProviderProps {&#xA;  render: (state: MouseProviderState) =&amp;gt; React.ReactNode;&#xA;}&#xA;&#xA;interface MouseProviderState {&#xA;  readonly x: number;&#xA;  readonly y: number;&#xA;}&#xA;&#xA;export class MouseProvider extends React.Component&amp;lt;MouseProviderProps, MouseProviderState&amp;gt; {&#xA;  readonly state: MouseProviderState = { x: 0, y: 0 };&#xA;&#xA;  handleMouseMove = (event: React.MouseEvent&amp;lt;HTMLDivElement&amp;gt;) =&amp;gt; {&#xA;    this.setState({&#xA;      x: event.clientX,&#xA;      y: event.clientY,&#xA;    });&#xA;  };&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div style={{ height: &#39;100%&#39; }} onMouseMove={this.handleMouseMove}&amp;gt;&#xA;        {/*&#xA;          Instead of providing a static representation of what &amp;lt;Mouse&amp;gt; renders,&#xA;          use the `render` prop to dynamically determine what to render.&#xA;        */}&#xA;        {this.props.render(this.state)}&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/#mouseprovider&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Higher-Order Components&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/higher-order-components.html&#34;&gt;https://reactjs.org/docs/higher-order-components.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;- HOC wrapping a component&lt;/h3&gt; &#xA;&lt;p&gt;Adds state to a stateless counter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React from &#39;react&#39;;&#xA;import { Diff } from &#39;utility-types&#39;;&#xA;&#xA;// These props will be injected into the base component&#xA;interface InjectedProps {&#xA;  count: number;&#xA;  onIncrement: () =&amp;gt; void;&#xA;}&#xA;&#xA;export const withState = &amp;lt;BaseProps extends InjectedProps&amp;gt;(&#xA;  BaseComponent: React.ComponentType&amp;lt;BaseProps&amp;gt;&#xA;) =&amp;gt; {&#xA;  type HocProps = Diff&amp;lt;BaseProps, InjectedProps&amp;gt; &amp;amp; {&#xA;    // here you can extend hoc with new props&#xA;    initialCount?: number;&#xA;  };&#xA;  type HocState = {&#xA;    readonly count: number;&#xA;  };&#xA;&#xA;  return class Hoc extends React.Component&amp;lt;HocProps, HocState&amp;gt; {&#xA;    // Enhance component name for debugging and React-Dev-Tools&#xA;    static displayName = `withState(${BaseComponent.name})`;&#xA;    // reference to original wrapped component&#xA;    static readonly WrappedComponent = BaseComponent;&#xA;&#xA;    readonly state: HocState = {&#xA;      count: Number(this.props.initialCount) || 0,&#xA;    };&#xA;&#xA;    handleIncrement = () =&amp;gt; {&#xA;      this.setState({ count: this.state.count + 1 });&#xA;    };&#xA;&#xA;    render() {&#xA;      const { ...restProps } = this.props;&#xA;      const { count } = this.state;&#xA;&#xA;      return (&#xA;        &amp;lt;BaseComponent&#xA;        {...(restProps as BaseProps)}&#xA;          count={count} // injected&#xA;          onIncrement={this.handleIncrement} // injected&#xA;        /&amp;gt;&#xA;      );&#xA;    }&#xA;  };&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;import { withState } from &#39;../hoc&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;&#xA;const FCCounterWithState = withState(FCCounter);&#xA;&#xA;export default () =&amp;gt; &amp;lt;FCCounterWithState label={&#39;FCCounterWithState&#39;} /&amp;gt;;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- HOC wrapping a component and injecting props&lt;/h3&gt; &#xA;&lt;p&gt;Adds error handling using componentDidCatch to any component&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React from &#39;react&#39;;&#xA;&#xA;const MISSING_ERROR = &#39;Error was swallowed during propagation.&#39;;&#xA;&#xA;export const withErrorBoundary = &amp;lt;BaseProps extends {}&amp;gt;(&#xA;  BaseComponent: React.ComponentType&amp;lt;BaseProps&amp;gt;&#xA;) =&amp;gt; {&#xA;  type HocProps = React.PropsWithChildren&amp;lt;{&#xA;    // here you can extend hoc with new props&#xA;  }&amp;gt;;&#xA;  type HocState = {&#xA;    readonly error: Error | null | undefined;&#xA;  };&#xA;&#xA;  return class Hoc extends React.Component&amp;lt;HocProps, HocState&amp;gt; {&#xA;    // Enhance component name for debugging and React-Dev-Tools&#xA;    static displayName = `withErrorBoundary(${BaseComponent.name})`;&#xA;    // reference to original wrapped component&#xA;    static readonly WrappedComponent = BaseComponent;&#xA;&#xA;    readonly state: HocState = {&#xA;      error: undefined,&#xA;    };&#xA;&#xA;    componentDidCatch(error: Error | null, info: object) {&#xA;      this.setState({ error: error || new Error(MISSING_ERROR) });&#xA;      this.logErrorToCloud(error, info);&#xA;    }&#xA;&#xA;    logErrorToCloud = (error: Error | null, info: object) =&amp;gt; {&#xA;      // TODO: send error report to service provider&#xA;    };&#xA;&#xA;    render() {&#xA;      const { children, ...restProps } = this.props;&#xA;      const { error } = this.state;&#xA;&#xA;      if (error) {&#xA;        return &amp;lt;BaseComponent {...(restProps as BaseProps)} /&amp;gt;;&#xA;      }&#xA;&#xA;      return children;&#xA;    }&#xA;  };&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React, {useState} from &#39;react&#39;;&#xA;&#xA;import { withErrorBoundary } from &#39;../hoc&#39;;&#xA;import { ErrorMessage } from &#39;../components&#39;;&#xA;&#xA;const ErrorMessageWithErrorBoundary =&#xA;  withErrorBoundary(ErrorMessage);&#xA;&#xA;const BrokenComponent = () =&amp;gt; {&#xA;  throw new Error(&#39;I\&#39;m broken! Don\&#39;t render me.&#39;);&#xA;};&#xA;&#xA;const BrokenButton = () =&amp;gt; {&#xA;  const [shouldRenderBrokenComponent, setShouldRenderBrokenComponent] =&#xA;    useState(false);&#xA;&#xA;  if (shouldRenderBrokenComponent) {&#xA;    return &amp;lt;BrokenComponent /&amp;gt;;&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;button&#xA;      type=&#34;button&#34;&#xA;      onClick={() =&amp;gt; {&#xA;        setShouldRenderBrokenComponent(true);&#xA;      }}&#xA;    &amp;gt;&#xA;      {`Throw nasty error`}&#xA;    &amp;lt;/button&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;export default () =&amp;gt; (&#xA;  &amp;lt;ErrorMessageWithErrorBoundary&amp;gt;&#xA;    &amp;lt;BrokenButton /&amp;gt;&#xA;  &amp;lt;/ErrorMessageWithErrorBoundary&amp;gt;&#xA;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Nested HOC - wrapping a component, injecting props and connecting to redux 🌟&lt;/h3&gt; &#xA;&lt;p&gt;Adds error handling using componentDidCatch to any component&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { RootState } from &#39;MyTypes&#39;;&#xA;import React from &#39;react&#39;;&#xA;import { connect } from &#39;react-redux&#39;;&#xA;import { Diff } from &#39;utility-types&#39;;&#xA;import { countersActions, countersSelectors } from &#39;../features/counters&#39;;&#xA;&#xA;// These props will be injected into the base component&#xA;interface InjectedProps {&#xA;  count: number;&#xA;  onIncrement: () =&amp;gt; void;&#xA;}&#xA;&#xA;export const withConnectedCount = &amp;lt;BaseProps extends InjectedProps&amp;gt;(&#xA;  BaseComponent: React.ComponentType&amp;lt;BaseProps&amp;gt;&#xA;) =&amp;gt; {&#xA;  const mapStateToProps = (state: RootState) =&amp;gt; ({&#xA;    count: countersSelectors.getReduxCounter(state.counters),&#xA;  });&#xA;&#xA;  const dispatchProps = {&#xA;    onIncrement: countersActions.increment,&#xA;  };&#xA;&#xA;  type HocProps = ReturnType&amp;lt;typeof mapStateToProps&amp;gt; &amp;amp;&#xA;    typeof dispatchProps &amp;amp; {&#xA;      // here you can extend ConnectedHoc with new props&#xA;      overrideCount?: number;&#xA;    };&#xA;&#xA;  class Hoc extends React.Component&amp;lt;HocProps&amp;gt; {&#xA;    // Enhance component name for debugging and React-Dev-Tools&#xA;    static displayName = `withConnectedCount(${BaseComponent.name})`;&#xA;    // reference to original wrapped component&#xA;    static readonly WrappedComponent = BaseComponent;&#xA;&#xA;    render() {&#xA;      const { count, onIncrement, overrideCount, ...restProps } = this.props;&#xA;&#xA;      return (&#xA;        &amp;lt;BaseComponent&#xA;          {...(restProps as BaseProps)}&#xA;          count={overrideCount || count} // injected&#xA;          onIncrement={onIncrement} // injected&#xA;        /&amp;gt;&#xA;      );&#xA;    }&#xA;  }&#xA;&#xA;  const ConnectedHoc = connect&amp;lt;&#xA;    ReturnType&amp;lt;typeof mapStateToProps&amp;gt;,&#xA;    typeof dispatchProps, // use &#34;undefined&#34; if NOT using dispatchProps&#xA;    Diff&amp;lt;BaseProps, InjectedProps&amp;gt;,&#xA;    RootState&#xA;  &amp;gt;(&#xA;    mapStateToProps,&#xA;    dispatchProps&#xA;  )(Hoc);&#xA;&#xA;  return ConnectedHoc;&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;import { withConnectedCount } from &#39;../hoc&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;&#xA;const FCCounterWithConnectedCount = withConnectedCount(FCCounter);&#xA;&#xA;export default () =&amp;gt; (&#xA;  &amp;lt;FCCounterWithConnectedCount overrideCount={5} label={&#39;FCCounterWithState&#39;} /&amp;gt;&#xA;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Redux Connected Components&lt;/h2&gt; &#xA;&lt;h3&gt;- Redux connected counter&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import Types from &#39;MyTypes&#39;;&#xA;import { connect } from &#39;react-redux&#39;;&#xA;&#xA;import { countersActions, countersSelectors } from &#39;../features/counters&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;&#xA;const mapStateToProps = (state: Types.RootState) =&amp;gt; ({&#xA;  count: countersSelectors.getReduxCounter(state.counters),&#xA;});&#xA;&#xA;const dispatchProps = {&#xA;  onIncrement: countersActions.increment,&#xA;};&#xA;&#xA;export const FCCounterConnected = connect(&#xA;  mapStateToProps,&#xA;  dispatchProps&#xA;)(FCCounter);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;import { FCCounterConnected } from &#39;.&#39;;&#xA;&#xA;export default () =&amp;gt; &amp;lt;FCCounterConnected label={&#39;FCCounterConnected&#39;} /&amp;gt;;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Redux connected counter with own props&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import Types from &#39;MyTypes&#39;;&#xA;import { connect } from &#39;react-redux&#39;;&#xA;&#xA;import { countersActions, countersSelectors } from &#39;../features/counters&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;&#xA;type OwnProps = {&#xA;  initialCount?: number;&#xA;};&#xA;&#xA;const mapStateToProps = (state: Types.RootState, ownProps: OwnProps) =&amp;gt; ({&#xA;  count:&#xA;    countersSelectors.getReduxCounter(state.counters) +&#xA;    (ownProps.initialCount || 0),&#xA;});&#xA;&#xA;const dispatchProps = {&#xA;  onIncrement: countersActions.increment,&#xA;};&#xA;&#xA;export const FCCounterConnectedOwnProps = connect(&#xA;  mapStateToProps,&#xA;  dispatchProps&#xA;)(FCCounter);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;import { FCCounterConnectedOwnProps } from &#39;.&#39;;&#xA;&#xA;export default () =&amp;gt; (&#xA;  &amp;lt;FCCounterConnectedOwnProps&#xA;    label={&#39;FCCounterConnectedOwnProps&#39;}&#xA;    initialCount={10}&#xA;  /&amp;gt;&#xA;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Redux connected counter via hooks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;import { increment } from &#39;../features/counters/actions&#39;;&#xA;import { useSelector, useDispatch } from &#39;../store/hooks&#39;;&#xA;&#xA;const FCCounterConnectedHooksUsage: React.FC = () =&amp;gt; {&#xA;  const counter = useSelector(state =&amp;gt; state.counters.reduxCounter);&#xA;  const dispatch = useDispatch();&#xA;  return &amp;lt;FCCounter label=&#34;Use selector&#34; count={counter} onIncrement={() =&amp;gt; dispatch(increment())}/&amp;gt;;&#xA;};&#xA;&#xA;export default FCCounterConnectedHooksUsage;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- Redux connected counter with &lt;code&gt;redux-thunk&lt;/code&gt; integration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import Types from &#39;MyTypes&#39;;&#xA;import { bindActionCreators, Dispatch } from &#39;redux&#39;;&#xA;import { connect } from &#39;react-redux&#39;;&#xA;import * as React from &#39;react&#39;;&#xA;&#xA;import { countersActions } from &#39;../features/counters&#39;;&#xA;&#xA;// Thunk Action&#xA;const incrementWithDelay = () =&amp;gt; async (dispatch: Dispatch): Promise&amp;lt;void&amp;gt; =&amp;gt; {&#xA;  setTimeout(() =&amp;gt; dispatch(countersActions.increment()), 1000);&#xA;};&#xA;&#xA;const mapStateToProps = (state: Types.RootState) =&amp;gt; ({&#xA;  count: state.counters.reduxCounter,&#xA;});&#xA;&#xA;const mapDispatchToProps = (dispatch: Dispatch&amp;lt;Types.RootAction&amp;gt;) =&amp;gt;&#xA;  bindActionCreators(&#xA;    {&#xA;      onIncrement: incrementWithDelay,&#xA;    },&#xA;    dispatch&#xA;  );&#xA;&#xA;type Props = ReturnType&amp;lt;typeof mapStateToProps&amp;gt; &amp;amp;&#xA;  ReturnType&amp;lt;typeof mapDispatchToProps&amp;gt; &amp;amp; {&#xA;    label: string;&#xA;  };&#xA;&#xA;export const FCCounter: React.FC&amp;lt;Props&amp;gt; = props =&amp;gt; {&#xA;  const { label, count, onIncrement } = props;&#xA;&#xA;  const handleIncrement = () =&amp;gt; {&#xA;    // Thunk action is correctly typed as promise&#xA;    onIncrement().then(() =&amp;gt; {&#xA;      // ...&#xA;    });&#xA;  };&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;span&amp;gt;&#xA;        {label}: {count}&#xA;      &amp;lt;/span&amp;gt;&#xA;      &amp;lt;button type=&#34;button&#34; onClick={handleIncrement}&amp;gt;&#xA;        {`Increment`}&#xA;      &amp;lt;/button&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;export const FCCounterConnectedBindActionCreators = connect(&#xA;  mapStateToProps,&#xA;  mapDispatchToProps&#xA;)(FCCounter);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;import { FCCounterConnectedBindActionCreators } from &#39;.&#39;;&#xA;&#xA;export default () =&amp;gt; (&#xA;  &amp;lt;FCCounterConnectedBindActionCreators&#xA;    label={&#39;FCCounterConnectedBindActionCreators&#39;}&#xA;  /&amp;gt;&#xA;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Context&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/context.html&#34;&gt;https://reactjs.org/docs/context.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;ThemeContext&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;&#xA;export type Theme = React.CSSProperties;&#xA;&#xA;type Themes = {&#xA;  dark: Theme;&#xA;  light: Theme;&#xA;};&#xA;&#xA;export const themes: Themes = {&#xA;  dark: {&#xA;    color: &#39;black&#39;,&#xA;    backgroundColor: &#39;white&#39;,&#xA;  },&#xA;  light: {&#xA;    color: &#39;white&#39;,&#xA;    backgroundColor: &#39;black&#39;,&#xA;  },&#xA;};&#xA;&#xA;export type ThemeContextProps = { theme: Theme; toggleTheme?: () =&amp;gt; void };&#xA;const ThemeContext = React.createContext&amp;lt;ThemeContextProps&amp;gt;({ theme: themes.light });&#xA;&#xA;export default ThemeContext;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ThemeProvider&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import React from &#39;react&#39;;&#xA;import ThemeContext, { themes, Theme } from &#39;./theme-context&#39;;&#xA;import ToggleThemeButton from &#39;./theme-consumer&#39;;&#xA;&#xA;interface State {&#xA;  theme: Theme;&#xA;}&#xA;export class ThemeProvider extends React.Component&amp;lt;{}, State&amp;gt; {&#xA;  readonly state: State = { theme: themes.light };&#xA;&#xA;  toggleTheme = () =&amp;gt; {&#xA;    this.setState(state =&amp;gt; ({&#xA;      theme: state.theme === themes.light ? themes.dark : themes.light,&#xA;    }));&#xA;  }&#xA;&#xA;  render() {&#xA;    const { theme } = this.state;&#xA;    const { toggleTheme } = this;&#xA;    return (&#xA;      &amp;lt;ThemeContext.Provider value={{ theme, toggleTheme }}&amp;gt;&#xA;        &amp;lt;ToggleThemeButton /&amp;gt;&#xA;      &amp;lt;/ThemeContext.Provider&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ThemeConsumer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;import ThemeContext from &#39;./theme-context&#39;;&#xA;&#xA;type Props = {};&#xA;&#xA;export default function ToggleThemeButton(props: Props) {&#xA;  return (&#xA;    &amp;lt;ThemeContext.Consumer&amp;gt;&#xA;      {({ theme, toggleTheme }) =&amp;gt; &amp;lt;button style={theme} onClick={toggleTheme} {...props} /&amp;gt;}&#xA;    &amp;lt;/ThemeContext.Consumer&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ThemeConsumer in class component&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;;&#xA;import ThemeContext from &#39;./theme-context&#39;;&#xA;&#xA;type Props = {};&#xA;&#xA;export class ToggleThemeButtonClass extends React.Component&amp;lt;Props&amp;gt; {&#xA;  static contextType = ThemeContext;&#xA;  declare context: React.ContextType&amp;lt;typeof ThemeContext&amp;gt;;&#xA;&#xA;  render() {&#xA;    const { theme, toggleTheme } = this.context;&#xA;    return (&#xA;      &amp;lt;button style={theme} onClick={toggleTheme}&amp;gt;&#xA;        Toggle Theme&#xA;      &amp;lt;/button&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#--usecontext&#34;&gt;Implementation with Hooks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Redux&lt;/h1&gt; &#xA;&lt;h2&gt;Store Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Create Global Store Types&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;RootState&lt;/code&gt; - type representing root state-tree&lt;/h4&gt; &#xA;&lt;p&gt;Can be imported in connected components to provide type-safety to Redux &lt;code&gt;connect&lt;/code&gt; function&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;RootAction&lt;/code&gt; - type representing union type of all action objects&lt;/h4&gt; &#xA;&lt;p&gt;Can be imported in various layers receiving or sending redux actions like: reducers, sagas or redux-observables epics&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { StateType, ActionType } from &#39;typesafe-actions&#39;;&#xA;&#xA;declare module &#39;MyTypes&#39; {&#xA;  export type Store = StateType&amp;lt;typeof import(&#39;./store&#39;).default&amp;gt;;&#xA;  export type RootAction = ActionType&amp;lt;typeof import(&#39;./root-action&#39;).default&amp;gt;;&#xA;  export type RootState = StateType&amp;lt;ReturnType&amp;lt;typeof import(&#39;./root-reducer&#39;).default&amp;gt;&amp;gt;;&#xA;}&#xA;&#xA;declare module &#39;typesafe-actions&#39; {&#xA;  interface Types {&#xA;    RootAction: ActionType&amp;lt;typeof import(&#39;./root-action&#39;).default&amp;gt;;&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create Store&lt;/h3&gt; &#xA;&lt;p&gt;When creating a store instance we don&#39;t need to provide any additional types. It will set-up a &lt;strong&gt;type-safe Store instance&lt;/strong&gt; using type inference.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The resulting store instance methods like &lt;code&gt;getState&lt;/code&gt; or &lt;code&gt;dispatch&lt;/code&gt; will be type checked and will expose all type errors&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { RootAction, RootState, Services } from &#39;MyTypes&#39;;&#xA;import { applyMiddleware, createStore } from &#39;redux&#39;;&#xA;import { createEpicMiddleware } from &#39;redux-observable&#39;;&#xA;&#xA;import services from &#39;../services&#39;;&#xA;import { routerMiddleware } from &#39;./redux-router&#39;;&#xA;import rootEpic from &#39;./root-epic&#39;;&#xA;import rootReducer from &#39;./root-reducer&#39;;&#xA;import { composeEnhancers } from &#39;./utils&#39;;&#xA;&#xA;const epicMiddleware = createEpicMiddleware&amp;lt;&#xA;  RootAction,&#xA;  RootAction,&#xA;  RootState,&#xA;  Services&#xA;&amp;gt;({&#xA;  dependencies: services,&#xA;});&#xA;&#xA;// configure middlewares&#xA;const middlewares = [epicMiddleware, routerMiddleware];&#xA;// compose enhancers&#xA;const enhancer = composeEnhancers(applyMiddleware(...middlewares));&#xA;&#xA;// rehydrate state on app start&#xA;const initialState = {};&#xA;&#xA;// create store&#xA;const store = createStore(&#xA;  rootReducer,&#xA;  initialState,&#xA;  enhancer&#xA;);&#xA;&#xA;epicMiddleware.run(rootEpic);&#xA;&#xA;// export store singleton instance&#xA;export default store;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Action Creators 🌟&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We&#39;ll be using a battle-tested helper library &lt;a href=&#34;https://github.com/piotrwitek/typesafe-actions#typesafe-actions&#34;&gt;&lt;code&gt;typesafe-actions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/typesafe-actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/typesafe-actions.svg?sanitize=true&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/typesafe-actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/typesafe-actions.svg?sanitize=true&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; that&#39;s designed to make it easy and fun working with &lt;strong&gt;Redux&lt;/strong&gt; in &lt;strong&gt;TypeScript&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To learn more please check this in-depth tutorial: &lt;a href=&#34;https://github.com/piotrwitek/typesafe-actions#tutorial&#34;&gt;Typesafe-Actions - Tutorial&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A solution below is using a simple factory function to automate the creation of type-safe action creators. The goal is to decrease maintenance effort and reduce code repetition of type annotations for actions and creators. The result is completely typesafe action-creators and their actions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;/* eslint-disable */&#xA;import { action } from &#39;typesafe-actions&#39;;&#xA;&#xA;import { ADD, INCREMENT } from &#39;./constants&#39;;&#xA;&#xA;/* SIMPLE API */&#xA;&#xA;export const increment = () =&amp;gt; action(INCREMENT);&#xA;export const add = (amount: number) =&amp;gt; action(ADD, amount);&#xA;&#xA;/* ADVANCED API */&#xA;&#xA;// More flexible allowing to create complex actions more easily&#xA;// use can use &#34;action-creator&#34; instance in place of &#34;type constant&#34;&#xA;// e.g. case getType(increment): return action.payload;&#xA;// This will allow to completely eliminate need for &#34;constants&#34; in your application, more info here:&#xA;// https://github.com/piotrwitek/typesafe-actions#constants&#xA;&#xA;import { createAction } from &#39;typesafe-actions&#39;;&#xA;import { Todo } from &#39;../todos/models&#39;;&#xA;&#xA;export const emptyAction = createAction(INCREMENT)&amp;lt;void&amp;gt;();&#xA;export const payloadAction = createAction(ADD)&amp;lt;number&amp;gt;();&#xA;export const payloadMetaAction = createAction(ADD)&amp;lt;number, string&amp;gt;();&#xA;&#xA;export const payloadCreatorAction = createAction(&#xA;  &#39;TOGGLE_TODO&#39;,&#xA;  (todo: Todo) =&amp;gt; todo.id&#xA;)&amp;lt;string&amp;gt;();&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { store } from &#39;../../store/&#39;;&#xA;import { countersActions as counter } from &#39;../counters&#39;;&#xA;&#xA;// store.dispatch(counter.increment(1)); // Error: Expected 0 arguments, but got 1.&#xA;store.dispatch(counter.increment()); // OK&#xA;&#xA;// store.dispatch(counter.add()); // Error: Expected 1 arguments, but got 0.&#xA;store.dispatch(counter.add(1)); // OK&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Reducers&lt;/h2&gt; &#xA;&lt;h3&gt;State with Type-level Immutability&lt;/h3&gt; &#xA;&lt;p&gt;Declare reducer &lt;code&gt;State&lt;/code&gt; type with &lt;code&gt;readonly&lt;/code&gt; modifier to get compile time immutability&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export type State = {&#xA;  readonly counter: number;&#xA;  readonly todos: ReadonlyArray&amp;lt;string&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Readonly modifier allow initialization, but will not allow reassignment by highlighting compiler errors&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export const initialState: State = {&#xA;  counter: 0,&#xA;}; // OK&#xA;&#xA;initialState.counter = 3; // TS Error: cannot be mutated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s great for &lt;strong&gt;Arrays in JS&lt;/strong&gt; because it will error when using mutator methods like (&lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;splice&lt;/code&gt;, ...), but it&#39;ll still allow immutable methods like (&lt;code&gt;concat&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;slice&lt;/code&gt;,...).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;state.todos.push(&#39;Learn about tagged union types&#39;) // TS Error: Property &#39;push&#39; does not exist on type &#39;ReadonlyArray&amp;lt;string&amp;gt;&#39;&#xA;const newTodos = state.todos.concat(&#39;Learn about tagged union types&#39;) // OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Caveat - &lt;code&gt;Readonly&lt;/code&gt; is not recursive&lt;/h4&gt; &#xA;&lt;p&gt;This means that the &lt;code&gt;readonly&lt;/code&gt; modifier doesn&#39;t propagate immutability down the nested structure of objects. You&#39;ll need to mark each property on each level explicitly.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIP:&lt;/strong&gt; use &lt;code&gt;Readonly&lt;/code&gt; or &lt;code&gt;ReadonlyArray&lt;/code&gt; &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/advanced-types.html&#34;&gt;Mapped types&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export type State = Readonly&amp;lt;{&#xA;  counterPairs: ReadonlyArray&amp;lt;Readonly&amp;lt;{&#xA;    immutableCounter1: number,&#xA;    immutableCounter2: number,&#xA;  }&amp;gt;&amp;gt;,&#xA;}&amp;gt;;&#xA;&#xA;state.counterPairs[0] = { immutableCounter1: 1, immutableCounter2: 1 }; // TS Error: cannot be mutated&#xA;state.counterPairs[0].immutableCounter1 = 1; // TS Error: cannot be mutated&#xA;state.counterPairs[0].immutableCounter2 = 1; // TS Error: cannot be mutated&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Solution - recursive &lt;code&gt;Readonly&lt;/code&gt; is called &lt;code&gt;DeepReadonly&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;To fix this we can use &lt;a href=&#34;https://github.com/piotrwitek/utility-types#deepreadonlyt&#34;&gt;&lt;code&gt;DeepReadonly&lt;/code&gt;&lt;/a&gt; type (available from &lt;code&gt;utility-types&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { DeepReadonly } from &#39;utility-types&#39;;&#xA;&#xA;export type State = DeepReadonly&amp;lt;{&#xA;  containerObject: {&#xA;    innerValue: number,&#xA;    numbers: number[],&#xA;  }&#xA;}&amp;gt;;&#xA;&#xA;state.containerObject = { innerValue: 1 }; // TS Error: cannot be mutated&#xA;state.containerObject.innerValue = 1; // TS Error: cannot be mutated&#xA;state.containerObject.numbers.push(1); // TS Error: cannot use mutator methods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Typing reducer&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;to understand following section make sure to learn about &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/type-inference.html&#34;&gt;Type Inference&lt;/a&gt;, &lt;a href=&#34;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#control-flow-based-type-analysis&#34;&gt;Control flow analysis&lt;/a&gt; and &lt;a href=&#34;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#tagged-union-types&#34;&gt;Tagged union types&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { combineReducers } from &#39;redux&#39;;&#xA;import { ActionType } from &#39;typesafe-actions&#39;;&#xA;&#xA;import { Todo, TodosFilter } from &#39;./models&#39;;&#xA;import * as actions from &#39;./actions&#39;;&#xA;import { ADD, CHANGE_FILTER, TOGGLE } from &#39;./constants&#39;;&#xA;&#xA;export type TodosAction = ActionType&amp;lt;typeof actions&amp;gt;;&#xA;&#xA;export type TodosState = Readonly&amp;lt;{&#xA;  todos: Todo[];&#xA;  todosFilter: TodosFilter;&#xA;}&amp;gt;;&#xA;const initialState: TodosState = {&#xA;  todos: [],&#xA;  todosFilter: TodosFilter.All,&#xA;};&#xA;&#xA;export default combineReducers&amp;lt;TodosState, TodosAction&amp;gt;({&#xA;  todos: (state = initialState.todos, action) =&amp;gt; {&#xA;    switch (action.type) {&#xA;      case ADD:&#xA;        return [...state, action.payload];&#xA;&#xA;      case TOGGLE:&#xA;        return state.map(item =&amp;gt;&#xA;          item.id === action.payload&#xA;            ? { ...item, completed: !item.completed }&#xA;            : item&#xA;        );&#xA;&#xA;      default:&#xA;        return state;&#xA;    }&#xA;  },&#xA;  todosFilter: (state = initialState.todosFilter, action) =&amp;gt; {&#xA;    switch (action.type) {&#xA;      case CHANGE_FILTER:&#xA;        return action.payload;&#xA;&#xA;      default:&#xA;        return state;&#xA;    }&#xA;  },&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Typing reducer with &lt;code&gt;typesafe-actions&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Notice we are not required to use any generic type parameter in the API. Try to compare it with regular reducer as they are equivalent.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { combineReducers } from &#39;redux&#39;;&#xA;import { createReducer } from &#39;typesafe-actions&#39;;&#xA;&#xA;import { Todo, TodosFilter } from &#39;./models&#39;;&#xA;import { ADD, CHANGE_FILTER, TOGGLE } from &#39;./constants&#39;;&#xA;&#xA;export type TodosState = Readonly&amp;lt;{&#xA;  todos: Todo[];&#xA;  todosFilter: TodosFilter;&#xA;}&amp;gt;;&#xA;const initialState: TodosState = {&#xA;  todos: [],&#xA;  todosFilter: TodosFilter.All,&#xA;};&#xA;&#xA;const todos = createReducer(initialState.todos)&#xA;  .handleType(ADD, (state, action) =&amp;gt; [...state, action.payload])&#xA;  .handleType(TOGGLE, (state, action) =&amp;gt;&#xA;    state.map(item =&amp;gt;&#xA;      item.id === action.payload&#xA;        ? { ...item, completed: !item.completed }&#xA;        : item&#xA;    )&#xA;  );&#xA;&#xA;const todosFilter = createReducer(initialState.todosFilter).handleType(&#xA;  CHANGE_FILTER,&#xA;  (state, action) =&amp;gt; action.payload&#xA;);&#xA;&#xA;export default combineReducers({&#xA;  todos,&#xA;  todosFilter,&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Testing reducer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import {&#xA;  todosReducer as reducer,&#xA;  todosActions as actions,&#xA;} from &#39;./&#39;;&#xA;import { TodosState } from &#39;./reducer&#39;;&#xA;&#xA;/**&#xA; * FIXTURES&#xA; */&#xA;const getInitialState = (initial?: Partial&amp;lt;TodosState&amp;gt;) =&amp;gt;&#xA;  reducer(initial as TodosState, {} as any);&#xA;&#xA;/**&#xA; * STORIES&#xA; */&#xA;describe(&#39;Todos Stories&#39;, () =&amp;gt; {&#xA;  describe(&#39;initial state&#39;, () =&amp;gt; {&#xA;    it(&#39;should match a snapshot&#39;, () =&amp;gt; {&#xA;      const initialState = getInitialState();&#xA;      expect(initialState).toMatchSnapshot();&#xA;    });&#xA;  });&#xA;&#xA;  describe(&#39;adding todos&#39;, () =&amp;gt; {&#xA;    it(&#39;should add a new todo as the first element&#39;, () =&amp;gt; {&#xA;      const initialState = getInitialState();&#xA;      expect(initialState.todos).toHaveLength(0);&#xA;      const state = reducer(initialState, actions.add(&#39;new todo&#39;));&#xA;      expect(state.todos).toHaveLength(1);&#xA;      expect(state.todos[0].title).toEqual(&#39;new todo&#39;);&#xA;    });&#xA;  });&#xA;&#xA;  describe(&#39;toggling completion state&#39;, () =&amp;gt; {&#xA;    it(&#39;should mark active todo as complete&#39;, () =&amp;gt; {&#xA;      const activeTodo = { id: &#39;1&#39;, completed: false, title: &#39;active todo&#39; };&#xA;      const initialState = getInitialState({ todos: [activeTodo] });&#xA;      expect(initialState.todos[0].completed).toBeFalsy();&#xA;      const state1 = reducer(initialState, actions.toggle(activeTodo.id));&#xA;      expect(state1.todos[0].completed).toBeTruthy();&#xA;    });&#xA;  });&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Async Flow with &lt;code&gt;redux-observable&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Typing epics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { RootAction, RootState, Services } from &#39;MyTypes&#39;;&#xA;import { Epic } from &#39;redux-observable&#39;;&#xA;import { tap, ignoreElements, filter } from &#39;rxjs/operators&#39;;&#xA;import { isOfType } from &#39;typesafe-actions&#39;;&#xA;&#xA;import { todosConstants } from &#39;../todos&#39;;&#xA;&#xA;// contrived example!!!&#xA;export const logAddAction: Epic&amp;lt;RootAction, RootAction, RootState, Services&amp;gt; = (&#xA;  action$,&#xA;  state$,&#xA;  { logger }&#xA;) =&amp;gt;&#xA;  action$.pipe(&#xA;    filter(isOfType(todosConstants.ADD)), // action is narrowed to: { type: &#34;ADD_TODO&#34;; payload: string; }&#xA;    tap(action =&amp;gt; {&#xA;      logger.log(&#xA;        `action type must be equal: ${todosConstants.ADD} === ${action.type}`&#xA;      );&#xA;    }),&#xA;    ignoreElements()&#xA;  );&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Testing epics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { StateObservable, ActionsObservable } from &#39;redux-observable&#39;;&#xA;import { RootState, RootAction } from &#39;MyTypes&#39;;&#xA;import { Subject } from &#39;rxjs&#39;;&#xA;&#xA;import { add } from &#39;./actions&#39;;&#xA;import { logAddAction } from &#39;./epics&#39;;&#xA;&#xA;// Simple typesafe mock of all the services, you dont&#39;t need to mock anything else&#xA;// It is decoupled and reusable for all your tests, just put it in a separate file&#xA;const services = {&#xA;  logger: {&#xA;    log: jest.fn(),&#xA;  },&#xA;  localStorage: {&#xA;    loadState: jest.fn(),&#xA;    saveState: jest.fn(),&#xA;  },&#xA;};&#xA;&#xA;describe(&#39;Todos Epics&#39;, () =&amp;gt; {&#xA;  let state$: StateObservable&amp;lt;RootState&amp;gt;;&#xA;&#xA;  beforeEach(() =&amp;gt; {&#xA;    state$ = new StateObservable&amp;lt;RootState&amp;gt;(&#xA;      new Subject&amp;lt;RootState&amp;gt;(),&#xA;      undefined as any&#xA;    );&#xA;  });&#xA;&#xA;  describe(&#39;logging todos actions&#39;, () =&amp;gt; {&#xA;    beforeEach(() =&amp;gt; {&#xA;      services.logger.log.mockClear();&#xA;    });&#xA;&#xA;    it(&#39;should call the logger service when adding a new todo&#39;, done =&amp;gt; {&#xA;      const addTodoAction = add(&#39;new todo&#39;);&#xA;      const action$ = ActionsObservable.of(addTodoAction);&#xA;&#xA;      logAddAction(action$, state$, services)&#xA;        .toPromise()&#xA;        .then((outputAction: RootAction) =&amp;gt; {&#xA;          expect(services.logger.log).toHaveBeenCalledTimes(1);&#xA;          expect(services.logger.log).toHaveBeenCalledWith(&#xA;            &#39;action type must be equal: todos/ADD === todos/ADD&#39;&#xA;          );&#xA;          // expect output undefined because we&#39;re using &#34;ignoreElements&#34; in epic&#xA;          expect(outputAction).toEqual(undefined);&#xA;          done();&#xA;        });&#xA;    });&#xA;  });&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Selectors with &lt;code&gt;reselect&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { createSelector } from &#39;reselect&#39;;&#xA;&#xA;import { TodosState } from &#39;./reducer&#39;;&#xA;&#xA;export const getTodos = (state: TodosState) =&amp;gt; state.todos;&#xA;&#xA;export const getTodosFilter = (state: TodosState) =&amp;gt; state.todosFilter;&#xA;&#xA;export const getFilteredTodos = createSelector(getTodos, getTodosFilter, (todos, todosFilter) =&amp;gt; {&#xA;  switch (todosFilter) {&#xA;    case &#39;completed&#39;:&#xA;      return todos.filter(t =&amp;gt; t.completed);&#xA;    case &#39;active&#39;:&#xA;      return todos.filter(t =&amp;gt; !t.completed);&#xA;&#xA;    default:&#xA;      return todos;&#xA;  }&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Connect with &lt;code&gt;react-redux&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Typing connected component&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Below you&#39;ll find a short explanation of concepts behind using &lt;code&gt;connect&lt;/code&gt; with TypeScript. For more detailed examples please check &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#redux-connected-components&#34;&gt;Redux Connected Components&lt;/a&gt; section.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import MyTypes from &#39;MyTypes&#39;;&#xA;&#xA;import { bindActionCreators, Dispatch, ActionCreatorsMapObject } from &#39;redux&#39;;&#xA;import { connect } from &#39;react-redux&#39;;&#xA;&#xA;import { countersActions } from &#39;../features/counters&#39;;&#xA;import { FCCounter } from &#39;../components&#39;;&#xA;&#xA;// Type annotation for &#34;state&#34; argument is mandatory to check &#xA;// the correct shape of state object and injected props you can also&#xA;// extend connected component Props interface by annotating `ownProps` argument&#xA;const mapStateToProps = (state: MyTypes.RootState, ownProps: FCCounterProps) =&amp;gt; ({&#xA;  count: state.counters.reduxCounter,&#xA;});&#xA;&#xA;// &#34;dispatch&#34; argument needs an annotation to check the correct shape&#xA;//  of an action object when using dispatch function&#xA;const mapDispatchToProps = (dispatch: Dispatch&amp;lt;MyTypes.RootAction&amp;gt;) =&amp;gt;&#xA;  bindActionCreators({&#xA;    onIncrement: countersActions.increment,&#xA;  }, dispatch);&#xA;&#xA;// shorter alternative is to use an object instead of mapDispatchToProps function&#xA;const dispatchToProps = {&#xA;    onIncrement: countersActions.increment,&#xA;};&#xA;&#xA;// Notice we don&#39;t need to pass any generic type parameters to neither&#xA;// the connect function below nor map functions declared above&#xA;// because type inference will infer types from arguments annotations automatically&#xA;// This is much cleaner and idiomatic approach&#xA;export const FCCounterConnected =&#xA;  connect(mapStateToProps, mapDispatchToProps)(FCCounter);&#xA;&#xA;// You can add extra layer of validation of your action creators&#xA;// by using bindActionCreators generic type parameter and RootAction type&#xA;const mapDispatchToProps = (dispatch: Dispatch&amp;lt;MyTypes.RootAction&amp;gt;) =&amp;gt;&#xA;  bindActionCreators&amp;lt;ActionCreatorsMapObject&amp;lt;Types.RootAction&amp;gt;&amp;gt;({&#xA;    invalidActionCreator: () =&amp;gt; 1, // Error: Type &#39;number&#39; is not assignable to type &#39;{ type: &#34;todos/ADD&#34;; payload: Todo; } | { ... }&#xA;  }, dispatch);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Typing &lt;code&gt;useSelector&lt;/code&gt; and &lt;code&gt;useDispatch&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { Dispatch } from &#39;redux&#39;;&#xA;import {&#xA;  TypedUseSelectorHook,&#xA;  useSelector as useGenericSelector,&#xA;  useDispatch as useGenericDispatch&#xA;} from &#39;react-redux&#39;;&#xA;import { RootState, RootAction } from &#39;MyTypes&#39;;&#xA;&#xA;export const useSelector: TypedUseSelectorHook&amp;lt;RootState&amp;gt; = useGenericSelector;&#xA;&#xA;export const useDispatch: () =&amp;gt; Dispatch&amp;lt;RootAction&amp;gt; = useGenericDispatch;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Typing connected component with &lt;code&gt;redux-thunk&lt;/code&gt; integration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: When using thunk action creators you need to use &lt;code&gt;bindActionCreators&lt;/code&gt;. Only this way you can get corrected dispatch props type signature like below.*&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: As of now (Apr 2019) &lt;code&gt;bindActionCreators&lt;/code&gt; signature of the latest &lt;code&gt;redux-thunk&lt;/code&gt; release will not work as below, you need to use our modified type definitions that you can find here &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/playground/typings/redux-thunk/index.d.ts&#34;&gt;&lt;code&gt;/playground/typings/redux-thunk/index.d.ts&lt;/code&gt;&lt;/a&gt; and then add &lt;code&gt;paths&lt;/code&gt; overload in your tsconfig like this: &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/playground/tsconfig.json&#34;&gt;&lt;code&gt;&#34;paths&#34;:{&#34;redux-thunk&#34;:[&#34;typings/redux-thunk&#34;]}&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const thunkAsyncAction = () =&amp;gt; async (dispatch: Dispatch): Promise&amp;lt;void&amp;gt; =&amp;gt; {&#xA;  // dispatch actions, return Promise, etc.&#xA;}&#xA;&#xA;const mapDispatchToProps = (dispatch: Dispatch&amp;lt;Types.RootAction&amp;gt;) =&amp;gt;&#xA;  bindActionCreators(&#xA;    {&#xA;      thunkAsyncAction,&#xA;    },&#xA;    dispatch&#xA;  );&#xA;&#xA;type DispatchProps = ReturnType&amp;lt;typeof mapDispatchToProps&amp;gt;;&#xA;// { thunkAsyncAction: () =&amp;gt; Promise&amp;lt;void&amp;gt;; }&#xA;&#xA;/* Without &#34;bindActionCreators&#34; fix signature will be the same as the original &#34;unbound&#34; thunk function: */&#xA;// { thunkAsyncAction: () =&amp;gt; (dispatch: Dispatch&amp;lt;AnyAction&amp;gt;) =&amp;gt; Promise&amp;lt;void&amp;gt;; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Configuration &amp;amp; Dev Tools&lt;/h1&gt; &#xA;&lt;h2&gt;Common Npm Scripts&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Common TS-related npm scripts shared across projects&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;prettier&#34;: &#34;prettier --list-different &#39;src/**/*.ts&#39; || (echo &#39;\nPlease fix code formatting by running:\nnpm run prettier:fix\n&#39;; exit 1)&#34;,&#xA;&#34;prettier:fix&#34;: &#34;prettier --write &#39;src/**/*.ts&#39;&#34;,&#xA;&#34;lint&#34;: &#34;eslint ./src --ext .js,.jsx,.ts,.tsx&#34;,&#xA;&#34;tsc&#34;: &#34;tsc -p ./ --noEmit&#34;,&#xA;&#34;tsc:watch&#34;: &#34;tsc -p ./ --noEmit -w&#34;,&#xA;&#34;test&#34;: &#34;jest --config jest.config.json&#34;,&#xA;&#34;test:watch&#34;: &#34;jest --config jest.config.json --watch&#34;,&#xA;&#34;test:update&#34;: &#34;jest --config jest.config.json -u&#34;&#xA;&#34;ci-check&#34;: &#34;npm run prettier &amp;amp;&amp;amp; npm run lint &amp;amp;&amp;amp; npm run tsc &amp;amp;&amp;amp; npm run test&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;tsconfig.json&lt;/h2&gt; &#xA;&lt;p&gt;We have recommended &lt;code&gt;tsconfig.json&lt;/code&gt; that you can easily add to your project thanks to &lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-scripts&#34;&gt;&lt;code&gt;react-redux-typescript-scripts&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;{&#xA;  &#34;compilerOptions&#34;: {&#xA;    &#34;target&#34;: &#34;ES6&#34;,&#xA;    &#34;lib&#34;: [&#xA;      &#34;dom&#34;,&#xA;      &#34;dom.iterable&#34;,&#xA;      &#34;esnext&#34;&#xA;    ],&#xA;    &#34;allowJs&#34;: true,&#xA;    &#34;skipLibCheck&#34;: true,&#xA;    &#34;esModuleInterop&#34;: true,&#xA;    &#34;allowSyntheticDefaultImports&#34;: true,&#xA;    &#34;strict&#34;: true,&#xA;    &#34;forceConsistentCasingInFileNames&#34;: true,&#xA;    &#34;noFallthroughCasesInSwitch&#34;: true,&#xA;    &#34;module&#34;: &#34;esnext&#34;,&#xA;    &#34;moduleResolution&#34;: &#34;node&#34;,&#xA;    &#34;resolveJsonModule&#34;: true,&#xA;    &#34;isolatedModules&#34;: true,&#xA;    &#34;noEmit&#34;: true,&#xA;    &#34;jsx&#34;: &#34;react-jsx&#34;&#xA;  },&#xA;  &#34;include&#34;: [&#xA;    &#34;src&#34;,&#xA;    &#34;typings&#34;&#xA;  ]&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TSLib&lt;/h2&gt; &#xA;&lt;p&gt;This library will cut down on your bundle size, thanks to using external runtime helpers instead of adding them per each file.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/tslib&#34;&gt;https://www.npmjs.com/package/tslib&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installation&lt;br&gt; &lt;code&gt;npm i tslib&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then add this to your &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;&#34;compilerOptions&#34;: {&#xA;  &#34;importHelpers&#34;: true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ESLint&lt;/h2&gt; &#xA;&lt;p&gt;We have recommended config that will automatically add a parser &amp;amp; plugin for TypeScript thanks to &lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-scripts&#34;&gt;&lt;code&gt;react-redux-typescript-scripts&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://typescript-eslint.io&#34;&gt;https://typescript-eslint.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installation &lt;code&gt;npm i -D eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;.eslintrc.js&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;module.exports = {&#xA;  root: true,&#xA;  parser: &#39;@typescript-eslint/parser&#39;,&#xA;  plugins: [&#39;@typescript-eslint&#39;],&#xA;  extends: [&#39;react-app&#39;, &#39;react-app/jest&#39;, &#39;prettier&#39;],&#xA;  rules: { &#39;import/no-anonymous-default-export&#39;: 0 },&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Jest&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://jestjs.io/&#34;&gt;https://jestjs.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installation&lt;br&gt; &lt;code&gt;npm i -D jest ts-jest @types/jest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;jest.config.json&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;{&#xA;  &#34;verbose&#34;: true,&#xA;  &#34;transform&#34;: {&#xA;    &#34;.(ts|tsx)&#34;: &#34;ts-jest&#34;&#xA;  },&#xA;  &#34;testRegex&#34;: &#34;(/spec/.*|\\.(test|spec))\\.(ts|tsx|js)$&#34;,&#xA;  &#34;moduleFileExtensions&#34;: [&#34;ts&#34;, &#34;tsx&#34;, &#34;js&#34;],&#xA;  &#34;moduleNameMapper&#34;: {&#xA;    &#34;^Components/(.*)&#34;: &#34;./src/components/$1&#34;&#xA;  },&#xA;  &#34;globals&#34;: {&#xA;    &#34;window&#34;: {},&#xA;    &#34;ts-jest&#34;: {&#xA;      &#34;tsConfig&#34;: &#34;./tsconfig.json&#34;&#xA;    }&#xA;  },&#xA;  &#34;setupFiles&#34;: [&#34;./jest.stubs.js&#34;],&#xA;  &#34;testURL&#34;: &#34;http://localhost/&#34;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;h3&gt;jest.stubs.js&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt;&#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// Global/Window object Stubs for Jest&#xA;window.matchMedia = window.matchMedia || function () {&#xA;  return {&#xA;    matches: false,&#xA;    addListener: function () { },&#xA;    removeListener: function () { },&#xA;  };&#xA;};&#xA;&#xA;window.requestAnimationFrame = function (callback) {&#xA;  setTimeout(callback);&#xA;};&#xA;&#xA;window.localStorage = {&#xA;  getItem: function () { },&#xA;  setItem: function () { },&#xA;};&#xA;&#xA;Object.values = () =&amp;gt; [];&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt;&#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Style Guides&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/styleguidist/react-styleguidist&#34;&gt;react-styleguidist&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/playground/styleguide.config.js&#34;&gt;⟩⟩⟩ styleguide.config.js&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://piotrwitek.github.io/react-redux-typescript-guide/&#34;&gt;⟩⟩⟩ demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h2&gt;Ambient Modules&lt;/h2&gt; &#xA;&lt;h3&gt;Imports in ambient modules&lt;/h3&gt; &#xA;&lt;p&gt;For type augmentation imports should stay outside of module declaration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { Operator } from &#39;rxjs/Operator&#39;;&#xA;import { Observable } from &#39;rxjs/Observable&#39;;&#xA;&#xA;declare module &#39;rxjs/Subject&#39; {&#xA;  interface Subject&amp;lt;T&amp;gt; {&#xA;    lift&amp;lt;R&amp;gt;(operator: Operator&amp;lt;T, R&amp;gt;): Observable&amp;lt;R&amp;gt;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When creating 3rd party type-definitions all the imports should be kept inside the module declaration, otherwise it will be treated as augmentation and show error&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;declare module &#34;react-custom-scrollbars&#34; {&#xA;    import * as React from &#34;react&#34;;&#xA;    export interface positionValues {&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Type-Definitions&lt;/h2&gt; &#xA;&lt;h3&gt;Missing type-definitions error&lt;/h3&gt; &#xA;&lt;p&gt;if you cannot find types for a third-party module you can provide your own types or disable type-checking for this module using &lt;a href=&#34;https://github.com/Microsoft/TypeScript-Handbook/raw/master/pages/Modules.md#shorthand-ambient-modules&#34;&gt;Shorthand Ambient Modules&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// typings/modules.d.ts&#xA;declare module &#39;MyTypes&#39;;&#xA;declare module &#39;react-test-renderer&#39;;&#xA;declare module &#39;@storybook/addon-storyshots&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using custom &lt;code&gt;d.ts&lt;/code&gt; files for npm modules&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use an alternative (customized) type-definitions for some npm module (that usually comes with it&#39;s own type-definitions), you can do it by adding an override in &lt;code&gt;paths&lt;/code&gt; compiler option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;{&#xA;  &#34;compilerOptions&#34;: {&#xA;    &#34;baseUrl&#34;: &#34;.&#34;,&#xA;    &#34;paths&#34;: {&#xA;      &#34;redux&#34;: [&#34;typings/redux&#34;], // use an alternative type-definitions instead of the included one&#xA;      ...&#xA;    },&#xA;    ...,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Type Augmentation&lt;/h2&gt; &#xA;&lt;p&gt;Strategies to fix issues coming from external type-definitions files (*.d.ts)&lt;/p&gt; &#xA;&lt;h3&gt;Augmenting library internal declarations - using relative import&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// added missing autoFocus Prop on Input component in &#34;antd@2.10.0&#34; npm package&#xA;declare module &#39;../node_modules/antd/lib/input/Input&#39; {&#xA;  export interface InputProps {&#xA;    autoFocus?: boolean;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Augmenting library public declarations - using node_modules import&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// fixed broken public type-definitions in &#34;rxjs@5.4.1&#34; npm package&#xA;import { Operator } from &#39;rxjs/Operator&#39;;&#xA;import { Observable } from &#39;rxjs/Observable&#39;;&#xA;&#xA;declare module &#39;rxjs/Subject&#39; {&#xA;  interface Subject&amp;lt;T&amp;gt; {&#xA;    lift&amp;lt;R&amp;gt;(operator: Operator&amp;lt;T, R&amp;gt;): Observable&amp;lt;R&amp;gt;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;More advanced scenarios for working with vendor type-definitions can be found here &lt;a href=&#34;https://github.com/Microsoft/TypeScript-Handbook/raw/master/pages/Modules.md#working-with-other-javascript-libraries&#34;&gt;Official TypeScript Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;h3&gt;- should I still use React.PropTypes in TS?&lt;/h3&gt; &#xA;&lt;p&gt;No. With TypeScript, using PropTypes is an unnecessary overhead. When declaring Props and State interfaces, you will get complete intellisense and design-time safety with static type checking. This way you&#39;ll be safe from runtime errors and you will save a lot of time on debugging. Additional benefit is an elegant and standardized method of documenting your component public API in the source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- when to use &lt;code&gt;interface&lt;/code&gt; declarations and when &lt;code&gt;type&lt;/code&gt; aliases?&lt;/h3&gt; &#xA;&lt;p&gt;From practical side, using &lt;code&gt;interface&lt;/code&gt; declaration will create an identity (interface name) in compiler errors, on the contrary &lt;code&gt;type&lt;/code&gt; aliases doesn&#39;t create an identity and will be unwinded to show all the properties and nested types it consists of.&lt;br&gt; Although I prefer to use &lt;code&gt;type&lt;/code&gt; most of the time there are some places this can become too noisy when reading compiler errors and that&#39;s why I like to leverage this distinction to hide some of not so important type details in errors using interfaces identity. Related &lt;code&gt;ts-lint&lt;/code&gt; rule: &lt;a href=&#34;https://palantir.github.io/tslint/rules/interface-over-type-literal/&#34;&gt;https://palantir.github.io/tslint/rules/interface-over-type-literal/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- what&#39;s better default or named exports?&lt;/h3&gt; &#xA;&lt;p&gt;A common flexible solution is to use module folder pattern, because you can leverage both named and default import when you see fit.&lt;br&gt; With this solution you&#39;ll achieve better encapsulation and be able to safely refactor internal naming and folders structure without breaking your consumer code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// 1. create your component files (`select.tsx`) using default export in some folder:&#xA;&#xA;// components/select.tsx&#xA;const Select: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {&#xA;...&#xA;export default Select;&#xA;&#xA;// 2. in this folder create an `index.ts` file that will re-export components with named exports:&#xA;&#xA;// components/index.ts&#xA;export { default as Select } from &#39;./select&#39;;&#xA;...&#xA;&#xA;// 3. now you can import your components in both ways, with named export (better encapsulation) or using default export (internal access):&#xA;&#xA;// containers/container.tsx&#xA;import { Select } from &#39;@src/components&#39;;&#xA;or&#xA;import Select from &#39;@src/components/select&#39;;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- how to best initialize class instance or static properties?&lt;/h3&gt; &#xA;&lt;p&gt;Prefered modern syntax is to use class Property Initializers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;class ClassCounterWithInitialCount extends React.Component&amp;lt;Props, State&amp;gt; {&#xA;  // default props using Property Initializers&#xA;  static defaultProps: DefaultProps = {&#xA;    className: &#39;default-class&#39;,&#xA;    initialCount: 0,&#xA;  };&#xA;  &#xA;  // initial state using Property Initializers&#xA;  state: State = {&#xA;    count: this.props.initialCount,&#xA;  };&#xA;  ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;- how to best declare component handler functions?&lt;/h3&gt; &#xA;&lt;p&gt;Prefered modern syntax is to use Class Fields with arrow functions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;class ClassCounter extends React.Component&amp;lt;Props, State&amp;gt; {&#xA;// handlers using Class Fields with arrow functions&#xA;  handleIncrement = () =&amp;gt; {&#xA;    this.setState({ count: this.state.count + 1 });&#xA;  };&#xA;  ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Tutorials &amp;amp; Articles&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Curated list of relevant in-depth tutorials&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Higher-Order Components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@jrwebdev/react-higher-order-component-patterns-in-typescript-42278f7590fb&#34;&gt;https://medium.com/@jrwebdev/react-higher-order-component-patterns-in-typescript-42278f7590fb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#table-of-contents&#34;&gt;⇧ back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://github.com/kentcdodds/all-contributors#emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/piotrwitek&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/739075?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Piotrek Witek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=piotrwitek&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=piotrwitek&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#ideas-piotrwitek&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#review-piotrwitek&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#question-piotrwitek&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kazup01&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/8602615?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kazz Yokomizo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#financial-kazup01&#34; title=&#34;Financial&#34;&gt;💵&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#fundingFinding-kazup01&#34; title=&#34;Funding Finding&#34;&gt;🔍&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jakeboone02&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/366438?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jake Boone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=jakeboone02&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/amitdahan&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/9748762?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Amit Dahan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=amitdahan&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/gulderov&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/98167?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gulderov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=gulderov&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/emp823&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/1964212?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erik Pearson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=emp823&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/flymason&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/5342677?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bryan Mason&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=flymason&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.jakub.chodorowicz.pl/&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/119451?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Chodorowicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=chodorowicz&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mleg&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/7266431?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oleg Maslov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/issues?q=author%3Amleg&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/awestbro&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/3393293?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron Westbrook&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/issues?q=author%3Aawestbro&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.linkedin.com/in/peterblazejewicz&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/14539?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Peter Blazejewicz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=peterblazejewicz&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rubysolo&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1642?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Solomon White&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=rubysolo&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/pino&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/8838006?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Levi Rocha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=pino&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://cloudnative.co.jp&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/41281835?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sudachi-kun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/piotrwitek/react-redux-typescript-guide/master/#financial-loadbalance-sudachi-kun&#34; title=&#34;Financial&#34;&gt;💵&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://sosukesuzuki.github.io&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/14838850?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sosuke Suzuki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=sosukesuzuki&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/chillitom&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/74433?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tom Rathbone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=chillitom&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://arshadkazmi42.github.io/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/4654382?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arshad Kazmi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=arshadkazmi42&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://jeongukjae.github.io&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8815362?v=4&#34; width=&#34;100px;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JeongUkJae&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/piotrwitek/react-redux-typescript-guide/commits?author=JeongUkJae&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/kentcdodds/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2017 Piotr Witek &lt;a href=&#34;mailto:piotrek.witek@gmail.com&#34;&gt;piotrek.witek@gmail.com&lt;/a&gt; (&lt;a href=&#34;https://piotrwitek.github.io&#34;&gt;https://piotrwitek.github.io&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>