<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-10T01:41:12Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rocketseat-education/nlw-expert-nodejs</title>
    <updated>2024-02-10T01:41:12Z</updated>
    <id>tag:github.com,2024-02-10:/rocketseat-education/nlw-expert-nodejs</id>
    <link href="https://github.com/rocketseat-education/nlw-expert-nodejs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-time voting system built with Node.js&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rocketseat-education/nlw-expert-nodejs/main/.github/cover.png&#34; alt=&#34;Cover&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;NLW Expert (Node.js)&lt;/h1&gt; &#xA;&lt;p&gt;A real-time voting system where users can create a poll and other users can cast their votes. The system generates a ranking among the options and updates the votes in real-time.&lt;/p&gt; &#xA;&lt;h2&gt;Requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker;&lt;/li&gt; &#xA; &lt;li&gt;Node.js;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository;&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies (&lt;code&gt;npm install&lt;/code&gt;);&lt;/li&gt; &#xA; &lt;li&gt;Setup PostgreSQL and Redis (&lt;code&gt;docker compose up -d&lt;/code&gt;);&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; file (&lt;code&gt;cp .env.example .env&lt;/code&gt;);&lt;/li&gt; &#xA; &lt;li&gt;Run application (&lt;code&gt;npm run dev&lt;/code&gt;);&lt;/li&gt; &#xA; &lt;li&gt;Test it! (I personally recommend testing with &lt;a href=&#34;https://hoppscotch.io/&#34;&gt;Hoppscotch&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;HTTP&lt;/h2&gt; &#xA;&lt;h3&gt;POST &lt;code&gt;/polls&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Create a new poll.&lt;/p&gt; &#xA;&lt;h4&gt;Request body&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;title&#34;: &#34;Qual a melhor linguagem de programação?&#34;,&#xA;  &#34;options&#34;: [&#xA;    &#34;JavaScript&#34;,&#xA;    &#34;Java&#34;,&#xA;    &#34;PHP&#34;,&#xA;    &#34;C#&#34;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Response body&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;pollId&#34;: &#34;194cef63-2ccf-46a3-aad1-aa94b2bc89b0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GET &lt;code&gt;/polls/:pollId&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Return data from a single poll.&lt;/p&gt; &#xA;&lt;h4&gt;Response body&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;poll&#34;: {&#xA;&#x9;&#x9;&#34;id&#34;: &#34;e4365599-0205-4429-9808-ea1f94062a5f&#34;,&#xA;&#x9;&#x9;&#34;title&#34;: &#34;Qual a melhor linguagem de programação?&#34;,&#xA;&#x9;&#x9;&#34;options&#34;: [&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;id&#34;: &#34;4af3fca1-91dc-4c2d-b6aa-897ad5042c84&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;title&#34;: &#34;JavaScript&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;score&#34;: 1&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;id&#34;: &#34;780b8e25-a40e-4301-ab32-77ebf8c79da8&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;title&#34;: &#34;Java&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;score&#34;: 0&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;id&#34;: &#34;539fa272-152b-478f-9f53-8472cddb7491&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;title&#34;: &#34;PHP&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;score&#34;: 0&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;id&#34;: &#34;ca1d4af3-347a-4d77-b08b-528b181fe80e&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;title&#34;: &#34;C#&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;score&#34;: 0&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;]&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;POST &lt;code&gt;/polls/:pollId/votes&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Add a vote to specific poll.&lt;/p&gt; &#xA;&lt;h4&gt;Request body&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;pollOptionId&#34;: &#34;31cca9dc-15da-44d4-ad7f-12b86610fe98&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;WebSockets&lt;/h2&gt; &#xA;&lt;h3&gt;ws &lt;code&gt;/polls/:pollId/results&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Message&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;pollOptionId&#34;: &#34;da9601cc-0b58-4395-8865-113cbdc42089&#34;,&#xA;  &#34;votes&#34;: 2&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--START_SECTION:footer--&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/rocketseat&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://storage.googleapis.com/golden-wind/comunidade/rodape.svg?sanitize=true&#34; alt=&#34;banner&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--END_SECTION:footer--&gt;</summary>
  </entry>
  <entry>
    <title>gridstack/gridstack.js</title>
    <updated>2024-02-10T01:41:12Z</updated>
    <id>tag:github.com,2024-02-10:/gridstack/gridstack.js</id>
    <link href="https://github.com/gridstack/gridstack.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build interactive dashboards in minutes.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gridstack.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/gridstack&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/gridstack.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/gridstack/gridstack.js?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/gridstack/gridstack.js/badge.svg?branch=develop&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/gridstack&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/gridstack.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mobile-friendly modern Typescript library for dashboard layout and creation. Making a drag-and-drop, multi-column responsive dashboard has never been easier. Has multiple bindings and works great with &lt;a href=&#34;https://angular.io/&#34;&gt;Angular&lt;/a&gt; (included), &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt;, &lt;a href=&#34;http://knockoutjs.com&#34;&gt;Knockout.js&lt;/a&gt;, &lt;a href=&#34;https://www.emberjs.com/&#34;&gt;Ember&lt;/a&gt; and others (see &lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#specific-frameworks&#34;&gt;frameworks&lt;/a&gt; section).&lt;/p&gt; &#xA;&lt;p&gt;Inspired by no-longer maintained gridster, built with love.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;http://gridstackjs.com&#34;&gt;http://gridstackjs.com&lt;/a&gt; and &lt;a href=&#34;http://gridstackjs.com/demo/&#34;&gt;these demos&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you find this lib useful, please donate &lt;a href=&#34;https://www.paypal.me/alaind831&#34;&gt;PayPal&lt;/a&gt; (use &lt;strong&gt;“send to a friend”&lt;/strong&gt; to avoid 3% fee) or &lt;a href=&#34;https://www.venmo.com/adumesny&#34;&gt;Venmo&lt;/a&gt; (adumesny) and help support it!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.me/alaind831&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.venmo.com/adumesny&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Venmo-g.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join us on Slack: &lt;a href=&#34;https://join.slack.com/t/gridstackjs/shared_invite/zt-27q0rwf80-5vCt81Z_hfVgpRW7L17MnQ&#34;&gt;https://gridstackjs.slack.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Slack Status](https://gridstackjs.com/badge.svg)](https://gridstackjs.slack.com) --&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt; &lt;em&gt;generated with &lt;a href=&#34;http://doctoc.herokuapp.com/&#34;&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#demo-and-api-documentation&#34;&gt;Demo and API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#include&#34;&gt;Include&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#basic-usage&#34;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#specific-frameworks&#34;&gt;Specific frameworks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#extend-library&#34;&gt;Extend Library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#extend-engine&#34;&gt;Extend Engine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#change-grid-columns&#34;&gt;Change grid columns&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#custom-columns-css&#34;&gt;Custom columns CSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#override-resizabledraggable-options&#34;&gt;Override resizable/draggable options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#touch-devices-support&#34;&gt;Touch devices support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating&#34;&gt;Migrating&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v06&#34;&gt;Migrating to v0.6&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v1&#34;&gt;Migrating to v1&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v2&#34;&gt;Migrating to v2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v3&#34;&gt;Migrating to v3&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v4&#34;&gt;Migrating to v4&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v5&#34;&gt;Migrating to v5&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v6&#34;&gt;Migrating to v6&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v7&#34;&gt;Migrating to v7&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v8&#34;&gt;Migrating to v8&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v9&#34;&gt;Migrating to v9&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#migrating-to-v10&#34;&gt;Migrating to v10&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#jquery-application&#34;&gt;jQuery Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#changes&#34;&gt;Changes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#the-team&#34;&gt;The Team&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h1&gt;Demo and API Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;http://gridstackjs.com&#34;&gt;http://gridstackjs.com&lt;/a&gt; and &lt;a href=&#34;http://gridstackjs.com/demo/&#34;&gt;these demos&lt;/a&gt;, and complete &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/doc&#34;&gt;API documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/gridstack&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/gridstack.svg?sanitize=true&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;yarn add gridstack&#xA;// or&#xA;npm install --save gridstack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Include&lt;/h2&gt; &#xA;&lt;p&gt;ES6 or Typescript&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#39;gridstack/dist/gridstack.min.css&#39;;&#xA;import { GridStack } from &#39;gridstack&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively (single combined file, notice the -all.js) in html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#34;node_modules/gridstack/dist/gridstack.min.css&#34; rel=&#34;stylesheet&#34;/&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/gridstack-all.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: IE support was dropped in v2, but restored in v4.4 by an external contributor (I have no interest in testing+supporting obsolete browser so this likely will break again in the future). You can use the es5 files and polyfill (larger) for older browser instead. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#34;node_modules/gridstack/dist/gridstack.min.css&#34; rel=&#34;stylesheet&#34;/&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/es5/gridstack-poly.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/es5/gridstack-all.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;creating items dynamically...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// ...in your HTML&#xA;&amp;lt;div class=&#34;grid-stack&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;&#xA;// ...in your script&#xA;var grid = GridStack.init();&#xA;grid.addWidget({w: 2, content: &#39;item 1&#39;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... or creating from list&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// using serialize data instead of .addWidget()&#xA;const serializedData = [&#xA;  {x: 0, y: 0, w: 2, h: 2},&#xA;  {x: 2, y: 3, w: 3, content: &#39;item 2&#39;},&#xA;  {x: 1, y: 3}&#xA;];&#xA;&#xA;grid.load(serializedData);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... or DOM created items&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// ...in your HTML&#xA;&amp;lt;div class=&#34;grid-stack&#34;&amp;gt;&#xA;  &amp;lt;div class=&#34;grid-stack-item&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;grid-stack-item-content&#34;&amp;gt;Item 1&amp;lt;/div&amp;gt;&#xA;  &amp;lt;/div&amp;gt;&#xA;  &amp;lt;div class=&#34;grid-stack-item&#34; gs-w=&#34;2&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;grid-stack-item-content&#34;&amp;gt;Item 2 wider&amp;lt;/div&amp;gt;&#xA;  &amp;lt;/div&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&#xA;// ...in your script&#xA;GridStack.init();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or see list of all &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/doc&#34;&gt;API and options&lt;/a&gt; available.&lt;/p&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://jsfiddle.net/adumesny/jqhkry7g&#34;&gt;jsfiddle sample&lt;/a&gt; as running example too.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;GridStack no longer requires external dependencies as of v1 (lodash was removed in v0.5 and jquery API in v1). v3 is a complete HTML5 re-write removing need for jquery. v6 is native mouse and touch event for mobile support, and no longer have jquery-ui version. All you need to include now is &lt;code&gt;gridstack-all.js&lt;/code&gt; and &lt;code&gt;gridstack.min.css&lt;/code&gt; (layouts are done using CSS column based %).&lt;/p&gt; &#xA;&lt;h2&gt;Specific frameworks&lt;/h2&gt; &#xA;&lt;p&gt;search for &lt;a href=&#34;https://www.npmjs.com/search?q=gridstack&amp;amp;ranking=popularity&#34;&gt;&#39;gridstack&#39; under NPM&lt;/a&gt; for latest, more to come...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Angular&lt;/strong&gt;: we now ship out of the box with Angular wrapper components - see &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/angular&#34; target=&#34;_blank&#34;&gt;Angular Component&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Angular9&lt;/strong&gt;: &lt;a href=&#34;https://github.com/pfms84/lb-gridstack&#34;&gt;lb-gridstack&lt;/a&gt; Note: very old v0.3 gridstack instance so recommend for &lt;strong&gt;concept ONLY if you wish to use directive instead&lt;/strong&gt;. Code has &lt;strong&gt;not been vented&lt;/strong&gt; at as I use components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;: &lt;a href=&#34;https://github.com/kdietrich/gridstack-angular&#34;&gt;gridstack-angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ember&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yahoo/ember-gridstack&#34;&gt;ember-gridstack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;knockout&lt;/strong&gt;: see &lt;a href=&#34;https://gridstackjs.com/demo/knockout.html&#34;&gt;demo&lt;/a&gt; using component, but check &lt;a href=&#34;https://github.com/gridstack/gridstack.js/issues/465&#34;&gt;custom bindings ticket&lt;/a&gt; which is likely better approach.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rails&lt;/strong&gt;: &lt;a href=&#34;https://github.com/randoum/gridstack-js-rails&#34;&gt;gridstack-js-rails&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: see &lt;a href=&#34;https://gridstackjs.com/demo/react.html&#34;&gt;demo&lt;/a&gt; with &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/demo/react.html&#34;&gt;src&lt;/a&gt;, or &lt;a href=&#34;https://github.com/Inder2108/react-gridstack-example/tree/master/src/App.js&#34;&gt;react-gridstack-example&lt;/a&gt;, or read on what &lt;a href=&#34;https://github.com/gridstack/gridstack.js/issues/735#issuecomment-329888796&#34;&gt;hooks to use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vue&lt;/strong&gt;: see &lt;a href=&#34;https://gridstackjs.com/demo/vue3js.html&#34;&gt;demo&lt;/a&gt; with &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/demo/vue3js.html&#34;&gt;v3 src&lt;/a&gt; or &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/demo/vue2js.html&#34;&gt;v2 src&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Aurelia&lt;/strong&gt;: &lt;a href=&#34;https://github.com/aurelia-ui-toolkits/aurelia-gridstack&#34;&gt;aurelia-gridstack&lt;/a&gt;, see &lt;a href=&#34;https://aurelia-ui-toolkits.github.io/aurelia-gridstack/&#34;&gt;demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extend Library&lt;/h2&gt; &#xA;&lt;p&gt;You can easily extend or patch gridstack with code like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// extend gridstack with our own custom method&#xA;GridStack.prototype.printCount = function() {&#xA;  console.log(&#39;grid has &#39; + this.engine.nodes.length + &#39; items&#39;);&#xA;};&#xA;&#xA;let grid = GridStack.init();&#xA;&#xA;// you can now call&#xA;grid.printCount();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extend Engine&lt;/h2&gt; &#xA;&lt;p&gt;You can now (5.1+) easily create your own layout engine to further customize your usage. Here is a typescript example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { GridStack, GridStackEngine, GridStackNod, GridStackMoveOpts } from &#39;gridstack&#39;;&#xA;&#xA;class CustomEngine extends GridStackEngine {&#xA;&#xA;  /** refined this to move the node to the given new location */&#xA;  public override moveNode(node: GridStackNode, o: GridStackMoveOpts): boolean {&#xA;    // keep the same original X and Width and let base do it all...&#xA;    o.x = node.x;&#xA;    o.w = node.w;&#xA;    return super.moveNode(node, o);&#xA;  }&#xA;}&#xA;&#xA;GridStack.registerEngine(CustomEngine); // globally set our custom class&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Change grid columns&lt;/h2&gt; &#xA;&lt;p&gt;GridStack makes it very easy if you need [1-12] columns out of the box (default is 12), but you always need &lt;strong&gt;2 things&lt;/strong&gt; if you need to customize this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Change the &lt;code&gt;column&lt;/code&gt; grid option when creating a grid to your number N&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;GridStack.init( {column: N} );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;also include &lt;code&gt;gridstack-extra.css&lt;/code&gt; if &lt;strong&gt;N &amp;lt; 12&lt;/strong&gt; (else custom CSS - see next). Without these, things will not render/work correctly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#34;node_modules/gridstack/dist/gridstack.min.css&#34; rel=&#34;stylesheet&#34;/&amp;gt;&#xA;&amp;lt;link href=&#34;node_modules/gridstack/dist/gridstack-extra.min.css&#34; rel=&#34;stylesheet&#34;/&amp;gt;&#xA;&#xA;&amp;lt;div class=&#34;grid-stack&#34;&amp;gt;...&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: class &lt;code&gt;.grid-stack-N&lt;/code&gt; will automatically be added and we include &lt;code&gt;gridstack-extra.min.css&lt;/code&gt; which defines CSS for grids with custom [2-11] columns. Anything more and you&#39;ll need to generate the SASS/CSS yourself (see next).&lt;/p&gt; &#xA;&lt;p&gt;See example: &lt;a href=&#34;http://gridstack.github.io/gridstack.js/demo/two.html&#34;&gt;2 grids demo&lt;/a&gt; with 6 columns&lt;/p&gt; &#xA;&lt;h2&gt;Custom columns CSS&lt;/h2&gt; &#xA;&lt;p&gt;If you need &amp;gt; 12 columns or want to generate the CSS manually you will need to generate CSS rules for &lt;code&gt;.grid-stack-item[gs-w=&#34;X&#34;]&lt;/code&gt; and &lt;code&gt;.grid-stack-item[gs-x=&#34;X&#34;]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For instance for 4-column grid you need CSS to be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.gs-4 &amp;gt; .grid-stack-item[gs-x=&#34;1&#34;]  { left: 25% }&#xA;.gs-4 &amp;gt; .grid-stack-item[gs-x=&#34;2&#34;]  { left: 50% }&#xA;.gs-4 &amp;gt; .grid-stack-item[gs-x=&#34;3&#34;]  { left: 75% }&#xA;&#xA;.gs-4 &amp;gt; .grid-stack-item { width: 25% }&#xA;.gs-4 &amp;gt; .grid-stack-item[gs-w=&#34;2&#34;]  { width: 50% }&#xA;.gs-4 &amp;gt; .grid-stack-item[gs-w=&#34;3&#34;]  { width: 75% }&#xA;.gs-4 &amp;gt; .grid-stack-item[gs-w=&#34;4&#34;]  { width: 100% }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Better yet, here is a SCSS code snippet, you can use sites like &lt;a href=&#34;https://www.sassmeister.com/&#34;&gt;sassmeister.com&lt;/a&gt; to generate the CSS for you instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;$columns: 20;&#xA;@function fixed($float) {&#xA;  @return round($float * 1000) / 1000; // total 2+3 digits being %&#xA;}&#xA;.gs-#{$columns} &amp;gt; .grid-stack-item {&#xA;&#xA;  width: fixed(100% / $columns);&#xA;&#xA;  @for $i from 1 through $columns - 1 {&#xA;    &amp;amp;[gs-x=&#39;#{$i}&#39;] { left: fixed((100% / $columns) * $i); }&#xA;    &amp;amp;[gs-w=&#39;#{$i+1}&#39;] { width: fixed((100% / $columns) * ($i+1)); }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;you can also use the SCSS &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/src/gridstack-extra.scss&#34;&gt;src/gridstack-extra.scss&lt;/a&gt; included in NPM package and modify to add more columns.&lt;/p&gt; &#xA;&lt;p&gt;Sample gulp command for 30 columns:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;gulp.src(&#39;node_modules/gridstack/dist/src/gridstack-extra.scss&#39;)&#xA;        .pipe(replace(&#39;$start: 2 !default;&#39;,&#39;$start: 30;&#39;))&#xA;        .pipe(replace(&#39;$end: 11 !default;&#39;,&#39;$end: 30;&#39;))&#xA;        .pipe(sass({outputStyle: &#39;compressed&#39;}))&#xA;        .pipe(rename({extname: &#39;.min.css&#39;}))&#xA;        .pipe(gulp.dest(&#39;dist/css&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Override resizable/draggable options&lt;/h2&gt; &#xA;&lt;p&gt;You can override default &lt;code&gt;resizable&lt;/code&gt;/&lt;code&gt;draggable&lt;/code&gt; options. For instance to enable other then bottom right resizing handle you can init gridstack like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;GridStack.init({&#xA;  resizable: {&#xA;    handles: &#39;e,se,s,sw,w&#39;&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Touch devices support&lt;/h2&gt; &#xA;&lt;p&gt;gridstack v6+ now support mobile out of the box, with the addition of native touch event (along with mouse event) for drag&amp;amp;drop and resize. Older versions (3.2+) required the jq version with added touch punch, but doesn&#39;t work well with nested grids.&lt;/p&gt; &#xA;&lt;p&gt;This option is now the default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let options = {&#xA;  alwaysShowResizeHandle: &#39;mobile&#39; // true if we&#39;re on mobile devices&#xA;};&#xA;GridStack.init(options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://gridstack.github.io/gridstack.js/demo/mobile.html&#34;&gt;example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Migrating&lt;/h1&gt; &#xA;&lt;h2&gt;Migrating to v0.6&lt;/h2&gt; &#xA;&lt;p&gt;starting in 0.6.x &lt;code&gt;change&lt;/code&gt; event are no longer sent (for pretty much most nodes!) when an item is just added/deleted unless it also changes other nodes (was incorrect and causing inefficiencies). You may need to track &lt;code&gt;added|removed&lt;/code&gt; &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/doc#events&#34;&gt;events&lt;/a&gt; if you didn&#39;t and relied on the old broken behavior.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v1&lt;/h2&gt; &#xA;&lt;p&gt;v1.0.0 removed Jquery from the API and external dependencies, which will require some code changes. Here is a list of the changes:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;see previous step if not on v0.6 already&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;your code only needs to &lt;code&gt;import GridStack from &#39;gridstack&#39;&lt;/code&gt; or include &lt;code&gt;gridstack.all.js&lt;/code&gt; and &lt;code&gt;gristack.css&lt;/code&gt; (don&#39;t include other JS) and is recommended you do that as internal dependencies will change over time. If you are jquery based, see &lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#jquery-application&#34;&gt;jquery app&lt;/a&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;code change:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;OLD&lt;/strong&gt; initializing code + adding a widget + adding an event:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// initialization returned Jquery element, requiring second call to get GridStack var&#xA;var grid = $(&#39;.grid-stack&#39;).gridstack(opts?).data(&#39;gridstack&#39;);&#xA;&#xA;// returned Jquery element&#xA;grid.addWidget($(&#39;&amp;lt;div&amp;gt;&amp;lt;div class=&#34;grid-stack-item-content&#34;&amp;gt; test &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&#39;), undefined, undefined, 2, undefined, true);&#xA;&#xA;// jquery event handler&#xA;$(&#39;.grid-stack&#39;).on(&#39;added&#39;, function(e, items) {/* items contains info */});&#xA;&#xA;// grid access after init&#xA;var grid = $(&#39;.grid-stack&#39;).data(&#39;gridstack&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// element identifier defaults to &#39;.grid-stack&#39;, returns the grid&#xA;// Note: for Typescript use window.GridStack.init() until next native 2.x TS version&#xA;var grid = GridStack.init(opts?, element?);&#xA;&#xA;// returns DOM element&#xA;grid.addWidget(&#39;&amp;lt;div&amp;gt;&amp;lt;div class=&#34;grid-stack-item-content&#34;&amp;gt; test &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&#39;, {width: 2});&#xA;// Note: in 3.x it&#39;s ever simpler &#xA;// grid.addWidget({w:2, content: &#39;test&#39;})&#xA;&#xA;// event handler&#xA;grid.on(&#39;added&#39;, function(e, items) {/* items contains info */});&#xA;&#xA;// grid access after init&#xA;var grid = el.gridstack; // where el = document.querySelector(&#39;.grid-stack&#39;) or other ways...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other rename changes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;`GridStackUI` --&amp;gt; `GridStack`&#xA;`GridStackUI.GridStackEngine` --&amp;gt; `GridStack.Engine`&#xA;`grid.container` (jquery grid wrapper) --&amp;gt; `grid.el` // (grid DOM element)&#xA;`grid.grid` (GridStackEngine) --&amp;gt; `grid.engine`&#xA;`grid.setColumn(N)` --&amp;gt; `grid.column(N)` and `grid.column()` // to get value, old API still supported though&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Recommend looking at the &lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/demo&#34;&gt;many samples&lt;/a&gt; for more code examples.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v2&lt;/h2&gt; &#xA;&lt;p&gt;make sure to read v1 migration first!&lt;/p&gt; &#xA;&lt;p&gt;v2 is a Typescript rewrite of 1.x, removing all jquery events, using classes and overall code cleanup to support ES6 modules. Your code might need to change from 1.x&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In general methods that used no args (getter) vs setter can&#39;t be used in TS when the arguments differ (set/get are also not function calls so API would have changed). Instead we decided to have &lt;b&gt;all set methods return&lt;/b&gt; &lt;code&gt;GridStack&lt;/code&gt; to they can be chain-able (ex: &lt;code&gt;grid.float(true).cellHeight(10).column(6)&lt;/code&gt;). Also legacy methods that used to take many parameters will now take a single object (typically &lt;code&gt;GridStackOptions&lt;/code&gt; or &lt;code&gt;GridStackWidget&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;`addWidget(el, x, y, width, height)` --&amp;gt; `addWidget(el, {with: 2})`&#xA;// Note: in 2.1.x you can now just do addWidget({with: 2, content: &#34;text&#34;})&#xA;`float()` --&amp;gt; `getFloat()` // to get value&#xA;`cellHeight()` --&amp;gt; `getCellHeight()` // to get value&#xA;`verticalMargin` --&amp;gt; `margin` // grid options and API that applies to all 4 sides.&#xA;`verticalMargin()` --&amp;gt; `getMargin()` // to get value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;event signatures are generic and not jquery-ui dependent anymore. &lt;code&gt;gsresizestop&lt;/code&gt; has been removed as &lt;code&gt;resizestop|dragstop&lt;/code&gt; are now called &lt;strong&gt;after&lt;/strong&gt; the DOM attributes have been updated.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;oneColumnMode&lt;/code&gt; would trigger when &lt;code&gt;window.width&lt;/code&gt; &amp;lt; 768px by default. We now check for grid width instead (more correct and supports nesting). You might need to adjust grid &lt;code&gt;oneColumnSize&lt;/code&gt; or &lt;code&gt;disableOneColumnMode&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; 2.x no longer support legacy IE11 and older due to using more compact ES6 output and typecsript native code. You will need to stay at 1.x&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v3&lt;/h2&gt; &#xA;&lt;p&gt;make sure to read v2 migration first!&lt;/p&gt; &#xA;&lt;p&gt;v3 has a new HTML5 drag&amp;amp;drop plugging (63k total, all native code), while still allowing you to use the legacy jquery-ui version instead (188k), or a new static grid version (34k, no user drag&amp;amp;drop but full API support). You will need to decide which version to use as &lt;code&gt;gridstack.all.js&lt;/code&gt; no longer exist (same is now &lt;code&gt;gridstack-jq.js&lt;/code&gt;) - see &lt;a href=&#34;https://raw.githubusercontent.com/gridstack/gridstack.js/master/#include&#34;&gt;include info&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: HTML5 version is almost on parity with the old jquery-ui based drag&amp;amp;drop. the &lt;code&gt;containment&lt;/code&gt; (prevent a child from being dragged outside it&#39;s parent) and &lt;code&gt;revert&lt;/code&gt; (not clear what it is for yet) are not yet implemented in initial release of v3.0.0.&lt;br&gt; Also mobile devices don&#39;t support h5 &lt;code&gt;drag&lt;/code&gt; events (will need to handle &lt;code&gt;touch&lt;/code&gt;) whereas v3.2 jq version now now supports out of the box (see &lt;a href=&#34;https://github.com/gridstack/gridstack.js/releases/tag/v3.2.0&#34;&gt;v3.2 release&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Breaking changes:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;include (as mentioned) need to change&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;GridStack.update(el, opt)&lt;/code&gt; now takes single &lt;code&gt;GridStackWidget&lt;/code&gt; options instead of only supporting (x,y,w,h) BUT legacy call in JS will continue working the same for now. That method is a complete re-write and does the right constrain and updates now for all the available params.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;locked()&lt;/code&gt;, &lt;code&gt;move()&lt;/code&gt;, &lt;code&gt;resize()&lt;/code&gt;, &lt;code&gt;minWidth()&lt;/code&gt;, &lt;code&gt;minHeight()&lt;/code&gt;, &lt;code&gt;maxWidth()&lt;/code&gt;, &lt;code&gt;maxHeight()&lt;/code&gt; methods are hidden from Typescript (JS can still call for now) as they are just 1 liner wrapper around &lt;code&gt;update(el, opt)&lt;/code&gt; anyway and will go away soon. (ex: &lt;code&gt;move(el, x, y)&lt;/code&gt; =&amp;gt; &lt;code&gt;update(el, {x, y})&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;item attribute like &lt;code&gt;data-gs-min-width&lt;/code&gt; is now &lt;code&gt;gs-min-w&lt;/code&gt;. We removed &#39;data-&#39; from all attributes, and shorten &#39;width|height&#39; to just &#39;w|h&#39; to require less typing and more efficient (2k saved in .js alone!).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;GridStackWidget&lt;/code&gt; used in most API &lt;code&gt;width|height|minWidth|minHeight|maxWidth|maxHeight&lt;/code&gt; are now shorter &lt;code&gt;w|h|minW|minH|maxW|maxH&lt;/code&gt; as well&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Migrating to v4&lt;/h2&gt; &#xA;&lt;p&gt;make sure to read v3 migration first!&lt;/p&gt; &#xA;&lt;p&gt;v4 is a complete re-write of the collision and drag in/out heuristics to fix some very long standing request &amp;amp; bugs. It also greatly improved usability. Read the release notes for more detail.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unlikely&lt;/strong&gt; Breaking Changes (internal usage):&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;removeTimeout&lt;/code&gt; was removed (feedback over trash will be immediate - actual removal still on mouse up)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;the following &lt;code&gt;GridStackEngine&lt;/code&gt; methods changed (used internally, doesn&#39;t affect &lt;code&gt;GridStack&lt;/code&gt; public API)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// moved to 3 methods with new option params to support new code and pixel coverage check&#xA;`collision()` -&amp;gt; `collide(), collideAll(), collideCoverage()`&#xA;`moveNodeCheck(node, x, y, w, h)` -&amp;gt; `moveNodeCheck(node, opt: GridStackMoveOpts)`&#xA;`isNodeChangedPosition(node, x, y, w, h)` -&amp;gt; `changedPosConstrain(node, opt: GridStackMoveOpts)`&#xA;`moveNode(node, x, y, w, h, noPack)` -&amp;gt; `moveNode(node, opt: GridStackMoveOpts)`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;removed old obsolete (v0.6-v1 methods/attrs) &lt;code&gt;getGridHeight()&lt;/code&gt;, &lt;code&gt;verticalMargin&lt;/code&gt;, &lt;code&gt;data-gs-current-height&lt;/code&gt;, &lt;code&gt;locked()&lt;/code&gt;, &lt;code&gt;maxWidth()&lt;/code&gt;, &lt;code&gt;minWidth()&lt;/code&gt;, &lt;code&gt;maxHeight()&lt;/code&gt;, &lt;code&gt;minHeight()&lt;/code&gt;, &lt;code&gt;move()&lt;/code&gt;, &lt;code&gt;resize()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Migrating to v5&lt;/h2&gt; &#xA;&lt;p&gt;make sure to read v4 migration first!&lt;/p&gt; &#xA;&lt;p&gt;v5 does not have any breaking changes from v4, but a focus on nested grids in h5 mode: You can now drag in/out of parent into nested child, with new API parameters values. See the release notes.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v6&lt;/h2&gt; &#xA;&lt;p&gt;the API did not really change from v5, but a complete re-write of Drag&amp;amp;Drop to use native &lt;code&gt;mouseevent&lt;/code&gt; (instead of HTML draggable=true which is buggy on Mac Safari, and doesn&#39;t work on mobile devices) and &lt;code&gt;touchevent&lt;/code&gt; (mobile), and we no longer have jquery ui option (wasn&#39;t working well for nested grids, didn&#39;t want to maintain legacy lib).&lt;/p&gt; &#xA;&lt;p&gt;The main difference is you only need to include gridstack.js and get D&amp;amp;D (desktop and mobile) out of the box for the same size as h5 version.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v7&lt;/h2&gt; &#xA;&lt;p&gt;New addition, no API breakage per say. See release notes about creating sub-grids on the fly.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating to v8&lt;/h2&gt; &#xA;&lt;p&gt;Possible breaking change if you use nested grid JSON format, or original Angular wrapper, or relied on specific CSS paths. Also target is now ES2020 (see release notes).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GridStackOptions.subGrid&lt;/code&gt; -&amp;gt; &lt;code&gt;GridStackOptions.subGridOpts&lt;/code&gt; rename. We now have &lt;code&gt;GridStackWidget.subGridOpts&lt;/code&gt; vs &lt;code&gt;GridStackNode.subGrid&lt;/code&gt; (was both types which is error prone)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GridStackOptions.addRemoveCB&lt;/code&gt; -&amp;gt; &lt;code&gt;GridStack.addRemoveCB&lt;/code&gt; is now global instead of grid option&lt;/li&gt; &#xA; &lt;li&gt;removed &lt;code&gt;GridStackOptions.dragInOptions&lt;/code&gt; since &lt;code&gt;GridStack.setupDragIn()&lt;/code&gt; has it replaced since 4.0&lt;/li&gt; &#xA; &lt;li&gt;remove &lt;code&gt;GridStackOptions.minWidth&lt;/code&gt; obsolete since 5.1, use &lt;code&gt;oneColumnSize&lt;/code&gt; instead&lt;/li&gt; &#xA; &lt;li&gt;CSS rules removed &lt;code&gt;.grid-stack&lt;/code&gt; prefix for anything already gs based, 12 column (default) now uses &lt;code&gt;.gs-12&lt;/code&gt;, extra.css is less than 1/4th it original size!, &lt;code&gt;gs-min|max_w|h&lt;/code&gt; attribute no longer written (but read)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migrating to v9&lt;/h2&gt; &#xA;&lt;p&gt;New addition - see release notes about &lt;code&gt;sizeToContent&lt;/code&gt; feature. Possible break:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GridStack.onParentResize()&lt;/code&gt; is now called &lt;code&gt;onResize()&lt;/code&gt; as grid now directly track size change, no longer involving parent per say to tell us anything. Note sure why it was public.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migrating to v10&lt;/h2&gt; &#xA;&lt;p&gt;we now support much richer responsive behavior with &lt;code&gt;GridStackOptions.columnOpts&lt;/code&gt; including any breakpoint width:column pairs, or automatic column sizing.&lt;/p&gt; &#xA;&lt;p&gt;breaking change:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;disableOneColumnMode&lt;/code&gt;, &lt;code&gt;oneColumnSize&lt;/code&gt; have been removed (thought we temporary convert if you have them). use &lt;code&gt;{ columnOpts: breakpoints: [{w:768, c:1}] }&lt;/code&gt; for the same behavior.&lt;/li&gt; &#xA; &lt;li&gt;1 column mode switch is no longer by default (&lt;code&gt;columnOpts&lt;/code&gt; is not defined) as too many new users had issues. Instead set it explicitly (see above).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;oneColumnModeDomSort&lt;/code&gt; has been removed. Planning to support per column layouts at some future times. TBD&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;jQuery Application&lt;/h1&gt; &#xA;&lt;p&gt;This is &lt;strong&gt;old and no longer apply to v6+&lt;/strong&gt;. You&#39;ll need to use v5.1.1 and before&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#39;gridstack/dist/gridstack.min.css&#39;;&#xA;import { GridStack } from &#39;gridstack&#39;;&#xA;import &#39;gridstack/dist/jq/gridstack-dd-jqueryui&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;jquery&lt;/code&gt; &amp;amp; &lt;code&gt;jquery-ui&lt;/code&gt; are imported by name, so you will have to specify their location in your webpack (or equivalent) config file, which means you can possibly bring your own version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  alias: {&#xA;    &#39;jquery&#39;: &#39;gridstack/dist/jq/jquery.js&#39;,&#xA;    &#39;jquery-ui&#39;: &#39;gridstack/dist/jq/jquery-ui.js&#39;,&#xA;    &#39;jquery.ui&#39;: &#39;gridstack/dist/jq/jquery-ui.js&#39;,&#xA;    &#39;jquery.ui.touch-punch&#39;: &#39;gridstack/dist/jq/jquery.ui.touch-punch.js&#39;,&#xA;  },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively (single combined file) in html&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#34;node_modules/gridstack/dist/gridstack.min.css&#34; rel=&#34;stylesheet&#34;/&amp;gt;&#xA;&amp;lt;!-- HTML5 drag&amp;amp;drop (70k) --&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/gridstack-h5.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;!-- OR jquery-ui drag&amp;amp;drop (195k) --&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/gridstack-jq.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;!-- OR static grid (40k) --&amp;gt;&#xA;&amp;lt;script src=&#34;node_modules/gridstack/dist/gridstack-static.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have a native HTML5 drag&#39;n&#39;drop through the plugin system (default), but the jquery-ui version can be used instead. It will bundle &lt;code&gt;jquery&lt;/code&gt; (3.5.1) + &lt;code&gt;jquery-ui&lt;/code&gt; (1.13.1 minimal drag|drop|resize) + &lt;code&gt;jquery-ui-touch-punch&lt;/code&gt; (1.0.8 for mobile support) in &lt;code&gt;gridstack-jq.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: in v4, v3&lt;/strong&gt;: we ES6 module import jquery &amp;amp; jquery-ui by name, so you need to specify location of those .js files, which means you might be able to bring your own version as well. See the include instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: in v1.x&lt;/strong&gt; IFF you want to use gridstack-jq instead and your app needs to bring your own JQ version, you should &lt;strong&gt;instead&lt;/strong&gt; include &lt;code&gt;gridstack-poly.min.js&lt;/code&gt; (optional IE support) + &lt;code&gt;gridstack.min.js&lt;/code&gt; + &lt;code&gt;gridstack.jQueryUI.min.js&lt;/code&gt; after you import your JQ libs. But note that there are issue with jQuery and ES6 import (see &lt;a href=&#34;https://github.com/gridstack/gridstack.js/issues/1306&#34;&gt;1306&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;As for events, you can still use &lt;code&gt;$(&#34;.grid-stack&#34;).on(...)&lt;/code&gt; for the version that uses jquery-ui for things we don&#39;t support.&lt;/p&gt; &#xA;&lt;h1&gt;Changes&lt;/h1&gt; &#xA;&lt;p&gt;View our change log &lt;a href=&#34;https://github.com/gridstack/gridstack.js/tree/master/doc/CHANGES.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;The Team&lt;/h1&gt; &#xA;&lt;p&gt;gridstack.js is currently maintained by &lt;a href=&#34;https://github.com/adumesny&#34;&gt;Alain Dumesny&lt;/a&gt;, before that &lt;a href=&#34;https://github.com/radiolips&#34;&gt;Dylan Weiss&lt;/a&gt;, originally created by &lt;a href=&#34;https://github.com/troolee&#34;&gt;Pavel Reznikov&lt;/a&gt;. We appreciate &lt;a href=&#34;https://github.com/gridstack/gridstack.js/graphs/contributors&#34;&gt;all contributors&lt;/a&gt; for help.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rocketseat-education/nlw-expert-react-native</title>
    <updated>2024-02-10T01:41:12Z</updated>
    <id>tag:github.com,2024-02-10:/rocketseat-education/nlw-expert-react-native</id>
    <link href="https://github.com/rocketseat-education/nlw-expert-react-native" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A food delivery mobile app&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/rocketseat&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://storage.googleapis.com/golden-wind/comunidade/rodape.svg?sanitize=true&#34; alt=&#34;banner&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--END_SECTION:footer--&gt;</summary>
  </entry>
</feed>