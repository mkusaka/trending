<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-30T01:31:18Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>astoilkov/main-thread-scheduling</title>
    <updated>2024-04-30T01:31:18Z</updated>
    <id>tag:github.com,2024-04-30:/astoilkov/main-thread-scheduling</id>
    <link href="https://github.com/astoilkov/main-thread-scheduling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and consistently responsive apps using a single function call&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;288px&#34; src=&#34;https://raw.githubusercontent.com/astoilkov/main-thread-scheduling/main/media/logo-centered.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;b&gt;main-thread-scheduling&lt;/b&gt; &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Fast and consistently responsive apps using a single function call &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=main-thread-scheduling&#34;&gt; &lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/main-thread-scheduling&#34; alt=&#34;Gzipped Size&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/astoilkov/main-thread-scheduling/actions/workflows/main.yml&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/astoilkov/main-thread-scheduling/main.yml?branch=main&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install main-thread-scheduling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The library lets you run computationally heavy tasks on the main thread while ensuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your app&#39;s UI doesn&#39;t freeze.&lt;/li&gt; &#xA; &lt;li&gt;Your users&#39; computer fans don&#39;t spin.&lt;/li&gt; &#xA; &lt;li&gt;Your &lt;a href=&#34;https://web.dev/articles/inp&#34;&gt;INP (Interaction to Next Paint)&lt;/a&gt; is in green.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s easy to plug it into your existing codebase.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A real world showcase of &lt;a href=&#34;https://twitter.com/antoniostoilkov/status/1539576912498118656&#34;&gt;searching in a folder with 10k notes, 200k+ lines of text, that take 50MB on disk&lt;/a&gt; and getting results instantly.&lt;/p&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You want to turn a synchronous function into a non-blocking asynchronous function. &lt;strong&gt;Avoids UI freezes.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;You want to render important elements first and less urgent ones second. &lt;strong&gt;Improves perceived performance.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;You want to run a long background task that doesn&#39;t spin the fans after a while. &lt;strong&gt;Avoids bad reputation.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;You want to run multiple backgrounds tasks that don&#39;t degrade your app performance with time. &lt;strong&gt;Prevents death by a thousand cuts.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;requestIdleCallback()&lt;/code&gt; and &lt;code&gt;requestAfterFrame()&lt;/code&gt; for scheduling.&lt;/li&gt; &#xA; &lt;li&gt;Stops task execution when user interacts with the UI (if &lt;code&gt;navigator.scheduling.isInputPending()&lt;/code&gt; API is available).&lt;/li&gt; &#xA; &lt;li&gt;Global queue. Multiple tasks are executed one by one so increasing the number of tasks doesn&#39;t degrade performance linearly.&lt;/li&gt; &#xA; &lt;li&gt;Sorts tasks by importance. Sorts by &lt;a href=&#34;https://raw.githubusercontent.com/astoilkov/main-thread-scheduling/main/#scheduling-strategies&#34;&gt;strategy&lt;/a&gt; and gives priority to tasks requested later.&lt;/li&gt; &#xA; &lt;li&gt;Considerate about your existing code. Tasks with &lt;code&gt;idle&lt;/code&gt; strategy are executed last so there isn&#39;t some unexpected work that slows down the main thread after the background task is finished.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple.&lt;/strong&gt; 90% of the time you only need the &lt;code&gt;yieldOrContinue(strategy)&lt;/code&gt; function. The API has two more functions for more advanced cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Not a weekend project.&lt;/strong&gt; Actively maintained for three years — see &lt;a href=&#34;https://github.com/astoilkov/main-thread-scheduling/graphs/contributors&#34;&gt;contributors&lt;/a&gt; page. I&#39;ve been using it in my own products for over four years — &lt;a href=&#34;https://nota.md&#34;&gt;Nota&lt;/a&gt; and &lt;a href=&#34;https://ibar.app&#34;&gt;iBar&lt;/a&gt;. &lt;a href=&#34;https://flux.ai/&#34;&gt;Flux.ai&lt;/a&gt; are also using it in their product (software for designing hardware circuits using web technologies).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This is the future.&lt;/strong&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask#browser_compatibility&#34;&gt;Some browsers&lt;/a&gt; have already implemented support for scheduling tasks on the main thread. This library tries even harder to improve user perceived performance — see &lt;a href=&#34;https://raw.githubusercontent.com/astoilkov/main-thread-scheduling/main/#alternatives&#34;&gt;explanation&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High quality.&lt;/strong&gt; Aiming for high-quality with &lt;a href=&#34;https://astoilkov.com/my-open-source-principles&#34;&gt;my open-source principles&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can see the library in action in &lt;a href=&#34;https://codesandbox.io/s/main-thread-scheduling-example-qqef6?file=/src/App.js:1188-1361&#34;&gt;this CodeSandbox&lt;/a&gt;. Try removing the call to &lt;code&gt;yieldToContinue()&lt;/code&gt; and then type in the input to see the difference.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;code&gt;yieldOrContinue(strategy: &#39;interactive&#39; | &#39;smooth&#39; | &#39;idle&#39;, signal?: AbortSignal)&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The complexity of the entire library is hidden behind this method. You can have great app performance by calling a single method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;async function findInFiles(query: string) {  &#xA;    for (const file of files) {&#xA;        await yieldOrContinue(&#39;interactive&#39;)&#xA;        &#xA;        for (const line of file.lines) {&#xA;            fuzzySearchLine(line, query)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More complex scenarios&lt;/h3&gt; &#xA;&lt;p&gt;The library has two more functions available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yieldControl(strategy: &#39;interactive&#39; | &#39;smooth&#39; | &#39;idle&#39;, signal?: AbortSignal)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isTimeToYield(strategy: &#39;interactive&#39; | &#39;smooth&#39; | &#39;idle&#39;, signal?: AbortSignal)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These two functions are used together to handle more advanced use cases.&lt;/p&gt; &#xA;&lt;p&gt;A simple use case where you will need those two functions is when you want to render your view before yielding back control to the browser to continue its work:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;async function doHeavyWork() {&#xA;    for (const value of values) {&#xA;        if (isTimeToYield(&#39;interactive&#39;)) {&#xA;            render()&#xA;            await yieldControl(&#39;interactive&#39;)&#xA;        }&#xA;        &#xA;        computeHeavyWorkOnValue(value)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scheduling strategies&lt;/h3&gt; &#xA;&lt;p&gt;There are three scheduling strategies available. You can think about them more easily by completing the sentence with one of the three words: &#34;Scheduling the task keeps the page &lt;code&gt;interactive&lt;/code&gt;/&lt;code&gt;smooth&lt;/code&gt;/&lt;code&gt;idle&lt;/code&gt;.&#34;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;interactive&lt;/code&gt; – use this for things that need to display to the user as fast as possible. Every &lt;code&gt;interactive&lt;/code&gt; task is run for 83ms – this gives you a nice cycle of doing heavy work and letting the browser render pending changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;smooth&lt;/code&gt; — use this for things you want to display to the user quickly but you still want for animations to run smoothly for example. &lt;code&gt;smooth&lt;/code&gt; runs for 13ms and then gives around 3ms to render the frame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;idle&lt;/code&gt; – use this for background tasks. Every idle task is run for 5ms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;h3&gt;Web Workers&lt;/h3&gt; &#xA;&lt;p&gt;Web Workers are a great fit if you have: 1) heavy algorithm (e.g. image processing), 2) heavy process (runs for a long time, big part of the app lifecycle). However, in reality, it&#39;s rare to see people using them. That&#39;s because they require significant investment of time due to the complexity that can&#39;t be avoided when working with CPU threads regardless of the programming language. This library can be used as a gateway before transitioning to Web Workers. In most cases, you would discover the doing it on the main thread is good enough.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;scheduler.postTask()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Scheduler/postTask&#34;&gt;&lt;code&gt;scheduler.postTask()&lt;/code&gt;&lt;/a&gt; is available in some browsers today. &lt;code&gt;postTask()&lt;/code&gt; and &lt;code&gt;main-thread-scheduling&lt;/code&gt; do similar things. You can think of &lt;code&gt;postTask()&lt;/code&gt; as a lower level API — it might be the right choice in specific scenarios. Library owners might be interested in exploring the nuanced differences between the two. For most cases, &lt;code&gt;main-thread-scheduling&lt;/code&gt; provides a &lt;code&gt;scheduleTask()&lt;/code&gt; method that mimics that API of &lt;code&gt;postTask()&lt;/code&gt; while providing the extra benefits of the library.&lt;/p&gt; &#xA;&lt;!--&#xA;&#xA;## Resources&#xA;&#xA;Documents associated with implementing main thread scheduling in browsers:&#xA;- [WICG/main-thread-scheduling](https://github.com/WICG/main-thread-scheduling) and more specifically [Main Thread Scheduling: Prioritized postTask API](https://github.com/WICG/main-thread-scheduling/blob/646edfc3d735333162fb7a447c845b49b6a11d66/PrioritizedPostTask.md)&#xA;- [Native Web Scheduling MVP: API Proposal](https://docs.google.com/document/d/1xU7HyNsEsbXhTgt0ZnXDbeSXm5-m5FzkLJAT6LTizEI/edit#)&#xA;- [Threading and Tasks in Chrome](https://chromium.googlesource.com/chromium/src/+/refs/tags/62.0.3175.0/docs/threading_and_tasks.md#Posting-a-Parallel-Task)&#xA;- [Signal-Based postTask Design](https://docs.google.com/document/d/1Apz-SD-pOagGeyWxIpgOi0ARNkrCrELhPdm18eeu9tw/edit)&#xA;&#xA;Articles that talk about scheduling tasks in the browser:&#xA;- [The hidden magic of Main Thread Scheduling](https://medium.com/nmc-techblog/the-hidden-magic-of-main-thread-scheduling-5f20b7803293)&#xA;- [Sneak Peek: Beyond React 16 – React Blog](https://reactjs.org/blog/2018/03/01/sneak-peek-beyond-react-16.html)&#xA;- [Scheduling in React](https://philippspiess.com/scheduling-in-react/)&#xA;- [Building a faster web experience with the postTask scheduler](https://medium.com/airbnb-engineering/building-a-faster-web-experience-with-the-posttask-scheduler-276b83454e91)&#xA;&#xA;In-depth overview for some of the concepts talked in the document:&#xA;- [`queueMicrotask()`](https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide)&#xA;- [The `requestAnimationFrame()` guide](https://flaviocopes.com/requestanimationframe/)&#xA;- [JavaScript Event Loop vs Node JS Event Loop](https://blog.insiderattack.net/javascript-event-loop-vs-node-js-event-loop-aea2b1b85f5c)&#xA;- [Using `requestIdleCallback()`](https://developers.google.com/web/updates/2015/08/using-requestidlecallback)&#xA;&#xA;--&gt;</summary>
  </entry>
  <entry>
    <title>warden-protocol/wardenprotocol</title>
    <updated>2024-04-30T01:31:18Z</updated>
    <id>tag:github.com,2024-04-30:/warden-protocol/wardenprotocol</id>
    <link href="https://github.com/warden-protocol/wardenprotocol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/warden-protocol/wardenprotocol/main/docs/logo.svg?sanitize=true&#34; alt=&#34;Warden Protocol&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Monorepo for Warden Protocol and its services.&lt;/p&gt; &#xA;&lt;p&gt;More general information about the project can be found at: &lt;a href=&#34;https://wardenprotocol.org/&#34;&gt;https://wardenprotocol.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to learn more, join the network or contribute to the code, check out the documentation website at: &lt;a href=&#34;https://docs.wardenprotocol.org/&#34;&gt;https://docs.wardenprotocol.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;With the exception of the SpaceWard folder, this project is released under the terms of the Apache 2.0 License - see &lt;a href=&#34;https://raw.githubusercontent.com/warden-protocol/wardenprotocol/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Elements of this project are based on the work made by Qredo Ltd on &lt;a href=&#34;https://github.com/qredo/fusionchain&#34;&gt;Fusion Chain&lt;/a&gt; and were released under the Apache 2 license. See &lt;a href=&#34;https://raw.githubusercontent.com/warden-protocol/wardenprotocol/main/NOTICE&#34;&gt;NOTICE&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cruip/tailwind-landing-page-template</title>
    <updated>2024-04-30T01:31:18Z</updated>
    <id>tag:github.com,2024-04-30:/cruip/tailwind-landing-page-template</id>
    <link href="https://github.com/cruip/tailwind-landing-page-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Light is a free landing page template built on top of TailwindCSS and fully coded in React / Next.js. Made by&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Free Tailwind landing page template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2683512/231426766-72ae7bcd-618b-4a3e-87cd-b46a464bde61.png&#34; alt=&#34;Simple TailwindCSS template preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Simple Light&lt;/strong&gt; is a free landing page template built on top of &lt;strong&gt;TailwindCSS&lt;/strong&gt; and fully coded in &lt;strong&gt;React&lt;/strong&gt; / &lt;strong&gt;Next.js&lt;/strong&gt;. Simple light is designed to provide all the basic components a developer need to create a landing page for SaaS products, online services, and more. Use it for whatever you want, and be sure to reach us out on Twitter if you build anything cool/useful with it. Created and maintained with ❤️ by &lt;a href=&#34;https://cruip.com/&#34;&gt;Cruip.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Version 1.3.3 built with Tailwind CSS and React + Vite is available &lt;a href=&#34;https://github.com/cruip/tailwind-landing-page-template/releases/tag/1.3.3&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Live demo&lt;/h2&gt; &#xA;&lt;p&gt;Check the live demo here 👉️ &lt;a href=&#34;https://simple.cruip.com/&#34;&gt;https://simple.cruip.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Simple Pro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cruip.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2683512/151178282-fd81b300-349a-42c3-a30a-f70f6e711e74.png&#34; alt=&#34;Simple Pro&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Design files&lt;/h2&gt; &#xA;&lt;p&gt;If you need the design files, you can download them from Figma&#39;s Community 👉 &lt;a href=&#34;https://bit.ly/3HOZMpf&#34;&gt;https://bit.ly/3HOZMpf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; project bootstrapped with &lt;a href=&#34;https://github.com/vercel/next.js/tree/canary/packages/create-next-app&#34;&gt;&lt;code&gt;create-next-app&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;# or&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;You can start editing the page by modifying &lt;code&gt;app/page.tsx&lt;/code&gt;. The page auto-updates as you edit the file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nextjs.org/docs/api-routes/introduction&#34;&gt;API routes&lt;/a&gt; can be accessed on &lt;a href=&#34;http://localhost:3000/api/hello&#34;&gt;http://localhost:3000/api/hello&lt;/a&gt;. This endpoint can be edited in &lt;code&gt;pages/api/hello.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;pages/api&lt;/code&gt; directory is mapped to &lt;code&gt;/api/*&lt;/code&gt;. Files in this directory are treated as &lt;a href=&#34;https://nextjs.org/docs/api-routes/introduction&#34;&gt;API routes&lt;/a&gt; instead of React pages.&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; to automatically optimize and load Inter, a custom Google Font.&lt;/p&gt; &#xA;&lt;h3&gt;Learn More&lt;/h3&gt; &#xA;&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check out &lt;a href=&#34;https://github.com/vercel/next.js/&#34;&gt;the Next.js GitHub repository&lt;/a&gt; - your feedback and contributions are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Deploy on Vercel&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Support notes&lt;/h3&gt; &#xA;&lt;p&gt;This template has been developed with the App Router (&lt;code&gt;app&lt;/code&gt;) and React Server Components. If you’re unfamiliar with these beta features, you can find more information about them on the Next.js beta documentation page. So, please note that any request dealing with React (e.g. extra features, customisations, et cetera) is to be considered out of the support scope.&lt;/p&gt; &#xA;&lt;p&gt;For more information about what support covers, please see our (FAQs)[https://cruip.com/faq/].&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nucleoapp.com/&#34;&gt;Nucleo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Terms and License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Released under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;GPL&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copyright 2020 &lt;a href=&#34;https://cruip.com/&#34;&gt;Cruip&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use it for personal and commercial projects, but please don’t republish, redistribute, or resell the template.&lt;/li&gt; &#xA; &lt;li&gt;Attribution is not required, although it is really appreciated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About Us&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re an Italian developer/designer duo creating high-quality design/code resources for developers, makers, and startups.&lt;/p&gt; &#xA;&lt;h2&gt;Stay in the loop&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to know when we release new resources, you can follow us on &lt;a href=&#34;https://twitter.com/Cruip_com&#34;&gt;Twitter&lt;/a&gt;, or you can subscribe to our monthly &lt;a href=&#34;https://cruip.com/#subscribe&#34;&gt;newsletter&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>