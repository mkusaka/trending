<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-06T01:41:24Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>subsquid-quests/single-chain-squid</title>
    <updated>2023-10-06T01:41:24Z</updated>
    <id>tag:github.com,2023-10-06:/subsquid-quests/single-chain-squid</id>
    <link href="https://github.com/subsquid-quests/single-chain-squid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The first squid for the network launch quests&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source srcset=&#34;https://uploads-ssl.webflow.com/63b5a9958fccedcf67d716ac/64662df3a5a568fd99e3600c_Squid_Pose_1_White-transparent-slim%201.png&#34; media=&#34;(prefers-color-scheme: dark)&#34;&gt; &#xA;  &lt;img src=&#34;https://uploads-ssl.webflow.com/63b5a9958fccedcf67d716ac/64662df3a5a568fd99e3600c_Squid_Pose_1_White-transparent-slim%201.png&#34; alt=&#34;Subsquid Logo&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.subsquid.io/&#34;&gt;&lt;img src=&#34;https://docs.rs/leptos/badge.svg?sanitize=true&#34; alt=&#34;docs.rs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/subsquid&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1031524867910148188?color=%237289DA&amp;amp;label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://subsquid.io&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://docs.subsquid.io/&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/subsquid&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.subsquid.io/subsquid-network/&#34;&gt;Subsquid Network FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Deploy a single processor squid&lt;/h1&gt; &#xA;&lt;p&gt;This is a quest to run a squid with a single processor. Here is how to run it:&lt;/p&gt; &#xA;&lt;h3&gt;I. Install dependencies: Node.js, Docker, Git.&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On Windows&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Enable &lt;a href=&#34;https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&#34;&gt;Hyper-V&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/desktop/install/windows-install/&#34;&gt;Docker for Windows&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Install NodeJS LTS using the &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;official installer&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git for Windows&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;In all installs it is OK to leave all the options at their default values. You will need a terminal to complete this tutorial - &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt; bash is the preferred option.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On Mac&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/desktop/install/mac-install/&#34;&gt;Docker for Mac&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Install Git using the &lt;a href=&#34;https://sourceforge.net/projects/git-osx-installer/&#34;&gt;installer&lt;/a&gt; or by &lt;a href=&#34;https://git-scm.com/download/mac&#34;&gt;other means&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Install NodeJS LTS using the &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;official installer&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;We recommend configuring NodeJS to install global packages to a folder owned by an unprivileged account. Create the folder by running&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/global-node-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;then configure NodeJS to use it&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm config set prefix ~/global-node-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Make sure that the folder &lt;code&gt;~/global-node-packages/bin&lt;/code&gt; is in &lt;code&gt;PATH&lt;/code&gt;. That allows running globally installed NodeJS executables from any terminal. Here is a one-liner that detects your shell and takes care of setting &lt;code&gt;PATH&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;CURSHELL=`ps -hp $$ | awk &#39;{print $5}&#39;`; case `basename $CURSHELL` in &#39;bash&#39;) DEST=&#34;$HOME/.bash_profile&#34;;; &#39;zsh&#39;) DEST=&#34;$HOME/.zshenv&#34;;; esac; echo &#39;export PATH=&#34;${HOME}/global-node-packages/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; &#34;$DEST&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Alternatively you can add the following line to &lt;code&gt;~/.zshenv&lt;/code&gt; (if you are using zsh) or &lt;code&gt;~/.bash_profile&lt;/code&gt; (if you are using bash) manually:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;export PATH=&#34;${HOME}/global-node-packages/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Re-open the terminal to apply the changes.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On Linux&lt;/summary&gt; &#xA; &lt;p&gt;Install &lt;a href=&#34;https://nodejs.org/en/download/package-manager&#34;&gt;NodeJS (v16 or newer)&lt;/a&gt;, Git and Docker using your distro&#39;s package manager.&lt;/p&gt; &#xA; &lt;p&gt;We recommend configuring NodeJS to install global packages to a folder owned by an unprivileged account. Create the folder by running&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/global-node-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;then configure NodeJS to use it&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm config set prefix ~/global-node-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Make sure that any executables globally installed by NodeJS are in &lt;code&gt;PATH&lt;/code&gt;. That allows running them from any terminal. Open the &lt;code&gt;~/.bashrc&lt;/code&gt; file in a text editor and add the following line at the end:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;export PATH=&#34;${HOME}/global-node-packages/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Re-open the terminal to apply the changes.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;II. Install Subsquid CLI&lt;/h3&gt; &#xA;&lt;p&gt;Open a terminal and run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --global @subsquid/cli@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This adds the &lt;a href=&#34;https://raw.githubusercontent.com/subsquid-quests/single-chain-squid/master/squid-cli&#34;&gt;&lt;code&gt;sqd&lt;/code&gt; command&lt;/a&gt;. Verify that the installation was successful by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A healthy response should look similar to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@subsquid/cli/2.5.0 linux-x64 node-v20.5.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;III. Run the squid&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal and run the following commands to create the squid and enter its folder:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd init my-single-proc-squid -t https://github.com/subsquid-quests/single-chain-squid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd my-single-proc-squid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can replace &lt;code&gt;my-single-proc-squid&lt;/code&gt; with any name you choose for your squid. If a squid with that name already exists in &lt;a href=&#34;https://docs.subsquid.io/deploy-squid/&#34;&gt;Aquarium&lt;/a&gt;, the first command will throw an error; if that happens simply think of another name and repeat the commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press &#34;Get Key&#34; button in the quest card to obtain the &lt;code&gt;singleProc.key&lt;/code&gt; key file. Save it to the &lt;code&gt;./query-gateway/keys&lt;/code&gt; subfolder of the squid folder. The file will be used by the query gateway container.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The template squid uses a PostgreSQL database and a query gateway. Start Docker containers that run these with&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Wait for about a minute before proceeding to the next step.&lt;/p&gt; &lt;p&gt;If you get an error message about &lt;code&gt;unknown shorthand flag: &#39;d&#39; in -d&lt;/code&gt;, that means that you&#39;re using an old version of &lt;code&gt;docker&lt;/code&gt; that does not support the &lt;code&gt;compose&lt;/code&gt; command yet. Update Docker or edit the &lt;code&gt;commands.json&lt;/code&gt; file as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;         &#34;up&#34;: {&#xA;         &#34;deps&#34;: [&#34;check-key&#34;],&#xA;         &#34;description&#34;: &#34;Start a PG database&#34;,&#xA;-        &#34;cmd&#34;: [&#34;docker&#34;, &#34;compose&#34;, &#34;up&#34;, &#34;-d&#34;]&#xA;+        &#34;cmd&#34;: [&#34;docker-compose&#34;, &#34;up&#34;, &#34;-d&#34;]&#xA;       },&#xA;       &#34;down&#34;: {&#xA;         &#34;description&#34;: &#34;Drop a PG database&#34;,&#xA;-        &#34;cmd&#34;: [&#34;docker&#34;, &#34;compose&#34;, &#34;down&#34;]&#xA;+        &#34;cmd&#34;: [&#34;docker-compose&#34;, &#34;down&#34;]&#xA;       },&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Prepare the squid for running by installing dependencies, building the source code and creating all the necessary database tables:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;sqd build&#xA;sqd migration:apply&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start your squid with&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd run .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The command should output lines like these:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[api] 09:56:02 WARN  sqd:graphql-server enabling dumb in-memory cache (size: 100mb, ttl: 1000ms, max-age: 1000ms)&#xA;[api] 09:56:02 INFO  sqd:graphql-server listening on port 4350&#xA;[processor] 09:56:04 INFO  sqd:processor processing blocks from 6000000&#xA;[processor] 09:56:05 INFO  sqd:processor using archive data source&#xA;[processor] 09:56:05 INFO  sqd:processor prometheus metrics are served at port 33097&#xA;[processor] 09:56:08 INFO  sqd:processor:mapping Burned 59865654 Gwei from 6000000 to 6016939&#xA;[processor] 09:56:08 INFO  sqd:processor 6016939 / 17743832, rate: 5506 blocks/sec, mapping: 304 blocks/sec, 182 items/sec, eta: 36m&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The squid should sync in 10-15 minutes. When it&#39;s done, stop it with Ctrl-C, then stop and remove the auxiliary containers with&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd down&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Quest Info&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Skill Level&lt;/th&gt; &#xA;   &lt;th&gt;Time required (minutes)&lt;/th&gt; &#xA;   &lt;th&gt;Max Participants&lt;/th&gt; &#xA;   &lt;th&gt;Reward&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Squid Deployment&lt;/td&gt; &#xA;   &lt;td&gt;$\textcolor{green}{\textsf{Simple}}$&lt;/td&gt; &#xA;   &lt;td&gt;~40&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;$\textcolor{red}{\textsf{750tSQD}}$&lt;/td&gt; &#xA;   &lt;td&gt;open&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Acceptance critera&lt;/h1&gt; &#xA;&lt;p&gt;Sync this squid using the key from the quest card. The syncing progress is tracked by the amount of data the squid has retrieved from &lt;a href=&#34;https://docs.subsquid.io/subsquid-network&#34;&gt;Subsquid Network&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;About this squid&lt;/h1&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://docs.subsquid.io/&#34;&gt;squid&lt;/a&gt; captures USDC Transfer events on ETH, stores them in a database and serves the data over a GraphQL API.&lt;/p&gt; &#xA;&lt;p&gt;The Ethereum data ingester (&#34;processor&#34;) is located in &lt;code&gt;src/main.ts&lt;/code&gt;. It can be started with &lt;code&gt;sqd process&lt;/code&gt;. GraphQL server runs as a separate process started by &lt;code&gt;sqd serve&lt;/code&gt;. You can also use &lt;code&gt;sqd run&lt;/code&gt; to run all the services at once.&lt;/p&gt; &#xA;&lt;p&gt;The squid uses &lt;a href=&#34;https://docs.subsquid.io/subsquid-network&#34;&gt;Subsquid Network&lt;/a&gt; as its primary data source.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>teamhanko/hanko</title>
    <updated>2023-10-06T01:41:24Z</updated>
    <id>tag:github.com,2023-10-06:/teamhanko/hanko</id>
    <link href="https://github.com/teamhanko/hanko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open authentication and user management for the passkey era&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://user-images.githubusercontent.com/20115649/176922807-fb92327a-15d5-4568-a4e7-78093cea045e.svg?sanitize=true#gh-light-mode-only&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://user-images.githubusercontent.com/20115649/176922819-61dfb644-529f-4f81-a577-7daa47185300.svg?sanitize=true#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/teamhanko/hanko/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/teamhanko/hanko/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/teamhanko/hanko/actions/workflows/go.yml&#34;&gt;&lt;img src=&#34;https://github.com/teamhanko/hanko/workflows/Go/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/teamhanko/hanko&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/teamhanko/hanko&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godoc.org/github.com/teamhanko/hanko&#34;&gt;&lt;img src=&#34;https://godoc.org/github.com/teamhanko/hanko?status.svg?sanitize=true&#34; alt=&#34;GoDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@teamhanko/hanko-elements&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@teamhanko/hanko-elements?label=hanko-elements&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@teamhanko/hanko-frontend-sdk&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@teamhanko/hanko-frontend-sdk?label=hanko-frontend-sdk&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;About Hanko&lt;/h1&gt; &#xA;&lt;p&gt;Hanko is an open source authentication and user management solution with a focus on moving the login beyond passwords, while being 100% deployable today.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built for &lt;a href=&#34;https://www.passkeys.io&#34;&gt;passkeys&lt;/a&gt; as introduced by Apple, Google, and Microsoft&lt;/li&gt; &#xA; &lt;li&gt;Fast integration with Hanko Elements web components (login box and user profile)&lt;/li&gt; &#xA; &lt;li&gt;API-first, small footprint, cloud-native&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available for self-hosting and on &lt;a href=&#34;https://www.hanko.io&#34;&gt;Hanko Cloud&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Hanko is built and maintained by &lt;a href=&#34;https://www.hanko.io&#34;&gt;Hanko.io&lt;/a&gt;, an active member of the &lt;a href=&#34;https://fidoalliance.org/company/hanko/&#34;&gt;FIDO Alliance&lt;/a&gt;. This project is the sum of 5 years of experience implementing FIDO and WebAuthn-based authentication in different applications and platforms.&lt;/p&gt; &#xA;&lt;h1&gt;We take you on the journey beyond passwords ...&lt;/h1&gt; &#xA;&lt;p&gt;... and make sure your users won&#39;t get lost on the way. Passwordless logins have been promised to us for quite some time. But until now, &#34;passwordless&#34; was mostly a compromise that only worked for some of the users and had some severe drawbacks that ultimately led to passwords still being present at almost every login. It&#39;s only very recently that passkeys were announced and the ecosystem of devices, browsers, and operating systems is finally ready to truly move beyond passwords.&lt;/p&gt; &#xA;&lt;p&gt;With most devices and browsers now shipping with passkey support and convenient built-in authentication technology like Touch ID, Face ID, and Windows Hello, a much better login experience is enabled that will replace passwords for good. Hanko is built for that shift.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build your passkey-powered auth stack with a few lines of code – and never look back.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The main building blocks of the Hanko project are&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/backend/README.md&#34;&gt;backend&lt;/a&gt; - An authentication API for passkeys, passcodes, and (optional) passwords, OAuth SSO, as well as user management and JWT issuing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/elements/README.md&#34;&gt;hanko-elements&lt;/a&gt; - Web components made for Hanko backend that provide onboarding and login functionality and are customizable with CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/frontend-sdk/README.md&#34;&gt;hanko-frontend-sdk&lt;/a&gt; - A client package for using the Hanko API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The remainder of the repository consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/quickstart&#34;&gt;quickstart&lt;/a&gt; - A quickstart example app, showing off Hanko&#39;s login experience and acting as a reference implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/examples&#34;&gt;examples&lt;/a&gt; - Example implementations for a number of frameworks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/docs&#34;&gt;docs&lt;/a&gt; - The Hanko documentation (&lt;a href=&#34;https://docs.hanko.io&#34;&gt;docs.hanko.io&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Try our hosted &lt;a href=&#34;https://example.hanko.io&#34;&gt;live example&lt;/a&gt; and our companion page &lt;a href=&#34;https://www.passkeys.io&#34;&gt;passkeys.io&lt;/a&gt; or use the &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/quickstart/README.md&#34;&gt;quickstart app&lt;/a&gt; to get a feel for the user experience provided by an application that leverages the Hanko backend API and our custom web component&lt;/li&gt; &#xA; &lt;li&gt;Head over to the &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/backend/README.md&#34;&gt;backend&lt;/a&gt; to learn how to get it up and running for your own project. Use &lt;a href=&#34;https://cloud.hanko.io&#34;&gt;Hanko Cloud&lt;/a&gt; for a hosted backend.&lt;/li&gt; &#xA; &lt;li&gt;Then, integrate &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/elements/README.md&#34;&gt;hanko-elements&lt;/a&gt; – we provide &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/examples/README.md&#34;&gt;example applications&lt;/a&gt; and &lt;a href=&#34;https://docs.hanko.io/guides/frontend&#34;&gt;guides&lt;/a&gt; for your favourite frontend framework in the official documentation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you want to use the Hanko backend API but prefer to build your own UI, you can still make use of the &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/frontend-sdk/README.md&#34;&gt;hanko-frontend-sdk&lt;/a&gt;. It forms the basis of our web components and the client it provides handles communication with the Hanko backend API and saves you the time of rolling your own.&lt;/p&gt; &#xA;&lt;h1&gt;Contact us&lt;/h1&gt; &#xA;&lt;p&gt;Schedule a Hanko demo. Learn how Hanko will speed up your registration and login flows with passkeys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://cal.com/team/hanko/demo&#34;&gt;&lt;img alt=&#34;Book us with Cal.com&#34; src=&#34;https://cal.com/book-with-cal-light.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;We are currently in &lt;strong&gt;Beta&lt;/strong&gt; and may introduce breaking changes. Watch our releases, leave a star, join our &lt;a href=&#34;https://www.hanko.io/community&#34;&gt;Discord community&lt;/a&gt;, or sign up to our &lt;a href=&#34;https://www.hanko.io/updates&#34;&gt;product news&lt;/a&gt; to follow the development. Here&#39;s a brief overview of our roadmap:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Passkeys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Email passcodes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Passwords&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;JWT signing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;User management API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;📢 Hanko Alpha Release&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;hanko-auth&amp;gt;&lt;/code&gt; web component&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Customizable CSS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;📢 Hanko Beta Release&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;JavaScript frontend SDK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Passkey autofill (&lt;a href=&#34;https://github.com/w3c/webauthn/wiki/Explainer:-WebAuthn-Conditional-UI&#34;&gt;Conditional UI&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Audit logs API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Security Key support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mobile app support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;lt;hanko-profile&amp;gt;&lt;/code&gt; web component&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rate limiting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OAuth logins (Sign in with Apple/Google/GitHub)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;i18n &amp;amp; custom translations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;User import&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disable sign-ups&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚙️&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enterprise SSO (OIDC/SAML)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚙️&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;API-supported auth flows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚙️&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mobile SDKs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;⚙️&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Basic email templating &amp;amp; i8n&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2FA for securing passcodes &amp;amp; passwords&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Webhooks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Refresh tokens / sessions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sign in with Microsoft&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OIDC support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additional features that have been requested or that we would like to build but are currently not on the roadmap:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Privileged sessions &amp;amp; step-up authentication&lt;/li&gt; &#xA; &lt;li&gt;Bot protection / Captcha&lt;/li&gt; &#xA; &lt;li&gt;SMS passcode delivery&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Questions, bugs, ideas&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or issues, please check this project&#39;s &lt;a href=&#34;https://github.com/teamhanko/hanko/discussions/categories/q-a&#34;&gt;Q&amp;amp;A section in discussions&lt;/a&gt; and the &lt;a href=&#34;https://github.com/teamhanko/hanko/issues&#34;&gt;open issues&lt;/a&gt;. Feel free to comment on existing issues or create a new issue if you encounter any bugs or have a feature request. For yet unanswered questions, feedback, or new ideas, please open a new discussion.&lt;/p&gt; &#xA;&lt;h2&gt;Discord community &amp;amp; X&lt;/h2&gt; &#xA;&lt;p&gt;We invite you to join our growing &lt;a href=&#34;https://www.hanko.io/community&#34;&gt;Discord community&lt;/a&gt; if you want to get the latest updates on passkeys, WebAuthn, and this project, or if you just want to chat with us. You can also &lt;a href=&#34;https://x.com/hanko_io&#34;&gt;follow us on Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Licenses&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/elements&#34;&gt;hanko-elements&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/frontend-sdk&#34;&gt;hanko-frontend-sdk&lt;/a&gt; are licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/frontend/elements/LICENSE&#34;&gt;MIT License&lt;/a&gt;. Everything else in this repository, including &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/backend&#34;&gt;hanko backend&lt;/a&gt;, is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/teamhanko/hanko/main/LICENSE&#34;&gt;AGPL-3.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>