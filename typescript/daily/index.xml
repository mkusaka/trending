<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:54:04Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>webpro/knip</title>
    <updated>2023-12-01T01:54:04Z</updated>
    <id>tag:github.com,2023-12-01:/webpro/knip</id>
    <link href="https://github.com/webpro/knip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✂️ Find unused files, dependencies and exports in your JavaScript and TypeScript projects. Knip it before you ship it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;✂️ Knip&lt;/h1&gt; &#xA;&lt;p&gt;Hi there!&lt;/p&gt; &#xA;&lt;p&gt;Knip finds &lt;strong&gt;unused files, dependencies and exports&lt;/strong&gt; in your JavaScript and TypeScript projects. Less code and dependencies lead to improved performance, less maintenance and easier refactorings.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is available at &lt;a href=&#34;https://knip.dev&#34;&gt;knip.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the source code of the &lt;a href=&#34;https://www.npmjs.com/package/knip&#34;&gt;knip package&lt;/a&gt; and the content for the &lt;a href=&#34;https://knip.dev&#34;&gt;documentation website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contributions welcome! If you&#39;d like to contribute, please start by reading the &lt;a href=&#34;https://github.com/webpro/knip/raw/main/.github/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Do you feel lost? Feel free to join &lt;a href=&#34;https://discord.gg/r5uXTtbTpc&#34;&gt;Knip&#39;s Discord channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to the wonderful people who have contributed to this project:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/webpro/knip/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=webpro/knip&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>braintrustdata/braintrust-proxy</title>
    <updated>2023-12-01T01:54:04Z</updated>
    <id>tag:github.com,2023-12-01:/braintrustdata/braintrust-proxy</id>
    <link href="https://github.com/braintrustdata/braintrust-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Braintrust AI Proxy&lt;/h1&gt; &#xA;&lt;p&gt;The Braintrust AI proxy offers a unified way to access the world&#39;s leading AI models through a single API, including models from &lt;a href=&#34;https://platform.openai.com/docs/models&#34;&gt;OpenAI&lt;/a&gt;, &lt;a href=&#34;https://docs.anthropic.com/claude/reference/getting-started-with-the-api&#34;&gt;Anthropic&lt;/a&gt;, &lt;a href=&#34;https://ai.meta.com/llama/&#34;&gt;LLaMa 2&lt;/a&gt;, &lt;a href=&#34;https://mistral.ai/&#34;&gt;Mistral&lt;/a&gt;, and more. The benefits of using the proxy include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code Simplification&lt;/strong&gt;: Use a consistent API across different AI providers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost Reduction&lt;/strong&gt;: The proxy automatically caches results, reusing them when possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enhanced Observability&lt;/strong&gt;: Log requests automatically for better tracking and debugging. [Coming soon]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To read more about why we launched the AI proxy, check out our &lt;a href=&#34;https://braintrustdata.com/blog/ai-proxy&#34;&gt;announcement blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the code for the proxy —&amp;nbsp;both the underlying implementation and wrappers that allow you to deploy it on &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;, &lt;a href=&#34;https://developers.cloudflare.com/workers/&#34;&gt;Cloudflare&lt;/a&gt;, &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;, or an &lt;a href=&#34;https://expressjs.com/&#34;&gt;Express&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;h2&gt;Just let me try it!&lt;/h2&gt; &#xA;&lt;p&gt;You can communicate with the proxy via the standard OpenAI drivers/API, and simply set the base url to &lt;code&gt;https://braintrustproxy.com/v1&lt;/code&gt;. Try running the following script in your favorite language, twice.&lt;/p&gt; &#xA;&lt;h3&gt;Typescript&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { OpenAI } from &#34;openai&#34;;&#xA;const client = new OpenAI({&#xA;  baseURL: &#34;https://braintrustproxy.com/v1&#34;,&#xA;  apiKey: process.env.OPENAI_API_KEY, // Can use Braintrust, Anthropic, etc. keys here too&#xA;});&#xA;&#xA;async function main() {&#xA;  const start = performance.now();&#xA;  const response = await client.chat.completions.create({&#xA;    model: &#34;gpt-3.5-turbo&#34;, // // Can use claude-2, llama-2-13b-chat here too&#xA;    messages: [{ role: &#34;user&#34;, content: &#34;What is a proxy?&#34; }],&#xA;    seed: 1, // A seed activates the proxy&#39;s cache&#xA;  });&#xA;  console.log(response.choices[0].message.content);&#xA;  console.log(`Took ${(performance.now() - start) / 1000}s`);&#xA;}&#xA;&#xA;main();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from openai import OpenAI&#xA;import os&#xA;import time&#xA;&#xA;client = OpenAI(&#xA;  base_url=&#34;https://braintrustproxy.com/v1&#34;,&#xA;  api_key=os.environ[&#34;OPENAI_API_KEY&#34;], # Can use Braintrust, Anthropic, etc. keys here too&#xA;)&#xA;&#xA;start = time.time()&#xA;response = client.chat.completions.create(&#xA;&#x9;model=&#34;gpt-3.5-turbo&#34;, # Can use claude-2, llama-2-13b-chat here too&#xA;&#x9;messages=[{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;What is a proxy?&#34;}],&#xA;&#x9;seed=1, # A seed activates the proxy&#39;s cache&#xA;)&#xA;print(response.choices[0].message.content)&#xA;print(f&#34;Took {time.time()-start}s&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cURL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;time curl -i https://braintrustproxy.com/v1/chat/completions \&#xA;  -H &#34;Content-Type: application/json&#34; \&#xA;  -d &#39;{&#xA;    &#34;model&#34;: &#34;gpt-3.5-turbo&#34;,&#xA;    &#34;messages&#34;: [&#xA;      {&#xA;        &#34;role&#34;: &#34;user&#34;,&#xA;        &#34;content&#34;: &#34;What is a proxy?&#34;&#xA;      }&#xA;    ],&#xA;    &#34;seed&#34;: 1&#xA;  }&#39; \&#xA;  -H &#34;Authorization: Bearer $OPENAI_API_KEY&#34; # Can use Braintrust, Anthropic, etc. keys here too&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploying&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full documentation for using the proxy &lt;a href=&#34;https://www.braintrustdata.com/docs/guides/proxy&#34;&gt;here&lt;/a&gt;. The proxy is hosted for you, with end-to-end encryption, at &lt;code&gt;https://braintrustproxy.com/v1&lt;/code&gt;. However, you can also deploy it yourself and customize its behavior.&lt;/p&gt; &#xA;&lt;p&gt;To see docs for how to deploy on various platforms, see the READMEs in the corresponding folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/braintrustdata/braintrust-proxy/main/apis/vercel&#34;&gt;Vercel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/braintrustdata/braintrust-proxy/main/apis/cloudflare&#34;&gt;Cloudflare&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/braintrustdata/braintrust-proxy/main/apis/node&#34;&gt;AWS Lambda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/braintrustdata/braintrust-proxy/main/apis/node&#34;&gt;Express&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;To build the proxy, install &lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt; and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>workos/authkit</title>
    <updated>2023-12-01T01:54:04Z</updated>
    <id>tag:github.com,2023-12-01:/workos/authkit</id>
    <link href="https://github.com/workos/authkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s best login box powered by WorkOS and Radix.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/workos/authkit/assets/896475/9fa7a91e-f5a8-4922-96fb-20a7b478d075&#34; width=&#34;72&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;AuthKit&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;How to use AuthKit&#39;s hosted UI or build your own frontend with the headless User Management APIs&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://workos.com/docs/user-management&#34;&gt;Explore the docs ↗&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to use AuthKit and this repository contains examples for both:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/workos/authkit/main/src/app/using-hosted-authkit&#34;&gt;Using AuthKit&#39;s hosted UI&lt;/a&gt; This is the fastest way to add authentication to your app with AuthKit and WorkOS User Management. It includes a fully themeable hosted UI that handles all of your authentication flows. When you&#39;re ready to go to production you can point it to a custom domain (&lt;code&gt;auth.yourapp.com&lt;/code&gt;) to match your application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/workos/authkit/main/src/app/using-your-own-ui&#34;&gt;Using your own custom UI&lt;/a&gt; Use all of the features of AuthKit, but build out the UI yourself in your own codebase by integrating directly with the headless WorkOS User Management APIs. Your authentication UI will be self-hosted in your application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;You will need a &lt;a href=&#34;https://dashboard.workos.com/signup&#34;&gt;WorkOS account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Sign in to your &lt;a href=&#34;https://dashboard.workos.com&#34;&gt;WorkOS dashboard&lt;/a&gt;, navigate to &lt;strong&gt;API Keys&lt;/strong&gt; and copy the &lt;strong&gt;Client ID&lt;/strong&gt; and the &lt;strong&gt;Secret Key&lt;/strong&gt; (API Key).&lt;/p&gt; &#xA;&lt;p&gt;Rename the &lt;code&gt;.env.local.example&lt;/code&gt; file to &lt;code&gt;.env.local&lt;/code&gt; and supply your &lt;em&gt;Client ID&lt;/em&gt; and &lt;em&gt;Secret Key&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;WORKOS_CLIENT_ID=&#34;&amp;lt;your Client ID&amp;gt;&#34;&#xA;WORKOS_API_KEY=&#34;&amp;lt;your Secret Key&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Redirects&lt;/h3&gt; &#xA;&lt;p&gt;In your &lt;a href=&#34;https://dashboard.workos.com&#34;&gt;WorkOS dashboard&lt;/a&gt;, navigate to &lt;strong&gt;Redirects&lt;/strong&gt; and add the following urls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://localhost:3000/using-your-own-ui/sign-in/google-oauth/callback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://localhost:3000/using-your-own-ui/sign-in/microsoft-oauth/callback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://localhost:3000/using-your-own-ui/sign-in/sso/callback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://localhost:3000/using-hosted-authkit/basic/callback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;http://localhost:3000/using-hosted-authkit/with-session/callback&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>