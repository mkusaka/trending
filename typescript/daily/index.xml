<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-10T01:48:07Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>futantan/OpenGpt</title>
    <updated>2023-03-10T01:48:07Z</updated>
    <id>tag:github.com,2023-03-10:/futantan/OpenGpt</id>
    <link href="https://github.com/futantan/OpenGpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenGpt&lt;/h1&gt; &#xA;&lt;p&gt;网址：&lt;a href=&#34;https://open-gpt-app.vercel.app/&#34;&gt;https://open-gpt-app.vercel.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;最近看到了非常多基于 #OpenAI 的项目。我们每个人都应该具有创建这些项目的能力，从而解决自己的问题。 我准备创建一个 AI 平台，让所有用户都可以使用并创建 #ChatGPT 小应用。开源！ 会在 &lt;a href=&#34;https://twitter.com/EclipsePrayer&#34;&gt;Twitter&lt;/a&gt; 上实时推送进展，欢迎点赞关注!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/EclipsePrayer&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/futantan/OpenGpt/main/public/screenshot.png&#34; alt=&#34;OpenGpt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;计划的功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户可以直接运行每一个 App &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;✅ 2023-03-04 上线第一个 App “Free Style 说唱歌词生成器”&lt;/li&gt; &#xA;   &lt;li&gt;✅ 2023-03-05 上线共 6 款 App，砖已足够，需要引玉&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 用户可以创建自己的 App 🧑🏻‍💻 开发中 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;✅ 2021-03-08 用户可以创建自己的 App，第一阶段计划完成&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;上线第一天，用户已经创建了 100 多个 App！🤯&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;下一阶段计划&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 整理一些明显不好用的 App，在首页隐藏不显示&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 加入用户登录功能&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 可以点赞，并可以据此排序&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 可以收藏，创建属于自己的 App 应用列表&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 为 App 添加标签&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 可以创建只属于自己的私有 App&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; i18n 国际化支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;共同建设&lt;/h2&gt; &#xA;&lt;p&gt;加入 &lt;a href=&#34;https://discord.gg/84J7aMyyCG&#34;&gt;Discord&lt;/a&gt;，我们一起讨论产品未来&lt;/p&gt; &#xA;&lt;h2&gt;交个朋友 或 鼓励一下&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/futantan/OpenGpt/main/public/wechat.png&#34; alt=&#34;wechat&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>huggingface/huggingface.js</title>
    <updated>2023-03-10T01:48:07Z</updated>
    <id>tag:github.com,2023-03-10:/huggingface/huggingface.js</id>
    <link href="https://github.com/huggingface/huggingface.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilities to use the Hugging Face hub API&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://huggingface.co/datasets/huggingface/documentation-images/raw/main/huggingfacejs-dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://huggingface.co/datasets/huggingface/documentation-images/raw/main/huggingfacejs-light.svg&#34;&gt; &#xA;  &lt;img alt=&#34;huggingface javascript library logo&#34; src=&#34;https://huggingface.co/datasets/huggingface/documentation-images/raw/main/huggingfacejs-light.svg?sanitize=true&#34; width=&#34;376&#34; height=&#34;59&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA; &lt;/picture&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Hugging Face JS libraries&lt;/h1&gt; &#xA;&lt;p&gt;This is a collection of JS libraries to interact with the Hugging Face API, with TS types included.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/huggingface.js/main/packages/hub/README.md&#34;&gt;@huggingface/hub&lt;/a&gt;: Interact with huggingface.co to create or delete repos and commit / download files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/huggingface/huggingface.js/main/packages/inference/README.md&#34;&gt;@huggingface/inference&lt;/a&gt;: Use the Inference API to make calls to 100,000+ Machine Learning models!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With more to come, like &lt;code&gt;@huggingface/endpoints&lt;/code&gt; to manage your HF Endpoints!&lt;/p&gt; &#xA;&lt;p&gt;We use modern features to avoid polyfills and dependencies, so the libraries will only work on modern browsers / Node.js &amp;gt;= 18 / Bun / Deno.&lt;/p&gt; &#xA;&lt;p&gt;The libraries are still very young, please help us by opening issues!&lt;/p&gt; &#xA;&lt;h2&gt;Usage example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { createRepo, commit } from &#34;@huggingface/hub&#34;;&#xA;import { HfInference } from &#34;@huggingface/inference&#34;;&#xA;&#xA;// use an access token from your free account&#xA;const HF_ACCESS_TOKEN = &#34;hf_...&#34;;&#xA;&#xA;await createRepo({&#xA;  repo: {type: &#34;model&#34;, name: &#34;my-user/nlp-test&#34;},&#xA;  credentials: {accessToken: HF_ACCESS_TOKEN}&#xA;});&#xA;&#xA;await commit({&#xA;  repo: {type: &#34;model&#34;, name: &#34;my-user/nlp-test&#34;},&#xA;  credentials: {accessToken: HF_ACCESS_TOKEN},&#xA;  title: &#34;Add model file&#34;,&#xA;  operations: [{&#xA;    operation: &#34;addOrUpdate&#34;,&#xA;    path: &#34;pytorch_model.bin&#34;,&#xA;    content: new Blob(...) // Can work with native File in browsers&#xA;  }]&#xA;});&#xA;&#xA;const inference = new HfInference(HF_ACCESS_TOKEN);&#xA;&#xA;await inference.translation({&#xA;  model: &#39;t5-base&#39;,&#xA;  inputs: &#39;My name is Wolfgang and I live in Berlin&#39;&#xA;})&#xA;&#xA;await inference.textToImage({&#xA;  inputs: &#39;award winning high resolution photo of a giant tortoise/((ladybird)) hybrid, [trending on artstation]&#39;,&#xA;  negative_prompt: &#39;blurry&#39;,&#xA;  model: &#39;stabilityai/stable-diffusion-2&#39;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are more features of course, check each library&#39;s README!&lt;/p&gt; &#xA;&lt;h2&gt;Formatting &amp;amp; testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pnpm install&#xA;&#xA;pnpm -r format&#xA;pnpm -r test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm -r build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate ESM and CJS javascript files in &lt;code&gt;packages/*/dist&lt;/code&gt;, eg &lt;code&gt;packages/inference/dist/index.mjs&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chibat/chrome-extension-typescript-starter</title>
    <updated>2023-03-10T01:48:07Z</updated>
    <id>tag:github.com,2023-03-10:/chibat/chrome-extension-typescript-starter</id>
    <link href="https://github.com/chibat/chrome-extension-typescript-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chrome Extension TypeScript Starter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chrome Extension TypeScript Starter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/chibat/chrome-extension-typescript-starter/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chrome Extension, TypeScript and Visual Studio Code&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;node + npm&lt;/a&gt; (Current Version)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Option&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Includes the following&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TypeScript&lt;/li&gt; &#xA; &lt;li&gt;Webpack&lt;/li&gt; &#xA; &lt;li&gt;React&lt;/li&gt; &#xA; &lt;li&gt;Jest&lt;/li&gt; &#xA; &lt;li&gt;Example Code &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Chrome Storage&lt;/li&gt; &#xA;   &lt;li&gt;Options Version 2&lt;/li&gt; &#xA;   &lt;li&gt;content script&lt;/li&gt; &#xA;   &lt;li&gt;count up badge number&lt;/li&gt; &#xA;   &lt;li&gt;background&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;src/typescript: TypeScript source files&lt;/li&gt; &#xA; &lt;li&gt;src/assets: static files&lt;/li&gt; &#xA; &lt;li&gt;dist: Chrome Extension directory&lt;/li&gt; &#xA; &lt;li&gt;dist/js: Generated JavaScript files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Import as Visual Studio Code project&lt;/h2&gt; &#xA;&lt;p&gt;...&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build in watch mode&lt;/h2&gt; &#xA;&lt;h3&gt;terminal&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;Run watch mode.&lt;/p&gt; &#xA;&lt;p&gt;type &lt;code&gt;Ctrl + Shift + B&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Load extension to chrome&lt;/h2&gt; &#xA;&lt;p&gt;Load &lt;code&gt;dist&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;npx jest&lt;/code&gt; or &lt;code&gt;npm run test&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>