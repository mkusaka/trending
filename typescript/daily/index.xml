<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-31T01:38:24Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Cameri/nostream</title>
    <updated>2022-12-31T01:38:24Z</updated>
    <id>tag:github.com,2022-12-31:/Cameri/nostream</id>
    <link href="https://github.com/Cameri/nostream" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Nostr Relay written in TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/Cameri/nostream&#34;&gt;nostream&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;nostream logo&#34; height=&#34;256px&#34; width=&#34;256px&#34; src=&#34;https://user-images.githubusercontent.com/378886/198158439-86e0345a-adc8-4efe-b0ab-04ff3f74c1b2.jpg&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/releases&#34;&gt; &lt;img alt=&#34;GitHub release&#34; src=&#34;https://img.shields.io/github/v/release/Cameri/nostream&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/issues&#34;&gt; &lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/Cameri/nostream?style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/stargazers&#34;&gt; &lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/Cameri/nostream&#34;&gt; &lt;/a&gt; &lt;img alt=&#34;GitHub top language&#34; src=&#34;https://img.shields.io/github/languages/top/Cameri/nostream&#34;&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/network&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/Cameri/nostream&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;GitHub license&#34; src=&#34;https://img.shields.io/github/license/Cameri/nostream&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/Cameri/nostream?branch=main&#34;&gt; &lt;img alt=&#34;Coverage Status&#34; src=&#34;https://coveralls.io/repos/github/Cameri/nostream/badge.svg?branch=main&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/project/overview?id=Cameri_nostr-ts-relay&#34;&gt; &lt;img alt=&#34;Sonarcloud quality gate&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=Cameri_nostr&amp;amp;metric=alert_status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Cameri/nostream/actions&#34;&gt; &lt;img alt=&#34;Build status&#34; src=&#34;https://github.com/Cameri/nostream/actions/workflows/checks.yml/badge.svg?branch=main&amp;amp;event=push&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://github.com/fiatjaf/nostr&#34;&gt;nostr&lt;/a&gt; relay, written in Typescript.&lt;/p&gt; &#xA;&lt;p&gt;This implementation is production-ready. See below for supported features.&lt;/p&gt; &#xA;&lt;p&gt;The project master repository is available on &lt;a href=&#34;https://github.com/Cameri/nostream&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/Xfk5F7?referralCode=Kfv2ly&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;NIPs with a relay-specific implementation are listed here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-01: Basic protocol flow description&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-02: Contact list and petnames&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-04: Encrypted Direct Message&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-09: Event deletion&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-11: Relay information document&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-12: Generic tag queries&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-13: Proof of Work&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-15: End of Stored Events Notice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-16: Event Treatment&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-20: Command Results&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-22: Event &lt;code&gt;created_at&lt;/code&gt; Limits&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-26: Delegated Event Signing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-28: Public Chat&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; NIP-33: Parameterized Replaceable Events&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Standalone setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PostgreSQL 15.0&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;Node v18&lt;/li&gt; &#xA; &lt;li&gt;Typescript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker setups&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker v20.10&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose v2.10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Local Docker setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker Desktop v4.2.0 or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FiloSottile/mkcert&#34;&gt;mkcert&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;WARNING: Docker distributions from Snap, Brew or Debian repositories are NOT SUPPORTED and will result in errors. Install Docker from their &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;official guide&lt;/a&gt; ONLY.&lt;/p&gt; &#xA;&lt;h2&gt;Full Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://andreneves.xyz/p/set-up-a-nostr-relay-server-in-under&#34;&gt;Set up a Nostr relay in under 5 minutes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/andreneves&#34;&gt;Andr√© Neves&lt;/a&gt; (CTO &amp;amp; Co-Founder At &lt;a href=&#34;https://zebedee.io/&#34;&gt;ZEBEDEE&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Quick Start (Docker Compose)&lt;/h2&gt; &#xA;&lt;p&gt;Install Docker Desktop following the &lt;a href=&#34;https://docs.docker.com/desktop/&#34;&gt;official guide&lt;/a&gt;. You may have to uninstall Docker on your machine if you installed it using a different guide.&lt;/p&gt; &#xA;&lt;p&gt;Clone repository and enter directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Cameri/nostream.git&#xA;cd nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/start_local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run in the foreground of the terminal until you stop it with Ctrl+C.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start (Docker Compose)&lt;/h2&gt; &#xA;&lt;p&gt;Install Docker following the &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;official guide&lt;/a&gt;. You may have to uninstall Docker if you installed it using a different guide.&lt;/p&gt; &#xA;&lt;p&gt;Clone repository and enter directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Cameri/nostream.git&#xA;cd nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/start_with_tor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stop the server with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print the Tor hostname:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/print_tor_hostname&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running as a Service&lt;/h3&gt; &#xA;&lt;p&gt;By default this server will run continuously until you stop it with Ctrl+C or until the system restarts.&lt;/p&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://www.swissrouting.com/nostr.html#installing-as-a-service&#34;&gt;install as a systemd service&lt;/a&gt; if you want the server to run again automatically whenever the system is restarted. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ nano /etc/systemd/system/nostream.service&#xA;&#xA;# Note: replace &#34;User=...&#34; with your username, and&#xA;# &#34;/home/nostr/nostream&#34; with the directory where you cloned the repo.&#xA;&#xA;[Unit]&#xA;Description=Nostr TS Relay&#xA;After=network.target&#xA;StartLimitIntervalSec=0&#xA;&#xA;[Service]&#xA;Type=simple&#xA;Restart=always&#xA;RestartSec=5&#xA;User=nostr&#xA;WorkingDirectory=/home/nostr/nostream&#xA;ExecStart=/home/nostr/nostream/scripts/start&#xA;ExecStop=/home/nostr/nostream/scripts/stop&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl enable nostream&#xA;systemctl start nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The logs can be viewed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;journalctl -u nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start (Standalone)&lt;/h2&gt; &#xA;&lt;p&gt;Set the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DB_HOST=localhost&#xA;DB_PORT=5432&#xA;DB_NAME=nostr_ts_relay&#xA;DB_USER=postgres&#xA;DB_PASSWORD=postgres&#xA;REDIS_HOST=localhost&#xA;REDIS_PORT=6379&#xA;REDIS_USER=default&#xA;REDIS_PASSWORD=nostr_ts_relay&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create &lt;code&gt;nostr_ts_relay&lt;/code&gt; database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ psql -h $DB_HOST -p $DB_PORT -U $DB_USER -W&#xA;postgres=# create database nostr_ts_relay;&#xA;postgres=# quit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start Redis and use &lt;code&gt;redis-cli&lt;/code&gt; to set the default password and verify:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ redis-cli&#xA;127.0.0.1:6379&amp;gt; CONFIG SET requirepass &#34;nostr_ts_relay&#34;&#xA;OK&#xA;127.0.0.1:6379&amp;gt; AUTH nostr_ts_relay&#xA;Ok&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clone repository and enter directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Cameri/nostream.git&#xA;cd nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g knex&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run migrations (at least once and after pulling new changes):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run db:migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create ~/.nostr folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir ~/.nostr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start in development mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, start in production mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To clean up the build, coverage and test reports run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;h3&gt;Unit tests&lt;/h3&gt; &#xA;&lt;p&gt;Open a terminal and change to the project&#39;s directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /path/to/nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run unit tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, run unit tests in watch mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test:unit:watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get unit test coverage run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run cover:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the unit tests report open &lt;code&gt;.test-reports/unit/index.html&lt;/code&gt; with a browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;open .test-reports/unit/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the unit tests coverage report open &lt;code&gt;.coverage/unit/lcov-report/index.html&lt;/code&gt; with a browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;open .coverage/unit/lcov-report/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration tests (Docker Compose)&lt;/h3&gt; &#xA;&lt;p&gt;Open a terminal and change to the project&#39;s directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /path/to/nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run integration tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run docker:test:integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And to get integration test coverage run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run docker:cover:integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration tests (Standalone)&lt;/h3&gt; &#xA;&lt;p&gt;Open a terminal and change to the project&#39;s directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /path/to/nostream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DB_HOST=localhost&#xA;DB_PORT=5432&#xA;DB_NAME=nostr_ts_relay_test&#xA;DB_USER=postgres&#xA;DB_PASSWORD=postgres&#xA;DB_MIN_POOL_SIZE=1&#xA;DB_MAX_POOL_SIZE=2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test:integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the integration tests report open &lt;code&gt;.test-reports/integration/report.html&lt;/code&gt; with a browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;open .test-reports/integration/report.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the integration test coverage run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run cover:integration&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see the integration test coverage report open &lt;code&gt;.coverage/integration/lcov-report/index.html&lt;/code&gt; with a browser.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;open .coverage/integration/lcov-report/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can change the default folder by setting the &lt;code&gt;NOSTR_CONFIG_DIR&lt;/code&gt; environment variable to a different path.&lt;/p&gt; &#xA;&lt;p&gt;Run nostream using one of the quick-start guides at least once and &lt;code&gt;~/.nostr/settings.json&lt;/code&gt; will be created. Any changes made to the settings file will be read on the next start.&lt;/p&gt; &#xA;&lt;p&gt;A sample settings file is included at the project root under the name &lt;code&gt;settings.sample.json&lt;/code&gt;. Feel free to copy it to &lt;code&gt;~/.nostr/settings.json&lt;/code&gt; if you would like to have a settings file before running the relay first.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Cameri/nostream/main/CONFIGURATION.md&#34;&gt;CONFIGURATION.md&lt;/a&gt; for a detailed explanation of each environment variable and setting.&lt;/p&gt; &#xA;&lt;h2&gt;Dev Channel&lt;/h2&gt; &#xA;&lt;p&gt;For development discussions, please use the &lt;a href=&#34;https://t.me/nostr_ts_relay&#34;&gt;Nostr Typescript Relay Dev Channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For discussions about the protocol, please feel free to use the &lt;a href=&#34;https://t.me/nostr_protocol&#34;&gt;Nostr Telegram Channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Author&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m Cameri on most social networks. You can find me on Nostr by npub1qqqqqqyz0la2jjl752yv8h7wgs3v098mh9nztd4nr6gynaef6uqqt0n47m.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is MIT licensed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ipfs/public-gateway-checker</title>
    <updated>2022-12-31T01:38:24Z</updated>
    <id>tag:github.com,2022-12-31:/ipfs/public-gateway-checker</id>
    <link href="https://github.com/ipfs/public-gateway-checker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Checks which public gateways are online or not&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IPFS Public Gateway Checker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;A site displaying public IPFS gateways and their online/offline status.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;View the Public Gateway Checker in action&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;on Fleek: &lt;a href=&#34;https://ipfs-public-gateway-checker.on.fleek.co/&#34;&gt;https://ipfs-public-gateway-checker.on.fleek.co/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on GitHub Pages: &lt;a href=&#34;https://ipfs.github.io/public-gateway-checker/&#34;&gt;https://ipfs.github.io/public-gateway-checker/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ipfs.github.io/public-gateway-checker/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/157609/121263486-f7fb2800-c8b5-11eb-9061-0b6f586a6f25.png&#34; alt=&#34;Screenshot of Public Gateway Checker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SECURITY NOTES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The list contains gateways operated by various parties, coordinated by loose mutual consensus, without a central governing authority. Protocol Labs operates and is responsible for only two of the listed gateways: &lt;code&gt;ipfs.io&lt;/code&gt; and &lt;code&gt;dweb.link&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Gateways without origin isolation will be marked with ‚ö†Ô∏è, indicating they are not safe for use cases that require private local storage of data or credentials. &lt;a href=&#34;https://github.com/ipfs/public-gateway-checker/issues/150&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adding a new public gateway&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to add a new public gateway, please edit &lt;code&gt;./src/gateways.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the gateway&#39;s address to the bottom of the list&lt;/li&gt; &#xA; &lt;li&gt;Make sure the final item in the list does &lt;strong&gt;not&lt;/strong&gt; have a comma at the end, but all preceding items do&lt;/li&gt; &#xA; &lt;li&gt;If you care about security of websites loaded via your gateway, make sure it is set up as a &lt;a href=&#34;https://docs.ipfs.io/how-to/address-ipfs-on-web/#subdomain-gateway&#34;&gt;subdomain gateway&lt;/a&gt;. See &lt;a href=&#34;https://github.com/ipfs/go-ipfs/raw/master/docs/config.md#gatewaypublicgateways&#34;&gt;config docs&lt;/a&gt; and &lt;a href=&#34;https://github.com/ipfs/go-ipfs/raw/master/docs/config.md#gateway-recipes&#34;&gt;recipes&lt;/a&gt; for go-ipfs, and &lt;a href=&#34;https://github.com/ipfs/public-gateway-checker/issues/150&#34;&gt;learn more here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Then, submit a pull request for this change. Be sure to follow all the directions in the pull request template so your PR can be triaged as quickly as possible.&lt;/p&gt; &#xA;&lt;h2&gt;Testing locally&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;npm run build&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Command line&lt;/h2&gt; &#xA;&lt;p&gt;Prefer to check public gateways from your terminal? A CLI version, &lt;code&gt;ipfg&lt;/code&gt;, is available at &lt;a href=&#34;https://github.com/JayBrown/Tools/tree/master/ipfg&#34;&gt;https://github.com/JayBrown/Tools/tree/master/ipfg&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zlib-searcher/zlib-searcher</title>
    <updated>2022-12-31T01:38:24Z</updated>
    <id>tag:github.com,2022-12-31:/zlib-searcher/zlib-searcher</id>
    <link href="https://github.com/zlib-searcher/zlib-searcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;search zlib/libgen index to get ipfs_cid.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zlib(libgen) searcher&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/zlib-searcher/zlib-searcher&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/zlib-searcher/zlib-searcher&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/zlib-searcher/zlib-searcher&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/zlib-searcher/zlib-searcher&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/zlib-searcher/zlib-searcher&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Search &lt;code&gt;zlib&lt;/code&gt;/&lt;code&gt;libgen&lt;/code&gt; index to get &lt;code&gt;ipfs_cid&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t save and provide files, we provide search.&lt;/p&gt; &#xA;&lt;p&gt;I hope everyone have a copy of the index locally, so that no need to rely on any centralized service.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy with Docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/zlib-searcher/zlib-searcher.git &amp;amp;&amp;amp; cd zlib-searcher&#xA;wget https://github.com/zlib-searcher/zlib-searcher/releases/download/0.6.0/index_0.6.zip &amp;amp;&amp;amp; unzip index_0.6.zip&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now &lt;code&gt;zlib-searcher&lt;/code&gt; it will listen to &lt;code&gt;0.0.0.0:7070&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;1. Download the pre-compiled binary from &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/releases&#34;&gt;Release&lt;/a&gt;.&lt;/h3&gt; &#xA;&lt;p&gt;Or you can compile by yourself. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/zlib-searcher/zlib-searcher/master/#build-from-source&#34;&gt;Build from source&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;h3&gt;2. Download the &lt;code&gt;index&lt;/code&gt; file that has been created.&lt;/h3&gt; &#xA;&lt;p&gt;We will give the corresponding &lt;code&gt;index&lt;/code&gt; download links for each version in the release page.&lt;/p&gt; &#xA;&lt;p&gt;Or you can make your own via &lt;code&gt;zlib-searcher index&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Extract the &lt;code&gt;index&lt;/code&gt; folder to the same level as the program, it should look like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zlib_searcher_dir&#xA;‚îú‚îÄ‚îÄ index&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ some index files...&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ meta.json&#xA;‚îî‚îÄ‚îÄ zlib-searcher&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Run &lt;code&gt;zlib-searcher run&lt;/code&gt;, it will listen to &lt;code&gt;127.0.0.1:7070&lt;/code&gt;.&lt;/h3&gt; &#xA;&lt;p&gt;Access &lt;a href=&#34;http://127.0.0.1:7070/&#34;&gt;http://127.0.0.1:7070/&lt;/a&gt; to use webui, or you can use the original api.&lt;/p&gt; &#xA;&lt;h4&gt;original search api&lt;/h4&gt; &#xA;&lt;p&gt;You can search by the following fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;title&lt;/li&gt; &#xA; &lt;li&gt;author&lt;/li&gt; &#xA; &lt;li&gt;publisher&lt;/li&gt; &#xA; &lt;li&gt;extension&lt;/li&gt; &#xA; &lt;li&gt;language&lt;/li&gt; &#xA; &lt;li&gt;isbn&lt;/li&gt; &#xA; &lt;li&gt;zlib_id&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;http://127.0.0.1:7070/search?limit=30&amp;amp;query=‰ΩôÂçé&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http://127.0.0.1:7070/search?limit=30&amp;amp;query=title:Êú∫Âô®Â≠¶‰π† extension:azw3 publisher:Ê∏ÖÂçé&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http://127.0.0.1:7070/search?limit=30&amp;amp;query=zlib_id:18557063&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http://127.0.0.1:7070/search?limit=30&amp;amp;query=isbn:9787302423287&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;h3&gt;1. Build &lt;code&gt;zlib-searcher&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;First build frontend&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make frontend_preinstall frontend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then build zlib-searcher&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TARGET=release make&#xA;&#xA;# move the compiled binary to the project root directory&#xA;mv target/release/zlib-searcher .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Build &lt;code&gt;index&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Download &lt;code&gt;zlib_index_books.csv.zip&lt;/code&gt; and &lt;code&gt;libgen_index_books.csv.zip&lt;/code&gt; and extract the &lt;code&gt;csv&lt;/code&gt; files to the project root directory.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;zlib-searcher index&lt;/code&gt;. You may need to &lt;code&gt;rm index/*&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;If you have other csv files, you can run &lt;code&gt;zlib-searcher index -f *.csv&lt;/code&gt; to index them.&lt;/p&gt; &#xA;&lt;p&gt;The finally folder structure should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zlib_searcher_dir // in the example above, it is project root directory.&#xA;‚îú‚îÄ‚îÄ index&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ some index files...&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ meta.json&#xA;‚îî‚îÄ‚îÄ zlib-searcher&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Raw data&lt;/h2&gt; &#xA;&lt;p&gt;We downloaded &lt;code&gt;libgen&lt;/code&gt; sql and &lt;code&gt;zlib&lt;/code&gt; sql and exported the necessary data from them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;id, title, author, publisher, extension, filesize, language, year, pages, isbn, ipfs_cid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This raw data is used to generate our &lt;code&gt;index&lt;/code&gt;, you can download the raw data from here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/releases/download/0.4.0/zlib_index_books.csv.zip&#34;&gt;zlib_index_books.csv.zip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/releases/download/0.4.0/libgen_index_books.csv.zip&#34;&gt;libgen_index_books.csv.zip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;zlib-searcher&lt;/strong&gt; ¬© &lt;a href=&#34;https://github.com/zlib-searcher/zlib-searcher/graphs/contributors&#34;&gt;zlib-searcher&#39;s authors&lt;/a&gt;, Released under the &lt;a href=&#34;https://raw.githubusercontent.com/zlib-searcher/zlib-searcher/master/LICENSE&#34;&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</summary>
  </entry>
</feed>