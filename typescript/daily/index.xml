<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-26T01:40:20Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>usememos/memos</title>
    <updated>2022-10-26T01:40:20Z</updated>
    <id>tag:github.com,2022-10-26:/usememos/memos</id>
    <link href="https://github.com/usememos/memos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source, self-hosted knowledge base that works with a SQLite db file.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://usememos.com&#34;&gt;&lt;img height=&#34;64px&#34; src=&#34;https://raw.githubusercontent.com/usememos/memos/main/resources/logo-full.webp&#34; alt=&#34;‚úçÔ∏è memos&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;An open source, self-hosted knowledge base that works with a SQLite db file.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/usememos/memos/stargazers&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/usememos/memos&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/neosmemo/memos&#34;&gt;&lt;img alt=&#34;Docker pull&#34; src=&#34;https://img.shields.io/docker/pulls/neosmemo/memos.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;img alt=&#34;Go report&#34; src=&#34;https://goreportcard.com/badge/github.com/usememos/memos&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://demo.usememos.com/&#34;&gt;Live Demo&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://t.me/+-_tNF1k70UU4ZTc9&#34;&gt;Discuss in Telegram üëæ&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/usememos/memos/main/resources/demo.webp&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü¶Ñ Fully open source;&lt;/li&gt; &#xA; &lt;li&gt;üìú Writing in plain textarea without any burden, &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;and support some useful markdown syntax üí™.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üåÑ Share the memo in a pretty image or personal page like Twitter;&lt;/li&gt; &#xA; &lt;li&gt;üöÄ Fast self-hosting with &lt;code&gt;Docker&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;ü§† Pleasant UI and UX;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy with Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Memos should be running at &lt;a href=&#34;http://localhost:5230&#34;&gt;http://localhost:5230&lt;/a&gt;. If the &lt;code&gt;~/.memos/&lt;/code&gt; does not have a &lt;code&gt;memos_prod.db&lt;/code&gt; file, then memos will auto generate it.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;See more in the example &lt;a href=&#34;https://raw.githubusercontent.com/usememos/memos/main/docker-compose.yaml&#34;&gt;&lt;code&gt;docker-compose.yaml&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you want to upgrade the version of memos, use the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose down &amp;amp;&amp;amp; docker image rm neosmemo/memos:latest &amp;amp;&amp;amp; docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are greatly appreciated. ü•∞&lt;/p&gt; &#xA;&lt;p&gt;Gets more about &lt;a href=&#34;https://github.com/usememos/memos/tree/main/docs/development.md&#34;&gt;development guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Star history&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#usememos/memos&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=usememos/memos&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WalletConnect/web3modal</title>
    <updated>2022-10-26T01:40:20Z</updated>
    <id>tag:github.com,2022-10-26:/WalletConnect/web3modal</id>
    <link href="https://github.com/WalletConnect/web3modal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A single Web3 provider solution for all Wallets&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;Looking for v1.x readme? It is available on &lt;a href=&#34;https://github.com/WalletConnect/web3modal/tree/V1&#34;&gt;V1 Branch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Web3Modal&lt;/h1&gt; &#xA;&lt;p&gt;Your on-ramp to web3 multichain. Web3Modal is a versatile library that makes it super easy to connect users with your Dapp and start interacting with the blockchain.&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è v2 is in early alpha and we are continuously adding more features, examples and documentation. As of now we support use cases with react and evm chains. Support for more frameworks and chains is on the way.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/.github/assets/header.png&#34; alt=&#34;&#34; border=&#34;0&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Getting started with web3modal is as easy as installing few packages, one for your preferred front-end framework i.e. &lt;code&gt;@web3modal/react&lt;/code&gt; and chain ecosystem you are working with i.e &lt;code&gt;@web3modal/ethereum&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1. Obtain your WalletConnect projectId&lt;/h3&gt; &#xA;&lt;p&gt;Head over to &lt;a href=&#34;https://cloud.walletconnect.com/&#34;&gt;cloud.walletconnect.com&lt;/a&gt; to sign up and generate your &lt;code&gt;projectId&lt;/code&gt;, which will be required to allow interactions with our explorer api, optional WalletConnect rpc provider and more v2 protocol features in the future.&lt;/p&gt; &#xA;&lt;h3&gt;2. Follow instructions and examples for your favourite framework&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/docs/react.md&#34;&gt;React Docs&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/examples/react/&#34;&gt;React Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/docs/html.md&#34;&gt;Vanilla JS Docs&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/examples/html/&#34;&gt;Vanila JS Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vue Docs / Vue Example (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;Angular Docs / Angular Example (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. Familiarise yourself with each chain package that you intend to use&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/chains/ethereum/&#34;&gt;@web3modal/ethereum&lt;/a&gt; - EVM chains&lt;/li&gt; &#xA; &lt;li&gt;@web3modal/solana - (coming soon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. Customise your modal!&lt;/h3&gt; &#xA;&lt;p&gt;Web3Modal exposes some config options that allow you to personalise it and make it fit in better with your dapp&#39;s ui. As of now supported config options are specified below, but more are on the way!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;margin-top: 20px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/.github/assets/custom.png&#34; alt=&#34;&#34; border=&#34;0&#34;&gt; &lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Values&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;theme&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;accentColor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;blackWhite&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;orange&lt;/code&gt;, &lt;code&gt;teal&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to the development of Web3Modal, please follow the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/WalletConnect/web3modal/V2/docs/development.md&#34;&gt;Development&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pulumi/examples</title>
    <updated>2022-10-26T01:40:20Z</updated>
    <id>tag:github.com,2022-10-26:/pulumi/examples</id>
    <link href="https://github.com/pulumi/examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Infrastructure, containers, and serverless apps to AWS, Azure, GCP, and Kubernetes... all deployed with Pulumi&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pulumi Examples&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains examples of using Pulumi to build and deploy cloud applications and infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;Each example has a two-part prefix, &lt;code&gt;&amp;lt;cloud&amp;gt;-&amp;lt;language&amp;gt;&lt;/code&gt;, to indicate which &lt;code&gt;&amp;lt;cloud&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;language&amp;gt;&lt;/code&gt; it pertains to. For example, &lt;code&gt;&amp;lt;cloud&amp;gt;&lt;/code&gt; could be &lt;code&gt;aws&lt;/code&gt; for &lt;a href=&#34;https://github.com/pulumi/pulumi-aws&#34;&gt;Amazon Web Services&lt;/a&gt;, &lt;code&gt;azure&lt;/code&gt; for &lt;a href=&#34;https://github.com/pulumi/pulumi-azure&#34;&gt;Microsoft Azure&lt;/a&gt;, &lt;code&gt;gcp&lt;/code&gt; for &lt;a href=&#34;https://github.com/pulumi/pulumi-gcp&#34;&gt;Google Cloud Platform&lt;/a&gt;, &lt;code&gt;kubernetes&lt;/code&gt; for &lt;a href=&#34;https://github.com/pulumi/pulumi-kubernetes&#34;&gt;Kubernetes&lt;/a&gt;, or &lt;code&gt;cloud&lt;/code&gt; for &lt;a href=&#34;https://github.com/pulumi/pulumi-cloud&#34;&gt;Pulumi&#39;s cross-cloud programming framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.pulumi.com/docs/&#34;&gt;Pulumi documentation&lt;/a&gt; for more details on getting started with Pulumi.&lt;/p&gt; &#xA;&lt;h2&gt;Checking Out a Single Example&lt;/h2&gt; &#xA;&lt;p&gt;You can checkout only the examples you want by using a &lt;a href=&#34;https://git-scm.com/docs/git-sparse-checkout&#34;&gt;sparse checkout&lt;/a&gt;. The following example shows how checkout only the example you want.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir examples &amp;amp;&amp;amp; cd examples&#xA;$ git init&#xA;$ git remote add origin -f https://github.com/pulumi/examples/&#xA;$ git config core.sparseCheckout true&#xA;$ echo &amp;lt;example&amp;gt; &amp;gt;&amp;gt; .git/info/sparse-checkout&#xA;$ git pull origin master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Outline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#aws&#34;&gt;AWS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#typescript&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#c&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#f&#34;&gt;F#&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#azure&#34;&gt;Azure&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#typescript-1&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#python-1&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#go-1&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#c-1&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#f-1&#34;&gt;F#&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#gcp&#34;&gt;GCP&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#typescript-2&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#javascript-1&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#python-2&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#go-2&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#c-2&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#kubernetes&#34;&gt;Kubernetes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#typescript-3&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#javascript-2&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#python-3&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#go-3&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#c-3&#34;&gt;C#&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#openstack&#34;&gt;Openstack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#cloud&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#digitalocean&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#multicloud&#34;&gt;Multicloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#f5&#34;&gt;F5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#twilio&#34;&gt;Twilio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#linode&#34;&gt;Linode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pulumi/automation-api-examples&#34;&gt;Automation API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AWS&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigateway&#34;&gt;API Gateway&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a simple REST API that counts the number of times a route has been hit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigatewayv2-http-api&#34;&gt;API Gateway HTTP API with routes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a HTTP API that invokes a Lambda.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigatewayv2-http-api-quickcreate&#34;&gt;API Gateway HTTP API quickstart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a very simple HTTP API that invokes a Lambda.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigateway-eventbridge&#34;&gt;API Gateway V1 with EventBridge and Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a REST API that uses EventBridge to target a Lambda function. Includes API Gateway model validation and custom integration-response mapping.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigatewayv2-eventbridge&#34;&gt;API Gateway V2 with EventBridge and Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an HTTP API that uses EventBridge to target a Lambda function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-apigateway-auth0&#34;&gt;Apigateway - Auth0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a simple REST API protected by Auth0.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-appsync&#34;&gt;AppSync&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a basic GraphQL endpoint in AWS AppSync.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-assume-role&#34;&gt;AssumeRole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use AssumeRole to create resources.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-containers&#34;&gt;Containers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision containers on Fargate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-eks&#34;&gt;EKS - Dashboard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EKS Kubernetes cluster with an EBS-backed StorageClass, then the Kubernetes Dashboard into the cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-eks-hello-world&#34;&gt;EKS - Hello World&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EKS Kubernetes cluster with an EBS-backed StorageClass, then a Kubernetes namespace and nginx deployment into the cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-migrate-nodegroups&#34;&gt;EKS - Migrate Node Groups&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an EKS cluster and node group to use for workload migration with zero downtime.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-hello-fargate&#34;&gt;Fargate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build, deploy, and run a Dockerized app using ECS, ECR, and Fargate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-lambda-thumbnailer&#34;&gt;Lambda Thumbnailer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a video thumbnail extractor using serverless functions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-pulumi-miniflux&#34;&gt;Miniflux&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stand up an RSS Service using Fargate and RDS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-pulumi-webhooks&#34;&gt;Pulumi Webhooks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a Pulumi &lt;code&gt;cloud.HttpEndpoint&lt;/code&gt; that receives webhook events delivered by the Pulumi Service, then echos the event to Slack.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-airflow&#34;&gt;RDS and Airflow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a RDS Postgres instance and containerized Airflow.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-resources&#34;&gt;Resources&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create various resources, including &lt;code&gt;cloudwatch.Dashboard&lt;/code&gt;, &lt;code&gt;cloudwatch.EventRule&lt;/code&gt;, &lt;code&gt;cloudwatch.LogGroup&lt;/code&gt;, and &lt;code&gt;sqs.Queue&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-ruby-on-rails&#34;&gt;Ruby on Rails&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a single EC2 virtual machine instance with a local MySQL database.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-s3-lambda-copyzip&#34;&gt;S3 Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set up two AWS S3 Buckets and a single Lambda that listens to one and, upon each new object arriving in it, zips it up and copies it to the second bucket.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-serverless-raw&#34;&gt;Serverless Application&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a complete serverless C# application using raw resources from &lt;code&gt;@pulumi/aws&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-serverless-datawarehouse&#34;&gt;Serverless Datawarehouse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a serverless data warehouse.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-slackbot&#34;&gt;Slackbot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple slackbot that posts a notification to a specific channel any time you&#39;re @mentioned anywhere.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-stackreference&#34;&gt;Stack Reference&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a &#34;team&#34; EC2 Instance with tags set from upstream stacks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-static-website&#34;&gt;Static Website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website using S3, CloudFront, Route53, and Certificate Manager.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-stepfunctions&#34;&gt;Step Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Step Functions with a Lambda function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-thumbnailer&#34;&gt;Thumbnailer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a video thumbnail extractor using serverless functions and containers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-twitter-athena&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query Twitter every 2 minutes, store the results in S3, and set up an Athena table and query.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-url-shortener-cache-http&#34;&gt;URL Shortener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a serverless URL shortener that uses high-level components.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-voting-app&#34;&gt;Voting App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple voting app using Redis and Python Flask.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 Virtual machine using TypeScript to run a Python web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-ts-ec2-provisioners&#34;&gt;Web Server with Manual Provisioning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Pulumi dynamic providers to accomplish post-provisioning configuration steps.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-containers&#34;&gt;Containers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision containers on Fargate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-s3-folder-component&#34;&gt;S3 Folder Component&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3 from a component.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-s3-folder&#34;&gt;S3 Folder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-sqs-slack&#34;&gt;Servless SQS to Slack&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wire up a serverless AWS Lambda to an AWS SQS queue and post a message to Slack.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-webserver-component&#34;&gt;Web Server - Component&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 instance using a common module for creating an instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-js-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 Virtual machine running a Python web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-apigatewayv2-http-api-quickcreate&#34;&gt;API Gateway HTTP API quickstart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a very simple HTTP API that invokes a Lambda.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-apigatewayv2-eventbridge&#34;&gt;API Gateway V2 with EventBridge and Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an HTTP API that uses EventBridge to target a Lambda function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-appsync&#34;&gt;AppSync&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a basic GraphQL endpoint in AWS AppSync.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-assume-role&#34;&gt;AssumeRole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use AssumeRole to create resources.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-fargate&#34;&gt;Fargate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a full ECS Fargate cluster running a load-balanced nginx web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-resources&#34;&gt;Resources&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create various resources, including &lt;code&gt;cloudwatch.Dashboard&lt;/code&gt;, &lt;code&gt;cloudwatch.EventRule&lt;/code&gt;, &lt;code&gt;cloudwatch.LogGroup&lt;/code&gt;, and &lt;code&gt;sqs.Queue&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-s3-folder&#34;&gt;S3 Folder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-stackreference&#34;&gt;Stack Reference&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a &#34;team&#34; EC2 Instance with tags set from upstream stacks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-stepfunctions&#34;&gt;Step Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Step Functions with a Lambda function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-py-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 instance and open port 80.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-go-assume-role&#34;&gt;AssumeRole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use AssumeRole to create resources.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-go-fargate&#34;&gt;Fargate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a full ECS Fargate cluster running a load-balanced nginx web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-go-lambda&#34;&gt;Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a lambda that does a simple &lt;code&gt;ToUpper&lt;/code&gt; on the string input and returns it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-go-s3-folder&#34;&gt;S3 Folder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-go-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 Virtual machine running a Python web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-cs-assume-role&#34;&gt;AssumeRole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use AssumeRole to create resources.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-cs-fargate&#34;&gt;Fargate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build, deploy, and run a Dockerized app using ECS, ECR, and Fargate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-cs-lambda&#34;&gt;Lambda&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a lambda that does a simple &lt;code&gt;ToUpper&lt;/code&gt; on the string input and returns it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-cs-s3-folder&#34;&gt;S3 Folder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-cs-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an EC2 instance and open port 80.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;F#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-fs-lambda-webserver&#34;&gt;Lambda Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a web server in AWS lambda using the Giraffe web server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/aws-fs-s3-folder&#34;&gt;S3 Folder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Serve a static website on S3.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Azure&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-containerapps&#34;&gt;Azure Container Apps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a Docker image on Azure Container Apps.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-aci&#34;&gt;Azure Container Instance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run Azure Container Instances on Linux.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-aks&#34;&gt;Azure Kubernetes Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an Azure Kubernetes Service (AKS) Cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-appservice&#34;&gt;Azure App Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-appservice-docker&#34;&gt;Azure App Service with Docker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service from Docker images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-webapp-privateendpoint-vnet-injection&#34;&gt;App Service in Virtual Network&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy two App Services - Front web app with VNet injection and Back web app with a Private Endpoint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-cosmosdb-logicapp&#34;&gt;Azure Cosmos DB and LogicApp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Define Cosmos DB, API connections, and link them to a logic app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-functions&#34;&gt;Azure Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Node.js serverless function to Azure Functions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-functions-many&#34;&gt;Azure Functions - Many&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy several kinds of Azure Functions created from raw deployment packages.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-call-azure-sdk&#34;&gt;Azure SDK integration&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Call Azure SDK functions from a Pulumi program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-static-website&#34;&gt;Static Website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure static website hosting in Azure Storage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-synapse&#34;&gt;Azure Synapse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starting point for enterprise analytics solutions based on Azure Synapse.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-ts-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a Linux web server in an Azure Virtual Machine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-containerapps&#34;&gt;Azure Container Apps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a Docker image on Azure Container Apps.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-aci&#34;&gt;Azure Container Instance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run Azure Container Instances on Linux.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-aks&#34;&gt;Azure Kubernetes Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an Azure Kubernetes Service (AKS) Cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-appservice&#34;&gt;Azure App Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-appservice-docker&#34;&gt;Azure App Service with Docker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service from Docker images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-call-azure-sdk&#34;&gt;Azure SDK integration&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Call Azure SDK functions from a Pulumi program in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-cosmosdb-logicapp&#34;&gt;Azure Cosmos DB and LogicApp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Define Cosmos DB, API connections, and link them to a logic app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-minecraft-server&#34;&gt;Minecraft Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an Azure Virtual Machine and provision a Minecraft server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-static-website&#34;&gt;Static Website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure static website hosting in Azure Storage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-synapse&#34;&gt;Azure Synapse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starting point for enterprise analytics solutions based on Azure Synapse.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-virtual-data-center&#34;&gt;Virtual Data Center&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy Azure Virtual Data Center (VDC) hub-and-spoke network stacks in Azure, complete with ExpressRoute and VPN Gateways, Azure Firewall guarding a DMZ, and Azure Bastion.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-py-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a Linux web server in an Azure Virtual Machine.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-containerapps&#34;&gt;Azure Container Apps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a Docker image on Azure Container Apps.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-aci&#34;&gt;Azure Container Instance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run Azure Container Instances on Linux.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-aks&#34;&gt;Azure Kubernetes Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an Azure Kubernetes Service (AKS) Cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-appservice-docker&#34;&gt;Azure App Service with Docker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service from Docker images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-static-website&#34;&gt;Static Website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure static website hosting in Azure Storage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-go-call-azure-sdk&#34;&gt;Azure SDK integration&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Call Azure SDK functions from a Pulumi programin Go.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cluster.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-containerapps&#34;&gt;Azure Container Apps&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a Docker image on Azure Container Apps.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-aci&#34;&gt;Azure Container Instance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run Azure Container Instances on Linux.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-aks&#34;&gt;Azure Kubernetes Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an Azure Kubernetes Service (AKS) Cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-net5-aks-webapp&#34;&gt;AKS web app with .NET 5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create an Azure Kubernetes Service (AKS) cluster and deploy a web app to it using .NET 5 and C# 9.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-aks-cosmos-helm&#34;&gt;AKS + Cosmos DB&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Helm chart deployed to AKS that stores TODOs in an Azure Cosmos DB MongoDB API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-appservice&#34;&gt;Azure App Service&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-appservice-docker&#34;&gt;Azure App Service with Docker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web application hosted in App Service from Docker images.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-call-azure-api&#34;&gt;Azure API integration&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Call additional Azure API endpoints from a Pulumi program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-cosmosdb-logicapp&#34;&gt;Azure Cosmos DB and LogicApp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Define Cosmos DB, API connections, and link them to a logic app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-functions&#34;&gt;Azure Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Node.js serverless function to Azure Functions.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-static-website&#34;&gt;Static Website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure static website hosting in Azure Storage.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-synapse&#34;&gt;Azure Synapse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Starting point for enterprise analytics solutions based on Azure Synapse.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/azure-cs-sqlserver&#34;&gt;Azure SQL Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An example of a SQLServer on Azure PaaS.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;GCP&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-cloudrun&#34;&gt;Cloud Run&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a custom Docker image into Google Cloud Run service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-serverless-raw&#34;&gt;Functions - Raw&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy two Google Cloud Functions implemented in Python and Go.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-functions&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy an HTTP Google Cloud Function endpoint.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-gke-hello-world&#34;&gt;GKE - Hello World&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a GKE cluster, then a Kubernetes namespace and nginx deployment into the cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-gke&#34;&gt;GKE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a Google Kubernetes Engine (GKE) cluster, then a Kubernetes Deployment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-k8s-ruby-on-rails-postgresql&#34;&gt;Ruby on Rails&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deliver a containerized Ruby on Rails application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-ts-slackbot&#34;&gt;Slackbot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple slackbot that posts a notification to a specific channel any time you&#39;re @mentioned anywhere.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-js-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web server in Google Cloud.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-serverless-raw&#34;&gt;Functions - Raw&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy two Google Cloud Functions implemented in Python and Go.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-functions&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Python-based Google Cloud Function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-gke&#34;&gt;GKE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a Google Kubernetes Engine (GKE) cluster, then a Kubernetes Deployment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-network-component&#34;&gt;Network Component&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a reusable component to create a Google Cloud Network and instance.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-instance-nginx&#34;&gt;nginx Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a nginx server in Google Cloud.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-go-functions&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Go-based Google Cloud Function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-serverless-raw&#34;&gt;Functions - Raw&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Google Cloud Function implemented in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-go-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web server in Google Cloud.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-py-serverless-raw&#34;&gt;Functions - Raw&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Google Cloud Function implemented in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/gcp-go-functions&#34;&gt;Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a Go-based Google Cloud Function.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Kubernetes&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-configmap-rollout&#34;&gt;App Rollout via ConfigMap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable a change in a ConfigMap to trigger a rollout of an nginx Deployment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-s3-rollout&#34;&gt;App Rollout via S3 Data Change&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable a change in data in S3 to trigger a rollout of an nginx deployment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-exposed-deployment&#34;&gt;Expose Deployment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy nginx to a Kubernetes cluster, and publicly explose it using a Kubernetes Service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-guestbook&#34;&gt;Guestbook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build and deploy a simple, multi-tier web application using Kubernetes and Docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-jenkins&#34;&gt;Jenkins&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a container running the Jenkins continuous integration system onto a running Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-multicloud&#34;&gt;Multicloud&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create managed Kubernetes clusters using AKS, EKS, and GKE, and deploy the application on each cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-nginx&#34;&gt;nginx server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a replicated nginx server to a Kubernetes cluster, using TypeScript and no YAML.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-sock-shop&#34;&gt;Sock Shop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy a version of the standard Sock Shop microservices reference app.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-staged-rollout-with-prometheus&#34;&gt;Staged App Rollout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a staged rollout gated by checking that the P90 response time reported by Prometheus is less than some amount.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-ts-helm-wordpress&#34;&gt;Wordpress Helm Chart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use the Helm API to deploy v2.1.3 of the Wordpress Helm Chart to a Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-py-guestbook&#34;&gt;Guestbook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build and deploy a simple, multi-tier web application using Kubernetes and Docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-cs-guestbook&#34;&gt;Guestbook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build and deploy a simple, multi-tier web application using Kubernetes and Docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Go&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-go-guestbook&#34;&gt;Guestbook&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build and deploy a simple, multi-tier web application using Kubernetes and Docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-go-configmap-rollout&#34;&gt;App Rollout via ConfigMap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable a change in a ConfigMap to trigger a rollout of an nginx Deployment.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-go-helm-wordpress&#34;&gt;Wordpress Helm Chart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use the Helm API to deploy v9.6.0 of the Wordpress Helm Chart to a Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/kubernetes-go-exposed-deployment&#34;&gt;Expose Deployment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy nginx to a Kubernetes cluster, and publicly expose it using a Kubernetes Service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Openstack&lt;/h2&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/openstack-py-webserver&#34;&gt;Web Server&lt;/a&gt; | Deploy an Openstack instance and open port 8000.&lt;/p&gt; &#xA;&lt;h2&gt;Cloud&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-ts-url-shortener-cache-http&#34;&gt;URL Shortener - Cache and HttpServer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple URL shortener SPA that uses the high-level &lt;code&gt;cloud.Table&lt;/code&gt; and &lt;code&gt;cloud.HttpServer&lt;/code&gt; components.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-ts-url-shortener-cache&#34;&gt;URL Shortener - Cache&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple URL shortener SPA that uses the high-level &lt;code&gt;cloud.Table&lt;/code&gt; and &lt;code&gt;cloud.API&lt;/code&gt; components.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-ts-url-shortener&#34;&gt;URL Shortener&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a complete URL shortener web application that uses the high-level &lt;code&gt;cloud.Table&lt;/code&gt; and &lt;code&gt;cloud.HttpServer&lt;/code&gt; components.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-ts-voting-app&#34;&gt;Voting App&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple voting app using Redis and Python Flask.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-api&#34;&gt;API on AWS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple REST API that counts the number of times a route has been hit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-containers&#34;&gt;Containers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision containers on Fargate.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-httpserver&#34;&gt;HttpServer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a simple REST API that counts the number of times a route has been hit.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-thumbnailer-machine-learning&#34;&gt;Thumbnailer - Machine Learning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a video thumbnail extractor using serverless functions, containers, and AWS Rekognition.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-thumbnailer&#34;&gt;Thumbnailer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a video thumbnail extractor using serverless functions and containers.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/cloud-js-twitter-athena&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query Twitter every 2 minutes, store the results in S3, and set up an Athena table and query.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;DigitalOcean&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-ts-loadbalanced-droplets&#34;&gt;Droplets&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build sample architecture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-ts-k8s&#34;&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a DigitalOcean Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-py-loadbalanced-droplets&#34;&gt;Droplets&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build sample architecture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-py-k8s&#34;&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a DigitalOcean Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;C#&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-cs-loadbalanced-droplets&#34;&gt;Droplets&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build sample architecture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/digitalocean-cs-k8s&#34;&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provision a DigitalOcean Kubernetes cluster.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Multicloud&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/multicloud-ts-buckets&#34;&gt;Buckets&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use a single Pulumi program to provision resources in both AWS and GCP.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;F5&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/f5bigip-ts-ltm-pool&#34;&gt;BigIP Local Traffic Manager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provide load balancing via an F5 BigIP appliance to backend HTTP instances.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Twilio&lt;/h2&gt; &#xA;&lt;h3&gt;TypeScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/twilio-ts-component&#34;&gt;Component&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a custom Component Resource to parse incoming messages from Twilio.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Linode&lt;/h2&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/linode-js-webserver&#34;&gt;Web Server&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a web server on Linode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-unit-ts&#34;&gt;Unit Tests in TypeScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mock-based unit tests in TypeScript.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-unit-py&#34;&gt;Unit Tests in Python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mock-based unit tests in Python.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-unit-go&#34;&gt;Unit Tests in Go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mock-based unit tests in Go.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-unit-cs&#34;&gt;Unit Tests in C#&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mock-based unit tests in C#.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-pac-ts&#34;&gt;Testing with Policies&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tests based on Policy-as-Code in TypeScript.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pulumi/examples/master/testing-integration&#34;&gt;Integration Testing in Go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy-check-destroy tests in Go.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Automation API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pulumi/automation-api-examples&#34;&gt;Automation API Examples&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>