<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-18T01:36:28Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wg-easy/wg-easy</title>
    <updated>2025-03-18T01:36:28Z</updated>
    <id>tag:github.com,2025-03-18:/wg-easy/wg-easy</id>
    <link href="https://github.com/wg-easy/wg-easy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The easiest way to run WireGuard VPN + Web-based Admin UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WireGuard Easy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml&#34;&gt;&lt;img src=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/deploy.yml/badge.svg?branch=production&#34; alt=&#34;Build &amp;amp; Publish latest Image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/wg-easy/wg-easy/actions/workflows/lint.yml/badge.svg?branch=master&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wg-easy/wg-easy/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/wg-easy/wg-easy&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/wg-easy/wg-easy&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wg-easy/wg-easy/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/wg-easy/wg-easy&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wg-easy/wg-easy/pkgs/container/wg-easy&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/image_pulls-11M-blue&#34; alt=&#34;Image Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- TODO: remove after release --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] You are viewing the README of the pre-release of v15. If you want to setup wg-easy right now. Read the README in the production branch here: &lt;a href=&#34;https://github.com/wg-easy/wg-easy/tree/production&#34;&gt;README&lt;/a&gt; or here for the last nightly: &lt;a href=&#34;https://github.com/wg-easy/wg-easy/tree/c6dce0f6fb2e28e7e40ddac1498bd67e9bb17cba&#34;&gt;README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You have found the easiest way to install &amp;amp; manage WireGuard on any Linux host!&lt;/p&gt; &#xA;&lt;!-- TOOD: update screenshot --&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/assets/screenshot.png&#34; width=&#34;802&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All-in-one: WireGuard + Web UI.&lt;/li&gt; &#xA; &lt;li&gt;Easy installation, simple to use.&lt;/li&gt; &#xA; &lt;li&gt;List, create, edit, delete, enable &amp;amp; disable clients.&lt;/li&gt; &#xA; &lt;li&gt;Show a client&#39;s QR code.&lt;/li&gt; &#xA; &lt;li&gt;Download a client&#39;s configuration file.&lt;/li&gt; &#xA; &lt;li&gt;Statistics for which clients are connected.&lt;/li&gt; &#xA; &lt;li&gt;Tx/Rx charts for each connected client.&lt;/li&gt; &#xA; &lt;li&gt;Gravatar support.&lt;/li&gt; &#xA; &lt;li&gt;Automatic Light / Dark Mode&lt;/li&gt; &#xA; &lt;li&gt;Multilanguage Support&lt;/li&gt; &#xA; &lt;li&gt;One Time Links&lt;/li&gt; &#xA; &lt;li&gt;Client Expiration&lt;/li&gt; &#xA; &lt;li&gt;Prometheus metrics support&lt;/li&gt; &#xA; &lt;li&gt;IPv6 support&lt;/li&gt; &#xA; &lt;li&gt;CIDR support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] To better manage documentation for this project, it has its own site here: &lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest&#34;&gt;https://wg-easy.github.io/wg-easy/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- TODO: remove after release --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] As the Docs are still in Pre-release, you can access them here &lt;a href=&#34;https://wg-easy.github.io/wg-easy/Pre-release&#34;&gt;https://wg-easy.github.io/wg-easy/Pre-release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/getting-started/&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/basic-installation/&#34;&gt;Basic Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/caddy/&#34;&gt;Caddy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/traefik/&#34;&gt;Traefik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/podman/&#34;&gt;Podman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/examples/tutorials/adguard/&#34;&gt;AdGuard Home&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you want to migrate from the old version to the new version, you can find the migration guide here: &lt;a href=&#34;https://wg-easy.github.io/wg-easy/latest/advanced/migrate/&#34;&gt;Migration Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A host with a kernel that supports WireGuard (all modern kernels).&lt;/li&gt; &#xA; &lt;li&gt;A host with Docker installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;💡 We follow semantic versioning (semver)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We offer multiple Docker image tags to suit your needs. The table below is in a particular order, with the first tag being the most recommended:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;tag&lt;/th&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;15&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest minor for that major tag&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:15&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest features for specific major versions, no breaking changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest tag&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:latest&lt;/code&gt; or &lt;code&gt;ghcr.io/wg-easy/wg-easy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stable as possible get bug fixes quickly when needed, see Releases for more information.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;15.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest patch for that minor tag&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:15.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest patches for specific minor version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;15.0.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific tag&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:15.0.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific release, don&#39;t use this as this will not get updated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wg-easy/wg-easy/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;mostly unstable gets frequent package and code updates, deployed against &lt;a href=&#34;https://github.com/wg-easy/wg-easy/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;pull requests&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/wg-easy/wg-easy:development&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;used for development, testing code from PRs before landing into &lt;a href=&#34;https://github.com/wg-easy/wg-easy/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you haven&#39;t installed Docker yet, install it by running as root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -sSL https://get.docker.com | sh&#xA;exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And log in again.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run WireGuard Easy&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to run WireGuard Easy is with Docker Compose.&lt;/p&gt; &#xA;&lt;p&gt;Just download &lt;a href=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt;, make necessary adjustments and execute &lt;code&gt;sudo docker compose up -d&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now setup a reverse proxy to be able to access the Web UI from the internet.&lt;/p&gt; &#xA;&lt;p&gt;If you want to access the Web UI over HTTP, change the env var &lt;code&gt;INSECURE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. This is not recommended. Only use this for testing&lt;/p&gt; &#xA;&lt;h3&gt;Donate&lt;/h3&gt; &#xA;&lt;p&gt;Are you enjoying this project? Consider donating.&lt;/p&gt; &#xA;&lt;p&gt;Founder: &lt;a href=&#34;https://github.com/sponsors/WeeJeWel&#34;&gt;Buy Emile a beer!&lt;/a&gt; 🍻&lt;/p&gt; &#xA;&lt;p&gt;Maintainer: &lt;a href=&#34;https://github.com/sponsors/kaaax0815&#34;&gt;Buy kaaax0815 a coffee!&lt;/a&gt; ☕&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Node LTS &amp;amp; corepack enabled&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dev Server&lt;/h3&gt; &#xA;&lt;p&gt;This starts the development server with docker&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update Auto Imports&lt;/h3&gt; &#xA;&lt;p&gt;If you add something that should be auto-importable and VSCode complains, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd src&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the AGPL-3.0-only License - see the &lt;a href=&#34;https://raw.githubusercontent.com/wg-easy/wg-easy/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt; &#xA;&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with Jason A. Donenfeld, ZX2C4 or Edge Security&lt;/p&gt; &#xA;&lt;p&gt;&#34;WireGuard&#34; and the &#34;WireGuard&#34; logo are registered trademarks of Jason A. Donenfeld&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>patruff/ollama-mcp-bridge</title>
    <updated>2025-03-18T01:36:28Z</updated>
    <id>tag:github.com,2025-03-18:/patruff/ollama-mcp-bridge</id>
    <link href="https://github.com/patruff/ollama-mcp-bridge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bridge between Ollama and MCP servers, enabling local LLMs to use Model Context Protocol tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP-LLM Bridge&lt;/h1&gt; &#xA;&lt;p&gt;A TypeScript implementation that connects local LLMs (via Ollama) to Model Context Protocol (MCP) servers. This bridge allows open-source models to use the same tools and capabilities as Claude, enabling powerful local AI assistants.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This project bridges local Large Language Models with MCP servers that provide various capabilities like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filesystem operations&lt;/li&gt; &#xA; &lt;li&gt;Brave web search&lt;/li&gt; &#xA; &lt;li&gt;GitHub interactions&lt;/li&gt; &#xA; &lt;li&gt;Google Drive &amp;amp; Gmail integration&lt;/li&gt; &#xA; &lt;li&gt;Memory/storage&lt;/li&gt; &#xA; &lt;li&gt;Image generation with Flux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The bridge translates between the LLM&#39;s outputs and the MCP&#39;s JSON-RPC protocol, allowing any Ollama-compatible model to use these tools just like Claude does.&lt;/p&gt; &#xA;&lt;h2&gt;Current Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM&lt;/strong&gt;: Using Qwen 2.5 7B (qwen2.5-coder:7b-instruct) through Ollama&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCPs&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Filesystem operations (&lt;code&gt;@modelcontextprotocol/server-filesystem&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Brave Search (&lt;code&gt;@modelcontextprotocol/server-brave-search&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;GitHub (&lt;code&gt;@modelcontextprotocol/server-github&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Memory (&lt;code&gt;@modelcontextprotocol/server-memory&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Flux image generation (&lt;code&gt;@patruff/server-flux&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Gmail &amp;amp; Drive (&lt;code&gt;@patruff/server-gmail-drive&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bridge&lt;/strong&gt;: Core component that manages tool registration and execution&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLM Client&lt;/strong&gt;: Handles Ollama interactions and formats tool calls&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Manages MCP server connections and JSON-RPC communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tool Router&lt;/strong&gt;: Routes requests to appropriate MCP based on tool type&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-MCP support with dynamic tool routing&lt;/li&gt; &#xA; &lt;li&gt;Structured output validation for tool calls&lt;/li&gt; &#xA; &lt;li&gt;Automatic tool detection from user prompts&lt;/li&gt; &#xA; &lt;li&gt;Robust process management for Ollama&lt;/li&gt; &#xA; &lt;li&gt;Detailed logging and error handling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Ollama and required model:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ollama pull qwen2.5-coder:7b-instruct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install MCP servers:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @modelcontextprotocol/server-filesystem&#xA;npm install -g @modelcontextprotocol/server-brave-search&#xA;npm install -g @modelcontextprotocol/server-github&#xA;npm install -g @modelcontextprotocol/server-memory&#xA;npm install -g @patruff/server-flux&#xA;npm install -g @patruff/server-gmail-drive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Configure credentials: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;BRAVE_API_KEY&lt;/code&gt; for Brave Search&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;GITHUB_PERSONAL_ACCESS_TOKEN&lt;/code&gt; for GitHub&lt;/li&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;REPLICATE_API_TOKEN&lt;/code&gt; for Flux&lt;/li&gt; &#xA;   &lt;li&gt;Run Gmail/Drive MCP auth: &lt;code&gt;node path/to/gmail-drive/index.js auth&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For example node C:\Users\patru\AppData\Roaming\npm\node_modules@patruff\server-gmail-drive\dist\index.js auth&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The bridge is configured through &lt;code&gt;bridge_config.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MCP server definitions&lt;/li&gt; &#xA; &lt;li&gt;LLM settings (model, temperature, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Tool permissions and paths&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;filesystem&#34;: {&#xA;      &#34;command&#34;: &#34;node&#34;,&#xA;      &#34;args&#34;: [&#34;path/to/server-filesystem/dist/index.js&#34;],&#xA;      &#34;allowedDirectory&#34;: &#34;workspace/path&#34;&#xA;    },&#xA;    // ... other MCP configurations&#xA;  },&#xA;  &#34;llm&#34;: {&#xA;    &#34;model&#34;: &#34;qwen2.5-coder:7b-instruct&#34;,&#xA;    &#34;baseUrl&#34;: &#34;http://localhost:11434&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start the bridge:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Available commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;list-tools&lt;/code&gt;: Show available tools&lt;/li&gt; &#xA;   &lt;li&gt;Regular text: Send prompts to the LLM&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;quit&lt;/code&gt;: Exit the program&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Example interactions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; Search the web for &#34;latest TypeScript features&#34;&#xA;[Uses Brave Search MCP to find results]&#xA;&#xA;&amp;gt; Create a new folder called &#34;project-docs&#34;&#xA;[Uses Filesystem MCP to create directory]&#xA;&#xA;&amp;gt; Send an email to user@example.com&#xA;[Uses Gmail MCP to compose and send email]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Technical Details&lt;/h2&gt; &#xA;&lt;h3&gt;Tool Detection&lt;/h3&gt; &#xA;&lt;p&gt;The bridge includes smart tool detection based on user input:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email operations: Detected by email addresses and keywords&lt;/li&gt; &#xA; &lt;li&gt;Drive operations: Detected by file/folder keywords&lt;/li&gt; &#xA; &lt;li&gt;Search operations: Contextually routed to appropriate search tool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Response Processing&lt;/h3&gt; &#xA;&lt;p&gt;Responses are processed through multiple stages:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;LLM generates structured tool calls&lt;/li&gt; &#xA; &lt;li&gt;Bridge validates and routes to appropriate MCP&lt;/li&gt; &#xA; &lt;li&gt;MCP executes operation and returns result&lt;/li&gt; &#xA; &lt;li&gt;Bridge formats response for user&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Extended Capabilities&lt;/h2&gt; &#xA;&lt;p&gt;This bridge effectively brings Claude&#39;s tool capabilities to local models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filesystem manipulation&lt;/li&gt; &#xA; &lt;li&gt;Web search and research&lt;/li&gt; &#xA; &lt;li&gt;Email and document management&lt;/li&gt; &#xA; &lt;li&gt;Code and GitHub interactions&lt;/li&gt; &#xA; &lt;li&gt;Image generation&lt;/li&gt; &#xA; &lt;li&gt;Persistent memory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All while running completely locally with open-source models.&lt;/p&gt; &#xA;&lt;h2&gt;Future Improvements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add support for more MCPs&lt;/li&gt; &#xA; &lt;li&gt;Implement parallel tool execution&lt;/li&gt; &#xA; &lt;li&gt;Add streaming responses&lt;/li&gt; &#xA; &lt;li&gt;Enhance error recovery&lt;/li&gt; &#xA; &lt;li&gt;Add conversation memory&lt;/li&gt; &#xA; &lt;li&gt;Support more Ollama models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;p&gt;This bridge integrates with the broader Claude ecosystem:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Model Context Protocol (MCP)&lt;/li&gt; &#xA; &lt;li&gt;Claude Desktop Configuration&lt;/li&gt; &#xA; &lt;li&gt;Ollama Project&lt;/li&gt; &#xA; &lt;li&gt;Various MCP server implementations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The result is a powerful local AI assistant that can match many of Claude&#39;s capabilities while running entirely on your own hardware.&lt;/p&gt;</summary>
  </entry>
</feed>