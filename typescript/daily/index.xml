<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:49:04Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dilame/instagram-private-api</title>
    <updated>2022-08-23T01:49:04Z</updated>
    <id>tag:github.com,2022-08-23:/dilame/instagram-private-api</id>
    <link href="https://github.com/dilame/instagram-private-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NodeJS Instagram private API SDK. Written in TypeScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NodeJS Instagram private API client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1809268/15931032/2792427e-2e56-11e6-831e-ffab238cc4a2.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/igpapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/telegram-join%20chat-informational.svg?sanitize=true&#34; alt=&#34;Telegram Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/instagram-private-api&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/instagram-private-api.svg?maxAge=600&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/huttarichard/instagram-private-api/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/instagram-private-api.svg?maxAge=600&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/instagram-private-api/Lobby&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/instagram-private-api/Lobby&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Next major version&lt;/h1&gt; &#xA;&lt;p&gt;Me and &lt;a href=&#34;https://github.com/Nerixyz&#34;&gt;Nerix&lt;/a&gt; are ready to announce the next 2.x.x version of this library. It has extended feature list. It&#39;s a big release. We have significantly expanded the functionality and capabilities. The library turned into a monorepository and now it&#39;s a set of libraries, connected in an ecosystem. It consists of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android API&lt;/li&gt; &#xA; &lt;li&gt;Web API&lt;/li&gt; &#xA; &lt;li&gt;FBNS, Realtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;ve done some work on design decisions. We simplified the state management process. Now you can easily make a snapshot of account state, save it in a persistent storage and then restore a 1-to-1 copy with just 1 function call. With new realtime features you can listen for new direct messages, notifications and any other events.&lt;/p&gt; &#xA;&lt;p&gt;The new version is hosted in private repository. Access is paid. Members get &lt;strong&gt;basic&lt;/strong&gt; support for installation, configuration, and usage. We also will try to react on your feature requests.&lt;/p&gt; &#xA;&lt;p&gt;You can contact me in &lt;a href=&#34;https://t.me/bowzee&#34;&gt;telegram&lt;/a&gt; or &lt;a href=&#34;mailto:dilame.bowzee@gmail.com&#34;&gt;email&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#support-us&#34;&gt;Support us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#basic-concepts&#34;&gt;Basic Concepts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#feeds&#34;&gt;Feeds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#repositories&#34;&gt;Repositories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#services&#34;&gt;Services&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#useful-links&#34;&gt;Useful Links&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#special-thanks&#34;&gt;Special Thanks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#thanks-to-contributors&#34;&gt;Thanks to Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/#end-user-license-agreement-eula&#34;&gt;End User License Agreement (EULA)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;From npm&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install instagram-private-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From github&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install github:dilame/instagram-private-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This package uses &lt;a href=&#34;https://www.npmjs.com/package/url-regex-safe&#34;&gt;&lt;code&gt;url-regex-safe&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://github.com/spamscanner/url-regex-safe&#34;&gt;GitHub&lt;/a&gt;) to check for links when sending direct messages. By default, the &lt;strong&gt;safe&lt;/strong&gt; regex engine &lt;a href=&#34;https://github.com/uhop/node-re2&#34;&gt;&lt;code&gt;re2&lt;/code&gt;&lt;/a&gt; is &lt;strong&gt;not&lt;/strong&gt; installed. ⚠ It&#39;s highly recommended for you to install &lt;code&gt;re2&lt;/code&gt; by running &lt;code&gt;npm install re2&lt;/code&gt;, else you &lt;em&gt;will&lt;/em&gt; be vulnerable to &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-7661&#34;&gt;CVE-2020-7661&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Support us&lt;/h1&gt; &#xA;&lt;p&gt;If you find this library useful for you, you can support it by donating any amount&lt;/p&gt; &#xA;&lt;p&gt;BTC: 1Dqnz9QuswAvD3t7Jsw7LhwprR6HAWprW6&lt;/p&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;You can find usage examples &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note for JavaScript users:&lt;/em&gt; As of Node v.13.5.0, there isn&#39;t support for ESModules and the &#39;import&#39;-syntax. So you have to read the imports in the examples like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;import { A } from &#39;b&#39;&lt;/code&gt; ➡ &lt;code&gt;const { A } = require(&#39;b&#39;)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { IgApiClient } from &#39;instagram-private-api&#39;;&#xA;import { sample } from &#39;lodash&#39;;&#xA;&#xA;const ig = new IgApiClient();&#xA;// You must generate device id&#39;s before login.&#xA;// Id&#39;s generated based on seed&#xA;// So if you pass the same value as first argument - the same id&#39;s are generated every time&#xA;ig.state.generateDevice(process.env.IG_USERNAME);&#xA;// Optionally you can setup proxy url&#xA;ig.state.proxyUrl = process.env.IG_PROXY;&#xA;(async () =&amp;gt; {&#xA;  // Execute all requests prior to authorization in the real Android application&#xA;  // Not required but recommended&#xA;  await ig.simulate.preLoginFlow();&#xA;  const loggedInUser = await ig.account.login(process.env.IG_USERNAME, process.env.IG_PASSWORD);&#xA;  // The same as preLoginFlow()&#xA;  // Optionally wrap it to process.nextTick so we dont need to wait ending of this bunch of requests&#xA;  process.nextTick(async () =&amp;gt; await ig.simulate.postLoginFlow());&#xA;  // Create UserFeed instance to get loggedInUser&#39;s posts&#xA;  const userFeed = ig.feed.user(loggedInUser.pk);&#xA;  const myPostsFirstPage = await userFeed.items();&#xA;  // All the feeds are auto-paginated, so you just need to call .items() sequentially to get next page&#xA;  const myPostsSecondPage = await userFeed.items();&#xA;  await ig.media.like({&#xA;    // Like our first post from first page or first post from second page randomly&#xA;    mediaId: sample([myPostsFirstPage[0].id, myPostsSecondPage[0].id]),&#xA;    moduleInfo: {&#xA;      module_name: &#39;profile&#39;,&#xA;      user_id: loggedInUser.pk,&#xA;      username: loggedInUser.username,&#xA;    },&#xA;    d: sample([0, 1]),&#xA;  });&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Basic concepts&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can find documentation in the &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs&#34;&gt;&lt;code&gt;docs&lt;/code&gt; folder&lt;/a&gt;&lt;/strong&gt;. Consider starting in &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md&#34;&gt;&lt;code&gt;IgApiClient&lt;/code&gt; (&lt;code&gt;index&lt;/code&gt; module)&lt;/a&gt;, the root class.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll often see &lt;code&gt;ig&lt;/code&gt; in the docs. This just refers to the client, an instance of &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md&#34;&gt;&lt;code&gt;IgApiClient&lt;/code&gt;&lt;/a&gt; holding the state for one user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { IgApiClient } from &#39;instagram-private-api&#39;;&#xA;&#xA;// This is the general convention on how to name the client&#xA;//    vv&#xA;const ig = new IgApiClient();&#xA;&#xA;// login, load a session etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Repositories&lt;/h2&gt; &#xA;&lt;p&gt;Repositories implement low-level operations - every method sends exactly &lt;em&gt;one&lt;/em&gt; api-request.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;available repositories&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/modules/repositories.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;their keys&lt;/strong&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md&#34;&gt;&lt;code&gt;IgApiClient&lt;/code&gt; here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You access repositories on the &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md&#34;&gt;client (&lt;code&gt;IgApiClient&lt;/code&gt;)&lt;/a&gt; by their lower-case (&lt;em&gt;camelCase&lt;/em&gt;) name without the &lt;code&gt;Repository&lt;/code&gt; suffix. For example, you access the instance of &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/repositories/AddressBookRepository.md&#34;&gt;&lt;code&gt;AddressBookRepository&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md#addressbook&#34;&gt;&lt;code&gt;ig.addressBook&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feeds&lt;/h2&gt; &#xA;&lt;p&gt;Feeds represent paginated endpoints like a user&#39;s feed (&lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/FeedFactory.md#user&#34;&gt;&lt;code&gt;UserFeed&lt;/code&gt;&lt;/a&gt;). Think of feeds like (async-)iterators/streams/observables (in fact feeds are &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of&#34;&gt;async iterable&lt;/a&gt; and observable (&lt;code&gt;feed.item$&lt;/code&gt;)). Every feed is accessible via &lt;code&gt;ig.feed.feedName()&lt;/code&gt; (&lt;em&gt;camelCase&lt;/em&gt; name). &lt;code&gt;ig.feed&lt;/code&gt; is the &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/FeedFactory.md&#34;&gt;&lt;code&gt;FeedFactory&lt;/code&gt;&lt;/a&gt; that creates feeds for you connected to the instance of &lt;code&gt;ig&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;available feeds&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/modules/feeds.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;their keys&lt;/strong&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/FeedFactory.md&#34;&gt;&lt;code&gt;FeedFactory&lt;/code&gt; (&lt;code&gt;ig.feed&lt;/code&gt;) here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/examples/account-followers.feed.example.ts&#34;&gt;this example&lt;/a&gt; and learn how to work with library feeds.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most of the feeds require initialization parameter(s), like a user-pk (id).&lt;/p&gt; &#xA;&lt;h2&gt;Services&lt;/h2&gt; &#xA;&lt;p&gt;Services will help you to maintain some actions without calling a couple repository methods or perform complex things like pre and postlogin flow simulations or photo/video publishing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;available repositories&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/modules/services.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;See the list of &lt;strong&gt;their keys&lt;/strong&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/docs/classes/index/IgApiClient.md&#34;&gt;&lt;code&gt;IgApiClient&lt;/code&gt; here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Debugging&lt;/h1&gt; &#xA;&lt;p&gt;In order to get debug infos provided by the library, you can enable debugging. The prefix for this library is &lt;code&gt;ig&lt;/code&gt;. To get all debug logs (&lt;em&gt;recommended&lt;/em&gt;) set the namespace to &lt;code&gt;ig:*&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Node&lt;/h4&gt; &#xA;&lt;p&gt;In Node you only have to set the environment variable &lt;code&gt;DEBUG&lt;/code&gt; to the desired namespace. &lt;a href=&#34;https://github.com/visionmedia/debug#environment-variables&#34;&gt;Further information&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;If you need features that is not implemented - feel free to implement and create PRs!&lt;/p&gt; &#xA;&lt;p&gt;Plus we need some documentation, so if you are good in it - you are welcome.&lt;/p&gt; &#xA;&lt;p&gt;Setting up your environment is described &lt;a href=&#34;https://raw.githubusercontent.com/dilame/instagram-private-api/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Useful links&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/instagram-id-to-url-segment&#34;&gt;instagram-id-to-url-segment&lt;/a&gt; - convert the image url fragment to the media ID&lt;/p&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huttarichard&#34;&gt;Richard Hutta&lt;/a&gt;, original author of this library. Thanks to him for starting it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks to contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nerixyz&#34;&gt;Nerixyz&lt;/a&gt;, for writing a huge amount of code for this library.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vuejs/pinia</title>
    <updated>2022-08-23T01:49:04Z</updated>
    <id>tag:github.com,2022-08-23:/vuejs/pinia</id>
    <link href="https://github.com/vuejs/pinia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pinia.vuejs.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img width=&#34;180&#34; src=&#34;https://pinia.vuejs.org/logo.svg?sanitize=true&#34; alt=&#34;Pinia logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://npmjs.com/package/pinia&#34;&gt;&lt;img src=&#34;https://badgen.net/npm/v/pinia&#34; alt=&#34;npm package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vuejs/pinia/actions/workflows/test.yml?query=branch%3Av2&#34;&gt;&lt;img src=&#34;https://github.com/vuejs/pinia/workflows/test/badge.svg?branch=v2&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/vuejs/pinia&#34;&gt;&lt;img src=&#34;https://badgen.net/codecov/c/github/vuejs/pinia/v2&#34; alt=&#34;code coverage&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Pinia&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Intuitive, type safe and flexible Store for Vue&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💡 Intuitive&lt;/li&gt; &#xA; &lt;li&gt;🔑 Type Safe&lt;/li&gt; &#xA; &lt;li&gt;⚙️ Devtools support&lt;/li&gt; &#xA; &lt;li&gt;🔌 Extensible&lt;/li&gt; &#xA; &lt;li&gt;🏗 Modular by design&lt;/li&gt; &#xA; &lt;li&gt;📦 Extremely light&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pinia works with both Vue 2 and Vue 3.&lt;/p&gt; &#xA;&lt;p&gt;Pinia is the most similar English pronunciation of the word &lt;em&gt;pineapple&lt;/em&gt; in Spanish: &lt;em&gt;piña&lt;/em&gt;. A pineapple is in reality a group of individual flowers that join together to create a multiple fruit. Similar to stores, each one is born individually, but they are all connected at the end. It&#39;s also a delicious tropical fruit indigenous to South America.&lt;/p&gt; &#xA;&lt;h2&gt;👉 &lt;a href=&#34;https://stackblitz.com/github/piniajs/example-vue-3-vite&#34;&gt;Demo with Vue 3 on StackBlitz&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;👉 &lt;a href=&#34;https://stackblitz.com/github/piniajs/example-nuxt-3&#34;&gt;Demo with Nuxt 3 on StackBlitz&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Help me keep working on this project 💚&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/posva&#34;&gt;Become a Sponsor on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paypal.me/posva&#34;&gt;One-time donation via PayPal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--sponsors start--&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Gold Sponsors&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://vuejobs.com/?utm_source=vuerouter&amp;amp;utm_campaign=sponsor&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://posva-sponsors.pages.dev/logos/vuejobs.svg&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;72px&#34; alt=&#34;VueJobs&#34;&gt; &#xA;   &lt;img src=&#34;https://posva-sponsors.pages.dev/logos/vuejobs.svg?sanitize=true&#34; height=&#34;72px&#34; alt=&#34;VueJobs&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Silver Sponsors&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.vuemastery.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://posva-sponsors.pages.dev/logos/vuemastery-dark.png&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;42px&#34; alt=&#34;VueMastery&#34;&gt; &#xA;   &lt;img src=&#34;https://posva-sponsors.pages.dev/logos/vuemastery-light.svg?sanitize=true&#34; height=&#34;42px&#34; alt=&#34;VueMastery&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://www.prefect.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://posva-sponsors.pages.dev/logos/prefectlogo-dark.svg&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;42px&#34; alt=&#34;Prefect&#34;&gt; &#xA;   &lt;img src=&#34;https://posva-sponsors.pages.dev/logos/prefectlogo-light.svg?sanitize=true&#34; height=&#34;42px&#34; alt=&#34;Prefect&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Bronze Sponsors&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://stormier.ninja&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://avatars.githubusercontent.com/u/2486424?u=7b0c73ae5d090ce53bf59473094e9606fe082c59&amp;amp;v=4&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;26px&#34; alt=&#34;Stanislas OrmiÃ¨res&#34;&gt; &#xA;   &lt;img src=&#34;https://avatars.githubusercontent.com/u/2486424?u=7b0c73ae5d090ce53bf59473094e9606fe082c59&amp;amp;v=4&#34; height=&#34;26px&#34; alt=&#34;Stanislas OrmiÃ¨res&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/vuejs/pinia/v2/www.vuejs.de&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://avatars.githubusercontent.com/u/4183726?u=6b50a8ea16de29d2982f43c5640b1db9299ebcd1&amp;amp;v=4&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;26px&#34; alt=&#34;Antony Konstantinidis&#34;&gt; &#xA;   &lt;img src=&#34;https://avatars.githubusercontent.com/u/4183726?u=6b50a8ea16de29d2982f43c5640b1db9299ebcd1&amp;amp;v=4&#34; height=&#34;26px&#34; alt=&#34;Antony Konstantinidis&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://storyblok.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://posva-sponsors.pages.dev/logos/storyblok.png&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;26px&#34; alt=&#34;Storyblok&#34;&gt; &#xA;   &lt;img src=&#34;https://posva-sponsors.pages.dev/logos/storyblok.png&#34; height=&#34;26px&#34; alt=&#34;Storyblok&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://nuxtjs.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source srcset=&#34;https://posva-sponsors.pages.dev/logos/nuxt-dark.svg&#34; media=&#34;(prefers-color-scheme: dark)&#34; height=&#34;26px&#34; alt=&#34;NuxtJS&#34;&gt; &#xA;   &lt;img src=&#34;https://posva-sponsors.pages.dev/logos/nuxt-light.svg?sanitize=true&#34; height=&#34;26px&#34; alt=&#34;NuxtJS&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;!--sponsors end--&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;A few notes about the project and possible questions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: &lt;em&gt;Is Pinia the successor of Vuex?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: &lt;a href=&#34;https://vuejs.org/guide/scaling-up/state-management.html#pinia&#34;&gt;Yes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: &lt;em&gt;What about dynamic modules?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: Dynamic modules are not type safe, so instead &lt;a href=&#34;https://pinia.vuejs.org/cookbook/composing-stores.html&#34;&gt;we allow creating different stores&lt;/a&gt; that can be imported anywhere&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap / Ideas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Should the state be merged at the same level as actions and getters?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;del&gt;Allow grouping stores together into a similar structure and allow defining new getters (&lt;code&gt;pinia&lt;/code&gt;)&lt;/del&gt; You can directly call &lt;code&gt;useOtherStore()&lt;/code&gt; inside of a getter or action.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;del&gt;Getter with params that act like computed properties (@ktsn)&lt;/del&gt; Can be implement through a custom composable and passed directly to state.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add pinia&#xA;# or with npm&#xA;npm install pinia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using Vue &amp;lt;2.7, make sure to install latest &lt;code&gt;@vue/composition-api&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install pinia @vue/composition-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install the plugin&lt;/h3&gt; &#xA;&lt;p&gt;Create a pinia (the root store) and pass it to app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Vue 3&#xA;import { createApp } from &#39;vue&#39;&#xA;import { createPinia } from &#39;pinia&#39;&#xA;import App from &#39;./App.vue&#39;&#xA;&#xA;const pinia = createPinia()&#xA;const app = createApp(App)&#xA;&#xA;app.use(pinia)&#xA;app.mount(&#39;#app&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Vue 2&#xA;import { createPinia, PiniaVuePlugin } from &#39;pinia&#39;&#xA;&#xA;Vue.use(PiniaVuePlugin)&#xA;const pinia = createPinia()&#xA;&#xA;new Vue({&#xA;  el: &#39;#app&#39;,&#xA;  // other options...&#xA;  // ...&#xA;  // note the same `pinia` instance can be used across multiple Vue apps on&#xA;  // the same page&#xA;  pinia,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create a Store&lt;/h3&gt; &#xA;&lt;p&gt;You can create as many stores as you want, and they should each exist in different files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { defineStore } from &#39;pinia&#39;&#xA;&#xA;// main is the name of the store. It is unique across your application&#xA;// and will appear in devtools&#xA;export const useMainStore = defineStore(&#39;main&#39;, {&#xA;  // a function that returns a fresh state&#xA;  state: () =&amp;gt; ({&#xA;    counter: 0,&#xA;    name: &#39;Eduardo&#39;,&#xA;  }),&#xA;  // optional getters&#xA;  getters: {&#xA;    // getters receive the state as first parameter&#xA;    doubleCounter: (state) =&amp;gt; state.counter * 2,&#xA;    // use getters in other getters&#xA;    doubleCounterPlusOne(): number {&#xA;      return this.doubleCounter + 1&#xA;    },&#xA;  },&#xA;  // optional actions&#xA;  actions: {&#xA;    reset() {&#xA;      // `this` is the store instance&#xA;      this.counter = 0&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;defineStore&lt;/code&gt; returns a function that has to be called to get access to the store:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { useMainStore } from &#39;@/stores/main&#39;&#xA;import { storeToRefs } from &#39;pinia&#39;&#xA;&#xA;export default defineComponent({&#xA;  setup() {&#xA;    const main = useMainStore()&#xA;&#xA;    // extract specific store properties&#xA;    const { counter, doubleCounter } = storeToRefs(main)&#xA;&#xA;    return {&#xA;      // gives access to the whole store in the template&#xA;      main,&#xA;      // gives access only to specific state or getter&#xA;      counter,&#xA;      doubleCounter,&#xA;    }&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Pinia, check &lt;a href=&#34;https://pinia.vuejs.org&#34;&gt;its documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>determined-ai/determined</title>
    <updated>2022-08-23T01:49:04Z</updated>
    <id>tag:github.com,2022-08-23:/determined-ai/determined</id>
    <link href="https://github.com/determined-ai/determined" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Determined: Deep Learning Training Platform&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/determined-ai/determined/master/determined-logo.png&#34; alt=&#34;Determined AI Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Determined: Deep Learning Training Platform&lt;/h1&gt; &#xA;&lt;p&gt;Determined is an open-source deep learning training platform that makes building models fast and easy. Determined enables you to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Train models faster&lt;/strong&gt; using state-of-the-art distributed training, without changing your model code&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatically find high-quality models&lt;/strong&gt; with advanced hyperparameter tuning from the creators of Hyperband&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Get more from your GPUs&lt;/strong&gt; with smart scheduling and cut cloud GPU costs by seamlessly using preemptible instances&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Track and reproduce your work&lt;/strong&gt; with experiment tracking that works out-of-the-box, covering code versions, metrics, checkpoints, and hyperparameters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Determined integrates these features into an easy-to-use, high-performance deep learning environment — which means you can spend your time building models instead of managing infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;To use Determined, you can continue using popular DL frameworks such as TensorFlow and PyTorch; you just need to update your model code to integrate with the Determined API.&lt;/p&gt; &#xA;&lt;h2&gt;Try out Determined Locally&lt;/h2&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://docs.determined.ai/latest/how-to/installation/requirements.html#install-docker&#34;&gt;these instructions&lt;/a&gt; to install and set up docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;# Start a Determined cluster locally.&#xA;python3.7 -m venv ~/.virtualenvs/test&#xA;. ~/.virtualenvs/test/bin/activate&#xA;pip install determined&#xA;# To start a cluster with GPUs, remove `no-gpu` flag.&#xA;det deploy local cluster-up --no-gpu&#xA;# Access web UI at localhost:8080. By default, &#34;determined&#34; user accepts a blank password.&#xA;&#xA;# Navigate to a Determined example.&#xA;git clone --recurse-submodules https://github.com/determined-ai/determined&#xA;cd determined/examples/computer_vision/cifar10_pytorch&#xA;&#xA;# Submit job to train a single model on a single node.&#xA;det experiment create const.yaml .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Detailed Installation Guide&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.determined.ai/latest/how-to/install-main.html&#34;&gt;our installation guide&lt;/a&gt; for details on how to install Determined, including on AWS and GCP.&lt;/p&gt; &#xA;&lt;h3&gt;Try Now on AWS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://console.aws.amazon.com/cloudformation/home?region=us-west-2#/stacks/create/review?templateURL=https://determined-ai-public.s3-us-west-2.amazonaws.com/simple.yaml&#34;&gt;&lt;img src=&#34;https://s3.amazonaws.com/cloudformation-examples/cloudformation-launch-stack.png&#34; alt=&#34;Try Now&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;For a brief introduction to using Determined, check out our &lt;a href=&#34;https://docs.determined.ai/latest/getting-started.html&#34;&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use an existing deep learning model with Determined, follow the tutorial for your preferred deep learning framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.determined.ai/latest/tutorials/pytorch-mnist-tutorial.html&#34;&gt;PyTorch MNIST Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.determined.ai/latest/tutorials/tf-mnist-tutorial.html&#34;&gt;TensorFlow Keras MNIST Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation for the latest version of Determined can always be found &lt;a href=&#34;https://docs.determined.ai&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;If you need help, want to file a bug report, or just want to keep up-to-date with the latest news about Determined, please join the Determined community!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://determined-community.slack.com&#34;&gt;Slack&lt;/a&gt; is the best place to ask questions about Determined and get support. &lt;a href=&#34;https://join.slack.com/t/determined-community/shared_invite/zt-cnj7802v-KcVbaUrIzQOwmkmY7gP0Ew&#34;&gt;Click here to join our Slack&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can also join the &lt;a href=&#34;https://groups.google.com/a/determined.ai/forum/#!forum/community&#34;&gt;community mailing list&lt;/a&gt; to ask questions about the project and receive announcements.&lt;/li&gt; &#xA; &lt;li&gt;To report a bug, &lt;a href=&#34;https://github.com/determined-ai/determined/issues&#34;&gt;file an issue&lt;/a&gt; on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;To report a security issue, email &lt;a href=&#34;mailto:security@determined.ai&#34;&gt;&lt;code&gt;security@determined.ai&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/determined-ai/determined/master/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/determined-ai/determined/master/LICENSE&#34;&gt;Apache V2&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>