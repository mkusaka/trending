<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-28T01:47:05Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>emilkowalski/vaul</title>
    <updated>2023-07-28T01:47:05Z</updated>
    <id>tag:github.com,2023-07-28:/emilkowalski/vaul</id>
    <link href="https://github.com/emilkowalski/vaul" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An unstyled drawer component for React.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/emilkowalski/vaul/assets/36730035/fdf8c5e8-ade8-433b-8bb0-4ce10e722516&#34;&gt;https://github.com/emilkowalski/vaul/assets/36730035/fdf8c5e8-ade8-433b-8bb0-4ce10e722516&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vaul is an unstyled drawer component for React that can be used as a Dialog replacement on tablet and mobile devices. It uses &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#trigger&#34;&gt;Radix&#39;s Dialog primitive&lt;/a&gt; under the hood and is inspired by &lt;a href=&#34;https://twitter.com/devongovett/status/1674470185783402496&#34;&gt;this tweet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To start using the library, install it in your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install vaul&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the drawer in your app.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Drawer } from &#39;vaul&#39;;&#xA;&#xA;function MyComponent() {&#xA;  return (&#xA;    &amp;lt;Drawer.Root&amp;gt;&#xA;      &amp;lt;Drawer.Trigger&amp;gt;Open&amp;lt;/Drawer.Trigger&amp;gt;&#xA;      &amp;lt;Drawer.Portal&amp;gt;&#xA;        &amp;lt;Drawer.Content&amp;gt;&#xA;          &amp;lt;p&amp;gt;Content&amp;lt;/p&amp;gt;&#xA;        &amp;lt;/Drawer.Content&amp;gt;&#xA;        &amp;lt;Drawer.Overlay /&amp;gt;&#xA;      &amp;lt;/Drawer.Portal&amp;gt;&#xA;    &amp;lt;/Drawer.Root&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Play around with the examples on codesandbox:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/p/sandbox/drawer-with-scale-g24vvh?file=%2Fapp%2Fmy-drawer.tsx%3A1%2C1&#34;&gt;With scaled background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/p/sandbox/drawer-with-scale-forked-nx2glp?file=%2Fapp%2Fmy-drawer.tsx%3A4%2C1&#34;&gt;Without scaled background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/p/sandbox/drawer-with-scale-forked-73f8jw?file=%2Fapp%2Fmy-drawer.tsx%3A1%2C1&#34;&gt;Scrollable with inputs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/p/sandbox/drawer-without-scale-forked-kxh9j5?file=%2Fapp%2Fmy-drawer.tsx%3A1%2C1&#34;&gt;Dismissible&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;h3&gt;Root&lt;/h3&gt; &#xA;&lt;p&gt;Contains all parts of a dialog. Use &lt;code&gt;shouldScaleBackground&lt;/code&gt; to enable background scaling, it requires an element with &lt;code&gt;[vaul-drawer-wrapper]&lt;/code&gt; data attribute to scale its background. Can be controlled with the &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;onOpenChange&lt;/code&gt; props. Can be opened by default via &lt;code&gt;defaultOpen&lt;/code&gt; prop.&lt;/p&gt; &#xA;&lt;h3&gt;Trigger&lt;/h3&gt; &#xA;&lt;p&gt;The button that opens the dialog. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#trigger&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Content&lt;/h3&gt; &#xA;&lt;p&gt;Content that should be rendered in the drawer. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#content&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Overlay&lt;/h3&gt; &#xA;&lt;p&gt;A layer that covers the inert portion of the view when the dialog is open. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#overlay&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Title&lt;/h3&gt; &#xA;&lt;p&gt;An accessible title to be announced when the dialog is opened. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#title&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;p&gt;An optional accessible description to be announced when the dialog is opened. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#description&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Close&lt;/h3&gt; &#xA;&lt;p&gt;The button that closes the dialog. &lt;a href=&#34;https://www.radix-ui.com/docs/primitives/components/dialog#close&#34;&gt;Props&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Portal&lt;/h3&gt; &#xA;&lt;p&gt;Portals your drawer into the body.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vastxie/Happy-ChatGPT</title>
    <updated>2023-07-28T01:47:05Z</updated>
    <id>tag:github.com,2023-07-28:/vastxie/Happy-ChatGPT</id>
    <link href="https://github.com/vastxie/Happy-ChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT ÂõΩÁ≤πÁâàÔºåÂíå GPT ‰∏ÄËµ∑Â≠¶‰π†Âú∞ÈÅìÁöÑ‰∏≠ÂõΩËØùÂêß&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT-API Demo&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/vastxie/Happy-ChatGPT/main/README.zh-CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A demo repo based on &lt;a href=&#34;https://platform.openai.com/docs/guides/chat&#34;&gt;OpenAI GPT-3.5 Turbo API.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üçø Live preview&lt;/strong&gt;: &lt;a href=&#34;https://chatgpt.ddiu.me&#34;&gt;https://chatgpt.ddiu.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ö†Ô∏è Notice: Our API Key limit has been exhausted. So the demo site is not available now.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/chat-logo.webp&#34; alt=&#34;chat-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introducing &lt;code&gt;Anse&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Looking for multi-chat, image-generation, and more powerful features? Take a look at our newly launched &lt;a href=&#34;https://github.com/anse-app/anse&#34;&gt;Anse&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More info on &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/discussions/247&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/discussions/247&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anse-app/anse&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1998168/235048408-ca4015f5-4d3c-4c64-9a6c-9069a89cd23a.png&#34; alt=&#34;image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;h3&gt;Pre environment&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node&lt;/strong&gt;: Check that both your development environment and deployment environment are using &lt;code&gt;Node v18&lt;/code&gt; or later. You can use &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; to manage multiple &lt;code&gt;node&lt;/code&gt; versions locally. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; node -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PNPM&lt;/strong&gt;: We recommend using &lt;a href=&#34;https://pnpm.io/&#34;&gt;pnpm&lt;/a&gt; to manage dependencies. If you have never installed pnpm, you can install it with the following command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; npm i -g pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OPENAI_API_KEY&lt;/strong&gt;: Before running this application, you need to obtain the API key from OpenAI. You can register the API key at &lt;a href=&#34;https://beta.openai.com/signup&#34;&gt;https://beta.openai.com/signup&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file, then rename it to &lt;code&gt;.env&lt;/code&gt;, and add your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt; to the &lt;code&gt;.env&lt;/code&gt; file. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; OPENAI_API_KEY=sk-xxx...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the application, the local project runs on &lt;code&gt;http://localhost:3000/&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;Deploy With Vercel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fddiu8081%2Fchatgpt-demo&amp;amp;env=OPENAI_API_KEY&amp;amp;envDescription=OpenAI%20API%20Key&amp;amp;envLink=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;üîí Need website password?&lt;/h4&gt; &#xA; &lt;p&gt;Deploy with the &lt;a href=&#34;https://raw.githubusercontent.com/vastxie/Happy-ChatGPT/main/#environment-variables&#34;&gt;&lt;code&gt;SITE_PASSWORD&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fddiu8081%2Fchatgpt-demo&amp;amp;env=OPENAI_API_KEY&amp;amp;env=SITE_PASSWORD&amp;amp;envDescription=OpenAI%20API%20Key&amp;amp;envLink=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys&#34; alt=&#34;Deploy with Vercel&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34; height=&#34;24&#34; style=&#34;vertical-align: middle; margin-right: 4px;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230310/image.4wzfb79qt7k0.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy With Netlify&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/ddiu8081/chatgpt-demo#OPENAI_API_KEY=&amp;amp;HTTPS_PROXY=&amp;amp;OPENAI_API_BASE_URL=&amp;amp;HEAD_SCRIPTS=&amp;amp;PUBLIC_SECRET_KEY=&amp;amp;OPENAI_API_MODEL=&amp;amp;SITE_PASSWORD=&#34;&gt;&lt;img src=&#34;https://www.netlify.com/img/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy with Netlify&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step-by-step deployment tutorial:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/fork&#34;&gt;Fork&lt;/a&gt; this project, Go to &lt;a href=&#34;https://app.netlify.com/start&#34;&gt;https://app.netlify.com/start&lt;/a&gt; new Site, select the project you &lt;code&gt;forked&lt;/code&gt; done, and connect it with your &lt;code&gt;GitHub&lt;/code&gt; account.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230310/image.3nlt4hgzb16o.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230310/image.5fhfouap270g.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Select the branch you want to deploy, then configure environment variables in the project settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230311/image.gfs9lx8c854.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Select the default build command and output directory, Click the &lt;code&gt;Deploy Site&lt;/code&gt; button to start deploying the site.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230311/image.4jky9e1wbojk.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Environment variables refer to the documentation below. &lt;a href=&#34;https://hub.docker.com/r/ddiu8081/chatgpt-demo&#34;&gt;Docker Hub address&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Direct run&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name=chatgpt-demo -e OPENAI_API_KEY=YOUR_OPEN_API_KEY -p 3000:3000 -d ddiu8081/chatgpt-demo:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;-e&lt;/code&gt; define environment variables in the container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker compose&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  chatgpt-demo:&#xA;    image: ddiu8081/chatgpt-demo:latest&#xA;    container_name: chatgpt-demo&#xA;    restart: always&#xA;    ports:&#xA;      - &#39;3000:3000&#39;&#xA;    environment:&#xA;      - OPENAI_API_KEY=YOUR_OPEN_API_KEY&#xA;      # - HTTPS_PROXY=YOUR_HTTPS_PROXY&#xA;      # - OPENAI_API_BASE_URL=YOUR_OPENAI_API_BASE_URL&#xA;      # - HEAD_SCRIPTS=YOUR_HEAD_SCRIPTS&#xA;      # - PUBLIC_SECRET_KEY=YOUR_SECRET_KEY&#xA;      # - SITE_PASSWORD=YOUR_SITE_PASSWORD&#xA;      # - OPENAI_API_MODEL=YOUR_OPENAI_API_MODEL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start&#xA;docker compose up -d&#xA;# down&#xA;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy with Sealos&lt;/h3&gt; &#xA;&lt;p&gt;1.Register a Sealos account for free &lt;a href=&#34;https://cloud.sealos.io&#34;&gt;sealos cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2.Click &lt;code&gt;App Launchpad&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-1.34i8gi80j268.webp&#34; alt=&#34;App Launchpad&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3.Click &lt;code&gt;Create Application&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-2.4t8q5px18eps.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;4.Just fill in according to the following figure, and click on it after filling out &lt;code&gt;Deploy Application&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-3.5x5exqk0o8lc.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;App Name: chatgpt-demo&#xA;Image Name: ddiu8081/chatgpt-demo:latest&#xA;CPU: 0.5Core&#xA;Memory: 1G&#xA;Container Ports: 3000&#xA;Accessible to the Public: On&#xA;Environment: OPENAI_API_KEY=YOUR_OPEN_API_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5.Obtain the access link and click directly to access it. If you need to bind your own domain name, you can also fill in your own domain name in &lt;code&gt;Custom domain&lt;/code&gt; and follow the prompts to configure the domain name CNAME&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-4.4esqkqu70z9c.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;6.Wait for one to two minutes and open this link&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-5.5cgfpee3zeyo.webp&#34; alt=&#34;Open Link&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy on more servers&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to the official deployment documentation: &lt;a href=&#34;https://docs.astro.build/en/guides/deploy&#34;&gt;https://docs.astro.build/en/guides/deploy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;You can control the website through environment variables.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key for OpenAI.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HTTPS_PROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provide proxy for OpenAI API. e.g. &lt;code&gt;http://127.0.0.1:7890&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_BASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Custom base url for OpenAI API.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.openai.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HEAD_SCRIPTS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inject analytics or other scripts before &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; of the page&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PUBLIC_SECRET_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Secret string for the project. Use for generating signatures for API calls&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SITE_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set password for site, support multiple password separated by comma. If not set, site will be public&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_MODEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ID of the model to use. &lt;a href=&#34;https://platform.openai.com/docs/api-reference/models/list&#34;&gt;List models&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Enable Automatic Updates&lt;/h2&gt; &#xA;&lt;p&gt;After forking the project, you need to manually enable Workflows and Upstream Sync Action on the Actions page of the forked project. Once enabled, automatic updates will be scheduled every day:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.staticaly.com/gh/yzh990918/static@master/20230518/image.2hhnrsrd2t1c.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;Q: TypeError: fetch failed (can&#39;t connect to OpenAI Api)&lt;/p&gt; &#xA;&lt;p&gt;A: Configure environment variables &lt;code&gt;HTTPS_PROXY&lt;/code&gt;Ôºåreference: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/issues/34&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/issues/34&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: throw new TypeError(${context} is not a ReadableStream.)&lt;/p&gt; &#xA;&lt;p&gt;A: The Node version needs to be &lt;code&gt;v18&lt;/code&gt; or later, reference: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/issues/65&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/issues/65&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: Accelerate domestic access without the need for proxy deployment tutorial?&lt;/p&gt; &#xA;&lt;p&gt;A: You can refer to this tutorial: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/discussions/270&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/discussions/270&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all those who contributed.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all our supporters!üôè&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors.nn.ci/api?repo=ddiu8081/chatgpt-demo&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/raw/main/LICENSE&#34;&gt;ddiu8081&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>acacode/swagger-typescript-api</title>
    <updated>2023-07-28T01:47:05Z</updated>
    <id>tag:github.com,2023-07-28:/acacode/swagger-typescript-api</id>
    <link href="https://github.com/acacode/swagger-typescript-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TypeScript API generator via Swagger scheme&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;swagger-typescript-api&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/swagger-typescript-api&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/swagger-typescript-api.svg?sanitize=true&#34; alt=&#34;NPM badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/acacode/swagger-typescript-api/actions/workflows/main.yml/badge.svg?branch=next&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-33-orange.svg?sanitize=true&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/assets/swagger-typescript-api-logo.png&#34; align=&#34;left&#34; title=&#34;swagger-typescript-api logo by js2me&#34; width=&#34;93&#34; height=&#34;180&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Generate api via swagger scheme.&lt;br&gt; Supports OA 3.0, 2.0, JSON, yaml&lt;br&gt; Generated api module use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&#34;&gt;&lt;strong&gt;Fetch Api&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/axios/axios&#34;&gt;&lt;strong&gt;Axios&lt;/strong&gt;&lt;/a&gt; to make requests.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Any questions you can ask &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; or in &lt;a href=&#34;https://join.slack.com/t/acacode/shared_invite/enQtOTQ5ODgyODQzMzYwLWYxOGI1MzQ3Yzg1ZWI5ZTI5NzNiZjExZTE5OWI1YjQ4NjBiNTk4NWVlNjM5YmU1ZWI2ZDkyMzZkZGIxNjA5NTQ&#34;&gt;&lt;strong&gt;our slack&lt;/strong&gt;&lt;/a&gt;(&lt;strong&gt;#swagger-typescript-api&lt;/strong&gt; channel)&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/assets/components-converter-example.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;P.S. If you are creating the PR, please check your changes with using command &lt;code&gt;npm run prepare&lt;/code&gt;&lt;br&gt; P.S. If you want to contribute please use the &lt;code&gt;next&lt;/code&gt; branch. All PRs that has target &lt;code&gt;master&lt;/code&gt; will be declined!&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.jetbrains.com/?from=swaggertypescriptapi&#34;&gt;Jetbrains&lt;/a&gt; for providing a free license for their excellent Webstorm IDE.&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com/?from=swaggertypescriptapi&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/1/1a/JetBrains_Logo_2016.svg?sanitize=true&#34; alt=&#34;Jetbrains&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üëÄ Examples&lt;/h2&gt; &#xA;&lt;p&gt;All examples you can find &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/master/tests&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-muse&#34;&gt;Usage: sta [options]&#xA;Usage: swagger-typescript-api [options]&#xA;Usage: swagger-typescript-api generate-templates [options]&#xA;&#xA;Options:&#xA;  -v, --version                 output the current version&#xA;  -p, --path &amp;lt;string&amp;gt;           path/url to swagger scheme&#xA;  -o, --output &amp;lt;string&amp;gt;         output path of typescript api file (default: &#34;./&#34;)&#xA;  -n, --name &amp;lt;string&amp;gt;           name of output typescript api file (default: &#34;Api.ts&#34;)&#xA;  -t, --templates &amp;lt;string&amp;gt;      path to folder containing templates&#xA;  -d, --default-as-success      use &#34;default&#34; response status code as success response too.&#xA;                                some swagger schemas use &#34;default&#34; response status code as success response type by default. (default: false)&#xA;  -r, --responses               generate additional information about request responses&#xA;                                also add typings for bad responses (default: false)&#xA;  --union-enums                 generate all &#34;enum&#34; types as union types (T1 | T2 | TN) (default: false)&#xA;  --add-readonly                generate readonly properties (default: false)&#xA;  --route-types                 generate type definitions for API routes (default: false)&#xA;  --no-client                   do not generate an API class&#xA;  --enum-names-as-values        use values in &#39;x-enumNames&#39; as enum values (not only as keys) (default: false)&#xA;  --extract-request-params      extract request params to data contract (Also combine path params and query params into one object) (default: false)&#xA;  --extract-request-body        extract request body type to data contract (default: false)&#xA;  --extract-response-body       extract response body type to data contract (default: false)&#xA;  --extract-response-error      extract response error type to data contract (default: false)&#xA;  --modular                     generate separated files for http client, data contracts, and routes (default: false)&#xA;  --js                          generate js api module with declaration file (default: false)&#xA;  --module-name-index &amp;lt;number&amp;gt;  determines which path index should be used for routes separation (example: GET:/fruites/getFruit -&amp;gt; index:0 -&amp;gt; moduleName -&amp;gt; fruites) (default: 0)&#xA;  --module-name-first-tag       splits routes based on the first tag (default: false)&#xA;  --disableStrictSSL            disabled strict SSL (default: false)&#xA;  --disableProxy                disabled proxy (default: false)&#xA;  --axios                       generate axios http client (default: false)&#xA;  --unwrap-response-data        unwrap the data item from the response (default: false)&#xA;  --disable-throw-on-error      Do not throw an error when response.ok is not true (default: false)&#xA;  --single-http-client          Ability to send HttpClient instance to Api constructor (default: false)&#xA;  --silent                      Output only errors to console (default: false)&#xA;  --default-response &amp;lt;type&amp;gt;     default type for empty response schema (default: &#34;void&#34;)&#xA;  --type-prefix &amp;lt;string&amp;gt;        data contract name prefix (default: &#34;&#34;)&#xA;  --type-suffix &amp;lt;string&amp;gt;        data contract name suffix (default: &#34;&#34;)&#xA;  --clean-output                clean output folder before generate api. WARNING: May cause data loss (default: false)&#xA;  --api-class-name &amp;lt;string&amp;gt;     name of the api class (default: &#34;Api&#34;)&#xA;  --patch                       fix up small errors in the swagger source definition (default: false)&#xA;  --debug                       additional information about processes inside this tool (default: false)&#xA;  --another-array-type          generate array types as Array&amp;lt;Type&amp;gt; (by default Type[]) (default: false)&#xA;  --sort-types                  sort fields and types (default: false)&#xA;  --sort-routes                 sort routes in alphabetical order (default: false)&#xA;  --custom-config &amp;lt;string&amp;gt;      custom config: primitiveTypeConstructs, hooks, ...  (default: &#34;&#34;)&#xA;  --extract-enums               extract all enums from inline interface\type content to typescript enum construction (default: false)&#xA;  -h, --help                    display help for command&#xA;&#xA;Commands:&#xA;  generate-templates              Generate &#34;.ejs&#34; templates needed for generate api&#xA;    -o, --output &amp;lt;string&amp;gt;         output path of generated templates&#xA;    -m, --modular                 generate templates needed to separate files for http client, data contracts, and routes (default: false)&#xA;    --http-client &amp;lt;string&amp;gt;        http client type (possible values: &#34;fetch&#34;, &#34;axios&#34;) (default: &#34;fetch&#34;)&#xA;    -c, --clean-output            clean output folder before generate template. WARNING: May cause data loss (default: false)&#xA;    -r, --rewrite                 rewrite content in existing templates (default: false)&#xA;    --silent                      Output only errors to console (default: false)&#xA;    -h, --help                    display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also you can use &lt;code&gt;npx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; npx swagger-typescript-api -p ./swagger.json -o ./src -n myApi.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use this package from nodejs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { generateApi, generateTemplates } = require(&#39;swagger-typescript-api&#39;);&#xA;const path = require(&#34;path&#34;);&#xA;const fs = require(&#34;fs&#34;);&#xA;&#xA;/* NOTE: all fields are optional expect one of `input`, `url`, `spec` */&#xA;generateApi({&#xA;  name: &#34;MySuperbApi.ts&#34;,&#xA;  // set to `false` to prevent the tool from writing to disk&#xA;  output: path.resolve(process.cwd(), &#34;./src/__generated__&#34;),&#xA;  url: &#39;http://api.com/swagger.json&#39;,&#xA;  input: path.resolve(process.cwd(), &#39;./foo/swagger.json&#39;),&#xA;  spec: {&#xA;    swagger: &#34;2.0&#34;,&#xA;    info: {&#xA;      version: &#34;1.0.0&#34;,&#xA;      title: &#34;Swagger Petstore&#34;,&#xA;    },&#xA;    // ...&#xA;  },&#xA;  templates: path.resolve(process.cwd(), &#39;./api-templates&#39;),&#xA;  httpClientType: &#34;axios&#34;, // or &#34;fetch&#34;&#xA;  defaultResponseAsSuccess: false,&#xA;  generateClient: true,&#xA;  generateRouteTypes: false,&#xA;  generateResponses: true,&#xA;  toJS: false,&#xA;  extractRequestParams: false,&#xA;  extractRequestBody: false,&#xA;  extractEnums: false,&#xA;  unwrapResponseData: false,&#xA;  prettier: { // By default prettier config is load from your project&#xA;    printWidth: 120,&#xA;    tabWidth: 2,&#xA;    trailingComma: &#34;all&#34;,&#xA;    parser: &#34;typescript&#34;,&#xA;  },&#xA;  defaultResponseType: &#34;void&#34;,&#xA;  singleHttpClient: true,&#xA;  cleanOutput: false,&#xA;  enumNamesAsValues: false,&#xA;  moduleNameFirstTag: false,&#xA;  generateUnionEnums: false,&#xA;  typePrefix: &#39;&#39;,&#xA;  typeSuffix: &#39;&#39;,&#xA;  enumKeyPrefix: &#39;&#39;,&#xA;  enumKeySuffix: &#39;&#39;,&#xA;  addReadonly: false,&#xA;  sortTypes: false,&#xA;  sortRouters: false,&#xA;  extractingOptions: {&#xA;    requestBodySuffix: [&#34;Payload&#34;, &#34;Body&#34;, &#34;Input&#34;],&#xA;    requestParamsSuffix: [&#34;Params&#34;],&#xA;    responseBodySuffix: [&#34;Data&#34;, &#34;Result&#34;, &#34;Output&#34;],&#xA;    responseErrorSuffix: [&#34;Error&#34;, &#34;Fail&#34;, &#34;Fails&#34;, &#34;ErrorData&#34;, &#34;HttpError&#34;, &#34;BadResponse&#34;],&#xA;  },&#xA;  /** allow to generate extra files based with this extra templates, see more below */&#xA;  extraTemplates: [],&#xA;  anotherArrayType: false,&#xA;  fixInvalidTypeNamePrefix: &#34;Type&#34;,&#xA;  fixInvalidEnumKeyPrefix: &#34;Value&#34;, &#xA;  codeGenConstructs: (constructs) =&amp;gt; ({&#xA;    ...constructs,&#xA;    RecordType: (key, value) =&amp;gt; `MyRecord&amp;lt;key, value&amp;gt;`&#xA;  }),&#xA;  primitiveTypeConstructs: (constructs) =&amp;gt; ({&#xA;      ...constructs,&#xA;      string: {&#xA;        &#39;date-time&#39;: &#39;Date&#39;&#xA;      }&#xA;  }),&#xA;  hooks: {&#xA;    onCreateComponent: (component) =&amp;gt; {},&#xA;    onCreateRequestParams: (rawType) =&amp;gt; {},&#xA;    onCreateRoute: (routeData) =&amp;gt; {},&#xA;    onCreateRouteName: (routeNameInfo, rawRouteInfo) =&amp;gt; {},&#xA;    onFormatRouteName: (routeInfo, templateRouteName) =&amp;gt; {},&#xA;    onFormatTypeName: (typeName, rawTypeName, schemaType) =&amp;gt; {},&#xA;    onInit: (configuration) =&amp;gt; {},&#xA;    onPreParseSchema: (originalSchema, typeName, schemaType) =&amp;gt; {},&#xA;    onParseSchema: (originalSchema, parsedSchema) =&amp;gt; {},&#xA;    onPrepareConfig: (currentConfiguration) =&amp;gt; {},&#xA;  }&#xA;})&#xA;  .then(({ files, configuration }) =&amp;gt; {&#xA;    files.forEach(({ content, name }) =&amp;gt; {&#xA;      fs.writeFile(path, content);&#xA;    });&#xA;  })&#xA;  .catch(e =&amp;gt; console.error(e))&#xA;&#xA;&#xA;generateTemplates({&#xA;  cleanOutput: false,&#xA;  output: PATH_TO_OUTPUT_DIR,&#xA;  httpClientType: &#34;fetch&#34;,&#xA;  modular: false,&#xA;  silent: false,&#xA;  rewrite: false,&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üíé options&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;&lt;code&gt;--templates&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This option needed for cases when you don&#39;t want to use the default &lt;code&gt;swagger-typescript-api&lt;/code&gt; output structure&lt;br&gt; You can create custom templates with extensions &lt;code&gt;.ejs&lt;/code&gt; or &lt;code&gt;.eta&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Templates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;api.ejs&lt;/code&gt; - &lt;em&gt;(generates file)&lt;/em&gt; Api class module (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/default/api.ejs&#34;&gt;/templates/default&lt;/a&gt;, &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/modular/api.ejs&#34;&gt;/templates/modular&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data-contracts.ejs&lt;/code&gt; - &lt;em&gt;(generates file)&lt;/em&gt; all types (data contracts) from swagger schema (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/data-contracts.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;http-client.ejs&lt;/code&gt; - &lt;em&gt;(generates file)&lt;/em&gt; HttpClient class module (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/http-client.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;procedure-call.ejs&lt;/code&gt; - &lt;em&gt;(subtemplate)&lt;/em&gt; route in Api class (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/default/procedure-call.ejs&#34;&gt;/templates/default&lt;/a&gt;, &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/modular/procedure-call.ejs&#34;&gt;/templates/modular&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;route-docs.ejs&lt;/code&gt; - &lt;em&gt;(generates file)&lt;/em&gt; documentation for route in Api class (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/route-docs.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;route-name.ejs&lt;/code&gt; - &lt;em&gt;(subtemplate)&lt;/em&gt; route name for route in Api class (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/route-name.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;route-type.ejs&lt;/code&gt; - &lt;em&gt;(&lt;code&gt;--route-types&lt;/code&gt; option)&lt;/em&gt; &lt;em&gt;(subtemplate)&lt;/em&gt; (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/route-type.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;route-types.ejs&lt;/code&gt; - &lt;em&gt;(&lt;code&gt;--route-types&lt;/code&gt; option)&lt;/em&gt; &lt;em&gt;(subtemplate)&lt;/em&gt; (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/route-types.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data-contract-jsdoc.ejs&lt;/code&gt; - &lt;em&gt;(subtemplate)&lt;/em&gt; generates JSDOC for data contract (locations: &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base/data-contract-jsdoc.ejs&#34;&gt;/templates/base&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;How to use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;copy &lt;code&gt;swagger-typescript-api&lt;/code&gt; templates into your place in project &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;from &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/default&#34;&gt;/templates/default&lt;/a&gt; for single api file&lt;/li&gt; &#xA;   &lt;li&gt;from &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/modular&#34;&gt;/templates/modular&lt;/a&gt; for multiple api files (with &lt;code&gt;--modular&lt;/code&gt; option)&lt;/li&gt; &#xA;   &lt;li&gt;from &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base&#34;&gt;/templates/base&lt;/a&gt; for base templates (templates using both in default and modular)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;add &lt;code&gt;--templates PATH_TO_YOUR_TEMPLATES&lt;/code&gt; option&lt;/li&gt; &#xA; &lt;li&gt;modify &lt;a href=&#34;https://eta.js.org/docs/syntax&#34;&gt;ETA&lt;/a&gt; templates as you like&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE:&lt;br&gt; Eta has special directive to render template in your Eta templates - &lt;code&gt;includeFile(pathToTemplate, payload)&lt;/code&gt;&lt;br&gt; If you want to use some default templates from this tool you can use path prefixes: &lt;code&gt;@base&lt;/code&gt;, &lt;code&gt;@default&lt;/code&gt;, &lt;code&gt;@modular&lt;/code&gt;.&lt;br&gt; &lt;code&gt;@base&lt;/code&gt; - &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/base&#34;&gt;path to base templates&lt;/a&gt;&lt;br&gt; &lt;code&gt;@default&lt;/code&gt; - &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/default&#34;&gt;path to single api file templates&lt;/a&gt;&lt;br&gt; &lt;code&gt;@modular&lt;/code&gt; - &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/templates/modular&#34;&gt;path to multiple api files templates&lt;/a&gt;&lt;br&gt; Examples:&lt;br&gt; - &lt;code&gt;includeFile(&#34;@base/data-contracts.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@default/api.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@default/procedure-call.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@modular/api.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@modular/procedure-call.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@base/route-docs.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@base/route-name.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@base/route-type.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;br&gt; - &lt;code&gt;includeFile(&#34;@base/route-types.ejs&#34;, { ...yourData, ...it })&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;&lt;code&gt;--module-name-index&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This option should be used in cases when you have api with one global prefix like &lt;code&gt;/api&lt;/code&gt;&lt;br&gt; Example:&lt;br&gt; &lt;code&gt;GET:/api/fruits/getFruits&lt;/code&gt;&lt;br&gt; &lt;code&gt;POST:/api/fruits/addFruits&lt;/code&gt;&lt;br&gt; &lt;code&gt;GET:/api/vegetables/addVegetable&lt;/code&gt;&lt;br&gt; with &lt;code&gt;--module-name-index 0&lt;/code&gt; Api class will have one property &lt;code&gt;api&lt;/code&gt;&lt;br&gt; When we change it to &lt;code&gt;--module-name-index 1&lt;/code&gt; then Api class have two properties &lt;code&gt;fruits&lt;/code&gt; and &lt;code&gt;vegetables&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;&lt;code&gt;--module-name-first-tag&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This option will group your API operations based on their first tag - mirroring how the Swagger UI groups displayed operations&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;extraTemplates&lt;/code&gt; (NodeJS option)&lt;/h3&gt; &#xA;&lt;p&gt;type &lt;code&gt;(Record&amp;lt;string, any&amp;gt; &amp;amp; { name: string, path: string })[]&lt;/code&gt;&lt;br&gt; This thing allow you to generate extra ts\js files based on extra templates (one extra template for one ts\js file)&lt;br&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/tree/next/tests/spec/extra-templates&#34;&gt;Example here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;generate-templates&lt;/code&gt; command&lt;/h2&gt; &#xA;&lt;p&gt;This command allows you to generate source templates which using with option &lt;code&gt;--templates&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modification internal codegen structs with NodeJS API:&lt;/h2&gt; &#xA;&lt;p&gt;You are able to modify TypeScript internal structs using for generating output with using &lt;code&gt;generateApi&lt;/code&gt; options &lt;code&gt;codeGenConstructs&lt;/code&gt; and &lt;code&gt;primitiveTypeConstructs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;codeGenConstructs&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This option has type &lt;code&gt;(struct: CodeGenConstruct) =&amp;gt; Partial&amp;lt;CodeGenConstruct&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;generateApi({&#xA;  // ...&#xA;  codeGenConstructs: (struct) =&amp;gt; ({&#xA;      Keyword: {&#xA;          Number: &#34;number&#34;,&#xA;          String: &#34;string&#34;,&#xA;          Boolean: &#34;boolean&#34;,&#xA;          Any: &#34;any&#34;,&#xA;          Void: &#34;void&#34;,&#xA;          Unknown: &#34;unknown&#34;,&#xA;          Null: &#34;null&#34;,&#xA;          Undefined: &#34;undefined&#34;,&#xA;          Object: &#34;object&#34;,&#xA;          File: &#34;File&#34;,&#xA;          Date: &#34;Date&#34;,&#xA;          Type: &#34;type&#34;,&#xA;          Enum: &#34;enum&#34;,&#xA;          Interface: &#34;interface&#34;,&#xA;          Array: &#34;Array&#34;,&#xA;          Record: &#34;Record&#34;,&#xA;          Intersection: &#34;&amp;amp;&#34;,&#xA;          Union: &#34;|&#34;,&#xA;      },&#xA;      CodeGenKeyword: {&#xA;          UtilRequiredKeys: &#34;UtilRequiredKeys&#34;,&#xA;      },&#xA;      /**&#xA;       * $A[] or Array&amp;lt;$A&amp;gt;&#xA;       */&#xA;      ArrayType: (content) =&amp;gt; {&#xA;          if (this.anotherArrayType) {&#xA;              return `Array&amp;lt;${content}&amp;gt;`;&#xA;          }&#xA;&#xA;          return `(${content})[]`;&#xA;      },&#xA;      /**&#xA;       * &#34;$A&#34;&#xA;       */&#xA;      StringValue: (content) =&amp;gt; `&#34;${content}&#34;`,&#xA;      /**&#xA;       * $A&#xA;       */&#xA;      BooleanValue: (content) =&amp;gt; `${content}`,&#xA;      /**&#xA;       * $A&#xA;       */&#xA;      NumberValue: (content) =&amp;gt; `${content}`,&#xA;      /**&#xA;       * $A&#xA;       */&#xA;      NullValue: (content) =&amp;gt; content,&#xA;      /**&#xA;       * $A1 | $A2&#xA;       */&#xA;      UnionType: (contents) =&amp;gt; _.join(_.uniq(contents), ` | `),&#xA;      /**&#xA;       * ($A1)&#xA;       */&#xA;      ExpressionGroup: (content) =&amp;gt; (content ? `(${content})` : &#34;&#34;),&#xA;      /**&#xA;       * $A1 &amp;amp; $A2&#xA;       */&#xA;      IntersectionType: (contents) =&amp;gt; _.join(_.uniq(contents), ` &amp;amp; `),&#xA;      /**&#xA;       * Record&amp;lt;$A1, $A2&amp;gt;&#xA;       */&#xA;      RecordType: (key, value) =&amp;gt; `Record&amp;lt;${key}, ${value}&amp;gt;`,&#xA;      /**&#xA;       * readonly $key?:$value&#xA;       */&#xA;      TypeField: ({ readonly, key, optional, value }) =&amp;gt;&#xA;          _.compact([readonly &amp;amp;&amp;amp; &#34;readonly &#34;, key, optional &amp;amp;&amp;amp; &#34;?&#34;, &#34;: &#34;, value]).join(&#34;&#34;),&#xA;      /**&#xA;       * [key: $A1]: $A2&#xA;       */&#xA;      InterfaceDynamicField: (key, value) =&amp;gt; `[key: ${key}]: ${value}`,&#xA;      /**&#xA;       * $A1 = $A2&#xA;       */&#xA;      EnumField: (key, value) =&amp;gt; `${key} = ${value}`,&#xA;      /**&#xA;       * $A0.key = $A0.value,&#xA;       * $A1.key = $A1.value,&#xA;       * $AN.key = $AN.value,&#xA;       */&#xA;      EnumFieldsWrapper: (contents) =&amp;gt;&#xA;          _.map(contents, ({ key, value }) =&amp;gt; `  ${key} = ${value}`).join(&#34;,\n&#34;),&#xA;      /**&#xA;       * {\n $A \n}&#xA;       */&#xA;      ObjectWrapper: (content) =&amp;gt; `{\n${content}\n}`,&#xA;      /**&#xA;       * /** $A *\/&#xA;       */&#xA;      MultilineComment: (contents, formatFn) =&amp;gt;&#xA;          [&#xA;              ...(contents.length === 1&#xA;                  ? [`/** ${contents[0]} */`]&#xA;                  : [&#34;/**&#34;, ...contents.map((content) =&amp;gt; ` * ${content}`), &#34; */&#34;]),&#xA;          ].map((part) =&amp;gt; `${formatFn ? formatFn(part) : part}\n`),&#xA;      /**&#xA;       * $A1&amp;lt;...$A2.join(,)&amp;gt;&#xA;       */&#xA;      TypeWithGeneric: (typeName, genericArgs) =&amp;gt; {&#xA;          return `${typeName}${genericArgs.length ? `&amp;lt;${genericArgs.join(&#34;,&#34;)}&amp;gt;` : &#34;&#34;}`;&#xA;      },&#xA;  })&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, if you need to generate output &lt;code&gt;Record&amp;lt;string, any&amp;gt;&lt;/code&gt; instead of &lt;code&gt;object&lt;/code&gt; you can do it with using following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;generateApi({&#xA;    // ...&#xA;    codeGenConstructs: (struct) =&amp;gt; ({&#xA;        Keyword: {&#xA;            Object: &#34;Record&amp;lt;string, any&amp;gt;&#34;,&#xA;        }&#xA;    })&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;primitiveTypeConstructs&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;It is type mapper or translator swagger schema objects. &lt;code&gt;primitiveTypeConstructs&lt;/code&gt; translates &lt;code&gt;type&lt;/code&gt;/&lt;code&gt;format&lt;/code&gt; schema fields to typescript structs.&lt;br&gt; This option has type&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;type PrimitiveTypeStructValue =&#xA;  | string&#xA;  | ((schema: Record&amp;lt;string, any&amp;gt;, parser: import(&#34;./src/schema-parser/schema-parser&#34;).SchemaParser) =&amp;gt; string);&#xA;&#xA;type PrimitiveTypeStruct = Record&amp;lt;&#xA;  &#34;integer&#34; | &#34;number&#34; | &#34;boolean&#34; | &#34;object&#34; | &#34;file&#34; | &#34;string&#34; | &#34;array&#34;,&#xA;  string | ({ $default: PrimitiveTypeStructValue } &amp;amp; Record&amp;lt;string, PrimitiveTypeStructValue&amp;gt;)&#xA;&amp;gt;&#xA;&#xA;declare const primitiveTypeConstructs: (struct: PrimitiveTypeStruct) =&amp;gt; Partial&amp;lt;PrimitiveTypeStruct&amp;gt;&#xA;&#xA;generateApi({&#xA;    // ...&#xA;    primitiveTypeConstructs: (struct) =&amp;gt; ({&#xA;        integer: () =&amp;gt; &#34;number&#34;,&#xA;        number: () =&amp;gt; &#34;number&#34;,&#xA;        boolean: () =&amp;gt; &#34;boolean&#34;,&#xA;        object: () =&amp;gt; &#34;object&#34;,&#xA;        file: () =&amp;gt; &#34;File&#34;,&#xA;        string: {&#xA;            $default: () =&amp;gt; &#34;string&#34;,&#xA;&#xA;            /** formats */&#xA;            binary: () =&amp;gt; &#34;File&#34;,&#xA;            file: () =&amp;gt; &#34;File&#34;,&#xA;            &#34;date-time&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            time: () =&amp;gt; &#34;string&#34;,&#xA;            date: () =&amp;gt; &#34;string&#34;,&#xA;            duration: () =&amp;gt; &#34;string&#34;,&#xA;            email: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;idn-email&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;idn-hostname&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            ipv4: () =&amp;gt; &#34;string&#34;,&#xA;            ipv6: () =&amp;gt; &#34;string&#34;,&#xA;            uuid: () =&amp;gt; &#34;string&#34;,&#xA;            uri: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;uri-reference&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;uri-template&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;json-pointer&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            &#34;relative-json-pointer&#34;: () =&amp;gt; &#34;string&#34;,&#xA;            regex: () =&amp;gt; &#34;string&#34;,&#xA;        },&#xA;        array: (schema, parser) =&amp;gt; {&#xA;            const content = parser.getInlineParseContent(schema.items);&#xA;            return parser.safeAddNullToType(schema, `(${content})[]`);&#xA;        },&#xA;    })&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, if you need to change &lt;code&gt;&#34;string&#34;/&#34;date-time&#34;&lt;/code&gt; default output as &lt;code&gt;string&lt;/code&gt; to &lt;code&gt;Date&lt;/code&gt; you can do it with using following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;&#xA;generateApi({&#xA;    primitiveTypeConstructs: (struct) =&amp;gt; ({&#xA;        string: {&#xA;            &#34;date-time&#34;: &#34;Date&#34;,&#xA;        },&#xA;    })&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See more about &lt;a href=&#34;https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times&#34;&gt;swagger schema type/format data here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ Mass media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://christo8989.medium.com/5-lessons-learned-about-swagger-typescript-api-511240b34c1&#34;&gt;5 Lessons learned about swagger-typescript-api&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/js2me/why-swagger-schemes-are-needed-in-frontend-development-2cb4&#34;&gt;Why Swagger schemes are needed in frontend development ?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.premieroctet.com/blog/migration-typescript/&#34;&gt;Migration en douceur vers TypeScript (French)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zenn.dev/watahaya/articles/2f4a716c47903b&#34;&gt;swagger-typescript-api usage (Japanese)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Contribution&lt;/h2&gt; &#xA;&lt;p&gt;‚ùó‚ùó‚ùó Please use the &lt;code&gt;next&lt;/code&gt; branch :)&lt;/p&gt; &#xA;&lt;p&gt;If you need to check your changes at schemas in &lt;code&gt;tests&lt;/code&gt; folder before create a PR just run command &lt;code&gt;npm run test-all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/js2me&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/16340911?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sergey S. Volkov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergey S. Volkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=js2me&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=js2me&#34; title=&#34;Documentation&#34;&gt;üìñ&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#design-js2me&#34; title=&#34;Design&#34;&gt;üé®&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#example-js2me&#34; title=&#34;Examples&#34;&gt;üí°&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#maintenance-js2me&#34; title=&#34;Maintenance&#34;&gt;üöß&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-js2me&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Ajs2me&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/andrefilimono&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/7794526?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Filimonov Andrey&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Filimonov Andrey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=andrefilimono&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-andrefilimono&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#design-andrefilimono&#34; title=&#34;Design&#34;&gt;üé®&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Fl0pZz&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/9510124?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rafael Fakhreev&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rafael Fakhreev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=Fl0pZz&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-Fl0pZz&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://azzola.dev&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1297597?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lucas Azzola&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas Azzola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=azz&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-azz&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#design-azz&#34; title=&#34;Design&#34;&gt;üé®&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JennieJi&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1913045?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jennie&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jennie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=JennieJi&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-JennieJi&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jomarquez21&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/16705169?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jose Enrique Marquez&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jose Enrique Marquez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=jomarquez21&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Ajomarquez21&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://glassechidna.com.au&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/482276?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Benjamin Dobell&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Dobell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=Benjamin-Dobell&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3ABenjamin-Dobell&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://fixate.it&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1510520?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Larry Botha&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Larry Botha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=larrybotha&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Alarrybotha&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nikalun&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/13102962?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nikolay Lukinykh&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikolay Lukinykh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=nikalun&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-nikalun&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Anikalun&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Mvbraathen&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/16756739?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Marius Br√•then&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marius Br√•then&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#security-Mvbraathen&#34; title=&#34;Security&#34;&gt;üõ°Ô∏è&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/xesjkeee&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/17751886?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Evgeny Vlasov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Evgeny Vlasov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-xesjkeee&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/kel666&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/2040661?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Fabio&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabio&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Akel666&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=kel666&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Fabiencdp&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6182473?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Fabien&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Fabien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3AFabiencdp&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://about.me/julienrousseau&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3296671?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rousseau Julien&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rousseau Julien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3ARoXuS&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://sebastianarias.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9751266?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sebasti√°n Arias&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebasti√°n Arias&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3ALarox&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Styn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6705137?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Stijn Lammens&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stijn Lammens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3AStyn&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=Styn&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://emilecantin.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/885486?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Emile Cantin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Emile Cantin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Aemilecantin&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=emilecantin&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/armsnyder&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9969202?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Adam Snyder&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Snyder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=armsnyder&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Aarmsnyder&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jnpoyser&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7920428?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;James Poyser&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;James Poyser&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=jnpoyser&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-jnpoyser&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://ru.linkedin.com/in/lisikhin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/475367?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Alexey&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3ANihisil&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://imaniu.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50100681?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ê±üÈ∫ªÂ¶û&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ê±üÈ∫ªÂ¶û&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=jiangmaniu&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://kspr.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5294519?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kasper Moskwiak&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kasper Moskwiak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=kmoskwiak&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-kmoskwiak&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/baggoedw&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/92381702?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;baggoedw&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;baggoedw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=baggoedw&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://marcusdunn.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51931484?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Marcus Dunn&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcus Dunn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=MarcusDunn&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3AMarcusDunn&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.danielplayfaircal.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1217649?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Daniel Playfair Cal&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniel Playfair Cal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=hedgepigdaniel&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Ahedgepigdaniel&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/patrick-shaw/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5153619?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Patrick Shaw&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Shaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/pulls?q=is%3Apr+reviewed-by%3APatrickShaw&#34; title=&#34;Reviewed Pull Requests&#34;&gt;üëÄ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://brook.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9323190?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Brook Jordan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brook Jordan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=brookjordan&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RoCat&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3562317?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;RoCat&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RoCat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=RoCat&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#ideas-RoCat&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;ü§î&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/#design-RoCat&#34; title=&#34;Design&#34;&gt;üé®&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ApacheEx&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1918108?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Oleg Kuzava&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oleg Kuzava&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=ApacheEx&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3AApacheEx&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://nikz.se&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7352072?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Niklas Frank&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas Frank&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=nksfrank&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3Anksfrank&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://quentinbrunet.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20137632?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Quentin Brunet&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Quentin Brunet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=qboot&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Soarc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3385495?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Gor Rustamyan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gor Rustamyan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=Soarc&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3ASoarc&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/JochenDiekenbrock&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1625222?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jochen Diekenbrock&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jochen Diekenbrock&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/commits?author=JochenDiekenbrock&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt; &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/issues?q=author%3AJochenDiekenbrock&#34; title=&#34;Bug reports&#34;&gt;üêõ&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ How it looks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/assets/npx.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/assets/auth-example.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/acacode/swagger-typescript-api/master/assets/typings1.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìù License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://github.com/acacode/swagger-typescript-api/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>