<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T01:49:28Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mongodb/node-mongodb-native</title>
    <updated>2022-08-21T01:49:28Z</updated>
    <id>tag:github.com,2022-08-21:/mongodb/node-mongodb-native</id>
    <link href="https://github.com/mongodb/node-mongodb-native" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Official MongoDB Node.js Driver&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MongoDB NodeJS Driver&lt;/h1&gt; &#xA;&lt;p&gt;The official &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; driver for Node.js.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upgrading to version 4? Take a look at our &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/etc/notes/CHANGES_4.0.0.md&#34;&gt;upgrade guide here&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;what&lt;/th&gt; &#xA;   &lt;th&gt;where&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.mongodb.com/drivers/node&#34;&gt;docs.mongodb.com/drivers/node&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;api-doc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mongodb.github.io/node-mongodb-native/&#34;&gt;mongodb.github.io/node-mongodb-native/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;npm package&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/mongodb&#34;&gt;www.npmjs.com/package/mongodb&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;source&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mongodb/node-mongodb-native&#34;&gt;github.com/mongodb/node-mongodb-native&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mongodb&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mongodb.com&#34;&gt;www.mongodb.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;changelog&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/HISTORY.md&#34;&gt;HISTORY.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;upgrade to v4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/etc/notes/CHANGES_4.0.0.md&#34;&gt;etc/notes/CHANGES_4.0.0.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;contributing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Bugs / Feature Requests&lt;/h3&gt; &#xA;&lt;p&gt;Think you’ve found a bug? Want to see a new feature in &lt;code&gt;node-mongodb-native&lt;/code&gt;? Please open a case in our issue management tool, JIRA:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create an account and login &lt;a href=&#34;https://jira.mongodb.org&#34;&gt;jira.mongodb.org&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the NODE project &lt;a href=&#34;https://jira.mongodb.org/browse/NODE&#34;&gt;jira.mongodb.org/browse/NODE&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create Issue&lt;/strong&gt; - Please provide as much information as possible about the issue type and how to reproduce it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Bug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the Core Server (i.e. SERVER) project are &lt;strong&gt;public&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Support / Feedback&lt;/h3&gt; &#xA;&lt;p&gt;For issues with, questions about, or feedback for the Node.js driver, please look into our &lt;a href=&#34;https://docs.mongodb.com/manual/support&#34;&gt;support channels&lt;/a&gt;. Please do not email any of the driver developers directly with issues or questions - you&#39;re more likely to get an answer on the &lt;a href=&#34;https://community.mongodb.com/tags/c/drivers-odms-connectors/7/node-js-driver&#34;&gt;MongoDB Community Forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Change Log&lt;/h3&gt; &#xA;&lt;p&gt;Change history can be found in &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/HISTORY.md&#34;&gt;&lt;code&gt;HISTORY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;For version compatibility matrices, please refer to the following links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/drivers/node/current/compatibility/#mongodb-compatibility&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/drivers/node/current/compatibility/#language-compatibility&#34;&gt;NodeJS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Typescript Version&lt;/h4&gt; &#xA;&lt;p&gt;We recommend using the latest version of typescript, however we currently ensure the driver&#39;s public types compile against &lt;code&gt;typescript@4.1.6&lt;/code&gt;. This is the lowest typescript version guaranteed to work with our driver: older versions may or may not work - use at your own risk. Since typescript &lt;a href=&#34;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes&#34;&gt;does not restrict breaking changes to major versions&lt;/a&gt; we consider this support best effort. If you run into any unexpected compiler failures against our supported TypeScript versions please let us know by filing an issue on our &lt;a href=&#34;https://jira.mongodb.org/browse/NODE&#34;&gt;JIRA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to get started using the Node.js 4.x driver is by using the &lt;code&gt;npm&lt;/code&gt; (Node Package Manager) to install the dependency in your project.&lt;/p&gt; &#xA;&lt;p&gt;After you&#39;ve created your own project using &lt;code&gt;npm init&lt;/code&gt;, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install mongodb&#xA;# or ...&#xA;yarn add mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download the MongoDB driver and add a dependency entry in your &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If you are a Typescript user, you will need the Node.js type definitions to use the driver&#39;s definitions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -D @types/node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;The MongoDB driver depends on several other packages. These are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/js-bson&#34;&gt;bson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb-js/bson-ext&#34;&gt;bson-ext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb-js/kerberos&#34;&gt;kerberos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/libmongocrypt#readme&#34;&gt;mongodb-client-encryption&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of these packages include native C++ extensions. Consult the &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/etc/notes/native-extensions.md&#34;&gt;trouble shooting guide here&lt;/a&gt; if you run into issues.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;This guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the &lt;a href=&#34;https://docs.mongodb.com/drivers/node/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Create the &lt;code&gt;package.json&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;First, create a directory where your application will live.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir myProject&#xA;cd myProject&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enter the following command and answer the questions to create the initial structure for your new project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm init -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, install the driver as a dependency.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start a MongoDB Server&lt;/h3&gt; &#xA;&lt;p&gt;For complete MongoDB installation instructions, see &lt;a href=&#34;https://docs.mongodb.org/manual/installation/&#34;&gt;the manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the right MongoDB version from &lt;a href=&#34;https://www.mongodb.org/downloads&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a database directory (in this case under &lt;strong&gt;/data&lt;/strong&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Install and start a &lt;code&gt;mongod&lt;/code&gt; process.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mongod --dbpath=/data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the &lt;strong&gt;mongod&lt;/strong&gt; process start up and print some status information.&lt;/p&gt; &#xA;&lt;h3&gt;Connect to MongoDB&lt;/h3&gt; &#xA;&lt;p&gt;Create a new &lt;strong&gt;app.js&lt;/strong&gt; file and add the following code to try out some basic CRUD operations using the MongoDB driver.&lt;/p&gt; &#xA;&lt;p&gt;Add code to connect to the server and the database &lt;strong&gt;myProject&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All the examples below use async/await syntax.&lt;/p&gt; &#xA; &lt;p&gt;However, all async API calls support an optional callback as the final argument, if a callback is provided a Promise will not be returned.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { MongoClient } = require(&#39;mongodb&#39;);&#xA;// or as an es module:&#xA;// import { MongoClient } from &#39;mongodb&#39;&#xA;&#xA;// Connection URL&#xA;const url = &#39;mongodb://localhost:27017&#39;;&#xA;const client = new MongoClient(url);&#xA;&#xA;// Database Name&#xA;const dbName = &#39;myProject&#39;;&#xA;&#xA;async function main() {&#xA;  // Use connect method to connect to the server&#xA;  await client.connect();&#xA;  console.log(&#39;Connected successfully to server&#39;);&#xA;  const db = client.db(dbName);&#xA;  const collection = db.collection(&#39;documents&#39;);&#xA;&#xA;  // the following code examples can be pasted here...&#xA;&#xA;  return &#39;done.&#39;;&#xA;}&#xA;&#xA;main()&#xA;  .then(console.log)&#xA;  .catch(console.error)&#xA;  .finally(() =&amp;gt; client.close());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run your app from the command line with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application should print &lt;strong&gt;Connected successfully to server&lt;/strong&gt; to the console.&lt;/p&gt; &#xA;&lt;h3&gt;Insert a Document&lt;/h3&gt; &#xA;&lt;p&gt;Add to &lt;strong&gt;app.js&lt;/strong&gt; the following function which uses the &lt;strong&gt;insertMany&lt;/strong&gt; method to add three documents to the &lt;strong&gt;documents&lt;/strong&gt; collection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const insertResult = await collection.insertMany([{ a: 1 }, { a: 2 }, { a: 3 }]);&#xA;console.log(&#39;Inserted documents =&amp;gt;&#39;, insertResult);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;strong&gt;insertMany&lt;/strong&gt; command returns an object with information about the insert operations.&lt;/p&gt; &#xA;&lt;h3&gt;Find All Documents&lt;/h3&gt; &#xA;&lt;p&gt;Add a query that returns all the documents.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const findResult = await collection.find({}).toArray();&#xA;console.log(&#39;Found documents =&amp;gt;&#39;, findResult);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This query returns all the documents in the &lt;strong&gt;documents&lt;/strong&gt; collection. If you add this below the insertMany example you&#39;ll see the document&#39;s you&#39;ve inserted.&lt;/p&gt; &#xA;&lt;h3&gt;Find Documents with a Query Filter&lt;/h3&gt; &#xA;&lt;p&gt;Add a query filter to find only documents which meet the query criteria.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const filteredDocs = await collection.find({ a: 3 }).toArray();&#xA;console.log(&#39;Found documents filtered by { a: 3 } =&amp;gt;&#39;, filteredDocs);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only the documents which match &lt;code&gt;&#39;a&#39; : 3&lt;/code&gt; should be returned.&lt;/p&gt; &#xA;&lt;h3&gt;Update a document&lt;/h3&gt; &#xA;&lt;p&gt;The following operation updates a document in the &lt;strong&gt;documents&lt;/strong&gt; collection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const updateResult = await collection.updateOne({ a: 3 }, { $set: { b: 1 } });&#xA;console.log(&#39;Updated documents =&amp;gt;&#39;, updateResult);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The method updates the first document where the field &lt;strong&gt;a&lt;/strong&gt; is equal to &lt;strong&gt;3&lt;/strong&gt; by adding a new field &lt;strong&gt;b&lt;/strong&gt; to the document set to &lt;strong&gt;1&lt;/strong&gt;. &lt;code&gt;updateResult&lt;/code&gt; contains information about whether there was a matching document to update or not.&lt;/p&gt; &#xA;&lt;h3&gt;Remove a document&lt;/h3&gt; &#xA;&lt;p&gt;Remove the document where the field &lt;strong&gt;a&lt;/strong&gt; is equal to &lt;strong&gt;3&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const deleteResult = await collection.deleteMany({ a: 3 });&#xA;console.log(&#39;Deleted documents =&amp;gt;&#39;, deleteResult);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Index a Collection&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.mongodb.org/manual/indexes/&#34;&gt;Indexes&lt;/a&gt; can improve your application&#39;s performance. The following function creates an index on the &lt;strong&gt;a&lt;/strong&gt; field in the &lt;strong&gt;documents&lt;/strong&gt; collection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const indexName = await collection.createIndex({ a: 1 });&#xA;console.log(&#39;index name =&#39;, indexName);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed information, see the &lt;a href=&#34;https://docs.mongodb.com/manual/applications/indexes/&#34;&gt;indexing strategies page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Error Handling&lt;/h2&gt; &#xA;&lt;p&gt;If you need to filter certain errors from our driver we have a helpful tree of errors described in &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/etc/notes/errors.md&#34;&gt;etc/notes/errors.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is our recommendation to use &lt;code&gt;instanceof&lt;/code&gt; checks on errors and to avoid relying on parsing &lt;code&gt;error.message&lt;/code&gt; and &lt;code&gt;error.name&lt;/code&gt; strings in your code. We guarantee &lt;code&gt;instanceof&lt;/code&gt; checks will pass according to semver guidelines, but errors may be sub-classed or their messages may change at any time, even patch releases, as we see fit to increase the helpfulness of the errors.&lt;/p&gt; &#xA;&lt;p&gt;Any new errors we add to the driver will directly extend an existing error class and no existing error will be moved to a different parent class outside of a major release. This means &lt;code&gt;instanceof&lt;/code&gt; will always be able to accurately capture the errors that our driver throws (or returns in a callback).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const client = new MongoClient(url);&#xA;await client.connect();&#xA;const collection = client.db().collection(&#39;collection&#39;);&#xA;&#xA;try {&#xA;  await collection.insertOne({ _id: 1 });&#xA;  await collection.insertOne({ _id: 1 }); // duplicate key error&#xA;} catch (error) {&#xA;  if (error instanceof MongoServerError) {&#xA;    console.log(`Error worth logging: ${error}`); // special case for some reason&#xA;  }&#xA;  throw error; // still want to crash&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/&#34;&gt;MongoDB Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/drivers/node/&#34;&gt;MongoDB Node Driver Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/data-modeling-introduction/&#34;&gt;Read about Schemas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/node-mongodb-native&#34;&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mongodb/node-mongodb-native/main/LICENSE.md&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;© 2009-2012 Christian Amor Kvalheim © 2012-present MongoDB &lt;a href=&#34;https://github.com/mongodb/node-mongodb-native/raw/HEAD/CONTRIBUTORS.md&#34;&gt;Contributors&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>joeyballentine/chaiNNer</title>
    <updated>2022-08-21T01:49:28Z</updated>
    <id>tag:github.com,2022-08-21:/joeyballentine/chaiNNer</id>
    <link href="https://github.com/joeyballentine/chaiNNer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A flowchart/node-based image processing GUI aimed at making chaining image processing tasks (especially those done by neural networks) easy, intuitive, and customizable.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chaiNNer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/joeyballentine/chaiNNer/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/joeyballentine/chaiNNer&#34; alt=&#34;GitHub Latest Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/joeyballentine/chaiNNer/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/joeyballentine/chaiNNer/total&#34; alt=&#34;GitHub Total Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/joeyballentine/chaiNNer/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/joeyballentine/chaiNNer&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/pzvAKPKyHM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/930865462852591648?label=Discord&amp;amp;logo=Discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/joeyballentine/chaiNNer/releases&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/joeyballentine/chaiNNer/main/src/public/banner.png&#34; width=&#34;720&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;A flowchart/node-based image processing GUI aimed at making chaining image processing tasks (especially upscaling done by neural networks) easy, intuitive, and customizable.&lt;/p&gt; &#xA;&lt;p&gt;No existing upscaling GUI gives you the level of customization of your image processing workflow that chaiNNer does. Not only do you have full control over your processing pipeline, you can do incredibly complex tasks just by connecting a few nodes together.&lt;/p&gt; &#xA;&lt;p&gt;chaiNNer is also cross-platform, meaning you can run it on Windows, MacOS, and Linux.&lt;/p&gt; &#xA;&lt;p&gt;For help, suggestions, or just to hang out, you can join the &lt;a href=&#34;https://discord.gg/pzvAKPKyHM&#34;&gt;chaiNNer Discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Remember: chaiNNer is still a work in progress and in alpha. While it is slowly getting more to where we want it, it is going to take quite some time to have every possible feature we want to add. If you&#39;re knowledgeable in TypeScript, React, or Python, feel free to contribute to this project and help us get closer to that goal.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest release from the &lt;a href=&#34;https://github.com/joeyballentine/chaiNNer/releases&#34;&gt;Github releases page&lt;/a&gt; and run the installer best suited for your system. Simple as that.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t even need to have Python installed, as chaiNNer will download an isolated integrated Python build on startup. From there, you can install all the other dependencies via the Dependency Manager.&lt;/p&gt; &#xA;&lt;p&gt;If you do wish to use your system Python installation still, you can turn the system Python setting on. However, it is much more recommended to use the integrated Python. If you do wish to use your system Python, make sure the Python version you are using is either 3.8 or 3.9. 3.10 also should work for the most part, but it is not fully supported at this time.&lt;/p&gt; &#xA;&lt;p&gt;If you are using the provided .zip portable version of chaiNNer, please be aware that the integrated Python it uses is not portable like the rest of it.&lt;/p&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Usage&lt;/h3&gt; &#xA;&lt;p&gt;While it might seem intimidating at first due to all the possible options, chaiNNer is pretty simple to use. For example, this is all you need to do in order to perform an upscale:&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/joeyballentine/chaiNNer/main/src/public/simple_screenshot.png&#34; width=&#34;480&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Before you get to this point though, you&#39;ll need to install one of the neural network frameworks from the dependency manager. You can access this via the button in the upper-right-hand corner. ChaiNNer offers support for PyTorch (with select model architectures), NCNN, and ONNX. For Nvidia users, PyTorch will be the preferred way to upscale. For AMD users, NCNN will be the preferred way to upscale.&lt;/p&gt; &#xA;&lt;p&gt;All the other Python dependencies are automatically installed, and chaiNNer even carries its own integrated Python support so that you do not have to modify your existing Python configuration.&lt;/p&gt; &#xA;&lt;p&gt;Then, all you have to do is drag and drop (or double click) node names in the selection panel to bring them into the editor. Then, drag from one node handle to another to connect the nodes. Each handle is color-coded to its specific type, and while connecting will show you only the compatible connections. This makes it very easy to know what to connect where.&lt;/p&gt; &#xA;&lt;p&gt;Once you have a working chain set up in the editor, you can press the green &#34;run&#34; button in the top bar to run the chain you have made. You will see the connections between nodes become animated, and start to un-animate as they finish processing. You can stop or pause processing with the red &#34;stop&#34; and yellow &#34;pause&#34; buttons respectively. Note: pressing stop is usually unable to kill an in-progress upscale during the actual upscaling step. This is a known issue without a workaround at the moment, so just be patient and wait for it to finish or restart chaiNNer.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/joeyballentine/chaiNNer/main/src/public/screenshot.png&#34; width=&#34;540&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Tips &amp;amp; Tricks&lt;/h3&gt; &#xA;&lt;p&gt;To select multiple nodes, hold down shift and drag around all the nodes you want selected. You can also select an individual node by just clicking on it. When nodes are selected, you can press backspace or delete to delete them from the editor.&lt;/p&gt; &#xA;&lt;p&gt;To batch upscale, create an Image Iterator node and drag the nodes you want to use into the iterator&#39;s editor area. You can expand the iterator by clicking and dragging the bottom right corner outwards (like you would a UI window). Simply wire up a chain in an iterator the same as you would normally, and when you click run it will run on every image in the folder you chose. You also can select an entire existing chain, and drag it into the iterator&#39;s editor area to essentially convert the entire thing into an iterable chain.&lt;/p&gt; &#xA;&lt;p&gt;You can right-click in the editor viewport to show an inline nodes list to select from. You also can get this menu by dragging a connection out to the editor rather than making an actual connection, and it will show compatible nodes to automatically create a connection with.&lt;/p&gt; &#xA;&lt;h3&gt;Helpful Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kimberly990/kim-chaiNNer-Templates/&#34;&gt;Kim&#39;s chaiNNer Templates&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A collection of useful chain templates that can quickly get you started if you are still new to using chaiNNer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://upscale.wiki/wiki/Model_Database&#34;&gt;Upscale Wiki Model Database&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A very nice collection of mostly ESRGAN models that have been trained for various tasks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatibility Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Arch Linux users may need to manually install libxcrypt before chaiNner&#39;s integrated Python will correctly start up.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apple M1 laptops are mostly untested, though they are theoretically supported.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GPU Support&lt;/h2&gt; &#xA;&lt;p&gt;For PyTorch inference, only Nvidia GPUs are supported. If you do not have an Nvidia GPU, you will have to use PyTorch in CPU mode. This is because PyTorch only support&#39;s Nvidia&#39;s CUDA. MacOS also does not support CUDA at all, so PyTorch will only work in CPU mode on MacOS.&lt;/p&gt; &#xA;&lt;p&gt;If you have an AMD or Intel GPU that supports NCNN however, chaiNNer now supports NCNN inference. You can use any existing NCNN .bin/.param model files (only ESRGAN-related SR models have been tested), or use chaiNNer to convert a PyTorch model to ONNX, and then convert that to NCNN (via convertmodel.com). Conversion straight from PyTorch to NCNN may come in the future, however I currently have no easy way of doing this.&lt;/p&gt; &#xA;&lt;p&gt;For Nvidia GPUs, ONNX is also an option to be used. ONNX will use CPU mode on non-Nvidia GPUs, similar to PyTorch.&lt;/p&gt; &#xA;&lt;h2&gt;Model Architecture Support&lt;/h2&gt; &#xA;&lt;p&gt;chaiNNer currently supports a limited amount of neural network architectures. More architectures will be supported in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Pytorch&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESRGAN (RRDBNet) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This includes regular ESRGAN, ESRGAN+, &#34;new-arch ESRGAN&#34; (RealSR, BSRGAN), SPSR, and Real-ESRGAN&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Real-ESRGAN Compact (SRVGGNet)&lt;/li&gt; &#xA; &lt;li&gt;Swift-SRGAN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NCNN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Technically, almost any SR model should work assuming they follow a typical CNN-based SR structure, however I have only tested with ESRGAN (and its variants) and with Waifu2x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ONNX&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Similarly to NCNN, technically almost any SR model should work assuming they follow a typical CNN-based SR structure, however I have only tested with ESRGAN.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building chaiNNer Yourself&lt;/h2&gt; &#xA;&lt;p&gt;I provide pre-built versions of chaiNNer here on GitHub. However, if you would like to build chaiNNer yourself, simply run &lt;code&gt;npm install&lt;/code&gt; (make sure that you have at least npm v7 installed) to install all the nodejs dependencies, and &lt;code&gt;npm run make&lt;/code&gt; to build the application.&lt;/p&gt; &#xA;&lt;h2&gt;Planned Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check the Discord server for a list of planned features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;What does the name mean?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;chaiNNer is a play on the fact that you can &#34;chain&#34; different tasks together, with the NN in the name being a common abbreviation for Neural Networks. This is following the brilliant naming scheme of victorca25&#39;s machine learning tools (traiNNer, iNNfer, augmeNNt) which he granted me permission to use for this as well.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why not just use Cupscale/IEU/CLI?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;All of these tools are viable options, but as anyone who has used them before knows they can be limited in what they can do. Many features like chaining or interpolating models are hardcoded in and provide little flexibility. Certain features that would be useful, like being able to use a separate model on the alpha layer of an image for example, just do not exist in Cupscale. Inversely, you can pretty much do whatever you want with chaiNNer provided there are nodes implemented. Whatever weird feature you want implemented, you can implement yourself by connecting nodes however you want. Cupscale also does not have other image processing abilities like chaiNNer does, such as adjusting contrast.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This all being said however, Cupscale, IEU, CLI, or other tools are still useful for things chaiNNer currently cannot do, like converting PyTorch models to NCNN without jumping through hoops. (That&#39;s pretty much it though)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wouldn&#39;t this make it more difficult to do things?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In a way, yes. Similarly to how programming your own script to do this stuff is more difficult, chaiNNer will also be a bit more difficult than simply dragging and dropping an image and messing with some sliders and pressing an upscale button. However, this gives you a lot more flexibility in what you can do. The added complexity is really just connecting some dots together to do what you want. That doesn&#39;t sound that bad, right?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;What platforms are supported?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows, Linux, and MacOS are all supported by chaiNNer. However, MacOS currently lacks GPU support for pytorch, so I highly recommend using another OS if you need that functionality. M1 MacBooks also are not very well tested, but should work now.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>labring/laf</title>
    <updated>2022-08-21T01:49:28Z</updated>
    <id>tag:github.com,2022-08-21:/labring/laf</id>
    <link href="https://github.com/labring/laf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;laf 是一个 serverless 框架，集成云函数，云数据库，对象存储等能力，是一个一站式开发平台，像写博客一样写代码！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/labring/laf/image?description=1&amp;amp;descriptionEditable=%E5%83%8F%E5%86%99%E5%8D%9A%E5%AE%A2%E4%B8%80%E6%A0%B7%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%81&amp;amp;font=Inter&amp;amp;forks=1&amp;amp;language=1&amp;amp;name=1&amp;amp;owner=1&amp;amp;pattern=Circuit%20Board&amp;amp;stargazers=1&amp;amp;theme=Dark&#34; alt=&#34;laf&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;b&gt;像写博客一样写函数！&lt;/b&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/labring/laf&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/lafyun/system-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/lafyun/system-server&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/typescript-%23007ACC.svg?logo=typescript&amp;amp;logoColor=white&#34; alt=&#34;TypeScript&#34;&gt; &lt;a href=&#34;https://docs.lafyun.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fdocs.lafyun.com&amp;amp;logo=Postwoman&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.lafyun.com/wofnib-image/2022-04-22-14-21-MRJH9o.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1%E7%BE%A4-2000%2B-brightgreen&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/labring/laf/main/README_en.md&#34;&gt;English&lt;/a&gt; | 中文&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;👀 &lt;code&gt;laf&lt;/code&gt; 是什么&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;laf 是云开发平台，可以快速的开发应用&lt;/li&gt; &#xA; &lt;li&gt;laf 是一个开源的 BaaS 开发平台（Backend as a Service)&lt;/li&gt; &#xA; &lt;li&gt;laf 是一个开箱即用的 serverless 开发平台&lt;/li&gt; &#xA; &lt;li&gt;laf 是一个集「函数计算」、「数据库」、「对象存储」等于一身的一站式开发平台&lt;/li&gt; &#xA; &lt;li&gt;laf 可以是开源版的腾讯云开发、开源版的 Google Firebase、开源版的 UniCloud&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/labring/laf&#34;&gt;&lt;code&gt;laf&lt;/code&gt;&lt;/a&gt; 让每个开发团队都可以随时拥有一个自己的云开发平台！&lt;/p&gt; &#xA;&lt;h2&gt;🎉 &lt;code&gt;laf&lt;/code&gt; 有什么&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多应用管理，新建、启停应用，无需折腾服务器，一分钟上线应用&lt;/li&gt; &#xA; &lt;li&gt;云函数，&lt;code&gt;laf&lt;/code&gt; 提供的函数计算服务，可以快速的实现后端业务&lt;/li&gt; &#xA; &lt;li&gt;云数据库，为应用开发提供开箱即用的数据库服务&lt;/li&gt; &#xA; &lt;li&gt;云存储，为应用开发提供专业的文件对象存储服务，兼容 S3 和其他存储服务接口&lt;/li&gt; &#xA; &lt;li&gt;WebIDE，在线写代码，完善的类型提示、代码自动完成，像写博客一样写函数，随手发布上线！&lt;/li&gt; &#xA; &lt;li&gt;静态托管，支持静态网站的托管，可以快速的上线静态网站，无需折腾 nginx&lt;/li&gt; &#xA; &lt;li&gt;Client Db，支持客户端使用 &lt;a href=&#34;https://github.com/labring/laf/tree/main/packages/client-sdk&#34;&gt;laf-client-sdk&lt;/a&gt; “直连”数据库，通过访问策略控制访问权限，极大程度提升应用开发效率&lt;/li&gt; &#xA; &lt;li&gt;WebSocket，应用支持长连接，业务无死角&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;可以通过下面的屏幕截图进一步了解 &lt;code&gt;laf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34; align=&#34;center&#34;&gt;&lt;b&gt;云函数&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34; align=&#34;center&#34;&gt;&lt;b&gt;云存储&lt;/b&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://9b069020-06e3-4949-83d9-992a52ca99fe.lafyun.com/file/laf_preview_screens/ide.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://9b069020-06e3-4949-83d9-992a52ca99fe.lafyun.com/file/laf_preview_screens/files.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34; align=&#34;center&#34;&gt;&lt;b&gt;云数据库：数据管理&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34; align=&#34;center&#34;&gt;&lt;b&gt;应用列表&lt;/b&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://9b069020-06e3-4949-83d9-992a52ca99fe.lafyun.com/file/laf_preview_screens/collection.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://9b069020-06e3-4949-83d9-992a52ca99fe.lafyun.com/file/laf_preview_screens/apps.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;👨‍💻 谁适合使用 &lt;code&gt;laf&lt;/code&gt; ?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;前端开发者 + &lt;code&gt;laf&lt;/code&gt; = 全栈开发者，前端秒变全栈，成为真正的大前端&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 为前端提供了 &lt;a href=&#34;https://github.com/labring/laf/tree/main/packages/client-sdk&#34;&gt;laf-client-sdk&lt;/a&gt;，适用于任何 js 运行环境&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 云函数使用 js/ts 开发，前后端代码无隔裂，无门槛快速上手&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 提供了静态网站托管，可将前端构建的网页直接同步部署上来，无需再配置服务器、nginx、域名等&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 后续会提供多种客户端的 SDK（Flutter/Android/iOS 等），为所有客户端开发者提供后端开发服务和一致的开发体验&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后端开发者，可以从琐事中解放出来，专注于业务本身，提升开发效率&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以节约服务器运维、多环境部署和管理精力&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以让你告别配置、调试 nginx&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以让你告别「为每个项目手动部署数据库、安全顾虑等重复性工作」&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以让你告别「修改一次、发布半天」的重复繁琐的迭代体验&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以让你随时随地在 Web 上查看函数的运行日志，不必再连接服务器，费神费眼翻找&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 可以让你「像写博客一样写一个函数」，招之即来，挥之即去，随手发布！&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;云开发用户，若你是微信云开发用户，你不仅可以获得更强大、快速的开发体验，还不被微信云开发平台锁定&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;你可以为客户提供源码交付，为客户私有部署一套 &lt;code&gt;laf&lt;/code&gt; + 你的云开发应用，而使用闭源的云开发服务，无法交付可独立运行的源码&lt;/li&gt; &#xA;   &lt;li&gt;你可以根据未来的需要，随时将自己的产品部署到自己的服务器上，&lt;code&gt;laf&lt;/code&gt; 是开源免费的&lt;/li&gt; &#xA;   &lt;li&gt;你甚至可以修改、订制自己的云开发平台，&lt;code&gt;laf&lt;/code&gt; 是开源的、高度可扩展的&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Node.js 开发者，&lt;code&gt;laf&lt;/code&gt; 是使用 Node.js 开发的，你可以把 &lt;code&gt;laf&lt;/code&gt; 当成一个更方便的 Node.js 开发平台 or 框架&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;你可以在线编写、调试函数，不用重启服务，一键发布即可用&lt;/li&gt; &#xA;   &lt;li&gt;你可以在线查看、检索函数调用日志&lt;/li&gt; &#xA;   &lt;li&gt;你可以不必折腾数据库、对象存储、nginx，随时随地让你的应用上线&lt;/li&gt; &#xA;   &lt;li&gt;你可以随手将一段 Node.js 代码上云，比如一段爬虫，一段监控代码，像写博客一样写 Node！&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;独立开发者、初创创业团队， 节约成本，快速开始，专注业务&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;减少启动项目开发的流程，快速启动，缩短产品验证周期&lt;/li&gt; &#xA;   &lt;li&gt;极大程度提高迭代速度，随时应对变化，随时发布&lt;/li&gt; &#xA;   &lt;li&gt;专注于产品业务本身，快速推出最小可用产品(MVP)，快速进行产品、市场验证&lt;/li&gt; &#xA;   &lt;li&gt;一个人 + &lt;code&gt;laf&lt;/code&gt; = 团队&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;life is short, you need laf:)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💥 laf 能用来做什么&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;laf&lt;/code&gt; 是应用的后端开发平台，理论上可以做任何应用！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 laf 快速开发微信小程序/公众号： 电商、社交、工具、教育、金融、游戏、短视频、社区、企业等应用！&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;微信小程序强要求 https 访问，可直接使用 &lt;a href=&#34;http://www.lafyun.com&#34;&gt;lafyun.com&lt;/a&gt; 创建应用，为小程序提供 https 的接口服务&lt;/li&gt; &#xA;   &lt;li&gt;可将应用的 h5 页面和管理端(admin) 直接部署到可由 &lt;code&gt;laf&lt;/code&gt; 静态托管&lt;/li&gt; &#xA;   &lt;li&gt;将 h5 直接托管到 &lt;code&gt;laf&lt;/code&gt; 上，将分配的专用域名配置到公众号即可在线访问&lt;/li&gt; &#xA;   &lt;li&gt;使用云函数实现微信授权、支付等业务&lt;/li&gt; &#xA;   &lt;li&gt;使用云存储存储视频、头像等用户数据&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发 Android or iOS 应用&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;使用云函数、云数据库、云存储进行业务处理&lt;/li&gt; &#xA;   &lt;li&gt;应用的后端管理(admin) 直接部署到可由 &lt;code&gt;laf&lt;/code&gt; 静态托管&lt;/li&gt; &#xA;   &lt;li&gt;可使用云函数实现微信授权、支付、热更新等业务&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;部署个人博客、企业官网&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;将 vuepress / hexo / hugo 等静态生成的博客，一键部署到 &lt;code&gt;laf&lt;/code&gt; 静态托管上， 见 &lt;a href=&#34;https://github.com/labring/laf-cli&#34;&gt;laf-cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;可使用云函数来处理用户留言、评论、访问统计等业务&lt;/li&gt; &#xA;   &lt;li&gt;可使用云函数扩展博客的其它能力，如课程、投票、提问等&lt;/li&gt; &#xA;   &lt;li&gt;可使用云存储存储视频、图片&lt;/li&gt; &#xA;   &lt;li&gt;可使用云函数做爬虫、推送等功能&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;企业信息化建设：企业私有部署一套 &lt;code&gt;laf&lt;/code&gt; 云开发平台&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;快速开发企业内部信息化系统，可快速上线、修改、迭代，降成本&lt;/li&gt; &#xA;   &lt;li&gt;支持多应用、多账户，不同部门、不同系统，即可隔离，亦可连通&lt;/li&gt; &#xA;   &lt;li&gt;可借助 &lt;code&gt;laf&lt;/code&gt; 社区生态，直接使用现存的 &lt;code&gt;laf&lt;/code&gt; 应用，开箱即用，降成本&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 开源免费，没有技术锁定的顾虑，可自由订制和使用&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;个人开发者的「手边云」&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 让开发者随手写的一段代码，瞬间具备随手上云的能力&lt;/li&gt; &#xA;   &lt;li&gt;就像在你手机的备忘录随手敲下一段文字，自动同步到云端，且可被全网访问和执行&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 是每个开发者的“烂笔头”，像记事一样写个函数&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;laf&lt;/code&gt; 是每个开发者的“私人助理”，比如随时可以写一个定时发送短信、邮件通知的函数&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其它&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;有用户把 &lt;code&gt;laf&lt;/code&gt; 云存储当网盘使用&lt;/li&gt; &#xA;   &lt;li&gt;有用户把 &lt;code&gt;laf&lt;/code&gt; 应用当成一个日志服务器，收集客户端日志数据，使用云函数做分析统计&lt;/li&gt; &#xA;   &lt;li&gt;有用户用 &lt;code&gt;laf&lt;/code&gt; 来跑爬虫，抓取三方新闻和咨讯等内容&lt;/li&gt; &#xA;   &lt;li&gt;有用户使用 &lt;code&gt;laf&lt;/code&gt; 云函数做 webhook，监听 Git 仓库提交消息，推送到钉钉、企业微信群&lt;/li&gt; &#xA;   &lt;li&gt;有用户使用 &lt;code&gt;laf&lt;/code&gt; 云函数做拨测，定时检查线上服务的健康状态&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;未来，&lt;code&gt;lafyun.com&lt;/code&gt; 会上线一个应用市场，汇总收集这些应用，让 &lt;code&gt;laf&lt;/code&gt; 用户一键即可使用海量应用!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🖥 在线体验&lt;/h2&gt; &#xA;&lt;p&gt;🎉 &lt;a href=&#34;http://www.lafyun.com&#34;&gt;lafyun.com&lt;/a&gt; 是 &lt;code&gt;laf&lt;/code&gt; 的一个在线版，可在线免费体验 &lt;code&gt;laf&lt;/code&gt; 云开发应用服务！&lt;/p&gt; &#xA;&lt;p&gt;开发者可免费在 &lt;a href=&#34;http://www.lafyun.com&#34;&gt;lafyun.com&lt;/a&gt; 上快速创建自己的应用，免除服务器部署和运维工作，立即拥有应用独立域名及 HTTPS 证书，快速上线应用！&lt;/p&gt; &#xA;&lt;h2&gt;🚀 快速开始&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/labring/laf/main/quick-start.md&#34;&gt;三分钟体验使用 laf 开发一个简单的登陆注册功能&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎉 本地部署&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/labring/laf/main/deploy/README.md&#34;&gt;本地部署&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏘️ 社群&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oss.lafyun.com/wofnib-image/2022-04-22-14-21-MRJH9o.png&#34;&gt;微信群&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=DdRCCiuz&#34;&gt;QQ 群：603059673&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🌟 Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#labring/laf&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=labring/laf&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>