<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-11T01:38:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>medplum/medplum</title>
    <updated>2022-11-11T01:38:49Z</updated>
    <id>tag:github.com,2022-11-11:/medplum/medplum</id>
    <link href="https://github.com/medplum/medplum" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Medplum is a healthcare platform that helps you quickly develop high-quality compliant applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.medplum.com&#34;&gt;Medplum&lt;/a&gt; · &lt;a href=&#34;https://github.com/medplum/medplum/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@medplum/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@medplum/core.svg?color=blue&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=medplum_medplum&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=medplum_medplum&amp;amp;metric=alert_status&amp;amp;token=207c95a43e7519809d6d336d8cc7837d3e057acf&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/medplum/medplum?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/medplum/medplum/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://openbase.com/js/@medplum/core?utm_source=embedded&amp;amp;utm_medium=badge&amp;amp;utm_campaign=rate-badge&#34;&gt;&lt;img src=&#34;https://badges.openbase.com/js/featured/@medplum/core.svg?token=UnCQpn8imdOYaqKQa6AI2km3rXx5shpt6bKIoGj3KMk=&#34; alt=&#34;Featured on Openbase&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Medplum is a developer platform that enables flexible and rapid development of healthcare apps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum Auth&lt;/strong&gt; - End-to-end identity solution for easy user authentication, sign-in, and permissions using OAuth, OpenID, and SMART-on-FHIR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum Clinical Data Repository (CDR)&lt;/strong&gt; - Backend server that hosts your healthcare data in a secure, compliant, and standards based repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum API&lt;/strong&gt; - FHIR-based API for sending, receiving, and manipulating data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum SDK&lt;/strong&gt; - Client libraries that simplify the process of interacting with the &lt;strong&gt;Medplum API&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum App&lt;/strong&gt; - Web application where you can view your data, perform basic editing tasks. You can also use the Medplum App to manage basic workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medplum Bots&lt;/strong&gt; - Write and run application logic server-side without needing to set up your own server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI Component Library&lt;/strong&gt; - React components designed to help you quickly develop custom healthcare applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#ground-rules&#34;&gt;Ground Rules&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#codebase&#34;&gt;Codebase&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#technologies&#34;&gt;Technologies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#folder-structure&#34;&gt;Folder Structure&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#code-style&#34;&gt;Code Style&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#first-time-setup&#34;&gt;First time setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;We heartily welcome any and all contributions that match our engineering standards!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;That being said, this codebase isn&#39;t your typical open source project because it&#39;s not a library or package with a limited scope -- it&#39;s our entire product.&lt;/p&gt; &#xA;&lt;h3&gt;Ground Rules&lt;/h3&gt; &#xA;&lt;h4&gt;Contributions and discussion guidelines&lt;/h4&gt; &#xA;&lt;p&gt;By making a contribution to this project, you are deemed to have accepted the &lt;a href=&#34;https://developercertificate.org/&#34;&gt;Developer Certificate of Origin&lt;/a&gt; (DCO).&lt;/p&gt; &#xA;&lt;p&gt;All conversations and communities on Medplum agree to GitHub&#39;s &lt;a href=&#34;https://help.github.com/en/github/site-policy/github-community-guidelines&#34;&gt;Community Guidelines&lt;/a&gt; and &lt;a href=&#34;https://help.github.com/en/github/site-policy/github-acceptable-use-policies&#34;&gt;Acceptable Use Policies&lt;/a&gt;. This code of conduct also applies to all conversations that happen within our contributor community here on GitHub. We expect discussions in issues and pull requests to stay positive, productive, and respectful. Remember: there are real people on the other side of that screen!&lt;/p&gt; &#xA;&lt;h4&gt;Reporting a bug or discussing a feature idea&lt;/h4&gt; &#xA;&lt;p&gt;If you found a technical bug on Medplum or have ideas for features we should implement, the issue tracker is the best place to share your ideas. Make sure to follow the issue template and you should be golden! (&lt;a href=&#34;https://github.com/medplum/medplum/issues/new&#34;&gt;click here to open a new issue&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h4&gt;Fixing a bug or implementing a new feature&lt;/h4&gt; &#xA;&lt;p&gt;If you find a bug on Medplum and open a PR that fixes it we&#39;ll review it as soon as possible to ensure it matches our engineering standards.&lt;/p&gt; &#xA;&lt;p&gt;If you want to implement a new feature, open an issue first to discuss what it&#39;d look like and to ensure it fits in our roadmap and plans for the app.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute but are unsure to start, we have &lt;a href=&#34;https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;a &#34;good first issue&#34; label&lt;/a&gt; which is applied to newcomer-friendly issues. Take a look at &lt;a href=&#34;https://github.com/medplum/medplum/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;the full list of good first issues&lt;/a&gt; and pick something you like!&lt;/p&gt; &#xA;&lt;p&gt;Want to fix a bug or implement an agreed-upon feature? Great, jump to the &lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/#first-time-setup&#34;&gt;local setup instructions&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;Codebase&lt;/h3&gt; &#xA;&lt;h4&gt;Technologies&lt;/h4&gt; &#xA;&lt;p&gt;With the ground rules out of the way, let&#39;s talk about the coarse architecture of this mono repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full-stack TypeScript&lt;/strong&gt;: We use Node.js to power our servers, and React to power our frontend apps. Almost all of the code you&#39;ll touch in this codebase will be TypeScript.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is a list of all the big technologies we use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;: Data storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;: Background jobs and caching&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Express&lt;/strong&gt;: API server&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: Type-safe JavaScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: Frontend React app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Folder structure&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;medplum/&#xA;├── packages&#xA;│&amp;nbsp;&amp;nbsp; ├── app          # Frontend web app&#xA;│&amp;nbsp;&amp;nbsp; ├── bot-layer    # AWS Lambda Layer for Bots&#xA;│&amp;nbsp;&amp;nbsp; ├── cli          # Command line interface&#xA;│&amp;nbsp;&amp;nbsp; ├── core         # Core shared library&#xA;│&amp;nbsp;&amp;nbsp; ├── definitions  # Data definitions&#xA;│&amp;nbsp;&amp;nbsp; ├── docs         # Documentation&#xA;│&amp;nbsp;&amp;nbsp; ├── examples     # Example code used in documentation&#xA;│&amp;nbsp;&amp;nbsp; ├── fhirtypes    # FHIR TypeScript definitions&#xA;│&amp;nbsp;&amp;nbsp; ├── generator    # Code generator utilities&#xA;│&amp;nbsp;&amp;nbsp; ├── graphiql     # Preconfigured GraphiQL&#xA;│&amp;nbsp;&amp;nbsp; ├── infra        # Infra as code&#xA;│&amp;nbsp;&amp;nbsp; ├── mock         # Mock FHIR data for testing&#xA;│&amp;nbsp;&amp;nbsp; ├── react        # React component library&#xA;│&amp;nbsp;&amp;nbsp; └── server       # Backend API server&#xA;└── scripts          # Helper bash scripts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;First time setup&lt;/h3&gt; &#xA;&lt;p&gt;See developer setup documentation: &lt;a href=&#34;https://www.medplum.com/docs/contributing&#34;&gt;https://www.medplum.com/docs/contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medplum/medplum/main/LICENSE.txt&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright © Medplum 2022&lt;/p&gt; &#xA;&lt;p&gt;FHIR ® is a registered trademark of HL7.&lt;/p&gt; &#xA;&lt;p&gt;SNOMED ® is a registered trademark of the International Health Terminology Standards Development Organisation.&lt;/p&gt; &#xA;&lt;p&gt;DICOM ® is the registered trademark of the National Electrical Manufacturers Association (NEMA).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ant-design/pro-components</title>
    <updated>2022-11-11T01:38:49Z</updated>
    <id>tag:github.com,2022-11-11:/ant-design/pro-components</id>
    <link href="https://github.com/ant-design/pro-components" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏆 Use Ant Design like a Pro!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/ant-design/pro-components/master/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ant-design/pro-components/master/README.es-PR.md&#34;&gt;Español&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ProComponents&lt;/h1&gt; &#xA;&lt;p&gt;The Pro Series components are placed here to support heavy-duty components.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ant-design/pro-components/workflows/coverage%20CI/badge.svg?sanitize=true&#34; alt=&#34;coverage CI&#34;&gt; &lt;img src=&#34;https://github.com/ant-design/pro-components/workflows/Node%20CI/badge.svg?sanitize=true&#34; alt=&#34;Node CI&#34;&gt; &lt;img src=&#34;https://github.com/ant-design/pro-components/workflows/Deploy%20CI/badge.svg?sanitize=true&#34; alt=&#34;Deploy CI&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/ant-design/pro-components&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ant-design/pro-components/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://d.umijs.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs%20by-dumi-blue&#34; alt=&#34; docs by dumi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/umijs/father/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build%20with-father-028fe4.svg?sanitize=true&#34; alt=&#34;Build With father&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ant.design&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/Ant%20Design?icon=https://gw.alipayobjects.com/zos/antfincdn/Pp4WPgVDB3/KDpgvguMpGfqaHPjicRK.svg&amp;amp;label&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lerna.js.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&#34; alt=&#34;lerna&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🖥 Browser compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern browsers and Internet Explorer 11 (with &lt;a href=&#34;https://stackoverflow.com/questions/57020976/polyfills-in-2019-for-ie11&#34;&gt;polyfills&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png&#34; alt=&#34;edge&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png&#34; alt=&#34;Edge&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png&#34; alt=&#34;chrome&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png&#34; alt=&#34;safari&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png&#34; alt=&#34;electron_48x48&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge&lt;/td&gt; &#xA;   &lt;td&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td&gt;last 2 versions&lt;/td&gt; &#xA;   &lt;td&gt;last 2 versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any type of contribution is welcome, here are some examples of how you may contribute to this project 😃 ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Ant Design Pro, umi, and ProComponents in your daily work.&lt;/li&gt; &#xA; &lt;li&gt;Submit &lt;a href=&#34;https://github.com/ant-design/pro-components/issues&#34;&gt;issues&lt;/a&gt; to report bugs or ask questions.&lt;/li&gt; &#xA; &lt;li&gt;Propose &lt;a href=&#34;https://github.com/ant-design/pro-components/pulls&#34;&gt;pull requests&lt;/a&gt; to improve our code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Component Kanban&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Components&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;   &lt;th&gt;Downloads a version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pro-components&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@ant-design/pro-components&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/@ant-design/pro-components.svg?sanitize=true&#34; alt=&#34;components&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@ant-design/pro-components&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@ant-design/pro-components.svg?style=flat-square?style=flat-square&#34; alt=&#34;npm package&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/model-viewer</title>
    <updated>2022-11-11T01:38:49Z</updated>
    <id>tag:github.com,2022-11-11:/google/model-viewer</id>
    <link href="https://github.com/google/model-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily display interactive 3D models on the web and in AR!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; project&lt;/h1&gt; &#xA;&lt;p&gt;This is the main Github repository for the &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; web component and all of its related projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Getting started?&lt;/strong&gt; Check out the &lt;a href=&#34;https://raw.githubusercontent.com/google/model-viewer/master/packages/model-viewer&#34;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;&lt;/a&gt; project!&lt;/p&gt; &#xA;&lt;p&gt;The repository is organized into sub-directories containing the various projects. Check out the README.md files for specific projects to get more details:&lt;/p&gt; &#xA;&lt;p&gt;👩‍🚀 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/model-viewer/master/packages/model-viewer&#34;&gt;&lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; • The &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; web component (probably what you are looking for)&lt;/p&gt; &#xA;&lt;p&gt;🌐 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/model-viewer/master/packages/modelviewer.dev&#34;&gt;modelviewer.dev&lt;/a&gt;&lt;/strong&gt; • The source for the &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; documentation website&lt;/p&gt; &#xA;&lt;p&gt;🖼 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/model-viewer/master/packages/render-fidelity-tools&#34;&gt;render-fidelity-tools&lt;/a&gt;&lt;/strong&gt; • Tools for testing how well &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; renders models&lt;/p&gt; &#xA;&lt;p&gt;🎨 &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/model-viewer/master/packages/shared-assets&#34;&gt;shared-assets&lt;/a&gt;&lt;/strong&gt; • 3D models, environment maps and other assets shared across many sub-projects&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;When developing across all the projects in this repository, first install git, Node.js and npm.&lt;/p&gt; &#xA;&lt;p&gt;Then, perform the following steps to get set up for development:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 git@github.com:google/model-viewer.git&#xA;cd model-viewer&#xA;npm install&#xA;npm run bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: depth=1 keeps you from downloading our ~3Gb of history, which is dominated by all the versions of our golden render fidelity images.&lt;/p&gt; &#xA;&lt;p&gt;The following global commands are available:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run bootstrap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bootstraps the project for development and cross-links sub-projects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs the build step for all sub-projects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run serve&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs a web server and opens a new browser tab pointed to the local copy of modelviewer.dev (don&#39;t forget to build!)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run test&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Runs tests in all sub-projects that have them&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;npm run clean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Removes built artifacts from all sub-projects&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You should now be ready to work on any of the &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; projects!&lt;/p&gt; &#xA;&lt;h2&gt;Windows 10/11 Setup&lt;/h2&gt; &#xA;&lt;p&gt;Due to dependency issues on Windows 10 we recommend running &lt;code&gt;&amp;lt;model-viewer&amp;gt;&lt;/code&gt; setup from a WSL2 environment.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;WSL2 Install walkthrough&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And installing Node.js &amp;amp; npm via NVM&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2&#34;&gt;Node.js/NVM install walkthrough&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should clone model-viewer from &lt;em&gt;inside&lt;/em&gt; WSL, not from inside Windows. Otherwise, you might run into line endings and symlink issues.&lt;br&gt; To clone via HTTPS in WSL (there are known file permissions issues with SSH keys inside WSL):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/google/model-viewer.git&#xA;cd model-viewer&#xA;npm install&#xA;npm run bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests in WSL, you need to bind &lt;code&gt;CHROME_BIN&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export CHROME_BIN=&#34;/mnt/c/Program Files/Google/Chrome/Application/chrome.exe&#34;&#xA;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that you should be able to run the &lt;code&gt;packages/model-viewer&lt;/code&gt; tests with that setup, but running fidelity tests requires GUI support which is only available in WSL on Windows 11.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Additional WSL Troubleshooting – provided for reference only&lt;/summary&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;These issues should not happen when you have followed the above WSL setup steps (clone via HTTPS, clone from inside WSL, bind CHROME_BIN). The notes here might be helpful if you&#39;re trying to develop model-viewer from inside Windows (not WSL) instead (not recommended).&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Running Tests&lt;/h3&gt; &#xA; &lt;p&gt;Running &lt;code&gt;npm run test&lt;/code&gt; requires an environment variable on WSL that points to &lt;code&gt;CHROME_BIN&lt;/code&gt;. You can set that via this command (this is the default Chrome install directory, might be somewhere else on your machine)&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;export CHROME_BIN=&#34;/mnt/c/Program Files/Google/Chrome/Application/chrome.exe&#34;&#xA;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Tests in &lt;code&gt;packages/model-viewer&lt;/code&gt; should now run properly; fidelity tests might still fail (see errors and potential workarounds below).&lt;/p&gt; &#xA; &lt;h3&gt;Error: &lt;code&gt;/bin/bash^M: bad interpreter: No such file or directory&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Symptom&lt;/strong&gt; Running a .sh script, for example &lt;code&gt;fetch-khronos-gltf-samples.sh&lt;/code&gt;, throws an error message &lt;code&gt;/bin/bash^M: bad interpreter: No such file or directory&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Alternative error:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;! was unexpected at this time.&#xA;npm ERR! code ELIFECYCLE&#xA;npm ERR! errno 1&#xA;npm ERR! @google/model-viewer@1.10.1 prepare: `if [ ! -L &#39;./shared-assets&#39; ]; then ln -s ../shared-assets ./shared-assets; fi &amp;amp;&amp;amp; ../shared-assets/scripts/fetch-khronos-gltf-samples.sh`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt; This is caused by incorrect line endings in some of the .sh files due to git changing these on checkout on Windows (not inside WSL). It&#39;s recommended to clone the model-viewer repository from a WSL session.&lt;/p&gt; &#xA; &lt;p&gt;As a workaround, you can re-write line endings using the following command:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;sed -i -e &#39;s/\r$//&#39; ../shared-assets/scripts/fetch-khronos-gltf-samples.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Error: &lt;code&gt;ERROR:browser_main_loop.cc(1409)] Unable to open X display.&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Symptom&lt;/strong&gt; When trying to &lt;code&gt;npm run test&lt;/code&gt;, errors are logged similar to:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;❌Fail to analyze scenario :khronos-IridescentDishWithOlives! Error message: ❌ Failed to capture model-viewer&#39;s screenshot&#xA;[836:836:0301/095227.204808:ERROR:browser_main_loop.cc(1409)] Unable to open X display.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Pupeteer tests need a display output; this means GUI support for WSL is required which seems to only be (easily) available on Windows 11, not Windows 10.&lt;br&gt; &lt;a href=&#34;https://docs.microsoft.com/de-de/windows/wsl/tutorials/gui-apps#install-support-for-linux-gui-apps&#34;&gt;https://docs.microsoft.com/de-de/windows/wsl/tutorials/gui-apps#install-support-for-linux-gui-apps&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;So, the workaround seems to be running Windows 11 (but not tested yet).&lt;/p&gt; &#xA; &lt;h3&gt;Error: &lt;code&gt;ERROR: Task not found: &#34;&#39;watch:tsc&#34;&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;strong&gt;Symptom&lt;/strong&gt; Running &lt;code&gt;npm run dev&lt;/code&gt; in &lt;code&gt;packages/model-viewer&lt;/code&gt; on Windows throws error &lt;code&gt;ERROR: Task not found: &#34;&#39;watch:tsc&#34;&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt; (if you have one please make a PR!)&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>