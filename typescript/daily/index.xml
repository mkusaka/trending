<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-25T01:35:20Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zaidmukaddam/scira</title>
    <updated>2025-01-25T01:35:20Z</updated>
    <id>tag:github.com,2025-01-25:/zaidmukaddam/scira</id>
    <link href="https://github.com/zaidmukaddam/scira" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scira (Formerly MiniPerplx) is a minimalistic AI-powered search engine that helps you find information on the internet. Powered by Vercel AI SDK! Search with models like Grok 2.0.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scira&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zaidmukaddam/scira/main/app/opengraph-image.png&#34; alt=&#34;Scira&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A minimalistic AI-powered search engine that helps you find information on the internet.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/2bda420d-4211-4900-a37e-e3c7056d799c&#34; alt=&#34;Warp&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA; &lt;h3&gt;&lt;strong&gt;&lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira&#34;&gt;Warp, the intelligent terminal&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira&#34;&gt;Available for MacOS and Linux&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=scira&#34;&gt;Visit warp.dev to learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-powered search&lt;/strong&gt;: Get answers to your questions using Anthropic&#39;s Models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web search&lt;/strong&gt;: Search the web using Tavily&#39;s API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;URL Specific search&lt;/strong&gt;: Get information from a specific URL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weather&lt;/strong&gt;: Get the current weather for any location using OpenWeather&#39;s API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Programming&lt;/strong&gt;: Run code snippets in multiple languages using E2B&#39;s API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Maps&lt;/strong&gt;: Get the location of any place using Google Maps API, Mapbox API, and TripAdvisor API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;YouTube Search&lt;/strong&gt;: Search for videos on YouTube and get timestamps and transcripts &lt;a href=&#34;https://exa.ai/&#34;&gt;powered by Exa.AI - the Web Search API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Academic Search&lt;/strong&gt;: Search for academic papers &lt;a href=&#34;https://exa.ai/&#34;&gt;powered by Exa.AI - the Web Search API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;X Posts Search&lt;/strong&gt;: Search for posts on X.com &lt;a href=&#34;https://exa.ai/&#34;&gt;powered by Exa.AI - the Web Search API&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flight Tracker&lt;/strong&gt;: Track flights using AviationStack&#39;s API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trending Movies and TV Shows&lt;/strong&gt;: Get information about trending movies and TV shows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Movie or TV Show Search&lt;/strong&gt;: Get information about any movie or TV show.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LLM used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.ai/grok&#34;&gt;xAI&#39;s Grok&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Built with&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sdk.vercel.ai/docs&#34;&gt;Vercel AI SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;Shadcn/UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://exa.ai/&#34;&gt;Exa.AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tavily.com/&#34;&gt;Tavily&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openweathermap.org/&#34;&gt;OpenWeather&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://e2b.dev/&#34;&gt;E2B&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/maps&#34;&gt;Google Maps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mapbox.com/&#34;&gt;Mapbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tripadvisor.com/&#34;&gt;TripAdvisor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aviationstack.com/&#34;&gt;AviationStack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Deploy your own&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fzaidmukaddam%2Fscira&amp;amp;env=XAI_API_KEY,UPSTASH_REDIS_REST_URL,UPSTASH_REDIS_REST_TOKEN,AVIATION_STACK_API_KEY,SANDBOX_TEMPLATE_ID,TMDB_API_KEY,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,YT_ENDPOINT,EXA_API_KEY,TRIPADVISOR_API_KEY,BLOB_READ_WRITE_TOKEN,MAPBOX_ACCESS_TOKEN,NEXT_PUBLIC_MAPBOX_TOKEN,FIRECRAWL_API_KEY,TAVILY_API_KEY,OPENWEATHER_API_KEY,E2B_API_KEY,GOOGLE_MAPS_API_KEY,NEXT_PUBLIC_GOOGLE_MAPS_API_KEY&amp;amp;envDescription=All%20environment%20variables%20needed%20for%20application&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Set Scira as your default search engine&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open the Chrome browser settings&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on the three vertical dots in the upper right corner of the browser.&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;Settings&#34; from the dropdown menu.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go to the search engine settings&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In the left sidebar, click on &#34;Search engine.&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Then select &#34;Manage search engines and site search.&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add a new search engine&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on &#34;Add&#34; next to &#34;Site search.&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine name&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enter &lt;code&gt;Scira&lt;/code&gt; in the &#34;Search engine&#34; field.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine URL&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enter &lt;code&gt;https://scira.how?q=%s&lt;/code&gt; in the &#34;URL with %s in place of query&#34; field.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set the search engine shortcut&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enter &lt;code&gt;sh&lt;/code&gt; in the &#34;Shortcut&#34; field.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set Default&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on the three dots next to the search engine you just added.&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;Make default&#34; from the dropdown menu.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After completing these steps, you should be able to use Scira as your default search engine in Chrome.&lt;/p&gt; &#xA;&lt;h3&gt;Local development&lt;/h3&gt; &#xA;&lt;p&gt;To run the example locally you need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sign up for accounts with the AI providers you want to use. OpenAI and Anthropic are required, Tavily is required for the web search feature.&lt;/li&gt; &#xA; &lt;li&gt;Obtain API keys for each provider.&lt;/li&gt; &#xA; &lt;li&gt;Set the required environment variables as shown in the &lt;code&gt;.env.example&lt;/code&gt; file, but in a new file called &lt;code&gt;.env.local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pnpm install&lt;/code&gt; to install the required dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pnpm dev&lt;/code&gt; to launch the development server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/zaidmukaddam/scira/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nextjs/saas-starter</title>
    <updated>2025-01-25T01:35:20Z</updated>
    <id>tag:github.com,2025-01-25:/nextjs/saas-starter</id>
    <link href="https://github.com/nextjs/saas-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get started quickly with Next.js, Postgres, Stripe, and shadcn/ui.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js SaaS Starter&lt;/h1&gt; &#xA;&lt;p&gt;This is a starter template for building a SaaS application using &lt;strong&gt;Next.js&lt;/strong&gt; with support for authentication, Stripe integration for payments, and a dashboard for logged-in users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Demo: &lt;a href=&#34;https://next-saas-start.vercel.app/&#34;&gt;https://next-saas-start.vercel.app/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Marketing landing page (&lt;code&gt;/&lt;/code&gt;) with animated Terminal element&lt;/li&gt; &#xA; &lt;li&gt;Pricing page (&lt;code&gt;/pricing&lt;/code&gt;) which connects to Stripe Checkout&lt;/li&gt; &#xA; &lt;li&gt;Dashboard pages with CRUD operations on users/teams&lt;/li&gt; &#xA; &lt;li&gt;Basic RBAC with Owner and Member roles&lt;/li&gt; &#xA; &lt;li&gt;Subscription management with Stripe Customer Portal&lt;/li&gt; &#xA; &lt;li&gt;Email/password authentication with JWTs stored to cookies&lt;/li&gt; &#xA; &lt;li&gt;Global middleware to protect logged-in routes&lt;/li&gt; &#xA; &lt;li&gt;Local middleware to protect Server Actions or validate Zod schemas&lt;/li&gt; &#xA; &lt;li&gt;Activity logging system for any user events&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ORM&lt;/strong&gt;: &lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt;: &lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI Library&lt;/strong&gt;: &lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;shadcn/ui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/nextjs/saas-starter&#xA;cd saas-starter&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;Use the included setup script to create your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the database migrations and seed the database with a default user and team:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:migrate&#xA;pnpm db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create the following user and team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User: &lt;code&gt;test@test.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: &lt;code&gt;admin123&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can, of course, create new users as well through &lt;code&gt;/sign-up&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run the Next.js development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser to see the app in action.&lt;/p&gt; &#xA;&lt;p&gt;Optionally, you can listen for Stripe webhooks locally through their CLI to handle subscription change events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stripe listen --forward-to localhost:3000/api/stripe/webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing Payments&lt;/h2&gt; &#xA;&lt;p&gt;To test Stripe payments, use the following test card details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Card Number: &lt;code&gt;4242 4242 4242 4242&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expiration: Any future date&lt;/li&gt; &#xA; &lt;li&gt;CVC: Any 3-digit number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Going to Production&lt;/h2&gt; &#xA;&lt;p&gt;When you&#39;re ready to deploy your SaaS application to production, follow these steps:&lt;/p&gt; &#xA;&lt;h3&gt;Set up a production Stripe webhook&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the Stripe Dashboard and create a new webhook for your production environment.&lt;/li&gt; &#xA; &lt;li&gt;Set the endpoint URL to your production API route (e.g., &lt;code&gt;https://yourdomain.com/api/stripe/webhook&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Select the events you want to listen for (e.g., &lt;code&gt;checkout.session.completed&lt;/code&gt;, &lt;code&gt;customer.subscription.updated&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deploy to Vercel&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Push your code to a GitHub repository.&lt;/li&gt; &#xA; &lt;li&gt;Connect your repository to &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; and deploy it.&lt;/li&gt; &#xA; &lt;li&gt;Follow the Vercel deployment process, which will guide you through setting up your project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Add environment variables&lt;/h3&gt; &#xA;&lt;p&gt;In your Vercel project settings (or during deployment), add all the necessary environment variables. Make sure to update the values for the production environment, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;BASE_URL&lt;/code&gt;: Set this to your production domain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_SECRET_KEY&lt;/code&gt;: Use your Stripe secret key for the production environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt;: Use the webhook secret from the production webhook you created in step 1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_URL&lt;/code&gt;: Set this to your production database URL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTH_SECRET&lt;/code&gt;: Set this to a random string. &lt;code&gt;openssl rand -base64 32&lt;/code&gt; will generate one.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Other Templates&lt;/h2&gt; &#xA;&lt;p&gt;While this template is intentionally minimal and to be used as a learning resource, there are other paid versions in the community which are more full-featured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://achromatic.dev&#34;&gt;https://achromatic.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shipfa.st&#34;&gt;https://shipfa.st&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://makerkit.dev&#34;&gt;https://makerkit.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>satnaing/shadcn-admin</title>
    <updated>2025-01-25T01:35:20Z</updated>
    <id>tag:github.com,2025-01-25:/satnaing/shadcn-admin</id>
    <link href="https://github.com/satnaing/shadcn-admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Admin Dashboard UI built with Shadcn and Vite.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shadcn Admin Dashboard&lt;/h1&gt; &#xA;&lt;p&gt;Admin Dashboard UI crafted with Shadcn and Vite. Built with responsiveness and accessibility in mind.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/satnaing/shadcn-admin/main/public/images/shadcn-admin.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve been creating dashboard UIs at work and for my personal projects. I always wanted to make a reusable collection of dashboard UI for future projects; and here it is now. While I&#39;ve created a few custom components, some of the code is directly adapted from ShadcnUI examples.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is not a starter project (template) though. I&#39;ll probably make one in the future.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Light/dark mode&lt;/li&gt; &#xA; &lt;li&gt;Responsive&lt;/li&gt; &#xA; &lt;li&gt;Accessible&lt;/li&gt; &#xA; &lt;li&gt;With built-in Sidebar component&lt;/li&gt; &#xA; &lt;li&gt;Global Search Command&lt;/li&gt; &#xA; &lt;li&gt;10+ pages&lt;/li&gt; &#xA; &lt;li&gt;Extra custom components&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;UI:&lt;/strong&gt; &lt;a href=&#34;https://ui.shadcn.com&#34;&gt;ShadcnUI&lt;/a&gt; (TailwindCSS + RadixUI)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build Tool:&lt;/strong&gt; &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Routing:&lt;/strong&gt; &lt;a href=&#34;https://tanstack.com/router/latest&#34;&gt;TanStack Router&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Type Checking:&lt;/strong&gt; &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linting/Formatting:&lt;/strong&gt; &lt;a href=&#34;https://eslint.org/&#34;&gt;Eslint&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Icons:&lt;/strong&gt; &lt;a href=&#34;https://tabler.io/icons&#34;&gt;Tabler Icons&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Locally&lt;/h2&gt; &#xA;&lt;p&gt;Clone the project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  git clone https://github.com/satnaing/shadcn-admin.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the project directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  cd shadcn-admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Crafted with 🤍 by &lt;a href=&#34;https://github.com/satnaing&#34;&gt;@satnaing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>