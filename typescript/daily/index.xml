<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-09T01:38:00Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RhysSullivan/shiptalkers</title>
    <updated>2024-06-09T01:38:00Z</updated>
    <id>tag:github.com,2024-06-09:/RhysSullivan/shiptalkers</id>
    <link href="https://github.com/RhysSullivan/shiptalkers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TODO:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;after comparing, give them a special name i.e &#34;Indie Hacker, Reply Guy, etc&#34;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Special name ideas:&lt;/li&gt; &#xA;   &lt;li&gt;`` - 5:0 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Grinder&lt;/code&gt; - 3:1 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;`` - 2:1 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Perfectly Balanced&lt;/code&gt; - 1:1 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Shiposter&lt;/code&gt; - 1:2 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Indie Hacker&lt;/code&gt; - 1:3 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Reply Guy&lt;/code&gt; - 1:4 commits to tweets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Influencer&lt;/code&gt; - 1:5 commits to tweets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;while streaming the heatmap calendar, pop in their most commits in a day or biggest tweet&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;after comparing, show people with similar ratios&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;have a leaderboard, sorted from most to least commit ratios&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;for holidays, callout tweeting, coding, or living&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/hieuSSR/status/1751678016428888565&#34;&gt;https://twitter.com/hieuSSR/status/1751678016428888565&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>discord/discord-api-docs</title>
    <updated>2024-06-09T01:38:00Z</updated>
    <id>tag:github.com,2024-06-09:/discord/discord-api-docs</id>
    <link href="https://github.com/discord/discord-api-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Discord API Documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Discord API Documentation&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains the official Discord API documentation, which can be viewed online &lt;a href=&#34;https://discord.com/developers/docs/intro&#34;&gt;HERE&lt;/a&gt;. Before submitting pull-requests, please remember to &lt;em&gt;fully&lt;/em&gt; read the &lt;a href=&#34;https://raw.githubusercontent.com/discord/discord-api-docs/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guidelines.&lt;/p&gt; &#xA;&lt;p&gt;This repository reflects the Discord API as it is meant to be accessed by third-party applications. It omits features and capabilities that are not generally available, or are not fully supported for third-party usage.&lt;/p&gt; &#xA;&lt;p&gt;We welcome your contributions!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issue tracker: Discord API bugs&lt;/li&gt; &#xA; &lt;li&gt;Discussions: Discord API feature and improvement requests&lt;/li&gt; &#xA; &lt;li&gt;Pull Requests: See &lt;a href=&#34;https://github.com/discord/discord-api-docs/raw/main/CONTRIBUTING.md&#34;&gt;Contributing.md&lt;/a&gt; for types of changes accepted and specific markdown syntax used in the documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need some help?&lt;/h2&gt; &#xA;&lt;p&gt;Here are some Discord servers that can help you out with everything Discord API:&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://discord.gg/discord-developers&#34;&gt;Official Discord Developers server&lt;/a&gt; has plenty of help channels with knowledgeable people and Discord&#39;s developers to get you help with something you need, and get updates straight from the developers. However do keep in mind this is a purely on-topic server. If you are looking for a community, join the server below.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://discord.gg/discord-api&#34;&gt;Unofficial Discord API server&lt;/a&gt; is a common hangout for library and bot developers alike. It&#39;s a great starting point for those looking to dive in and learn bot-creation with the Discord API.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Except as otherwise noted, the Discord API Documentation and other content in this repository is licensed under the Creative Commons Attribution-ShareAlike 4.0 License (see &lt;a href=&#34;https://github.com/discord/discord-api-docs/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;), and code samples in this repository are licensed under the MIT License (see &lt;a href=&#34;https://github.com/discord/discord-api-docs/raw/main/LICENSE-CODE&#34;&gt;LICENSE-CODE&lt;/a&gt;). These licenses do not grant you rights to use any of Discord’s trademarks or other brand features. Please see the &lt;a href=&#34;https://discord.com/developers/docs/policies-and-agreements/developer-terms-of-service&#34;&gt;Discord Developer Terms of Service&lt;/a&gt; for more information about use of Discord’s brand features and APIs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>felixmosh/bull-board</title>
    <updated>2024-06-09T01:38:00Z</updated>
    <id>tag:github.com,2024-06-09:/felixmosh/bull-board</id>
    <link href="https://github.com/felixmosh/bull-board" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎯 Queue background jobs inspector&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img alt=&#34;@bull-board&#34; src=&#34;https://raw.githubusercontent.com/felixmosh/bull-board/master/packages/ui/src/static/images/logo.svg?sanitize=true&#34; width=&#34;35px&#34;&gt; @bull-board&lt;/h1&gt; &#xA;&lt;p&gt;Bull Dashboard is a UI built on top of &lt;a href=&#34;https://github.com/OptimalBits/bull&#34;&gt;Bull&lt;/a&gt; or &lt;a href=&#34;https://github.com/taskforcesh/bullmq&#34;&gt;BullMQ&lt;/a&gt; to help you visualize your queues and their jobs. With this library you get a beautiful UI for visualizing what&#39;s happening with each job in your queues, their status and some actions that will enable you to get the job done.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/org/bull-board&#34;&gt; &lt;img alt=&#34;npm downloads&#34; src=&#34;https://img.shields.io/npm/dw/@bull-board/api&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/felixmosh/bull-board/raw/master/LICENSE&#34;&gt; &lt;img alt=&#34;licence&#34; src=&#34;https://img.shields.io/github/license/felixmosh/bull-board&#34;&gt; &lt;/a&gt; &lt;img alt=&#34;open issues&#34; src=&#34;https://img.shields.io/github/issues/felixmosh/bull-board&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/felixmosh/bull-board/master/screenshots/overview.png&#34; alt=&#34;Overview&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/felixmosh/bull-board/master/screenshots/dashboard.png&#34; alt=&#34;UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/api&#34;&gt;@bull-board/api&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/api&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/ui&#34;&gt;@bull-board/ui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/ui&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/express&#34;&gt;@bull-board/express&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/express&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/fastify&#34;&gt;@bull-board/fastify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/fastify&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/koa&#34;&gt;@bull-board/koa&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/koa&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/hapi&#34;&gt;@bull-board/hapi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/hapi&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/nestjs&#34;&gt;@bull-board/nestjs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/nestjs&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/hono&#34;&gt;@bull-board/hono&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/hono&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@bull-board/h3&#34;&gt;@bull-board/h3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@bull-board/h3&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;As this library provides only the visualization for your queues, keep in mind that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must have either &lt;a href=&#34;https://github.com/OptimalBits/bull&#34;&gt;Bull&lt;/a&gt; or &lt;a href=&#34;https://github.com/taskforcesh/bullmq&#34;&gt;BullMQ&lt;/a&gt; installed in your projects;&lt;/li&gt; &#xA; &lt;li&gt;Aside the options to retry and clean jobs, this library is not responsible for processing the jobs, reporting progress or any other thing. This must be done in your application with your own logic;&lt;/li&gt; &#xA; &lt;li&gt;If you want to understand the possibilities you have with the queues please refer to &lt;a href=&#34;https://optimalbits.github.io/bull/&#34;&gt;Bull&#39;s docs&lt;/a&gt; or &lt;a href=&#34;https://docs.bullmq.io/&#34;&gt;BullMQ&#39;s docs&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;This library doesn&#39;t hijack Bull&#39;s way of working.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to learn more about queues (&lt;a href=&#34;https://github.com/OptimalBits/bull&#34;&gt;Bull&lt;/a&gt; or &lt;a href=&#34;https://github.com/taskforcesh/bullmq&#34;&gt;BullMQ&lt;/a&gt;) and &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Starting&lt;/h2&gt; &#xA;&lt;p&gt;To add it to your project start by installing a server framework specific adapter to your dependencies list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @bull-board/express&#xA;# or&#xA;yarn add @bull-board/fastify&#xA;# or&#xA;yarn add @bull-board/hapi&#xA;# or&#xA;yarn add @bull-board/koa&#xA;# or&#xA;yarn add @bull-board/nestjs&#xA;# or&#xA;yarn add @bull-board/hono&#xA;# or&#xA;yarn add @bull-board/h3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NestJS specific setup&lt;/h3&gt; &#xA;&lt;p&gt;@bull-board provides a module for easy integration with NestJS, for reference on how to use the module refer to the &lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/packages/nestjs&#34;&gt;NestJS Module&lt;/a&gt; package&lt;/p&gt; &#xA;&lt;h2&gt;Hello World&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const express = require(&#39;express&#39;);&#xA;const Queue = require(&#39;bull&#39;);&#xA;const QueueMQ = require(&#39;bullmq&#39;);&#xA;const { createBullBoard } = require(&#39;@bull-board/api&#39;);&#xA;const { BullAdapter } = require(&#39;@bull-board/api/bullAdapter&#39;);&#xA;const { BullMQAdapter } = require(&#39;@bull-board/api/bullMQAdapter&#39;);&#xA;const { ExpressAdapter } = require(&#39;@bull-board/express&#39;);&#xA;&#xA;const someQueue = new Queue(&#39;someQueueName&#39;, {&#xA;  redis: { port: 6379, host: &#39;127.0.0.1&#39;, password: &#39;foobared&#39; },&#xA;}); // if you have a special connection to redis.&#xA;const someOtherQueue = new Queue(&#39;someOtherQueueName&#39;);&#xA;const queueMQ = new QueueMQ(&#39;queueMQName&#39;);&#xA;&#xA;const serverAdapter = new ExpressAdapter();&#xA;serverAdapter.setBasePath(&#39;/admin/queues&#39;);&#xA;&#xA;const { addQueue, removeQueue, setQueues, replaceQueues } = createBullBoard({&#xA;  queues: [new BullAdapter(someQueue), new BullAdapter(someOtherQueue), new BullMQAdapter(queueMQ)],&#xA;  serverAdapter: serverAdapter,&#xA;});&#xA;&#xA;const app = express();&#xA;&#xA;app.use(&#39;/admin/queues&#39;, serverAdapter.getRouter());&#xA;&#xA;// other configurations of your server&#xA;&#xA;app.listen(3000, () =&amp;gt; {&#xA;  console.log(&#39;Running on 3000...&#39;);&#xA;  console.log(&#39;For the UI, open http://localhost:3000/admin/queues&#39;);&#xA;  console.log(&#39;Make sure Redis is running on port 6379 by default&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it! Now you can access the &lt;code&gt;/admin/queues&lt;/code&gt; route, and you will be able to monitor everything that is happening in your queues 😁&lt;/p&gt; &#xA;&lt;p&gt;For more advanced usages check the &lt;code&gt;examples&lt;/code&gt; folder, currently it contains:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-express-auth&#34;&gt;Basic authentication example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-multiple-instances&#34;&gt;Multiple instance of the board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-fastify&#34;&gt;With Fastify server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-hapi&#34;&gt;With Hapi.js server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-koa&#34;&gt;With Koa.js server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-nestjs-module&#34;&gt;With Nest.js server using the built-in module&lt;/a&gt; (Thanx to @dennissnijder)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-nestjs&#34;&gt;With Nest.js server using the express adapter&lt;/a&gt; (Thanx to @lodi-g)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-hono&#34;&gt;With Hono server&lt;/a&gt; (Thanks to @nihalgonsalves)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixmosh/bull-board/tree/master/examples/with-h3&#34;&gt;With H3 server using the h3 adapter&lt;/a&gt; (Thanx to @genu)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Board options&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;uiConfig.boardTitle&lt;/code&gt; (default: &lt;code&gt;Bull Dashboard&lt;/code&gt;) The Board and page titles&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uiConfig.boardLogo&lt;/code&gt; (default: &lt;code&gt;empty&lt;/code&gt;) &lt;code&gt;{ path: string; width?: number | string; height?: number | string }&lt;/code&gt; An object that allows you to specify a different logo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;uiConfig.miscLinks&lt;/code&gt; (default: &lt;code&gt;empty&lt;/code&gt;) &lt;code&gt;Array&amp;lt; { text: string; url: string }&amp;gt;&lt;/code&gt; An array of misc link that you can add to the dashboard, such as logout link.&lt;/li&gt; &#xA; &lt;li&gt;uiConfig.favIcon (default: &lt;code&gt;{ default: &#39;static/images/logo.svg&#39;, alternative: &#39;static/favicon-32x32.png&#39;, }&lt;/code&gt;) &lt;code&gt;{ default: string; alternative: &#39;string&#39; }&lt;/code&gt; An object that allows you to specify the default and alternative favicons.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const QueueMQ = require(&#39;bullmq&#39;);&#xA;const {createBullBoard} = require(&#39;@bull-board/api&#39;);&#xA;const {BullMQAdapter} = require(&#39;@bull-board/api/bullMQAdapter&#39;);&#xA;&#xA;const queueMQ = new QueueMQ();&#xA;&#xA;createBullBoard({&#xA;  queues: [new BullMQAdapter(queueMQ)],&#xA;  serverAdapter,&#xA;  options: {&#xA;    uiConfig: {&#xA;      boardTitle: &#39;My BOARD&#39;,&#xA;      boardLogo: {&#xA;        path: &#39;https://cdn.my-domain.com/logo.png&#39;,&#xA;        width: &#39;100px&#39;,&#xA;        height: 200,&#xA;      },&#xA;      miscLinks: [{text: &#39;Logout&#39;, url: &#39;/logout&#39;}],&#xA;      favIcon: {&#xA;        default: &#39;static/images/logo.svg&#39;,&#xA;        alternative: &#39;static/favicon-32x32.png&#39;,&#xA;      },&#xA;    },&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Queue options&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;readOnlyMode&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;) Makes the UI as read only, hides all queue &amp;amp; job related actions&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Queue = require(&#39;bull&#39;)&#xA;const QueueMQ = require(&#39;bullmq&#39;)&#xA;const { createBullBoard } = require(&#39;@bull-board/api&#39;)&#xA;const { BullMQAdapter } = require(&#39;@bull-board/api/bullMQAdapter&#39;)&#xA;const { BullAdapter } = require(&#39;@bull-board/api/bullAdapter&#39;)&#xA;&#xA;const someQueue = new Queue()&#xA;const queueMQ = new QueueMQ()&#xA;&#xA;createBullBoard({&#xA;  queues: [&#xA;    new BullAdapter(someQueue, { readOnlyMode: true }), // only this queue will be in read only mode&#xA;    new BullMQAdapter(queueMQ, { readOnlyMode: true }),&#xA;  ]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;allowRetries&lt;/code&gt; (default: &lt;code&gt;true&lt;/code&gt;) When set to &lt;code&gt;false&lt;/code&gt; the UI removes the job retry buttons for a queue. This option will be ignored if &lt;code&gt;readOnlyMode&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const QueueMQ = require(&#39;bullmq&#39;)&#xA;const { createBullBoard } = require(&#39;@bull-board/api&#39;)&#xA;const { BullMQAdapter } = require(&#39;@bull-board/api/bullMQAdapter&#39;)&#xA;const { BullAdapter } = require(&#39;@bull-board/api/bullAdapter&#39;)&#xA;&#xA;const someQueue = new Queue()&#xA;const queueMQ = new QueueMQ()&#xA;&#xA;createBullBoard({&#xA;  queues: [&#xA;    new BullAdapter(someQueue, { allowRetries: false }), // No retry buttons&#xA;    new BullMQAdapter(queueMQ, { allowRetries: true, readOnlyMode: true }), // allowRetries will be ignored in this case in lieu of readOnlyMode&#xA;  ]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;description&lt;/code&gt; (default: &lt;code&gt;empty&lt;/code&gt;) Queue description text.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;prefix&lt;/code&gt; (default: &lt;code&gt;empty&lt;/code&gt;) Job name prefix.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;queueAdapter.setFormatter(field: &#39;data&#39; | &#39;returnValue&#39; | &#39;name&#39;, formatter: (fieldData) =&amp;gt; any)&lt;/code&gt; You can specify a formatter for &lt;code&gt;&#39;data&#39; | &#39;returnValue&#39; | &#39;name&#39;&lt;/code&gt; job&#39;s fields.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const QueueMQ = require(&#39;bullmq&#39;);&#xA;const fastRedact = require(&#39;fast-redact&#39;);&#xA;const { createBullBoard } = require(&#39;@bull-board/api&#39;);&#xA;const { BullMQAdapter } = require(&#39;@bull-board/api/bullMQAdapter&#39;);&#xA;&#xA;const redact = fastRedact({&#xA;  paths: [&#39;headers.cookie&#39;, &#39;password&#39;, &#39;access_token&#39;]&#xA;})&#xA;&#xA;const queueMQ = new QueueMQ()&#xA;const queueAdapter = new BullMQAdapter(queueMQ);&#xA;queueAdapter.setFormatter(&#39;name&#39;, (job) =&amp;gt; `#Queue1 - ${job.name}`);&#xA;queueAdapter.setFormatter(&#39;data&#39;, (data) =&amp;gt; redact(data));&#xA;queueAdapter.setFormatter(&#39;returnValue&#39;, (returnValue) =&amp;gt; redact(returnValue));&#xA;&#xA;createBullBoard({&#xA;  queues: [queueAdapter]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hosting router on a sub path&lt;/h3&gt; &#xA;&lt;p&gt;If you host your express service on a different path than root (/) ie. https://&amp;lt;server_name&amp;gt;/&amp;lt;sub_path&amp;gt;/, then you can add the following code to provide the configuration to the bull-board router. In this example the sub path will be &lt;code&gt;my-base-path&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Queue = require(&#39;bull&#39;)&#xA;const { createBullBoard } = require(&#39;@bull-board/api&#39;)&#xA;const { BullAdapter } = require(&#39;@bull-board/api/bullAdapter&#39;)&#xA;const { ExpressAdapter } = require(&#39;@bull-board/express&#39;)&#xA;&#xA;const basePath = &#39;/my-base-path&#39;;&#xA;&#xA;const someQueue = new Queue(&#39;someQueueName&#39;)&#xA;const serverAdapter = new ExpressAdapter();&#xA;serverAdapter.setBasePath(basePath)&#xA;&#xA;createBullBoard({&#xA;  queues: [&#xA;    new BullAdapter(someQueue),&#xA;  ],&#xA;  serverAdapter&#xA;})&#xA;&#xA;// ... express server configuration&#xA;&#xA;app.use(basePath, serverAdapter.getRouter());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will then find the bull-board UI at the following address &lt;code&gt;https://&amp;lt;server_name&amp;gt;/my-base-path/queues&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;First, thank you for being interested in helping out, your time is always appreciated in every way. 💯&lt;/p&gt; &#xA;&lt;p&gt;Remember to read the &lt;a href=&#34;https://github.com/felixmosh/bull-board/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; so you also help maintaining a good Open source community around this project!&lt;/p&gt; &#xA;&lt;p&gt;Here are some tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://github.com/felixmosh/bull-board/issues&#34;&gt;issues page&lt;/a&gt; for already opened issues (or maybe even closed ones) that might already address your question/bug/feature request.&lt;/li&gt; &#xA; &lt;li&gt;When opening a bug report provide as much information as you can, some things might be useful for helping debugging and understading the problem &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Node, Redis, Bull, BullMQ, bull-board versions&lt;/li&gt; &#xA;   &lt;li&gt;Sample code that reproduces the problem&lt;/li&gt; &#xA;   &lt;li&gt;Some of your environment details&lt;/li&gt; &#xA;   &lt;li&gt;Framework you&#39;re using (Express, Koa, Hapi, etc).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Feature requests are welcomed! Provide some details on why it would be helpful for you and others, explain how you&#39;re using bull-board and if possible even some screenshots if you are willing to mock something!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to help us to solve the issues, be it a bug, a feature or a question, you might need to fork and clone this project.&lt;/p&gt; &#xA;&lt;p&gt;To fork a project means you&#39;re going to have your own version of it under your own GitHub profile, you do it by clicking the &#34;Fork&#34; button on the top of any project&#39;s page on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Cloning a project means downloading it to your local machine, you do it in the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:YOUR_GITHUB_USERNAME/bull-board.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will create a &lt;code&gt;bull-board&lt;/code&gt; folder inside the directory you executed the command, so you need to navigate inside it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd bull-board&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;This project requires that you have &lt;a href=&#34;https://yarnpkg.com/lang/en/&#34;&gt;yarn&lt;/a&gt; installed&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also make sure you are running &lt;strong&gt;Redis&lt;/strong&gt; for this project (bull-board&#39;s example connects to Redis&#39; default port &lt;code&gt;6379&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Now, to try it out locally you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn &amp;amp;&amp;amp; yarn build &amp;amp;&amp;amp; yarn start:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ui open automaticlly in the browser at &lt;code&gt;http://localhost:3000/ui&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Acknowledgements ❤️&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaomilho&#34;&gt;Juan&lt;/a&gt; for building the first version of this library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/felixmosh/bull-board/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;, so it means it&#39;s completely free to use and copy, but if you do fork this project with nice additions that we could have here, remember to send a PR 👍&lt;/p&gt;</summary>
  </entry>
</feed>