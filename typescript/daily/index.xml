<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-06T01:38:34Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Jigsaw-Code/outline-client</title>
    <updated>2022-10-06T01:38:34Z</updated>
    <id>tag:github.com,2022-10-06:/Jigsaw-Code/outline-client</id>
    <link href="https://github.com/Jigsaw-Code/outline-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Outline clients, developed by Jigsaw. The Outline clients use the popular Shadowsocks protocol, and lean on the Cordova and Electron frameworks to support Windows, Android / ChromeOS, Linux, iOS and macOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Outline Client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Jigsaw-Code/outline-client/actions/workflows/build_and_test_debug.yml/badge.svg?branch=master&#34; alt=&#34;Build and Test&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Outline Client is a cross-platform VPN or proxy client for Windows, macOS, iOS, Android, and ChromeOS. The Outline Client is designed for use with the &lt;a href=&#34;https://github.com/Jigsaw-Code/outline-server&#34;&gt;Outline Server&lt;/a&gt; software, but it is fully compatible with any &lt;a href=&#34;https://shadowsocks.org/&#34;&gt;Shadowsocks&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;p&gt;The client&#39;s user interface is implemented in &lt;a href=&#34;https://www.polymer-project.org/&#34;&gt;Polymer&lt;/a&gt; 2.0. Platform support is provided by &lt;a href=&#34;https://cordova.apache.org/&#34;&gt;Cordova&lt;/a&gt; and &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt;, with additional native components in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements for all builds&lt;/h2&gt; &#xA;&lt;p&gt;All builds require &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt; 16 (lts/gallium), in addition to other per-platform requirements.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° NOTE: if you have &lt;code&gt;nvm&lt;/code&gt; installed, run &lt;code&gt;nvm use&lt;/code&gt; to switch to the correct node version!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After cloning this repo, install all node dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the shared web app&lt;/h2&gt; &#xA;&lt;p&gt;Outline clients share the same web app across all platforms. This code is located in the src/www directory. If you are making changes to the shared web app and do not need to test platform-specific functionality, you can test in a desktop browser by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run action src/www/start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latter command will open a browser instance running the app. Browser platform development will use fake servers to test successful and unsuccessful connections.&lt;/p&gt; &#xA;&lt;p&gt;The app logic is located in &lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/src/www/app&#34;&gt;src/www/app&lt;/a&gt;. UI components are located in &lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/src/www/ui_components&#34;&gt;src/www/ui_components&lt;/a&gt;. If you want to work specifically on an individual UI element, try the storybook!:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run action src/www/storybook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° NOTE: the &lt;code&gt;src&lt;/code&gt; part of the path is optional. &lt;code&gt;npm run action www/start&lt;/code&gt; resolves to the same script.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° NOTE: every script in this repository can be run with &lt;code&gt;npm run action&lt;/code&gt; - for a CLI-like experience, add something like&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias outline=&#34;npm run action&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;em&gt;(you can call it whatever you like)&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;to your shell, then try &lt;code&gt;outline www/start&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Accepting a server invite&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/docs/invitation_instructions.md&#34;&gt;Looking for instructions on how to accept a server invite?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Platform-specific development&lt;/h2&gt; &#xA;&lt;p&gt;Each platform is handled differently:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/docs/apple_development.md&#34;&gt;Developing for Apple &lt;strong&gt;(MacOS and iOS)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/docs/android_development.md&#34;&gt;Developing for &lt;strong&gt;Android&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/docs/electron_development.md&#34;&gt;Developing for Electron &lt;strong&gt;(Windows and Linux)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Jigsaw-Code/outline-client/master/docs/localization.md&#34;&gt;We have several pipelines for managing message localization.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Error reporting&lt;/h2&gt; &#xA;&lt;p&gt;To enable error reporting through &lt;a href=&#34;https://sentry.io/&#34;&gt;Sentry&lt;/a&gt; for local builds, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export SENTRY_DSN=[Sentry development API key]&#xA;[platform-specific build command]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Release builds on CI are configured with a production Sentry API key.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For support and to contact us, see: &lt;a href=&#34;https://support.getoutline.org&#34;&gt;https://support.getoutline.org&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>airbnb/visx</title>
    <updated>2022-10-06T01:38:34Z</updated>
    <id>tag:github.com,2022-10-06:/airbnb/visx</id>
    <link href="https://github.com/airbnb/visx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üêØ visx | visualization components&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/airbnb/visx/master/assets/visx-geometry.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;npm version&#34; href=&#34;https://www.npmjs.com/~visx&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@visx/demo.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a title=&#34;build status&#34; href=&#34;https://travis-ci.org/airbnb/visx&#34;&gt; &lt;img src=&#34;https://travis-ci.org/airbnb/visx.svg?branch=master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/airbnb/visx?branch=master&#34;&gt; &lt;img src=&#34;https://coveralls.io/repos/github/airbnb/visx/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt; &lt;/a&gt; &lt;a title=&#34;@visx/shape npm downloads&#34; href=&#34;https://www.npmjs.com/package/@visx/shape&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/@visx/shape.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx?ref=badge_shield&#34; alt=&#34;FOSSA Status&#34;&gt; &lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx.svg?type=shield&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://lernajs.io/&#34; alt=&#34;lerna&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;visx&lt;/h3&gt; &#xA;&lt;p&gt;visx is a collection of reusable low-level visualization components. visx combines the power of d3 to generate your visualization with the benefits of react for updating the DOM.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt; &lt;a href=&#34;https://airbnb.io/visx&#34;&gt;Docs&lt;/a&gt; &lt;/strong&gt; ‚Ä¢ &lt;strong&gt; &lt;a href=&#34;https://airbnb.io/visx/gallery&#34;&gt;Gallery&lt;/a&gt; &lt;/strong&gt; ‚Ä¢ &lt;strong&gt; &lt;a href=&#34;https://medium.com/vx-code/getting-started-with-vx-1756bb661410&#34;&gt;Blog&lt;/a&gt; &lt;/strong&gt; ‚Ä¢ &lt;strong&gt; &lt;a href=&#34;https://d3-slackin.herokuapp.com/&#34; title=&#34;Join https://d3js.slack.com&#34;&gt;Slack #visx&lt;/a&gt; &lt;/strong&gt; ‚Ä¢ &lt;strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/visx/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; &lt;/strong&gt; ‚Ä¢ &lt;strong&gt; &lt;a href=&#34;https://medium.com/vx-code/getting-started-with-vx-1756bb661410&#34;&gt;Getting started tutorial&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://airbnb.io/visx/gallery&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/airbnb/visx/master/assets/visx-gallery.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://glitch.com/edit/#!/remix/kind-modem&#34;&gt;&lt;img src=&#34;https://cdn.glitch.com/2703baf2-b643-4da7-ab91-7ee2a2d00b5b%2Fremix-button.svg?sanitize=true&#34; alt=&#34;Remix on Glitch&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s make a simple bar graph.&lt;/p&gt; &#xA;&lt;p&gt;First we&#39;ll install the relevant packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save @visx/mock-data @visx/group @visx/shape @visx/scale&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/airbnb/visx/master/assets/simplebar.png&#34; height=&#34;150&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React from &#39;react&#39;;&#xA;import { letterFrequency } from &#39;@visx/mock-data&#39;;&#xA;import { Group } from &#39;@visx/group&#39;;&#xA;import { Bar } from &#39;@visx/shape&#39;;&#xA;import { scaleLinear, scaleBand } from &#39;@visx/scale&#39;;&#xA;&#xA;// We&#39;ll use some mock data from `@visx/mock-data` for this.&#xA;const data = letterFrequency;&#xA;&#xA;// Define the graph dimensions and margins&#xA;const width = 500;&#xA;const height = 500;&#xA;const margin = { top: 20, bottom: 20, left: 20, right: 20 };&#xA;&#xA;// Then we&#39;ll create some bounds&#xA;const xMax = width - margin.left - margin.right;&#xA;const yMax = height - margin.top - margin.bottom;&#xA;&#xA;// We&#39;ll make some helpers to get at the data we want&#xA;const x = d =&amp;gt; d.letter;&#xA;const y = d =&amp;gt; +d.frequency * 100;&#xA;&#xA;// And then scale the graph by our data&#xA;const xScale = scaleBand({&#xA;  range: [0, xMax],&#xA;  round: true,&#xA;  domain: data.map(x),&#xA;  padding: 0.4,&#xA;});&#xA;const yScale = scaleLinear({&#xA;  range: [yMax, 0],&#xA;  round: true,&#xA;  domain: [0, Math.max(...data.map(y))],&#xA;});&#xA;&#xA;// Compose together the scale and accessor functions to get point functions&#xA;const compose = (scale, accessor) =&amp;gt; data =&amp;gt; scale(accessor(data));&#xA;const xPoint = compose(xScale, x);&#xA;const yPoint = compose(yScale, y);&#xA;&#xA;// Finally we&#39;ll embed it all in an SVG&#xA;function BarGraph(props) {&#xA;  return (&#xA;    &amp;lt;svg width={width} height={height}&amp;gt;&#xA;      {data.map((d, i) =&amp;gt; {&#xA;        const barHeight = yMax - yPoint(d);&#xA;        return (&#xA;          &amp;lt;Group key={`bar-${i}`}&amp;gt;&#xA;            &amp;lt;Bar&#xA;              x={xPoint(d)}&#xA;              y={yMax - barHeight}&#xA;              height={barHeight}&#xA;              width={xScale.bandwidth()}&#xA;              fill=&#34;#fc2e1c&#34;&#xA;            /&amp;gt;&#xA;          &amp;lt;/Group&amp;gt;&#xA;        );&#xA;      })}&#xA;    &amp;lt;/svg&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;// ... somewhere else, render it ...&#xA;// &amp;lt;BarGraph /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples using &lt;code&gt;visx&lt;/code&gt;, check out the &lt;a href=&#34;https://airbnb.io/visx/gallery&#34;&gt;gallery&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The goal is to create a library of components you can use to make both your own reusable chart library or your slick custom one-off chart. visx is largely unopinionated and is meant to be built upon. Keep your bundle sizes down and use only the packages you need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Under the hood, visx is using d3 for the calculations and math. If you&#39;re creating your own awesome chart library on top of visx, it&#39;s easy to create a component api that hides d3 entirely. Meaning your team could create charts as easily as using reusable react components.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;But why?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mixing two mental models for updating the DOM is never a good time. Copy and pasting d3 code into &lt;code&gt;componentDidMount()&lt;/code&gt; is just that. This collection of components lets you easily build your own reusable visualization charts or library without having to learn d3. No more selections or &lt;code&gt;enter()&lt;/code&gt;/&lt;code&gt;exit()&lt;/code&gt;/&lt;code&gt;update()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Lots coming soon, check out the &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/visx/master/ROADMAP.md&#34;&gt;roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;In the wild&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williaster/data-ui&#34;&gt;williaster/data-ui&lt;/a&gt; (&lt;a href=&#34;https://williaster.github.io/data-ui/&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DylanMoz/dylanmoz.github.io/raw/source/src/pages/trello/TrelloGraph.js&#34;&gt;dylanmoz/trello&lt;/a&gt; (&lt;a href=&#34;http://dylanmoz.github.io/trello/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://devblog.classy.org/how-to-make-beautiful-graphs-with-vx-and-react-motion-6ffe7aecf6f3&#34;&gt;How to Make Beautiful Graphs With vx and React-Motion&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gkunthara/Crypto-Chart&#34;&gt;gkunthara/Crypto-Chart&lt;/a&gt; (&lt;a href=&#34;https://medium.com/@georgekunthara/after-the-tutorial-the-first-react-app-4dce6645634e&#34;&gt;Tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Collapsible tree with &lt;a href=&#34;https://github.com/react-tools/react-move&#34;&gt;&lt;code&gt;react-move&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/techniq&#34;&gt;@techniq&lt;/a&gt; (&lt;a href=&#34;https://codesandbox.io/s/n3w687vmqj&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://codesandbox.io/s/vmqwrkl395&#34;&gt;Radial demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/airbnb/visx/issues/162#issuecomment-335029517&#34;&gt;More info&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bitcoin 30-day price by &lt;a href=&#34;https://github.com/hshoff&#34;&gt;@hshoff&lt;/a&gt; (&lt;a href=&#34;https://github.com/hshoff/viewsource#1-bitcoin-price-chart&#34;&gt;Github&lt;/a&gt;) (&lt;a href=&#34;https://www.youtube.com/watch?v=oeE2tuspdHg&#34;&gt;YouTube&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ethereum candlestick chart by &lt;a href=&#34;https://github.com/hshoff&#34;&gt;@hshoff&lt;/a&gt; (&lt;a href=&#34;https://github.com/hshoff/viewsource#2-ethereum-candlestick-chart&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Song data visualization through spotify by &lt;a href=&#34;https://github.com/bother7&#34;&gt;@bother7&lt;/a&gt; (&lt;a href=&#34;https://spotalyzer-frontend.herokuapp.com/demo&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/bother7/spotalyzer_frontend&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Investment Calculator (&lt;a href=&#34;https://investmentcalculator.io/&#34;&gt;website&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Animation with &lt;a href=&#34;https://github.com/drcmda/react-spring/&#34;&gt;&lt;code&gt;react-spring&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/drcmda&#34;&gt;@drcmda&lt;/a&gt; (&lt;a href=&#34;https://codesandbox.io/embed/j3x61vjz5v&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Code Coverage Dashboard by &lt;a href=&#34;https://github.com/ezy&#34;&gt;@ezy&lt;/a&gt; (&lt;a href=&#34;https://codecov-dash.herokuapp.com/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/ezy/code-coverage-dashboard&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ethereum Portfolio Toolkit by &lt;a href=&#34;https://github.com/JayWelsh&#34;&gt;@JayWelsh&lt;/a&gt; (&lt;a href=&#34;https://cryptocape.com/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/JayWelsh/CryptoCape&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Family tree by &lt;a href=&#34;https://github.com/vkallore&#34;&gt;@vkallore&lt;/a&gt; (&lt;a href=&#34;https://github.com/vkallore/d3-vx-family-tree&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;South African Coronavirus Data Visuals by &lt;a href=&#34;https://github.com/JayWelsh&#34;&gt;@JayWelsh&lt;/a&gt; (&lt;a href=&#34;https://coronamap.co.za/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/JayWelsh/coronamap&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnn.com/business/us-economic-recovery-coronavirus&#34;&gt;CNN: Tracking America&#39;s Recovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.wsj.com/dailyshot/2020/04/13/the-daily-shot-americans-familiarize-themselves-with-the-word-forbearance/&#34;&gt;Wall Street Journal: Americans Familiarize Themselves with the Word ‚ÄòForbearance‚Äô&lt;/a&gt; by &lt;a href=&#34;https://github.com/rayshan&#34;&gt;@rayshan&lt;/a&gt; (&lt;a href=&#34;https://finance.shan.io/recessions-bear-markets-compared&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dollar to food emoji caculator by &lt;a href=&#34;https://github.com/gmlwo530&#34;&gt;@gmlwo530&lt;/a&gt; (&lt;a href=&#34;https://dollar-to-food-emoji.web.app/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/gmlwo530/dollar-to-food-emoji&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[zh-TW] Taiwan Real-time Air Quality Index by &lt;a href=&#34;https://github.com/ArvinH&#34;&gt;@ArvinH&lt;/a&gt;(&lt;a href=&#34;https://codesandbox.io/s/simpleradar-aqi-with-tooltip-select-data-react-spring-item3?file=/Radar.tsx&#34;&gt;Demo&lt;/a&gt;)(&lt;a href=&#34;https://blog.arvinh.info/tech/datavis-visx&#34;&gt;Tutorial&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;tokenized BTC on ethereum stacked chart with brush by &lt;a href=&#34;https://github.com/sakulstra&#34;&gt;@sakulstra&lt;/a&gt;(&lt;a href=&#34;https://tokenizedbtc.info/&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eft.monster/&#34;&gt;Escape From Tarkov Ammo Chart&lt;/a&gt; by &lt;a href=&#34;https://github.com/codenomial&#34;&gt;@codenomial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pry.co&#34;&gt;Pry&lt;/a&gt; Finance for Founders (dashboard by &lt;a href=&#34;https://github.com/valtism&#34;&gt;@valtism&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.data2thepeople.org/&#34;&gt;Data 2 the People&lt;/a&gt; Donation Efficacy Analysis for Downballot Races (&lt;a href=&#34;https://donate.data2thepeople.org/&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://github.com/Data-2-the-People/skyfall/raw/master/components/Scatterplot.jsx&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://augora.fr&#34;&gt;Augora&lt;/a&gt; Display information of french deputies (&lt;a href=&#34;https://augora.fr/statistiques&#34;&gt;Demo&lt;/a&gt;)(&lt;a href=&#34;https://github.com/Augora/Augora&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;WHO Coronavirus (COVID-19) Dashboard is built on top of &lt;code&gt;vx&lt;/code&gt;, earlier version of &lt;code&gt;visx&lt;/code&gt;. (&lt;a href=&#34;https://covid19.who.int/&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Have a project that&#39;s using &lt;code&gt;visx&lt;/code&gt;? Open a pull request and we&#39;ll add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;What does &lt;code&gt;visx&lt;/code&gt; stand for?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;visx stands for visualization components.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do you plan on supporting animation/transitions?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;A common criticism of visx is it doesn&#39;t have animation baked in, but this was a conscious choice. It&#39;s a powerful feature to not bake it in.&lt;/p&gt; &#xA;   &lt;p&gt;Imagine your app already bundles &lt;code&gt;react-motion&lt;/code&gt;, adding a hypothetical &lt;code&gt;@visx/animation&lt;/code&gt; is bloat. Since visx is react, it already supports all react animation libs.&lt;/p&gt; &#xA;   &lt;p&gt;Charting libraries are like style guides. Each org or app will eventually want full control over their own implementation.&lt;/p&gt; &#xA;   &lt;p&gt;visx makes this easier for everyone. No need to reinvent the wheel each time.&lt;/p&gt; &#xA;   &lt;p&gt;more info: &lt;a href=&#34;https://github.com/airbnb/visx/issues/6&#34;&gt;https://github.com/airbnb/visx/issues/6&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;p&gt;examples:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Collapsible tree with &lt;a href=&#34;https://github.com/react-tools/react-move&#34;&gt;&lt;code&gt;react-move&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/techniq&#34;&gt;@techniq&lt;/a&gt; (&lt;a href=&#34;https://codesandbox.io/s/n3w687vmqj&#34;&gt;Demo&lt;/a&gt;) (&lt;a href=&#34;https://codesandbox.io/s/vmqwrkl395&#34;&gt;Radial demo&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;Animation with &lt;code&gt;react-spring&lt;/code&gt; by &lt;a href=&#34;https://github.com/drcmda&#34;&gt;@drcmda&lt;/a&gt; (&lt;a href=&#34;https://codesandbox.io/embed/j3x61vjz5v&#34;&gt;Demo&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do I have to use every package to make a chart?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;nope! pick and choose the packages you need.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Can I use this to create my own library of charts for my team?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Please do.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Does visx work with &lt;a href=&#34;https://preactjs.com/&#34;&gt;preact&lt;/a&gt;?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;yup! need to alias &lt;code&gt;react&lt;/code&gt; + &lt;code&gt;react-dom&lt;/code&gt; and use &lt;code&gt;preact-compat&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;I like using d3.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Me too.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/airbnb/visx/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚úå&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/airbnb/visx/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fhshoff%2Fvx.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>surveyjs/survey-library</title>
    <updated>2022-10-06T01:38:34Z</updated>
    <id>tag:github.com,2022-10-06:/surveyjs/survey-library</id>
    <link href="https://github.com/surveyjs/survey-library" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JavaScript Survey and Form Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SurveyJS Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/SurveyJS/SurveyJS%20Integration%20Tests/_build/latest?definitionId=7&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/SurveyJS/SurveyJS%20Integration%20Tests/_apis/build/status/SurveyJS%20Library?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/surveyjs/survey-library/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat&#34; alt=&#34;Software License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/DevExpress/testcafe&#34;&gt; &lt;img alt=&#34;Tested with TestCafe&#34; src=&#34;https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/surveyjs/survey-library/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; title=&#34;Open Issues&#34; src=&#34;https://img.shields.io/github/issues/surveyjs/survey-library.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/surveyjs/survey-library/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aclosed+&#34;&gt; &lt;img alt=&#34;Closed issues&#34; title=&#34;Closed Issues&#34; src=&#34;https://img.shields.io/github/issues-closed/surveyjs/survey-library.svg?sanitize=true&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SurveyJS Library allows you to create dynamic surveys and forms and integrate them into your JavaScript application.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic forms, surveys, and quizzes for your JavaScript application&lt;/li&gt; &#xA; &lt;li&gt;Angular, React, jQuery, Knockout, and Vue support&lt;/li&gt; &#xA; &lt;li&gt;20+ built-in question types and support for custom question types&lt;/li&gt; &#xA; &lt;li&gt;Answer validation&lt;/li&gt; &#xA; &lt;li&gt;Modern, customizable UI themes&lt;/li&gt; &#xA; &lt;li&gt;TypeScript support&lt;/li&gt; &#xA; &lt;li&gt;Community-supported UI localization to 50+ languages&lt;/li&gt; &#xA; &lt;li&gt;Integration with any backend framework (examples for PHP, NodeJS, and ASP.NET included)&lt;/li&gt; &#xA; &lt;li&gt;Survey results can be stored in any database&lt;/li&gt; &#xA; &lt;li&gt;Third-party component integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library?id=get-started-angular&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library?id=get-started-react&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library?id=get-started-vue&#34;&gt;Vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library?id=get-started-jquery&#34;&gt;jQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library?id=get-started-knockout&#34;&gt;Knockout&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Documentation/Library&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/Examples/Library&#34;&gt;Live Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveyjs.io/WhatsNew&#34;&gt;What&#39;s New&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build the SurveyJS Library from Sources&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repo&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;git clone https://github.com/surveyjs/survey-library.git&#xA;cd survey-library&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;br&gt; Make sure that you have Node.js v6.0.0 or later and npm v2.7.0 or later installed.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;npm install -g karma-cli&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the library&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm run build_prod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can find the built scripts and style sheets in folders under the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run test examples&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This command runs a local HTTP server at &lt;a href=&#34;http://localhost:7777/&#34;&gt;http://localhost:7777/&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run unit tests&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The unit tests use &lt;a href=&#34;https://karma-runner.github.io/6.3/index.html&#34;&gt;Karma&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;SurveyJS Library is distributed under the &lt;a href=&#34;https://github.com/surveyjs/survey-library/raw/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>