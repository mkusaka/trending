<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-09T01:41:38Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sadanandpai/sorting-visualizer</title>
    <updated>2023-10-09T01:41:38Z</updated>
    <id>tag:github.com,2023-10-09:/sadanandpai/sorting-visualizer</id>
    <link href="https://github.com/sadanandpai/sorting-visualizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sorting Algorithms Visualizer&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Sorting Visualizer&lt;/h1&gt; &#xA; &lt;h2&gt;Responsive visualizer built using React for popular algorithms&lt;/h2&gt; &#xA; &lt;div&gt; &#xA;  &lt;a name=&#34;stars&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/sadanandpai/sorting-visualizer?style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;  &lt;a name=&#34;forks&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/sadanandpai/sorting-visualizer?logoColor=green&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA;  &lt;a name=&#34;license&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/sadanandpai/sorting-visualizer?style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://codeium.com&#34;&gt;&lt;img src=&#34;https://codeium.com/badges/main&#34; alt=&#34;built with Codeium&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://sadanandpai.github.io/sorting-visualizer/dist/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sadanandpai/sorting-visualizer/main/public/images/cell.png&#34; alt=&#34;cover&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://sadanandpai.github.io/sorting-visualizer/dist/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sadanandpai/sorting-visualizer/main/public/images/bar.png&#34; alt=&#34;cover&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sadanandpai.github.io/sorting-visualizer/dist/&#34;&gt;See it in action&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;This repo is an attempt to help in learning popular sorting algorithms by visualization&lt;/h3&gt; &#xA;&lt;p&gt;Helps to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;understand the working of sorting algorithm&lt;/li&gt; &#xA; &lt;li&gt;check total swaps required&lt;/li&gt; &#xA; &lt;li&gt;check total comparisions&lt;/li&gt; &#xA; &lt;li&gt;compare algorithms side by side&lt;/li&gt; &#xA; &lt;li&gt;know the time taken (time is just an approximate unit for comparision)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sort any given array of 3 digits positive integers&lt;/li&gt; &#xA; &lt;li&gt;Alter the speed of execution&lt;/li&gt; &#xA; &lt;li&gt;Start, pause and reset the execution&lt;/li&gt; &#xA; &lt;li&gt;Generate random array of numbers of sorting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Technologies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redux-toolkit.js.org/&#34;&gt;Redux Toolkit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactrouter.com/en/main/&#34;&gt;React Router&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-switch.netlify.app/&#34;&gt;React Switch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sonner.emilkowal.ski/&#34;&gt;Sonner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sass-lang.com/&#34;&gt;Sass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt; (Bundler)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features built using&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Animations are done using pure CSS and uses &lt;a href=&#34;https://aerotwist.com/blog/flip-your-animations/&#34;&gt;FLIP principle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Flex is used for array display and manipulation of positions (flex order property)&lt;/li&gt; &#xA; &lt;li&gt;JavaScript async generators are used heavily for the controlled execution of algorithms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run in your local&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/sadanandpai/sorting-visualizer.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt; (after navigating inside the directory)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Contributing Guide&lt;/h3&gt; &#xA;&lt;p&gt;If you want to contribute, improve or fix bugs in this repo, then check out the &lt;a href=&#34;https://raw.githubusercontent.com/sadanandpai/sorting-visualizer/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;This repository is MIT licensed. &lt;a href=&#34;https://raw.githubusercontent.com/sadanandpai/sorting-visualizer/main/LICENSE&#34;&gt;Read more&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>antfu/eslint-config</title>
    <updated>2023-10-09T01:41:38Z</updated>
    <id>tag:github.com,2023-10-09:/antfu/eslint-config</id>
    <link href="https://github.com/antfu/eslint-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Anthony&#39;s ESLint config presets&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@antfu/eslint-config&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.com/package/@antfu/eslint-config&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@antfu/eslint-config?color=444&amp;amp;label=&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/antfu/eslint-config&#34;&gt;&lt;img src=&#34;https://antfu.me/badge-code-style.svg?sanitize=true&#34; alt=&#34;code style&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single quotes, no semi&lt;/li&gt; &#xA; &lt;li&gt;Auto fix for formatting (aimed to be used standalone &lt;strong&gt;without&lt;/strong&gt; Prettier)&lt;/li&gt; &#xA; &lt;li&gt;Designed to work with TypeScript, Vue out-of-box&lt;/li&gt; &#xA; &lt;li&gt;Lints also for json, yaml, markdown&lt;/li&gt; &#xA; &lt;li&gt;Sorted imports, dangling commas&lt;/li&gt; &#xA; &lt;li&gt;Reasonable defaults, best practices, only one-line of config&lt;/li&gt; &#xA; &lt;li&gt;Respects &lt;code&gt;.gitignore&lt;/code&gt; by default&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/docs/latest/use/configure/configuration-files-new&#34;&gt;ESLint Flat config&lt;/a&gt;, compose easily!&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/eslint-stylistic/eslint-stylistic&#34;&gt;ESLint Stylistic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Style principle&lt;/strong&gt;: Minimal for reading, stable for diff, consistent&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] The main branch is for v1.0-beta, which rewrites to ESLint Flat config, check &lt;a href=&#34;https://github.com/antfu/eslint-config/pull/250&#34;&gt;#250&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm i -D eslint @antfu/eslint-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create config file&lt;/h3&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://nodejs.org/api/packages.html#type&#34;&gt;&lt;code&gt;&#34;type&#34;: &#34;module&#34;&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;package.json&lt;/code&gt; (recommended):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With CJS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;const antfu = require(&#39;@antfu/eslint-config&#39;).default&#xA;&#xA;module.exports = antfu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that &lt;code&gt;.eslintignore&lt;/code&gt; no longer works in Flat config, see &lt;a href=&#34;https://raw.githubusercontent.com/antfu/eslint-config/main/#customization&#34;&gt;customization&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Add script for package.json&lt;/h3&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;lint&#34;: &#34;eslint .&#34;,&#xA;    &#34;lint:fix&#34;: &#34;eslint . --fix&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;VS Code support (auto fix)&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&#34;&gt;VS Code ESLint extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following settings to your &lt;code&gt;.vscode/settings.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;{&#xA;  // Enable the ESlint flat config support&#xA;  &#34;eslint.experimental.useFlatConfig&#34;: true,&#xA;&#xA;  // Disable the default formatter, use eslint instead&#xA;  &#34;prettier.enable&#34;: false,&#xA;  &#34;editor.formatOnSave&#34;: false,&#xA;&#xA;  // Auto fix&#xA;  &#34;editor.codeActionsOnSave&#34;: {&#xA;    &#34;source.fixAll&#34;: &#34;explicit&#34;,&#xA;    &#34;source.organizeImports&#34;: &#34;never&#34;&#xA;  },&#xA;&#xA;  // Silent the stylistic rules in you IDE, but still auto fix them&#xA;  &#34;eslint.rules.customizations&#34;: [&#xA;    { &#34;rule&#34;: &#34;style/*&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-indent&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-spacing&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-spaces&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-order&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-dangle&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*-newline&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*quotes&#34;, &#34;severity&#34;: &#34;off&#34; },&#xA;    { &#34;rule&#34;: &#34;*semi&#34;, &#34;severity&#34;: &#34;off&#34; }&#xA;  ],&#xA;&#xA;  // Enable eslint for all supported languages&#xA;  &#34;eslint.validate&#34;: [&#xA;    &#34;javascript&#34;,&#xA;    &#34;javascriptreact&#34;,&#xA;    &#34;typescript&#34;,&#xA;    &#34;typescriptreact&#34;,&#xA;    &#34;vue&#34;,&#xA;    &#34;html&#34;,&#xA;    &#34;markdown&#34;,&#xA;    &#34;json&#34;,&#xA;    &#34;jsonc&#34;,&#xA;    &#34;yaml&#34;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Since v1.0, we migrated to &lt;a href=&#34;https://eslint.org/docs/latest/use/configure/configuration-files-new&#34;&gt;ESLint Flat config&lt;/a&gt;. It provides much better organization and composition.&lt;/p&gt; &#xA;&lt;p&gt;Normally you only need to import the &lt;code&gt;antfu&lt;/code&gt; preset:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s it! Or you can configure each integration individually, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu({&#xA;  // Enable stylistic formatting rules&#xA;  // stylistic: true,&#xA;&#xA;  // Or customize the stylistic rules&#xA;  stylistic: {&#xA;    indent: 2, // 4, or &#39;tab&#39;&#xA;    quotes: &#39;single&#39;, // or &#39;double&#39;&#xA;  },&#xA;&#xA;  // TypeScript and Vue are auto-detected, you can also explicitly enable them:&#xA;  typescript: true,&#xA;  vue: true,&#xA;&#xA;  // Disable jsonc and yaml support&#xA;  jsonc: false,&#xA;  yaml: false,&#xA;&#xA;  // `.eslintignore` is no longer supported in Flat config, use `ignores` instead&#xA;  ignores: [&#xA;    &#39;./fixtures&#39;,&#xA;    // ...globs&#xA;  ]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;antfu&lt;/code&gt; factory function also accepts any number of arbitrary custom config overrides:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu(&#xA;  {&#xA;    // Configures for antfu&#39;s config&#xA;  },&#xA;&#xA;  // From the second arguments they are ESLint Flat Configs&#xA;  // you can have multiple configs&#xA;  {&#xA;    files: [&#39;**/*.ts&#39;],&#xA;    rules: {},&#xA;  },&#xA;  {&#xA;    rules: {},&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Going more advanced, you can also import fine-grained configs and compose them as you wish:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import {&#xA;  comments,&#xA;  ignores,&#xA;  imports,&#xA;  javascript,&#xA;  jsdoc,&#xA;  jsonc,&#xA;  markdown,&#xA;  node,&#xA;  sortPackageJson,&#xA;  sortTsconfig,&#xA;  stylistic,&#xA;  typescript,&#xA;  unicorn,&#xA;  vue,&#xA;  yaml,&#xA;} from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default [&#xA;  ...ignores(),&#xA;  ...javascript(),&#xA;  ...comments(),&#xA;  ...node(),&#xA;  ...jsdoc(),&#xA;  ...imports(),&#xA;  ...unicorn(),&#xA;  ...typescript(),&#xA;  ...stylistic(),&#xA;  ...vue(),&#xA;  ...jsonc(),&#xA;  ...yaml(),&#xA;  ...markdown(),&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/antfu/eslint-config/raw/main/src/configs&#34;&gt;configs&lt;/a&gt; and &lt;a href=&#34;https://github.com/antfu/eslint-config/raw/main/src/factory.ts&#34;&gt;factory&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/sxzz/eslint-config&#34;&gt;sxzz/eslint-config&lt;/a&gt; for the inspiration and reference.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Plugins Renaming&lt;/h2&gt; &#xA;&lt;p&gt;Since flat config requires us to explicitly provide the plugin names (instead of mandatory convention from npm package name), we renamed some plugins to make overall scope more consistent and easier to write.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;New Prefix&lt;/th&gt; &#xA;   &lt;th&gt;Original Prefix&lt;/th&gt; &#xA;   &lt;th&gt;Source Plugin&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;import/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;i/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/un-es/eslint-plugin-i&#34;&gt;eslint-plugin-i&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;node/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;n/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eslint-community/eslint-plugin-n&#34;&gt;eslint-plugin-n&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;yaml/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;yml/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ota-meshi/eslint-plugin-yml&#34;&gt;eslint-plugin-yml&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ts/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;@typescript-eslint/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint&#34;&gt;@typescript-eslint/eslint-plugin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;style/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;@stylistic/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eslint-stylistic/eslint-stylistic&#34;&gt;@stylistic/eslint-plugin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;test/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vitest/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/veritem/eslint-plugin-vitest&#34;&gt;eslint-plugin-vitest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;test/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;no-only-tests/*&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/levibuzolic/eslint-plugin-no-only-tests&#34;&gt;eslint-plugin-no-only-tests&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When you want to override rules, or disable them inline, you need to update to the new prefix:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-// eslint-disable-next-line @typescript-eslint/consistent-type-definitions&#xA;+// eslint-disable-next-line ts/consistent-type-definitions&#xA;type foo = { bar: 2 }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Rules Overrides&lt;/h3&gt; &#xA;&lt;p&gt;Certain rules would only be enabled in specific files, for example, &lt;code&gt;ts/*&lt;/code&gt; rules would only be enabled in &lt;code&gt;.ts&lt;/code&gt; files and &lt;code&gt;vue/*&lt;/code&gt; rules would only be enabled in &lt;code&gt;.vue&lt;/code&gt; files. If you want to override the rules, you need to specify the file extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu(&#xA;  { vue: true, typescript: true },&#xA;  {&#xA;    // Remember to specify the file glob here, otherwise it might cause the vue plugin to handle non-vue files&#xA;    files: [&#39;**/*.vue&#39;],&#xA;    rules: {&#xA;      &#39;vue/operator-linebreak&#39;: [&#39;error&#39;, &#39;before&#39;],&#xA;    },&#xA;  },&#xA;  {&#xA;    // Without `files`, they are general rules for all files&#xA;    rules: {&#xA;      &#39;style/semi&#39;: [&#39;error&#39;, &#39;never&#39;],&#xA;    },&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We also provided an &lt;code&gt;overrides&lt;/code&gt; options to make it easier:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu({&#xA;  overrides: {&#xA;    vue: {&#xA;      &#39;vue/operator-linebreak&#39;: [&#39;error&#39;, &#39;before&#39;],&#xA;    },&#xA;    typescript: {&#xA;      &#39;ts/consistent-type-definitions&#39;: [&#39;error&#39;, &#39;interface&#39;],&#xA;    },&#xA;    yaml: {},&#xA;    // ...&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Type Aware Rules&lt;/h3&gt; &#xA;&lt;p&gt;You can optionally enable the &lt;a href=&#34;https://typescript-eslint.io/linting/typed-linting/&#34;&gt;type aware rules&lt;/a&gt; by passing the options object to the &lt;code&gt;typescript&lt;/code&gt; config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// eslint.config.js&#xA;import antfu from &#39;@antfu/eslint-config&#39;&#xA;&#xA;export default antfu({&#xA;  typescript: {&#xA;    tsconfigPath: &#39;tsconfig.json&#39;,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lint Staged&lt;/h3&gt; &#xA;&lt;p&gt;If you want to apply lint and auto-fix before every commit, you can add the following to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;simple-git-hooks&#34;: {&#xA;    &#34;pre-commit&#34;: &#34;pnpm lint-staged&#34;&#xA;  },&#xA;  &#34;lint-staged&#34;: {&#xA;    &#34;*&#34;: &#34;eslint --fix&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -D lint-staged simple-git-hooks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Badge&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy this code style, and would like to mention it in your project, here is the badge you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![code style](https://antfu.me/badge-code-style.svg)](https://github.com/antfu/eslint-config)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antfu/eslint-config&#34;&gt;&lt;img src=&#34;https://antfu.me/badge-code-style.svg?sanitize=true&#34; alt=&#34;code style&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Prettier?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://antfu.me/posts/why-not-prettier&#34;&gt;Why I don&#39;t use Prettier&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How to lint CSS?&lt;/h3&gt; &#xA;&lt;p&gt;This config does NOT lint CSS. I personally use &lt;a href=&#34;https://github.com/unocss/unocss&#34;&gt;UnoCSS&lt;/a&gt; so I don&#39;t write CSS. If you still prefer CSS, you can use &lt;a href=&#34;https://stylelint.io/&#34;&gt;stylelint&lt;/a&gt; for CSS linting.&lt;/p&gt; &#xA;&lt;h3&gt;I prefer XXX...&lt;/h3&gt; &#xA;&lt;p&gt;Sure, you can config and override rules locally in your project to fit your needs. If that still does not work for you, you can always fork this repo and maintain your own.&lt;/p&gt; &#xA;&lt;h2&gt;Check Also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antfu/dotfiles&#34;&gt;antfu/dotfiles&lt;/a&gt; - My dotfiles&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antfu/vscode-settings&#34;&gt;antfu/vscode-settings&lt;/a&gt; - My VS Code settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antfu/ts-starter&#34;&gt;antfu/ts-starter&lt;/a&gt; - My starter template for TypeScript library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antfu/vitesse&#34;&gt;antfu/vitesse&lt;/a&gt; - My starter template for Vue &amp;amp; Vite app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/antfu/eslint-config/main/LICENSE&#34;&gt;MIT&lt;/a&gt; License © 2019-PRESENT &lt;a href=&#34;https://github.com/antfu&#34;&gt;Anthony Fu&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RealKai42/qwerty-learner</title>
    <updated>2023-10-09T01:41:38Z</updated>
    <id>tag:github.com,2023-10-09:/RealKai42/qwerty-learner</id>
    <link href="https://github.com/RealKai42/qwerty-learner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 / Words learning and English muscle memory training software designed for keyboard workers&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/RealKai42/qwerty-learner/master/src/assets/logo.svg?sanitize=true&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Qwerty Learner &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/RealKai42/qwerty-learner/master/docs/README_EN.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Realkai42/qwerty-learner&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-React-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/RealKai42/qwerty-learner/master/docs/Screenshot.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📸 在线访问&lt;/h2&gt; &#xA;&lt;p&gt;Vercel: &lt;a href=&#34;https://qwerty.kaiyi.cool/&#34;&gt;https://qwerty.kaiyi.cool/&lt;/a&gt; , &lt;a href=&#34;https://qwerty-learner.vercel.app/&#34;&gt;https://qwerty-learner.vercel.app/&lt;/a&gt;&lt;br&gt; GitHub Pages: &lt;a href=&#34;https://realkai42.github.io/qwerty-learner/&#34;&gt;https://realkai42.github.io/qwerty-learner/&lt;/a&gt;&lt;br&gt; Gitee Pages: &lt;a href=&#34;https://kaiyiwing.gitee.io/qwerty-learner/&#34;&gt;https://kaiyiwing.gitee.io/qwerty-learner/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;国内用户建议使用 Gitee 访问 &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;项目已发布 VSCode 插件版，一键启动、随时开始练习&lt;br&gt; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Kaiyi.qwerty-learner&#34;&gt;VSCode Plugin Market&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner-vscode&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;✨ 设计思想&lt;/h2&gt; &#xA;&lt;p&gt;软件设计的目标群体为以英语作为主要工作语言的键盘工作者。部分人会出现输入母语时的打字速度快于英语的情况，因为多年的母语输入练就了非常坚固的肌肉记忆 💪，而英语输入的肌肉记忆相对较弱，易出现输入英语时“提笔忘字”的现象。&lt;/p&gt; &#xA;&lt;p&gt;同时为了巩固英语技能，也需要持续的背诵单词 📕，本软件将英语单词的记忆与英语键盘输入的肌肉记忆的锻炼相结合，可以在背诵单词的同时巩固肌肉记忆。&lt;/p&gt; &#xA;&lt;p&gt;为了避免造成错误的肌肉记忆，设计上如果用户单词输入错误则需要重新输入单词，尽可能确保用户维持正确的肌肉记忆。&lt;/p&gt; &#xA;&lt;p&gt;软件也对需要机考英语的人群有一定的帮助。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For Coder&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;p&gt;内置了程序员工作常用单词的词库，方便练习工作中常用的单词、提高输入速度。也内置了诸多语言的 API 的练习，帮助以程序员快速熟悉常用的 API，更多语言的 API 正在逐步添加中...&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/docs/coder.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;🛠 功能列表&lt;/h2&gt; &#xA;&lt;h3&gt;词库&lt;/h3&gt; &#xA;&lt;p&gt;内置了常用的 CET-4 、CET-6 、GMAT 、GRE 、IELTS 、SAT 、TOEFL 、考研英语、专业四级英语、专业八级英语，也有程序员常见英语单词以及多种编程语言 API 等词库。 尽可能满足大部分用户对单词记忆的需求，也非常欢迎社区贡献更多的词库。 &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;音标显示、发音功能&lt;/h3&gt; &#xA;&lt;p&gt;方便用户在记忆单词时，同时记忆读音与音标。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/docs/phonetic.jpeg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;默写模式&lt;/h3&gt; &#xA;&lt;p&gt;在用户完成一个章节的练习后，会弹出选项是否默写本章，方便用户巩固本章学习的单词。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/docs/dictation.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;速度、正确率显示&lt;/h3&gt; &#xA;&lt;p&gt;量化用户输入的速度和输入的正确率，让用户有感知的了解自己技能的提升&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/docs/speed.jpeg&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;如何贡献&lt;/h2&gt; &#xA;&lt;h3&gt;贡献代码&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/issues/390&#34;&gt;Call for Contributor&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/RealKai42/qwerty-learner/master/docs/CONTRIBUTING.md&#34;&gt;贡献准则&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;贡献词库&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RealKai42/qwerty-learner/master/docs/toBuildDict.md&#34;&gt;导入词典&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;运行项目&lt;/h2&gt; &#xA;&lt;p&gt;本项目是基于&lt;code&gt;React&lt;/code&gt;开发的，需要 node 环境来运行。&lt;/p&gt; &#xA;&lt;h3&gt;手动安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装 NodeJS，参考&lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;git clone&lt;/code&gt; 下载项目到本地, 不使用 git 可能因为缺少依赖而无法运行&lt;/li&gt; &#xA; &lt;li&gt;打开命令行，在项目根目录下，运行&lt;code&gt;yarn install&lt;/code&gt;来下载依赖。&lt;/li&gt; &#xA; &lt;li&gt;执行&lt;code&gt;yarn start&lt;/code&gt;来启动项目，项目默认地址为&lt;code&gt;http://localhost:5173/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;在浏览器中打开&lt;code&gt;http://localhost:5173/&lt;/code&gt;来访问项目。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;脚本执行&lt;/h3&gt; &#xA;&lt;p&gt;对于 Windows 用户，可以直接执行 ps1 脚本，来一键安装依赖并启动项目。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开 powershell，定位到项目根目录中的&lt;code&gt;scripts&lt;/code&gt;目录&lt;/li&gt; &#xA; &lt;li&gt;在命令行中，执行&lt;code&gt;.\install.ps1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;等待脚本完成。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;备注 脚本依赖&lt;code&gt;winget&lt;/code&gt;来安装 node，仅在 Windows 10 1709（版本 16299）或更高版本上受支持！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🏆 荣誉&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Github 全球趋势榜上榜项目&lt;/li&gt; &#xA; &lt;li&gt;V2EX 全站热搜项目&lt;/li&gt; &#xA; &lt;li&gt;Gitee 全站推荐项目&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sspai.com/post/67535&#34;&gt;少数派首页推荐&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitee 最有价值开源项目(&lt;a href=&#34;https://gitee.com/gvp&#34;&gt;GVP&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📕 词库列表&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CET-4&lt;/li&gt; &#xA; &lt;li&gt;CET-6&lt;/li&gt; &#xA; &lt;li&gt;GMAT&lt;/li&gt; &#xA; &lt;li&gt;GRE&lt;/li&gt; &#xA; &lt;li&gt;IELTS&lt;/li&gt; &#xA; &lt;li&gt;SAT&lt;/li&gt; &#xA; &lt;li&gt;TOEFL&lt;/li&gt; &#xA; &lt;li&gt;考研英语&lt;/li&gt; &#xA; &lt;li&gt;专业四级英语&lt;/li&gt; &#xA; &lt;li&gt;专业八级英语&lt;/li&gt; &#xA; &lt;li&gt;Coder Dict 程序员常用词&lt;/li&gt; &#xA; &lt;li&gt;高考&lt;/li&gt; &#xA; &lt;li&gt;中考&lt;/li&gt; &#xA; &lt;li&gt;商务英语&lt;/li&gt; &#xA; &lt;li&gt;BEC&lt;/li&gt; &#xA; &lt;li&gt;人教版英语 3-9 年级&lt;/li&gt; &#xA; &lt;li&gt;王陆雅思王听力语料库 &lt;a href=&#34;https://github.com/ggehuliang&#34;&gt;@Saigyouji_WKKun&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;日语常见词、N1 ～ N5 &lt;a href=&#34;https://github.com/wetery&#34;&gt;@xiaojia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果您需要背诵其他词库，欢迎在 Issue 中提出&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;📗 API 词库&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JavaScript API. &lt;a href=&#34;https://github.com/sdu-gyf&#34;&gt;@sdu-gyf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node.js API. &lt;a href=&#34;https://github.com/chrysalis1215&#34;&gt;@chrysalis1215&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java API. &lt;a href=&#34;https://github.com/SFAfreshman&#34;&gt;@darkSheep&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux Command. &lt;a href=&#34;https://github.com/vhxubo&#34;&gt;@归谜&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C#: List API &lt;a href=&#34;https://github.com/nidbCN&#34;&gt;@nidbCN&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;目前 API 相关词库主要依赖于社区贡献，如果您想贡献自己需要的 API 词库，建议参考 &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/issues/40&#34;&gt;Issue #42&lt;/a&gt; &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/pull/67&#34;&gt;pr #67&lt;/a&gt; 贡献词典。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;🎙 功能与建议&lt;/h2&gt; &#xA;&lt;p&gt;目前项目处于开发初期，新功能正在持续添加中，如果你对软件有任何功能与建议，欢迎在 Issues 中提出&lt;/p&gt; &#xA;&lt;p&gt;项目的进展与未来计划在 &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/issues/42&#34;&gt;Issue&lt;/a&gt; 中详细介绍，内部也包含对未来功能的意见征询等，如果对 Qwerty Learner 的未来感兴趣，欢迎参与讨论。&lt;/p&gt; &#xA;&lt;p&gt;如果你也喜欢本软件的设计思想，欢迎提交 pr，非常感谢你对我们的支持！ &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏄‍♂️ 贡献指南&lt;/h2&gt; &#xA;&lt;p&gt;如果您对本项目感兴趣，我们非常欢迎参与到项目的贡献中，我们会尽可能地提供帮助&lt;/p&gt; &#xA;&lt;p&gt;在贡献前，希望您阅读 &lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/issues/42&#34;&gt;Issue #42&lt;/a&gt; 了解我们目前的开发计划，我们希望您能参与到&#34;计划中&#34;的工作亦或者 Issue 区 Label 为 &#34;Help Wanted&#34; 的工作，我们也非常欢迎您实现自己的想法。&lt;/p&gt; &#xA;&lt;p&gt;如果您确定了想要参与的工作，希望在有基本进展后提交 draft pr，我们可以在 draft pr 上进行讨论，也有利于听取其他 collaborator 的意见。&lt;/p&gt; &#xA;&lt;p&gt;再次感谢您对项目的贡献！🎉&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;☕️ Buy us a coffe&lt;/h2&gt; &#xA;&lt;p&gt;非常感谢大家使用 Qwerty Learner, 目前该网站由三个人用业余时间在维护，我们希望在未来购买独立的域名(目前使用 vercel 部署)，并购买服务器以方便国内用户访问与云同步存储数据。&lt;/p&gt; &#xA;&lt;p&gt;如果您喜欢我们软件，非常感谢您对我们未来的支持!&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Realkai42/qwerty-learner/raw/master/docs/alipay.png&#34; width=&#34;200px&#34;&gt; &#xA;&lt;h2&gt;👨‍💻 Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/Realkai42/qwerty-learner/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=Realkai42/qwerty-learner&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;🎁 大感谢&lt;/h2&gt; &#xA;&lt;h3&gt;灵感来源&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.keybr.com/&#34;&gt;Keybr&lt;/a&gt;&lt;br&gt; 以算法著称，功能非常完善的打字网站，根据用户输入每个字母的正确率与速度生成“伪英语”来帮助用户集中锻炼个别输入较慢的字母。并可以根据用户的输入记录生成完整的分析报告。&lt;/p&gt; &#xA;&lt;p&gt;也是本项目的核心灵感来源，Keybr 更多针对英语为母语的用户。在我使用 Keybr 练习打字时，觉得虽然生成的伪英语能够练习输入不顺畅的个别字母，但并不能提升非母语用户对单词的掌握，于是有了本项目。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.typing.academy&#34;&gt;Typing Academy&lt;/a&gt;&lt;br&gt; 非常优秀的打字练习网站&lt;br&gt; 其优秀的 UI 风格，以及对速度、正确率的展示极大的影响了本项目的 UI 设计&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/webzhd/react-code-game&#34;&gt;react-code-game&lt;/a&gt;&lt;br&gt; 一个非常酷的开源项目，使用 ts 实现，可以在练习打字的同时练习 js 内置 api，项目中添加代码 api 的想法便来源自此项目。 &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;开源项目&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/facebook/create-react-app&#34;&gt;CRA&lt;/a&gt;&lt;br&gt; 完整和详细的文档对初学者非常友好，React 系的文档是我目前自学过程中读过最棒的文档，几乎解决使用中大部分问题。非常感谢 React 对开源世界的贡献，为我们搭建了很好的基础，让初学者也能构建非常棒的软件。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tailwindcss.com/docs&#34;&gt;Tailwindcss&lt;/a&gt;&lt;br&gt; 如果没有 tailwind，这个项目还有再拖一阵子，tailwind 的设计思路解决了 css 入门选手对写复杂 css 的恐惧，让新手以一个非常舒适的方式去设计 UI。 &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;数据来源&lt;/h3&gt; &#xA;&lt;p&gt;字典数据来自于&lt;a href=&#34;https://github.com/kajweb/dict&#34;&gt;kajweb&lt;/a&gt;，项目爬取了常见的字典，也是这个项目让我看到了实现本项目的希望。&lt;/p&gt; &#xA;&lt;p&gt;语音数据来源于&lt;a href=&#34;https://www.youdao.com/&#34;&gt;有道词典&lt;/a&gt;开放 API，感谢有道的贡献让我们这种小项目也可以用上非常专业的发音资源，感谢有道团队以及考神团队为中国教育与中外交流做出的重要贡献。&lt;/p&gt; &#xA;&lt;p&gt;JS API 来自于&lt;a href=&#34;https://github.com/webzhd/react-code-game&#34;&gt;react-code-game&lt;/a&gt; ，感谢项目对 JS API 的爬取与预处理。 &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;项目 Icon&lt;/h3&gt; &#xA;&lt;p&gt;感谢&lt;a href=&#34;https://github.com/libregd&#34;&gt;libregd&lt;/a&gt;提供图标设计，给项目贡献了多个好看的图标设计方案，同时也在项目的进行中提供了设计、建议、未来规划等诸多支持&lt;/p&gt; &#xA;&lt;h3&gt;感谢支持&lt;/h3&gt; &#xA;&lt;p&gt;感谢&lt;a href=&#34;https://github.com/sorrycc&#34;&gt;云谦&lt;/a&gt;、&lt;a href=&#34;https://github.com/shengxinjing&#34;&gt;大圣&lt;/a&gt; 在项目只有十几个 star 时关注了项目，给项目推进下去的动力。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;也感谢在项目初期跟我讨论 idea、提供建议并时不时 Push 一下我的朋友们，没有你们这个 idea 可能还得再拖一年（🐶&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/pearmini&#34;&gt;Pear Mini&lt;/a&gt; ，最开始跟我讨论 idea 给我项目支持，也是他的项目让我相信即使是一个学生的 idea 实现出来也可以很酷。 他的 &lt;a href=&#34;https://github.com/pearmini/gossip&#34;&gt;Gossip&lt;/a&gt; 项目完全是 Next Generation Slides 级别的创意！&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/sailist&#34;&gt;AZ&lt;/a&gt;，鼓励我把 idea 实现出来（虽然我还是拖了很久），他无与伦比的行动力影响了我。他是一个非常酷的 lib maker，写了很多非常棒的 python 库，例如中文语音识别的框架&lt;a href=&#34;https://github.com/sailist/ASRFrame&#34;&gt;ASRFrame&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/chengluyu&#34;&gt;Luyu Cheng&lt;/a&gt;，我认识的最酷的前端大佬，给项目与我的前端自学提供了无尽的帮助。在项目初期帮助我进行技术选型，在开发阶段帮我解决技术问题，为我不知道如何实现的 feature 提供技术思路，也为项目贡献了很多非常受欢迎的 feature。&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Realkai42/qwerty-learner&#34;&gt;&lt;img src=&#34;https://starchart.cc/Realkai42/qwerty-learner.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>