<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-23T01:35:06Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LLM-Red-Team/kimi-free-api</title>
    <updated>2024-03-23T01:35:06Z</updated>
    <id>tag:github.com,2024-03-23:/LLM-Red-Team/kimi-free-api</id>
    <link href="https://github.com/LLM-Red-Team/kimi-free-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 KIMI AI 长文本大模型白嫖服务，支持高速流式输出、联网搜索、长文档解读、图像解析、多轮对话，零配置部署，多路token支持，自动清理会话痕迹。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KIMI AI Free 服务&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/llm-red-team/kimi-free-api.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/llm-red-team/kimi-free-api.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/llm-red-team/kimi-free-api.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/vinlic/kimi-free-api.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;支持高速流式输出、支持多轮对话、支持联网搜索、支持长文档解读、支持图像解析，零配置部署，多路token支持，自动清理会话痕迹。&lt;/p&gt; &#xA;&lt;p&gt;与ChatGPT接口完全兼容。&lt;/p&gt; &#xA;&lt;p&gt;还有以下两个free-api欢迎关注：&lt;/p&gt; &#xA;&lt;p&gt;ZhipuAI (智谱清言) 接口转API &lt;a href=&#34;https://github.com/LLM-Red-Team/glm-free-api&#34;&gt;glm-free-api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;聆心智能 (Emohaa) 接口转API &lt;a href=&#34;https://github.com/LLM-Red-Team/emohaa-free-api&#34;&gt;emohaa-free-api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%A3%B0%E6%98%8E&#34;&gt;声明&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C&#34;&gt;在线体验&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E6%95%88%E6%9E%9C%E7%A4%BA%E4%BE%8B&#34;&gt;效果示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E6%8E%A5%E5%85%A5%E5%87%86%E5%A4%87&#34;&gt;接入准备&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%A4%9A%E8%B4%A6%E5%8F%B7%E6%8E%A5%E5%85%A5&#34;&gt;多账号接入&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#Docker%E9%83%A8%E7%BD%B2&#34;&gt;Docker部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#Docker-compose%E9%83%A8%E7%BD%B2&#34;&gt;Docker-compose部署&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%8E%9F%E7%94%9F%E9%83%A8%E7%BD%B2&#34;&gt;原生部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E6%8E%A5%E5%8F%A3%E5%88%97%E8%A1%A8&#34;&gt;接口列表&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%AF%B9%E8%AF%9D%E8%A1%A5%E5%85%A8&#34;&gt;对话补全&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E6%96%87%E6%A1%A3%E8%A7%A3%E8%AF%BB&#34;&gt;文档解读&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E5%9B%BE%E5%83%8F%E8%A7%A3%E6%9E%90&#34;&gt;图像解析&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9&#34;&gt;注意事项&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/#Nginx%E5%8F%8D%E4%BB%A3%E4%BC%98%E5%8C%96&#34;&gt;Nginx反代优化&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;仅限自用，禁止对外提供服务或商用，避免对官方造成服务压力，否则风险自担！&lt;/p&gt; &#xA;&lt;p&gt;仅限自用，禁止对外提供服务或商用，避免对官方造成服务压力，否则风险自担！&lt;/p&gt; &#xA;&lt;p&gt;仅限自用，禁止对外提供服务或商用，避免对官方造成服务压力，否则风险自担！&lt;/p&gt; &#xA;&lt;h2&gt;在线体验&lt;/h2&gt; &#xA;&lt;p&gt;此链接仅临时测试功能，不可长期使用，长期使用请自行部署。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://udify.app/chat/Po0F6BMJ15q5vu2P&#34;&gt;https://udify.app/chat/Po0F6BMJ15q5vu2P&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;效果示例&lt;/h2&gt; &#xA;&lt;h3&gt;验明正身&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-1.png&#34; alt=&#34;验明正身&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;多轮对话&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-6.png&#34; alt=&#34;多轮对话&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;联网搜索&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-2.png&#34; alt=&#34;联网搜索&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;长文档解读&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-5.png&#34; alt=&#34;长文档解读&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;图像解析&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-3.png&#34; alt=&#34;图像解析&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;响应流畅度一致&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/LLM-Red-Team/kimi-free-api/assets/20235341/48c7ec00-2b03-46c4-95d0-452d3075219b&#34; alt=&#34;响应流畅度一致&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;100线程并发测试&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-7.jpg&#34; alt=&#34;100线程并发测试&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;接入准备&lt;/h2&gt; &#xA;&lt;p&gt;从 &lt;a href=&#34;https://kimi.moonshot.cn&#34;&gt;kimi.moonshot.cn&lt;/a&gt; 获取refresh_token&lt;/p&gt; &#xA;&lt;p&gt;进入kimi随便发起一个对话，然后F12打开开发者工具，从Application &amp;gt; Local Storage中找到&lt;code&gt;refresh_token&lt;/code&gt;的值，这将作为Authorization的Bearer Token值：&lt;code&gt;Authorization: Bearer TOKEN&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-0.png&#34; alt=&#34;example0&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你看到的&lt;code&gt;refresh_token&lt;/code&gt;是一个数组，请使用&lt;code&gt;.&lt;/code&gt;拼接起来再使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LLM-Red-Team/kimi-free-api/master/doc/example-8.jpg&#34; alt=&#34;example8&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;多账号接入&lt;/h3&gt; &#xA;&lt;p&gt;目前kimi限制普通账号每3小时内只能进行30轮长文本的问答，你可以通过提供多个账号的refresh_token并使用&lt;code&gt;,&lt;/code&gt;拼接提供：&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Authorization: Bearer TOKEN1,TOKEN2,TOKEN3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;每次请求服务会从中挑选一个。&lt;/p&gt; &#xA;&lt;h2&gt;Docker部署&lt;/h2&gt; &#xA;&lt;p&gt;请准备一台具有公网IP的服务器并将8000端口开放。&lt;/p&gt; &#xA;&lt;p&gt;拉取镜像并启动服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it -d --init --name kimi-free-api -p 8000:8000 -e TZ=Asia/Shanghai vinlic/kimi-free-api:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查看服务实时日志&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker logs -f kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重启服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker restart kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;停止服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker stop kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker-compose部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  kimi-free-api:&#xA;    container_name: kimi-free-api&#xA;    image: vinlic/kimi-free-api:latest&#xA;    restart: always&#xA;    ports:&#xA;      - &#34;8000:8000&#34;&#xA;    environment:&#xA;      - TZ=Asia/Shanghai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;原生部署&lt;/h2&gt; &#xA;&lt;p&gt;请准备一台具有公网IP的服务器并将8000端口开放。&lt;/p&gt; &#xA;&lt;p&gt;请先安装好Node.js环境并且配置好环境变量，确认node命令可用。&lt;/p&gt; &#xA;&lt;p&gt;安装依赖&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;安装PM2进行进程守护&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i -g pm2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;编译构建，看到dist目录就是构建完成&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pm2 start dist/index.js --name &#34;kimi-free-api&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;查看服务实时日志&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pm2 logs kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;重启服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pm2 reload kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;停止服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pm2 stop kimi-free-api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;接口列表&lt;/h2&gt; &#xA;&lt;p&gt;目前支持与openai兼容的 &lt;code&gt;/v1/chat/completions&lt;/code&gt; 接口，可自行使用与openai或其他兼容的客户端接入接口，或者使用 &lt;a href=&#34;https://dify.ai/&#34;&gt;dify&lt;/a&gt; 等线上服务接入使用。&lt;/p&gt; &#xA;&lt;h3&gt;对话补全&lt;/h3&gt; &#xA;&lt;p&gt;对话补全接口，与openai的 &lt;a href=&#34;https://platform.openai.com/docs/guides/text-generation/chat-completions-api&#34;&gt;chat-completions-api&lt;/a&gt; 兼容。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;POST /v1/chat/completions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;header 需要设置 Authorization 头部：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Authorization: Bearer [refresh_token]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请求数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    // 模型名称随意填写，如果不希望输出检索过程模型名称请包含silent_search&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: &#34;测试&#34;&#xA;        }&#xA;    ],&#xA;    // 是否开启联网搜索，默认false&#xA;    &#34;use_search&#34;: true,&#xA;    // 如果使用SSE流请设置为true，默认false&#xA;    &#34;stream&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: &#34;cnndivilnl96vah411dg&#34;,&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;object&#34;: &#34;chat.completion&#34;,&#xA;    &#34;choices&#34;: [&#xA;        {&#xA;            &#34;index&#34;: 0,&#xA;            &#34;message&#34;: {&#xA;                &#34;role&#34;: &#34;assistant&#34;,&#xA;                &#34;content&#34;: &#34;你好！我是Kimi，由月之暗面科技有限公司开发的人工智能助手。我擅长中英文对话，可以帮助你获取信息、解答疑问，还能阅读和理解你提供的文件和网页内容。如果你有任何问题或需要帮助，随时告诉我！&#34;&#xA;            },&#xA;            &#34;finish_reason&#34;: &#34;stop&#34;&#xA;        }&#xA;    ],&#xA;    &#34;usage&#34;: {&#xA;        &#34;prompt_tokens&#34;: 1,&#xA;        &#34;completion_tokens&#34;: 1,&#xA;        &#34;total_tokens&#34;: 2&#xA;    },&#xA;    &#34;created&#34;: 1710152062&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;文档解读&lt;/h3&gt; &#xA;&lt;p&gt;提供一个可访问的文件URL或者BASE64_URL进行解析。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;POST /v1/chat/completions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;header 需要设置 Authorization 头部：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Authorization: Bearer [refresh_token]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请求数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    // 模型名称随意填写，如果不希望输出检索过程模型名称请包含silent_search&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: [&#xA;                {&#xA;                    &#34;type&#34;: &#34;file&#34;,&#xA;                    &#34;file_url&#34;: {&#xA;                        &#34;url&#34;: &#34;https://mj101-1317487292.cos.ap-shanghai.myqcloud.com/ai/test.pdf&#34;&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &#34;type&#34;: &#34;text&#34;,&#xA;                    &#34;text&#34;: &#34;文档里说了什么？&#34;&#xA;                }&#xA;            ]&#xA;        }&#xA;    ],&#xA;    // 建议关闭联网搜索，防止干扰解读结果&#xA;    &#34;use_search&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: &#34;cnmuo7mcp7f9hjcmihn0&#34;,&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;object&#34;: &#34;chat.completion&#34;,&#xA;    &#34;choices&#34;: [&#xA;        {&#xA;            &#34;index&#34;: 0,&#xA;            &#34;message&#34;: {&#xA;                &#34;role&#34;: &#34;assistant&#34;,&#xA;                &#34;content&#34;: &#34;文档中包含了几个古代魔法咒语的例子，这些咒语来自古希腊和罗马时期的魔法文本，被称为PGM（Papyri Graecae Magicae）。以下是文档中提到的几个咒语的内容：\n\n1. 第一个咒语（PMG 4.1390 – 1495）描述了一个仪式，要求留下一些你吃剩的面包，将其分成七块小片，然后去到英雄、角斗士和那些死于非命的人被杀的地方。对面包片念咒并扔出去，然后从仪式地点捡起一些被污染的泥土扔进你心仪的女人的家中，之后去睡觉。咒语的内容是向命运女神（Moirai）、罗马的命运女神（Fates）和自然力量（Daemons）祈求，希望他们帮助实现愿望。\n\n2. 第二个咒语（PMG 4.1342 – 57）是一个召唤咒语，通过念出一系列神秘的名字和词语来召唤一个名为Daemon的存在，以使一个名为Tereous的人（由Apia所生）受到精神和情感上的折磨，直到她来到施法者Didymos（由Taipiam所生）的身边。\n\n3. 第三个咒语（PGM 4.1265 – 74）提到了一个名为NEPHERIĒRI的神秘名字，这个名字与爱神阿佛洛狄忒（Aphrodite）有关。为了赢得一个美丽女人的心，需要保持三天的纯洁，献上乳香，并在献祭时念出这个名字。然后，在接近那位女士时，心中默念这个名字七次，连续七天这样做，以期成功。\n\n4. 第四个咒语（PGM 4.1496 – 1）描述了在燃烧没药（myrrh）时念诵的咒语。这个咒语是向没药祈祷，希望它能够像“肉食者”和“心灵点燃者”一样，吸引一个名为[名字]的女人（她的母亲名为[名字]），让她无法安坐、饮食、注视或亲吻其他人，而是让她的心中只有施法者，直到她来到施法者身边。\n\n这些咒语反映了古代人们对魔法和超自然力量的信仰，以及他们试图通过这些咒语来影响他人情感和行为的方式。&#34;&#xA;            },&#xA;            &#34;finish_reason&#34;: &#34;stop&#34;&#xA;        }&#xA;    ],&#xA;    &#34;usage&#34;: {&#xA;        &#34;prompt_tokens&#34;: 1,&#xA;        &#34;completion_tokens&#34;: 1,&#xA;        &#34;total_tokens&#34;: 2&#xA;    },&#xA;    &#34;created&#34;: 100920&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;图像解析&lt;/h3&gt; &#xA;&lt;p&gt;提供一个可访问的图像URL或者BASE64_URL进行解析。&lt;/p&gt; &#xA;&lt;p&gt;此格式兼容 &lt;a href=&#34;https://platform.openai.com/docs/guides/vision&#34;&gt;gpt-4-vision-preview&lt;/a&gt; API格式，您也可以用这个格式传送文档进行解析。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;POST /v1/chat/completions&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;header 需要设置 Authorization 头部：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Authorization: Bearer [refresh_token]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;请求数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    // 模型名称随意填写，如果不希望输出检索过程模型名称请包含silent_search&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;messages&#34;: [&#xA;        {&#xA;            &#34;role&#34;: &#34;user&#34;,&#xA;            &#34;content&#34;: [&#xA;                {&#xA;                    &#34;type&#34;: &#34;image_url&#34;,&#xA;                    &#34;image_url&#34;: {&#xA;                        &#34;url&#34;: &#34;https://www.moonshot.cn/assets/logo/normal-dark.png&#34;&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &#34;type&#34;: &#34;text&#34;,&#xA;                    &#34;text&#34;: &#34;图像描述了什么？&#34;&#xA;                }&#xA;            ]&#xA;        }&#xA;    ],&#xA;    // 建议关闭联网搜索，防止干扰解读结果&#xA;    &#34;use_search&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;响应数据：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;id&#34;: &#34;cnn6l8ilnl92l36tu8ag&#34;,&#xA;    &#34;model&#34;: &#34;kimi&#34;,&#xA;    &#34;object&#34;: &#34;chat.completion&#34;,&#xA;    &#34;choices&#34;: [&#xA;        {&#xA;            &#34;index&#34;: 0,&#xA;            &#34;message&#34;: {&#xA;                &#34;role&#34;: &#34;assistant&#34;,&#xA;                &#34;content&#34;: &#34;图像中展示了“Moonshot AI”的字样，这可能是月之暗面科技有限公司（Moonshot AI）的标志或者品牌标识。通常这样的图像用于代表公司或产品，传达品牌信息。由于图像是PNG格式，它可能是一个透明背景的logo，用于网站、应用程序或其他视觉材料中。&#34;&#xA;            },&#xA;            &#34;finish_reason&#34;: &#34;stop&#34;&#xA;        }&#xA;    ],&#xA;    &#34;usage&#34;: {&#xA;        &#34;prompt_tokens&#34;: 1,&#xA;        &#34;completion_tokens&#34;: 1,&#xA;        &#34;total_tokens&#34;: 2&#xA;    },&#xA;    &#34;created&#34;: 1710123627&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;h3&gt;Nginx反代优化&lt;/h3&gt; &#xA;&lt;p&gt;如果您正在使用Nginx反向代理kimi-free-api，请添加以下配置项优化流的输出效果，优化体验感。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;# 关闭代理缓冲。当设置为off时，Nginx会立即将客户端请求发送到后端服务器，并立即将从后端服务器接收到的响应发送回客户端。&#xA;proxy_buffering off;&#xA;# 启用分块传输编码。分块传输编码允许服务器为动态生成的内容分块发送数据，而不需要预先知道内容的大小。&#xA;chunked_transfer_encoding on;&#xA;# 开启TCP_NOPUSH，这告诉Nginx在数据包发送到客户端之前，尽可能地发送数据。这通常在sendfile使用时配合使用，可以提高网络效率。&#xA;tcp_nopush on;&#xA;# 开启TCP_NODELAY，这告诉Nginx不延迟发送数据，立即发送小数据包。在某些情况下，这可以减少网络的延迟。&#xA;tcp_nodelay on;&#xA;# 设置保持连接的超时时间，这里设置为120秒。如果在这段时间内，客户端和服务器之间没有进一步的通信，连接将被关闭。&#xA;keepalive_timeout 120;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Token统计&lt;/h3&gt; &#xA;&lt;p&gt;由于推理侧不再kimi-free-api，因此token不可统计，将以固定数字返回!!!!!&lt;/p&gt;</summary>
  </entry>
</feed>