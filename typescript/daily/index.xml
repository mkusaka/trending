<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-05T01:44:05Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RicardoValdovinos/vite-react-boilerplate</title>
    <updated>2023-08-05T01:44:05Z</updated>
    <id>tag:github.com,2023-08-05:/RicardoValdovinos/vite-react-boilerplate</id>
    <link href="https://github.com/RicardoValdovinos/vite-react-boilerplate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A production ready, scalable starter template for Vite + React&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vite React Boilerplate&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/public/vite-react-boilerplate.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Everything you need to kick off your next Vite + React web app!&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#important-note&#34;&gt;Important Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#preparing-for-deployment&#34;&gt;Preparing for Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#devtools&#34;&gt;DevTools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#installed-packages&#34;&gt;Installed Packages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Built with type safety, scalability, and developer experience in mind. A batteries included Vite + React template.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io&#34;&gt;pnpm&lt;/a&gt; - A strict and efficient alternative to npm with up to 3x faster performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt; - A typed superset of JavaScript designed with large scale applications in mind&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org&#34;&gt;ESLint&lt;/a&gt; - Static code analysis to help find problems within a codebase&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prettier.io&#34;&gt;Prettier&lt;/a&gt; - An opinionated code formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev&#34;&gt;Vite&lt;/a&gt; - Feature rich and highly optimized frontend tooling with TypeScript support out of the box&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev&#34;&gt;React&lt;/a&gt; - A modern front-end JavaScript library for building user interfaces based on components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt; - A utility-first CSS framework packed with classes to build any web design imaginable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://storybook.js.org&#34;&gt;Storybook&lt;/a&gt; - A frontend workshop for building UI components and pages in isolation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/router/v1&#34;&gt;TanStack Router&lt;/a&gt; - Fully typesafe, modern and scalable routing for React applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/query/latest&#34;&gt;TanStack Query&lt;/a&gt; - Declarative, always-up-to-date auto-managed queries and mutations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/table/v8&#34;&gt;TanStack Table&lt;/a&gt; - Headless UI for building powerful tables &amp;amp; datagrids&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zustand-demo.pmnd.rs&#34;&gt;Zustand&lt;/a&gt; - An unopinionated, small, fast and scalable bearbones state-management solution&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-hook-form.com&#34;&gt;React Hook Form&lt;/a&gt; - Performant, flexible and extensible forms with easy-to-use validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zod.dev&#34;&gt;Zod&lt;/a&gt; - TypeScript-first schema validation with static type inference&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing-library.com&#34;&gt;React Testing Library&lt;/a&gt; - A very light-weight, best practice first, solution for testing React components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitest.dev&#34;&gt;Vitest&lt;/a&gt; - A blazing fast unit test framework powered by Vite&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev&#34;&gt;Playwright&lt;/a&gt; - Enables reliable end-to-end testing for modern web apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nivo.rocks&#34;&gt;Nivo&lt;/a&gt; - A rich set of data vizualization components, built on top of D3 and React&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fakerjs.dev/&#34;&gt;Faker&lt;/a&gt; - Generate massive amounts of fake (but realistic) data for testing and development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typicode/husky#readme&#34;&gt;Husky&lt;/a&gt; + &lt;a href=&#34;https://github.com/commitizen/cz-cli#readme&#34;&gt;Commitizen&lt;/a&gt; + &lt;a href=&#34;https://github.com/conventional-changelog/commitlint#readme&#34;&gt;Commitlint&lt;/a&gt; - Git hooks and commit linting to ensure use of descriptive and practical commit messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/total-typescript/ts-reset#readme&#34;&gt;ts-reset&lt;/a&gt; - Improvements for TypeScripts built-in typings for use in applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; - Containerization tool for deploying your vite-react-boilerplate app&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A more detailed list of the included packages can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#installed-packages&#34;&gt;Installed Packages&lt;/a&gt; section. Packages not shown above include Devtools, ui helper libraries, and eslint plugins/configs.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;NodeJS 18+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io&#34;&gt;pnpm&lt;/a&gt; (or equivalent)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to use the included Dockerfile then &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; is required as well:&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Getting started is a simple as cloning the repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:RicardoValdovinos/vite-react-boilerplate.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Changing into the new directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd vite-react-boilerplate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Removing the .git folder (and any additional files, folders or dependencies you may not need)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf .git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And running the setup script (initializes git repository and husky and installs playwright)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congrats! You&#39;re ready to starting working on that new project!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d rather run the commands above in one go, check out the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:RicardoValdovinos/vite-react-boilerplate.git &amp;amp;&amp;amp;\&#xA;cd vite-react-boilerplate &amp;amp;&amp;amp;\&#xA;rm -rf .git &amp;amp;&amp;amp;\&#xA;pnpm install &amp;amp;&amp;amp;\&#xA;pnpm run setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This project comes with two git hooks added by &lt;a href=&#34;https://typicode.github.io/husky/&#34;&gt;husky&lt;/a&gt;. A prepare-commit-msg hook to run the &lt;a href=&#34;https://github.com/commitizen/cz-cli#readme&#34;&gt;Commitizen&lt;/a&gt; cli for those nice commit messages and a commit-msg hook to run &lt;a href=&#34;https://commitlint.js.org/#/&#34;&gt;Commitlint&lt;/a&gt; on the message itself. Commitlint will ensure the commit message follows the &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/&#34;&gt;Conventional Commits specification&lt;/a&gt; (it will if you used commitizen).&lt;/p&gt; &#xA;&lt;p&gt;If you wish to remove any hooks, simply delete the corresponding file in the .husky directory.&lt;/p&gt; &#xA;&lt;h2&gt;Important Note&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;This project should be used as a &lt;em&gt;starting point&lt;/em&gt; for either learning or development.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Beginners&lt;/strong&gt; - If you are unfamiliar with the included dependencies, tools, or concepts, you should use this as a jumping off point for further study. Understand what you may or may not need for your given problem domain and how this template can help you achieve that.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced Users&lt;/strong&gt; - This template was built to be flexible. All dependencies, with the exception of Vite and React of course, are easily removeable or replaceable.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This boilerplate project does not currently include a demo. At most, a few utilities (types, devtools, initial home page routes) are included. There is no glue to get in your way when trying to modify the template.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Due to empty directories not being included in git commits, placeholder README files have been added to these empty directories. These README files contain simple descriptions about how the different directories in the accompanying folder structure may be used. As an example check out the &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/src/components/README.md&#34;&gt;recommended component organizational structure&lt;/a&gt; as well as the &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/src/features/README.md&#34;&gt;recommended folder structure&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://fakerjs.dev/&#34;&gt;Faker&lt;/a&gt; is included to encourage more isolated testing and allow for rapid development of demos and MVPs. However, please make note that, &lt;a href=&#34;https://github.com/faker-js/faker/issues/1791&#34;&gt;due to a bug&lt;/a&gt;, importing Faker from the main package (without a locale) will result in the entire Faker lib being imported causing bundle sizes to increase up to 2+ MB. Instead prefer &lt;a href=&#34;https://fakerjs.dev/guide/localization.html#individual-localized-packages&#34;&gt;localized imports&lt;/a&gt; as shown below.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;// import { faker } from &#39;@faker-js/faker&#39;;&#xA;import { faker } from &#39;@faker-js/faker/locale/en&#39;; // prefer localization when possible&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The imported lib will instead be around 600 KB. Nonetheless, Faker should &lt;strong&gt;NOT&lt;/strong&gt; be used in production and instead be limited to testing and demos.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Unit testing is handled by React Testing Library and Vitest while End-to-End (E2E) Testing is conducted by Playwright.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to run all tests, Unit and E2E alike, execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unit Testing&lt;/h3&gt; &#xA;&lt;p&gt;When running unit test scripts, it is assumed that unit tests will be colocated with the source files. Take a look at the placeholder README file in &lt;code&gt;src/components&lt;/code&gt; for &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/src/components/README.md&#34;&gt;an example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to execute unit tests specifically, the below command will execute vitest:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run test:unit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If instead you are interested in coverage reporting, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run test:unit:coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All unit tests run in watch mode by default. If you&#39;d like to disable watch mode, change the package.json test scripts with the following&lt;/p&gt; &#xA;&lt;p&gt;before:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;scripts&#34;: {&#xA;  &#x9;&#34;test:unit&#34;: &#34;vitest src/&#34;,&#xA;&#x9;&#34;test:unit:coverage&#34;: &#34;vitest --coverage src/&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;scripts&#34;: {&#xA;  &#x9;&#34;test:unit&#34;: &#34;vitest run src/&#34;,&#xA;&#x9;&#34;test:unit:coverage&#34;: &#34;vitest run --coverage src/&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Faker is included to provide mock data. See the &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#important-notes&#34;&gt;Important Notes&lt;/a&gt; section for crucial details regarding this package. Specifically, point 4.&lt;/p&gt; &#xA;&lt;h3&gt;End-to-End (E2E) Testing&lt;/h3&gt; &#xA;&lt;p&gt;Running E2E tests use a similar syntax to running unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run test:e2e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to see the reports, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run test:e2e:report&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preparing for Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Instructions are provided for deploying both with and without Docker. Both options still require a platform to host the application.&lt;/p&gt; &#xA;&lt;h3&gt;Without Docker&lt;/h3&gt; &#xA;&lt;p&gt;Deploying is as easy as running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and pointing your web server to the generated &lt;code&gt;index.html&lt;/code&gt; file found at &lt;code&gt;dist/index.html&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;p&gt;A Dockerfile with an &lt;a href=&#34;https://www.nginx.com&#34;&gt;NGINX&lt;/a&gt; base image is also provided for quick and easy deployments. Simply execute the following commands:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;pnpm run build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker build . -t &amp;lt;container_name&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;docker build . -t todo-app&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker run -p &amp;lt;port_number&amp;gt;:80 &amp;lt;container_name&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;docker run todo-app -p 8080:80&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Continuous Integration&lt;/h3&gt; &#xA;&lt;p&gt;Due to the vast array of tools, opinions, requirements and preferences a CI template is not included in this project.&lt;/p&gt; &#xA;&lt;h2&gt;Devtools&lt;/h2&gt; &#xA;&lt;p&gt;This project includes a set of Devtools. Some are additional package dependencies whereas others come built-in to the packages themselves.&lt;/p&gt; &#xA;&lt;h3&gt;Devtool dependencies:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/query/v4/docs/react/devtools&#34;&gt;@tanstack/react-query-devtools&lt;/a&gt; - Dedicated dev tools to help visualize the inner workings of React Query&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/router/v1/docs/devtools&#34;&gt;@tanstack/router-devtools&lt;/a&gt; - Dedicated dev tools to help visualize the inner workings of TanStack Router&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@tanstack/react-table-devtools&#34;&gt;@tanstack/react-table-devtools&lt;/a&gt; - Dedicated dev tools to help visualize the inner workings of TanStack Table&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-hook-form.com/dev-tools&#34;&gt;@hookform/DevTools&lt;/a&gt; - React Hook Form DevTools to help debug forms with validation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A set of utility components are provided in &lt;code&gt;src/components/utils/development-tools/&lt;/code&gt;. These &lt;a href=&#34;https://tanstack.com/router/v1/docs/devtools#only-importing-and-using-devtools-in-developmentgit&#34;&gt;wrapper components&lt;/a&gt; check whether the application is running in development or production mode and render the component or null respectively. In other words, you can confidently use them during development without having to worry about them showing up for end users in production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TanStack Query Devtools&lt;/strong&gt; are ready to go out of the box. The development vs. production rendering mechanism is built into the devtools. If you do wish to &lt;a href=&#34;https://tanstack.com/query/latest/docs/react/devtools&#34;&gt;render the devtools in production&lt;/a&gt; you can freely do so by following the TanStack Query Devtools documentation. The devtools component can be found in &lt;code&gt;src/App.tsx&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When running the application in development mode you can find the TanStack Query Devtools icon in the bottom left corner of the page sporting the &lt;a href=&#34;https://img.stackshare.io/service/25599/default_c6db7125f2c663e452ba211df91b2ced3bb7f0ff.png&#34;&gt;React Query Logo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TanStack Router Devtools&lt;/strong&gt;, however, utilizes its respective utility component in this project. The initial setup has been taken care of but if you wish to modify or remove the component, have a look in &lt;code&gt;src/App.tsx&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The TanStack Router Devtools icon can be found in the bottom right corner of the page denoted by the vertically stacked &#34;TANSTACK ROUTER&#34; logo.&lt;/p&gt; &#xA;&lt;p&gt;The above components, along with their imports, are commented out to start.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TanStack Table Devtools&lt;/strong&gt; Documentation is, at the time of writing this, non-existent. Having said that, usage is similar to the other TanStack devtools. A utility component restricting the devtools to development builds has been provided. The difference in comparison to the other TanStack devtools is the lack of floating mode. Instead, the Devtools are rendered as a component within the actual TanStack Table you define. An additional caveat being that the DevTools component (built-in and provided utility alike) require a table prop from the &lt;code&gt;useReactTable()&lt;/code&gt; hook. In other words, if you have multiple tables, each table must have its own Devtools component. Check the simplified code below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;function Table(): FunctionComponent {&#xA;  /* some code */&#xA;&#xA;  const table = useReactTable({&#xA;    data,&#xA;    columns,&#xA;    getCoreRowModel: getCoreRowModel(),&#xA;  });&#xA;&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      {/* table code */}&#xA;      &amp;lt;TanStackTableDevelopmentTools table={table} /&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;React Hook Form DevTools&lt;/strong&gt; icon can be recognized in the top right corner of the page by the pink React Hook Form clipboard logo. A utility component has also provided. Like the TanStack Table Devtools component above, a prop must be passed from a specific hook. In this case, it is the control prop from the &lt;code&gt;useForm()&lt;/code&gt; hook. Similar to TanStack Table, use of React Hook Form DevTools requires the component be added to each unique form. More information can be found in the &lt;a href=&#34;https://react-hook-form.com/dev-tools&#34;&gt;React Hook Form DevTools documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To reiterate, if you wish to restrict the Devtools to development builds use the provided components found at &lt;code&gt;src/components/utils/development-tools&lt;/code&gt; instead of the built-in components from their respective modules.&lt;/p&gt; &#xA;&lt;h3&gt;Built-in Devtools:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zustand&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Zustand&lt;/strong&gt; provides a built-in &lt;a href=&#34;https://github.com/pmndrs/zustand#redux-devtools&#34;&gt;devtools middleware&lt;/a&gt; for use with &lt;a href=&#34;https://github.com/reduxjs/redux-devtools#redux-devtools&#34;&gt;Redux DevTools&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installed Packages&lt;/h2&gt; &#xA;&lt;p&gt;A simplified list can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/RicardoValdovinos/vite-react-boilerplate/main/#overview&#34;&gt;Overview&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h3&gt;Base&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitejs.dev&#34;&gt;Vite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Routing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/router/v1&#34;&gt;TanStack Router&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linting &amp;amp; Formatting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org&#34;&gt;ESLint&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://typescript-eslint.io&#34;&gt;typescript-eslint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/prettier/eslint-config-prettier#readme&#34;&gt;eslint-config-prettier&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/jsx-eslint/eslint-plugin-react#readme&#34;&gt;eslint-plugin-react&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-react-hooks&#34;&gt;eslint-plugin-react-hooks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ArnaudBarre/eslint-plugin-react-refresh&#34;&gt;eslint-plugin-react-refresh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sindresorhus/eslint-plugin-unicorn#readme&#34;&gt;eslint-plugin-unicorn&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/storybookjs/eslint-plugin-storybook#readme&#34;&gt;eslint-plugin-storybook&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prettier.io&#34;&gt;Prettier&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;State Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/query/latest&#34;&gt;TanStack Query (React Query)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zustand-demo.pmnd.rs&#34;&gt;Zustand&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://headlessui.com&#34;&gt;HeadlessUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://heroicons.com&#34;&gt;heroicons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/table/v8&#34;&gt;TanStack Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://storybook.js.org&#34;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Forms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-hook-form.com&#34;&gt;React Hook Form&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zod.dev&#34;&gt;Zod&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Data Visualization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nivo.rocks&#34;&gt;Nivo&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nivo.rocks/line/&#34;&gt;Line&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nivo.rocks/bar/&#34;&gt;Bar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nivo.rocks/pie/&#34;&gt;Pie&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vitest.dev&#34;&gt;Vitest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing-library.com/docs/react-testing-library/intro/&#34;&gt;React Testing Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev&#34;&gt;Playwright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/query/latest/docs/react/devtools?from=reactQueryV3&amp;amp;original=https%3A%2F%2Ftanstack.com%2Fquery%2Fv3%2Fdocs%2Fdevtools&#34;&gt;TanStack Query Devtools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tanstack.com/router/v1/docs/devtools&#34;&gt;TanStack Router Devtools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/@tanstack/react-table-devtools&#34;&gt;TanStack Table Devtools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-hook-form.com/dev-tools&#34;&gt;React Hook Form DevTools&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typicode/husky#readme&#34;&gt;Husky&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/commitizen/cz-cli#readme&#34;&gt;Commitizen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/conventional-changelog/commitlint#readme&#34;&gt;Commitlint&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/total-typescript/ts-reset#readme&#34;&gt;ts-reset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fakerjs.dev/&#34;&gt;Faker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/azurechatgpt</title>
    <updated>2023-08-05T01:44:05Z</updated>
    <id>tag:github.com,2023-08-05:/microsoft/azurechatgpt</id>
    <link href="https://github.com/microsoft/azurechatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Azure ChatGPT: Private &amp; secure ChatGPT for internal enterprise use 💼&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unleash the Power of Azure Open AI&lt;/h1&gt; &#xA;&lt;p&gt;ChatGPT has grown explosively in popularity as we all know now. Business users across the globe often tap into the public service to work more productively or act as a creative assistant.&lt;/p&gt; &#xA;&lt;p&gt;However, ChatGPT risks exposing confidential intellectual property. One option is to block corporate access to ChatGPT, but people always find workarounds. This also limits the powerful capabilities of ChatGPT and reduces employee productivity and their work experience.&lt;/p&gt; &#xA;&lt;p&gt;Azure ChatGPT is our enterprise option. This is the exact same service but offered as your private ChatGPT.&lt;/p&gt; &#xA;&lt;h3&gt;Benefits are:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Private:&lt;/strong&gt; Built-in guarantees around the privacy of your data and fully isolated from those operated by OpenAI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Controlled:&lt;/strong&gt; Network traffic can be fully isolated to your network and other enterprise grade security controls are built in.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Value:&lt;/strong&gt; Deliver added business value with your own internal data sources (plug and play) or use plug-ins to integrate with your internal services (e.g., ServiceNow, etc).&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve built a Solution Accelerator to empower your workforce with Azure ChatGPT.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/images/intro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;📘 Prerequisites&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/products/cognitive-services/openai-service/&#34;&gt;Azure OpenAI&lt;/a&gt;: To deploy and run ChatGPT on Azure, you&#39;ll need an Azure subscription with access to the Azure OpenAI service. Request access &lt;a href=&#34;https://customervoice.microsoft.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR7en2Ais5pxKtso_Pz4b1_xUOFA5Qk1UWDRBMjg0WFhPMkIzTzhKQ1dWNyQlQCN0PWcu&#34;&gt;here&lt;/a&gt;. Once you have access, follow the instructions in this &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/create-resource?pivots=web-portal&#34;&gt;link&lt;/a&gt; to deploy the gpt-35-turbo or gpt-4 models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setup GitHub or Azure AD for Authentication: The &lt;a href=&#34;https://github.com/oliverlabs/azurechatgpt#-add-an-identity-provider&#34;&gt;add an identity provider&lt;/a&gt; section below shows how to configure authentication providers.&lt;/p&gt; &lt;p&gt;💡Note: You can configure the authentication provider to your identity solution using &lt;a href=&#34;https://next-auth.js.org/providers/&#34;&gt;NextAuth providers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;👋🏻 Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Azure ChatGPT is built with the following technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.js 18&lt;/a&gt;: an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js 13&lt;/a&gt;: enables you to create full-stack web applications by extending the latest React features&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://next-auth.js.org/&#34;&gt;NextAuth.js&lt;/a&gt;: configurable authentication framework for Next.js 13&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.langchain.com/&#34;&gt;LangChain JS&lt;/a&gt;: AI orchestration layer to build intelligent apps&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;: is a utility-first CSS framework that provides a series of predefined classes that can be used to style each element by mixing and matching&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;shadcn/ui&lt;/a&gt;: re-usable components built using Radix UI and Tailwind CSS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-GB/azure/cosmos-db/nosql/&#34;&gt;Azure Cosmos DB&lt;/a&gt;: fully managed platform-as-a-service (PaaS) NoSQL database to store chat history&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/app-service/&#34;&gt;Azure App Service&lt;/a&gt;: fully managed platform-as-a-service (PaaS) for hosting web applications, REST APIs, and mobile back ends.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/images/architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;💙 One click Azure deployment&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://aka.ms/anzappazurechatgpt&#34;&gt;&lt;img src=&#34;https://aka.ms/deploytoazurebutton&#34; alt=&#34;Deploy to Azure&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click on the Deploy to Azure button and configure your settings in the Azure Portal as described in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/#%F0%9F%94%91-environment-variables&#34;&gt;Environment variables&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/#%F0%9F%AA%AA-add-an-identity-provider&#34;&gt;section below&lt;/a&gt; for important information about adding authentication to your app.&lt;/p&gt; &#xA;&lt;h1&gt;👨🏻‍💻 Run from your local machine&lt;/h1&gt; &#xA;&lt;p&gt;Clone this repository locally or fork to your Github account. Run all of the the steps below from the &#34;src&#34; directory.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you deploy an instance of Cosmos DB in your Azure Subscription&lt;/li&gt; &#xA; &lt;li&gt;Create a new file named &lt;code&gt;.env.local&lt;/code&gt; to store the environment variables add the following variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Do not use double-quotes and do not delete any of the variables.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure that &lt;code&gt;NEXTAUTH_URL=http://localhost:3000&lt;/code&gt; has no comments in the same line.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# Azure OpenAI configuration&#xA;AZURE_OPENAI_API_KEY=&#xA;AZURE_OPENAI_API_INSTANCE_NAME=&#xA;AZURE_OPENAI_API_DEPLOYMENT_NAME=&#xA;AZURE_OPENAI_API_VERSION=&#xA;&#xA;# GitHub OAuth app configuration&#xA;AUTH_GITHUB_ID=&#xA;AUTH_GITHUB_SECRET=&#xA;&#xA;# Azure AD OAuth app configuration&#xA;AZURE_AD_CLIENT_ID=&#xA;AZURE_AD_CLIENT_SECRET=&#xA;AZURE_AD_TENANT_ID=&#xA;&#xA;# When deploying to production,&#xA;# set the NEXTAUTH_URL environment variable to the canonical URL of your site.&#xA;# More information: https://next-auth.js.org/configuration/options&#xA;&#xA;NEXTAUTH_SECRET=&#xA;NEXTAUTH_URL=http://localhost:3000&#xA;&#xA;AZURE_COSMOSDB_URI=&#xA;AZURE_COSMOSDB_KEY=&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;change the active directory to be &lt;code&gt;src&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install npm packages by running &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the project by running &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should now be prompted to login with your chosen OAuth provider. Once successfully logged in, you can start creating new conversations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/images/chat-home.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/images/chat-history.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;☁️ Deploy to Azure - GitHub Actions&lt;/h1&gt; &#xA;&lt;h3&gt;🧬 Fork the repository&lt;/h3&gt; &#xA;&lt;p&gt;Fork this repository to your own organisation so that you can execute GitHub Actions against your own Azure Subscription.&lt;/p&gt; &#xA;&lt;h3&gt;🗝️ Configure secrets in your GitHub repository&lt;/h3&gt; &#xA;&lt;h3&gt;1. AZURE_CREDENTIALS&lt;/h3&gt; &#xA;&lt;p&gt;The GitHub workflow requires a secret named &lt;code&gt;AZURE_CREDENTIALS&lt;/code&gt; to authenticate with Azure. The secret contains the credentials for a service principal with the Contributor role on the resource group containing the container app and container registry.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a service principal with the Contributor role on the resource group that contains the Azure App Service.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;az ad sp create-for-rbac&#xA;   --name &amp;lt;NAME OF THE CREDENTIAL&amp;gt; --role contributor --scopes /subscriptions/&amp;lt;SUBSCRIPTION ID&amp;gt;/resourceGroups/&amp;lt;RESOURCE GROUP&amp;gt; --sdk-auth --output json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the JSON output from the command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the GitHub repository, navigate to Settings &amp;gt; Secrets &amp;gt; Actions and select New repository secret.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter &lt;code&gt;AZURE_CREDENTIALS&lt;/code&gt; as the name and paste the contents of the JSON output as the value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;Add secret&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;2. AZURE_APP_SERVICE_NAME&lt;/h3&gt; &#xA;&lt;p&gt;Under the same repository secrets add a new variable &lt;code&gt;AZURE_APP_SERVICE_NAME&lt;/code&gt; to deploy to your Azure Web app. The value of this secret is the name of your Azure Web app e.g. &lt;code&gt;my-web-app-name&lt;/code&gt; from the domain &lt;a href=&#34;https://my-web-app-name.azurewebsites.net/&#34;&gt;https://my-web-app-name.azurewebsites.net/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🔄 Run GitHub Actions&lt;/h3&gt; &#xA;&lt;p&gt;Once the secrets are configured, the GitHub Actions will be triggered for every code push to the repository. Alternatively, you can manually run the workflow by clicking on the &#34;Run Workflow&#34; button in the Actions tab in GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/azurechatgpt/main/images/runworkflow.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🪪 Add an identity provider&lt;/h1&gt; &#xA;&lt;p&gt;Once the deployment is complete, you will need to add an identity provider to authenticate your app.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ Note: Only one of the identity provider is required below.&lt;/p&gt; &#xA;&lt;h2&gt;GitHub Authentication provider&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ll create two GitHub apps: one for testing locally and another for production.&lt;/p&gt; &#xA;&lt;h3&gt;🟡 Development app setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to GitHub OAuth Apps setup &lt;a href=&#34;https://github.com/settings/developers&#34;&gt;https://github.com/settings/developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;New OAuth App&lt;/code&gt; &lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt;https://github.com/settings/applications/new&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in the following details&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Application name: Azure ChatGPT DEV Environment&#xA;Homepage URL: http://localhost:3000&#xA;Authorization callback URL: http://localhost:3000/api/auth/callback/github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🟢 Production app setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to GitHub OAuth Apps setup &lt;a href=&#34;https://github.com/settings/developers&#34;&gt;https://github.com/settings/developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;New OAuth App&lt;/code&gt; &lt;a href=&#34;https://github.com/settings/applications/new&#34;&gt;https://github.com/settings/applications/new&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in the following details&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Application name: Azure ChatGPT Production&#xA;Homepage URL: https://YOUR-WEBSITE-NAME.azurewebsites.net&#xA;Authorization callback URL: https://YOUR-WEBSITE-NAME.azurewebsites.net/api/auth/callback/github&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ After completing app setup, ensure your environment variables locally and on Azure App Service are up to date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   # GitHub OAuth app configuration&#xA;   AUTH_GITHUB_ID=&#xA;   AUTH_GITHUB_SECRET=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Azure AD Authentication provider&lt;/h2&gt; &#xA;&lt;h3&gt;🟡 Development app setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to Azure AD Apps setup &lt;a href=&#34;https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps&#34;&gt;https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;New Registration&lt;/code&gt; &lt;a href=&#34;https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/CreateApplicationBlade/quickStartType~/null/isMSAApp~/false&#34;&gt;https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/CreateApplicationBlade/quickStartType~/null/isMSAApp~/false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in the following details&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Application name: Azure ChatGPT DEV Environment&#xA;Supported account types: Accounts in this organizational directory only&#xA;Redirect URI Platform: Web&#xA;Redirect URI: http://localhost:3000/api/auth/callback/azure-ad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🟢 Production app setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to Azure AD Apps setup &lt;a href=&#34;https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps&#34;&gt;https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;New Registration&lt;/code&gt; &lt;a href=&#34;https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/CreateApplicationBlade/quickStartType~/null/isMSAApp~/false&#34;&gt;https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/CreateApplicationBlade/quickStartType~/null/isMSAApp~/false&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fill in the following details&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Application name: Azure ChatGPT Production&#xA;Supported account types: Accounts in this organizational directory only&#xA;Redirect URI Platform: Web&#xA;Redirect URI: https://YOUR-WEBSITE-NAME.azurewebsites.net/api/auth/callback/azure-ad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ After completing app setup, ensure your environment variables locally and on Azure App Service are up to date.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Azure AD OAuth app configuration&#xA;&#xA;AZURE_AD_CLIENT_ID=&#xA;AZURE_AD_CLIENT_SECRET=&#xA;AZURE_AD_TENANT_ID=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔑 Environment variables&lt;/h2&gt; &#xA;&lt;p&gt;Below are the required environment variables, to be added to the Azure Portal or in the &lt;code&gt;.env.local&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Setting&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API keys of your Azure OpenAI resource&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_OPENAI_API_INSTANCE_NAME&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;the name of your Azure OpenAI resource&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_OPENAI_API_DEPLOYMENT_NAME&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The name of your model deployment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_OPENAI_API_VERSION&lt;/td&gt; &#xA;   &lt;td&gt;2023-03-15-preview&lt;/td&gt; &#xA;   &lt;td&gt;API version when using gpt chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AUTH_GITHUB_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client ID of your GitHub OAuth application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AUTH_GITHUB_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client Secret of your GitHub OAuth application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXTAUTH_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Used to encrypt the NextAuth.js JWT, and to hash email verification tokens. &lt;strong&gt;This set by default as part of the deployment template&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXTAUTH_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Current webs hosting domain name with HTTP or HTTPS. &lt;strong&gt;This set by default as part of the deployment template&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_COSMOSDB_URI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URL of the Azure CosmosDB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_COSMOSDB_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API Key for Azure Cosmos DB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_AD_CLIENT_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client id specific to the application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_AD_CLIENT_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client secret specific to the application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_AD_TENANT_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The organisation Tenant ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>psychic-api/rag-stack</title>
    <updated>2023-08-05T01:44:05Z</updated>
    <id>tag:github.com,2023-08-05:/psychic-api/rag-stack</id>
    <link href="https://github.com/psychic-api/rag-stack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Deploy a private ChatGPT alternative hosted within your VPC. 🔮 Connect it to your organization&#39;s knowledge base and use it as a corporate oracle. Supports open-source LLMs like Llama 2, Falcon, and GPT4All.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🧺 RAGstack&lt;/h1&gt; &#xA;&lt;p&gt;Deploy a private ChatGPT alternative hosted within your VPC. Connect it to your organization&#39;s knowledge base and use it as a corporate oracle. Supports open-source LLMs like Llama 2, Falcon, and GPT4All.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/vhxm8qMQc&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1131844815005429790?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/psychicapi/rag-stack/issues?q=is%3Aissue+is%3Aclosed&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed/psychicapi/psychic?color=blue&#34; alt=&#34;Issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/psychicapi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/psychicapi?style=social&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Retrieval Augmented Generation (RAG)&lt;/strong&gt; is a technique where the capabilities of a large language model (LLM) are augmented by retrieving information from other systems and inserting them into the LLM’s context window via a prompt. This gives LLMs information beyond what was provided in their training data, which is necessary for almost every enterprise use case. Examples include data from current web pages, data from SaaS apps like Confluence or Salesforce, and data from documents like sales contracts and PDFs.&lt;/p&gt; &#xA;&lt;p&gt;RAG works better than fine-tuning the model because it’s cheaper, it’s faster, and it’s more reliable since the source of information is provided with each response.&lt;/p&gt; &#xA;&lt;p&gt;RAGstack deploys the following resources for retrieval-augmented generation:&lt;/p&gt; &#xA;&lt;h3&gt;Open-source LLM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GPT4All: When you run locally, RAGstack will download and deploy Nomic AI&#39;s &lt;a href=&#34;https://github.com/nomic-ai/gpt4all&#34;&gt;gpt4all&lt;/a&gt; model, which runs on consumer CPUs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Falcon-7b: On the cloud, RAGstack deploys Technology Innovation Institute&#39;s &lt;a href=&#34;https://huggingface.co/tiiuae/falcon-7b&#34;&gt;falcon-7b&lt;/a&gt; model onto a GPU-enabled GKE cluster.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LLama 2: On the cloud, RAGstack can also deploy the 7B paramter version of Meta&#39;s &lt;a href=&#34;https://ai.meta.com/llama/&#34;&gt;Llama 2&lt;/a&gt; model onto a GPU-enabled GKE cluster.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Vector database&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;Qdrant&lt;/a&gt;: Qdrant is an open-source vector database written in Rust, so it&#39;s highly performant and self-hostable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Server + UI&lt;/h3&gt; &#xA;&lt;p&gt;Simple server and UI that handles PDF upload, so that you can chat over your PDFs using Qdrant and the open-source LLM of choice. &lt;img width=&#34;800&#34; alt=&#34;Screenshot 2023-08-02 at 9 22 27 PM&#34; src=&#34;https://github.com/psychic-api/rag-stack/assets/14931371/385f07d0-765f-4afd-b2da-88c3126184b7&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run locally&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;ragstack-ui/local.env&lt;/code&gt; into &lt;code&gt;ragstack-ui/.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;scripts/local/run-dev&lt;/code&gt;. This will download &lt;a href=&#34;https://gpt4all.io/models/ggml-gpt4all-j-v1.3-groovy.bin&#34;&gt;ggml-gpt4all-j-v1.3-groovy.bin&lt;/a&gt; into &lt;code&gt;server/llm/local/&lt;/code&gt; and run the server, LLM, and Qdrant vector database locally.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All services will be ready once you see the following message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;INFO:     Application startup complete.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy to Google Cloud&lt;/h2&gt; &#xA;&lt;p&gt;To deploy the RAG stack using &lt;code&gt;Falcon-7B&lt;/code&gt; running on GPUs to your own google cloud instance, go through the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;scripts/gcp/deploy-gcp.sh&lt;/code&gt;. This will prompt you for your GCP project ID, service account key file, and region as well as some other parameters (model, HuggingFace token etc).&lt;/li&gt; &#xA; &lt;li&gt;If you get an error on the &lt;code&gt;Falcon-7B&lt;/code&gt; deployment step, run the following commands and then run &lt;code&gt;scripts/gcp/deploy-gcp.sh&lt;/code&gt; again:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;gcloud config set compute/zone YOUR-REGION-HERE&#xA;gcloud container clusters get-credentials gpu-cluster&#xA;kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatform/container-engine-accelerators/master/nvidia-driver-installer/cos/daemonset-preloaded.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The deployment script was implemented using Terraform.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;You can run the frontend by creating a &lt;code&gt;.env&lt;/code&gt; file in &lt;code&gt;ragstack-ui&lt;/code&gt; and setting &lt;code&gt;VITE_SERVER_URL&lt;/code&gt; to the url of the &lt;code&gt;ragstack-server&lt;/code&gt; instance in your Google Cloud run.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Deploy to AWS&lt;/h2&gt; &#xA;&lt;p&gt;To deploy the RAG stack using &lt;code&gt;Falcon-7B&lt;/code&gt; running on GPUs to your own AWS EC2 instances (using ECS), go through the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;scripts/aws/deploy-aws.sh&lt;/code&gt;. This will prompt you for your AWS credentials as well as some other parameters (model, HuggingFace token etc).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The deployment script was implemented using Terraform.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;You can run the frontend by creating a &lt;code&gt;.env&lt;/code&gt; file in &lt;code&gt;ragstack-ui&lt;/code&gt; and setting &lt;code&gt;VITE_SERVER_URL&lt;/code&gt; to the url of the ALB instance.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Deploy to Azure&lt;/h2&gt; &#xA;&lt;p&gt;To deploy the RAG stack using &lt;code&gt;Falcon-7B&lt;/code&gt; running on GPUs to your own AKS, go through the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./azure/deploy-aks.sh&lt;/code&gt;. This will prompt you for your AKS subscription as well as some other parameters (model, HuggingFace token etc).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The deployment script was implemented using Terraform.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can run the frontend by creating a &lt;code&gt;.env&lt;/code&gt; file in &lt;code&gt;ragstack-ui&lt;/code&gt; and setting &lt;code&gt;VITE_SERVER_URL&lt;/code&gt; to the url of the &lt;code&gt;ragstack-server&lt;/code&gt; service in your AKS.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Please note that this AKS deployment is using node pool with NVIDIA Tesla T4 Accelerator which is not in all subscriptions available&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ GPT4all support&lt;/li&gt; &#xA; &lt;li&gt;✅ Falcon-7b support&lt;/li&gt; &#xA; &lt;li&gt;✅ Deployment on GCP&lt;/li&gt; &#xA; &lt;li&gt;✅ Deployment on AWS&lt;/li&gt; &#xA; &lt;li&gt;✅ Deployment on Azure&lt;/li&gt; &#xA; &lt;li&gt;🚧 Llama-2-40b support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The code for containerizing Falcon 7B is from Het Trivedi&#39;s &lt;a href=&#34;https://github.com/htrivedi99/falcon-7b-truss&#34;&gt;tutorial repo&lt;/a&gt;. Check out his Medium article on how to dockerize Falcon &lt;a href=&#34;https://towardsdatascience.com/deploying-falcon-7b-into-production-6dd28bb79373&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
</feed>