<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-07T01:40:21Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mfts/papermark</title>
    <updated>2023-09-07T01:40:21Z</updated>
    <id>tag:github.com,2023-09-07:/mfts/papermark</id>
    <link href="https://github.com/mfts/papermark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Papermark is the open-source DocSend alternative with built-in analytics and custom domains.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;Papermark&lt;/h1&gt; &#xA; &lt;h3&gt;The open-source DocSend alternative.&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://www.producthunt.com/posts/papermark-3?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-papermark&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=411605&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Papermark - The open-source DocSend alternative | Product Hunt&#34; style=&#34;width:250px;height:40px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.papermark.io&#34;&gt;papermark.io&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/mfts/papermark/stargazers&#34;&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/mfts/papermark&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://twitter.com/mfts0&#34;&gt;&lt;img alt=&#34;Twitter Follow&#34; src=&#34;https://img.shields.io/twitter/follow/mfts0&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/mfts/papermark/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/license-AGPLv3-purple&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Papermark is an open-source document sharing alternative to DocSend with built-in analytics. Built with &lt;a href=&#34;http://vercel.com/storage&#34;&gt;Vercel Storage&lt;/a&gt; and &lt;a href=&#34;http://vercel.com/edge&#34;&gt;Vercel Edge Functions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shareable Links:&lt;/strong&gt; Share your document securely by sending a custom link&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Analytics:&lt;/strong&gt; Get insights via document tracking and soon page-by-page analytics&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-hosted, open-source:&lt;/strong&gt; Host it yourself and hack on it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mfts/papermark/main/.github/images/papermark-welcome.gif&#34; alt=&#34;Papermark Welcome GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; – framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt; – language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind&lt;/a&gt; – styling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prisma.io&#34;&gt;Prisma&lt;/a&gt; - orm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/storage/blob&#34;&gt;Vercel Blob&lt;/a&gt; - blob storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/storage/postgres&#34;&gt;Vercel Postgres&lt;/a&gt; - database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://next-auth.js.org/&#34;&gt;NextAuth.js&lt;/a&gt; – auth&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://resend.com&#34;&gt;Resend&lt;/a&gt; – email&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; – hosting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s what you need to be able to run Papermark:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (version &amp;gt;= 18)&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL (I use &lt;a href=&#34;https://vercel.com/storage/postgres&#34;&gt;Vercel Postgres&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Blob storage (I use &lt;a href=&#34;https://vercel.com/storage/blob&#34;&gt;Vercel Blob&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.cloud.google.com/apis/credentials&#34;&gt;Google OAuth Client&lt;/a&gt; (for authentication)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://resend.com&#34;&gt;Resend&lt;/a&gt; (for sending emails)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1. Clone the repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/mfts/papermark.git&#xA;cd papermark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install npm dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Copy the environment variables to &lt;code&gt;.env&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Configure the variables in &lt;code&gt;.env&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXTAUTH_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;a random string&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXTAUTH_URL&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Your base domain or localhost:3000 &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;POSTGRES_PRISMA_URL&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Vercel Postgres Pooling URL &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;POSTGRES_URL_NON_POOLING&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Vercel Postgres Non-Pooling URL &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BLOB_READ_WRITE_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Vercel Blob Token &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOOGLE_CLIENT_ID&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Google Client ID &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOOGLE_CLIENT_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Google Client Secret &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RESEND_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Resend API KEY &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXT_PUBLIC_BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt; Your base domain or localhost:3000 &amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;5. Initialize the database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx prisma generate&#xA;npx prisma db push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6. Run the dev server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7. Open the app in your browser&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy your own&lt;/h2&gt; &#xA;&lt;p&gt;All you need is a Vercel account and access to Vercel Storage (&lt;em&gt;Blob&lt;/em&gt; and &lt;em&gt;Postgres&lt;/em&gt;). Click the button below to clone and deploy:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mfts/papermark/main/https%3A%2F%2Fvercel.com%2Fnew%2Fclone%3Frepository-url%3Dhttps%3A%2F%2Fgithub.com%2Fmfts%2Fpapermark%26env%3DNEXTAUTH_SECRET%2CNEXTAUTH_URL%2CPOSTGRES_PRISMA_URL%2CPOSTGRES_PRISMA_URL_NON_POOLING%2CBLOB_READ_WRITE_TOKEN%2CGOOGLE_CLIENT_ID%2CGOOGLE_CLIENT_SECRET%2CNEXT_PUBLIC_BASE_URL%26envDescription%3DHere%27s%20an%20example%20.env%20for%20all%20variables%20required%26envLink%3Dhttps%3A%2F%2Fgithub.com%2Fmfts%2Fpapermark%2Fblob%2Fmain%2F.env.example%26project-name%3Dmy-awesome-papermark%26repository-name%3Dmy-awesome-papermark%26demo-title%3DPapermark%26demo-description%3DPapermark%20is%20an%20open-source%20document%20sharing%20alternative%20to%20DocSend%20with%20built-in%20analytics.%26demo-url%3Dhttps%3A%2F%2Fwww.papermark.io%26demo-image%3Dhttps%3A%2F%2Fwww.papermark.io%2F_static%2Fpapermark.png&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Papermark is an open-source project and we welcome contributions from the community.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute, please fork the repository and make changes as you&#39;d like. Pull requests are warmly welcome.&lt;/p&gt; &#xA;&lt;h3&gt;Our Contributors ✨&lt;/h3&gt; &#xA;&lt;a href=&#34;https://github.com/mfts/papermark/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mfts/papermark&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;...and friends&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/steven-tey/dub&#34;&gt;Dub&lt;/a&gt; - An open-source link shortener SaaS with built-in analytics + free custom domains&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aws-actions/configure-aws-credentials</title>
    <updated>2023-09-07T01:40:21Z</updated>
    <id>tag:github.com,2023-09-07:/aws-actions/configure-aws-credentials</id>
    <link href="https://github.com/aws-actions/configure-aws-credentials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configure AWS credential environment variables for use in other GitHub Actions.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Configure AWS Credentials for GitHub Actions&lt;/h2&gt; &#xA;&lt;p&gt;Configure your AWS credentials and region environment variables for use in other GitHub Actions. This action implements the AWS SDK credential resolution chain and exports environment variables for your other Actions to use. Environment variable exports are detected by both the AWS SDKs and the AWS CLI for AWS API calls.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;News&lt;/h3&gt; &#xA;&lt;p&gt;We have recently released &lt;code&gt;v3&lt;/code&gt; of Configure AWS Credentials! With this new release we have migrated the code to TypeScript, and have also migrated away from using &lt;code&gt;v2&lt;/code&gt; of the JavaScript AWS SDK. This should eliminate the warning you have seen in your workflow logs about &lt;code&gt;v2&lt;/code&gt; deprecation.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the refactored codebase, we have also introduced some changes to existing functionality, added some new features, and fixed some bugs. These changes should be backwards compatible with your existing workflows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notable changes to existing functionality&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default, the assumed role credentials will only be valid for one hour in &lt;em&gt;all&lt;/em&gt; use cases. This is changed from 6 hours in &lt;code&gt;v2&lt;/code&gt;. You can adjust this value with the &lt;code&gt;role-duration-seconds&lt;/code&gt; input.&lt;/li&gt; &#xA; &lt;li&gt;By default, your account ID will not be masked in workflow logs. This was changed from being masked by default in the previous version. AWS does not consider account IDs as sensitive information, so this change reflects that stance. You can revert to the old default and mask your account ID in workflow logs by setting the &lt;code&gt;mask-aws-account-id&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;New features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can now configure retry settings in case your STS call fails. By default, we retry with exponential backoff twelve times. You can disable this behavior altogether by setting the &lt;code&gt;disable-retry&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt;, or you can configure the number of times the action will retry with the &lt;code&gt;retry-max-attempts&lt;/code&gt; input.&lt;/li&gt; &#xA; &lt;li&gt;You can now set the returned credentials as action step outputs. To do this, you can set the &lt;code&gt;output-credentials&lt;/code&gt; prop to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;There&#39;s now an option to clear the AWS-related environment variables at the start of the action. Clearing these variables is often a workaround for problems, so enabling this can be helpful if existing credentials or environment variables are interfering with the action. You can enable this by setting the &lt;code&gt;unset-current-credentials&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find a list of bugs that have been fixed in v3 in the &lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#security-recommendations&#34;&gt;Security recommendations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#using-this-action&#34;&gt;Using this action&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#credential-lifetime&#34;&gt;Credential Lifetime&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#external-id&#34;&gt;External ID&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#session-tagging-and-name&#34;&gt;Session tagging&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#sample-iam-role-cloudformation-template&#34;&gt;Sample IAM Role Permissions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#misc&#34;&gt;Misc&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#OIDC&#34;&gt;OIDC&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#audience&#34;&gt;Audience&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#sample-iam-oidc-cloudformation-template&#34;&gt;Sample IAM OIDC CloudFormation Template&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#claims-and-scoping-permissions&#34;&gt;Claims and scoping permissions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#further-info&#34;&gt;Further info&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#self-hosted-runners&#34;&gt;Self-Hosted Runners&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#proxy-configuration&#34;&gt;Proxy Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#use-with-the-aws-cli&#34;&gt;Use with the AWS CLI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#license-summary&#34;&gt;License Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#security-disclosures&#34;&gt;Security Disclosures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;We support five methods for fetching credentials from AWS, but we recommend that you use GitHub&#39;s OIDC provider in conjunction with a configured AWS IAM Identity Provider endpoint.&lt;/p&gt; &#xA;&lt;p&gt;To do that, you would add the following step to your workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        aws-region: us-east-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will cause the action to perform an &lt;a href=&#34;https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html&#34;&gt;&lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt;&lt;/a&gt; call and return temporary security credentials for use by other steps in your workflow. In order for this to work, you&#39;ll need to preconfigure the IAM Identity Provider in your AWS account (see &lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#assuming-a-role&#34;&gt;Assuming a Role&lt;/a&gt; for details).&lt;/p&gt; &#xA;&lt;p&gt;You can use this action with the AWS CLI available in &lt;a href=&#34;https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners&#34;&gt;GitHub&#39;s hosted virtual environments&lt;/a&gt; or run this action multiple times to use different AWS accounts, regions, or IAM roles in the same GitHub Actions workflow. As an example, here is a complete workflow file that uploads artifacts to Amazon S3.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  deploy:&#xA;    name: Upload to Amazon S3&#xA;    runs-on: ubuntu-latest&#xA;    # These permissions are needed to interact with GitHub&#39;s OIDC Token endpoint.&#xA;    permissions:&#xA;      id-token: write&#xA;      contents: read&#xA;    steps:&#xA;    - name: Checkout&#xA;      uses: actions/checkout@v3&#xA;    - name: Configure AWS credentials from Test account&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role-test&#xA;        aws-region: us-east-1&#xA;    - name: Copy files to the test website with the AWS CLI&#xA;      run: |&#xA;        aws s3 sync . s3://my-s3-test-website-bucket&#xA;    - name: Configure AWS credentials from Production account&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod&#xA;        aws-region: us-west-2&#xA;    - name: Copy files to the production website with the AWS CLI&#xA;      run: |&#xA;        aws s3 sync . s3://my-s3-prod-website-bucket&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/action.yml&#34;&gt;action.yml&lt;/a&gt; for the full documentation for this action&#39;s inputs and outputs.&lt;/p&gt; &#xA;&lt;h3&gt;Note about GHES&lt;/h3&gt; &#xA;&lt;p&gt;Some of this documentation may be inaccurate if you are using GHES (GitHub Enterprise Servers), please take note to review the GitHub documentation when relevant.&lt;/p&gt; &#xA;&lt;p&gt;For example, the URL that the OIDC JWT is issued from is different than the usual &lt;code&gt;tokens.actions.githubusercontent.com&lt;/code&gt;, and will be unique to your enterprise server. As a result, you will need to configure this differently when you create the Identity Provider.&lt;/p&gt; &#xA;&lt;h2&gt;Security recommendations&lt;/h2&gt; &#xA;&lt;p&gt;We recommend following &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html&#34;&gt;Amazon IAM best practices&lt;/a&gt; for the AWS credentials used in GitHub Actions workflows, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not store credentials in your repository&#39;s code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34;&gt;Grant least privilege&lt;/a&gt; to the credentials used in GitHub Actions workflows. Grant only the permissions required to perform the actions in your GitHub Actions workflows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#keep-a-log&#34;&gt;Monitor the activity&lt;/a&gt; of the credentials used in GitHub Actions workflows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using this action&lt;/h2&gt; &#xA;&lt;p&gt;There are five different supported ways to retrieve credentials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using GitHub&#39;s OIDC provider (&lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Proceeding as an IAM user (No STS call is made)&lt;/li&gt; &#xA; &lt;li&gt;Using access keys as action input (&lt;code&gt;AssumeRole&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using a WebIdentity Token File (&lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Using existing credentials in your runner (&lt;code&gt;AssumeRole&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services&#34;&gt;GitHub&#39;s OIDC provider&lt;/a&gt; to get short-lived AWS credentials needed for your actions. See &lt;a href=&#34;https://raw.githubusercontent.com/aws-actions/configure-aws-credentials/main/#OIDC&#34;&gt;OIDC&lt;/a&gt; for more information on how to setup your AWS account to assume a role with OIDC.&lt;/p&gt; &#xA;&lt;p&gt;The following table describes which method is used based on which values are supplied to the Action:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Identity Used&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;aws-access-key-id&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;role-to-assume&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;web-identity-token-file&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;role-chaining&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;id-token&lt;/code&gt; permission&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;[✅ Recommended] Assume Role directly using GitHub OIDC provider&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IAM User&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assume Role using IAM User credentials&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assume Role using WebIdentity Token File credentials&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assume Role using existing credentials&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*Note: &lt;code&gt;role-chaining&lt;/code&gt; is not necessary to use existing credentials in every use case. If you&#39;re getting a &#34;Credentials loaded by the SDK do not match&#34; error, try enabling this prop.&lt;/p&gt; &#xA;&lt;h3&gt;Credential Lifetime&lt;/h3&gt; &#xA;&lt;p&gt;The default session duration is &lt;strong&gt;1 hour&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to adjust this you can pass a duration to &lt;code&gt;role-duration-seconds&lt;/code&gt;, but the duration cannot exceed the maximum that was defined when the IAM Role was created.&lt;/p&gt; &#xA;&lt;h3&gt;External ID&lt;/h3&gt; &#xA;&lt;p&gt;If your role requires an external ID to assume, you can provide the external ID with the &lt;code&gt;role-external-id&lt;/code&gt; input&lt;/p&gt; &#xA;&lt;h3&gt;Session tagging and name&lt;/h3&gt; &#xA;&lt;p&gt;The default session name is &#34;GitHubActions&#34;, and you can modify it by specifying the desired name in &lt;code&gt;role-session-name&lt;/code&gt;. The session will be tagged with the following tags: (&lt;code&gt;GITHUB_&lt;/code&gt; environment variable definitions can be &lt;a href=&#34;https://help.github.com/en/actions/automating-your-workflow-with-github-actions/using-environment-variables#default-environment-variables&#34;&gt;found here&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub&lt;/td&gt; &#xA;   &lt;td&gt;&#34;Actions&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Repository&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_REPOSITORY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Workflow&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_WORKFLOW&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Action&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_ACTION&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Actor&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_ACTOR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Branch&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_REF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Commit&lt;/td&gt; &#xA;   &lt;td&gt;GITHUB_SHA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: all tag values must conform to &lt;a href=&#34;https://docs.aws.amazon.com/STS/latest/APIReference/API_Tag.html&#34;&gt;the requirements&lt;/a&gt;. Particularly, &lt;code&gt;GITHUB_WORKFLOW&lt;/code&gt; will be truncated if it&#39;s too long. If &lt;code&gt;GITHUB_ACTOR&lt;/code&gt; or &lt;code&gt;GITHUB_WORKFLOW&lt;/code&gt; contain invalid characters, the characters will be replaced with an &#39;*&#39;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The action will use session tagging by default during role assumption, unless you are assuming a role with a WebIdentity. For WebIdentity role assumption, the session tags have to be included in the encoded WebIdentity token. This means that Tags can only be supplied by the OIDC provider, and they cannot set during the AssumeRoleWithWebIdentity API call within the Action. See &lt;a href=&#34;https://github.com/aws-actions/configure-aws-credentials/issues/419&#34;&gt;issue 419&lt;/a&gt; for more info&lt;/p&gt; &#xA;&lt;p&gt;You can skip this session tagging by providing &lt;code&gt;role-skip-session-tagging&lt;/code&gt; as true in the action&#39;s inputs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        role-skip-session-tagging: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Session policies&lt;/h3&gt; &#xA;&lt;h4&gt;Inline session policies&lt;/h4&gt; &#xA;&lt;p&gt;An IAM policy in stringified JSON format that you want to use as an inline session policy. Depending on preferences, the JSON could be written on a single line like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;         inline-session-policy: &#39;{&#34;Version&#34;:&#34;2012-10-17&#34;,&#34;Statement&#34;:[{&#34;Sid&#34;:&#34;Stmt1&#34;,&#34;Effect&#34;:&#34;Allow&#34;,&#34;Action&#34;:&#34;s3:List*&#34;,&#34;Resource&#34;:&#34;*&#34;}]}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or we can have a nicely formatted JSON as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;         inline-session-policy: &amp;gt;-&#xA;          {&#xA;           &#34;Version&#34;: &#34;2012-10-17&#34;,&#xA;           &#34;Statement&#34;: [&#xA;            {&#xA;             &#34;Sid&#34;:&#34;Stmt1&#34;,&#xA;             &#34;Effect&#34;:&#34;Allow&#34;,&#xA;             &#34;Action&#34;:&#34;s3:List*&#34;,&#xA;             &#34;Resource&#34;:&#34;*&#34;&#xA;            }&#xA;           ]&#xA;          }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Managed session policies&lt;/h4&gt; &#xA;&lt;p&gt;The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role. You can pass a single managed policy like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;         managed-session-policies: arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And we can pass multiple managed policies likes this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;         managed-session-policies: |&#xA;          arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess&#xA;          arn:aws:iam::aws:policy/AmazonS3OutpostsReadOnlyAccess&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;h4&gt;Adjust the retry mechanism&lt;/h4&gt; &#xA;&lt;p&gt;You can now configure retry settings for when the STS call fails. By default, we retry with exponential backoff &lt;code&gt;12&lt;/code&gt; times. You can disable this behavior altogether by setting the &lt;code&gt;disable-retry&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt;, or you can configure the number of times it retries with the &lt;code&gt;retry-max-attempts&lt;/code&gt; input.&lt;/p&gt; &#xA;&lt;h4&gt;Mask account ID&lt;/h4&gt; &#xA;&lt;p&gt;Your account ID is not masked by default in workflow logs since it&#39;s not considered sensitive information. However, you can set the &lt;code&gt;mask-aws-account-id&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt; to mask your account ID in workflow logs if desired.&lt;/p&gt; &#xA;&lt;h4&gt;Unset current credentials&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes, existing credentials in your runner can get in the way of the intended outcome, and the recommended solution is to include another step in your workflow which unsets the environment variables set by this action. Now if you set the &lt;code&gt;unset-current-credentials&lt;/code&gt; input to &lt;code&gt;true&lt;/code&gt;, the workaround is made eaiser&lt;/p&gt; &#xA;&lt;h4&gt;Special characters in AWS_SECRET_ACCESS_KEY&lt;/h4&gt; &#xA;&lt;p&gt;Some edge cases are unable to properly parse an &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; if it contains special characters. For more information, please see the &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-troubleshooting.html#tshoot-signature-does-not-match&#34;&gt;AWS CLI documentation&lt;/a&gt;. If you set the &lt;code&gt;special-characters-workaround&lt;/code&gt; option, this action will continually retry fetching credentials until we get one that does not have special characters. This option overrides the &lt;code&gt;disable-retry&lt;/code&gt; and &lt;code&gt;retry-max-attempts&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;h2&gt;OIDC&lt;/h2&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services&#34;&gt;GitHub&#39;s OIDC provider&lt;/a&gt; to get short-lived AWS credentials needed for your actions. When using OIDC, this action will create a JWT unique to the workflow run, and it will use this JWT to assume the role. For this action to create the JWT, it is required for your workflow to have the &lt;code&gt;id-token: write&lt;/code&gt; permission:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    permissions:&#xA;      id-token: write&#xA;      contents: read&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Audience&lt;/h3&gt; &#xA;&lt;p&gt;When the JWT is created, an audience needs to be specified. By default, the audience is &lt;code&gt;sts.amazonaws.com&lt;/code&gt; and this will work for most cases. Changing the default audience may be necessary when using non-default AWS partitions. You can specify the audience through the &lt;code&gt;audience&lt;/code&gt; input:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials for China region audience&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        audience: sts.amazonaws.com.cn&#xA;        aws-region: us-east-3&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sample IAM OIDC CloudFormation Template&lt;/h3&gt; &#xA;&lt;p&gt;To use GitHub&#39;s OIDC provider, you must first set up federation with the provider in as an IAM IdP. The GitHub OIDC provider only needs to be created once per account (i.e. multiple IAM Roles that can be assumed by the GitHub&#39;s OIDC can share a single OIDC Provider).&lt;/p&gt; &#xA;&lt;p&gt;Note that the thumbprint has been set to all F&#39;s because the thumbprint is not used when authenticating &lt;code&gt;tokens.actions.githubusercontent.com&lt;/code&gt;. Instead, IAM uses its library of trusted CAs to authenticate. However, this value is still required by the API.&lt;/p&gt; &#xA;&lt;p&gt;This CloudFormation template will configure the IdP for you. You can copy the template below, or load it from here: &lt;a href=&#34;https://d38mtn6aq9zhn6.cloudfront.net/configure-aws-credentials-latest.yml&#34;&gt;https://d38mtn6aq9zhn6.cloudfront.net/configure-aws-credentials-latest.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Parameters:&#xA;  GitHubOrg:&#xA;    Description: Name of GitHub organization/user (case sensitive)&#xA;    Type: String&#xA;  RepositoryName:&#xA;    Description: Name of GitHub repository (case sensitive)&#xA;    Type: String&#xA;  OIDCProviderArn:&#xA;    Description: Arn for the GitHub OIDC Provider.&#xA;    Default: &#34;&#34;&#xA;    Type: String&#xA;  OIDCAudience:&#xA;    Description: Audience supplied to configure-aws-credentials.&#xA;    Default: &#34;sts.amazonaws.com&#34;&#xA;    Type: String&#xA;&#xA;Conditions:&#xA;  CreateOIDCProvider: !Equals &#xA;    - !Ref OIDCProviderArn&#xA;    - &#34;&#34;&#xA;&#xA;Resources:&#xA;  Role:&#xA;    Type: AWS::IAM::Role&#xA;    Properties:&#xA;      AssumeRolePolicyDocument:&#xA;        Statement:&#xA;          - Effect: Allow&#xA;            Action: sts:AssumeRoleWithWebIdentity&#xA;            Principal:&#xA;              Federated: !If &#xA;                - CreateOIDCProvider&#xA;                - !Ref GithubOidc&#xA;                - !Ref OIDCProviderArn&#xA;            Condition:&#xA;              StringEquals:&#xA;                token.actions.githubusercontent.com:aud: !Ref OIDCAudience&#xA;              StringLike:&#xA;                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*&#xA;&#xA;  GithubOidc:&#xA;    Type: AWS::IAM::OIDCProvider&#xA;    Condition: CreateOIDCProvider&#xA;    Properties:&#xA;      Url: https://token.actions.githubusercontent.com&#xA;      ClientIdList: &#xA;        - sts.amazonaws.com&#xA;      ThumbprintList:&#xA;        - ffffffffffffffffffffffffffffffffffffffff&#xA;&#xA;Outputs:&#xA;  Role:&#xA;    Value: !GetAtt Role.Arn &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Claims and scoping permissions&lt;/h3&gt; &#xA;&lt;p&gt;To align with the Amazon IAM best practice of &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34;&gt;granting least privilege&lt;/a&gt;, the assume role policy document should contain a &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html&#34;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; that specifies a subject (&lt;code&gt;sub&lt;/code&gt;) allowed to assume the role. &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#defining-trust-conditions-on-cloud-roles-using-oidc-claims&#34;&gt;GitHub also recommends&lt;/a&gt; filtering for the correct audience (&lt;code&gt;aud&lt;/code&gt;). See &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_iam-condition-keys.html#condition-keys-wif&#34;&gt;AWS IAM documentation&lt;/a&gt; on which claims you can filter for in your trust policies.&lt;/p&gt; &#xA;&lt;p&gt;Without a subject (&lt;code&gt;sub&lt;/code&gt;) condition, any GitHub user or repository could potentially assume the role. The subject can be scoped to a GitHub organization and repository as shown in the CloudFormation template. However, scoping it down to your org and repo may cause the role assumption to fail in some cases. See &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#example-subject-claims&#34;&gt;Example subject claims&lt;/a&gt; for specific details on what the subject value will be depending on your workflow. You can also &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#customizing-the-token-claims&#34;&gt;customize your subject claim&lt;/a&gt; if you want full control over the information you can filter for in your trust policy. If you aren&#39;t sure what your subject (&lt;code&gt;sub&lt;/code&gt;) key is, you can add the &lt;a href=&#34;https://github.com/github/actions-oidc-debugger&#34;&gt;&lt;code&gt;actions-oidc-debugger&lt;/code&gt;&lt;/a&gt; action to your workflow to see the value of the subject (&lt;code&gt;sub&lt;/code&gt;) key, as well as other claims.&lt;/p&gt; &#xA;&lt;p&gt;Additional claim conditions can be added for higher specificity as explained in the &lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&#34;&gt;GitHub documentation&lt;/a&gt;. Due to implementation details, not every OIDC claim is presently supported by IAM.&lt;/p&gt; &#xA;&lt;h3&gt;Further info&lt;/h3&gt; &#xA;&lt;p&gt;For further information on OIDC and GitHub Actions, please see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html&#34;&gt;AWS docs: Creating OpenID Connect (OIDC) identity providers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html&#34;&gt;AWS docs: IAM JSON policy elements: Condition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect&#34;&gt;GitHub docs: About security hardening with OpenID Connect&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services&#34;&gt;GitHub docs: Configuring OpenID Connect in Amazon Web Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.blog/changelog/2021-10-27-github-actions-secure-cloud-deployments-with-openid-connect/&#34;&gt;GitHub changelog: GitHub Actions: Secure cloud deployments with OpenID Connect&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Self-Hosted Runners&lt;/h2&gt; &#xA;&lt;p&gt;If you run your GitHub Actions in a &lt;a href=&#34;https://help.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners&#34;&gt;self-hosted runner&lt;/a&gt; that already has access to AWS credentials, such as an EC2 instance, then you do not need to provide IAM user access key credentials to this action. We will use the standard AWS JavaScript SDK credential resolution methods to find your credentials, so if the AWS JS SDK can authenticate on your runner, this Action will as well.&lt;/p&gt; &#xA;&lt;p&gt;If no access key credentials are given in the action inputs, this action will use credentials from the runner environment using the &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/setting-credentials-node.html&#34;&gt;default methods for the AWS SDK for Javascript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use this action to simply configure the region and account ID in the environment, and then use the runner&#39;s credentials for all AWS API calls made by your Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v3&#xA;with:&#xA;  aws-region: us-east-2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, your runner&#39;s credentials must have permissions to call any AWS APIs called by your Actions workflow.&lt;/p&gt; &#xA;&lt;p&gt;Or, you can use this action to assume a role, and then use the role credentials for all AWS API calls made by your Actions workflow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v3&#xA;with:&#xA;  aws-region: us-east-2&#xA;  role-to-assume: my-github-actions-role&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, your runner&#39;s credentials must have permissions to assume the role.&lt;/p&gt; &#xA;&lt;p&gt;You can also assume a role using a web identity token file, such as if using &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html&#34;&gt;Amazon EKS IRSA&lt;/a&gt;. Pods running in EKS worker nodes that do not run as root can use this file to assume a role with a web identity.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy Configuration&lt;/h3&gt; &#xA;&lt;p&gt;If you run in self-hosted environments and in secured environment where you need use a specific proxy you can set it in the action manually.&lt;/p&gt; &#xA;&lt;p&gt;Additionally this action will always consider already configured proxy in the environment.&lt;/p&gt; &#xA;&lt;p&gt;Manually configured proxy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: aws-actions/configure-aws-credentials@v3&#xA;with:&#xA;  aws-region: us-east-2&#xA;  role-to-assume: my-github-actions-role&#xA;  http-proxy: &#34;http://companydomain.com:3128&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Proxy configured in the environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Your environment configuration&#xA;HTTP_PROXY=&#34;http://companydomain.com:3128&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The action will read the underlying proxy configuration from the environment and you don&#39;t need to configure it in the action.&lt;/p&gt; &#xA;&lt;h3&gt;Use with the AWS CLI&lt;/h3&gt; &#xA;&lt;p&gt;This workflow does &lt;em&gt;not&lt;/em&gt; install the &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;AWS CLI&lt;/a&gt; into your environment. Self-hosted runners that intend to run this action prior to executing &lt;code&gt;aws&lt;/code&gt; commands need to have the AWS CLI &lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html&#34;&gt;installed&lt;/a&gt; if it&#39;s not already present. Most &lt;a href=&#34;https://github.com/actions/virtual-environments&#34;&gt;GitHub hosted runner environments&lt;/a&gt; should include the AWS CLI by default.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;AssumeRoleWithWebIdentity (recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        role-session-name: MySessionName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the Action will load the OIDC token from the GitHub-provided environment variable and use it to assume the role &lt;code&gt;arn:aws:iam::123456789100:role/my-github-actions-role&lt;/code&gt; with the session name &lt;code&gt;MySessionName&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;AssumeRole with role previously assumed by action in same workflow&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        role-session-name: MySessionName&#xA;    - name: Configure other AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        role-to-assume: arn:aws:iam::987654321000:role/my-second-role&#xA;        role-session-name: MySessionName&#xA;        role-chaining: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this two-step example, the first step will use OIDC to assume the role &lt;code&gt;arn:aws:iam::123456789100:role/my-github-actions-role&lt;/code&gt; just as in the prior example. Following that, a second step will use this role to assume a different role, &lt;code&gt;arn:aws:iam::987654321000:role/my-second-role&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;AssumeRole with static IAM credentials in repository secrets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}&#xA;        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}&#xA;        aws-region: us-east-2&#xA;        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}&#xA;        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}&#xA;        role-duration-seconds: 1200&#xA;        role-session-name: MySessionName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, the secret &lt;code&gt;AWS_ROLE_TO_ASSUME&lt;/code&gt; contains a string like &lt;code&gt;arn:aws:iam::123456789100:role/my-github-actions-role&lt;/code&gt;. To assume a role in the same account as the static credentials, you can simply specify the role name, like &lt;code&gt;role-to-assume: my-github-actions-role&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Retrieving credentials from step output, AssumeRole with temporary credentials&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    - name: Configure AWS Credentials 1&#xA;      id: creds&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-github-actions-role&#xA;        output-credentials: true&#xA;    - name: get caller identity 1&#xA;      run: |&#xA;        aws sts get-caller-identity&#xA;    - name: Configure AWS Credentials 2&#xA;      uses: aws-actions/configure-aws-credentials@v3&#xA;      with:&#xA;        aws-region: us-east-2&#xA;        aws-access-key-id: ${{ steps.creds.outputs.aws-access-key-id }}&#xA;        aws-secret-access-key: ${{ steps.creds.outputs.aws-secret-access-key }}&#xA;        aws-session-token: ${{ steps.creds.outputs.aws-session-token }}&#xA;        role-to-assume: arn:aws:iam::123456789100:role/my-other-github-actions-role&#xA;    - name: get caller identity2&#xA;      run: |&#xA;        aws sts get-caller-identity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example shows that you can reference the fetched credentials as outputs if &lt;code&gt;output-credentials&lt;/code&gt; is set to true. This example also shows that you can use the &lt;code&gt;aws-session-token&lt;/code&gt; input in a situation where session tokens are fetched and passed to this action.&lt;/p&gt; &#xA;&lt;h2&gt;License Summary&lt;/h2&gt; &#xA;&lt;p&gt;This code is made available under the MIT license.&lt;/p&gt; &#xA;&lt;h2&gt;Security Disclosures&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to report a potential security issue in this project, please do not create a GitHub issue. Instead, please follow the instructions &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;mailto:aws-security@amazon.com&#34;&gt;email AWS security directly&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>material-components/material-web</title>
    <updated>2023-09-07T01:40:21Z</updated>
    <id>tag:github.com,2023-09-07:/material-components/material-web</id>
    <link href="https://github.com/material-components/material-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Material Design Web Components&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Material Web&lt;/h1&gt; &#xA;&lt;p&gt;Material &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Web_Components&#34;&gt;web components&lt;/a&gt;&#xA; &lt;!-- {.external} --&gt; is a UI toolkit to build customizable and accessible web applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://m3.material.io/&#34;&gt;Material 3&lt;/a&gt;&#xA; &lt;!-- {.external} --&gt; is the latest version of Google&#39;s open-source design system.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tip: Using Angular? We recommend using &lt;a href=&#34;https://material.angular.io/&#34;&gt;Angular Material&lt;/a&gt;&#xA;  &lt;!-- {.external} --&gt; components instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/material-components/material-web/main/docs/intro.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Alpha&lt;/strong&gt; components are in-development and may have many frequent breaking changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beta&lt;/strong&gt; components are mostly polished and ready for use, but may still have breaking changes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Stable&lt;/strong&gt; components are reviewed, documented, and API complete.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;❌ Not started&lt;/li&gt; &#xA; &lt;li&gt;🟡 In progress&lt;/li&gt; &#xA; &lt;li&gt;✅ Complete&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;v1.0.0&lt;/code&gt; (2023)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Alpha&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Beta&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stable&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Button&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FAB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Icon button&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Checkbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chips&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dialog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Elevation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Focus ring&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Field&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Icon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;List&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Menu&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Progress indicator (circular)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Progress indicator (linear)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Radio button&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ripple&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Select&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slider&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Switch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tabs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Text field&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Future&lt;/h3&gt; &#xA;&lt;p&gt;These features are planned for a future release.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Alpha&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Beta&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stable&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Autocomplete&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Badge&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Banner&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bottom app bar&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bottom sheet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Segmented button&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Card&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Data table&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Date picker&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Navigation bar&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Navigation drawer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🟡&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Navigation rail&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snackbar&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Time picker&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tooltip&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Top app bar&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Browser support&lt;/h2&gt; &#xA;&lt;p&gt;This project aims to support the latest two major versions of browsers at the time of each release.&lt;/p&gt; &#xA;&lt;p&gt;Current browsers and versions supported:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Browser&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chrome&lt;/td&gt; &#xA;   &lt;td&gt;112 +&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge&lt;/td&gt; &#xA;   &lt;td&gt;112 +&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firefox&lt;/td&gt; &#xA;   &lt;td&gt;113 +&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Safari*&lt;/td&gt; &#xA;   &lt;td&gt;16.4 +&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;* previous versions of Safari may be supported with an &lt;a href=&#34;https://www.npmjs.com/package/element-internals-polyfill&#34;&gt;&lt;code&gt;ElementInternals&lt;/code&gt; polyfill&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>