<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-20T01:38:09Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>salesforce/tough-cookie</title>
    <updated>2024-09-20T01:38:09Z</updated>
    <id>tag:github.com,2024-09-20:/salesforce/tough-cookie</id>
    <link href="https://github.com/salesforce/tough-cookie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RFC6265 Cookies and CookieJar for Node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tough Cookie Â· &lt;a href=&#34;https://datatracker.ietf.org/doc/rfc6265/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RFC-6265-flat?labelColor=000000&amp;amp;color=666666&#34; alt=&#34;RFC6265&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-httpbis-rfc6265bis/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RFC-6265bis-flat?labelColor=000000&amp;amp;color=666666&#34; alt=&#34;RFC6265bis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/tough-cookie&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/tough-cookie.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/salesforce/tough-cookie/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/salesforce/tough-cookie/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;CI on Github Actions: salesforce/tough-cookie&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A Node.js implementation of &lt;a href=&#34;https://datatracker.ietf.org/doc/rfc6265/&#34;&gt;RFC6265&lt;/a&gt; for cookie parsing, storage, and retrieval.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Install Tough Cookie using &lt;a href=&#34;https://www.npmjs.com/package/tough-cookie&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install tough-cookie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or &lt;a href=&#34;https://yarnpkg.com/package?name=tough-cookie&#34;&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn add tough-cookie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Cookie, CookieJar } from &#39;tough-cookie&#39;&#xA;&#xA;// parse a `Cookie` request header&#xA;const reqCookies = &#39;ID=298zf09hf012fh2; csrf=u32t4o3tb3gg43; _gat=1&#39;.split(&#39;;&#39;).map(Cookie.parse)&#xA;// generate a `Cookie` request header&#xA;const cookieHeader = reqCookies.map(cookie =&amp;gt; cookie.cookieString()).join(&#39;;&#39;)&#xA;&#xA;// parse a Set-Cookie response header&#xA;const resCookie = Cookie.parse(&#39;foo=bar; Domain=example.com; Path=/; Expires=Tue, 21 Oct 2025 00:00:00 GMT&#39;)&#xA;// generate a Set-Cookie response header&#xA;const setCookieHeader = cookie.toString()&#xA;&#xA;// store and retrieve cookies&#xA;const cookieJar = new CookieJar() // uses the in-memory store by default&#xA;await cookieJar.setCookie(resCookie, &#39;https://example.com/&#39;)&#xA;const matchingCookies = await cookieJar.getCookies(&#39;https://example.com/&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] For more detailed usage information, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/salesforce/tough-cookie/master/api/docs/tough-cookie.md&#34;&gt;API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;RFC6265bis&lt;/h2&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-httpbis-rfc6265bis/&#34;&gt;RFC6265bis&lt;/a&gt; is being developed. As these revisions to &lt;a href=&#34;https://datatracker.ietf.org/doc/rfc6265/&#34;&gt;RFC6252&lt;/a&gt; are still in &lt;code&gt;Active Internet-Draft&lt;/code&gt; state, the areas of support that follow are subject to change.&lt;/p&gt; &#xA;&lt;h3&gt;SameSite Cookies&lt;/h3&gt; &#xA;&lt;p&gt;This change makes it possible for servers, and supporting clients, to mitigate certain types of CSRF attacks by disallowing &lt;code&gt;SameSite&lt;/code&gt; cookies from being sent cross-origin.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { CookieJar } from &#39;tough-cookie&#39;&#xA;&#xA;const cookieJar = new CookieJar() // uses the in-memory store by default&#xA;&#xA;// storing cookies with various SameSite attributes&#xA;await cookieJar.setCookie(&#39;strict=authorized; SameSite=strict&#39;, &#39;http://example.com/index.html&#39;)&#xA;await cookieJar.setCookie(&#39;lax=okay; SameSite=lax&#39;, &#39;http://example.com/index.html&#39;)&#xA;await cookieJar.setCookie(&#39;normal=whatever&#39;, &#39;http://example.com/index.html&#39;)&#xA;&#xA;// retrieving cookies using a SameSite context&#xA;const laxCookies = await cookieJar.getCookies(&#39;http://example.com/index.html&#39;, {&#xA;  // the first cookie (strict=authorized) will not be returned if the context is &#39;lax&#39;&#xA;  // but the other two cookies will be returned&#xA;  sameSiteContext: &#39;lax&#39;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] It is highly recommended that you read &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis-02#section-8.8&#34;&gt;RFC6265bis - Section 8.8&lt;/a&gt; for more details on SameSite cookies, security considerations, and defense in depth.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Cookie Prefixes&lt;/h3&gt; &#xA;&lt;p&gt;Cookie prefixes are a way to indicate that a given cookie was set with a set of attributes simply by inspecting the first few characters of the cookie&#39;s name.&lt;/p&gt; &#xA;&lt;p&gt;Two prefixes are defined:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&#34;__Secure-&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If a cookie&#39;s name begins with a case-sensitive match for the string &lt;code&gt;__Secure-&lt;/code&gt;, then the cookie was set with a &#34;Secure&#34; attribute.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&#34;__Host-&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If a cookie&#39;s name begins with a case-sensitive match for the string &lt;code&gt;__Host-&lt;/code&gt;, then the cookie was set with a &#34;Secure&#34; attribute, a &#34;Path&#34; attribute with a value of &#34;/&#34;, and no &#34;Domain&#34; attribute.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If &lt;code&gt;prefixSecurity&lt;/code&gt; is enabled for &lt;code&gt;CookieJar&lt;/code&gt;, then cookies that match the prefixes defined above but do not obey the attribute restrictions are not added.&lt;/p&gt; &#xA;&lt;p&gt;You can define this functionality by passing in the &lt;code&gt;prefixSecurity&lt;/code&gt; option to &lt;code&gt;CookieJar&lt;/code&gt;. It can be one of 3 values:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;silent&lt;/code&gt;: (&lt;strong&gt;default&lt;/strong&gt;) Enable cookie prefix checking but silently fail to add the cookie if conditions are not met.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;strict&lt;/code&gt;: Enable cookie prefix checking and error out if conditions are not met.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unsafe-disabled&lt;/code&gt;: Disable cookie prefix checking.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If &lt;code&gt;ignoreError&lt;/code&gt; is passed in as &lt;code&gt;true&lt;/code&gt; when setting a cookie then the error is silent regardless of the &lt;code&gt;prefixSecurity&lt;/code&gt; option (assuming it&#39;s enabled).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { CookieJar, MemoryCookieStore } from &#39;tough-cookie&#39;&#xA;&#xA;const cookieJar = new CookieJar(new MemoryCookieStore(), {&#xA;  prefixSecurity: &#39;silent&#39;&#xA;})&#xA;&#xA;// this cookie will be silently ignored since the url is insecure (http)&#xA;await cookieJar.setCookie(&#xA;  &#39;__Secure-SID=12345; Domain=example.com; Secure;&#39;,&#xA;  &#39;http://example.com&#39;,&#xA;)&#xA;&#xA;// this cookie will be stored since the url is secure (https)&#xA;await cookieJar.setCookie(&#xA;  &#39;__Secure-SID=12345; Domain=example.com; Secure;&#39;,&#xA;  &#39;https://example.com&#39;,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] It is highly recommended that you read &lt;a href=&#34;https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis-02#section-4.1.3&#34;&gt;RFC6265bis - Section 4.1.3&lt;/a&gt; for more details on Cookie Prefixes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Node.js Version Support&lt;/h2&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;Node.js release schedule&lt;/a&gt; and support all versions that are in Active LTS or Maintenance. We will always do a major release when dropping support for older versions of node, and we will do so in consultation with our community.&lt;/p&gt;</summary>
  </entry>
</feed>