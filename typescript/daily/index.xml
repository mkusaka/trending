<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-28T01:35:46Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Deeptrain-Community/chatnio</title>
    <updated>2023-12-28T01:35:46Z</updated>
    <id>tag:github.com,2023-12-28:/Deeptrain-Community/chatnio</id>
    <link href="https://github.com/Deeptrain-Community/chatnio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 强大精美的 AI 聚合聊天平台，适配OpenAI，Claude，讯飞星火，Midjourney，Stable Diffusion，DALL·E，ChatGLM，通义千问，腾讯混元，360 智脑，百川 AI，火山方舟，新必应，Google PaLM2，LocalAI 等模型，支持分布式流式传输，图像生成，对话跨设备自动同步和分享功能，实现订阅和 Token 弹性计费系统，Key 中转服务，多模型聚合支持等。实现联网搜索功能，AI 卡片，AI 项目生成器，AI 批量文章生成等功能，引领开源聚合新时代。&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/app/public/logo.png&#34; alt=&#34;chatnio&#34;&gt;&lt;/p&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://chatnio.net&#34;&gt;Chat Nio&lt;/a&gt;&lt;/h1&gt; &#xA; &lt;p&gt;🚀 强大精美的 &lt;strong&gt;AI聚合&lt;/strong&gt; 聊天平台&lt;/p&gt; &#xA; &lt;p&gt;🚀 Powerful and beautiful &lt;strong&gt;AI Aggregation&lt;/strong&gt; chat platform&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://chatnio.net&#34;&gt;官网&lt;/a&gt; | &lt;a href=&#34;https://docs.chatnio.net&#34;&gt;开放文档&lt;/a&gt; | &lt;a href=&#34;https://docs.chatnio.net/kuai-su-kai-shi&#34;&gt;SDKs&lt;/a&gt; | &lt;a href=&#34;http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=1mv1Y8SyxnQVvQCoqhmIgVTbwQmkNmvQ&amp;amp;authKey=5KUA9nJPR29nQwjbsYNknN2Fj6cKePkRes%2B1QZy84Dr4GHYVzcvb0yklxiMMNVJN&amp;amp;noverify=0&amp;amp;group_code=749482576&#34;&gt;QQ 群&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://stats.deeptrain.net&#34;&gt;&lt;img src=&#34;https://stats.deeptrain.net/repo/Deeptrain-Community/chatnio&#34; alt=&#34;code-stats&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📝 功能 | Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;✨ &lt;strong&gt;AI 联网功能&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;✨ &lt;strong&gt;AI online searching service&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚡ 多账户均衡负载 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;⚡ Multi-account load balancing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🎉 HTTP2 Stream 实时响应功能 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🎉 HTTP2 Stream real-time response function&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🚀 节流和鉴权体系 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🚀 Throttling and authentication system&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🌈 丰富的聊天功能 (代码高亮，latex支持，卡片生成，右键菜单) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🌈 Rich chat features (code highlight, latex support, card generation, right-click menu)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🎨 多端适配 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🎨 Multi-device adaptation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📦 缓存系统 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;📦 Cache system&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🎈 对话记忆功能 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🎈 Conversation memorization&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;👋 对话分享 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;👋 Conversation sharing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🎁 图片生成功能 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🎁 Image generation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🔔 PWA 应用 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🔔 PWA application&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📚 逆向工程模型支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;📚 Reverse engineering model support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🌏 国际化支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🌏 Internationalization support &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;🇨🇳 简体中文&lt;/li&gt; &#xA;     &lt;li&gt;🇺🇸 English&lt;/li&gt; &#xA;     &lt;li&gt;🇷🇺 Русский&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🍎 主题切换 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🍎 Theme switching&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🥪 Key 中转服务 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🥪 Key relay service&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🔨 多模型支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🔨 Multi-model support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚙ 后台管理系统 (仪表盘，用户管理，公告管理等) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;⚙ Admin system (dashboard, user management, announcement management, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚒ 渠道管理 (多账号均衡负载，优先级调配，权重负载，模型映射，渠道状态管理) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;⚒ Channel management (multi-account load balancing, priority allocation, weight load, model mapping, channel status management)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚡ 计费系统 (支持匿名计费，按次数计费，Token 弹性计费等方式) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;⚡ Billing system (support anonymous billing, billing by number of times, Token billing, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📂 文件上传功能 (支持 pdf, docx, pptx, xlsx, 音频, 图片等) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;📂 File upload function (support pdf, docx, pptx, xlsx, audio, images, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🥪 All in one (支持 smtp 发件，用户管理等功能) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🥪 All in one (supports smtp sending, user management, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔨 模型 | Models&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenAI ChatGPT (GPT-3.5, GPT-4, Instruct, DALL-E 2, DALL-E 3, Text-Davincci, ...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Azure OpenAI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Anthropic Claude (claude-2, claude-instant)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Slack Claude (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sparkdesk (v1.5, v2, v3)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Google PaLM2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; New Bing (creative, balanced, precise)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ChatGLM (turbo, pro, std, lite)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; DashScope Tongyi (plus, turbo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Midjourney (relax, fast, turbo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stable Diffusion XL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tencent Hunyuan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Baichuan AI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Douyin Skylark (lite, plus, pro, chat)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 360 GPT&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; LLaMa 2 (70b, 13b, 7b)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code LLaMa (34b, 13b, 7b)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; RWKV&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📚 预览 | Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/landspace.png&#34; alt=&#34;landspace&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/code.png&#34; alt=&#34;feature&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/latex.jpg&#34; alt=&#34;latex&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/generation.png&#34; alt=&#34;generation&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/shop.png&#34; alt=&#34;shop&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/subscription.png&#34; alt=&#34;subscription&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/admin.png&#34; alt=&#34;admin&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/channel.png&#34; alt=&#34;channel&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Deeptrain-Community/chatnio/main/screenshot/charge.png&#34; alt=&#34;charge&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📦 部署 | Deploy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;部署成功后，管理员账号为 &lt;code&gt;root&lt;/code&gt;，密码默认为 &lt;code&gt;chatnio123456&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;⚡ Docker Compose 安装 (推荐)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;运行成功后，宿主机映射地址为 &lt;code&gt;http://localhost:8000&lt;/code&gt;，使用 Nginx / Apache 进行反代是一个不错的选择（以及 SSL 配置）&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Deeptrain-Community/chatnio.git&#xA;cd chatnio # project directory&#xA;docker-compose up -d # start service in background&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;chatnio 版本更新：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose down&#xA;docker-compose pull  # pull latest image&#xA;docker-compose up -d # start service in background&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;MySQL 数据库挂载目录项目 ~/&lt;strong&gt;db&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;li&gt;Redis 数据库挂载目录项目 ~/&lt;strong&gt;redis&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;li&gt;配置文件挂载目录项目 ~/&lt;strong&gt;config&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚡ Docker 安装 (轻量运行时, 常用于外置 &lt;em&gt;MYSQL/RDS&lt;/em&gt; 服务)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d --name chatnio \&#xA;  -p 8000:8094 \&#xA;  -v ~/config:/app/config \&#xA;  -e MYSQL_HOST=&amp;lt;your-mysql-host&amp;gt; \&#xA;  -e MYSQL_PORT=3306 \&#xA;  -e MYSQL_DATABASE=chatnio \&#xA;  -e MYSQL_USER=&amp;lt;username&amp;gt; \&#xA;  -e MYSQL_PASSWORD=&amp;lt;password&amp;gt; \&#xA;  -e REDIS_HOST=&amp;lt;your-redis-host&amp;gt; \&#xA;  -e REDIS_PORT=6379 \&#xA;  -e SECRET=&amp;lt;your-jwt-secret&amp;gt; \&#xA;  -e SERVE_STATIC=true \&#xA;  programzmh/chatnio:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;em&gt;-p 8000:8094&lt;/em&gt; 指映射宿主机端口为 8000，可自行修改&lt;/li&gt; &#xA;    &lt;li&gt;MYSQL_HOST: MySQL 数据库地址&lt;/li&gt; &#xA;    &lt;li&gt;MYSQL_PORT: MySQL 数据库端口&lt;/li&gt; &#xA;    &lt;li&gt;MYSQL_DATABASE: MySQL 数据库名称&lt;/li&gt; &#xA;    &lt;li&gt;MYSQL_USER: MySQL 数据库用户名&lt;/li&gt; &#xA;    &lt;li&gt;MYSQL_PASSWORD: MySQL 数据库密码&lt;/li&gt; &#xA;    &lt;li&gt;REDIS_HOST: Redis 数据库地址&lt;/li&gt; &#xA;    &lt;li&gt;REDIS_PORT: Redis 数据库端口&lt;/li&gt; &#xA;    &lt;li&gt;SECRET: JWT 密钥，自行生成修改即可&lt;/li&gt; &#xA;    &lt;li&gt;SERVE_STATIC: 是否启用静态文件服务 （仅在前后端分离部署时，如 &lt;a href=&#34;https://chatnio.net&#34;&gt;https://chatnio.net&lt;/a&gt; 后端部署为 &lt;a href=&#34;https://api.chatnio.net&#34;&gt;https://api.chatnio.net&lt;/a&gt; 的情况才需关闭静态文件服务，默认情况下api地址为 &lt;strong&gt;/api&lt;/strong&gt;，如需修改，请自行修改)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;em&gt;-v ~/config:/app/config&lt;/em&gt; 指映射宿主机配置文件目录为 ~/config，可自行修改&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚒ 编译安装 (自定义性强)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Deeptrain-Community/chatnio.git&#xA;cd chatnio # project directory&#xA;go build -o chatnio # build backend&#xA;nohup ./chatnio &amp;gt; output.log &amp;amp; # run backend&#xA;&#xA;cd app # frontend directory (~/app)&#xA;npm install -g pnpm # install pnpm&#xA;pnpm install # install frontend dependencies&#xA;pnpm build # build frontend&#xA;&#xA;# run frontend&#xA;# a common way is to use nginx/apache to serve the static files&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔨 配置 | Config&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;仅在编译安装时需要修改配置文件 Docker 安装可修改环境变量，如 mysql.host 设置 &lt;code&gt;MYSQL_HOST&lt;/code&gt; 环境即可 ~/config/&lt;strong&gt;config.yaml&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;mysql:&#xA;  db: chatnio&#xA;  host: localhost&#xA;  password: chatnio123456&#xA;  port: 3306&#xA;  user: root&#xA;&#xA;redis:&#xA;  host: localhost&#xA;  port: 6379&#xA;&#xA;secret: SbitdyN5ZH39cNxSrG3kMNZ1GfiyyQ43 # jwt secret&#xA;&#xA;auth:&#xA;  use_deeptrain: false&#xA;&#xA;server:&#xA;  port: 8094&#xA;system:&#xA;  general:&#xA;    backend: &#34;&#34;&#xA;  mail:&#xA;    host: &#34;&#34;&#xA;    port: 465&#xA;    username: &#34;&#34;&#xA;    password: &#34;&#34;&#xA;    from: &#34;&#34;&#xA;  search:&#xA;    endpoint: https://duckduckgo-api.vercel.app&#xA;    query: 5&#xA;&#xA;serve_static: false # serve static files (false if only using backend)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📚 开发文档 | Docs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.chatnio.net&#34;&gt;开发文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚡ Key 中转服务 | Key Relay Service&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持多模型兼容层，这意味着你可以使用一次代码，同时兼容多家 AI 模型 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support multi-model compatible layer, which means you can use one code to be compatible with multiple AI models at the same time&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持多账户均衡负载，高并发 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support multi-account load balancing, high concurrency&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;将 &lt;code&gt;https://api.openai.com&lt;/code&gt; 替换为 &lt;code&gt;https://api.chatnio.net&lt;/code&gt;，填入控制台中的 &lt;code&gt;API 设置&lt;/code&gt; 中的 API Key 即可使用&lt;/p&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;https://api.openai.com&lt;/code&gt; with &lt;code&gt;https://api.chatnio.net&lt;/code&gt; and fill in the API Key in the &lt;code&gt;API Settings&lt;/code&gt; in the console to use&lt;/p&gt; &#xA;&lt;h2&gt;📦 技术栈 | Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端: React + Radix UI + Tailwind CSS + Redux&lt;/li&gt; &#xA; &lt;li&gt;后端: Golang + Gin + Redis + MySQL + Tiktoken (OpenAI)&lt;/li&gt; &#xA; &lt;li&gt;应用技术: PWA + HTTP2 + WebSocket + Stream Buffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎃 贡献者 | Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://stats.deeptrain.net/contributor/Deeptrain-Community/chatnio/?column=6&amp;amp;theme=light&#34; alt=&#34;Contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📚 SDKs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Deeptrain-Community/chatnio-api-node&#34;&gt;JavaScript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Deeptrain-Community/chatnio-api-python&#34;&gt;Python SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Deeptrain-Community/chatnio-api-go&#34;&gt;Golang SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ 其他项目 | Other Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fystart.com&#34;&gt;Fyrrum Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextweb.chatnio.net&#34;&gt;ChatNio Next Web&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📄 开源协议 | License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0&lt;/p&gt; &#xA;&lt;h2&gt;❤ 捐助 | Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/3081394176&#34;&gt;@4EvEr&lt;/a&gt; ￥1000&lt;/p&gt; &#xA;&lt;h2&gt;写在最后&lt;/h2&gt; &#xA;&lt;p&gt;Chat Nio 方向更多是提供一站式服务：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不会考虑前端自定义 Endpoint （考虑到 token 的安全性），不会考虑脱离后端纯前端运行来支持 Vercel / Netify 一键部署，如追求轻量化部署请前往 &lt;a href=&#34;https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;Next Web&lt;/a&gt; / &lt;a href=&#34;https://github.com/Bin-Huang/chatbox&#34;&gt;Chat Box&lt;/a&gt; 等优秀的开源项目， Chat Nio 相较于轻量化的优势在于更便捷的跨设备同步，仅需登录账户就可同步设置 / 对话等功能，以及平台内置的功能。然而仍然可以通过 Key 中转来使用此类项目。&lt;/li&gt; &#xA; &lt;li&gt;不会考虑支持 Midjourney Proxy 中转回调等其他一众格式的中转，如仅需搭建中转服务请右转 &lt;a href=&#34;https://github.com/songquanpeng/one-api&#34;&gt;One API&lt;/a&gt; 等项目即使在其项目架构和代码并非 &lt;em&gt;&#34;最佳方案&#34;&lt;/em&gt; 的情况下 (说不好听就是因为在一个小架构上进行扩充形成大架构在后期看来很生 🌿, 包括前端 i18n)，我仍然推荐你使用其服务进行中转，毕竟活跃的开发者们和社区，以及项目的方向性和针对性，经过时间考验是值得推荐的成熟的方案。 Chat Nio 的中转偏向 &lt;strong&gt;Chat&lt;/strong&gt;，带来的好处是你可以无需自行兼容代码在 nextweb 等项目中直接使用该格式，如 GPT 4 Vision Preview（仅需在消息中复制 URL 即可），DALL-E，Midjourney 类等模型可直接使用聊天接口，依托于 Chat Nio 的 Adapter 层设计，可进行方便使用而无需自行兼容格式。&lt;/li&gt; &#xA; &lt;li&gt;还有一点需要注意的是，正如上文所说，我后期在时间不宽裕的情况下不会去考虑支持非导向为 Chat 的 Fine Tuning / Embeddings 等微调类模型，请右转。在 issue 里被我忽略或者关闭请不要不满。作为中学生（无他意，我不喜欢打年龄牌），我的时间有限，如果我不认为你的建议是值得去实现的，我不会去浪费时间。同时，不看文档提问题，不看相同 issue 提问题永远不是值得推荐的，同样适用于社区群中。&lt;/li&gt; &#xA; &lt;li&gt;顺带一提，不要以一个非友好状态来提问，学会良好的提问是推荐的。我不推荐你认为你自己是高人一等的。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>