<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-30T01:37:41Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Abstract-Foundation/examples</title>
    <updated>2025-01-30T01:37:41Z</updated>
    <id>tag:github.com,2025-01-30:/Abstract-Foundation/examples</id>
    <link href="https://github.com/Abstract-Foundation/examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloneable starter templates &amp; example repos to help kickstart your next project on Abstract.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://mintlify.s3-us-west-1.amazonaws.com/abstract/images/Block.svg?sanitize=true&#34; width=&#34;700px&#34; alt=&#34;abstract banner&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Abstract Examples&lt;/h1&gt; &#xA; &lt;p align=&#34;center&#34;&gt;Cloneable starter templates &amp;amp; example repos to help kickstart your next project on Abstract. &lt;/p&gt;&#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Using Examples&lt;/h2&gt; &#xA;&lt;p&gt;Each directory in this repository is a standalone example that you can clone and use as a starting point for your next project.&lt;/p&gt; &#xA;&lt;p&gt;Within each directory, you&#39;ll find a &lt;code&gt;README.md&lt;/code&gt; file with instructions on how to clone the example and get started.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Example Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-nextjs&#34;&gt;Abstract Global Wallet with Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implement Abstract Global Wallet in a Next.js application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-privy-nextjs&#34;&gt;Abstract Global Wallet with Privy and Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implement Abstract Global Wallet as an option using Privy as the authentication provider in a Next.js application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-rainbowkit-nextjs&#34;&gt;Abstract Global Wallet with RainbowKit and Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrate Abstract Global Wallet as an option in the RainbowKit connector in a Next.js application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-connectkit-nextjs&#34;&gt;Abstract Global Wallet with ConnectKit and Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrate Abstract Global Wallet as an option in the ConnectKit connector in a Next.js application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-thirdweb-nextjs&#34;&gt;Abstract Global Wallet with ThirdWeb and Next.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Integrate Abstract Global Wallet as an option using ThirdWeb signin connector in a Next.js application.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/agw-typescript&#34;&gt;Abstract Global Wallet with TypeScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Abstract Global Wallet in a simple TypeScript setup.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/contract-deployment&#34;&gt;Contract Deployment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to deploy smart contracts to Abstract using a variety of smart contract and client frameworks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/layerzero-onft&#34;&gt;LayerZero ONFT&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deploy and interact with LayerZero&#39;s Omnichain NFT (ONFT) contracts on Abstract.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/paymasters&#34;&gt;Paymaster Smart Contract&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build and deploy a paymaster smart contract that can sponsor the gas fees of transactions for other accounts on Abstract.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/smart-contract-accounts&#34;&gt;Smart Contract Account&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build your own basic smart contract wallet and submit transactions from it to use Abstract&#39;s native account abstraction.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/smart-contract-accounts-viem&#34;&gt;Smart Contract Account (with Viem)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build your own basic smart contract wallet and submit transactions from it to use Abstract&#39;s native account abstraction using Viem.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/smart-contract-accounts-factory&#34;&gt;Smart Contract Account Factory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a factory smart contract that can create smart contract accounts that have a single EOA signer.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Abstract-Foundation/examples/tree/main/session-keys&#34;&gt;Session Keys&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and use temporary session keys with Abstract Global Wallet to execute pre-defined actions without repeated signing.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>