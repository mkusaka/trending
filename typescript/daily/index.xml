<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:47:10Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vectorisvector/Polaris</title>
    <updated>2023-12-10T01:47:10Z</updated>
    <id>tag:github.com,2023-12-10:/vectorisvector/Polaris</id>
    <link href="https://github.com/vectorisvector/Polaris" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; project bootstrapped with &lt;a href=&#34;https://github.com/vercel/next.js/tree/canary/packages/create-next-app&#34;&gt;&lt;code&gt;create-next-app&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;# or&#xA;pnpm dev&#xA;# or&#xA;bun dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;You can start editing the page by modifying &lt;code&gt;app/page.tsx&lt;/code&gt;. The page auto-updates as you edit the file.&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; to automatically optimize and load Inter, a custom Google Font.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about Next.js, take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Next.js Documentation&lt;/a&gt; - learn about Next.js features and API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/learn&#34;&gt;Learn Next.js&lt;/a&gt; - an interactive Next.js tutorial.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check out &lt;a href=&#34;https://github.com/vercel/next.js/&#34;&gt;the Next.js GitHub repository&lt;/a&gt; - your feedback and contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Deploy on Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MichaelYuhe/ai-group-tabs</title>
    <updated>2023-12-10T01:47:10Z</updated>
    <id>tag:github.com,2023-12-10:/MichaelYuhe/ai-group-tabs</id>
    <link href="https://github.com/MichaelYuhe/ai-group-tabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Chrome extension helps you group your tabs with AI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI Group Tabs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MichaelYuhe/ai-group-tabs/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/MichaelYuhe/ai-group-tabs/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Chrome extension helps you group your tabs with AI.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The extension is still under development, feel free to open issues and pull requests. Any suggestions are welcome.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://t.me/+99v98-XOQY0zZGNl&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Demo Video:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/SjfKiXy3zOc&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/SjfKiXy3zOc/default.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Group tabs with AI by default categories&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fill OpenAI API key in popup and save in Chrome storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customize categories in popup&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Group new tabs automatically&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Publish on Chrome store&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Better prompt engineering&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Logo and name&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CI / CD for build and release new version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add toast&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use Vite and pnpm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Group the updated tab only when a tab is updated&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Custom model and API server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download and Start Using&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest released &lt;code&gt;dist.zip&lt;/code&gt; from &lt;a href=&#34;https://github.com/MichaelYuhe/ai-group-tabs/releases&#34;&gt;the release page&lt;/a&gt;, unzip after download, you will get a folder named &lt;code&gt;dist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open Chrome, go to &lt;code&gt;chrome://extensions/&lt;/code&gt;, turn on &lt;code&gt;Developer mode&lt;/code&gt; on the top right corner, click &lt;code&gt;Load unpacked&lt;/code&gt; on the top left corner, select the &lt;code&gt;dist&lt;/code&gt; folder you just unzipped.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fill in the OpenAI API key, add some types and click on the &#34;Save&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;Click on the &#34;Group Tabs&#34; button, your current tabs will be grouped.&lt;/li&gt; &#xA; &lt;li&gt;Your new tab will be grouped automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can change the model and API server in the options page.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install dependencies&#xA;pnpm install&#xA;&#xA;# Development&#xA;pnpm dev&#xA;&#xA;# Build&#xA;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Everyone contributor can get your one month free of Developer Plan on Zeabur.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zeabur.com?referralCode=MichaelYuhe&amp;amp;utm_source=ai-group-tab&amp;amp;utm_campaign=oss&#34;&gt;&lt;img src=&#34;https://zeabur.com/deployed-on-zeabur-dark.svg?sanitize=true&#34; alt=&#34;Deployed on Zeabur&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>3rd/tsdiagram</title>
    <updated>2023-12-10T01:47:10Z</updated>
    <id>tag:github.com,2023-12-10:/3rd/tsdiagram</id>
    <link href="https://github.com/3rd/tsdiagram" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create diagrams and plan your code with TypeScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TSDiagram&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;TSDiagram&lt;/strong&gt; is an online tool that helps you draft diagrams quickly by using TypeScript. &lt;br&gt; &lt;span&gt;ðŸ‘‰&lt;/span&gt; &lt;a href=&#34;https://tsdiagram.com&#34;&gt;https://tsdiagram.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lets you define your data models through &lt;strong&gt;top-level type aliases&lt;/strong&gt; and &lt;strong&gt;interfaces&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Automatically layouts the nodes in an efficient way.&lt;/li&gt; &#xA; &lt;li&gt;...but if you move one of the nodes manually, it will only auto-layout the other ones.&lt;/li&gt; &#xA; &lt;li&gt;Persists the document state in the URL and localStorage.&lt;/li&gt; &#xA; &lt;li&gt;Exports your diagrams as SVG.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Function call representation&lt;/li&gt; &#xA; &lt;li&gt;Customizable TypeScript context (lib, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Bring your own storage (different vendors)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This project is not just a diagramming tool, but also the foundation for a greater code visualization project. Imagine flagging types and functions in your code editor and see how they are connected, and how data flows through them. That&#39;s the end goal, so we&#39;ll swap the TS compiler with Tree-sitter in the process.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://root.b-cdn.net/tsdiagram/media.png&#34; alt=&#34;TSDiagram Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Special thanks &amp;lt;3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactflow.dev&#34;&gt;React Flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/monaco-editor&#34;&gt;Monaco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kieler/elkjs&#34;&gt;elkjs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixfbecker/dom-to-svg&#34;&gt;dom-to-svg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>