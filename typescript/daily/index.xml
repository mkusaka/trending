<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-23T01:37:45Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>safe-global/safe-smart-account</title>
    <updated>2024-06-23T01:37:45Z</updated>
    <id>tag:github.com,2024-06-23:/safe-global/safe-smart-account</id>
    <link href="https://github.com/safe-global/safe-smart-account" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Safe allows secure management of blockchain assets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Safe Smart Account&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/%40safe-global%2Fsafe-smart-account&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/%40safe-global%2Fsafe-smart-account.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/safe-global/safe-smart-account/actions&#34;&gt;&lt;img src=&#34;https://github.com/safe-global/safe-smart-account/workflows/safe-smart-account/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/safe-global/safe-smart-account&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/safe-global/safe-smart-account/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;This branch contains changes that are under development&lt;/strong&gt; To use the latest audited version make sure to use the correct commit. The tagged versions that are used by the Safe team can be found in the &lt;a href=&#34;https://github.com/safe-global/safe-smart-account/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Install requirements with npm:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;To run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, if you want to run the ERC-4337 compatibility test, it uses a live bundler and node, so it contains some pre-requisites:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define the environment variables:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;ERC4337_TEST_BUNDLER_URL=&#xA;ERC4337_TEST_NODE_URL=&#xA;ERC4337_TEST_SINGLETON_ADDRESS=&#xA;ERC4337_TEST_SAFE_FACTORY_ADDRESS=&#xA;MNEMONIC=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Pre-fund the executor account derived from the mnemonic with some Native Token to cover the deployment of an ERC4337 module and the pre-fund of the Safe for the test operation.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deployments&lt;/h3&gt; &#xA;&lt;p&gt;A collection of the different Safe contract deployments and their addresses can be found in the &lt;a href=&#34;https://github.com/safe-global/safe-deployments&#34;&gt;Safe deployments&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;To add support for a new network follow the steps of the &lt;code&gt;Deploy&lt;/code&gt; section and create a PR in the &lt;a href=&#34;https://github.com/safe-global/safe-deployments&#34;&gt;Safe deployments&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;Deploy&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Make sure to use the correct commit when deploying the contracts.&lt;/strong&gt; Any change (even comments) within the contract files will result in different addresses. The tagged versions that are used by the Safe team can be found in the &lt;a href=&#34;https://github.com/safe-global/safe-smart-account/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Current version:&lt;/strong&gt; The latest release is &lt;a href=&#34;https://github.com/safe-global/safe-smart-account/tree/v1.3.0-libs.0&#34;&gt;v1.3.0-libs.0&lt;/a&gt; on the commit &lt;a href=&#34;https://github.com/safe-global/safe-smart-account/commit/767ef36bba88bdbc0c9fe3708a4290cabef4c376&#34;&gt;767ef36&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This will deploy the contracts deterministically and verify the contracts on etherscan using &lt;a href=&#34;https://github.com/ethereum/solidity/releases/tag/v0.7.6&#34;&gt;Solidity 0.7.6&lt;/a&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Preparation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;code&gt;MNEMONIC&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;INFURA_KEY&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run deploy-all &amp;lt;network&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will perform the following steps&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;npx hardhat --network &amp;lt;network&amp;gt; deploy&#xA;npx hardhat --network &amp;lt;network&amp;gt; sourcify&#xA;npx hardhat --network &amp;lt;network&amp;gt; etherscan-verify&#xA;npx hardhat --network &amp;lt;network&amp;gt; local-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom Networks&lt;/h4&gt; &#xA;&lt;p&gt;It is possible to use the &lt;code&gt;NODE_URL&lt;/code&gt; env var to connect to any EVM based network via an RPC endpoint. This connection then can be used with the &lt;code&gt;custom&lt;/code&gt; network.&lt;/p&gt; &#xA;&lt;p&gt;E.g. to deploy the Safe contract suite on that network you would run &lt;code&gt;npm run deploy-all custom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The resulting addresses should be on all networks the same.&lt;/p&gt; &#xA;&lt;p&gt;Note: Address will vary if contract code is changed or a different Solidity version is used.&lt;/p&gt; &#xA;&lt;h4&gt;Replay protection (EIP-155)&lt;/h4&gt; &#xA;&lt;p&gt;Some networks require replay protection, making it incompatible with the default deployment process as it relies on a presigned transaction without replay protection (see &lt;a href=&#34;https://github.com/Arachnid/deterministic-deployment-proxy&#34;&gt;https://github.com/Arachnid/deterministic-deployment-proxy&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Safe Smart Account contracts use a different deterministic deployment proxy (&lt;a href=&#34;https://github.com/safe-global/safe-singleton-factory&#34;&gt;https://github.com/safe-global/safe-singleton-factory&lt;/a&gt;). To make sure that the latest version of this package is installed, make sure to run &lt;code&gt;npm i --save-dev @gnosis.pm/safe-singleton-factory&lt;/code&gt; before deployment. For more information, including how to deploy the factory to a new network, please refer to the factory repo.&lt;/p&gt; &#xA;&lt;p&gt;Note: This will result in different addresses compared to hardhat&#39;s default deterministic deployment process.&lt;/p&gt; &#xA;&lt;h3&gt;Verify contract&lt;/h3&gt; &#xA;&lt;p&gt;This command will use the deployment artifacts to compile the contracts and compare them to the onchain code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx hardhat --network &amp;lt;network&amp;gt; local-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will upload the contract source to Etherescan&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx hardhat --network &amp;lt;network&amp;gt; etherscan-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.safe.global&#34;&gt;Safe developer portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/error_codes.md&#34;&gt;Error codes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/guidelines.md&#34;&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Audits/ Formal Verification&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/audit_1_4_0.md&#34;&gt;for Version 1.4.0/1.4.1 by Ackee Blockchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/audit_1_3_0.md&#34;&gt;for Version 1.3.0 by G0 Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/audit_1_2_0.md&#34;&gt;for Version 1.2.0 by G0 Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/audit_1_1_1.md&#34;&gt;for Version 1.1.1 by G0 Group&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/rv_1_0_0.md&#34;&gt;for Version 1.0.0 by Runtime Verification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/safe-global/safe-smart-account/main/docs/alexey_audit.md&#34;&gt;for Version 0.0.1 by Alexey Akhunov&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security and Liability&lt;/h2&gt; &#xA;&lt;p&gt;All contracts are WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All smart contracts are released under LGPL-3.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenRailAssociation/osrd</title>
    <updated>2024-06-23T01:37:45Z</updated>
    <id>tag:github.com,2024-06-23:/OpenRailAssociation/osrd</id>
    <link href="https://github.com/OpenRailAssociation/osrd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source web application for railway infrastructure design, capacity analysis, timetabling and simulation&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://osrd.fr/en/&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/assets/branding/osrd_small_dark.svg&#34;&gt; &#xA;   &lt;img width=&#34;340px&#34; style=&#34;max-width: 100%;&#34; src=&#34;https://raw.githubusercontent.com/OpenRailAssociation/osrd/dev/assets/branding/osrd_small.svg?sanitize=true&#34; alt=&#34;OSRD logo&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;a href=&#34;https://publiccode.eu/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenRailAssociation/osrd/dev/assets/PMPC_badge.svg?sanitize=true&#34; width=&#34;110px&#34; alt=&#34;Public Money Public Code&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://osrd.fr/en/docs/guides/contribute/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/OpenRailAssociation/osrd&#34; alt=&#34;Contributors badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OpenRailAssociation/osrd/raw/dev/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-LGPL-blue.svg?sanitize=true&#34; alt=&#34;LGPL License badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/OpenRailAssociation/osrd/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/OpenRailAssociation/osrd/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;What is OSRD?&lt;/h2&gt; &#xA;&lt;p&gt;OSRD is an open source web application for railway infrastructure design, capacity analysis, timetabling and simulation.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s free and open-source forever!&lt;/p&gt; &#xA;&lt;p&gt;Learn more about the project on &lt;a href=&#34;https://osrd.fr/en/&#34;&gt;osrd.fr&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;p&gt;OSRD it not yet production ready. User and programming interfaces can and will change (now is the time to make suggestions!). Important features are missing. Documentation is sparse. Please don&#39;t rely on OSRD unless you are prepared to deal with frequent changes.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To compile and run the application with an example infrastructure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# build and run the entire stack&#xA;docker compose up -d --build&#xA;&#xA;./scripts/load-railjson-infra.sh small_infra tests/data/infras/small_infra/infra.json&#xA;./scripts/load-railjson-rolling-stock.sh tests/data/rolling_stocks/*.json&#xA;&#xA;# open the web app&#xA;xdg-open http://localhost:4000/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Linux or WSL users can use &lt;code&gt;scripts/osrd-compose.sh&lt;/code&gt; instead of &lt;code&gt;docker compose&lt;/code&gt; to enable host networking - useful to launch services in a debugger)&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;To deploy the application on a server, check out the &lt;a href=&#34;https://osrd.fr/en/docs/guides/deploy/&#34;&gt;deployment guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;Send an email at &lt;a href=&#34;mailto:contact@osrd.fr&#34;&gt;contact@osrd.fr&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenRailAssociation/osrd/issues/new?labels=kind%3Aquestion&amp;amp;template=question.yaml&#34;&gt;open an issue&lt;/a&gt;, or join the &lt;a href=&#34;https://matrix.to/#/#public-general:osrd.fr&#34;&gt;#public-general:osrd.fr&lt;/a&gt; matrix channel.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenRailAssociation/osrd/dev/assets/sponsors/france-dot.svg?sanitize=true&#34; width=&#34;150px&#34; height=&#34;150px&#34; alt=&#34;Ministère chargé des Transports&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenRailAssociation/osrd/dev/assets/sponsors/european-union.svg?sanitize=true&#34; width=&#34;150px&#34; height=&#34;150px&#34; alt=&#34;European Union&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenRailAssociation/osrd/dev/assets/sponsors/sncf-reseau.svg?sanitize=true&#34; width=&#34;150px&#34; height=&#34;150px&#34; alt=&#34;SNCF Réseau&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chanind/hanzi-writer</title>
    <updated>2024-06-23T01:37:45Z</updated>
    <id>tag:github.com,2024-06-23:/chanind/hanzi-writer</id>
    <link href="https://github.com/chanind/hanzi-writer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chinese character stroke order animations and practice quizzes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hanzi Writer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/chanind/hanzi-writer/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/chanind/hanzi-writer/master.svg?sanitize=true&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/chanind/hanzi-writer&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/chanind/hanzi-writer/master.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/hanzi-writer&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/hanzi-writer.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chanind.github.io/hanzi-writer&#34;&gt;https://chanind.github.io/hanzi-writer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hanzi Writer is a free and open-source javascript library for Chinese character stroke order animations and stroke order practice quizzes. Works with both simplified and traditional characters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chanind.github.io/hanzi-writer/demo.html&#34;&gt;Live demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more info and instructions on getting started check out &lt;a href=&#34;https://chanind.github.io/hanzi-writer&#34;&gt;https://chanind.github.io/hanzi-writer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data source&lt;/h2&gt; &#xA;&lt;p&gt;The chinese character svg and stroke order data used by Hanzi Writer is derived from the &lt;a href=&#34;https://github.com/skishore/makemeahanzi&#34;&gt;Make me a Hanzi&lt;/a&gt; project with some slight tweaks. The data can be found in the &lt;a href=&#34;https://github.com/chanind/hanzi-writer-data&#34;&gt;Hanzi Writer Data&lt;/a&gt; repo. There&#39;s a visualizer for this data &lt;a href=&#34;https://chanind.github.io/hanzi-writer-data&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome! If you would like to contribute code, you&#39;ll need to be able to build the project locally. After cloning the Hanzi Writer repo, you can get it set up by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run tests with &lt;code&gt;yarn test&lt;/code&gt; and you can build the project with &lt;code&gt;yarn build&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Hanzi Writer is released under an &lt;a href=&#34;https://raw.githubusercontent.com/chanind/hanzi-writer/master/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;The Hanzi Writer data comes from the &lt;a href=&#34;https://github.com/skishore/makemeahanzi&#34;&gt;Make Me A Hanzi&lt;/a&gt; project, which extracted the data from fonts by &lt;a href=&#34;http://www.arphic.com/&#34;&gt;Arphic Technology&lt;/a&gt;, a Taiwanese font forge that released their work under a permissive license in 1999. You can redistribute and/or modify this data under the terms of the Arphic Public License as published by Arphic Technology Co., Ltd. A copy of this license can be found in &lt;a href=&#34;https://raw.githubusercontent.com/chanind/hanzi-writer-data/master/ARPHICPL.TXT&#34;&gt;ARPHICPL.TXT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>