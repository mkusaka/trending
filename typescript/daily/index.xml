<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-07T01:59:43Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>remix-run/remix</title>
    <updated>2022-06-07T01:59:43Z</updated>
    <id>tag:github.com,2022-06-07:/remix-run/remix</id>
    <link href="https://github.com/remix-run/remix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Remix!&lt;/h1&gt; &#xA;&lt;p&gt;We are happy you&#39;re here!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://remix.run/&#34;&gt;Remix&lt;/a&gt; is a full stack web framework that lets you focus on the user interface and work back through web fundamentals to deliver a fast, slick, and resilient user experience that deploys to any Node.js server and even non-Node.js environments at the edge like Cloudflare Workers.&lt;/p&gt; &#xA;&lt;p&gt;Want to know more? Read the &lt;a href=&#34;https://remix.run/pages/technical-explanation&#34;&gt;Technical Explanation of Remix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the Remix source code. This repo is a work in progress, so we appreciate your patience as we figure things out.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation about Remix, please visit &lt;a href=&#34;https://remix.run/docs&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, please &lt;a href=&#34;https://rmx.as/discord&#34;&gt;join our community on Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is automatically generated on each release from the files in &lt;a href=&#34;https://raw.githubusercontent.com/remix-run/remix/main/docs&#34;&gt;the &lt;code&gt;docs&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing code and/or documentation, please see &lt;a href=&#34;https://raw.githubusercontent.com/remix-run/remix/main/docs/pages/contributing.md&#34;&gt;our guide to contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/remix-run/remix/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; for any questions about the kind of community we are trying to build here and what to do if you need help with someone who is not acting professionally.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>solidjs/solid</title>
    <updated>2022-06-07T01:59:43Z</updated>
    <id>tag:github.com,2022-06-07:/solidjs/solid</id>
    <link href="https://github.com/solidjs/solid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;img width=&#34;100%&#34; src=&#34;https://raw.githubusercontent.com/solidjs/solid/master/banner.png&#34; alt=&#34;SolidJS&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/solidjs/solid/actions/workflows/main-ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/solidjs/solid/Solid%20CI?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/solidjs/solid?branch=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/github/solidjs/solid.svg?style=for-the-badge&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/solid-js&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/solid-js.svg?style=for-the-badge&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/solid-js&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/solid-js.svg?style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/solidjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/722131463138705510?style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/solidjs/&#34;&gt;&lt;img src=&#34;https://img.shields.io/reddit/subreddit-subscribers/solidjs?style=for-the-badge&#34; alt=&#34;Subreddit subscribers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.solidjs.com/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://www.solidjs.com/docs/latest/api&#34;&gt;API Docs&lt;/a&gt; • &lt;a href=&#34;https://www.solidjs.com/tutorial/introduction_basics&#34;&gt;Features Tutorial&lt;/a&gt; • &lt;a href=&#34;https://playground.solidjs.com/?version=1.3.13#NobwRAdghgtgpmAXGGUCWEwBowBcCeADgsrgM4Ae2YZA9gK4BOAxiWGjIbY7gAQi9GcCABM4jXgF9eAM0a0YvADo1aAGzQiAtACsyAegDucAEYqA3EogcuPfr2ZCouOAGU0Ac2hqps+YpU6DW09CysrGXoIZlw0WgheAGEGCBdGAAoASn4rXgd4sj5gZhTcLF4yOFxkqNwAXV4AXgcnF3cvKDV0gAZMywT8iELeDEc4eFSm3iymgD4KqprU9JLamYBqXgBGPvCBoVwmBPTcvN4AHhN6XFx43gJiRpUrm-iVXnjEjWYAa0aQUZCCa4SSzU5nfirZaZSTgi76F63CBgga7CCwiBWISicTpGaNebnJZpXj6WblES0Zj0YEAOg8VQAompxsJcAAhfAASREJzAUEIhBUmTRYEkdSAA&#34;&gt;Playground&lt;/a&gt; • &lt;a href=&#34;https://discord.com/invite/solidjs&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Solid is a declarative JavaScript library for creating user interfaces. Instead of using a Virtual DOM, it compiles its templates to real DOM nodes and updates them with fine-grained reactions. Declare your state and use it throughout your app, and when a piece of state changes, only the code that depends on it will rerun. Check out our &lt;a href=&#34;https://www.youtube.com/watch?v=J70HXl1KhWE&amp;amp;ab_channel=SolidJS&#34;&gt;intro video&lt;/a&gt; or read on!&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fine-grained updates to the real DOM&lt;/li&gt; &#xA; &lt;li&gt;Declarative data: model your state as a system with reactive primitives&lt;/li&gt; &#xA; &lt;li&gt;Render-once mental model: your components are regular JavaScript functions that run once to set up your view&lt;/li&gt; &#xA; &lt;li&gt;Automatic dependency tracking: accessing your reactive state subscribes to it&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/this-is-learning/javascript-framework-todomvc-size-comparison-504f&#34;&gt;Small&lt;/a&gt; and &lt;a href=&#34;https://krausest.github.io/js-framework-benchmark/current.html&#34;&gt;fast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple: learn a few powerful concepts that can be reused, combined, and built on top of&lt;/li&gt; &#xA; &lt;li&gt;Provides modern framework features like JSX, fragments, Context, Portals, Suspense, streaming SSR, progressive hydration, Error Boundaries and concurrent rendering.&lt;/li&gt; &#xA; &lt;li&gt;Naturally debuggable: A &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is a real div, so you can use your browser&#39;s devtools to inspect the rendering&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/solidjs/solid/tree/main/packages/solid-element#readme&#34;&gt;Web component friendly&lt;/a&gt; and can author custom elements&lt;/li&gt; &#xA; &lt;li&gt;Isomorphic: render your components on the client and the server&lt;/li&gt; &#xA; &lt;li&gt;Universal: write &lt;a href=&#34;https://github.com/solidjs/solid/releases/tag/v1.2.0&#34;&gt;custom renderers&lt;/a&gt; to use Solid anywhere&lt;/li&gt; &#xA; &lt;li&gt;A growing community and ecosystem with active core team support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Quick Start&lt;/summary&gt; &#xA; &lt;p&gt;You can get started with a simple app by running the following in your terminal:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; npx degit solidjs/templates/js my-app&#xA;&amp;gt; cd my-app&#xA;&amp;gt; npm i # or yarn or pnpm&#xA;&amp;gt; npm run dev # or yarn or pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or for TypeScript:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; npx degit solidjs/templates/ts my-app&#xA;&amp;gt; cd my-app&#xA;&amp;gt; npm i # or yarn or pnpm&#xA;&amp;gt; npm run dev # or yarn or pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This will create a minimal, client-rendered application powered by &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Or you can install the dependencies in your own setup. To use Solid with JSX (&lt;em&gt;recommended&lt;/em&gt;), run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; npm install solid-js babel-preset-solid&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The easiest way to get set up is to add &lt;code&gt;babel-preset-solid&lt;/code&gt; to your &lt;code&gt;.babelrc&lt;/code&gt;, babel config for webpack, or rollup configuration:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#34;presets&#34;: [&#34;solid&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For TypeScript to work, remember to set your &lt;code&gt;.tsconfig&lt;/code&gt; to handle Solid&#39;s JSX:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#34;compilerOptions&#34;: {&#xA;  &#34;jsx&#34;: &#34;preserve&#34;,&#xA;  &#34;jsxImportSource&#34;: &#34;solid-js&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Why Solid?&lt;/h2&gt; &#xA;&lt;h3&gt;Performant&lt;/h3&gt; &#xA;&lt;p&gt;Meticulously engineered for performance and with half a decade of research behind it, Solid&#39;s performance is almost indistinguishable from optimized vanilla JavaScript (See Solid on the &lt;a href=&#34;https://rawgit.com/krausest/js-framework-benchmark/master/webdriver-ts-results/table.html&#34;&gt;JS Framework Benchmark&lt;/a&gt;). Solid is &lt;a href=&#34;https://bundlephobia.com/package/solid-js@1.3.15&#34;&gt;small&lt;/a&gt; and completely tree-shakable, and &lt;a href=&#34;https://levelup.gitconnected.com/how-we-wrote-the-fastest-javascript-ui-framework-again-db097ddd99b6&#34;&gt;fast&lt;/a&gt; when rendering on the server, too. Whether you&#39;re writing a fully client-rendered SPA or a server-rendered app, your users see it faster than ever. (&lt;a href=&#34;https://dev.to/ryansolid/thinking-granular-how-is-solidjs-so-performant-4g37&#34;&gt;Read more about Solid&#39;s performance&lt;/a&gt; from the library&#39;s creator.)&lt;/p&gt; &#xA;&lt;h3&gt;Powerful&lt;/h3&gt; &#xA;&lt;p&gt;Solid is fully-featured with everything you can expect from a modern framework. Performant state management is built-in with Context and Stores: you don&#39;t have to reach for a third party library to manage global state (if you don&#39;t want to). With Resources, you can use data loaded from the server like any other piece of state and build a responsive UI for it thanks to Suspense and concurrent rendering. And when you&#39;re ready to move to the server, Solid has full SSR and serverless support, with streaming and progressive hydration to get to interactive as quickly as possible. (Check out our full &lt;a href=&#34;https://www.solidjs.com/tutorial/introduction_basics&#34;&gt;interactive features walkthrough&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;h3&gt;Pragmatic&lt;/h3&gt; &#xA;&lt;p&gt;Do more with less: use simple, composable primitives without hidden rules and gotchas. In Solid, components are just functions - rendering is determined purely by how your state is used - so you&#39;re free to organize your code how you like and you don&#39;t have to learn a new rendering system. Solid encourages patterns like declarative code and read-write segregation that help keep your project maintainable, but isn&#39;t opinionated enough to get in your way.&lt;/p&gt; &#xA;&lt;h3&gt;Productive&lt;/h3&gt; &#xA;&lt;p&gt;Solid is built on established tools like JSX and TypeScript and integrates with the Vite ecosystem. Solid&#39;s bare-metal, minimal abstractions give you direct access to the DOM, making it easy to use your favorite native JavaScript libraries like D3. And the Solid ecosystem is growing fast, with &lt;a href=&#34;https://github.com/solidjs-community/solid-primitives&#34;&gt;custom primitives&lt;/a&gt;, &lt;a href=&#34;https://hope-ui.com/&#34;&gt;component libraries&lt;/a&gt;, and build-time utilities that let you &lt;a href=&#34;https://github.com/LXSMNSYC/solid-labels&#34;&gt;write Solid code in new ways&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Show Me!&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { render } from &#34;solid-js/web&#34;;&#xA;import { createSignal } from &#34;solid-js&#34;;&#xA;&#xA;// A component is just a function that (optionally) accepts properties and returns a DOM node&#xA;const Counter = (props) =&amp;gt; {&#xA;  // Create a piece of reactive state, giving us a accessor, count(), and a setter, setCount()&#xA;  const [count, setCount] = createSignal(props.startingCount || 1);&#xA;&#xA;  // The increment function calls the setter&#xA;  const increment = () =&amp;gt; setCount(count() + 1);&#xA;&#xA;  console.log(&#xA;    &#34;The body of the function runs once, like you&#39;d expect from calling any other function, so you only ever see this console log once.&#34;&#xA;  );&#xA;&#xA;  // JSX allows us to write HTML within our JavaScript function and include dynamic expressions using the { } syntax&#xA;  // The only part of this that will ever rerender is the count() text.&#xA;  return (&#xA;    &amp;lt;button type=&#34;button&#34; onClick={increment}&amp;gt;&#xA;      Increment {count()}&#xA;    &amp;lt;/button&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;// The render function mounts a component onto your page&#xA;render(() =&amp;gt; &amp;lt;Counter startingCount={2} /&amp;gt;, document.getElementById(&#34;app&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;See it in action in our interactive &lt;a href=&#34;https://playground.solidjs.com/?hash=-894962706&amp;amp;version=1.3.13&#34;&gt;Playground&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;p&gt;Solid compiles our JSX down to efficient real DOM expressions updates, still using the same reactive primitives (&lt;code&gt;createSignal&lt;/code&gt;) at runtime but making sure there&#39;s as little rerendering as possible. Here&#39;s what that looks like in this example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#xA;import { render, createComponent, delegateEvents, insert, template } from &#39;solid-js/web&#39;;&#xA;import { createSignal } from &#39;solid-js&#39;;&#xA;&#xA;const _tmpl$ = /*#__PURE__*/template(`&amp;lt;button type=&#34;button&#34;&amp;gt;Increment &amp;lt;/button&amp;gt;`, 2);&#xA;&#xA;const Counter = props =&amp;gt; {&#xA;  const [count, setCount] = createSignal(props.startingCount || 1);&#xA;  const increment = () =&amp;gt; setCount(count() + 1);&#xA;&#xA;  console.log(&#34;The body of the function runs once . . .&#34;);&#xA;&#xA;  return (() =&amp;gt; {&#xA;    //_el$ is a real DOM node!&#xA;    const _el$ = _tmpl$.cloneNode(true);&#xA;          _el$.firstChild;&#xA;&#xA;    _el$.$$click = increment;&#xA;&#xA;    //This inserts the count as a child of the button in a way that allows count to update without rerendering the whole button&#xA;    insert(_el$, count, null);&#xA;&#xA;    return _el$;&#xA;  })();&#xA;};&#xA;&#xA;render(() =&amp;gt; createComponent(Counter, {&#xA;  startingCount: 2&#xA;}), document.getElementById(&#34;app&#34;));&#xA;&#xA;delegateEvents([&#34;click&#34;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;p&gt;Check out our official &lt;a href=&#34;https://www.solidjs.com/guide&#34;&gt;documentation&lt;/a&gt; or browse some &lt;a href=&#34;https://github.com/solidjs/solid/raw/main/documentation/resources/examples.md&#34;&gt;examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Browser Support&lt;/h2&gt; &#xA;&lt;p&gt;SolidJS Core is committed to supporting the last 2 years of modern browsers including Firefox, Safari, Chrome and Edge (for desktop and mobile devices). We do not support IE or similar sunset browsers. For server environments, we support Node LTS and the latest Deno and Cloudflare Worker runtimes.&lt;/p&gt; &#xA;&lt;img src=&#34;https://saucelabs.github.io/images/opensauce/powered-by-saucelabs-badge-gray.svg?sanitize=true&#34; alt=&#34;Testing Powered By SauceLabs&#34; width=&#34;300&#34;&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Come chat with us on &lt;a href=&#34;https://discord.com/invite/solidjs&#34;&gt;Discord&lt;/a&gt;! Solid&#39;s creator and the rest of the core team are active there, and we&#39;re always looking for contributions.&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/solidjs/solid/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/contributors.svg?width=890&amp;amp;button=false&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Open Collective&lt;/h3&gt; &#xA;&lt;p&gt;Support us with a donation and help us continue our activities. [&lt;a href=&#34;https://opencollective.com/solid&#34;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/solid/backer/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/backer/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/backer/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Become a sponsor and get your logo on our README on GitHub with a link to your site. [&lt;a href=&#34;https://opencollective.com/solid#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/solid/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/solid/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/solid/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>git-noter/gitnoter</title>
    <updated>2022-06-07T01:59:43Z</updated>
    <id>tag:github.com,2022-06-07:/git-noter/gitnoter</id>
    <link href="https://github.com/git-noter/gitnoter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source, markdown-based, self-hosted note taking webapp.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gitnoter.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/git-noter/gitnoter/main/public/logo.svg?sanitize=true&#34; width=&#34;100&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Create and store notes to your git repository! &lt;br&gt; &lt;a href=&#34;https://gitnoter.com&#34;&gt;&lt;strong&gt;https://gitnoter.com&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GitNoter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/git-noter/gitnoter/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/git-noter/gitnoter/Test/main?color=forestgreen&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/git-noter/gitnoter&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/git-noter/gitnoter/branch/main/graph/badge.svg?token=P40BDKYDBI&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/git-noter/gitnoter/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=git-noter/gitnoter&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/276bf59cb3ba4249863bbdb8c290fe14&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitnoter.com&#34;&gt;GitNoter&lt;/a&gt; is a web application that allows users to store notes in their git repository. This is a frontend project built using mainly react (typescript), redux-toolkit &amp;amp; mui components. &lt;a href=&#34;https://github.com/git-noter/gitnoter-api&#34;&gt;GitNoter API&lt;/a&gt; is the backend implementation of REST APIs which are used by this react app.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/git-noter/gitnoter/main/public/demo/demo-gitnoter-720p.gif&#34; alt=&#34;GitNoter Demo&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Login with GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Create, edit, delete, organize &amp;amp; explore notes easily with a nice &amp;amp; clean user interface.&lt;/li&gt; &#xA; &lt;li&gt;Markdown format supported allowing users to add hyperlink, table, headings, code blocks, blockquote... etc inside notes.&lt;/li&gt; &#xA; &lt;li&gt;Editor allows preview of markdown.&lt;/li&gt; &#xA; &lt;li&gt;Quickly copy code from the code section using copy to clipboard button.&lt;/li&gt; &#xA; &lt;li&gt;Store notes directly at the root or use folders to organize them (nesting supported).&lt;/li&gt; &#xA; &lt;li&gt;Explore all the notes from a specific directory with single click.&lt;/li&gt; &#xA; &lt;li&gt;All the notes are stored inside user&#39;s github repository.&lt;/li&gt; &#xA; &lt;li&gt;Notes are cached to avoid additional API calls.&lt;/li&gt; &#xA; &lt;li&gt;URLs can be bookmarked.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Local Development Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js version &lt;code&gt;18&lt;/code&gt; or above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Start the server&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the react app in the development mode. Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt; &#xA;&lt;h4&gt;Run tests&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will execute all the tests and also prints the code coverage percentage.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution Guidelines&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Every Contribution Makes a Difference&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/git-noter/gitnoter/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people 🎉&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/git-noter/gitnoter/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/gitnoter/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>