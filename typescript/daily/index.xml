<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-27T01:45:03Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TypeCellOS/BlockNote</title>
    <updated>2023-05-27T01:45:03Z</updated>
    <id>tag:github.com,2023-05-27:/TypeCellOS/BlockNote</id>
    <link href="https://github.com/TypeCellOS/BlockNote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A &#34;Notion-style&#34; block-based extensible text editor built on top of Prosemirror and Tiptap.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.blocknotejs.org&#34;&gt; &lt;img alt=&#34;TypeCell&#34; src=&#34;https://github.com/TypeCellOS/BlockNote/raw/main/packages/website/docs/public/img/logos/banner.svg?raw=true&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Welcome to BlockNote! The open source Block-Based rich text editor. Easily add a modern text editing experience to your app. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/Qc2QTTH5dF&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/badge/Chat on discord%20-%237289DA.svg?&amp;amp;style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#typecell-space:matrix.org&#34;&gt;&lt;img alt=&#34;Matrix&#34; src=&#34;https://img.shields.io/badge/Chat on matrix%20-%23000.svg?&amp;amp;style=for-the-badge&amp;amp;logo=matrix&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.blocknotejs.org&#34;&gt; Homepage &lt;/a&gt; - &lt;a href=&#34;https://www.blocknotejs.org/docs/introduction&#34;&gt; Introduction &lt;/a&gt; - &lt;a href=&#34;https://www.blocknotejs.org/docs/quickstart&#34;&gt; Documentation &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Live demo&lt;/h1&gt; &#xA;&lt;p&gt;Play with the editor @ &lt;a href=&#34;https://blocknote-main.vercel.app/&#34;&gt;https://blocknote-main.vercel.app/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(Source in &lt;a href=&#34;https://raw.githubusercontent.com/TypeCellOS/BlockNote/main/examples/editor&#34;&gt;examples/editor&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h1&gt;Example code (React)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/%40blocknote%2Freact&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/%40blocknote%2Freact.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { BlockNoteView, useBlockNote } from &#34;@blocknote/react&#34;;&#xA;import &#34;@blocknote/core/style.css&#34;;&#xA;&#xA;function App() {&#xA;  const editor = useBlockNote({&#xA;    onEditorContentChange: (editor) =&amp;gt; {&#xA;      // Log the document to console on every update&#xA;      console.log(editor.getJSON());&#xA;    },&#xA;  });&#xA;&#xA;  return &amp;lt;BlockNoteView editor={editor} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;@blocknote/react&lt;/code&gt; comes with a fully styled UI that makes it an instant, polished editor ready to use in your app.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer to create your own UI components (menus), or don&#39;t want to use React, you can use &lt;code&gt;@blocknote/core&lt;/code&gt; (&lt;em&gt;advanced&lt;/em&gt;, &lt;a href=&#34;https://www.blocknotejs.org/docs/vanilla-js&#34;&gt;see docs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;BlockNote comes with a number of features and components to make it easy to embed a high-quality block-based editor in your app:&lt;/p&gt; &#xA;&lt;h3&gt;Animations:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/animations.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Helpful placeholders:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/placeholders.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Drag and drop blocks:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/dragdrop.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Nesting / indentation with tab and shift+tab:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/nesting.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Slash (/) menu:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/slashmenu.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Format menu:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/selectmenu.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h3&gt;Real-time collaboration:&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/TypeCellOS/BlockNote/raw/readme/.resources/collaboration.gif?raw=true&#34; width=&#34;400&#34;&gt; &#xA;&lt;h1&gt;Feedback üôã‚Äç‚ôÇÔ∏èüôã‚Äç‚ôÄÔ∏è&lt;/h1&gt; &#xA;&lt;p&gt;We&#39;d love to hear your thoughts and see your experiments, so &lt;a href=&#34;https://discord.gg/Qc2QTTH5dF&#34;&gt;come and say hi on Discord&lt;/a&gt; or &lt;a href=&#34;https://matrix.to/#/#typecell-space:matrix.org&#34;&gt;Matrix&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing üôå&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/TypeCellOS/BlockNote/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more info and guidance on how to run the project (TLDR: just use &lt;code&gt;npm start&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Directory structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;blocknote&#xA;‚îú‚îÄ‚îÄ packages/core       - The core of the editor&#xA;‚îú‚îÄ‚îÄ packages/react      - The main library for use in React apps&#xA;‚îú‚îÄ‚îÄ examples/editor     - Example React app that embeds the editor&#xA;‚îú‚îÄ‚îÄ examples/vanilla    - An advanced example if you don&#39;t want to use React or want to build your own UI components&#xA;‚îî‚îÄ‚îÄ tests               - Playwright end to end tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The codebase is automatically tested using Vitest and Playwright.&lt;/p&gt; &#xA;&lt;h1&gt;Credits ‚ù§Ô∏è&lt;/h1&gt; &#xA;&lt;p&gt;BlockNote builds directly on two awesome projects; &lt;a href=&#34;https://prosemirror.net/&#34;&gt;Prosemirror&lt;/a&gt; by Marijn Haverbeke and &lt;a href=&#34;https://tiptap.dev/&#34;&gt;Tiptap&lt;/a&gt;. Consider sponsoring those libraries when using BlockNote: &lt;a href=&#34;https://marijnhaverbeke.nl/fund/&#34;&gt;Prosemirror&lt;/a&gt;, &lt;a href=&#34;https://github.com/sponsors/ueberdosis&#34;&gt;Tiptap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;BlockNote is built as part of &lt;a href=&#34;https://www.typecell.org&#34;&gt;TypeCell&lt;/a&gt;. TypeCell is proudly sponsored by the renowned &lt;a href=&#34;https://nlnet.nl/foundation/&#34;&gt;NLNet foundation&lt;/a&gt; who are on a mission to support an open internet, and protect the privacy and security of internet users. Check them out!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nlnet.nl&#34;&gt;&lt;img src=&#34;https://nlnet.nl/image/logos/NGIAssure_tag.svg?sanitize=true&#34; alt=&#34;NLNet&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hosting and deployments powered by Vercel:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/?utm_source=TypeCell&amp;amp;utm_campaign=oss&#34;&gt;&lt;img src=&#34;https://images.ctfassets.net/e5382hct74si/78Olo8EZRdUlcDUFQvnzG7/fa4cdb6dc04c40fceac194134788a0e2/1618983297-powered-by-vercel.svg?sanitize=true&#34; alt=&#34;NLNet&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>strapi/nextjs-corporate-starter</title>
    <updated>2023-05-27T01:45:03Z</updated>
    <id>tag:github.com,2023-05-27:/strapi/nextjs-corporate-starter</id>
    <link href="https://github.com/strapi/nextjs-corporate-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Strapi Demo application for Corporate Websites using Next.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Strapi Starter Next 13, Tailwind, Typescript and Strapi&lt;/h1&gt; &#xA;&lt;p&gt;note: This project was started with love by &lt;a href=&#34;https://github.com/TreciaKS&#34;&gt;Trecia&lt;/a&gt;, &lt;a href=&#34;https://github.com/malgamves&#34;&gt;Daniel&lt;/a&gt; and &lt;a href=&#34;https://github.com/PaulBratslavsky&#34;&gt;Paul&lt;/a&gt;. We were all new to Next 13 and Typescript. If you find any bugs or improvements feel free to create an issue. Thank you all for your support and participation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865321-0da5e81f-4832-4cce-bcd1-ecd79e9b9cc3.gif&#34; alt=&#34;demo-site&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository locally:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  git clone https://github.com/strapi/nextjs-corporate-starter.git&#xA;    or&#xA;  gh repo clone strapi/nextjs-corporate-starter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;setup&lt;/code&gt; command to setup frontend and backend dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  yarn setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Next, navigate to your &lt;code&gt;/backend&lt;/code&gt; directory and set up your &lt;code&gt;.env&lt;/code&gt; file. You can use the &lt;code&gt;.env.example&lt;/code&gt; file as reference:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;HOST=localhost&#xA;PORT=1337&#xA;APP_KEYS=&#34;toBeModified1,toBeModified2&#34;&#xA;API_TOKEN_SALT=tobemodified&#xA;ADMIN_JWT_SECRET=tobemodified&#xA;JWT_SECRET=tobemodified&#xA;TRANSFER_TOKEN_SALT=tobemodified&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Start your project by running the following command:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  yarn build&#xA;  yarn develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will be prompted to create your first admin user.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865420-5f03a90f-b893-4057-9634-9632920a7d97.gif&#34; alt=&#34;admin-user&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Great. You now have your project running. Let&#39;s add some data.&lt;/p&gt; &#xA;&lt;h2&gt;Seeding The Data&lt;/h2&gt; &#xA;&lt;p&gt;We are going to use our DEITS feature which will alow to easily import data into your project.&lt;/p&gt; &#xA;&lt;p&gt;You can learn more about it in our documentation &lt;a href=&#34;https://docs.strapi.io/dev-docs/data-management&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the root of our project we have our &lt;code&gt;seed-data.tar.gz&lt;/code&gt; file. We will use it to seed our data.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open up your terminal and make sure you are still in you &lt;code&gt;backend&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command to seed your data:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  yarn strapi import -f ../seed-data.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865491-05cb5818-a0d0-49ce-807e-a879f7e3070c.gif&#34; alt=&#34;after-import&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will import your data locally. Log back into your admin panel to see the newly imported data.&lt;/p&gt; &#xA;&lt;p&gt;Here is a quick video covering initial setup and data seeding.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/strapi/nextjs-corporate-starter/assets/6153188/80f00bf5-d17b-449d-8a0d-7f0d9614f40b&#34;&gt;https://github.com/strapi/nextjs-corporate-starter/assets/6153188/80f00bf5-d17b-449d-8a0d-7f0d9614f40b&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting Up The Frontend&lt;/h2&gt; &#xA;&lt;p&gt;Next we need to switch to our &lt;code&gt;/frontend&lt;/code&gt; directory and create our &lt;code&gt;.env&lt;/code&gt; file and paste in the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NEXT_PUBLIC_STRAPI_API_TOKEN=your-api-token&#xA;NEXT_PUBLIC_PAGE_LIMIT=6&#xA;NEXT_PUBLIC_STRAPI_FORM_SUBMISSION_TOKEN=your-form-submission-token&#xA;NEXT_STRAPI_API_URL=http://localhost:1337&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before starting our Next JS app we need to go inside our Strapi Admin and create two tokens that we will be using for &lt;strong&gt;form submission&lt;/strong&gt; and displaying our &lt;strong&gt;content&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Inside your Strapi Admin Panel navigate to Settings -&amp;gt; API Tokens and click on the &lt;code&gt;Create new API Token&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865572-cebc5538-374c-4050-91cd-c303fae25a3d.png&#34; alt=&#34;api-tokens&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here are our Token Settings&lt;/p&gt; &#xA;&lt;p&gt;Name: Public API Token Content Description: Access to public content. Token duration: Unlimited Token type: Custom&lt;/p&gt; &#xA;&lt;p&gt;In Permissions lets give the following access.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Content&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Permissions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Article&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find and findOne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Author&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find and findOne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Category&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find and findOne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Global&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Page&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find and findOne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Product-feature&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;find and findOne&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865625-a3634d89-0f40-4a6d-a356-8f654abd88b9.gif&#34; alt=&#34;permissions&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you have your token add it to your &lt;code&gt;NEXT_PUBLIC_STRAPI_API_TOKEN&lt;/code&gt; variable name in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Alternatively:&lt;/strong&gt; you can create a READ only Token that will give READ permission to all your endpoints.&lt;/p&gt; &#xA;&lt;p&gt;In this particular project this is not an issue. Although the above is the recommended way, just wanted to show you this option here as well.&lt;/p&gt; &#xA;&lt;p&gt;When creating a Token, just select the &lt;code&gt;Read-only&lt;/code&gt; option from token type drop down.&lt;/p&gt; &#xA;&lt;img width=&#34;1093&#34; alt=&#34;create-read-only-token&#34; src=&#34;https://github.com/strapi/nextjs-corporate-starter/assets/6153188/3ea6c029-b296-4bbc-a5ce-33eedac52a03&#34;&gt; &#xA;&lt;p&gt;Next create a token that will allow us to submit our form.&lt;/p&gt; &#xA;&lt;p&gt;Name: Public API Form Submit Description: Form Submission. Token duration: Unlimited Token type: Custom&lt;/p&gt; &#xA;&lt;p&gt;In Permissions lets give the following access.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Content&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Permissions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lead-Form-Submission&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;create&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Add your token to your &lt;code&gt;NEXT_PUBLIC_STRAPI_FORM_SUBMISSION_TOKEN&lt;/code&gt; variable name in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Once your environment variables are set you can start your frontend application by running &lt;code&gt;yarn dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should now see your Next JS frontend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6153188/231865662-d870051f-4503-4a01-bc6b-635c7c5ca40d.png&#34; alt=&#34;frontend&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Start Both Projects Concurrently&lt;/h2&gt; &#xA;&lt;p&gt;We can also start both projects with one command using the &lt;code&gt;concurrently&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;You can find the setting inside the &lt;code&gt;package.json&lt;/code&gt; file inside the root folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;frontend&#34;: &#34;yarn dev --prefix ../frontend/&#34;,&#xA;    &#34;backend&#34;: &#34;yarn dev --prefix ../backend/&#34;,&#xA;    &#34;clear&#34;: &#34;cd frontend &amp;amp;&amp;amp; rm -rf .next &amp;amp;&amp;amp; rm -rf cache&#34;,&#xA;    &#34;setup:frontend&#34;: &#34;cd frontend &amp;amp;&amp;amp; yarn&#34;,&#xA;    &#34;setup:backend&#34;: &#34;cd backend &amp;amp;&amp;amp; yarn&#34;,&#xA;    &#34;setup&#34;: &#34;yarn install &amp;amp;&amp;amp; yarn setup:frontend &amp;amp;&amp;amp; yarn setup:backend&#34;,&#xA;    &#34;dev&#34;: &#34;yarn clear &amp;amp;&amp;amp; concurrently \&#34;cd frontend &amp;amp;&amp;amp; yarn dev\&#34; \&#34;cd backend &amp;amp;&amp;amp; yarn develop\&#34;&#34;&#xA;  },&#xA;  &#34;dependencies&#34;: {&#xA;    &#34;concurrently&#34;: &#34;^7.6.0&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can start both apps by running &lt;code&gt;yarn dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Conclusion&lt;/h2&gt; &#xA;&lt;p&gt;Hope you find this starter useful, it is a bare-bone example to help you get started quickly.&lt;/p&gt; &#xA;&lt;p&gt;Would love to hear what you will build using it.&lt;/p&gt; &#xA;&lt;p&gt;If you find bugs or have suggestions feel free to create issues.&lt;/p&gt; &#xA;&lt;p&gt;Thank you and stay awesome.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing to the Next.js Corporate Starter repository&lt;/h1&gt; &#xA;&lt;p&gt;We&#39;re so excited that you&#39;re thinking about contributing to the Next.js Corporate Starter open-source project! If you&#39;re unsure or afraid of anything, just know that you can&#39;t mess up here. Any contribution is valuable, and we appreciate you!&lt;/p&gt; &#xA;&lt;p&gt;This document aims to provide all the necessary information for you to make a contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Before you can contribute, you need to have the following installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js and npm: You can download these from the official &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js website&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Git: You can find installation instructions for Git in the official &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;Git Book&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Steps to Contribute&lt;/h2&gt; &#xA;&lt;h3&gt;1. Fork the Repository&lt;/h3&gt; &#xA;&lt;p&gt;In your web browser, navigate to &lt;a href=&#34;https://github.com/strapi/nextjs-corporate-starter&#34;&gt;https://github.com/strapi/nextjs-corporate-starter&lt;/a&gt;. Click the &#39;Fork&#39; button in the upper right-hand corner of the page. This creates a copy of the repository in your GitHub account.&lt;/p&gt; &#xA;&lt;h3&gt;2. Clone your Fork&lt;/h3&gt; &#xA;&lt;p&gt;Now, go to your version of the repository. You can do this by navigating to &lt;a href=&#34;https://github.com/USERNAME/nextjs-corporate-starter&#34;&gt;https://github.com/USERNAME/nextjs-corporate-starter&lt;/a&gt; (replace &#39;USERNAME&#39; with your GitHub username). Here, click the &#39;Clone&#39; button and then &#39;Copy to clipboard&#39; to copy the git URL.&lt;/p&gt; &#xA;&lt;p&gt;Next, you need to open your terminal, navigate to where you want to store the project, and type the following command, followed by &#39;Enter&#39;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone PASTE_CLONED_REPOSITORY_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &#39;PASTE_CLONED_REPOSITORY_URL&#39; with the URL you copied earlier. This command downloads your fork to your computer.&lt;/p&gt; &#xA;&lt;h3&gt;3. Add Upstream Repository&lt;/h3&gt; &#xA;&lt;p&gt;Before you can start contributing, you have to set up a reference to the original repository. You can do this with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/strapi/nextjs-corporate-starter.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command adds a new remote, named &#39;upstream&#39;, that points to the original repository.&lt;/p&gt; &#xA;&lt;h3&gt;4. Synchronize your Fork&lt;/h3&gt; &#xA;&lt;p&gt;Before you start making changes, you should synchronize your forked repository with the latest changes from the upstream. Here are the steps:&lt;/p&gt; &#xA;&lt;p&gt;a. Fetch the branches and their respective commits:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git fetch upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;b. Checkout to the main branch of your fork:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;c. Merge changes from the upstream&#39;s main branch into your local main branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git merge upstream/main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This brings your fork&#39;s main branch into sync with the upstream repository, without losing your local changes.&lt;/p&gt; &#xA;&lt;h3&gt;5. Create a Branch&lt;/h3&gt; &#xA;&lt;p&gt;When you&#39;re making a contribution, it&#39;s best to make your changes in a new branch instead of the main branch. You can create a new branch and switch to it using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b BRANCH_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &#39;BRANCH_NAME&#39; with a name that describes the change you&#39;re planning to make.&lt;/p&gt; &#xA;&lt;h3&gt;6. Make your Changes&lt;/h3&gt; &#xA;&lt;p&gt;Now, you can start making changes to the project. Feel free to make changes that you think will enhance the project.&lt;/p&gt; &#xA;&lt;h3&gt;7. Commit your Changes&lt;/h3&gt; &#xA;&lt;p&gt;When you&#39;ve made your changes, you need to commit them. This is like creating a save point in a game. You can do this using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add -A&#xA;git commit -m &#34;Your detailed commit message&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &#34;Your detailed commit message&#34; with a description of the changes you made.&lt;/p&gt; &#xA;&lt;h3&gt;8. Push your Changes&lt;/h3&gt; &#xA;&lt;p&gt;After committing your changes, you need to push them to your forked repository on GitHub. You can do this with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin BRANCH_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &#39;BRANCH_NAME&#39; with the name of the branch you created earlier.&lt;/p&gt; &#xA;&lt;h3&gt;9. Create a Pull Request&lt;/h3&gt; &#xA;&lt;p&gt;After you&#39;ve pushed your changes, you&#39;re ready to create a pull request (PR). Navigate to your forked repository in your web browser and click on &#39;Pull request&#39; (near the top of the page), then on &#39;New pull request&#39;. Ensure that the base fork is the original repository and the base is &#39;main&#39;, and that the head fork is your fork and the compare is the branch you created.&lt;/p&gt; &#xA;&lt;p&gt;Enter a title for your PR and describe the changes you made. Once you&#39;re ready, click &#39;Create pull request&#39;.&lt;/p&gt; &#xA;&lt;h3&gt;Congrats! üéâ&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ve just made a contribution to the Next.js Corporate Starter project! The team will review your changes and may suggest some modifications or improvements. Once your changes have been approved, they will be merged into the main codebase.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your contribution. We appreciate you!&lt;/p&gt; &#xA;&lt;p&gt;Remember, everyone was new to open-source at some point. If you&#39;re unsure about something, don&#39;t hesitate to ask for help. Good luck and happy hacking!&lt;/p&gt; &#xA;&lt;h3&gt;Psst...&lt;/h3&gt; &#xA;&lt;p&gt;If you find yourself contributing frequently, we&#39;ve provided a script in the package.json to help keep your local project synchronized with the main branch of the upstream (original) project. Simply execute the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn repo:upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How do I add additional pages?&lt;/h3&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://youtu.be/EoVrTNA3geM&#34;&gt;this video&lt;/a&gt; where I will guide on how to do this.&lt;/p&gt; &#xA;&lt;h3&gt;How do I update my Strapi version?&lt;/h3&gt; &#xA;&lt;p&gt;Check out this &lt;a href=&#34;https://github.com/strapi/nextjs-corporate-starter/issues/17#issuecomment-1558149967&#34;&gt;this issue comment&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>logaretm/vee-validate</title>
    <updated>2023-05-27T01:45:03Z</updated>
    <id>tag:github.com,2023-05-27:/logaretm/vee-validate</id>
    <link href="https://github.com/logaretm/vee-validate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚úÖ Painless Vue forms&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://vee-validate.logaretm.com&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/logaretm/vee-validate/main/logo.png&#34; width=&#34;200&#34; title=&#34;Go to website&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Painless Vue forms &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.npmjs.com/package/vee-validate&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vee-validate.svg?label=&amp;amp;color=05bda8&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://npm-stat.com/charts.html?package=vee-validate&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/vee-validate.svg?color=05bd6d&amp;amp;label=&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://vee-validate.logaretm.com/v4/&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-docs%20and%20demos-009f53&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/logaretm&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-%E2%99%A5%20Sponsors-ec5cc6&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/logaretm&#34;&gt; &lt;img src=&#34;https://sponsors.logaretm.com/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;üçû Easy:&lt;/strong&gt; Declarative validation that is familiar and easy to setup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üßò‚Äç‚ôÄÔ∏è Flexible:&lt;/strong&gt; Synchronous, Asynchronous, field-level or form-level validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;‚ö°Ô∏è Fast:&lt;/strong&gt; Build faster forms faster with intuitive API and small footprint&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üèè Minimal:&lt;/strong&gt; Only handles the complicated form concerns, gives you full control over everything else&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üòé UI Agnostic:&lt;/strong&gt; Works with native HTML elements or your favorite UI library components&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ü¶æ Progressive:&lt;/strong&gt; Works whether you use Vue.js as a progressive enhancement or in a complex setup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;‚úÖ Built-in Rules:&lt;/strong&gt; Companion lib with 25+ Rules that covers most needs in most web applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üåê i18n:&lt;/strong&gt; 45+ locales for built-in rules contributed by developers from all over the world&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Install with yarn&#xA;yarn add vee-validate&#xA;&#xA;# Install with npm&#xA;npm install vee-validate --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Vue version support&lt;/h3&gt; &#xA;&lt;p&gt;The main v4 version supports Vue 3.x only, for previous versions of Vue, check the following the table&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;vue Version&lt;/th&gt; &#xA;   &lt;th&gt;vee-validate version&lt;/th&gt; &#xA;   &lt;th&gt;Documentation Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;2.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2.x&lt;/code&gt; or &lt;code&gt;3.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vee-validate.logaretm.com/v2&#34;&gt;v2&lt;/a&gt; or &lt;a href=&#34;https://vee-validate.logaretm.com/v3&#34;&gt;v3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;3.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vee-validate.logaretm.com/v4&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;vee-validate offers two styles to integrate form validation into your Vue.js apps.&lt;/p&gt; &#xA;&lt;h4&gt;Composition API&lt;/h4&gt; &#xA;&lt;p&gt;If you want more fine grained control, you can use &lt;code&gt;useField&lt;/code&gt; function to compose validation logic into your component:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script setup&amp;gt;&#xA;// MyInputComponent.vue&#xA;import { useField } from &#39;vee-validate&#39;;&#xA;&#xA;const props = defineProps&amp;lt;{&#xA;  name: string;&#xA;}&amp;gt;();&#xA;&#xA;// Validator function&#xA;const isRequired = value =&amp;gt; (value ? true : &#39;This field is required&#39;);&#xA;&#xA;const { value, errorMessage } = useField(props.name, isRequired);&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;template&amp;gt;&#xA;  &amp;lt;input v-model=&#34;value&#34; /&amp;gt;&#xA;  &amp;lt;span&amp;gt;{{ errorMessage }}&amp;lt;/span&amp;gt;&#xA;&amp;lt;/template&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can you can use &lt;code&gt;useForm&lt;/code&gt; to make your form component automatically pick up your input fields declared with &lt;code&gt;useField&lt;/code&gt; and manage them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script setup&amp;gt;&#xA;import { useForm } from &#39;vee-validate&#39;;&#xA;import MyInputComponent from &#39;@/components/MyInputComponent.vue&#39;;&#xA;&#xA;const { handleSubmit } = useForm();&#xA;&#xA;const onSubmit = handleSubmit(values =&amp;gt; {&#xA;  // Submit to API&#xA;  console.log(values); // { email: &#39;email@gmail.com&#39; }&#xA;});&#xA;&amp;lt;/script&amp;gt;&#xA;&#xA;&amp;lt;template&amp;gt;&#xA;  &amp;lt;form @submit=&#34;onSubmit&#34;&amp;gt;&#xA;    &amp;lt;MyInputComponent name=&#34;email&#34; /&amp;gt;&#xA;  &amp;lt;/form&amp;gt;&#xA;&amp;lt;/template&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can do so much more than this, for more info &lt;a href=&#34;https://vee-validate.logaretm.com/v4/guide/composition-api/validation/&#34;&gt;check the composition API documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Declarative Components&lt;/h4&gt; &#xA;&lt;p&gt;Higher-order components are better suited for most of your cases. Register the &lt;code&gt;Field&lt;/code&gt; and &lt;code&gt;Form&lt;/code&gt; components and create a simple &lt;code&gt;required&lt;/code&gt; validator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Field, Form } from &#39;vee-validate&#39;;&#xA;&#xA;export default {&#xA;  components: {&#xA;    Field,&#xA;    Form,&#xA;  },&#xA;  methods: {&#xA;    isRequired(value) {&#xA;      return value ? true : &#39;This field is required&#39;;&#xA;    },&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the &lt;code&gt;Form&lt;/code&gt; and &lt;code&gt;Field&lt;/code&gt; components to render your form:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Form v-slot=&#34;{ errors }&#34;&amp;gt;&#xA;  &amp;lt;Field name=&#34;email&#34; :rules=&#34;isRequired&#34; /&amp;gt;&#xA;&#xA;  &amp;lt;span&amp;gt;{{ errors.email }}&amp;lt;/span&amp;gt;&#xA;&amp;lt;/Form&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Field&lt;/code&gt; component renders an &lt;code&gt;input&lt;/code&gt; of type &lt;code&gt;text&lt;/code&gt; by default but you can &lt;a href=&#34;https://vee-validate.logaretm.com/v4/api/field#rendering-fields&#34;&gt;control that&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìö Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://vee-validate.logaretm.com/v4&#34;&gt;documentation and demos&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You are welcome to contribute to this project, but before you do, please make sure you read the &lt;a href=&#34;https://raw.githubusercontent.com/logaretm/vee-validate/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inspired by Laravel&#39;s &lt;a href=&#34;https://laravel.com/docs/5.4/validation&#34;&gt;validation syntax&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;v4 API Inspired by &lt;a href=&#34;https://github.com/formium/formik&#34;&gt;Formik&#39;s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nested path types by &lt;a href=&#34;https://github.com/react-hook-form/react-hook-form&#34;&gt;react-hook-form&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Logo by &lt;a href=&#34;https://github.com/baianat&#34;&gt;Baianat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Emeriti&lt;/h2&gt; &#xA;&lt;p&gt;Here we honor past contributors and sponsors who have been a major part on this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baianat&#34;&gt;Baianat&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚öñÔ∏è License&lt;/h2&gt; &#xA;&lt;p&gt;Released under &lt;a href=&#34;https://raw.githubusercontent.com/logaretm/vee-validate/main/LICENSE&#34;&gt;MIT&lt;/a&gt; by &lt;a href=&#34;https://github.com/logaretm&#34;&gt;@logaretm&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>