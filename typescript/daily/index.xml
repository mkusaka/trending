<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-13T01:39:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>total-typescript/advanced-patterns-workshop</title>
    <updated>2022-10-13T01:39:49Z</updated>
    <id>tag:github.com,2022-10-13:/total-typescript/advanced-patterns-workshop</id>
    <link href="https://github.com/total-typescript/advanced-patterns-workshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An interactive TypeScript repo on advanced patterns (WIP)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://totaltypescript.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/total-typescript/advanced-patterns-workshop/main/og-image-new.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Clone this repo or &lt;a href=&#34;https://gitpod.io/#https://github.com/total-typescript/advanced-patterns-workshop&#34;&gt;open in Gitpod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Installs all dependencies&#xA;npm install&#xA;&#xA;# Starts the first exercise&#xA;npm run exercise 01&#xA;&#xA;# Runs linting and tests on the solution&#xA;npm run solution 01&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to take the course&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll notice that the course is split into modules. Each module is a group of related exercises.&lt;/p&gt; &#xA;&lt;p&gt;Each exercise is split into a &lt;code&gt;*.problem.ts&lt;/code&gt; and a &lt;code&gt;*.solution.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To take an exercise:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go into &lt;code&gt;*.problem.ts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run exercise 01&lt;/code&gt;, where &lt;code&gt;01&lt;/code&gt; is the number of the exercise (not module) you&#39;re on.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The &lt;code&gt;exercise&lt;/code&gt; script will run TypeScript typechecks and a test suite on the exercise.&lt;/p&gt; &#xA;&lt;p&gt;This course encourages &lt;strong&gt;active, exploratory learning&lt;/strong&gt;. I&#39;ll present a problem, and &lt;strong&gt;you&#39;ll be asked to try to find a solution&lt;/strong&gt;. To attempt a solution, you&#39;ll need to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check out &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/intro.html&#34;&gt;TypeScript&#39;s docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try to find something that looks relevant.&lt;/li&gt; &#xA; &lt;li&gt;Give it a go to see if it solves the problem.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You&#39;ll know if you&#39;ve succeeded because the tests will pass.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you succeed&lt;/strong&gt;, or &lt;strong&gt;if you get stuck&lt;/strong&gt;, unpause the video and check out the &lt;code&gt;*.solution.ts&lt;/code&gt;. You can see if your solution is better or worse than mine!&lt;/p&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;npm run solution 01&lt;/code&gt; to run the tests and typechecking on the solution.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Say thanks to Matt on &lt;a href=&#34;https://twitter.com/mattpocockuk&#34;&gt;Twitter&lt;/a&gt; or by joining his &lt;a href=&#34;https://discord.gg/8S5ujhfTB3&#34;&gt;Discord&lt;/a&gt;. Consider signing up to his &lt;a href=&#34;https://totaltypescript.com&#34;&gt;Total TypeScript course&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm run exercise 01&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alias: &lt;code&gt;npm run e 01&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the corresponding &lt;code&gt;*.problem.ts&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;npm run solution 01&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Alias: &lt;code&gt;npm run s 01&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the corresponding &lt;code&gt;*.solution.ts&lt;/code&gt; file. If there are multiple, it runs only the first one.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tremorlabs/tremor</title>
    <updated>2022-10-13T01:39:49Z</updated>
    <id>tag:github.com,2022-10-13:/tremorlabs/tremor</id>
    <link href="https://github.com/tremorlabs/tremor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The react library to build dashboards fast.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Tremor Logo&#34; src=&#34;https://raw.githubusercontent.com/tremorlabs/tremor/main/images/tremor-light.svg?sanitize=true&#34; height=&#34;50&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://twitter.com/tremorlabs&#34;&gt; &lt;img alt=&#34;Follow on twitter&#34; src=&#34;https://img.shields.io/twitter/follow/tremorlabs?style=flat&amp;amp;color=5C9BA1&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://tremor.so/docs/getting-started/introduction&#34;&gt; &lt;img alt=&#34;Read the documentation&#34; src=&#34;https://img.shields.io/badge/Docs-blue?style=flat&amp;amp;logo=readthedocs&amp;amp;labelColor=5c5c5c&amp;amp;color=5C9BA1&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/tremorlabs/tremor/raw/main/License&#34;&gt; &lt;img alt=&#34;License Apache 2.0&#34; src=&#34;https://img.shields.io/badge/license-Apache 2.0-blue.svg?style=flat&amp;amp;color=5C9BA1&#34; height=&#34;20&#34; width=&#34;auto&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.tremor.so/docs/getting-started/introduction&#34;&gt;Documentation&lt;/a&gt; â€¢ &lt;a href=&#34;https://demo.tremor.so/&#34;&gt;Demo Dashboard&lt;/a&gt; â€¢ &lt;a href=&#34;https://www.tremor.so&#34;&gt;Website&lt;/a&gt; &lt;/h3&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;The react library to build dashboards fast&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tremor.so/&#34;&gt;Tremor&lt;/a&gt; lets you create simple and modular components to build insightful dashboards in a breeze. Fully open-source, made by data scientists and software engineers with a sweet spot for design.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tremorlabs/tremor/main/images/banner3.png&#34; alt=&#34;Tremor Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;1. Create a React project&lt;/h3&gt; &#xA;&lt;p&gt;We start by creating a new React project with &lt;a href=&#34;https://raw.githubusercontent.com/tremorlabs/tremor/main/%5Burl%5D(https://create-react-app.dev/docs/getting-started/)&#34;&gt;Create React App&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-react-app my-project&#xA;cd my-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install the tremor library&lt;/h3&gt; &#xA;&lt;p&gt;Install tremor from your command line via npm.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @tremor/react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Import our stylesheet into your &lt;code&gt;App.js&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import &#39;@tremor/react/dist/esm/tremor.css&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since we are in beta, please be aware that there might be breaking changes in the future.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run the dev server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;ðŸ’¡ Hint:&lt;/strong&gt; If you want to see how you can build your first dashboard, have a look at our &lt;a href=&#34;https://tremor.so/docs/getting-started/demo-dashboard&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;With tremor creating an analytical interface is easy. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;//Card.tsx&#xA;import { Card, Text, Metric, Flex, ProgressBar } from &#34;@tremor/react&#34;;&#xA;&#xA;export default () =&amp;gt; (&#xA;  &amp;lt;Card maxWidth=&#34;max-w-sm&#34;&amp;gt;&#xA;    &amp;lt;Text&amp;gt;Sales&amp;lt;/Text&amp;gt;&#xA;    &amp;lt;Metric&amp;gt;$ 71,465&amp;lt;/Metric&amp;gt;&#xA;    &amp;lt;Flex marginTop=&#39;mt-4&#39;&amp;gt;&#xA;        &amp;lt;Text&amp;gt;32% of annual target&amp;lt;/Text&amp;gt;&#xA;        &amp;lt;Text&amp;gt;$ 225,000&amp;lt;/Text&amp;gt;&#xA;    &amp;lt;/Flex&amp;gt;&#xA;    &amp;lt;ProgressBar percentageValue={ 32 } marginTop=&#34;mt-2&#34; /&amp;gt;&#xA;  &amp;lt;/Card&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tremorlabs/tremor/main/images/example.png&#34; alt=&#34;Tremor Banner&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Community and Contribution&lt;/h2&gt; &#xA;&lt;p&gt;We are always looking for new ideas or other ways to improve tremor. If you have developed anything cool or found a bug, send us a pull request. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tremorlabs/tremor/raw/main/License&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright Â© 2022 Tremor. All rights reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vercel/satori</title>
    <updated>2022-10-13T01:39:49Z</updated>
    <id>tag:github.com,2022-10-13:/vercel/satori</id>
    <link href="https://github.com/vercel/satori" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enlightened library to convert HTML and CSS to SVG&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vercel/satori/main/.github/card.png&#34; alt=&#34;Satori&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Satori&lt;/strong&gt;: Enlightened library to convert HTML and CSS to SVG.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;To use Satori in your project to generate PNG images like Open Graph images and social cards, check out our &lt;a href=&#34;https://vercel.com/blog/introducing-vercel-og-image-generation-fast-dynamic-social-card-images&#34;&gt;announcement&lt;/a&gt; and &lt;a href=&#34;https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation&#34;&gt;Vercelâ€™s Open Graph Image Generation â†’&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;To use it in Next.js, take a look at the &lt;a href=&#34;https://vercel.com/templates/next.js/og-image-generation&#34;&gt;Next.js Open Graph Image Generation template â†’&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Satori supports the JSX syntax, which makes it very straightforward to use. Hereâ€™s an overview of the basic usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// api.jsx&#xA;import satori from &#39;satori&#39;&#xA;&#xA;const svg = await satori(&#xA;  &amp;lt;div style={{ color: &#39;black&#39; }}&amp;gt;hello, world&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    width: 600,&#xA;    height: 400,&#xA;    fonts: [&#xA;      {&#xA;        name: &#39;Roboto&#39;,&#xA;        data: robotoArrayBuffer,&#xA;        weight: 400,&#xA;        style: &#39;normal&#39;,&#xA;      },&#xA;    ],&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Satori will render the element into a 600Ã—400 SVG, and return the SVG string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#39;&amp;lt;svg ...&amp;gt;&amp;lt;path d=&#34;...&#34; fill=&#34;black&#34;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Under the hood, it handles layout calculation, font, typography and more, to generate a SVG that matches the exact same HTML and CSS in a browser.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;JSX&lt;/h3&gt; &#xA;&lt;p&gt;Satori only accepts JSX elements that are pure and stateless. You can use a subset of HTML elements (see section below), or custom React components, but React APIs such as &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt; are not supported.&lt;/p&gt; &#xA;&lt;h4&gt;Use without JSX&lt;/h4&gt; &#xA;&lt;p&gt;If you don&#39;t have JSX transpiler enabled, you can simply pass &lt;a href=&#34;https://reactjs.org/docs/introducing-jsx.html&#34;&gt;React-elements-like objects&lt;/a&gt; that have &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;props.children&lt;/code&gt; and &lt;code&gt;props.style&lt;/code&gt; (and other properties too) directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await satori(&#xA;  {&#xA;    type: &#39;div&#39;,&#xA;    props: {&#xA;      children: &#39;hello, world&#39;,&#xA;      style: { color: &#39;black&#39; },&#xA;    },&#xA;  },&#xA;  options&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HTML Elements&lt;/h3&gt; &#xA;&lt;p&gt;Satori supports a limited subset of HTML and CSS features, due to its special use cases. In general, only these static and visible elements and properties that are implemented.&lt;/p&gt; &#xA;&lt;p&gt;For example, the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; HTML element, the &lt;code&gt;cursor&lt;/code&gt; CSS property are not in consideration. And you can&#39;t use &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags or external resources via &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, Satori does not guarantee that the SVG will 100% match the browser-rendered HTML output since Satori implements its own layout engine based on the &lt;a href=&#34;https://www.w3.org/TR/SVG11&#34;&gt;SVG 1.1 spec&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find the list of supported HTML elements and their preset styles &lt;a href=&#34;https://github.com/vercel/satori/raw/main/src/handler/presets.ts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Images&lt;/h4&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; to embed images. However, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; attributes are recommended to set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;await satori(&#xA;  &amp;lt;img src=&#34;https://picsum.photos/200/300&#34; width={200} height={300} /&amp;gt;,&#xA;  options&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When using &lt;code&gt;background-image&lt;/code&gt;, the image will be stretched to fit the element by default if you don&#39;t specify the size.&lt;/p&gt; &#xA;&lt;p&gt;If you want to render the generated SVG to another image format such as PNG, it would be better to use base64 encoded image data directly as &lt;code&gt;props.src&lt;/code&gt; so no extra I/O is needed.&lt;/p&gt; &#xA;&lt;h3&gt;CSS&lt;/h3&gt; &#xA;&lt;p&gt;Satori uses the same Flexbox &lt;a href=&#34;https://yogalayout.com&#34;&gt;layout engine&lt;/a&gt; as React Native, and itâ€™s &lt;strong&gt;not&lt;/strong&gt; a complete CSS implementation. However, it supports a subset of the spec that covers most common CSS features:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Property Expanded&lt;/th&gt; &#xA;   &lt;th&gt;Supported Values&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt; and &lt;code&gt;flex&lt;/code&gt;, default to &lt;code&gt;flex&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;absolute&lt;/code&gt;, default to &lt;code&gt;relative&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;marginTop&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;marginRight&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;marginBottom&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;marginLeft&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;Position&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;top&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;right&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;left&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;3&#34;&gt;Size&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;width&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;height&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;Min &amp;amp; max size&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;max-height&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Width (&lt;code&gt;borderWidth&lt;/code&gt;, &lt;code&gt;borderTopWidth&lt;/code&gt;, ...)&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Style (&lt;code&gt;borderStyle&lt;/code&gt;, &lt;code&gt;borderTopStyle&lt;/code&gt;, ...)&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;solid&lt;/code&gt; and &lt;code&gt;dashed&lt;/code&gt;, default to &lt;code&gt;solid&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Color (&lt;code&gt;borderColor&lt;/code&gt;, &lt;code&gt;borderTopColor&lt;/code&gt;, ...)&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; Shorthand (&lt;code&gt;border&lt;/code&gt;, &lt;code&gt;borderTop&lt;/code&gt;, ...)&lt;/td&gt;&#xA;   &lt;td&gt;Supported, i.e. &lt;code&gt;1px solid gray&lt;/code&gt;&lt;br&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;6&#34;&gt;&lt;code&gt;borderRadius&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;borderTopLeftRadius&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;borderTopRightRadius&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;borderBottomLeftRadius&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;borderBottomRightRadius&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Shorthand&lt;/td&gt;&#xA;   &lt;td&gt;Supported, i.e. &lt;code&gt;5px&lt;/code&gt;, &lt;code&gt;50% / 5px&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;10&#34;&gt;Flex&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;flexDirection&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;column&lt;/code&gt;, &lt;code&gt;row&lt;/code&gt;, &lt;code&gt;row-reverse&lt;/code&gt;, &lt;code&gt;column-reverse&lt;/code&gt;, default to &lt;code&gt;row&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;flexWrap&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;nowrap&lt;/code&gt;, &lt;code&gt;wrap-reverse&lt;/code&gt;, default to &lt;code&gt;wrap&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;flexGrow&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;flexShrink&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;flexBasis&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported except for &lt;code&gt;auto&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;alignItems&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;alignContent&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;alignSelf&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;justifyContent&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;Font&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;fontFamily&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;fontSize&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;fontWeight&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;fontStyle&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;10&#34;&gt;Text&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;textAlign&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;justify&lt;/code&gt;, default to &lt;code&gt;start&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;textTransform&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;none&lt;/code&gt;, &lt;code&gt;lowercase&lt;/code&gt;, &lt;code&gt;uppercase&lt;/code&gt;, &lt;code&gt;capitalize&lt;/code&gt;, defaults to &lt;code&gt;none&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;textOverflow&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;clip&lt;/code&gt;, &lt;code&gt;ellipsis&lt;/code&gt;, defaults to &lt;code&gt;clip&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;textDecoration&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Support line types &lt;code&gt;underline&lt;/code&gt; and &lt;code&gt;line-through&lt;/code&gt;, and styles &lt;code&gt;dotted&lt;/code&gt;, &lt;code&gt;dashed&lt;/code&gt;, &lt;code&gt;solid&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;textShadow&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Support single shadow&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;lineHeight&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;letterSpacing&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;whiteSpace&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;pre&lt;/code&gt;, &lt;code&gt;pre-wrap&lt;/code&gt;, &lt;code&gt;nowrap&lt;/code&gt;, defaults to &lt;code&gt;normal&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;wordBreak&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;break-all&lt;/code&gt;, &lt;code&gt;break-word&lt;/code&gt;, &lt;code&gt;keep-all&lt;/code&gt;, defaults to &lt;code&gt;normal&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;7&#34;&gt;Background&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Supported, single value&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundImage&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;linear-gradient&lt;/code&gt;, &lt;code&gt;radial-gradient&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, single value&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundPosition&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Support single value&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundSize&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;Support two-value size i.e. `10px 20%`&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundClip&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;border-box&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;code&gt;backgroundRepeat&lt;/code&gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;code&gt;repeat&lt;/code&gt;, &lt;code&gt;repeat-x&lt;/code&gt;, &lt;code&gt;repeat-y&lt;/code&gt;, &lt;code&gt;no-repeat&lt;/code&gt;, defaults to &lt;code&gt;repeat&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td rowspan=&#34;5&#34;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Translate (&lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;translateX&lt;/code&gt;, &lt;code&gt;translateY&lt;/code&gt;)&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Rotate&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Scale (&lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;scaleX&lt;/code&gt;, &lt;code&gt;scaleY&lt;/code&gt;)&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Skew (&lt;code&gt;skew&lt;/code&gt;, &lt;code&gt;skewX&lt;/code&gt;, &lt;code&gt;skewY&lt;/code&gt;)&lt;/td&gt;&#xA;   &lt;td&gt;Supported&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;transformOrigin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Support one-value and two-value syntax (both relative and absolute values)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;objectFit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;contain&lt;/code&gt;, &lt;code&gt;cover&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, default to &lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;boxShadow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;overflow&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;hidden&lt;/code&gt;, default to &lt;code&gt;visible&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Three-dimensional transforms are not supported.&lt;/li&gt; &#xA; &lt;li&gt;There is no &lt;code&gt;z-index&lt;/code&gt; support in SVG. Elements that come later in the document will be painted on top.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;box-sizing&lt;/code&gt; is set to &lt;code&gt;border-box&lt;/code&gt; for all elements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;calc&lt;/code&gt; isn&#39;t supported.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;overflow: hidden&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt; can&#39;t be used together.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Language and Typography&lt;/h3&gt; &#xA;&lt;p&gt;Advanced typography features such as kerning, ligatures and other OpenType features are not currently supported.&lt;/p&gt; &#xA;&lt;p&gt;RTL languages are not supported either.&lt;/p&gt; &#xA;&lt;h4&gt;Fonts&lt;/h4&gt; &#xA;&lt;p&gt;Satori currently supports three font formats: TTF, OTF and WOFF. Note that WOFF2 is not supported at the moment. You must specify the font if any text is rendered with Satori, and pass the font data as ArrayBuffer (web) or Buffer (Node.js):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await satori(&#xA;  &amp;lt;div style={{ fontFamily: &#39;Inter&#39; }}&amp;gt;Hello&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    width: 600,&#xA;    height: 400,&#xA;    fonts: [&#xA;      {&#xA;        name: &#39;Inter&#39;,&#xA;        data: inter,&#xA;        weight: 400,&#xA;        style: &#39;normal&#39;,&#xA;      },&#xA;      {&#xA;        name: &#39;Inter&#39;,&#xA;        data: interBold,&#xA;        weight: 700,&#xA;        style: &#39;normal&#39;,&#xA;      },&#xA;    ],&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multiple fonts can be passed to Satori and used in &lt;code&gt;fontFamily&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Emojis&lt;/h4&gt; &#xA;&lt;p&gt;To render custom images for specific graphemes, you can use &lt;code&gt;graphemeImages&lt;/code&gt; option to map the grapheme to an image source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;await satori(&#xA;  &amp;lt;div&amp;gt;Next.js is ðŸ¤¯!&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    ...,&#xA;    graphemeImages: {&#xA;      &#39;ðŸ¤¯&#39;: &#39;https://twemoji.maxcdn.com/v/13.1.0/svg/1f92f.svg&#39;,&#xA;    },&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The image will be resized to the current font-size (both width and height) as a square.&lt;/p&gt; &#xA;&lt;h4&gt;Dynamically Load Emojis and Fonts&lt;/h4&gt; &#xA;&lt;p&gt;Satori supports dynamically loading emoji images (grapheme pictures) and fonts. The &lt;code&gt;loadAdditionalAsset&lt;/code&gt; function will be called when a text segment is rendered but missing the image or font:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;await satori(&#xA;  &amp;lt;div&amp;gt;ðŸ‘‹ ä½ å¥½&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    // `code` will be the detected language code, `emoji` if it&#39;s an Emoji, or `unknown` if not able to tell.&#xA;    // `segment` will be the content to render.&#xA;    loadAdditionalAsset: async (code: string, segment: string) =&amp;gt; {&#xA;      if (code === &#39;emoji&#39;) {&#xA;        // if segment is an emoji&#xA;        return `data:image/svg+xml;base64,...`&#xA;      }&#xA;&#xA;      // if segment is normal text&#xA;      return loadFontFromSystem(code)&#xA;    }&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runtime and WASM&lt;/h3&gt; &#xA;&lt;p&gt;Satori can be used in browser, Node.js (&amp;gt;= 16), and Web Workers.&lt;/p&gt; &#xA;&lt;p&gt;By default, Satori depends on asm.js for the browser runtime, and native module in Node.js. However, you can optionally load WASM instead by importing &lt;code&gt;satori/wasm&lt;/code&gt; and provide the initialized WASM module instance of Yoga to Satori:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import satori, { init } from &#39;satori/wasm&#39;&#xA;import initYoga from &#39;yoga-wasm-web&#39;&#xA;&#xA;const yoga = initYoga(await fetch(&#39;/yoga.wasm&#39;).then(res =&amp;gt; res.arrayBuffer()))&#xA;init(yoga)&#xA;&#xA;await satori(...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font Embedding&lt;/h3&gt; &#xA;&lt;p&gt;By default, Satori renders the text as &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; in SVG, instead of &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt;. That means it embeds the font path data as inlined information, so succeeding processes (e.g. render the SVG on another platform) donâ€™t need to deal with font files anymore.&lt;/p&gt; &#xA;&lt;p&gt;You can turn off this behavior by setting &lt;code&gt;embedFonts&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, and Satori will use &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const svg = await satori(&#xA;  &amp;lt;div style={{ color: &#39;black&#39; }}&amp;gt;hello, world&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    ...,&#xA;    embedFont: false,&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;To draw the bounding box for debugging, you can pass &lt;code&gt;debug: true&lt;/code&gt; as an option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const svg = await satori(&#xA;  &amp;lt;div style={{ color: &#39;black&#39; }}&amp;gt;hello, world&amp;lt;/div&amp;gt;,&#xA;  {&#xA;    ...,&#xA;    debug: true,&#xA;  },&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://og-playground.vercel.app/&#34;&gt;Vercel OG Image Playground&lt;/a&gt; to test and report bugs of Satori. Please follow our &lt;a href=&#34;https://raw.githubusercontent.com/vercel/satori/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; before opening a Pull Request.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shu Ding (&lt;a href=&#34;https://twitter.com/shuding_&#34;&gt;@shuding_&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;a aria-label=&#34;Vercel logo&#34; href=&#34;https://vercel.com&#34;&gt; &lt;img src=&#34;https://badgen.net/badge/icon/Made%20by%20Vercel?icon=zeit&amp;amp;label&amp;amp;color=black&amp;amp;labelColor=black&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>