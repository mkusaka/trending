<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-10T01:47:32Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>guangzhengli/ChatFiles</title>
    <updated>2023-04-10T01:47:32Z</updated>
    <id>tag:github.com,2023-04-10:/guangzhengli/ChatFiles</id>
    <link href="https://github.com/guangzhengli/ChatFiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Have a conversation with files ÔΩú‰∏é‰Ω†ÁöÑÊñá‰ª∂ÂØπËØù&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://skillicons.dev&#34;&gt;&lt;img src=&#34;https://skillicons.dev/icons?i=nextjs,tailwind,react,python,flask&#34; alt=&#34;My Skills&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ChatFiles&lt;/h1&gt; &#xA;&lt;p&gt;EN | &lt;a href=&#34;https://raw.githubusercontent.com/guangzhengli/ChatFiles/main/README.zh.md&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;this repository use &lt;a href=&#34;https://github.com/jerryjliu/llama_index&#34;&gt;jerryjliu/llama_index&lt;/a&gt;, based on &lt;a href=&#34;https://github.com/mckaywrigley/chatbot-ui&#34;&gt;mckaywrigley/chatbot-ui&lt;/a&gt;, inspired by &lt;a href=&#34;https://github.com/madawei2699/myGPTReader&#34;&gt;madawei2699/myGPTReader&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/guangzhengli/ChatFiles/main/doc/chatfiles.png&#34; alt=&#34;Chatfiles&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upload your file and have a conversation with it.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone this repository.&lt;/li&gt; &#xA; &lt;li&gt;create a .env file on root path.&lt;/li&gt; &#xA; &lt;li&gt;put your OpenAI Key to .env file with OPENAI_API_KEY=&#39;your token&#39;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;run this project with docker compose.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;open browser with &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;chat with file&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;upload a file.&lt;/li&gt; &#xA; &lt;li&gt;have a conversation with it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;chat with GPT&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;send message without upload file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run locally&lt;/h2&gt; &#xA;&lt;h3&gt;chatfiles-ui&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd chatfiles-ui&#xA;npm install&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;chatfiles&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd chatfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;create a file named .env with value(OPENAI_API_KEY=your token)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python3 server.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chat with GPT-3.5&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chat with file by llama_index&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Upload multiple files to one index, chat with multiple files.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>NotionX/react-notion-x</title>
    <updated>2023-04-10T01:47:32Z</updated>
    <id>tag:github.com,2023-04-10:/NotionX/react-notion-x</id>
    <link href="https://github.com/NotionX/react-notion-x" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and accurate React renderer for Notion. TS batteries included. ‚ö°Ô∏è&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;React Notion X&#34; src=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/media/notion-ts.png&#34; width=&#34;689&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;React Notion X&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Fast and accurate React renderer for Notion. TS batteries included. ‚ö°Ô∏è&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-notion-x&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-notion-x.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/NotionX/react-notion-x/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/NotionX/react-notion-x/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prettier.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-brightgreen.svg?sanitize=true&#34; alt=&#34;Prettier Code Formatting&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/package/react-notion-x&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/react-notion-x&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#advice&#34;&gt;Advice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#styles&#34;&gt;Styles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#optional-components&#34;&gt;Optional Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#private-pages&#34;&gt;Private Pages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#nextjs-examples&#34;&gt;Next.js Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#packages&#34;&gt;Packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#supported-blocks&#34;&gt;Supported Blocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#related&#34;&gt;Related&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#sponsor&#34;&gt;Sponsor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advice&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to publish a website using Notion, then we highly recommend using &lt;a href=&#34;https://s.super.so/x&#34;&gt;Super.so&lt;/a&gt; ‚Äî a hosted solution with great perf that takes care of all the details for you.&lt;/p&gt; &#xA;&lt;p&gt;If you want more control over your website via React, then we recommend checking out the accompanying &lt;a href=&#34;https://github.com/transitive-bullshit/nextjs-notion-starter-kit&#34;&gt;Next.js starter kit&lt;/a&gt;, which is free and uses &lt;code&gt;react-notion-x&lt;/code&gt; under the hood.&lt;/p&gt; &#xA;&lt;p&gt;And if you want even more control, then you&#39;re in the right place! üëáüëá&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ &lt;strong&gt;Simple&lt;/strong&gt; - TypeScript + React&lt;/li&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;Fast&lt;/strong&gt; - 10-100x faster than Notion &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;95-100% Lighthouse scores&lt;/li&gt; &#xA;   &lt;li&gt;Heavier components can be loaded lazily via &lt;code&gt;next/dynamic&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;üíØ &lt;strong&gt;Tests&lt;/strong&gt; - Comes with a comprehensive &lt;a href=&#34;https://www.notion.so/Notion-Test-Suite-067dd719a912471ea9a3ac10710e7fdf&#34;&gt;test suite&lt;/a&gt; covering most of Notion&#39;s functionality&lt;/li&gt; &#xA; &lt;li&gt;üî• &lt;strong&gt;Solid&lt;/strong&gt; - Used in production by &lt;a href=&#34;https://www.potion.so&#34;&gt;Potion&lt;/a&gt; and thousands of websites&lt;/li&gt; &#xA; &lt;li&gt;üí™ &lt;strong&gt;Smooth&lt;/strong&gt; - Supports &lt;code&gt;next/image&lt;/code&gt; along with LQIP preview images (&lt;a href=&#34;https://react-notion-x-demo.transitivebullsh.it/3492bd6dbaf44fe7a5cac62c5d402f06&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Framework agnostic - Use with next.js, create-react-app, gatsby, etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;First you&#39;ll want to fetch the content for a Notion page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { NotionAPI } from &#39;notion-client&#39;&#xA;&#xA;const notion = new NotionAPI()&#xA;&#xA;const recordMap = await notion.getPage(&#39;067dd719a912471ea9a3ac10710e7fdf&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have the data for a Notion page, you can render it via React:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import * as React from &#39;react&#39;&#xA;import { NotionRenderer } from &#39;react-notion-x&#39;&#xA;&#xA;export default ({ recordMap }) =&amp;gt; (&#xA;  &amp;lt;NotionRenderer recordMap={recordMap} fullPage={true} darkMode={false} /&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: for heavier blocks, you&#39;ll have to opt into using them via &lt;code&gt;NotionRenderer.components&lt;/code&gt;. These are not included in the default &lt;code&gt;NotionRenderer&lt;/code&gt; export because they&#39;re too heavyweight for many use cases.&lt;/p&gt; &#xA;&lt;h2&gt;Styles&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need to import some CSS styles as well. If you&#39;re using Next.js, we recommend you place these imports at the top of &lt;code&gt;pages/_app.js&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// core styles shared by all of react-notion-x (required)&#xA;import &#39;react-notion-x/src/styles.css&#39;&#xA;&#xA;// used for code syntax highlighting (optional)&#xA;import &#39;prismjs/themes/prism-tomorrow.css&#39;&#xA;&#xA;// used for rendering equations (optional)&#xA;import &#39;katex/dist/katex.min.css&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Optional Components&lt;/h2&gt; &#xA;&lt;p&gt;The default imports from &lt;code&gt;react-notion-x&lt;/code&gt; strive to be as lightweight as possible. Most blocks will render just fine, but some larger blocks like PDFs and collection views (database views) are not included by default.&lt;/p&gt; &#xA;&lt;p&gt;To use them, you&#39;ll need to import the ones you want from &lt;code&gt;react-notion-x/build/third-party/*&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { Code } from &#39;react-notion-x/build/third-party/code&#39;&#xA;import { Collection } from &#39;react-notion-x/build/third-party/collection&#39;&#xA;import { Equation } from &#39;react-notion-x/build/third-party/equation&#39;&#xA;import { Modal } from &#39;react-notion-x/build/third-party/modal&#39;&#xA;import { Pdf } from &#39;react-notion-x/build/third-party/pdf&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that we strongly recommend lazy-loading these components unless you know you&#39;ll need them up front for your use case.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Next.js, you can use &lt;a href=&#34;https://nextjs.org/docs/advanced-features/dynamic-import&#34;&gt;next/dynamic&lt;/a&gt; to lazily load them. If your notion content doesn&#39;t use one of these heavyweight components, then it won&#39;t get loaded into your page. This keeps the initial page bundle small and your website feeling snappy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import dynamic from &#39;next/dynamic&#39;&#xA;&#xA;const Code = dynamic(() =&amp;gt;&#xA;  import(&#39;react-notion-x/build/third-party/code&#39;).then((m) =&amp;gt; m.Code)&#xA;)&#xA;const Collection = dynamic(() =&amp;gt;&#xA;  import(&#39;react-notion-x/build/third-party/collection&#39;).then(&#xA;    (m) =&amp;gt; m.Collection&#xA;  )&#xA;)&#xA;const Equation = dynamic(() =&amp;gt;&#xA;  import(&#39;react-notion-x/build/third-party/equation&#39;).then((m) =&amp;gt; m.Equation)&#xA;)&#xA;const Pdf = dynamic(&#xA;  () =&amp;gt; import(&#39;react-notion-x/build/third-party/pdf&#39;).then((m) =&amp;gt; m.Pdf),&#xA;  {&#xA;    ssr: false&#xA;  }&#xA;)&#xA;const Modal = dynamic(&#xA;  () =&amp;gt; import(&#39;react-notion-x/build/third-party/modal&#39;).then((m) =&amp;gt; m.Modal),&#xA;  {&#xA;    ssr: false&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll need to enable them by passing them to the &lt;code&gt;components&lt;/code&gt; prop of &lt;code&gt;NotionRenderer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;export default ({ recordMap }) =&amp;gt; (&#xA;  &amp;lt;NotionRenderer&#xA;    recordMap={recordMap}&#xA;    components={{&#xA;      Code,&#xA;      Collection,&#xA;      Equation,&#xA;      Modal,&#xA;      Pdf&#xA;    }}&#xA;  /&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;Code&lt;/code&gt; component uses &lt;a href=&#34;&#34;&gt;Prism&lt;/a&gt; under the hood. It comes bundled with support for JavaScript, TypeScript, and CSS by default. To add support for additional language syntaxes, follow the example in &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/full/components/NotionPage.tsx&#34;&gt;&lt;code&gt;components/NotionPage.tsx&lt;/code&gt;&lt;/a&gt; which lazily loads Prism components at runtime.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;code&gt;Equation&lt;/code&gt; support, you&#39;ll need to import the katex CSS styles.&lt;/p&gt; &#xA;&lt;p&gt;For each of these optional components, make sure you&#39;re also importing the relevant third-party CSS if needed (&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/#Styles&#34;&gt;above&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Private Pages&lt;/h2&gt; &#xA;&lt;p&gt;You may optionally pass an &lt;code&gt;authToken&lt;/code&gt; and &lt;code&gt;activeUser&lt;/code&gt; to the API if you want to access private Notion pages. Both can be retrieved from your web browser. Once you are viewing your workpace, open your Development Tools &amp;gt; Application &amp;gt; Cookie &amp;gt; and Copy the &lt;code&gt;token_v2&lt;/code&gt; and &lt;code&gt;notion_user_id&lt;/code&gt;. Respectively, activeUser: notion_user_id, authToken: token_v2.&lt;/p&gt; &#xA;&lt;p&gt;We recommend storing these as environment variables and passing them into the &lt;code&gt;NotionAPI&lt;/code&gt; constructor as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const notion = new NotionAPI({&#xA;  activeUser: process.env.NOTION_ACTIVE_USER,&#xA;  authToken: process.env.NOTION_TOKEN_V2&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this is not the same as the API token provided by the official Notion API since &lt;code&gt;notion-client&lt;/code&gt; uses the unofficial Notion API (which is what all Notion apps use).&lt;/p&gt; &#xA;&lt;h2&gt;Next.js Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/minimal&#34;&gt;minimal Next.js example project&lt;/a&gt; with the most important code in &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/minimal/pages/%5BpageId%5D.tsx&#34;&gt;&lt;code&gt;pages/[pageId].tsx&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/minimal/components/NotionPage.tsx&#34;&gt;&lt;code&gt;components/NotionPage.tsx&lt;/code&gt;&lt;/a&gt;. You can view this example &lt;a href=&#34;https://react-notion-x-minimal-demo.transitivebullsh.it&#34;&gt;live on Vercel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a more &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/full&#34;&gt;full-featured Next.js example project&lt;/a&gt; with the most important code in &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/full/pages/%5BpageId%5D.tsx&#34;&gt;&lt;code&gt;pages/[pageId].tsx&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/examples/full/components/NotionPage.tsx&#34;&gt;&lt;code&gt;components/NotionPage.tsx&lt;/code&gt;&lt;/a&gt;. You can view this example &lt;a href=&#34;https://react-notion-x-demo.transitivebullsh.it&#34;&gt;live on Vercel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The full-featured demo adds a few nice features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://nextjs.org/docs/api-reference/next/image&#34;&gt;next/image&lt;/a&gt; to serve optimal images&lt;/li&gt; &#xA; &lt;li&gt;Uses preview images generated via &lt;a href=&#34;https://github.com/transitive-bullshit/lqip-modern&#34;&gt;lqip-modern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lazily bundles larger optional components via &lt;a href=&#34;https://nextjs.org/docs/advanced-features/dynamic-import&#34;&gt;next/dynamic&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Code&lt;/li&gt; &#xA;   &lt;li&gt;Equation&lt;/li&gt; &#xA;   &lt;li&gt;Pdf&lt;/li&gt; &#xA;   &lt;li&gt;Modal&lt;/li&gt; &#xA;   &lt;li&gt;Collection (e.g., notion databases including table and gallery views)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a production example, check out the &lt;a href=&#34;https://github.com/transitive-bullshit/nextjs-notion-starter-kit&#34;&gt;Next.js Notion Starter Kit&lt;/a&gt;, which uses &lt;code&gt;react-notion-x&lt;/code&gt; under the hood.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;NPM&lt;/th&gt; &#xA;   &lt;th&gt;Environment&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/packages/react-notion-x&#34;&gt;react-notion-x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-notion-x&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-notion-x.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser + SSR&lt;/td&gt; &#xA;   &lt;td&gt;Fast React renderer for Notion.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/packages/notion-client&#34;&gt;notion-client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/notion-client&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/notion-client.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server-side*&lt;/td&gt; &#xA;   &lt;td&gt;Robust TypeScript client for the Notion API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/packages/notion-types&#34;&gt;notion-types&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/notion-types&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/notion-types.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Universal&lt;/td&gt; &#xA;   &lt;td&gt;Core Notion TypeScript types.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/packages/notion-utils&#34;&gt;notion-utils&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/notion-utils&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/notion-utils.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Universal&lt;/td&gt; &#xA;   &lt;td&gt;Useful utilities for working with Notion data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;* Notion&#39;s API should not be called from client-side browsers due to CORS restrictions. &lt;code&gt;notion-client&lt;/code&gt; is compatible with Node.js and Deno.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Blocks&lt;/h2&gt; &#xA;&lt;p&gt;The majority of Notion blocks and collection views are fully supported.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Block Type&lt;/th&gt; &#xA;   &lt;th&gt;Supported&lt;/th&gt; &#xA;   &lt;th&gt;Block Type Enum&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Page&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Text&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supports all known text formatting options&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bookmark&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bookmark&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Embedded preview of external URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bulleted List&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bulleted_list&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Numbered List&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;numbered_list&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Heading 1&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Heading 2&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sub_header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Heading 3&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sub_sub_header&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quote&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;quote&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Callout&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;callout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Equation (block)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;equation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://katex.org/&#34;&gt;katex&lt;/a&gt; via &lt;a href=&#34;https://github.com/MatejBransky/react-katex&#34;&gt;react-katex&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Equation (inline)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://katex.org/&#34;&gt;katex&lt;/a&gt; via &lt;a href=&#34;https://github.com/MatejBransky/react-katex&#34;&gt;react-katex&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Todos (checkboxes)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;to_do&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Table Of Contents&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;table_of_contents&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;code&gt;notion-utils&lt;/code&gt; &lt;code&gt;getPageTableOfContents&lt;/code&gt; helper funtion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;divider&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Horizontal line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Column&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;column&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Column List&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;column_list&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Toggle&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;toggle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details&#34;&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Image&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Embed&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;embed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generic &lt;code&gt;iframe&lt;/code&gt; embeds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Video&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;video&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iframe&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Figma&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;figma&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iframe&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google Maps&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;maps&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iframe&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google Drive&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;drive&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Google Docs, Sheets, etc custom embed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tweet&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tweet&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses the twitter embedding SDK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PDF&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pdf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses S3 signed URLs and &lt;a href=&#34;https://github.com/wojtekmaj/react-pdf&#34;&gt;react-pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Audio&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;audio&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses S3 signed URLs and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&#34;&gt;HTML5 &lt;code&gt;audio&lt;/code&gt; element&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;File&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses S3 signed URLs (generic downloadable file)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Link&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External links&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Page Link&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Link to a notion page in the same workspace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;External Page Link&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Links to a notion page or collection view in another workspace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code (block)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Block code syntax highlighting via &lt;a href=&#34;https://prismjs.com/&#34;&gt;prismjs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code (inline)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inline code formatting (no syntax highlighting)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collections&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Also known as &lt;a href=&#34;https://www.notion.so/Intro-to-databases-fd8cd2d212f74c50954c11086d85997e&#34;&gt;databases&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collections have a 1:N mapping to collection views&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View Table&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;type = &#34;table&#34;&lt;/code&gt; (default table view)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View Gallery&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;type = &#34;gallery&#34;&lt;/code&gt; (grid view)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View Board&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;type = &#34;board&#34;&lt;/code&gt; (kanban view)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View List&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;type = &#34;list&#34;&lt;/code&gt; (vertical list view)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View Calendar&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå Missing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;type = &#34;calendar&#34;&lt;/code&gt; (embedded calendar view)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collection View Page&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;collection_view_page&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collection view as a standalone page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Please let us know if you find any issues or missing blocks.&lt;/p&gt; &#xA;&lt;p&gt;All known blocks and most known configuration settings can be found in our &lt;a href=&#34;https://www.notion.so/Notion-Test-Suite-067dd719a912471ea9a3ac10710e7fdf&#34;&gt;test suite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Google Lighthouse Scores&#34; src=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/media/react-notion-x-perf.png&#34; width=&#34;600&#34;&gt; &lt;br&gt; &lt;i&gt;Google Lighthouse scores for an &lt;a href=&#34;https://react-notion-x-demo.transitivebullsh.it/38fa73d49b8f40aab1f3f8c82332e518&#34;&gt;example page&lt;/a&gt; rendered by `react-notion-x` on Vercel.&lt;/i&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://bundlephobia.com/package/react-notion-x&#34; title=&#34;Bundlephobia&#34;&gt; &lt;img alt=&#34;Bundlephobia&#34; src=&#34;https://badgen.net/bundlephobia/minzip/react-notion-x&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Out of the box, &lt;code&gt;react-notion-x&lt;/code&gt; is pretty fast and relatively lightweight, but there are a few key factors to be aware of.&lt;/p&gt; &#xA;&lt;p&gt;Bundlephobia reports a &lt;a href=&#34;https://bundlephobia.com/result?p=react-notion-x&#34;&gt;~27kb gzip bundle size&lt;/a&gt; for the main &lt;code&gt;react-notion-x&lt;/code&gt; bundle. This doesn&#39;t include the optional &lt;code&gt;third-party&lt;/code&gt; components which we recommend lazy loading via &lt;a href=&#34;https://nextjs.org/docs/advanced-features/dynamic-import&#34;&gt;next/dynamic&lt;/a&gt; only if a page needs them.&lt;/p&gt; &#xA;&lt;p&gt;Another major factor for perf comes from images hosted by Notion. They&#39;re generally unoptimized, improperly sized, and not cacheable because Notion has to deal with fine-grained access control that users can change at any time. You can override the default &lt;code&gt;mapImageUrl&lt;/code&gt; function on &lt;code&gt;NotionRenderer&lt;/code&gt; to add caching via a CDN like Cloudflare Workers, which is what Notion X does for optimal page load speeds.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;NotionRenderer&lt;/code&gt; also supports lazy image loading with optional low quality image placeholder previews. You can see a demo of this in practice &lt;a href=&#34;https://react-notion-x-demo.transitivebullsh.it/3492bd6dbaf44fe7a5cac62c5d402f06&#34;&gt;on this page&lt;/a&gt; which is using &lt;a href=&#34;https://github.com/transitive-bullshit/lqip-modern&#34;&gt;lqip-modern&lt;/a&gt; to pre-generate placeholder images that are inspired by Medium.com&#39;s image loading.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Next.js, we recommend passing &lt;code&gt;next/image&lt;/code&gt; and &lt;code&gt;next/link&lt;/code&gt; to the renderer as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import Image from &#39;next/image&#39;&#xA;import Link from &#39;next/link&#39;&#xA;&#xA;export default ({ recordMap }) =&amp;gt; (&#xA;  &amp;lt;NotionRenderer&#xA;    recordMap={recordMap}&#xA;    components={{&#xA;      nextImage: Image,&#xA;      nextLink: Link&#xA;    }}&#xA;  /&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This wraps these next.js components in a compatability layer so &lt;code&gt;NotionRenderer&lt;/code&gt; can use them the same as their non-next.js equivalents &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/nextjs-notion-starter-kit&#34;&gt;Next.js Template&lt;/a&gt; - The easiest way to deploy a self-hosted Notion site with Next.js and Vercel. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only takes a few minutes to setup!&lt;/li&gt; &#xA;   &lt;li&gt;Uses &lt;code&gt;react-notion-x&lt;/code&gt; under the hood&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.notion.so/Notion-Test-Suite-067dd719a912471ea9a3ac10710e7fdf&#34;&gt;Notion Test Suite&lt;/a&gt; - Comprehensive suite of Notion test pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/splitbee/react-notion&#34;&gt;react-notion&lt;/a&gt; - Original react renderer for notion &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;react-notion-x&lt;/code&gt; started as a fork of &lt;code&gt;react-notion&lt;/code&gt; with better support for different types of Notion content (especially collections) and grew into something much more comprehensive&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;react-notion&lt;/code&gt; is no longer actively maintained&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/splitbee/notion-api-worker&#34;&gt;notion-api-worker&lt;/a&gt; - Notion API proxy exposed as a Cloudflare Worker &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;notion-types&lt;/code&gt; and &lt;code&gt;notion-client&lt;/code&gt; are a refactored fork of &lt;code&gt;notion-api-worker&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;One of the main use cases for &lt;code&gt;react-notion-x&lt;/code&gt; is server-side rendering via Next.js, in which case the CF worker is unnecessary&lt;/li&gt; &#xA;   &lt;li&gt;We recommend that you use &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/packages/notion-client&#34;&gt;notion-client&lt;/a&gt; instead&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dragonman225/notionapi-agent&#34;&gt;notion-api-agent&lt;/a&gt; - Alternative Notion API client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamalex/notion-py&#34;&gt;notion-py&lt;/a&gt; - Excellent Python wrapper around the Notion API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/contributing.md&#34;&gt;contribution guide&lt;/a&gt; and join our amazing list of &lt;a href=&#34;https://github.com/transitive-bullshit/nextjs-notion-starter-kit/graphs/contributors&#34;&gt;contributors&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://transitivebullsh.it&#34;&gt;Travis Fischer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project extends MIT-licensed work by &lt;a href=&#34;https://twitter.com/timolins&#34;&gt;Timo Lins&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/linstobias&#34;&gt;Tobias Lins&lt;/a&gt;, &lt;a href=&#34;https://samw.dev&#34;&gt;Sam Wight&lt;/a&gt;, and other contributors.&lt;/p&gt; &#xA;&lt;p&gt;Big thanks to &lt;a href=&#34;https://github.com/normdoow&#34;&gt;Noah Bragg&lt;/a&gt; who runs &lt;a href=&#34;https://www.potion.so/&#34;&gt;Potion.so&lt;/a&gt; for helping to maintain &lt;code&gt;react-notion-x&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Support my OSS work by &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://s.super.so/x&#34;&gt;Super.so&lt;/a&gt; has been kind enough to sponsor this project. If you&#39;re looking for a hosted solution that takes a very similar approach to &lt;code&gt;react-notion-x&lt;/code&gt; but handles all of the details for you, then definitely check them out.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://s.super.so/x&#34; title=&#34;Super.so&#34;&gt; &lt;img alt=&#34;React Notion X&#34; src=&#34;https://raw.githubusercontent.com/NotionX/react-notion-x/master/media/super-so-banner.png&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>supabase-community/nextjs-openai-doc-search</title>
    <updated>2023-04-10T01:47:32Z</updated>
    <id>tag:github.com,2023-04-10:/supabase-community/nextjs-openai-doc-search</id>
    <link href="https://github.com/supabase-community/nextjs-openai-doc-search" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Template for building your own custom ChatGPT style doc search powered by Next.js, OpenAI, and Supabase.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js OpenAI Doc Search Starter&lt;/h1&gt; &#xA;&lt;p&gt;This starter takes all the &lt;code&gt;.mdx&lt;/code&gt; files in the &lt;code&gt;pages&lt;/code&gt; directory and processes them to use as custom context within &lt;a href=&#34;https://platform.openai.com/docs/guides/completion&#34;&gt;OpenAI Text Completion&lt;/a&gt; prompts.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;Deploy this starter to Vercel. The Supabase integration will automatically set the required environment variables and configure your &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/supabase/migrations/20230406025118_init.sql&#34;&gt;Database Schema&lt;/a&gt;. All you have to do is set your &lt;code&gt;OPENAI_KEY&lt;/code&gt; and you&#39;re ready to go!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fsupabase-community%2Fnextjs-openai-doc-search&amp;amp;env=OPENAI_KEY&amp;amp;project-name=nextjs-openai-doc-search&amp;amp;repository-name=nextjs-openai-doc-search&amp;amp;integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-open-ai-doc-search&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technical Details&lt;/h2&gt; &#xA;&lt;p&gt;Building your own custom ChatGPT involves four steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;[üë∑ Build time] Pre-process the knowledge base (your &lt;code&gt;.mdx&lt;/code&gt; files in your &lt;code&gt;pages&lt;/code&gt; folder).&lt;/li&gt; &#xA; &lt;li&gt;[üë∑ Build time] Store embeddings in Postgres with &lt;a href=&#34;https://supabase.com/docs/guides/database/extensions/pgvector&#34;&gt;pgvector&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[üèÉ Runtime] Perform vector similarity search to find the content that&#39;s relevant to the question.&lt;/li&gt; &#xA; &lt;li&gt;[üèÉ Runtime] Inject content into OpenAI GPT-3 text completion prompt and stream response to the client.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üë∑ Build time&lt;/h2&gt; &#xA;&lt;p&gt;Step 1. and 2. happen at build time, e.g. when Vercel builds your Next.js app. During this time the &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/lib/generate-embeddings.ts&#34;&gt;&lt;code&gt;generate-embeddings&lt;/code&gt;&lt;/a&gt; script is being executed which performs the following tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;    participant Vercel&#xA;    participant DB (pgvector)&#xA;    participant OpenAI (API)&#xA;    loop 1. Pre-process the knowledge base&#xA;        Vercel-&amp;gt;&amp;gt;Vercel: Chunk .mdx pages into sections&#xA;        loop 2. Create &amp;amp; store embeddings&#xA;            Vercel-&amp;gt;&amp;gt;OpenAI (API): create embedding for page section&#xA;            OpenAI (API)-&amp;gt;&amp;gt;Vercel: embedding vector(1536)&#xA;            Vercel-&amp;gt;&amp;gt;DB (pgvector): store embedding for page section&#xA;        end&#xA;    end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to storing the embeddings, this script generates a checksum for each of your &lt;code&gt;.mdx&lt;/code&gt; files and stores this in another database table to make sure the embeddings are only regenerated when the file has changed.&lt;/p&gt; &#xA;&lt;h2&gt;üèÉ Runtime&lt;/h2&gt; &#xA;&lt;p&gt;Step 3. and 4. happen at runtime, anytime the user submits a question. When this happens, the following sequence of tasks is performed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;    participant Client&#xA;    participant Edge Function&#xA;    participant DB (pgvector)&#xA;    participant OpenAI (API)&#xA;    Client-&amp;gt;&amp;gt;Edge Function: { query: lorem ispum }&#xA;    critical 3. Perform vector similarity search&#xA;        Edge Function-&amp;gt;&amp;gt;OpenAI (API): create embedding for query&#xA;        OpenAI (API)-&amp;gt;&amp;gt;Edge Function: embedding vector(1536)&#xA;        Edge Function-&amp;gt;&amp;gt;DB (pgvector): vector similarity search&#xA;        DB (pgvector)-&amp;gt;&amp;gt;Edge Function: relevant docs content&#xA;    end&#xA;    critical 4. Inject content into prompt&#xA;        Edge Function-&amp;gt;&amp;gt;OpenAI (API): completion request prompt: query + relevant docs content&#xA;        OpenAI (API)--&amp;gt;&amp;gt;Client: text/event-stream: completions response&#xA;    end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The relevant files for this are the &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/components/SearchDialog.tsx&#34;&gt;&lt;code&gt;SearchDialog&lt;/code&gt; (Client)&lt;/a&gt; component and the &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/pages/api/vector-search.ts&#34;&gt;&lt;code&gt;vector-search&lt;/code&gt; (Edge Function)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The initialization of the database, including the setup of the &lt;code&gt;pgvector&lt;/code&gt; extension is stored in the &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/supabase/migrations/&#34;&gt;&lt;code&gt;supabase/migrations&lt;/code&gt; folder&lt;/a&gt; which is automatically applied to your local Postgres instance when running &lt;code&gt;supabase start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cp .env.example .env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set your &lt;code&gt;OPENAI_KEY&lt;/code&gt; in the newly created &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Start Supabase&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have Docker installed and running locally. Then run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;supabase start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the Next.js App&lt;/h3&gt; &#xA;&lt;p&gt;In a new terminal window, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;Deploy this starter to Vercel. The Supabase integration will automatically set the required environment variables and configure your &lt;a href=&#34;https://raw.githubusercontent.com/supabase-community/nextjs-openai-doc-search/main/supabase/migrations/20230406025118_init.sql&#34;&gt;Database Schema&lt;/a&gt;. All you have to do is set your &lt;code&gt;OPENAI_KEY&lt;/code&gt; and you&#39;re ready to go!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fsupabase-community%2Fnextjs-openai-doc-search&amp;amp;env=OPENAI_KEY&amp;amp;project-name=nextjs-openai-doc-search&amp;amp;repository-name=nextjs-openai-doc-search&amp;amp;integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-open-ai-doc-search&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the blogpost on how we built &lt;a href=&#34;https://supabase.com/blog/chatgpt-supabase-docs&#34;&gt;ChatGPT for the Supabase Docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://supabase.com/docs/guides/database/extensions/pgvector&#34;&gt;[Docs] pgvector: Embeddings and vector similarity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://twitter.com/ggrdson&#34;&gt;Greg&#39;s&lt;/a&gt; &#34;How I built this&#34; &lt;a href=&#34;https://youtu.be/Yhtjd7yGGGA&#34;&gt;video&lt;/a&gt; on the &lt;a href=&#34;https://www.youtube.com/@RabbitHoleSyndrome&#34;&gt;Rabbit Hole Syndrome YouTube Channel&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Yhtjd7yGGGA&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/Yhtjd7yGGGA/0.jpg&#34; alt=&#34;Video: How I Built Supabase‚Äôs OpenAI Doc Search&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>