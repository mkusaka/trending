<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-03T01:38:23Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>inkonchain/ink-kit</title>
    <updated>2025-04-03T01:38:23Z</updated>
    <id>tag:github.com,2025-04-03:/inkonchain/ink-kit</id>
    <link href="https://github.com/inkonchain/ink-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Onchain-focused SDK with ready-to-use templates, themes, and magical animated components ‚ú®&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/inkonchain/ink-kit/src/images/banner.webp&#34; alt=&#34;Ink Kit Banner&#34; style=&#34;width: 100%; border-radius: 8px; margin-bottom: 2rem;&#34;&gt; &#xA;&lt;h1&gt;Welcome to Ink Kit&lt;/h1&gt; &#xA;&lt;p&gt;Ink Kit is an onchain-focused SDK that delivers a delightful developer experience with ready-to-use app layout templates, themes, and magical animated components.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @inkonchain/ink-kit&#xA;# or&#xA;pnpm install @inkonchain/ink-kit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// Import styles first at the root of your project (required)&#xA;import &#34;@inkonchain/ink-kit/style.css&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// Import components as needed&#xA;import { Button } from &#34;@inkonchain/ink-kit&#34;;&#xA;&#xA;function App() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;Button onClick={() =&amp;gt; {}} size=&#34;md&#34; variant=&#34;secondary&#34;&amp;gt;&#xA;        Ship It&#xA;      &amp;lt;/Button&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Ink Kit classes are prefixed with &lt;code&gt;ink:&lt;/code&gt; and can be customized using CSS variables instead of Tailwind classes. They should be imported first so that your own custom classes are taking precedence.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üé® &lt;strong&gt;Customizable app layout templates&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ú® &lt;strong&gt;Magical animated components&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üé≠ &lt;strong&gt;Vibrant themes&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚õìÔ∏è &lt;strong&gt;Onchain-focused development&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üöÄ &lt;strong&gt;Efficient developer experience&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üì± &lt;strong&gt;Polished, engaging interfaces&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Theming&lt;/h2&gt; &#xA;&lt;p&gt;By default, Ink Kit provides a couple of themes already in the stylesheet:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Light (&lt;code&gt;light-theme&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dark (&lt;code&gt;dark-theme&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Contrast (&lt;code&gt;contrast-theme&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Neo (&lt;code&gt;neo-theme&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Morpheus (&lt;code&gt;morpheus-theme&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To specify which theme to use, add the &lt;code&gt;ink:THEME_ID&lt;/code&gt; to your document root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&amp;lt;html class=&#34;ink:dark-theme&#34;&amp;gt;&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to programmatically set this value, you can use the &lt;code&gt;useInkThemeClass&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;const theme = getMyCurrentTheme();&#xA;useInkThemeClass(theme === &#34;light&#34; ? &#34;ink:neo-theme&#34; : &#34;ink:dark-theme&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Theme&lt;/h3&gt; &#xA;&lt;p&gt;To create a custom theme, you can override CSS variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;:root {&#xA;  --ink-button-primary: rgb(10, 55, 10);&#xA;  ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see examples on specific colors that you can override, check the following &lt;a href=&#34;https://github.com/inkonchain/ink-kit/tree/main/src/styles/theme&#34;&gt;theme&lt;/a&gt; section of the Ink Kit repository.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Visit our &lt;a href=&#34;https://ink-kit.inkonchain.com/&#34;&gt;Storybook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: Visit our &lt;a href=&#34;https://github.com/inkonchain/ink-kit&#34;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WIP Notice&lt;/h2&gt; &#xA;&lt;p&gt;This is a work in progress: we are constantly adding new components, improving the developer experience, and fixing bugs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-samples/generative-ai-use-cases</title>
    <updated>2025-04-03T01:38:23Z</updated>
    <id>tag:github.com,2025-04-03:/aws-samples/generative-ai-use-cases</id>
    <link href="https://github.com/aws-samples/generative-ai-use-cases" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Application implementation with business use cases for safely utilizing generative AI in business operations&lt;/p&gt;&lt;hr&gt;&lt;div markdown=&#34;1&#34; align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Generative AI Use Cases (GenU)&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://aws-samples.github.io/generative-ai-use-cases/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-Latest-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws-samples/generative-ai-use-cases/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/node.js.yml&#34;&gt;&lt;img src=&#34;https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/node.js.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/browser-extension.yml&#34;&gt;&lt;img src=&#34;https://github.com/aws-samples/generative-ai-use-cases/actions/workflows/browser-extension.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/README_ja.md&#34;&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Application implementation with business use cases for safely utilizing generative AI in business operations&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/sc_lp_en.png&#34; alt=&#34;Application implementation with business use cases for safely utilizing generative AI in business operations&#34; width=&#34;68%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] GenU has supported multiple languages since v4.&lt;/p&gt; &#xA; &lt;p&gt;GenU „ÅØ v4 „Åã„ÇâÂ§öË®ÄË™ûÂØæÂøú„Åó„Åæ„Åó„Åü„ÄÇÊó•Êú¨Ë™û„Éâ„Ç≠„É•„É°„É≥„Éà„ÅØ&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/README_ja.md&#34;&gt;„Åì„Å°„Çâ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;GenU Usage Patterns&lt;/h2&gt; &#xA;&lt;p&gt;Here we introduce GenU&#39;s features and options by usage pattern. For comprehensive deployment options, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] Click on a usage pattern to see details&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to experience generative AI use cases&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;GenU provides a variety of standard use cases leveraging generative AI. These use cases can serve as seeds for ideas on how to utilize generative AI in business operations, or they can be directly applied to business as-is. We plan to continuously add more refined use cases in the future. If unnecessary, you can also &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#hiding-specific-use-cases&#34;&gt;hide specific use cases&lt;/a&gt; with an option. Here are the use cases provided by default.&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;table width=&#34;100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td width=&#34;20%&#34;&gt;Use Case&lt;/td&gt; &#xA;    &lt;td width=&#34;80%&#34;&gt;Description&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Chat&lt;/td&gt; &#xA;    &lt;td&gt;You can interact with large language models (LLMs) in a chat format. The existence of platforms that allow direct dialogue with LLMs enables quick responses to specific and new use cases. It&#39;s also effective as a testing environment for prompt engineering.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Text Generation&lt;/td&gt; &#xA;    &lt;td&gt;Generating text in any context is one of the tasks LLMs excel at. It generates all kinds of text including articles, reports, and emails.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Summarization&lt;/td&gt; &#xA;    &lt;td&gt;LLMs are good at summarizing large amounts of text. Beyond simple summarization, they can also extract necessary information in a conversational format after being given text as context. For example, after reading a contract, you can ask questions like &#34;What are the conditions for XXX?&#34; or &#34;What is the amount for YYY?&#34;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Writing&lt;/td&gt; &#xA;    &lt;td&gt;LLMs can suggest improvements from a more objective perspective, considering not only typos but also the flow and content of the text. You can expect to improve quality by having the LLM objectively check points you might have missed before showing your work to others.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Translation&lt;/td&gt; &#xA;    &lt;td&gt;LLMs trained in multiple languages can perform translations. Beyond simple translation, they can incorporate various specified contextual information such as casualness and target audience into the translation.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Web Content Extraction&lt;/td&gt; &#xA;    &lt;td&gt;Extracts necessary information from web content such as blogs and documents. The LLM removes unnecessary information and formats it into well-structured text. Extracted content can be used in other use cases such as summarization and translation.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Image Generation&lt;/td&gt; &#xA;    &lt;td&gt;Image generation AI can create new images based on text or existing images. It allows for immediate visualization of ideas, potentially improving efficiency in design work. In this feature, LLMs can assist in creating prompts.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Video Generation&lt;/td&gt; &#xA;    &lt;td&gt;Video generation AI creates short videos from text. The generated videos can be used as materials in various scenarios.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Video Analysis&lt;/td&gt; &#xA;    &lt;td&gt;With multimodal models, it&#39;s now possible to input not only text but also images. In this feature, you can ask the LLM to analyze video frames and text inputs.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Diagram Generation&lt;/td&gt; &#xA;    &lt;td&gt;Diagram generation visualizes text and content on any topic using optimal diagrams. It allows for easy text-based diagram creation, enabling efficient creation of flowcharts and other diagrams even for non-programmers and non-designers.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to do RAG&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;RAG is a technique that allows LLMs to answer questions they normally couldn&#39;t by providing external up-to-date information or domain knowledge that LLMs typically struggle with. PDF, Word, Excel, and other files accumulated within your organization can serve as information sources. RAG also has the effect of preventing LLMs from providing &#34;plausible but incorrect information&#34; by only allowing answers based on evidence.&lt;/p&gt; &#xA; &lt;p&gt;GenU provides a RAG Chat use case. Two types of information sources are available for RAG Chat: &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md&#34;&gt;Amazon Kendra&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case&#34;&gt;Knowledge Base&lt;/a&gt;. When using Amazon Kendra, you can &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#using-an-existing-amazon-kendra-index&#34;&gt;use manually created S3 Buckets or Kendra Indexes as they are&lt;/a&gt;. When using Knowledge Base, advanced RAG features such as &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-advanced-parsing&#34;&gt;Advanced Parsing&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#changing-chunking-strategy&#34;&gt;Chunk Strategy Selection&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case&#34;&gt;Query Decomposition&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-rag-chat-knowledge-base-use-case&#34;&gt;Reranking&lt;/a&gt; are available. Knowledge Base also allows for &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#metadata-filter-configuration&#34;&gt;Metadata Filter Settings&lt;/a&gt;. For example, you can meet requirements such as &#34;switching accessible data sources by organization&#34; or &#34;allowing users to set filters from the UI.&#34;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to use custom AI agents or Bedrock Flows within my organization&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;When you &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-agent-chat-use-case&#34;&gt;enable agents&lt;/a&gt; in GenU, Web Search Agent and Code Interpreter Agent are created. The Web Search Agent searches the web for information to answer user questions. For example, it can answer &#34;What is AWS GenU?&#34; The Code Interpreter Agent can execute code to respond to user requests. For example, it can respond to requests like &#34;Draw a scatter plot with some dummy data.&#34;&lt;/p&gt; &#xA; &lt;p&gt;While Web Search Agent and Code Interpreter Agent are basic agents, you might want to use more practical agents tailored to your business needs. GenU provides a feature to &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#adding-manually-created-agents&#34;&gt;import agents&lt;/a&gt; that you&#39;ve created manually or with other assets.&lt;/p&gt; &#xA; &lt;p&gt;By using GenU as a platform for agent utilization, you can leverage GenU&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#security-related-settings&#34;&gt;rich security options&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#saml-authentication&#34;&gt;SAML authentication&lt;/a&gt; to spread practical agents within your organization. Additionally, you can &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#hiding-specific-use-cases&#34;&gt;hide unnecessary standard use cases&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#displaying-agents-inline&#34;&gt;display agents inline&lt;/a&gt; to use GenU as a more agent-focused platform.&lt;/p&gt; &#xA; &lt;p&gt;Similarly, there is an &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#enabling-flow-chat-use-case&#34;&gt;import feature&lt;/a&gt; for Bedrock Flows, so please make use of it.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details markdown=&#34;1&#34;&gt; &#xA; &lt;summary&gt;&lt;strong&gt;&lt;ins&gt;I want to create custom use cases&lt;/ins&gt;&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;GenU provides a feature called &#34;Use Case Builder&#34; that allows you to create custom use cases by describing prompt templates in natural language. Custom use case screens are automatically generated just from prompt templates, so no code changes to GenU itself are required. Created use cases can be shared with all users who can log into the application, not just for personal use. Use Case Builder can be &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md#use-case-builder-configuration&#34;&gt;disabled&lt;/a&gt; if not needed. For more details about Use Case Builder, please check &lt;a href=&#34;https://aws.amazon.com/jp/blogs/news/genu-use-cases-builder/&#34;&gt;this blog&lt;/a&gt;. &lt;br&gt; &lt;br&gt; While Use Case Builder can create use cases where you input text into forms or attach files, depending on your requirements, a chat UI might be more suitable. In such cases, please utilize the system prompt saving feature of the &#34;Chat&#34; use case. By saving system prompts, you can create business-necessary &#34;bots&#34; with just one click. For example, you can create &#34;a bot that thoroughly reviews source code when input&#34; or &#34;a bot that extracts email addresses from input content.&#34; Additionally, chat conversation histories can be shared with logged-in users, and system prompts can be imported from shared conversation histories. &lt;br&gt; &lt;br&gt; Since GenU is OSS, you can also customize it to add your own use cases. In that case, please be careful about conflicts with GenU&#39;s main branch.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Please enable the &lt;code&gt;modelIds&lt;/code&gt; (text generation), &lt;code&gt;imageGenerationModelIds&lt;/code&gt; (image generation), and &lt;code&gt;videoGenerationModelIds&lt;/code&gt; (video generation) in the &lt;code&gt;modelRegion&lt;/code&gt; region listed in &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/packages/cdk/cdk.json&#34;&gt;&lt;code&gt;/packages/cdk/cdk.json&lt;/code&gt;&lt;/a&gt;. (&lt;a href=&#34;https://us-east-1.console.aws.amazon.com/bedrock/home?region=us-east-1#/modelaccess&#34;&gt;Amazon Bedrock Model access screen&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;GenU deployment uses &lt;a href=&#34;https://aws.amazon.com/jp/cdk/&#34;&gt;AWS Cloud Development Kit&lt;/a&gt; (CDK). If you cannot prepare a CDK execution environment, refer to the following deployment methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_ON_CLOUDSHELL.md&#34;&gt;Deployment method using AWS CloudShell (if preparing your own environment is difficult)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://catalog.workshops.aws/generative-ai-use-cases-jp&#34;&gt;Workshop&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;First, run the following command. All commands should be executed at the repository root.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;ve never used CDK before, you need to &lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/cdk/v2/guide/bootstrapping.html&#34;&gt;Bootstrap&lt;/a&gt; for the first time only. The following command is unnecessary if your environment is already bootstrapped.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -w packages/cdk cdk bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, deploy AWS resources with the following command. Please wait for the deployment to complete (it may take about 20 minutes).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Normal deployment&#xA;npm run cdk:deploy&#xA;&#xA;# Fast deployment (quickly deploy without pre-checking created resources)&#xA;npm run cdk:deploy:quick&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/arch.drawio.png&#34; alt=&#34;arch.drawio.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Other Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEPLOY_OPTION.md&#34;&gt;Deployment Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/UPDATE.md&#34;&gt;Update Method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DEVELOPMENT.md&#34;&gt;Local Development Environment Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/DESTROY.md&#34;&gt;Resource Deletion Method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/PWA.md&#34;&gt;How to Use as a Native App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/en/EXTENSION.md&#34;&gt;Using Browser Extensions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cost Estimation&lt;/h2&gt; &#xA;&lt;p&gt;We have published configuration and cost estimation examples for using GenU. (The service is pay-as-you-go, and actual costs will vary depending on your usage.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/cdp/ai-chatbot/&#34;&gt;Simple Version (without RAG) Estimation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/cdp/ai-chatapp/&#34;&gt;With RAG (Amazon Kendra) Estimation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/cdp/genai-chat-app/&#34;&gt;With RAG (Knowledge Base) Estimation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customer Case Studies&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Customer&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Quote&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.yasashiite.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/yasashiite_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Yasashiite Co., Ltd.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;Thanks to GenU, we were able to provide added value to users and improve employee work efficiency. We continue to evolve from &#34;smooth operation&#34; to &#34;exciting work&#34; as employees&#39; &#34;previous work&#34; transforms into enjoyable work!&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/yasashiite_case.png&#34;&gt;See case details&lt;/a&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://aws.amazon.com/jp/solutions/case-studies/yasashii-te/&#34;&gt;See case page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.takihyo.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/TAKIHYO_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;TAKIHYO Co., Ltd.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;Achieved internal business efficiency and reduced over 450 hours of work by utilizing generative AI. Applied Amazon Bedrock to clothing design, etc., and promoted digital talent development.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://aws.amazon.com/jp/solutions/case-studies/takihyo/&#34;&gt;See case page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://salsonido.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/salsonido_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Salsonido Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;By utilizing GenU, which is provided as a solution, we were able to quickly start improving business processes with generative AI.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/salsonido_case.png&#34;&gt;See case details&lt;/a&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://kirei.ai/&#34;&gt;Applied service&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.tamura-ss.co.jp/jp/index.html&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/tamura-ss_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;TAMURA CORPORATION&lt;/strong&gt; &lt;br&gt; &lt;em&gt;The application samples that AWS publishes on Github have a wealth of immediately testable functions, and by using them as they are, we were able to easily select functions that suited us and shorten the development time of the final system.&lt;/em&gt;&lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/tamura-ss_case.png&#34;&gt;See case details&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://jdsc.ai/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/jdsc_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;JDSC Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;Amazon Bedrock allows us to securely use LLMs with our data. Also, we can switch to the optimal model depending on the purpose, allowing us to improve speed and accuracy while keeping costs down.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/jdsc_case.png&#34;&gt;See case details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.iret.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/iret_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;iret, Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;To accumulate and systematize internal knowledge for BANDAI NAMCO Amusement Inc.&#39;s generative AI utilization, we developed a use case site using Generative AI Use Cases JP provided by AWS. iret, Inc. supported the design, construction, and development of this project.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://cloudpack.jp/casestudy/302.html?_gl=1*17hkazh*_gcl_au*ODA5MDk3NzI0LjE3MTM0MTQ2MDU&#34;&gt;BANDAI NAMCO Amusement Inc.&#39;s cloud utilization case study&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://idealog.co.jp&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/idealog_logo.jpg&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;IDEALOG Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;I feel that we can achieve even greater work efficiency than with conventional generative AI tools. Using Amazon Bedrock, which doesn&#39;t use input/output data for model training, gives us peace of mind regarding security.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/idealog_case.png&#34;&gt;See case details&lt;/a&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://kaijosearch.com/&#34;&gt;Applied service&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://estyle.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/estyle_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;eStyle Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;By utilizing GenU, we were able to build a generative AI environment in a short period and promote knowledge sharing within the company.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/estyle_case.png&#34;&gt;See case details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://meidensha.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/meidensha_logo.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Meidensha Corporation&lt;/strong&gt; &lt;br&gt; &lt;em&gt;By using AWS services such as Amazon Bedrock and Amazon Kendra, we were able to quickly and securely build a generative AI usage environment. It contributes to employee work efficiency through automatic generation of meeting minutes and searching internal information.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/meidensha_case.png&#34;&gt;See case details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.st-grp.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/st-grp_logo.jpg&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Sankyo Tateyama, Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;Information buried within the company became quickly searchable with Amazon Kendra. By referring to GenU, we were able to promptly provide the functions we needed, such as meeting minutes generation.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/st-grp_case.png&#34;&gt;See case details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.oisixradaichi.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/oisixradaichi_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Oisix ra daichi Inc.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;Through the use case development project using GenU, we were able to grasp the necessary resources, project structure, external support, and talent development, which helped us clarify our image for the internal deployment of generative AI.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://aws.amazon.com/jp/solutions/case-studies/oisix/&#34;&gt;See case page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.san-a.co.jp/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/san-a_logo.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;SAN-A CO., LTD.&lt;/strong&gt; &lt;br&gt; &lt;em&gt;By utilizing Amazon Bedrock, our engineers&#39; productivity has dramatically improved, accelerating the migration of our company-specific environment, which we had built in-house, to the cloud.&lt;/em&gt; &lt;br&gt; „Éª&lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/docs/assets/images/cases/san-a_case.png&#34;&gt;See case details&lt;/a&gt;&lt;br&gt; „Éª&lt;a href=&#34;https://aws.amazon.com/jp/solutions/case-studies/san-a/&#34;&gt;See case page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you would like to have your use case featured, please contact us via &lt;a href=&#34;https://github.com/aws-samples/generative-ai-use-cases/issues&#34;&gt;Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/blogs/news/genu-use-cases-builder/&#34;&gt;Blog (Japanese): GenU Use Case Builder for Creating and Distributing Generative AI Apps with No Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/builders-flash/202502/way-to-succeed-rag-project/&#34;&gt;Blog (Japanese): How to Make RAG Projects Successful #1 ~ Or How to Fail Fast ~&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qiita.com/sugimount-a/items/7ed3c5fc1eb867e28566&#34;&gt;Blog (Japanese): Debugging Methods to Improve Accuracy in RAG Chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qiita.com/wadabee/items/659e189018ad1a08e152&#34;&gt;Blog (Japanese): Customizing GenU with No Coding Using Amazon Q Developer CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/blogs/news/how-to-generative-ai-use-cases-jp/&#34;&gt;Blog (Japanese): How to Customize Generative AI Use Cases JP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/builders-flash/202405/genai-sorry-message/&#34;&gt;Blog (Japanese): Let Generative AI Decline Unreasonable Requests ~ Integrating Generative AI into Browsers ~&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/jp/builders-flash/202311/bedrock-interpreter/&#34;&gt;Blog (Japanese): Developing an Interpreter with Amazon Bedrock!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/live/s1P5A2SIWgc?si=PBQ4ZHQXU4pDhL8A&#34;&gt;Video (Japanese): The Appeal and Usage of Generative AI Use Cases JP (GenU) for Thoroughly Considering Generative AI Use Cases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws-samples/generative-ai-use-cases/main/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is licensed under the MIT-0 License. See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
</feed>