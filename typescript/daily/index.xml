<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:39:51Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>samczsun/ethereum-transaction-viewer-frontend</title>
    <updated>2022-10-09T01:39:51Z</updated>
    <id>tag:github.com,2022-10-09:/samczsun/ethereum-transaction-viewer-frontend</id>
    <link href="https://github.com/samczsun/ethereum-transaction-viewer-frontend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Frontend for https://tx.eth.samczsun.com/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ethereum-tracing-srv frontend&lt;/h1&gt; &#xA;&lt;p&gt;This is the frontend to the &lt;a href=&#34;https://tx.eth.samczsun.com/&#34;&gt;Ethereum Transaction Viewer&lt;/a&gt;. By default, it&#39;s configured to use the production backend.&lt;/p&gt; &#xA;&lt;p&gt;TypeScript is disabled as the code is still kind of spaghetti and doesn&#39;t fully type-check. I&#39;m not a frontend dev so I doubt much of it is idiomatic either.&lt;/p&gt; &#xA;&lt;p&gt;The main rendering logic is in &lt;a href=&#34;https://raw.githubusercontent.com/samczsun/ethereum-transaction-viewer-frontend/master/pages/index.tsx&#34;&gt;index.tsx&lt;/a&gt;, which then delegates out to the various components in &lt;a href=&#34;https://raw.githubusercontent.com/samczsun/ethereum-transaction-viewer-frontend/master/components/trace&#34;&gt;components/trace&lt;/a&gt;. There&#39;s a lot of duplicated code from rapidly prototyping a schema that works.&lt;/p&gt; &#xA;&lt;p&gt;To bring up the frontend, just&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build an image, just&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build .&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>mattermost/focalboard</title>
    <updated>2022-10-09T01:39:51Z</updated>
    <id>tag:github.com,2022-10-09:/mattermost/focalboard</id>
    <link href="https://github.com/mattermost/focalboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Focalboard is an open source, self-hosted alternative to Trello, Notion, and Asana.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Focalboard&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI Status&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/dev-release.yml/badge.svg?sanitize=true&#34; alt=&#34;Dev Release&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/prod-release.yml/badge.svg?sanitize=true&#34; alt=&#34;Prod Release&#34;&gt; &lt;a href=&#34;https://translate.mattermost.com/engage/focalboard/&#34;&gt; &lt;img src=&#34;https://translate.mattermost.com/widgets/focalboard/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Like what you see? &lt;span&gt;üëÄ&lt;/span&gt; Give us a GitHub Star! &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.focalboard.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mattermost/focalboard/main/website/site/static/img/hero.jpg&#34; alt=&#34;Focalboard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.focalboard.com&#34;&gt;Focalboard&lt;/a&gt; is an open source, multilingual, self-hosted project management tool that&#39;s an alternative to Trello, Notion, and Asana.&lt;/p&gt; &#xA;&lt;p&gt;It helps define, organize, track and manage work across individuals and teams. Focalboard comes in two main editions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.focalboard.com/download/mattermost/&#34;&gt;Mattermost Boards&lt;/a&gt;&lt;/strong&gt;: A self-hosted or &lt;strong&gt;&lt;a href=&#34;https://mattermost.com/sign-up/?utm_source=focalboard&amp;amp;utm_campaign=focalboard&#34;&gt;free cloud server&lt;/a&gt;&lt;/strong&gt; for your team to plan and collaborate.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.focalboard.com/download/personal-edition/desktop/&#34;&gt;Personal Desktop&lt;/a&gt;&lt;/strong&gt;: A standalone, single-user &lt;a href=&#34;https://apps.apple.com/app/apple-store/id1556908618?pt=2114704&amp;amp;ct=website&amp;amp;mt=8&#34;&gt;Mac&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/store/apps/9NLN2T0SX9VF?cid=website&#34;&gt;Windows&lt;/a&gt;, or &lt;a href=&#34;https://www.focalboard.com/download/personal-edition/desktop/#linux-desktop&#34;&gt;Linux&lt;/a&gt; desktop app for your own todos and personal projects.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Focalboard can also be installed as a standalone &lt;strong&gt;&lt;a href=&#34;https://www.focalboard.com/download/personal-edition/ubuntu/&#34;&gt;Personal Server&lt;/a&gt;&lt;/strong&gt; for development and personal use.&lt;/p&gt; &#xA;&lt;h2&gt;Try Focalboard&lt;/h2&gt; &#xA;&lt;h3&gt;Mattermost Boards - &lt;a href=&#34;https://mattermost.com/sign-up/?utm_source=focalboard&amp;amp;utm_campaign=focalboard&#34;&gt;now available as a free cloud server&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mattermost Boards&lt;/strong&gt; combines project management tools with messaging and collaboration for teams of all sizes. To access and use &lt;strong&gt;Mattermost Boards&lt;/strong&gt;, install or upgrade to Mattermost v6.0 or later as a &lt;a href=&#34;https://docs.mattermost.com/guides/deployment.html?utm_source=focalboard&amp;amp;utm_campaign=focalboard&#34;&gt;self-hosted server&lt;/a&gt; or &lt;a href=&#34;https://mattermost.com/sign-up/?utm_source=focalboard&amp;amp;utm_campaign=focalboard&#34;&gt;Cloud server&lt;/a&gt;. After logging into Mattermost, select the menu in the top left corner and select &lt;strong&gt;Boards&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Mattermost Boards&lt;/strong&gt; is installed and enabled by default in Mattermost v6.0 and later.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.focalboard.com/download/mattermost/&#34;&gt;plugin setup guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Personal Desktop (Windows, Mac or Linux Desktop)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Download from the &lt;a href=&#34;https://www.microsoft.com/store/productId/9NLN2T0SX9VF&#34;&gt;Windows App Store&lt;/a&gt; or download &lt;code&gt;focalboard-win.zip&lt;/code&gt; from the &lt;a href=&#34;https://github.com/mattermost/focalboard/releases&#34;&gt;latest release&lt;/a&gt;, unpack, and run &lt;code&gt;Focalboard.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: Download from the &lt;a href=&#34;https://apps.apple.com/us/app/focalboard-insiders/id1556908618?mt=12&#34;&gt;Mac App Store&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux Desktop&lt;/strong&gt;: Download &lt;code&gt;focalboard-linux.tar.gz&lt;/code&gt; from the &lt;a href=&#34;https://github.com/mattermost/focalboard/releases&#34;&gt;latest release&lt;/a&gt;, unpack, and open &lt;code&gt;focalboard-app&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Personal Server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: You can download and run the compiled Focalboard &lt;strong&gt;Personal Server&lt;/strong&gt; on Ubuntu by following &lt;a href=&#34;https://www.focalboard.com/download/personal-edition/ubuntu/&#34;&gt;our latest install guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to Focalboard&lt;/h2&gt; &#xA;&lt;p&gt;Contribute code, bug reports, and ideas to the future of the Focalboard project. We welcome your input! Please see &lt;a href=&#34;https://raw.githubusercontent.com/mattermost/focalboard/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on how to get involved.&lt;/p&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://developers.mattermost.com/contribute/focalboard/personal-server-setup-guide&#34;&gt;developer guide&lt;/a&gt; has detailed instructions on how to set up your development environment for the &lt;strong&gt;Personal Server&lt;/strong&gt;. It also provides more information about contributing to our open source community.&lt;/p&gt; &#xA;&lt;p&gt;To build the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make prebuild&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ./bin/focalboard-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then navigate your browser to &lt;a href=&#34;http://localhost:8000&#34;&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/a&gt; to access your Focalboard server. The port is configured in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once the server is running, you can rebuild just the web app via &lt;code&gt;make webapp&lt;/code&gt; in a separate terminal window. Reload your browser to see the changes.&lt;/p&gt; &#xA;&lt;h3&gt;Building and running standalone desktop apps&lt;/h3&gt; &#xA;&lt;p&gt;You can build standalone apps that package the server to run locally against SQLite:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Requires Windows 10, &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/&#34;&gt;Windows 10 SDK&lt;/a&gt; 10.0.19041.0, and .NET 4.8 developer pack&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Open a &lt;code&gt;git-bash&lt;/code&gt; prompt.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make win-wpf-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;cd win-wpf/msix &amp;amp;&amp;amp; focalboard.exe&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Requires macOS 11.3+ and Xcode 13.2.1+&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make mac-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;open mac/dist/Focalboard.app&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Tested on Ubuntu 18.04&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Install &lt;code&gt;webgtk&lt;/code&gt; dependencies &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libgtk-3-dev&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libwebkit2gtk-4.0-dev&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make linux-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Uncompress &lt;code&gt;linux/dist/focalboard-linux.tar.gz&lt;/code&gt; to a directory of your choice&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;focalboard-app&lt;/code&gt; from the directory you have chosen&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To run it locally from offical image: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker run -it -p 80:8000 mattermost/focalboard&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To build it for your current architecture: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile .&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To build it for a custom architecture (experimental): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile --platform linux/arm64 .&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cross-compilation currently isn&#39;t fully supported, so please build on the appropriate platform. Refer to the GitHub Actions workflows (&lt;code&gt;build-mac.yml&lt;/code&gt;, &lt;code&gt;build-win.yml&lt;/code&gt;, &lt;code&gt;build-ubuntu.yml&lt;/code&gt;) for the detailed list of steps on each platform.&lt;/p&gt; &#xA;&lt;h3&gt;Unit testing&lt;/h3&gt; &#xA;&lt;p&gt;Before checking in commits, run &lt;code&gt;make ci&lt;/code&gt;, which is similar to the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; workflow and includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server unit tests&lt;/strong&gt;: &lt;code&gt;make server-test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app ESLint&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run check&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app unit tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app UI tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run cypress:ci&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Translating&lt;/h3&gt; &#xA;&lt;p&gt;Help translate Focalboard! The app is already translated into several languages. We welcome corrections and new language translations! You can add new languages or improve existing translations at &lt;a href=&#34;https://translate.mattermost.com/engage/focalboard/&#34;&gt;Weblate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Staying informed&lt;/h3&gt; &#xA;&lt;p&gt;Are you interested in influencing the future of the Focalboard open source project? Here&#39;s how you can get involved:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Changes&lt;/strong&gt;: See the &lt;a href=&#34;https://raw.githubusercontent.com/mattermost/focalboard/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for the latest updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;: Join the &lt;a href=&#34;https://github.com/mattermost/focalboard/discussions&#34;&gt;Developer Discussion&lt;/a&gt; board&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug Reports&lt;/strong&gt;: &lt;a href=&#34;https://github.com/mattermost/focalboard/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;File a bug report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Join the &lt;a href=&#34;https://community.mattermost.com/core/channels/focalboard&#34;&gt;Focalboard community channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>apollographql/apollo-server</title>
    <updated>2022-10-09T01:39:51Z</updated>
    <id>tag:github.com,2022-10-09:/apollographql/apollo-server</id>
    <link href="https://github.com/apollographql/apollo-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåç ¬†Spec-compliant and production ready JavaScript GraphQL server that lets you develop in a schema-first way. Built for Express, Connect, Hapi, Koa, and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.apollographql.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/841294/53402609-b97a2180-39ba-11e9-8100-812bab86357c.png&#34; height=&#34;100&#34; alt=&#34;Apollo Server&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;A TypeScript GraphQL Server for Express, Koa, Hapi, Lambda, and more.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/apollo-server-core&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/apollo-server-core.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/apollographql/apollo-server/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/apollographql/apollo-server/tree/main.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.apollographql.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join%20the%20community-forum-blueviolet&#34; alt=&#34;Join the community forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apollographql/apollo-server/raw/HEAD/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/read-changelog-blue&#34; alt=&#34;Read CHANGELOG&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apollo Server is a community-maintained open-source GraphQL server. It works with many Node.js HTTP server frameworks, or can run on its own with a built-in Express server. Apollo Server works with any GraphQL schema built with &lt;a href=&#34;https://github.com/graphql/graphql-js&#34;&gt;GraphQL.js&lt;/a&gt;--or define a schema&#39;s type definitions using schema definition language (SDL).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/&#34;&gt;Read the documentation&lt;/a&gt; for information on getting started and many other use cases and &lt;a href=&#34;https://github.com/apollographql/apollo-server/raw/HEAD/CHANGELOG.md&#34;&gt;follow the CHANGELOG&lt;/a&gt; for updates.&lt;/p&gt; &#xA;&lt;h2&gt;Principles&lt;/h2&gt; &#xA;&lt;p&gt;Apollo Server is built with the following principles in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;By the community, for the community&lt;/strong&gt;: Its development is driven by the needs of developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;: By keeping things simple, it is more secure and easier to implement and contribute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: It is well-tested and production-ready.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Anyone is welcome to contribute to Apollo Server, just read &lt;a href=&#34;https://raw.githubusercontent.com/apollographql/apollo-server/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/apollographql/apollo-server/main/ROADMAP.md&#34;&gt;roadmap&lt;/a&gt; and make your first PR!&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Apollo Server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install with &lt;code&gt;npm install apollo-server-&amp;lt;integration&amp;gt; graphql&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write a GraphQL schema&lt;/li&gt; &#xA; &lt;li&gt;Use one of the following snippets&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are two ways to install Apollo Server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apollographql/apollo-server/main/#installation-standalone&#34;&gt;Standalone&lt;/a&gt;&lt;/strong&gt;: For applications that do not require an existing web framework, use the &lt;code&gt;apollo-server&lt;/code&gt; package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apollographql/apollo-server/main/#installation-integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/strong&gt;: For applications with a web framework (e.g. &lt;code&gt;express&lt;/code&gt;, &lt;code&gt;koa&lt;/code&gt;, &lt;code&gt;hapi&lt;/code&gt;, etc.), use the appropriate Apollo Server integration package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more info, please refer to the &lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/v2&#34;&gt;Apollo Server docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation: Standalone&lt;/h3&gt; &#xA;&lt;p&gt;In a new project, install the &lt;code&gt;apollo-server&lt;/code&gt; and &lt;code&gt;graphql&lt;/code&gt; dependencies using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install apollo-server graphql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create an &lt;code&gt;index.js&lt;/code&gt; which defines the schema and its functionality (i.e. resolvers):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { ApolloServer, gql } = require(&#39;apollo-server&#39;);&#xA;&#xA;// The GraphQL schema&#xA;const typeDefs = gql`&#xA;  type Query {&#xA;    &#34;A simple type for getting started!&#34;&#xA;    hello: String&#xA;  }&#xA;`;&#xA;&#xA;// A map of functions which return data for the schema.&#xA;const resolvers = {&#xA;  Query: {&#xA;    hello: () =&amp;gt; &#39;world&#39;,&#xA;  },&#xA;};&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;});&#xA;&#xA;server.listen().then(({ url }) =&amp;gt; {&#xA;  console.log(`üöÄ Server ready at ${url}`);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Due to its human-readability, we recommend using &lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/essentials/schema/#schema-definition-language&#34;&gt;schema-definition language (SDL)&lt;/a&gt; to define a GraphQL schema--&lt;a href=&#34;https://github.com/graphql/graphql-js/#using-graphqljs&#34;&gt;a &lt;code&gt;GraphQLSchema&lt;/code&gt; object from &lt;code&gt;graphql-js&lt;/code&gt;&lt;/a&gt; can also be specified instead of &lt;code&gt;typeDefs&lt;/code&gt; and &lt;code&gt;resolvers&lt;/code&gt; using the &lt;code&gt;schema&lt;/code&gt; property:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const server = new ApolloServer({&#xA;  schema: ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Finally, start the server using &lt;code&gt;node index.js&lt;/code&gt; and go to the URL returned on the console.&lt;/p&gt; &#xA;&lt;p&gt;For more details, check out the Apollo Server &lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/getting-started.html&#34;&gt;Getting Started guide&lt;/a&gt; and the &lt;a href=&#34;https://www.apollographql.com/docs/tutorial/introduction.html&#34;&gt;fullstack tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For questions, the &lt;a href=&#34;https://community.apollographql.com&#34;&gt;Apollo community forum&lt;/a&gt; is a great place to get help.&lt;/p&gt; &#xA;&lt;h2&gt;Installation: Integrations&lt;/h2&gt; &#xA;&lt;p&gt;While the standalone installation above can be used without making a decision about which web framework to use, the Apollo Server integration packages are paired with specific web frameworks (e.g. Express, Koa, hapi).&lt;/p&gt; &#xA;&lt;p&gt;The following web frameworks have Apollo Server integrations, and each of these linked integrations has its own installation instructions and examples on its package &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-express&#34;&gt;Express&lt;/a&gt; &lt;em&gt;(Most popular)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-koa&#34;&gt;Koa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-hapi&#34;&gt;Hapi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-fastify&#34;&gt;Fastify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-lambda&#34;&gt;Amazon Lambda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-micro&#34;&gt;Micro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-azure-functions&#34;&gt;Azure Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-cloud-functions&#34;&gt;Google Cloud Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apollographql/apollo-server/tree/main/packages/apollo-server-cloudflare&#34;&gt;Cloudflare&lt;/a&gt; &lt;em&gt;(Experimental)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Context&lt;/h2&gt; &#xA;&lt;p&gt;A request context is available for each request. When &lt;code&gt;context&lt;/code&gt; is defined as a function, it will be called on each request and will receive an object containing a &lt;code&gt;req&lt;/code&gt; property, which represents the request itself.&lt;/p&gt; &#xA;&lt;p&gt;By returning an object from the &lt;code&gt;context&lt;/code&gt; function, it will be available as the third positional parameter of the resolvers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers: {&#xA;    Query: {&#xA;      books: (parent, args, context, info) =&amp;gt; {&#xA;        console.log(context.myProperty); // Will be `true`!&#xA;        return books;&#xA;      },&#xA;    }&#xA;  },&#xA;  context: async ({ req }) =&amp;gt; {&#xA;    return {&#xA;      myProperty: true&#xA;    };&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://apollographql.com/docs/apollo-server/&#34;&gt;Apollo Server documentation&lt;/a&gt; contains additional details on how to get started with GraphQL and Apollo Server.&lt;/p&gt; &#xA;&lt;p&gt;The raw Markdown source of the documentation is available within the &lt;code&gt;docs/&lt;/code&gt; directory of this monorepo--to contribute, please use the &lt;em&gt;Edit on GitHub&lt;/em&gt; buttons at the bottom of each page.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to develop or contribute to Apollo Server, we suggest the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://direnv.net/&#34;&gt;Direnv&lt;/a&gt; (a tool that automatically sets up environment variables in project directories) or &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt;. We use nvm to ensure we&#39;re running the expected version of Node (and we use Direnv to install and run nvm automatically).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the Apollo Server project on your computer&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/[your-user]/apollo-server&#xA;cd apollo-server&#xA;direnv allow  # sets up nvm for you; if you installed nvm yourself, try `nvm install` instead&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and test&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To run individual test files, run &lt;code&gt;npm run pretest &amp;amp;&amp;amp; npx jest packages/apollo-server-foo/src/__tests__/bar.test.ts&lt;/code&gt;. Note that you do need to re-compile TypeScript before each time you run a test, or changes across packages may not be picked up. Instead of running &lt;code&gt;npm run pretest&lt;/code&gt; from scratch before each test run, you can also run &lt;code&gt;tsc --build tsconfig.json --watch&lt;/code&gt; in another shell, or use the VSCode &lt;code&gt;Run Build Task&lt;/code&gt; to run that for you.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Are you stuck? Want to contribute? Come visit us in the &lt;a href=&#34;https://community.apollographql.com&#34;&gt;Apollo community forum!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glasser/&#34;&gt;David Glasser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trevorscheer/&#34;&gt;Trevor Scheer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is Apollo?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apollographql.com/&#34;&gt;Apollo&lt;/a&gt; builds open-source software and a graph platform to unify GraphQL across your apps and services. We help you ship faster with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/studio/develop/&#34;&gt;Apollo Studio&lt;/a&gt; ‚Äì A free, end-to-end platform for managing your GraphQL lifecycle. Track your GraphQL schemas in a hosted registry to create a source of truth for everything in your graph. Studio provides an IDE (Apollo Explorer) so you can explore data, collaborate on queries, observe usage, and safely make schema changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/apollo-federation&#34;&gt;Apollo Federation&lt;/a&gt; ‚Äì The industry-standard open architecture for building a distributed graph. Use Apollo‚Äôs gateway to compose a unified graph from multiple subgraphs, determine a query plan, and route requests across your services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/apollo-client/&#34;&gt;Apollo Client&lt;/a&gt; ‚Äì The most popular GraphQL client for the web. Apollo also builds and maintains &lt;a href=&#34;https://github.com/apollographql/apollo-ios&#34;&gt;Apollo iOS&lt;/a&gt; and &lt;a href=&#34;https://github.com/apollographql/apollo-android&#34;&gt;Apollo Android&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/&#34;&gt;Apollo Server&lt;/a&gt; ‚Äì A production-ready JavaScript GraphQL server that connects to any microservice, API, or database. Compatible with all popular JavaScript frameworks and deployable in serverless environments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn how to build with Apollo&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://odyssey.apollographql.com/&#34;&gt;Odyssey&lt;/a&gt; learning platform, the perfect place to start your GraphQL journey with videos and interactive code challenges. Join the &lt;a href=&#34;https://community.apollographql.com/&#34;&gt;Apollo Community&lt;/a&gt; to interact with and get technical help from the GraphQL community.&lt;/p&gt;</summary>
  </entry>
</feed>