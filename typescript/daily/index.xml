<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-27T01:36:03Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>infinitered/nsfwjs</title>
    <updated>2024-02-27T01:36:03Z</updated>
    <id>tag:github.com,2024-02-27:/infinitered/nsfwjs</id>
    <link href="https://github.com/infinitered/nsfwjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NSFW detection on the client-side via TensorFlow.js&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/infinitered/nsfwjs/raw/master/_art/nsfwjs_logo.jpg&#34; alt=&#34;NSFWJS Logo&#34; width=&#34;400&#34;&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;Client-side indecent content checking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-15-green.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dl.circleci.com/status-badge/redirect/gh/infinitered/nsfwjs/tree/master&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/status-badge/img/gh/infinitered/nsfwjs/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/nsfwjs/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/72d19dc0-d316-4f75-9904-a33d833ff628/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple JavaScript library to help you quickly identify unseemly images; all in the client&#39;s browser. NSFWJS isn&#39;t perfect, but it&#39;s pretty accurate (~90% with small and ~93% with midsized model)... and it&#39;s getting more accurate all the time.&lt;/p&gt; &#xA;&lt;p&gt;Why would this be useful? &lt;a href=&#34;https://shift.infinite.red/avoid-nightmares-nsfw-js-ab7b176978b1&#34;&gt;Check out the announcement blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/infinitered/nsfwjs/raw/master/_art/nsfw_demo.gif&#34; alt=&#34;demo example&#34; width=&#34;800&#34; align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#quick-how-to-use-the-module&#34;&gt;QUICK: How to use the module&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#library-api&#34;&gt;Library API&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#load-the-model&#34;&gt;&lt;code&gt;load&lt;/code&gt; the model&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#classify-an-image&#34;&gt;&lt;code&gt;classify&lt;/code&gt; an image&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#production&#34;&gt;Production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#install&#34;&gt;Install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#host-your-own-model&#34;&gt;Host your own model&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#run-the-examples&#34;&gt;Run the Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#tensorflowjs-in-the-browser&#34;&gt;Tensorflow.js in the browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#browserify&#34;&gt;Browserify&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#react-native&#34;&gt;React Native&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#node-js-app&#34;&gt;Node JS App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#nsfw-filter&#34;&gt;NSFW Filter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#learn-tensorflowjs&#34;&gt;Learn TensorFlow.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#more&#34;&gt;More!&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#open-source&#34;&gt;Open Source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#need-the-experts-hire-infinite-red-for-your-next-project&#34;&gt;Need the experts? Hire Infinite Red for your next project&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;p&gt;The library categorizes image probabilities in the following 5 classes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Drawing&lt;/code&gt; - safe for work drawings (including anime)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hentai&lt;/code&gt; - hentai and pornographic drawings&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Neutral&lt;/code&gt; - safe for work neutral images&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Porn&lt;/code&gt; - pornographic images, sexual acts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Sexy&lt;/code&gt; - sexually explicit images, not pornography&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;The demo is a continuous deployment source - Give it a go: &lt;a href=&#34;http://nsfwjs.com/&#34;&gt;http://nsfwjs.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;QUICK: How to use the module&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;code&gt;async/await&lt;/code&gt; support:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import * as nsfwjs from &#39;nsfwjs&#39;&#xA;&#xA;const img = document.getElementById(&#39;img&#39;)&#xA;&#xA;// Load model from my S3.&#xA;// See the section hosting the model files on your site.&#xA;const model = await nsfwjs.load()&#xA;&#xA;// Classify the image&#xA;const predictions = await model.classify(img)&#xA;console.log(&#39;Predictions: &#39;, predictions)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without &lt;code&gt;async/await&lt;/code&gt; support:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import * as nsfwjs from &#39;nsfwjs&#39;&#xA;&#xA;const img = document.getElementById(&#39;img&#39;)&#xA;&#xA;// Load model from my S3.&#xA;// See the section hosting the model files on your site.&#xA;nsfwjs.load()&#xA;  .then(function (model) {&#xA;    // Classify the image&#xA;    return model.classify(img)&#xA;  })&#xA;  .then(function (predictions) {&#xA;    console.log(&#39;Predictions: &#39;, predictions)&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Library API&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;code&gt;load&lt;/code&gt; the model&lt;/h4&gt; &#xA;&lt;p&gt;Before you can classify any image, you&#39;ll need to load the model. You should use the optional first parameter and load the model from your website, as explained in the install directions.&lt;/p&gt; &#xA;&lt;p&gt;Model example - &lt;a href=&#34;https://github.com/infinitered/nsfwjs/raw/master/examples/nsfw_demo/public/quant_nsfw_mobilenet/&#34;&gt;224x224&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const model = nsfwjs.load(&#39;/path/to/model/directory/&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using a model that needs an image of dimension other than 224x224, you can pass the size in the options parameter.&lt;/p&gt; &#xA;&lt;p&gt;Model example - &lt;a href=&#34;https://github.com/infinitered/nsfwjs/tree/master/examples/nsfw_demo/public/model&#34;&gt;299x299&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const model = nsfwjs.load(&#39;/path/to/different/model/&#39;, { size: 299 })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using a graph model, you cannot use the infer method, and you&#39;ll need to tell model load that you&#39;re dealing with a graph model in options.&lt;/p&gt; &#xA;&lt;p&gt;Model example - &lt;a href=&#34;https://github.com/infinitered/nsfwjs/tree/master/examples/nsfw_demo/public/quant_mid&#34;&gt;Graph&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const model = nsfwjs.load(&#39;/path/to/different/model/&#39;, { type: &#39;graph&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using in the browser and you&#39;d like to subsequently load from indexed db or local storage you can save the underlying model using the appropriate scheme and load from there.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const initialLoad = await nsfwjs.load(&#39;/path/to/different/model&#39;)&#xA;await initialLoad.model.save(&#39;indexeddb://model&#39;)&#xA;const model = await nsfwjs.load(&#39;indexeddb://model&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;optional URL to the &lt;code&gt;model.json&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;optional object with size property that your model expects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ready to use NSFWJS model object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;classify&lt;/code&gt; an image&lt;/h4&gt; &#xA;&lt;p&gt;This function can take any browser-based image elements (&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;) and returns an array of most likely predictions and their confidence levels.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Return top 3 guesses (instead of all 5)&#xA;const predictions = await model.classify(img, 3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tensor, Image data, Image element, video element, or canvas element to check&lt;/li&gt; &#xA; &lt;li&gt;Number of results to return (default all 5)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Array of objects that contain &lt;code&gt;className&lt;/code&gt; and &lt;code&gt;probability&lt;/code&gt;. Array size is determined by the second parameter in the &lt;code&gt;classify&lt;/code&gt; function.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Production&lt;/h2&gt; &#xA;&lt;p&gt;Tensorflow.js offers two flags, &lt;code&gt;enableProdMode&lt;/code&gt; and &lt;code&gt;enableDebugMode&lt;/code&gt;. If you&#39;re going to use NSFWJS in production, be sure to enable prod mode before loading the NSFWJS model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import * as tf from &#39;@tensorflow/tfjs&#39;&#xA;import * as nsfwjs from &#39;nsfwjs&#39;&#xA;tf.enableProdMode()&#xA;//...&#xA;let model = await nsfwjs.load(`${urlToNSFWJSModel}`)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please be sure to download and host the model before releasing to production (&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#host-your-own-model&#34;&gt;instructions&lt;/a&gt;). The hosted model can be moved without notice.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;NSFWJS is powered by TensorFlow.js as a peer dependency. If your project does not already have TFJS you&#39;ll need to add it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# peer dependency&#xA;$ yarn add @tensorflow/tfjs&#xA;# install NSFWJS&#xA;$ yarn add nsfwjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For script tags add &lt;code&gt;&amp;lt;script type=&#34;text/javascript&#34; src=&#34;https://unpkg.com/nsfwjs&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;. Then simply access the nsfwjs global variable. This requires that you&#39;ve already imported TensorFlow.js as well.&lt;/p&gt; &#xA;&lt;h4&gt;Host your own model&lt;/h4&gt; &#xA;&lt;p&gt;The magic that powers NSFWJS is the &lt;a href=&#34;https://github.com/gantman/nsfw_model&#34;&gt;NSFW detection model&lt;/a&gt;. By default, this node module is pulling from my S3, but I make no guarantees that I&#39;ll keep that download link available forever. It&#39;s best for the longevity of your project that you download and host your own version of &lt;a href=&#34;https://github.com/infinitered/nsfwjs/tree/master/examples/nsfw_demo/public/model&#34;&gt;the model files&lt;/a&gt;. You can then pass the relative URL to your hosted files in the &lt;code&gt;load&lt;/code&gt; function. If you can come up with a way to bundle the model into the NPM package, I&#39;d love to see a PR to this repo!&lt;/p&gt; &#xA;&lt;p&gt;Here is how to install the default model on a website:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the project directly into a subdomain such as labs.site.com: &lt;code&gt;git clone https://github.com/infinitered/nsfwjs.git&lt;/code&gt;. Do not download it as a zip file or manually; this is important.&lt;/li&gt; &#xA; &lt;li&gt;Retrieve the URL (example: &lt;a href=&#34;https://labs.site.com/nsfwjs/examples/nsfw_demo/public/quant_nsfw_mobilenet/&#34;&gt;https://labs.site.com/nsfwjs/examples/nsfw_demo/public/quant_nsfw_mobilenet/&lt;/a&gt;) and put it into &lt;code&gt;nsfwjs.load(&#39;&amp;lt;url&amp;gt;&#39;)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;It should work normally by launching &lt;code&gt;node server&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Run the Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Tensorflow.js in the browser&lt;/h3&gt; &#xA;&lt;p&gt;The demo that powers &lt;a href=&#34;https://nsfwjs.com/&#34;&gt;https://nsfwjs.com/&lt;/a&gt; is available in the &lt;code&gt;nsfw_demo&lt;/code&gt; example folder.&lt;/p&gt; &#xA;&lt;p&gt;To run the demo, run &lt;code&gt;yarn prep&lt;/code&gt; which will copy the latest code into the demo. After that&#39;s done, you can &lt;code&gt;cd&lt;/code&gt; into the demo folder and run with &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Browserify&lt;/h3&gt; &#xA;&lt;p&gt;A browserified version using nothing but promises and script tags is available in the &lt;code&gt;minimal_demo&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Please do not use the script tags hosted in this demo as a CDN. This can and should be hosted in your project along side the model files.&lt;/p&gt; &#xA;&lt;h3&gt;React Native&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/infinitered/nsfwjs-mobile&#34;&gt;NSFWJS React Native app&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/_art/nsfwjs-mobile.jpg&#34; alt=&#34;React Native Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Loads a local copy of the model to reduce network load and utilizes TFJS-React-Native. &lt;a href=&#34;https://shift.infinite.red/nsfw-js-for-react-native-a37c9ba45fe9&#34;&gt;Blog Post&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Node JS App&lt;/h3&gt; &#xA;&lt;p&gt;Using NPM, you can also use the model on the server side.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install nsfwjs&#xA;$ npm install @tensorflow/tfjs-node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const axios = require(&#39;axios&#39;) //you can use any http client&#xA;const tf = require(&#39;@tensorflow/tfjs-node&#39;)&#xA;const nsfw = require(&#39;nsfwjs&#39;)&#xA;async function fn() {&#xA;  const pic = await axios.get(`link-to-picture`, {&#xA;    responseType: &#39;arraybuffer&#39;,&#xA;  })&#xA;  const model = await nsfw.load() // To load a local model, nsfw.load(&#39;file://./path/to/model/&#39;)&#xA;  // Image must be in tf.tensor3d format&#xA;  // you can convert image to tf.tensor3d with tf.node.decodeImage(Uint8Array,channels)&#xA;  const image = await tf.node.decodeImage(pic.data,3)&#xA;  const predictions = await model.classify(image)&#xA;  image.dispose() // Tensor memory must be managed explicitly (it is not sufficient to let a tf.Tensor go out of scope for its memory to be released).&#xA;  console.log(predictions)&#xA;}&#xA;fn()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is another full example of a &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/examples/node_demo&#34;&gt;multipart/form-data POST using Express&lt;/a&gt;, supposing you are using JPG format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const express = require(&#39;express&#39;)&#xA;const multer = require(&#39;multer&#39;)&#xA;const jpeg = require(&#39;jpeg-js&#39;)&#xA;&#xA;const tf = require(&#39;@tensorflow/tfjs-node&#39;)&#xA;const nsfw = require(&#39;nsfwjs&#39;)&#xA;&#xA;const app = express()&#xA;const upload = multer()&#xA;&#xA;let _model&#xA;&#xA;const convert = async (img) =&amp;gt; {&#xA;  // Decoded image in UInt8 Byte array&#xA;  const image = await jpeg.decode(img, { useTArray: true })&#xA;&#xA;  const numChannels = 3&#xA;  const numPixels = image.width * image.height&#xA;  const values = new Int32Array(numPixels * numChannels)&#xA;&#xA;  for (let i = 0; i &amp;lt; numPixels; i++)&#xA;    for (let c = 0; c &amp;lt; numChannels; ++c)&#xA;      values[i * numChannels + c] = image.data[i * 4 + c]&#xA;&#xA;  return tf.tensor3d(values, [image.height, image.width, numChannels], &#39;int32&#39;)&#xA;}&#xA;&#xA;app.post(&#39;/nsfw&#39;, upload.single(&#39;image&#39;), async (req, res) =&amp;gt; {&#xA;  if (!req.file) res.status(400).send(&#39;Missing image multipart/form-data&#39;)&#xA;  else {&#xA;    const image = await convert(req.file.buffer)&#xA;    const predictions = await _model.classify(image)&#xA;    image.dispose()&#xA;    res.json(predictions)&#xA;  }&#xA;})&#xA;&#xA;const load_model = async () =&amp;gt; {&#xA;  _model = await nsfw.load()&#xA;}&#xA;&#xA;// Keep the model in memory, make sure it&#39;s loaded only once&#xA;load_model().then(() =&amp;gt; app.listen(8080))&#xA;&#xA;// curl --request POST localhost:8080/nsfw --header &#39;Content-Type: multipart/form-data&#39; --data-binary &#39;image=@/full/path/to/picture.jpg&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;https://github.com/lovell/sharp&#34;&gt;&lt;code&gt;lovell/sharp&lt;/code&gt;&lt;/a&gt; for preprocessing tasks and more file formats.&lt;/p&gt; &#xA;&lt;h3&gt;NSFW Filter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/navendu-pottekkat/nsfw-filter&#34;&gt;&lt;strong&gt;NSFW Filter&lt;/strong&gt;&lt;/a&gt; is a web extension that uses NSFWJS for filtering out NSFW images from your browser.&lt;/p&gt; &#xA;&lt;p&gt;It is currently available for Chrome and Firefox and is completely open-source.&lt;/p&gt; &#xA;&lt;p&gt;Check out the project &lt;a href=&#34;https://github.com/navendu-pottekkat/nsfw-filter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn TensorFlow.js&lt;/h2&gt; &#xA;&lt;p&gt;Learn how to write your own library like NSFWJS with my O&#39;Reilly book &#34;Learning TensorFlow.js&#34; available on &lt;a href=&#34;https://learning.oreilly.com/library/view/learning-tensorflowjs/9781492090786/&#34;&gt;O&#39;Reilly&lt;/a&gt; and &lt;a href=&#34;https://amzn.to/3dR3vpY&#34;&gt;Amazon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://amzn.to/3dR3vpY&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/_art/red_mockup_top.jpg&#34; alt=&#34;Learning TensorFlow.js JavaScript Book Red&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;More!&lt;/h2&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://github.com/infinitered/nsfwjs/wiki/FAQ:-NSFW-JS&#34;&gt;FAQ&lt;/a&gt; page is available.&lt;/p&gt; &#xA;&lt;p&gt;More about NSFWJS and TensorFlow.js - &lt;a href=&#34;https://youtu.be/uzQwmZwy3yw&#34;&gt;https://youtu.be/uzQwmZwy3yw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://medium.freecodecamp.org/how-to-set-up-nsfw-content-detection-with-machine-learning-229a9725829c&#34;&gt;model was trained in Keras over several days&lt;/a&gt; and 60+ Gigs of data. Be sure to &lt;a href=&#34;https://github.com/GantMan/nsfw_model&#34;&gt;check out the model code&lt;/a&gt; which was trained on data provided by &lt;a href=&#34;https://github.com/alexkimxyz&#34;&gt;Alexander Kim&#39;s&lt;/a&gt; &lt;a href=&#34;https://github.com/alexkimxyz/nsfw_data_scraper&#34;&gt;nsfw_data_scraper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Open Source&lt;/h4&gt; &#xA;&lt;p&gt;NSFWJS, as open source, is free to use and always will be &lt;span&gt;❤️&lt;/span&gt;. It&#39;s MIT licensed, and we&#39;ll always do our best to help and quickly answer issues. If you&#39;d like to get a hold of us, join our &lt;a href=&#34;http://community.infinite.red&#34;&gt;community slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Need the experts? Hire Infinite Red for your next project&lt;/h4&gt; &#xA;&lt;p&gt;If your project&#39;s calling for the experts in all things React Native, Infinite Red’s here to help! Our experienced team of software engineers have worked with companies like Microsoft, Zoom, and Mercari to bring even some of the most complex projects to life.&lt;/p&gt; &#xA;&lt;p&gt;Whether it’s running a full project or training a team on React Native, we can help you solve your company’s toughest engineering challenges – and make it a great experience at the same time. Ready to see how we can work together? &lt;a href=&#34;mailto:hello@infinite.red&#34;&gt;Send us a message&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://gantlaborde.com/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/997157?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Gant Laborde&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gant Laborde&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#question-GantMan&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#blog-GantMan&#34; title=&#34;Blogposts&#34;&gt;📝&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=GantMan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#example-GantMan&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#ideas-GantMan&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#infra-GantMan&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/pulls?q=is%3Apr+reviewed-by%3AGantMan&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=GantMan&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://jamonholmgren.com&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1479215?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jamon Holmgren&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jamon Holmgren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=jamonholmgren&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#ideas-jamonholmgren&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=jamonholmgren&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#content-jamonholmgren&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/mazenchami&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9324607?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mazen Chami&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mazen Chami&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mazenchami&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mazenchami&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/pulls?q=is%3Apr+reviewed-by%3Amazenchami&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mazenchami&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/jstudenski&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/7350279?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jeff Studenski&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jeff Studenski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#design-jstudenski&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/fvonhoven&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10098988?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Frank von Hoven III&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frank von Hoven III&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=fvonhoven&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#ideas-fvonhoven&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/sandeshsoni&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/3761745?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sandesh Soni&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandesh Soni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=sandeshsoni&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/seannam1218&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/24437898?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sean Nam&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sean Nam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=seannam1218&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/emer7&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/21377166?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Gilbert Emerson&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gilbert Emerson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=emer7&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/xilaraux&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/17703730?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Oleksandr Kozlov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oleksandr Kozlov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#infra-xilaraux&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=xilaraux&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=xilaraux&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://morganlaco.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/4466642?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Morgan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Morgan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mlaco&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#ideas-mlaco&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://mycaule.github.io/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/6161385?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Michel Hua&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michel Hua&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mycaule&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=mycaule&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.infinite.red&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/1771152?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kevin VanGelder&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin VanGelder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=kevinvangelder&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=kevinvangelder&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://technikempire.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/11234763?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jesse Nicholson&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jesse Nicholson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#data-TechnikEmpire&#34; title=&#34;Data&#34;&gt;🔣&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#ideas-TechnikEmpire&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/camhart&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/3038809?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;camhart&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;camhart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=camhart&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Cameron-Burkholder&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/13265710?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Cameron Burkholder&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cameron Burkholder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#design-Cameron-Burkholder&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://qwertyforce.ru&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/44163887?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;qwertyforce&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;qwertyforce&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=qwertyforce&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/YegorZaremba&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/31797554?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Yegor &lt;3&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yegor &amp;lt;3&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=YegorZaremba&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=YegorZaremba&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://navendu.me&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/49474499?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Navendu Pottekkat&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Navendu Pottekkat&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=navendu-pottekkat&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/VladStepanov&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/49880862?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Vladislav&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vladislav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=VladStepanov&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=VladStepanov&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/nacht42&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/37903575?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nacht&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nacht&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=nacht42&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kateinkim&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/53795920?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;kateinkim&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kateinkim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=kateinkim&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=kateinkim&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://janpoonthong.github.io/portfolio/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/56725335?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;jan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=JanPoonthong&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/roerohan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/42958812?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rohan Mukherjee&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rohan Mukherjee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#question-roerohan&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#infra-roerohan&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infinitered/nsfwjs/master/#maintenance-roerohan&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt; &lt;a href=&#34;https://github.com/infinitered/nsfwjs/commits?author=roerohan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>omnivore-app/omnivore</title>
    <updated>2024-02-27T01:36:03Z</updated>
    <id>tag:github.com,2024-02-27:/omnivore-app/omnivore</id>
    <link href="https://github.com/omnivore-app/omnivore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Omnivore is a complete, open source read-it-later solution for people who like reading.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Omnivore&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/omnivore-app/omnivore/actions/workflows/run-tests.yaml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/omnivore-app/omnivore/Run%20tests&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/h2z5rppzz9&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/844965259462311966?label=Join%20our%20Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pkm.social/@omnivore&#34;&gt;&lt;img src=&#34;https://img.shields.io/mastodon/follow/109458738600914558?domain=https%3A%2F%2Fpkm.social&#34; alt=&#34;Mastodon Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/OmnivoreApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/omnivoreapp&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/omnivore-app/omnivore&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://avatars.githubusercontent.com/u/70113176?s=400&amp;amp;u=506b21d9f019f3160963c010ef363667fb24c7c9&amp;amp;v=4&#34; height=&#34;150px&#34; alt=&#34;Omnivore Logo&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://omnivore.app&#34;&gt;Omnivore&lt;/a&gt; is a complete, open source read-it-later solution for people who like text.&lt;/p&gt; &#xA;&lt;p&gt;We built Omnivore because we love reading and we want it to be more social. Join us!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Highlighting, notes, search, and sharing&lt;/li&gt; &#xA; &lt;li&gt;Full keyboard navigation&lt;/li&gt; &#xA; &lt;li&gt;Automatically saves your place in long articles&lt;/li&gt; &#xA; &lt;li&gt;Add newsletter articles via email (with substack support!)&lt;/li&gt; &#xA; &lt;li&gt;PDF support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/&#34;&gt;Web app&lt;/a&gt; written in Node.js and TypeScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/install/ios&#34;&gt;Native iOS app&lt;/a&gt; (&lt;a href=&#34;https://github.com/omnivore-app/omnivore/tree/main/apple&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://omnivore.app/install/android&#34;&gt;Android app&lt;/a&gt; (&lt;a href=&#34;https://github.com/omnivore-app/omnivore/tree/main/android/Omnivore&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Progressive web app for Android users&lt;/li&gt; &#xA; &lt;li&gt;Browser extensions for &lt;a href=&#34;https://omnivore.app/install/chrome&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;https://omnivore.app/install/safari&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;https://omnivore.app/install/firefox&#34;&gt;Firefox&lt;/a&gt;, and &lt;a href=&#34;https://omnivore.app/install/edge&#34;&gt;Edge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Labels (aka tagging)&lt;/li&gt; &#xA; &lt;li&gt;Offline support&lt;/li&gt; &#xA; &lt;li&gt;Text to speech (iOS only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://logseq.com/&#34;&gt;Logseq&lt;/a&gt; support via our &lt;a href=&#34;https://github.com/omnivore-app/logseq-omnivore&#34;&gt;Logseq Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; support via our &lt;a href=&#34;https://github.com/omnivore-app/obsidian-omnivore&#34;&gt;Obsidian Plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Every single part is fully open source! Fork it, extend it, or deploy it to your own server.&lt;/p&gt; &#xA;&lt;p&gt;We also have a free hosted version of Omnivore at &lt;a href=&#34;https://omnivore.app/&#34;&gt;omnivore.app&lt;/a&gt; -- try it now!&lt;/p&gt; &#xA;&lt;img width=&#34;981&#34; alt=&#34;web-screenshot-listview&#34; src=&#34;https://github.com/omnivore-app/omnivore/assets/75189/df7c797a-4255-42f4-a686-ad94866cb580&#34;&gt; &#xA;&lt;h2&gt;Join us on Discord! &lt;span&gt;💬&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re building our community on Discord. &lt;a href=&#34;https://discord.gg/h2z5rppzz9&#34;&gt;Join us!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about Omnivore on our blog. &lt;a href=&#34;https://blog.omnivore.app/p/getting-started-with-omnivore&#34;&gt;https://blog.omnivore.app/p/getting-started-with-omnivore&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shoutouts &lt;span&gt;🎉&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore takes advantage of some great open source software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; - Most of our backend and frontend are written in TypeScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; - Our frontend is a Next.JS app and is hosted on &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://swr.vercel.app/&#34;&gt;SWR&lt;/a&gt; - We do all our data fetching on the web using SWR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stitches.dev/&#34;&gt;Stitches&lt;/a&gt; - We use Stitches on the frontend to style our components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/readability&#34;&gt;Mozilla Readability&lt;/a&gt; - We use Mozilla&#39;s Readability library to make pages easier to read.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.swift-graphql.com/&#34;&gt;Swift GraphQL&lt;/a&gt; - We generate our GraphQL queries on iOS using Swift GraphQL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/&#34;&gt;Apollo GraphQL&lt;/a&gt; - We generate our GraphQL queries on Android using Apollo GraphQL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.radix-ui.com/&#34;&gt;Radix&lt;/a&gt; - We use Radix UI&#39;s components on our frontend.&lt;/li&gt; &#xA; &lt;li&gt;And many more awesome libraries, just checkout our package files to see what we are using.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Importing Libraries&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.omnivore.app/using/importing.html&#34;&gt;docs&lt;/a&gt; for information on importing your data from other apps.&lt;/p&gt; &#xA;&lt;h2&gt;How to setup local development &lt;span&gt;💻&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started with local development is to use &lt;code&gt;docker compose up&lt;/code&gt;. This will start a postgres container, our web frontend, an API server, and our content fetching microservice.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements for development&lt;/h3&gt; &#xA;&lt;p&gt;Omnivore is written in TypeScript and JavaScript.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt; -- currently we are using Node.js v14.18&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.chromium.org/chromium-projects/&#34;&gt;Chromium&lt;/a&gt; -- see below for installation info&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running the web and API services&lt;/h3&gt; &#xA;&lt;h3&gt;1. Start docker compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/omnivore-app/omnivore&#xA;cd omnivore&#xA;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start postgres, initialize the database, and start the web and api services.&lt;/p&gt; &#xA;&lt;h3&gt;2. Open the browser&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; and confirm Omnivore is running&lt;/p&gt; &#xA;&lt;h3&gt;3. Login with the test account&lt;/h3&gt; &#xA;&lt;p&gt;During database setup docker compose creates an account &lt;code&gt;demo@omnivore.app&lt;/code&gt;, password: &lt;code&gt;demo_password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; in your browser and choose &lt;code&gt;Continue with Email&lt;/code&gt; to login.&lt;/p&gt; &#xA;&lt;h3&gt;Frontend Development&lt;/h3&gt; &#xA;&lt;p&gt;If you want to work on just the frontend of Omnivore you can run the backend services with docker compose and the frontend locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up api content-fetch&#xA;cd packages/web&#xA;cp .env.template .env.local&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to configure some values in the new &lt;code&gt;.env.local&lt;/code&gt; file. These are the values for running the &lt;code&gt;web&lt;/code&gt; service directly on your host machine and running &lt;code&gt;api&lt;/code&gt; and &lt;code&gt;content-fetch&lt;/code&gt; within docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;NEXT_PUBLIC_BASE_URL=http://localhost:3000&#xA;NEXT_PUBLIC_HIGHLIGHTS_BASE_URL=http://localhost:3000&#xA;NEXT_PUBLIC_LOCAL_BASE_URL=http://localhost:3000&#xA;NEXT_PUBLIC_SERVER_BASE_URL=http://localhost:4000&#xA;NEXT_PUBLIC_LOCAL_SERVER_BASE_URL=http://localhost:4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running the puppeteer-parse service outside of Docker&lt;/h3&gt; &#xA;&lt;p&gt;To save pages you need to run the &lt;code&gt;puppeteer-parse&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;h3&gt;1. Install and configure Chromium&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install chromium --no-quarantine&#xA;export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true&#xA;export CHROMIUM_PATH=`which chromium`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Navigate to the service directory, setup your env file, and install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd packages/puppeteer-parse&#xA;cp .env.example .env&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start the service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the puppeteer-parse service on port 9090.&lt;/p&gt; &#xA;&lt;p&gt;In your browser go to &lt;a href=&#34;http://localhost:3000/home&#34;&gt;http://localhost:3000/home&lt;/a&gt;, click the &lt;code&gt;Add Link&lt;/code&gt; button, and enter a URL such as &lt;code&gt;https://blog.omnivore.app/p/getting-started-with-omnivore&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should see a Chromium window open and navigate to your link. When the service is done fetching your content you will see it in your library.&lt;/p&gt; &#xA;&lt;h2&gt;How to deploy to your own server&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore was originally designed to be deployed on GCP and takes advantage of some of GCP&#39;s PaaS features. We are working to make Omnivore more portable so you can easily run the service on your own infrastructure. You can track progress here: &lt;a href=&#34;https://github.com/omnivore-app/omnivore/issues/25&#34;&gt;https://github.com/omnivore-app/omnivore/issues/25&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To deploy Omnivore on your own hardware you will need to deploy three dockerized services and configure access to a postgres service. To handle PDF documents you will need to configure access to a Google Cloud Storage bucket.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/api&lt;/code&gt; - the backend API service&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/web&lt;/code&gt; - the web frontend (can easily be deployed to vercel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/puppeteer-parse&lt;/code&gt; - the content fetching service (can easily be deployed as an AWS lambda or GCP Cloud Function)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, you will need to run our database migrations to initialize your database. These are dockerized and can be run with the &lt;code&gt;packages/db&lt;/code&gt; service.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Omnivore and our extensions to Readability.js are under the AGPL-3.0 license.&lt;/p&gt;</summary>
  </entry>
</feed>