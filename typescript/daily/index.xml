<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-06T01:47:48Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JimmyLv/BiliGPT</title>
    <updated>2023-03-06T01:47:48Z</updated>
    <id>tag:github.com,2023-03-06:/JimmyLv/BiliGPT</id>
    <link href="https://github.com/JimmyLv/BiliGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BiliGPT 哔哩哔哩 · 视频内容一键总结&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🤖 BiliGPT 哔哩哔哩 · 视频内容一键总结 &lt;a href=&#34;https://b.jimmylv.cn/&#34;&gt;b.jimmylv.cn&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;备用地址：&lt;a href=&#34;https://chat-bilibili-video.vercel.app&#34;&gt;https://chat-bilibili-video.vercel.app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project summarizes Bilibili videos for you using AI.&lt;/p&gt; &#xA;&lt;p&gt;🤯 Inspired by &lt;a href=&#34;https://github.com/Nutlope/news-summarizer&#34;&gt;Nutlope/news-summarizer&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/zhengbangbo/chat-simplifier/&#34;&gt;zhengbangbo/chat-simplifier&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/lxfater/BilibiliSummary&#34;&gt;lxfater/BilibiliSummary&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/Jimmy_JingLv/status/1630137750572728320?s=20&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JimmyLv/BiliGPT/main/public/screenshot.png&#34; alt=&#34;哔哩哔哩视频总结工具&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1fX4y1Q7Ux/?vd_source=dd5a650b0ad84edd0d54bb18196ecb86&#34;&gt;【BiliGPT】AI 自动总结 B站 视频内容，GPT-3 智能提取并总结字幕&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://openai.com/api/&#34;&gt;OpenAI GPT-3.5 API&lt;/a&gt; (specifically, gpt-3.5-turbo) and &lt;a href=&#34;https://vercel.com/features/edge-functions&#34;&gt;Vercel Edge functions&lt;/a&gt; with streaming and &lt;a href=&#34;https://console.upstash.com/&#34;&gt;Upstash&lt;/a&gt; for Redis cache and rate limiting. It fetches the content on a Bilibili video, sends it in a prompt to the GPT-3 API to summarize it via a Vercel Edge function, then streams the response back to the application.&lt;/p&gt; &#xA;&lt;h2&gt;Saving costs&lt;/h2&gt; &#xA;&lt;p&gt;Projects like this can get expensive so in order to save costs if you want to make your own version and share it publicly, I recommend three things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 1. Implement rate limiting so people can&#39;t abuse your site&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 2. Implement caching to avoid expensive AI re-generations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 3. Use &lt;code&gt;text-curie-001&lt;/code&gt; instead of &lt;code&gt;text-dacinci-003&lt;/code&gt; in the &lt;code&gt;summarize&lt;/code&gt; edge function&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;After cloning the repo, go to &lt;a href=&#34;https://beta.openai.com/account/api-keys&#34;&gt;OpenAI&lt;/a&gt; to make an account and put your API key in a file called &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, run the application in the command line and it will be available at &lt;code&gt;http://localhost:3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;One-Click Deploy&lt;/h2&gt; &#xA;&lt;p&gt;Deploy the example using &lt;a href=&#34;https://vercel.com?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=vercel-examples&#34;&gt;Vercel&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https://github.com/JimmyLv/BiliGPT&amp;amp;env=OPENAI_API_KEY&amp;amp;project-name=chat-bilibili-video&amp;amp;repo-name=chat-bilibili-video&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support -&amp;gt; Contact Me&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JimmyLv/BiliGPT/main/public/wechat.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Uniswap/wallet</title>
    <updated>2023-03-06T01:47:48Z</updated>
    <id>tag:github.com,2023-03-06:/Uniswap/wallet</id>
    <link href="https://github.com/Uniswap/wallet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Uniswap Wallet is the simplest, safest, and most powerful self-custodial crypto wallet. It is developed by the Uniswap Labs team, inventors of the Uniswap Protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Uniswap Wallet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/Uniswap/mobile&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Uniswap/mobile/branch/main/graph/badge.svg?token=YVT2Y86O82&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.uniswap.org/&#34;&gt;Uniswap Wallet&lt;/a&gt; is the simplest, safest, and most powerful self-custodial crypto wallet. It is developed by the Uniswap Labs team, inventors of the Uniswap Protocol.&lt;/p&gt; &#xA;&lt;p&gt;If you have suggestions on how we can improve the app, or would like to report a bug or a problem, check out the &lt;a href=&#34;https://support.uniswap.org/&#34;&gt;Uniswap Help Center&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#packages-and-software&#34;&gt;Packages and Software&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#disabling-flipper&#34;&gt;Disabling Flipper&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#running-the-app-locally&#34;&gt;Running the App Locally&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#clone-the-repo&#34;&gt;Clone the repo&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#compile-contract-abi-types&#34;&gt;Compile contract ABI types&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#run-the-app&#34;&gt;Run the app&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#important-libraries-and-tools&#34;&gt;Important Libraries and Tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#migrations&#34;&gt;Migrations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#internationalisation-i18n&#34;&gt;Internationalisation (i18n)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#common-issues&#34;&gt;Common issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#common-fixes&#34;&gt;Common fixes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/#zprofile-setup&#34;&gt;.zprofile setup&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;This guide assumes that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You are using a Mac (you will need a Mac computer in order to run the Xcode iOS Simulator)&lt;/li&gt; &#xA; &lt;li&gt;You are using an Apple Silicon Mac (if you’re not sure, go to  → About this Mac and check if the chip name starts with &#34;Apple&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: if you are indeed using an Apple Silicon Mac, we recommend setting up your environment &lt;em&gt;without&lt;/em&gt; using Rosetta. Some instructions on how to do that can be found &lt;a href=&#34;https://medium.com/@davidjasonharding/developing-a-react-native-app-on-an-m1-mac-without-rosetta-29fcc7314d70&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages and Software&lt;/h2&gt; &#xA;&lt;h3&gt;Xcode&lt;/h3&gt; &#xA;&lt;p&gt;You should start with downloading Xcode if you don&#39;t already have it installed, since the file is so large. You can find it here: &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;developer.apple.com/xcode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: The version shouldn’t matter too much for Xcode, but at the time of writing, the app is built using version 14.0.1.&lt;/p&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;We’ll be using Homebrew to install many of the other required tools through the command line.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a terminal&lt;/li&gt; &#xA; &lt;li&gt;Copy and paste the command from &lt;a href=&#34;https://brew.sh/&#34;&gt;brew.sh&lt;/a&gt; into your terminal and run it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;nvm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; is the Node Version Manager. While not required, it makes it easy to install Node and switch between different versions. A minimum Node version of 16 is required to use this repository.&lt;/p&gt; &#xA;&lt;p&gt;Copy the curl command listed under &lt;em&gt;Install &amp;amp; Update Script&lt;/em&gt; on &lt;a href=&#34;https://github.com/nvm-sh/nvm#install--update-script&#34;&gt;this page&lt;/a&gt; and run it in your terminal.&lt;/p&gt; &#xA;&lt;p&gt;To make sure nvm installed correctly, try running &lt;code&gt;nvm -v&lt;/code&gt; (you may need to quit and re-open the terminal window). It should return a version number. If it returns something like &lt;code&gt;zsh: command not found: nvm&lt;/code&gt;, it hasn’t been installed correctly.&lt;/p&gt; &#xA;&lt;h3&gt;node&lt;/h3&gt; &#xA;&lt;p&gt;Now we want to use nvm to install a specific version of node.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command in your terminal: &lt;code&gt;nvm install 16&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;and then when it’s finished, run: &lt;code&gt;nvm use 16&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quit and re-open the terminal, and then run: &lt;code&gt;node -v&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;to make sure you get a version number that starts with &lt;code&gt;v16.&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;yarn&lt;/h3&gt; &#xA;&lt;p&gt;We use yarn as our package manager and to run scripts.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to install it: &lt;code&gt;npm install --global yarn&lt;/code&gt; (npm comes with node, so it should work if the above step has been completed correctly)&lt;/p&gt; &#xA;&lt;p&gt;Then run: &lt;code&gt;yarn -v&lt;/code&gt; to see if it installed correctly.&lt;/p&gt; &#xA;&lt;h3&gt;CocoaPods&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;brew install cocoapods&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Add Xcode Command Line Tools&lt;/h3&gt; &#xA;&lt;p&gt;Open Xcode and go to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Preferences → Locations → Command Line Tools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;And select the version that pops up.&lt;/p&gt; &#xA;&lt;h2&gt;Disabling Flipper&lt;/h2&gt; &#xA;&lt;p&gt;We do not check Flipper into source. To prevent &lt;code&gt;pod install&lt;/code&gt; from adding Flipper, set an environment variable in your &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.zprofile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# To enable flipper inclusion (optional)&#xA;export USE_FLIPPER=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: To disable Flipper, the whole line should be commented out, as setting this value to 0 will not disable Flipper.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Running the App Locally&lt;/h2&gt; &#xA;&lt;p&gt;Once all the steps above are completed, you&#39;re ready to try running the app locally!&lt;/p&gt; &#xA;&lt;h3&gt;Clone the repo&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository locally to your machine if you haven&#39;t already.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Note: The app will likely have limited functionality when running it locally with the default environment variables.&lt;/p&gt; &#xA;&lt;p&gt;Use the environment variables defined in the &lt;code&gt;.env.development&lt;/code&gt; file to run the app locally.&lt;/p&gt; &#xA;&lt;h3&gt;Compile contract ABI types&lt;/h3&gt; &#xA;&lt;p&gt;Before the code will compile you need to generate types for the smart contracts the wallet interacts with. Run &lt;code&gt;yarn contracts:compile&lt;/code&gt;. Re-run this if the ABIs are ever changed.&lt;/p&gt; &#xA;&lt;h3&gt;Run the app&lt;/h3&gt; &#xA;&lt;p&gt;In the root directory, run &lt;code&gt;yarn&lt;/code&gt; to install all the necessary npm packages.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;yarn pod&lt;/code&gt; to install all the necessary pods.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;yarn ios&lt;/code&gt; to boot up the iOS Simulator and run the app inside it. The JS bundler (metro) should automatically open in a new terminal window. If it does not, start it manually with &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or you can use one command to run them all one after the other: &lt;code&gt;yarn &amp;amp;&amp;amp; yarn pod &amp;amp;&amp;amp; yarn ios&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also run the app from Xcode, which is necessary for any Swift related changes. Xcode will automatically start the metro bundler.&lt;/p&gt; &#xA;&lt;p&gt;Hopefully you now (after a few minutes) see the Uniswap Wallet running in the iOS Simulator!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Important Libraries and Tools&lt;/h2&gt; &#xA;&lt;p&gt;These are some tools you might want to familiarize yourself with to understand the codebase better and how different aspects of it work.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redux.js.org/&#34;&gt;Redux&lt;/a&gt; and &lt;a href=&#34;https://redux-toolkit.js.org/&#34;&gt;Redux Toolkit&lt;/a&gt;: state management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redux-saga.js.org/&#34;&gt;redux-saga&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/agiledigital/typed-redux-saga&#34;&gt;typed-redux-saga&lt;/a&gt;: Redux side effect manager -- used for complex/stateful network calls&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ethers.io/v5/&#34;&gt;ethers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shopify/restyle&#34;&gt;Shopify/restyle&lt;/a&gt;: UI framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactnavigation.org/&#34;&gt;React navigation&lt;/a&gt;: routing and navigation with animations and gestures&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.i18next.com/&#34;&gt;react-i18next&lt;/a&gt;: i18n&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Migrations&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;code&gt;redux-persist&lt;/code&gt; to persist Redux state between user sessions. When the Redux state schema is altered, a migration may be needed to transfer the existing persisted state to the new Redux schema. Failing to define a migration results in the app defaulting to the persisted schema, which will very likely cause &lt;code&gt;undefined&lt;/code&gt; errors because the code has references to Redux state properties that were dropped in favor the the persisted schema.&lt;/p&gt; &#xA;&lt;h4&gt;When to define a migration&lt;/h4&gt; &#xA;&lt;p&gt;Anytime a required property is added or any property is renamed or deleted to/from Redux state. Migrations are not necessary when optional properties are added to an existing slice. Make sure to always add new required properties to the &lt;code&gt;schema.ts&lt;/code&gt; file as well.&lt;/p&gt; &#xA;&lt;h4&gt;How to migrate&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Increment the &lt;code&gt;version&lt;/code&gt; of &lt;code&gt;persistConfig&lt;/code&gt; defined within &lt;code&gt;store.ts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a migration function within &lt;code&gt;migrations.ts&lt;/code&gt;. The migration key should be the same as the &lt;code&gt;version&lt;/code&gt; defined in the previous step&lt;/li&gt; &#xA; &lt;li&gt;Write a test for your migration within &lt;code&gt;migrations.test.ts&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a new schema within &lt;code&gt;schema.ts&lt;/code&gt; and ensure it is being exported by the &lt;code&gt;getSchema&lt;/code&gt; function at the bottom of the file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Internationalization (i18n)&lt;/h1&gt; &#xA;&lt;p&gt;Stubs for new i18n strings used throughout the app can be generated automatically. Use the string as you would normally (e.g. &lt;code&gt;t(&#39;id&#39;)&lt;/code&gt;) and then run &lt;code&gt;yarn i18n:extract&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If Typescript in VSCode is slow to see the change, you can restart the typescript server.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;h2&gt;E2E tests&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/wallet/main/e2e/README.md&#34;&gt;e2e/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;h3&gt;Common issues&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;zsh: command not found: [package name]&lt;/code&gt; This means whichever package you&#39;re trying to run (&lt;code&gt;[package name]&lt;/code&gt;) wasn’t correctly installed, or your Terminal can’t figure out how to run it. If you just installed it, try quitting terminal and re-opening it. Otherwise try reinstalling the package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;unable to open file (in target &#34;OneSignalNotificationServiceExtension&#34; in project &#34;Uniswap&#34;)&lt;/code&gt;. Resolve this issue by navigating to the &lt;code&gt;ios/&lt;/code&gt; directory and running &lt;code&gt;pod update&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Common fixes&lt;/h3&gt; &#xA;&lt;p&gt;If something isn’t working the way it should or you’re getting a weird error when trying to run the app, try the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Quit the terminal&lt;/li&gt; &#xA; &lt;li&gt;Quit Metro terminal&lt;/li&gt; &#xA; &lt;li&gt;Open Finder and navigate to the &lt;code&gt;mobile&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;Delete the &lt;code&gt;node_modules&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Navigate into the &lt;code&gt;ios&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Delete the &lt;code&gt;Pods&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Open XCode&lt;/li&gt; &#xA; &lt;li&gt;Go to Product → Clean Build Folder&lt;/li&gt; &#xA; &lt;li&gt;Open your terminal again&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;mobile&lt;/code&gt; directory in the terminal&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn &amp;amp;&amp;amp; yarn pod&lt;/code&gt; again&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;yarn ios&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Shell profile setup&lt;/h3&gt; &#xA;&lt;p&gt;Your shell profile file is most likely one of: &lt;code&gt;.bash_profile&lt;/code&gt;, &lt;code&gt;.zshrc&lt;/code&gt;, or &lt;code&gt;.zprofile&lt;/code&gt;, and will be located in &lt;code&gt;/Users/[username]/&lt;/code&gt;. You can reveal hidden files in Finder by pressing &lt;code&gt;⌘&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;.&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If issues with your terminal or shell seem to be the cause of some of your problems, here is an example of what that file may look like in order for your terminal to be able to run the app locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;eval &#34;$(/opt/homebrew/bin/brew shellenv)&#34;&#xA;&#xA;export NVM_DIR=&#34;$HOME/.nvm&#34;&#xA;[ -s &#34;/opt/homebrew/opt/nvm/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;/opt/homebrew/opt/nvm/nvm.sh&#34;  # This loads nvm&#xA;[ -s &#34;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&#34; ] &amp;amp;&amp;amp; \. &#34;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&#34;  # This loads nvm bash_completion&#xA;&#xA;# To enable flipper inclusion (optional)&#xA;export USE_FLIPPER=1&#xA;export PATH=&#34;/opt/homebrew/opt/ruby/bin:$PATH&#34;&#xA;&#xA;# ruby things&#xA;export LDFLAGS=&#34;-L/opt/homebrew/opt/ruby/lib&#34;&#xA;export CPPFLAGS=&#34;-I/opt/homebrew/opt/ruby/include&#34;&#xA;&#xA;export GEM_HOME=&#34;$(ruby -e &#39;puts Gem.user_dir&#39;)&#34;&#xA;export PATH=&#34;$PATH:$GEM_HOME/bin&#34;&#xA;&#xA;export GEM_HOME=$HOME/.gem&#xA;export PATH=$GEM_HOME/bin:$PATH&#xA;gem install cocoapods --user-install&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nhaouari/obsidian-textgenerator-plugin</title>
    <updated>2023-03-06T01:47:48Z</updated>
    <id>tag:github.com,2023-03-06:/nhaouari/obsidian-textgenerator-plugin</id>
    <link href="https://github.com/nhaouari/obsidian-textgenerator-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Text generator is a handy plugin for Obsidian that helps you generate text content using GPT-3 (OpenAI).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Obsidian&amp;nbsp;Text&amp;nbsp;Generator&amp;nbsp;Plugin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/haouarine&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text Generator&lt;/strong&gt; is an open-source AI Assistant Tool that brings the power of Generative Artificial Intelligence to the power of knowledge creation and organization in Obsidian.&lt;/p&gt; &#xA;&lt;p&gt;For example, use Text Generator to generate ideas, attractive titles, summaries, outlines, and whole paragraphs based on your knowledge database.&lt;/p&gt; &#xA;&lt;p&gt;The possibilities are endless!&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for a place to discuss the use cases of this plugin and share your experiences, head over to the &lt;a href=&#34;https://github.com/nhaouari/obsidian-textgenerator-plugin/discussions/categories/use-cases&#34;&gt;Discussion&lt;/a&gt;. There, you&#39;ll find a community of like-minded users who are eager to help you make the most of this powerful tool.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;There are many benefits to using a Text Generator Plugin, including the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Free and Open Source&lt;/strong&gt;: The Text Generator Plugin is free and open source, so you can use it without worrying about licensing fees.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Beside Obsidian&lt;/strong&gt;: Obsidian is very powerful and extensible Personal Knowledge Management software so you can use Text Generator Plugin alongside Obsidian to create a more powerful Personal Knowledge Management system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Prompts&lt;/strong&gt;: The context of the prompt is straightforward using all the available options in the Considered Context which gives you a higer filexibilty.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Template Engine&lt;/strong&gt;: You can create templates to make repetitive tasks more manageable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community Templates&lt;/strong&gt;: Through this option you can discover new use cases of Generative Artificial Intelligence using the shared templates and you can share your use cases easier.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highly Flexible Configuration&lt;/strong&gt;: Using Frontmatter Configuration, it is possible to use different services such as OpenAI, HugginFace.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Demonstration&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OergqWCdFKc&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/OergqWCdFKc/0.jpg&#34; alt=&#34;IMAGE ALT TEXT HERE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://bit.ly/3ORwT00&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>