<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-05T01:38:11Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SoftwareBrothers/adminjs</title>
    <updated>2022-11-05T01:38:11Z</updated>
    <id>tag:github.com,2022-11-05:/SoftwareBrothers/adminjs</id>
    <link href="https://github.com/SoftwareBrothers/adminjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AdminJS is an admin panel for apps written in node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AdminJS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://softwarebrothers.github.io/adminjs-dev/&#34;&gt;AdminJS&lt;/a&gt; is an automatic admin interface that can be plugged into your application. You, as a developer, provide database models (like posts, comments, stores, products or whatever else your application uses), and AdminJS generates UI which allows you (or other trusted users) to manage content.&lt;/p&gt; &#xA;&lt;p&gt;Inspired by: &lt;a href=&#34;https://docs.djangoproject.com&#34;&gt;django admin&lt;/a&gt;, &lt;a href=&#34;https://github.com/sferik/rails_admin&#34;&gt;rails admin&lt;/a&gt; and &lt;a href=&#34;https://activeadmin.info/&#34;&gt;active admin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How it looks&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SoftwareBrothers/adminjs/master/docs/anim.gif&#34;&gt; &#xA;&lt;h2&gt;Example application&lt;/h2&gt; &#xA;&lt;p&gt;Check out the example application with mongodb and postgres models here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;login: &lt;code&gt;admin@example.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;password: &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://adminjs-demo.herokuapp.com&#34;&gt;https://adminjs-demo.herokuapp.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://adminjs.co&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try the &lt;a href=&#34;https://admin-bro-example-app-staging.herokuapp.com/admin/login&#34;&gt;live demo&lt;/a&gt; as mentioned above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OpenSource SoftwareBrothers community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/adminbro/shared_invite/zt-1c7z4k0v9-kBNAivB8lX3OWLWu6TLE7A&#34;&gt;Join the community&lt;/a&gt; to get help and be inspired.&lt;/li&gt; &#xA; &lt;li&gt;subscribe to our &lt;a href=&#34;http://opensource.softwarebrothers.co&#34;&gt;newsletter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What kind of problems it solves&lt;/h1&gt; &#xA;&lt;p&gt;So you have a working service built in Node.js. It uses (for example) &lt;a href=&#34;https://hapijs.com/&#34;&gt;Hapi.js&lt;/a&gt; for rendering a couple of REST routes and &lt;a href=&#34;https://mongoosejs.com/&#34;&gt;mongoose&lt;/a&gt; as the &lt;em&gt;connector&lt;/em&gt; to the database.&lt;/p&gt; &#xA;&lt;p&gt;Everything works fine, but now you would like to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;see all the data in the app,&lt;/li&gt; &#xA; &lt;li&gt;perform custom &lt;em&gt;business&lt;/em&gt; actions on objects in the database,&lt;/li&gt; &#xA; &lt;li&gt;bootstrap the tables with the &lt;em&gt;initial&lt;/em&gt; data,&lt;/li&gt; &#xA; &lt;li&gt;build custom report pages,&lt;/li&gt; &#xA; &lt;li&gt;allow other team members (not necessary programmers) to see what is going on in the application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And all these cases can be solved by AdminJS. By adding couple of lines of code you have a running admin interface.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CRUD any data in any resource&lt;/li&gt; &#xA; &lt;li&gt;Custom actions&lt;/li&gt; &#xA; &lt;li&gt;Form validation based on schema in your resources&lt;/li&gt; &#xA; &lt;li&gt;Full featured dashboard with widgets&lt;/li&gt; &#xA; &lt;li&gt;Custom resource decorators&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you would like work on an adminjs and develop new features - take a look at our dev repository: &lt;a href=&#34;https://github.com/SoftwareBrothers/adminjs-dev&#34;&gt;https://github.com/SoftwareBrothers/adminjs-dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find there instructions on how to run adminjs for development.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;AdminJS is Copyright © 2021 SoftwareBrothers.co. It is free software, and may be redistributed under the terms specified in the &lt;a href=&#34;https://raw.githubusercontent.com/SoftwareBrothers/adminjs/master/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;About SoftwareBrothers.co&lt;/h2&gt; &#xA;&lt;img src=&#34;https://softwarebrothers.co/assets/images/software-brothers-logo-full.svg?sanitize=true&#34; width=&#34;240&#34;&gt; &#xA;&lt;p&gt;We’re an open, friendly team that helps clients from all over the world to transform their businesses and create astonishing products.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are available for &lt;a href=&#34;https://softwarebrothers.co/contact&#34;&gt;hire&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to work for us - check out the &lt;a href=&#34;https://softwarebrothers.co/career&#34;&gt;career page&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>grafana/faro-web-sdk</title>
    <updated>2022-11-05T01:38:11Z</updated>
    <id>tag:github.com,2022-11-05:/grafana/faro-web-sdk</id>
    <link href="https://github.com/grafana/faro-web-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monorepo for Grafana JavaScript Agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grafana Faro Web SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://drone.grafana.net/grafana/faro-web-sdk&#34;&gt;&lt;img src=&#34;https://drone.grafana.net/api/badges/grafana/faro-web-sdk/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/grafana/faro-web-sdk/main/docs/faro_logo.png&#34; alt=&#34;Grafana Faro logo&#34; width=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Faro is a SDK that can instrument frontend JavaScript applications to collect telemetry and forward it to the &lt;a href=&#34;https://grafana.com/docs/agent/latest/&#34;&gt;Grafana Agent&lt;/a&gt; (with app agent receiver integration enabled). Grafana Agent can then send this data to &lt;a href=&#34;https://grafana.com/logs/&#34;&gt;Loki&lt;/a&gt;, or &lt;a href=&#34;https://grafana.com/traces/&#34;&gt;Tempo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The repository consists of multiple packages that can be combined depending on your requirements, as well as a &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/demo&#34;&gt;demo&lt;/a&gt;, which can be run by following the &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/demo/README.md&#34;&gt;README.md file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/raw/main/docs/sources/tutorials/quick-start-browser.md&#34;&gt;quick start for web applications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;h3&gt;Core&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/core&#34;&gt;@grafana/faro-core&lt;/a&gt; is the main package that provides the core functionality of the SDK. The &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/core/README.md&#34;&gt;README.md&lt;/a&gt; file provides an overview of the architecture and the API of library.&lt;/p&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/web&#34;&gt;@grafana/faro-web-sdk&lt;/a&gt; provides instrumentations, metas and transports for use in web applications. See The &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/web/README.md&#34;&gt;README.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Tracing-web&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/web-tracing&#34;&gt;@grafana/faro-web-tracing&lt;/a&gt; provides implementation for tracing web applications. See The &lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/web-tracing/README.md&#34;&gt;README.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/angular&#34;&gt;@grafana/faro-angular&lt;/a&gt; is a package that enables easier integration in projects built with Angular. FOR THE TIME BEING THIS PACKAGE IS A PLACEHOLDER.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grafana/faro-web-sdk/tree/main/packages/transport-fetch&#34;&gt;@grafana/faro-react&lt;/a&gt; is a package that enables easier integration in projects built with React.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>apiannie/apiannie</title>
    <updated>2022-11-05T01:38:11Z</updated>
    <id>tag:github.com,2022-11-05:/apiannie/apiannie</id>
    <link href="https://github.com/apiannie/apiannie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://apiannie.com&#34;&gt; &lt;img alt=&#34;ApiAnnie&#34; src=&#34;https://user-images.githubusercontent.com/4088232/199437591-23d65512-2d66-4ba6-ae77-5f1748e5bdca.png&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;small&gt;A lightweight web tool for API documentation and development&lt;/small&gt; &lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ Api Annie is currently still in pre-release mode.ℹ️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Api Annie helps your team to co-ordinate easier when developing a product which needs API comunication, by going through the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Define]&lt;/strong&gt; Define your API structure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Mock]&lt;/strong&gt; Frontend developer makes their prototype by using the mock server automatically generated by Api Annie.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Execute]&lt;/strong&gt; Backend developer builds the backend services and test it by sending requests through Api Annie&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Integrate]&lt;/strong&gt; When both frontend and backend development are finished, let frontend switch communication from Api Annie to your backend server URL.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cloud service&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using our &lt;a href=&#34;https://apiannie.com&#34;&gt;cloud service&lt;/a&gt;, where you can always get access to the latest features.&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer deploying Api Annie in your own machine, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:apiannie/apiannie.git&#xA;&#xA;cd apiannie&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create a file named &lt;code&gt;.env&lt;/code&gt;, which should contain the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DATABASE_URL=&#34;mongodb+srv://USERNAME:PASSWORD@HOST/DATABASE&#34;&#xA;SESSION_SECRET=&#34;replace-it-by-random-string&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more info about connection to MongoDB, please refer to &lt;a href=&#34;https://www.prisma.io/docs/concepts/database-connectors/mongodb&#34;&gt;this doc from Prisma&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then install dependency packages, and initalize database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;npx prisma db push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are using yarn&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install&#xA;yarn prisma db push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Up to now, you have your environment successfully setup, to run Api Annie in dev mode:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npm run dev&lt;/code&gt; or &lt;code&gt;yarn dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run in release mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are using yarn&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn build&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remix-run/remix&#34;&gt;Remix&lt;/a&gt; as the primary full stack web framework&lt;/li&gt; &#xA; &lt;li&gt;Database ORM with &lt;a href=&#34;https://github.com/prisma/prisma&#34;&gt;Prisma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Static Types with &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;UI components built with &lt;a href=&#34;https://github.com/chakra-ui/chakra-ui&#34;&gt;Chakra-UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Form validation with &lt;a href=&#34;https://github.com/airjp73/remix-validated-form&#34;&gt;remix-validated-form&lt;/a&gt; and &lt;a href=&#34;https://github.com/colinhacks/zod&#34;&gt;Zod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chancejs/chancejs&#34;&gt;Chance.js&lt;/a&gt; for random data generate in mock server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&#34;https://github.com/apiannie/apiannie/raw/readme-update/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>