<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-07T01:46:59Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Fallenbagel/jellyseerr</title>
    <updated>2023-08-07T01:46:59Z</updated>
    <id>tag:github.com,2023-08-07:/Fallenbagel/jellyseerr</id>
    <link href="https://github.com/Fallenbagel/jellyseerr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fork of overseerr for jellyfin support&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Fallenbagel/jellyseerr/develop/public/logo_full.svg?sanitize=true&#34; alt=&#34;Jellyseerr&#34; style=&#34;margin: 20px 0;&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/ckbvBtDJgC&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Chat-lightgrey&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/fallenbagel/jellyseerr&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/fallenbagel/jellyseerr&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/raw/develop/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/fallenbagel/jellyseerr&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Jellyseerr&lt;/strong&gt; is a free and open source software application for managing requests for your media library. It is a a fork of Overseerr built to bring support for Jellyfin &amp;amp; Emby media servers!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The original Overseerr team have been busy and Jellyfin/Emby support aren&#39;t on their roadmap, so we started this project as we wanted to bring the Overseerr experience to the Jellyfin/Emby Community!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Full Jellyfin/Emby/Plex integration. Authenticate and manage user access with Jellyfin/Emby/Plex!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports Movies, Shows, Mixed Libraries!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to change email addresses for smtp purposes&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to import all jellyfin/emby users&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy integration with your existing services. Currently, Jellyseerr supports Sonarr and Radarr. More to come!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Jellyfin/Emby/Plex library scan, to keep track of the titles which are already available.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Customizable request system, which allows users to request individual seasons or movies in a friendly, easy-to-use interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Incredibly simple request management UI. Don&#39;t dig through the app to simply approve recent requests!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Granular permission system.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for various notification agents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mobile-friendly design, for when you need to approve requests on the go!&lt;/p&gt; &lt;p&gt;(Upcoming Features include: Multiple Server Instances, Music Support, and much more!)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With more features on the way! Check out our &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/issues&#34;&gt;issue tracker&lt;/a&gt; to see the features which have already been requested.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h4&gt;Pre-requisite (Important)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;em&gt;On Jellyfin/Emby, ensure the &lt;code&gt;settings &amp;gt; Home &amp;gt; Automatically group content from the following folders into views such as &#39;Movies&#39;, &#39;Music&#39; and &#39;TV&#39;&lt;/code&gt; is turned off&lt;/em&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Launching Jellyseerr using Docker&lt;/h3&gt; &#xA;&lt;p&gt;Check out our dockerhub for instructions on how to install and run Jellyseerr: &lt;a href=&#34;https://hub.docker.com/r/fallenbagel/jellyseerr&#34;&gt;https://hub.docker.com/r/fallenbagel/jellyseerr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Launching Jellyseerr manually:&lt;/h3&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodejs (atleast LTS version)&lt;/li&gt; &#xA; &lt;li&gt;Yarn&lt;/li&gt; &#xA; &lt;li&gt;Download the source code from the github (Either develop branch or main for stable)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g win-node-env&#xA;yarn install&#xA;yarn run build&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nodejs (atleast LTS version)&lt;/li&gt; &#xA; &lt;li&gt;Yarn&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Fallenbagel/jellyseerr.git &amp;amp;&amp;amp; cd jellyseerr&#xA;git checkout main #if you want to run stable instead of develop&#xA;yarn install&#xA;yarn run build&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Systemd-service:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;assuming jellyseerr was cloned to &lt;code&gt;/opt/&lt;/code&gt; and the environmentfile is located at &lt;code&gt;/etc/jellyseerr&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=Jellyseerr Service&#xA;Wants=network-online.target&#xA;After=network-online.target&#xA;&#xA;[Service]&#xA;EnvironmentFile=/etc/jellyseerr/jellyseerr.conf&#xA;Environment=NODE_ENV=production&#xA;Type=exec&#xA;Restart=on-failure&#xA;WorkingDirectory=/opt/jellyseerr&#xA;ExecStart=/root/.nvm/versions/node/v18.7.0/bin/node dist/index.js&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Environmentfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Jellyseerr&#39;s default port is 5055, if you want to use both, change this.&#xA;# specify on which port to listen&#xA;PORT=5055&#xA;&#xA;# specify on which interface to listen, by default jellyseerr listens on all interfaces&#xA;#HOST=127.0.0.1&#xA;&#xA;# Uncomment if your media server is emby instead of jellyfin.&#xA;# JELLYFIN_TYPE=emby&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packages:&lt;/h3&gt; &#xA;&lt;p&gt;Archlinux: &lt;a href=&#34;https://aur.archlinux.org/packages/jellyseerr&#34;&gt;AUR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Fallenbagel/jellyseerr/develop/public/preview.jpg&#34;&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can get support on &lt;a href=&#34;https://discord.gg/ckbvBtDJgC&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can ask questions in the Help category of our &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bug reports and feature requests can be submitted via &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can access the API documentation from your local Jellyseerr install at &lt;a href=&#34;http://localhost:5055/api-docs&#34;&gt;http://localhost:5055/api-docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;You can ask questions, share ideas, and more in &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to chat with other members of our growing community, &lt;a href=&#34;https://discord.gg/ckbvBtDJgC&#34;&gt;join the Jellyseerr Discord server&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/raw/develop/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; applies to all Jellyseerr community channels.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can help improve Jellyseerr too! Check out our &lt;a href=&#34;https://github.com/fallenbagel/jellyseerr/raw/develop/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to all wonderful people who contributed directly to Jellyseerr and Overseerr.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jmaczan/gdansk-ai</title>
    <updated>2023-08-07T01:46:59Z</updated>
    <id>tag:github.com,2023-08-07:/jmaczan/gdansk-ai</id>
    <link href="https://github.com/jmaczan/gdansk-ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦭 Full stack AI voice chatbot (speech-to-text, LLM, text-to-speech) with integrations to Auth0, OpenAI, Google Cloud and Stripe - Web App, Web API and AI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;🦭 Gdańsk AI 🦭&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Gdańsk AI is a full stack AI voice chatbot (speech-to-text, LLM, text-to-speech) with integrations to Auth0, OpenAI, Google Cloud API and Stripe - Web App, API and AI&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;600&#34; src=&#34;https://raw.githubusercontent.com/jmaczan/gdansk-ai/main/gdansk-ai.png&#34; alt=&#34;Gdańsk AI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Web API&lt;/h2&gt; &#xA;&lt;p&gt;It uses &lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt; to provide payments infrastructure, so users can buy &lt;code&gt;bibs&lt;/code&gt; - the API tokens. &lt;a href=&#34;https://auth0.com/&#34;&gt;Auth0&lt;/a&gt; is used to provide authentication and authorization. You can use them for free - Auth0 has a free tier up to 7000 users per month. Stripe only charges fees from purchases, so you have no ongoing costs from any of them.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use these services, you have to set up your Stripe and Auth0 accounts and put API keys into &lt;code&gt;.env&lt;/code&gt; in &lt;code&gt;web-api/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;.env_example&lt;/code&gt; shows which values you have to set&lt;/p&gt; &#xA;&lt;p&gt;Node.js, TypeScript and Express are used here&lt;/p&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;p&gt;It works in Google Chrome currently. You can press Gdańsk AI logo to record audio, then press it once again to send it to Web API. After a successful response, a received audio is played to you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;.env_example&lt;/code&gt; shows which values you have to set&lt;/p&gt; &#xA;&lt;p&gt;Next.js used here with Vercel&#39;s &lt;a href=&#34;https://vercel.com/templates/next.js/nextjs-boilerplate&#34;&gt;template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AI API&lt;/h2&gt; &#xA;&lt;p&gt;OpenAI and Google Cloud API are used here to provide speech-to-text (Whisper-1), LLM (gpt-3.5-turbo) and text-to-speech (Google Cloud TextToSpeechClient) services.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;.env_example&lt;/code&gt; shows which values you have to set&lt;/p&gt; &#xA;&lt;p&gt;Python and FastAPI here&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GNU GPL v2&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Made in &lt;a href=&#34;https://en.wikipedia.org/wiki/Gda%C5%84sk&#34;&gt;Gdańsk&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Poland&#34;&gt;Poland&lt;/a&gt; in 2023 by &lt;a href=&#34;https://maczan.pl&#34;&gt;Jędrzej Paweł Maczan&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adrianhajdin/threads</title>
    <updated>2023-08-07T01:46:59Z</updated>
    <id>tag:github.com,2023-08-07:/adrianhajdin/threads</id>
    <link href="https://github.com/adrianhajdin/threads" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Develop Threads, Next.js 13 app that skyrocketed to 100 million sign-ups in less than 5 days, and dethroned giants like Twitter, ChatGPT, and TikTok to become the fastest-growing app ever!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Build and Deploy a Full Stack MERN Next.js 13 Threads App | React, Next JS, TypeScript, MongoDB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/2dSC0TQ/Thumbnail-1.png&#34; alt=&#34;Threads&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next.js 13 eBook &amp;amp; Course&lt;/h2&gt; &#xA;&lt;p&gt;📚 &lt;a href=&#34;https://resource.jsmastery.pro/nextjs-guide&#34;&gt;https://resource.jsmastery.pro/nextjs-guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;Develop Threads, Next.js 13 app that skyrocketed to 100 million sign-ups in less than 5 days, and dethroned giants like Twitter, ChatGPT, and TikTok to become the fastest-growing app ever!&lt;/p&gt; &#xA;&lt;p&gt;In this video, you&#39;ll:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Master Next.js 13.4 with Server Side Rendering&lt;/li&gt; &#xA; &lt;li&gt;Learn MongoDB handling of complex schemas, multiple data population&lt;/li&gt; &#xA; &lt;li&gt;Create beautiful layouts with TailwindCSS&lt;/li&gt; &#xA; &lt;li&gt;Use Clerk for authentication&lt;/li&gt; &#xA; &lt;li&gt;Handle file uploads with UploadThing&lt;/li&gt; &#xA; &lt;li&gt;Explore Shadcn components&lt;/li&gt; &#xA; &lt;li&gt;Listen to real-time events with webhooks&lt;/li&gt; &#xA; &lt;li&gt;Understand middleware, API actions, and authorization&lt;/li&gt; &#xA; &lt;li&gt;Explore &amp;amp; integrate new Next.js layout route groups&lt;/li&gt; &#xA; &lt;li&gt;Validate data with Zod&lt;/li&gt; &#xA; &lt;li&gt;Manage forms with react hook form&lt;/li&gt; &#xA; &lt;li&gt;Create reusable components&lt;/li&gt; &#xA; &lt;li&gt;Build a solid application architecture&lt;/li&gt; &#xA; &lt;li&gt;Deploy the application and more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to land your dream programming job in 3 - 6 months?&lt;/h2&gt; &#xA;&lt;p&gt;⭐ JSM Masterclass Experience - &lt;a href=&#34;https://jsmastery.pro/masterclass&#34;&gt;https://jsmastery.pro/masterclass&lt;/a&gt; Become a Software Engineer. Guaranteed.&lt;/p&gt;</summary>
  </entry>
</feed>