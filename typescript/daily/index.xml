<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-30T01:36:31Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TanStack/virtual</title>
    <updated>2024-11-30T01:36:31Z</updated>
    <id>tag:github.com,2024-11-30:/TanStack/virtual</id>
    <link href="https://github.com/TanStack/virtual" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Headless UI for Virtualizing Large Element Lists in JS/TS, React, Solid, Vue and Svelte&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/tanstack/virtual/raw/main/media/header.png&#34; alt=&#34;React Virtual Header&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Headless UI for virtualizing scrollable elements in TS/JS and React&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/tweet?button_hashtag=TanStack&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;#TanStack&#34; src=&#34;https://img.shields.io/twitter/url?color=%2308a0e9&amp;amp;label=%23TanStack&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/TanStack/virtual/actions/workflows/ci.yml&#34;&gt; &lt;img src=&#34;https://github.com/tanstack/virtual/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://npmjs.com/package/@tanstack/virtual-core&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/npm/dm/@tanstack/virtual-core.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://bundlephobia.com/result?p=@tanstack/virtual@latest&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/bundlephobia/minzip/@tanstack/virtual@latest&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/TanStack/virtual/main/#badge&#34;&gt; &lt;img alt=&#34;semantic-release&#34; src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tanstack/virtual/discussions&#34;&gt; &lt;img alt=&#34;Join the discussion on Github&#34; src=&#34;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tanstack/virtual&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/stars/tanstack/virtual.svg?style=social&amp;amp;label=Star&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://twitter.com/tannerlinsley&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;amp;label=Follow&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Enjoy this library? Try the entire &lt;a href=&#34;https://tanstack.com&#34;&gt;TanStack&lt;/a&gt;! &lt;a href=&#34;https://github.com/TanStack/react-query&#34;&gt;React Query&lt;/a&gt;, &lt;a href=&#34;https://github.com/TanStack/table&#34;&gt;TanStack Table&lt;/a&gt;, &lt;a href=&#34;https://github.com/TanStack/react-charts&#34;&gt;React Charts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visit &lt;a href=&#34;https://tanstack.com/virtual&#34;&gt;tanstack.com/virtual&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt; &#xA;&lt;h2&gt;Quick Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Row, Column, and Grid virtualization&lt;/li&gt; &#xA; &lt;li&gt;One single &lt;strong&gt;headless&lt;/strong&gt; function&lt;/li&gt; &#xA; &lt;li&gt;Fixed, variable and dynamic measurement modes&lt;/li&gt; &#xA; &lt;li&gt;Imperative scrollTo control for offset, indices and alignment&lt;/li&gt; &#xA; &lt;li&gt;Custom scrolling function support (eg. smooth scroll)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Use the Force, Luke!  --&gt;</summary>
  </entry>
  <entry>
    <title>Comfy-Org/desktop</title>
    <updated>2024-11-30T01:36:31Z</updated>
    <id>tag:github.com,2024-11-30:/Comfy-Org/desktop</id>
    <link href="https://github.com/Comfy-Org/desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The desktop app for ComfyUI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ComfyUI Desktop (beta)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/github/Comfy-Org/electron&#34;&gt;&lt;img src=&#34;https://codecov.io/github/Comfy-Org/electron/graph/badge.svg?token=S64WJWD2ZX&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/beta-blue.svg?sanitize=true&#34; alt=&#34;Beta&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Currently Supported Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (NVIDIA)&lt;/li&gt; &#xA; &lt;li&gt;macOS (Apple silicon)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;This desktop app is a packaged way to use &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUI&lt;/a&gt; and comes bundled with a few things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stable version of ComfyUI from &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI/releases&#34;&gt;releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Comfy-Org/ComfyUI_frontend&#34;&gt;ComfyUI_frontend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ltdrdata/ComfyUI-Manager&#34;&gt;ComfyUI-Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/astral-sh/uv&#34;&gt;uv&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On startup, it will install all the necessary python dependencies with uv and start the ComfyUI server. The app will automatically update with stable releases of ComfyUI, ComfyUI-Manager, and the uv executable as well as some desktop specific features.&lt;/p&gt; &#xA;&lt;p&gt;Users please read the &lt;a href=&#34;https://comfyorg.notion.site/&#34;&gt;guide&lt;/a&gt;. Developers, read on.&lt;/p&gt; &#xA;&lt;h2&gt;Installed Files&lt;/h2&gt; &#xA;&lt;h3&gt;Electron&lt;/h3&gt; &#xA;&lt;p&gt;The desktop application comes bundled with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ComfyUI source code&lt;/li&gt; &#xA; &lt;li&gt;ComfyUI-Manager&lt;/li&gt; &#xA; &lt;li&gt;Electron, Chromium binaries, and node modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We use the &lt;a href=&#34;https://www.electron.build/nsis.html&#34;&gt;NSIS installer&lt;/a&gt; for Windows and it will install files in these locations:&lt;/p&gt; &#xA;&lt;p&gt;Bundled Resources: &lt;code&gt;%APPDATA%\Local\Programs\comfyui-electron&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/0e1d4a9a-7b7e-4536-ad4b-9e6123873706&#34; alt=&#34;screenshot of resources directory&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;User files are stored here: &lt;code&gt;%APPDATA%\ComfyUI&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automatic Updates: &lt;code&gt;%APPDATA%\Local\comfyui-electron-updater&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The macOS application is distributed as a &lt;a href=&#34;https://www.electron.build/dmg&#34;&gt;DMG&lt;/a&gt; and will install files in:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;~/Library/Application Support/ComfyUI&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The application will be dragged into &lt;code&gt;/Applications&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;~/.config/ComfyUI&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ComfyUI&lt;/h3&gt; &#xA;&lt;p&gt;ComfyUI will also write files to disk as you use it. You will also be asked to select a location to store ComfyUI files like models, inputs, outputs, custom_nodes and saved workflows.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;code&gt;extra_model_config.yaml&lt;/code&gt; is created to tell ComfyUI where to look for these files. You can edit this file to do things like add additional model files to the search path.&lt;/p&gt; &#xA;&lt;p&gt;On Windows: &lt;code&gt;%APPDATA%\ComfyUI\extra_model_config.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;On macOS: &lt;code&gt;~/Library/Application Support/ComfyUI/extra_model_config.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;On Linux: &lt;code&gt;~/.config/ComfyUI/extra_model_config.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Logs&lt;/h3&gt; &#xA;&lt;p&gt;We use electron-log to log everything. Electron main process logs are in &lt;code&gt;main.log&lt;/code&gt;, and ComfyUI server logs are in &lt;code&gt;comfyui_&amp;lt;date&amp;gt;.log&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;on Linux: ~/.config/{app name}/logs&#xA;on macOS: ~/Library/Logs/{app name}&#xA;on Windows: %AppData%\{app name}\logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Setup Python&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have python 3.12+ installed. It is recommended to setup a virtual environment.&lt;/p&gt; &#xA;&lt;p&gt;Linux/MacOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m venv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;py -3.12 -m venv venv&#xA;.\venv\Scripts\Activate.ps1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio&lt;/h3&gt; &#xA;&lt;p&gt;Visual studio 2019 or later with the Desktop C++ workload is required for &lt;code&gt;node-gyp&lt;/code&gt;. See the &lt;code&gt;node-gyp&lt;/code&gt; &lt;a href=&#34;https://github.com/nodejs/node-gyp#on-windows&#34;&gt;windows installation notes&lt;/a&gt;. Also requires the &lt;code&gt;spectre-mitigated&lt;/code&gt; libraries, found in the individual components section of the VS installer.&lt;/p&gt; &#xA;&lt;p&gt;Confirmed working:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio Community 2022 - 17.12.1&lt;/li&gt; &#xA; &lt;li&gt;Desktop development with C++ workload&lt;/li&gt; &#xA; &lt;li&gt;MSVC v143 x64 spectre-mitigated libraries (Latest / v14.42-17.12) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the Visual Studio Installer&lt;/li&gt; &#xA;   &lt;li&gt;Click &#34;Modify&#34; on your Visual Studio 2022 Community installation&lt;/li&gt; &#xA;   &lt;li&gt;Go to the &#34;Individual Components&#34; tab&lt;/li&gt; &#xA;   &lt;li&gt;Search for &#34;Spectre&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Check the boxes for the Spectre-mitigated libraries that match your project&#39;s architecture (x86 and/or x64)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/0829db3d-84b7-48e8-9d13-c72c35169a05&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Look for &#34;MSVC v143 - VS 2022 C++ x64/x86 Spectre-mitigated libs&#34; If you&#39;re using other toolsets, you may need their corresponding Spectre-mitigated libraries as well&lt;/p&gt; &#xA;&lt;h2&gt;NPM Dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Node&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; to manage node versions. This project uses node v20.x.&lt;/p&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;Microsoft recommends &lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm-windows&lt;/a&gt; on their &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-windows#install-nvm-windows-nodejs-and-npm&#34;&gt;Node.js on Windows page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;nvm install 20&#xA;nvm use 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Yarn&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;code&gt;yarn&lt;/code&gt; as its package manager. If you do not already have a &lt;code&gt;yarn&lt;/code&gt; binary available on your PATH, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# corepack is a set of utilities included with all recent distributions of node&#xA;corepack enable&#xA;yarn set version v4.5.0 # Look at the packageManager key in package.json for the exact version.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install a usable &lt;code&gt;yarn&lt;/code&gt; binary. Then, in the root directory of this repo (ie adjacent to the top-level package.json file), run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ComfyUI Assets&lt;/h2&gt; &#xA;&lt;p&gt;Before you can start the electron application, you need to download the ComfyUI source code and other things that are usually bundled with the application. We use &lt;a href=&#34;https://github.com/Comfy-Org/comfy-cli&#34;&gt;comfy-cli&lt;/a&gt; to install everything.&lt;/p&gt; &#xA;&lt;h3&gt;Install comfy-cli&lt;/h3&gt; &#xA;&lt;p&gt;With the python environment activated, install comfy-cli:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -U comfy-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ComfyUI and other dependencies&lt;/h3&gt; &#xA;&lt;p&gt;First, initialize the application resources by running &lt;code&gt;make:assets:&amp;lt;gpu&amp;gt;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# populate the assets/ dir (Installs a fresh ComfyUI instance under assets/)&#xA;yarn make:assets:[amd|cpu|nvidia|macos]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will install ComfyUI under &lt;code&gt;assets&lt;/code&gt;, as well ComfyUI-Manager, and the frontend &lt;a href=&#34;https://github.com/Comfy-Org/DesktopSettingsExtension&#34;&gt;extension&lt;/a&gt; responsible for electron settings menu. The exact versions of each package is defined in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Second, you need to install &lt;code&gt;uv&lt;/code&gt;. This will be bundled with the distributable, but we also need it locally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn download:uv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run &lt;code&gt;start&lt;/code&gt; to build/launch the code and a live buildserver that will automatically rebuild the code on any changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;deactivate # Deactivate your existing python env to avoid influencing the&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build the package and/or distributables using the &lt;code&gt;make&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# build the platform-dependent package and any distributables&#xA;yarn make&#xA;# build cross-platform, e.g. windows from linux&#xA;yarn make --windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If you get an error similar to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The module &#39;/electron/node_modules/node-pty/build/Release/pty.node&#39; was compiled against a different Node.js version using NODE_MODULE_VERSION 115. This version of Node.js requires NODE_MODULE_VERSION 125. Please try re-compiling or re-installing the module (for instance, using `npm rebuild` or `npm install`).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to rebuild the node-pty using &lt;a href=&#34;https://www.electronjs.org/docs/latest/tutorial/using-native-node-modules&#34;&gt;electron-rebuild&lt;/a&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx electron-rebuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if that fails&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install -D @electron/rebuild&#xA;rm -rf node_modules&#xA;rm yarn.lock&#xA;yarn install&#xA;electron-rebuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Missing libraries&lt;/h4&gt; &#xA;&lt;p&gt;You may get errors reporting that the build is unable to find e.g. &lt;code&gt;libnss3.so&lt;/code&gt; if &lt;code&gt;electron&lt;/code&gt; prerequisites are not included in your distro. Find the correct package for your distro and install.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install libnss3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debugger&lt;/h3&gt; &#xA;&lt;p&gt;There are helpful debug launch scripts for VSCode / Cursor under &lt;code&gt;.vscode/launch.json&lt;/code&gt;. It will start the dev server as defined in &lt;code&gt;.vscode/tasks.json&lt;/code&gt;. Then attach the debugger.&lt;/p&gt; &#xA;&lt;p&gt;This can be used simply by pressing &lt;code&gt;F5&lt;/code&gt; in VSCode or VSCode derivative.&lt;/p&gt; &#xA;&lt;p&gt;The launch environment can be customised, e.g. add a &lt;code&gt;&#34;linux&#34;&lt;/code&gt; section to source your &lt;code&gt;~/.profile&lt;/code&gt; (and other interactive config) when debugging in linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;version&#34;: &#34;2.0.0&#34;,&#xA;  &#34;tasks&#34;: [&#xA;    {&#xA;      &#34;linux&#34;: { &#34;options&#34;: { &#34;shell&#34;: { &#34;args&#34;: [&#34;-ci&#34;] } } }&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Release&lt;/h1&gt; &#xA;&lt;p&gt;We use Todesktop to build and codesign our distributables. To make a new release:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make a PR with the semantic version. eg. &lt;code&gt;v1.0.1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the label &lt;code&gt;Release&lt;/code&gt; to the PR.&lt;/li&gt; &#xA; &lt;li&gt;Merge the PR&lt;/li&gt; &#xA; &lt;li&gt;A build will automatically start and you can view it at &lt;a href=&#34;https://app.todesktop.com&#34;&gt;https://app.todesktop.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Publish Locally&lt;/h3&gt; &#xA;&lt;p&gt;Follow the above steps for local development setup first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Authentication will be required.&#xA;yarn publish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Utility scripts&lt;/h2&gt; &#xA;&lt;p&gt;A number of utility scripts are defined under the &#34;scripts&#34; field of package.json. For example, to clean up the build artifacts you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn clean&#xA;&#xA;# Remove files created by yarn make:assets:&amp;lt;gpu&amp;gt;&#xA;yarn:clean:assets&#xA;&#xA;# clean:slate also removes node_modules&#xA;yarn clean:slate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Crash Reports&lt;/h1&gt; &#xA;&lt;p&gt;At the onboarding step, you can opt-in to send us crash reports, which &lt;strong&gt;only&lt;/strong&gt; include stack trace for unhandled exceptions and native crashes. These are really helpful to help us debug issues in lieu of an actual Github bug report. However, you can opt-out and nothing will ever be sent. We use Sentry to send crash reports. Code &lt;a href=&#34;https://github.com/Comfy-Org/desktop/raw/main/src/services/sentry.ts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In either case, no personal data, workflows or logs will be sent.&lt;/p&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;Windows (NVIDIA) NSIS x64: &lt;a href=&#34;https://download.comfy.org/windows/nsis/x64&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;macOS ARM: &lt;a href=&#34;https://download.comfy.org/mac/dmg/arm64&#34;&gt;Download&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Clooos/Bubble-Card</title>
    <updated>2024-11-30T01:36:31Z</updated>
    <id>tag:github.com,2024-11-30:/Clooos/Bubble-Card</id>
    <link href="https://github.com/Clooos/Bubble-Card" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bubble Card is a minimalist card collection for Home Assistant with a nice pop-up touch.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bubble Card&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/c763bdad-ce71-46b0-aa9e-4ff0017072fe&#34; alt=&#34;readme-images-bubble-card&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bubble Card is a minimalist and customizable card collection for Home Assistant with a nice pop-up touch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/clooos/Bubble-Card&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/clooos/Bubble-Card&#34; alt=&#34;Last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@cloooos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-My%20channel-red?logo=youtube&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/BubbleCard/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-r/BubbleCard-orange?logo=reddit&#34; alt=&#34;Reddit Page&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/user/Clooooos/submitted/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-My%20stuff-orange?logo=reddit&#34; alt=&#34;Reddit Profile&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.home-assistant.io/t/bubble-card-a-minimalist-card-collection-for-home-assistant-with-a-nice-pop-up-touch/609678&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Home%20Assistant-Community%20Forum-blue?logo=home-assistant&#34; alt=&#34;Home Assistant Community Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/clooos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Buy%20me%20a%20beer-yellow?logo=buy-me-a-coffee&#34; alt=&#34;Buy me a beer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/donate/?business=MRVBV9PLT9ZPL&amp;amp;no_recurring=0&amp;amp;item_name=Hi%2C+I%27m+Clooos+the+creator+of+Bubble+Card.+Thank+you+for+supporting+me+and+my+passion.+You+are+awesome%21+%F0%9F%8D%BB&amp;amp;currency_code=EUR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue?logo=paypal&#34; alt=&#34;PayPal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#installation&#34;&gt;&lt;code&gt;Installation&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#configuration&#34;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#pop-up&#34;&gt;&lt;code&gt;Pop-up&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#horizontal-buttons-stack&#34;&gt;&lt;code&gt;Horizontal buttons stack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#button&#34;&gt;&lt;code&gt;Button&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#media-player&#34;&gt;&lt;code&gt;Media player&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#cover&#34;&gt;&lt;code&gt;Cover&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#select&#34;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#separator&#34;&gt;&lt;code&gt;Separator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#empty-column&#34;&gt;&lt;code&gt;Empty column&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;&lt;code&gt;Sub-buttons&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;&lt;code&gt;Card layouts&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;&lt;code&gt;Actions&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#styling&#34;&gt;&lt;code&gt;Styling&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#templates&#34;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#custom-components-conflicts&#34;&gt;&lt;code&gt;Conflicts&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#help&#34;&gt;&lt;code&gt;Help&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#donate&#34;&gt;&lt;code&gt;Donate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Home Assistant lowest supported version:&lt;/strong&gt; 2023.9.0&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Without HACS&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Download these files: &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/dist/bubble-card.js&#34;&gt;bubble-card.js&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/dist/bubble-pop-up-fix.js&#34;&gt;bubble-pop-up-fix.js&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Add these files to your &lt;code&gt;&amp;lt;config&amp;gt;/www&lt;/code&gt; folder&lt;/li&gt; &#xA;  &lt;li&gt;On your dashboard click on the icon at the right top corner then on &lt;code&gt;Edit dashboard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click again on that icon and then click on &lt;code&gt;Manage resources&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click on &lt;code&gt;Add resource&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Copy and paste this: &lt;code&gt;/local/bubble-card.js?v=1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click on &lt;code&gt;JavaScript Module&lt;/code&gt; then &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Go back and refresh your page&lt;/li&gt; &#xA;  &lt;li&gt;You can now click on &lt;code&gt;Add card&lt;/code&gt; in the bottom right corner and search for &lt;code&gt;Bubble Card&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;After any update of the file you will have to edit &lt;code&gt;/local/bubble-card.js?v=1&lt;/code&gt; and change the version to any higher number&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;If it&#39;s not working, just try to clear your browser cache.`&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With HACS (Recommended)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This method allows you to get updates directly on the HACS main page&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;If HACS is not installed yet, download it following the instructions on &lt;a href=&#34;https://hacs.xyz/docs/use/download/download/&#34;&gt;https://hacs.xyz/docs/setup/download/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Proceed to the HACS initial configuration following the instructions on &lt;a href=&#34;https://hacs.xyz/docs/configuration/basic&#34;&gt;https://hacs.xyz/docs/configuration/basic&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;On your sidebar go to &lt;code&gt;HACS&lt;/code&gt; &amp;gt; &lt;code&gt;Frontend&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Click on the &lt;code&gt;+&lt;/code&gt; button at the bottom right corner&lt;/li&gt; &#xA;  &lt;li&gt;Now search for &lt;code&gt;Bubble Card&lt;/code&gt; and then click on the button at the bottom right corner to download it&lt;/li&gt; &#xA;  &lt;li&gt;Go back on your dashboard and click on the icon at the right top corner then on &lt;code&gt;Edit dashboard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;You can now click on &lt;code&gt;Add card&lt;/code&gt; in the bottom right corner and search for &lt;code&gt;Bubble Card&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;If it&#39;s not working, try to clear your browser cache.&lt;/p&gt; &#xA; &lt;h4&gt;Videos&lt;/h4&gt; &#xA; &lt;p&gt;You can also take a look at my YouTube channel for step by step videos.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/@cloooos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/YouTube-My%20channel-red?logo=youtube&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://my.home-assistant.io/redirect/hacs_repository/?owner=clooos&amp;amp;repository=Bubble-Card&amp;amp;category=frontend&#34;&gt;&lt;img src=&#34;https://my.home-assistant.io/badges/hacs_repository.svg?sanitize=true&#34; alt=&#34;Open Bubble Card on Home Assistant Community Store (HACS).&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;All options can be configured in the Home Assistant editor. But you can find more details and the YAML in the documentation below.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Main options (YAML + description)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;custom:bubble-card&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Type of the card&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_type&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;button&lt;/code&gt;, &lt;code&gt;cover&lt;/code&gt;, &lt;code&gt;empty-column&lt;/code&gt;, &lt;code&gt;horizontal-buttons-stack&lt;/code&gt;, &lt;code&gt;media-player&lt;/code&gt;, &lt;code&gt;pop-up&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; or &lt;code&gt;separator&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Type of the Bubble Card, see below&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;styles&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object list&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS stylesheets&lt;/td&gt; &#xA;    &lt;td&gt;Allows you to customize your Bubble Card CSS, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#styling&#34;&gt;styling&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0hSQOlBxKKI&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/643aa16a-3fc9-4770-8269-62ec01db49b3&#34; alt=&#34;Bubble-Card---Youtube-github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Check out this &lt;a href=&#34;https://www.youtube.com/watch?v=0hSQOlBxKKI&#34;&gt;video&lt;/a&gt; to learn about Bubble Card and its capabilities.&lt;/strong&gt; My YouTube channel is quite new and focuses on tutorials about Home Assistant and Bubble Card. Don’t hesitate to subscribe to help increase my channel’s visibility. Thank you in advance!&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Pop-up&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/086bdcc4-62aa-445b-b265-b57c4e38b8a0&#34; alt=&#34;readme-pop-up&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card allows you to convert any vertical stack into a pop-up. Each pop-up is &lt;strong&gt;hidden by default&lt;/strong&gt; and can be opened by targeting its link (e.g. &lt;code&gt;&#39;#pop-up-name&#39;&lt;/code&gt;), with any card that supports the &lt;code&gt;navigate&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;action&lt;/a&gt;, or with the &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#horizontal-buttons-stack&#34;&gt;horizontal buttons stack&lt;/a&gt; that is included.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; This card must be placed within a &lt;a href=&#34;https://www.home-assistant.io/dashboards/vertical-stack/&#34;&gt;vertical stack&lt;/a&gt; card at the topmost position to function properly. To avoid misalignment with your view, place vertical stacks/pop-ups after all other dashboard cards. It should be called from the same view to work.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;&lt;b&gt;How to create a pop-up in the editor&lt;/b&gt;&lt;/summary&gt; &#xA;  &lt;br&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;To add a pop-up you first need to add a &lt;code&gt;Vertical stack&lt;/code&gt; card to your dashboard.&lt;/li&gt; &#xA;   &lt;li&gt;This &lt;code&gt;Vertical stack&lt;/code&gt; must be after all your other cards in your view order and before your horizontal buttons stack if you have one. In a section view type it can be placed anywhere.&lt;/li&gt; &#xA;   &lt;li&gt;Now add a &lt;code&gt;Bubble Card&lt;/code&gt; with the &lt;code&gt;Pop-up&lt;/code&gt; type.&lt;/li&gt; &#xA;   &lt;li&gt;Just fill in the &lt;code&gt;Hash&lt;/code&gt; input and the ones you need.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;p&gt;&lt;strong&gt;You can also watch &lt;a href=&#34;https://www.youtube.com/watch?v=7mOV7BfWoFc&#34;&gt;this step by step video&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;h3&gt;Pop-up trigger&lt;/h3&gt; &#xA; &lt;p&gt;This feature allows you to open a pop-up based on the state of any entity, for example, you can open a &#34;Security&#34; pop-up with a camera when a person is in front of your house. You can also create a toggle helper (input_boolean) and trigger its opening/closing in an automation.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Opening a pop-up when a &lt;code&gt;binary_sensor&lt;/code&gt; is &lt;code&gt;on&lt;/code&gt;&lt;/summary&gt; &#xA;  &lt;br&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: pop-up&#xA;hash: &#39;#kitchen&#39;&#xA;name: Security&#xA;icon: mdi:video&#xA;trigger_entity: binary_sensor.front_door_motion&#xA;trigger_state: &#39;on&#39;&#xA;trigger_close: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA; &lt;h3&gt;Different ways to close a pop-up&lt;/h3&gt; &#xA; &lt;p&gt;They are many ways to close a pop-up. For instance, you can swipe from the pop-up header to the bottom, by doing a long swipe inside the pop-up to the bottom, by pressing Escape on desktop, by removing the hash in the URL or by simply pressing the close button.&lt;/p&gt; &#xA; &lt;h3&gt;Pop-up initialization fix&lt;/h3&gt; &#xA; &lt;p&gt;If you notice that pop-up content appears upon page load, consider installing this fix as an additional module.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;Installation&lt;/summary&gt; &#xA;  &lt;br&gt; &#xA;  &lt;p&gt;You can do this by adding &lt;code&gt;bubble-pop-up-fix.js&lt;/code&gt; to your &lt;code&gt;configuration.yaml&lt;/code&gt; like so:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;frontend:&#xA;  extra_module_url:&#xA;    - /hacsfiles/Bubble-Card/bubble-pop-up-fix.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;If you didn&#39;t install it with HACS, change the path accordingly. Then, clear your browser cache.&lt;/p&gt; &#xA;  &lt;p&gt;For Android Home Assistant Companion App users, you can close the app, then clear the app cache. If it&#39;s still not working, you can close and restart the app again.&lt;/p&gt; &#xA;  &lt;p&gt;For iOS Home Assistant Companion App users, you can go to your Home Assistant settings, then navigate to Companion App &amp;gt; Debug &amp;gt; Clear Frontend Cache (or something similar), then refresh the page or restart the app.&lt;/p&gt; &#xA;  &lt;p&gt;For previous users of the &lt;strong&gt;Optimized mode&lt;/strong&gt;, you will need to replace your &lt;code&gt;type: custom:bubble-pop-up&lt;/code&gt; with this in YAML mode:&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: vertical-stack&#xA;cards:&#xA;  - type: custom:bubble-card&#xA;    card_type: pop-up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Pop-up options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Any unique hash (e.g. &lt;code&gt;&#39;#kitchen&#39;&lt;/code&gt;) with &#39; &#39;&lt;/td&gt; &#xA;    &lt;td&gt;This is how you will open your pop-up&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;auto_close&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;A timeout in milliseconds (e.g. &lt;code&gt;10000&lt;/code&gt; for 10s)&lt;/td&gt; &#xA;    &lt;td&gt;Auto close the pop-up after a timeout&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;close_on_click&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Automatically close the pop-up after any interaction&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;close_by_clicking_outside&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Close the pop-up by clicking outside of it&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;width_desktop&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Width on desktop (&lt;code&gt;100%&lt;/code&gt; by default on mobile)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Use this &lt;strong&gt;only&lt;/strong&gt; if your pop-up is not well centered on mobile (e.g. &lt;code&gt;13px&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;margin_top_mobile&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Top margin on mobile (e.g. &lt;code&gt;-56px&lt;/code&gt; if your header is hidden)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;margin_top_desktop&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Top margin on desktop (e.g. &lt;code&gt;50vh&lt;/code&gt; for a half-sized pop-up or &lt;code&gt;calc(100vh - 400px)&lt;/code&gt; for a fixed height of &lt;code&gt;400px&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any hex, rgb or rgba value&lt;/td&gt; &#xA;    &lt;td&gt;The background color of your pop-up (e.g. &lt;code&gt;#ffffff&lt;/code&gt; for a white background)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;bg_opacity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any value from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;100&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The background opacity of your pop-up (e.g. &lt;code&gt;100&lt;/code&gt; for no transparency)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;bg_blur&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any value from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;100&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The background blur effect of your pop-up, &lt;strong&gt;this only work if &lt;code&gt;bg_opacity&lt;/code&gt; is not set to &lt;code&gt;100&lt;/code&gt;&lt;/strong&gt; (e.g. &lt;code&gt;0&lt;/code&gt; for no blur)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;shadow_opacity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any value from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;100&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The shadow opacity of your pop-up (e.g. &lt;code&gt;0&lt;/code&gt; to hide it)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hide_backdrop&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Set this to true on the first pop-up of your main dashboard to disable the backdrop on all pop-ups.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;background_update&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Update pop-up content in background (not recommended)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;trigger_entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any entity&lt;/td&gt; &#xA;    &lt;td&gt;Open this pop-up based on the state of any entity&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;trigger_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (&lt;strong&gt;Required&lt;/strong&gt; if &lt;code&gt;trigger_entity&lt;/code&gt; is defined)&lt;/td&gt; &#xA;    &lt;td&gt;Any entity state&lt;/td&gt; &#xA;    &lt;td&gt;Entity state to open the pop-up&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;trigger_close&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Close the pop-up when &lt;code&gt;trigger_state&lt;/code&gt; is different&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;open_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Trigger an action when the pop-up is opening&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;close_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Trigger an action when the pop-up is closing&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the header, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_header&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show/Hide the pop-up header fully&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;You also have access to &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#button&#34;&gt;all the button settings&lt;/a&gt; for the header of the pop-up.&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;If undefined no header will be shown&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A pop-up&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: vertical-stack&#xA;cards:&#xA;  - type: custom:bubble-card&#xA;    card_type: pop-up&#xA;    hash: &#39;#kitchen&#39;&#xA;    name: Kitchen&#xA;    icon: mdi:fridge&#xA;    entity: light.kitchen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button to open the pop-up&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: name&#xA;name: Kitchen&#xA;icon: mdi:fridge&#xA;button_action:&#xA;  tap_action:&#xA;    action: navigate&#xA;    navigation_path: &#39;#kitchen&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A pop-up with a fixed height&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;Replace &lt;code&gt;400px&lt;/code&gt; with the size you need.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: vertical-stack&#xA;cards:&#xA;  - type: custom:bubble-card&#xA;    card_type: pop-up&#xA;    hash: &#39;#kitchen&#39;&#xA;    name: Kitchen&#xA;    icon: mdi:fridge&#xA;    entity: light.kitchen&#xA;    margin_top_mobile: calc(100vh - 400px)&#xA;    margin_top_desktop: calc(100vh - 400px)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Horizontal buttons stack&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/8fe89ade-c77a-469b-891f-577e0bb2f46b&#34; alt=&#34;readme-horizontal-buttons-stack&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card is a good companion to the pop-up card, allowing you to open the corresponding pop-ups. It also allows you to open any page of your dashboard. In addition, you can add your motion/occupancy sensors so that the order of the buttons adapts according to the room you just entered. This card is scrollable, remains visible, and acts as a footer.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; This card has to be the last one in your view (after every card and pop-up). It can&#39;t be inside any stack.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Horizontal buttons stack options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;1_link&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The pop-up hash (e.g. &lt;code&gt;&#39;#kitchen&#39;&lt;/code&gt;) with &#39; &#39; or any link&lt;/td&gt; &#xA;    &lt;td&gt;A link to open&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;1_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;1_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;1_entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any light or light group&lt;/td&gt; &#xA;    &lt;td&gt;Display the color of that light in background&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;1_pir_sensor&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any binary sensor&lt;/td&gt; &#xA;    &lt;td&gt;At least one pir sensor or more for &lt;code&gt;auto_order&lt;/code&gt;, in fact it also works with any entity type, for example you can add light groups and the order will change based on the last changed states.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;auto_order&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Change the order of the buttons according to the &lt;code&gt;_pir_sensor&lt;/code&gt; last changed time, &lt;strong&gt;it needs to be &lt;code&gt;false&lt;/code&gt; if you don&#39;t have any &lt;code&gt;_pir_sensor&lt;/code&gt; in your code&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Use this &lt;strong&gt;only&lt;/strong&gt; if your &lt;code&gt;horizontal-buttons-stack&lt;/code&gt; is not well centered on mobile (e.g. &lt;code&gt;13px&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;width_desktop&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any CSS value&lt;/td&gt; &#xA;    &lt;td&gt;Width on desktop (&lt;code&gt;100%&lt;/code&gt; by default on mobile)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;is_sidebar_hidden&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Fix the horizontal buttons stack position if the sidebar is hidden on the desktop (only if you have made a modification to hide it yourself)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rise_animation&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Set this to &lt;code&gt;false&lt;/code&gt; to disable the animation that activates once the page has loaded&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;highlight_current_view&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Highlight current hash / view with a smooth animation&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hide_gradient&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Set this to &lt;code&gt;false&lt;/code&gt; to hide the gradient&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!IMPORTANT]&lt;br&gt; The variables starting with a number define your buttons, just change this number to add more buttons (see example below).&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;An horizontal buttons stack that reorganize itself based on occupancy sensors&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: horizontal-buttons-stack&#xA;auto_order: true&#xA;1_name: Living room&#xA;1_icon: mdi:sofa&#xA;1_link: &#39;#living-room&#39;&#xA;1_entity: light.living_room&#xA;1_pir_sensor: binary_sensor.living_room_motion&#xA;2_name: Kitchen&#xA;2_icon: mdi:fridge&#xA;2_link: &#39;#kitchen&#39;&#xA;2_entity: light.kitchen&#xA;2_pir_sensor: binary_sensor.kitchen_motion&#xA;3_name: Dining room&#xA;3_icon: mdi:silverware-fork-knife&#xA;3_link: &#39;#dining-room&#39;&#xA;3_entity: light.dining_room&#xA;3_pir_sensor: binary_sensor.dining_room_motion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Button&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/790cbe3c-bdcc-4242-81ac-48e6ca2f1d46&#34; alt=&#34;readme-button-without-sub-buttons&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card allows you to control your entities and can be customized in many ways. To access color / control of an entity, simply tap on the icon.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;h3&gt;What are the differences between all the button types?&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;The button switch&lt;/strong&gt; is the default one. By default, it toggles an entity and its background color changes based on the entity’s state or the color of a light.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;The button slider&lt;/strong&gt; can control the brightness of a light, the volume of a media player, the position of a cover, and it also supports input numbers. Its background color can change based on the color of a light.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;The button state&lt;/strong&gt; is perfect for displaying information from a sensor or any entity. When you press it, it will show the &#34;More info&#34; panel of the entity. Its background color does not change.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;The button name&lt;/strong&gt; is the only one that doesn&#39;t need an entity and allows you to display a short text, a name or a title. You can also add some actions to it. Its background color does not change.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Button options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Any entity&lt;/td&gt; &#xA;    &lt;td&gt;An entity to control&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;button_type&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;switch&lt;/code&gt; (default), &lt;code&gt;slider&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The behavior of your button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your button, if not defined it will display the entity name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your button, if not defined it will display the entity icon or the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;force_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Give the priority to the icon instead of the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the state of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_last_changed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show the last changed time of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show an attribute of your &lt;code&gt;entity&lt;/code&gt; below its &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (required if &lt;code&gt;show_attribute&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt; &#xA;    &lt;td&gt;An attribute from your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The attribute to show (e.g. &lt;code&gt;brightness&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;scrolling_effect&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Allow text to scroll when the content exceeds the size of their container&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;button_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;, &lt;code&gt;double_tap_action&lt;/code&gt; or &lt;code&gt;hold_action&lt;/code&gt;, see below&lt;/td&gt; &#xA;    &lt;td&gt;Allow to change the default actions on button click. Not available for the &lt;code&gt;slider&lt;/code&gt; type.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon click, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;double_tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon double click, if undefined, &lt;code&gt;toggle&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hold_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon hold, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the card, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;columns&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Number of columns when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (default), &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Number of rows when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;sub_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;sub-buttons&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Add customized buttons fixed to the right&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A slider button that can control the brightness of a light&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: slider&#xA;entity: light.kitchen_led&#xA;name: Kitchen LED&#xA;icon: mdi:led-strip-variant&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button with all the options&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;entity: light.your_light&#xA;button_type: switch&#xA;show_icon: true&#xA;force_icon: true&#xA;show_name: true&#xA;show_last_changed: true&#xA;show_state: true&#xA;show_last_updated: true&#xA;show_attribute: true&#xA;attribute: brightness&#xA;scrolling_effect: true&#xA;card_layout: large&#xA;button_action:&#xA;  tap_action:&#xA;    action: toggle&#xA;tap_action:&#xA;  action: more-info&#xA;sub_button:&#xA;  - entity: light.your_light&#xA;    icon: &#39;&#39;&#xA;    show_state: false&#xA;    show_attribute: true&#xA;    attribute: brightness&#xA;    show_icon: false&#xA;    show_background: false&#xA;    show_name: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Media player&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/c7ee0752-00e3-4edf-8e1c-983fbd29b5f3&#34; alt=&#34;readme-media-player&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card allows you to control a media player. You can tap on the icon to get more control.&lt;/p&gt; &#xA;&lt;h3&gt;Media player options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Any media player&lt;/td&gt; &#xA;    &lt;td&gt;The media player to control&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your media player, if not defined it will display the entity name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your media player, if not defined it will display the entity icon or the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;force_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Give the priority to the icon instead of the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the state of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_last_changed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show the last changed time of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show an attribute of your &lt;code&gt;entity&lt;/code&gt; below its &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (required if &lt;code&gt;show_attribute&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt; &#xA;    &lt;td&gt;An attribute from your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The attribute to show (e.g. &lt;code&gt;brightness&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;scrolling_effect&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Allow text to scroll when the content exceeds the size of their container&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon click, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;double_tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon double click, if undefined, &lt;code&gt;toggle&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hold_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon hold, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the card, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;columns&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Number of columns when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (default), &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Number of rows when placed in a &lt;strong&gt;section view&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;sub_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;sub-buttons&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Add customized buttons fixed to the right&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See below&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide buttons&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;h4&gt;Hide options&lt;/h4&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;play_pause_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the play/pause button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;volume_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the volume button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;previous_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the previous button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;next_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the next button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;power_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the power button&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A media player with all the options&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: media-player&#xA;name: Media player&#xA;entity: media_player.your_media_player&#xA;show_state: true&#xA;show_last_updated: true&#xA;show_attribute: true&#xA;attribute: assumed_state&#xA;card_layout: large&#xA;scrolling_effect: false&#xA;show_icon: false&#xA;force_icon: true&#xA;show_name: false&#xA;show_last_changed: true&#xA;columns: 2&#xA;rows: 1&#xA;tap_action:&#xA;  action: toggle&#xA;hide:&#xA;  play_pause_button: true&#xA;  volume_button: true&#xA;  previous_button: true&#xA;  next_button: true&#xA;  power_button: true&#xA;sub_button:&#xA;  - entity: media_player.salon_2&#xA;    icon: mdi:volume-high&#xA;    name: Volume level&#xA;    tap_action:&#xA;      action: more-info&#xA;    show_name: false&#xA;    show_state: false&#xA;    show_last_updated: false&#xA;    show_attribute: true&#xA;    show_background: false&#xA;    attribute: volume_level&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Cover&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/27d1c329-76ab-480b-b424-c79c9e68c788&#34; alt=&#34;readme-cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card allows you to control your covers.&lt;/p&gt; &#xA;&lt;h3&gt;Cover options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Any cover&lt;/td&gt; &#xA;    &lt;td&gt;A cover to control&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your cover, if not defined it will display the entity name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;force_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Give the priority to the icon instead of the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the state of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_last_changed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show the last changed time of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show an attribute of your &lt;code&gt;entity&lt;/code&gt; below its &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (required if &lt;code&gt;show_attribute&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt; &#xA;    &lt;td&gt;An attribute from your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The attribute to show (e.g. &lt;code&gt;brightness&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;scrolling_effect&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Allow text to scroll when the content exceeds the size of their container&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon_open&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your open cover, if not defined it will display the default open cover icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon_close&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your closed cover, if not defined it will display the default closed cover icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon_up&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your open cover button, if not defined it will display the default open cover icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon_down&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your close cover button, if not defined it will display the default close cover icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;open_service&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any service or script&lt;/td&gt; &#xA;    &lt;td&gt;A service to open your cover, default to &lt;code&gt;cover.open_cover&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;stop_service&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any service or script&lt;/td&gt; &#xA;    &lt;td&gt;A service to stop your cover, default to &lt;code&gt;cover.stop_cover&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;close_service&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any service or script&lt;/td&gt; &#xA;    &lt;td&gt;A service to close your cover, default to &lt;code&gt;cover.close_cover&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon click, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;double_tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon double click, if undefined, &lt;code&gt;toggle&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hold_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon hold, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the card, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;columns&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Number of columns when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (default), &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Number of rows when placed in a &lt;strong&gt;section view&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;sub_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;sub-buttons&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Add customized buttons fixed to the right&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A card that can control a roller shade&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: cover&#xA;entity: cover.kitchen&#xA;name: Kitchen&#xA;icon_open: mdi:roller-shade&#xA;icon_close: mdi:roller-shade-closed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Select&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f1220aaf-da5a-4ec0-b74e-31905264ae0a&#34; alt=&#34;readme-select-card&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card allows you to add a dropdown menu for your &lt;code&gt;input_select&lt;/code&gt; / &lt;code&gt;select&lt;/code&gt; entities. This card also supports the sub-buttons and all the common Bubble Card features.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can also have select sub-buttons if you want, this feature is available in all the cards that support the sub-buttons.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Select options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Any entity&lt;/td&gt; &#xA;    &lt;td&gt;An entity to control&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your select, if not defined it will display the entity name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your select, if not defined it will display the entity icon or the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;force_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Give the priority to the icon instead of the &lt;code&gt;entity-picture&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the state of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_last_changed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show the last changed time of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show an attribute of your &lt;code&gt;entity&lt;/code&gt; below its &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (required if &lt;code&gt;show_attribute&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt; &#xA;    &lt;td&gt;An attribute from your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The attribute to show (e.g. &lt;code&gt;brightness&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;scrolling_effect&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Allow text to scroll when the content exceeds the size of their container&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon click, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;double_tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon double click, if undefined, &lt;code&gt;toggle&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hold_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on icon hold, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the card, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;columns&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Number of columns when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (default), &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Number of rows when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;sub_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;sub-buttons&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Add customized buttons fixed to the right&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A select card with a list of scenes&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: select&#xA;name: Scene&#xA;entity: input_select.scenes&#xA;icon: mdi:brightness-4&#xA;show_state: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Separator&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/7e416a34-b95e-4a03-a200-4b3aa04f560d&#34; alt=&#34;readme-separator&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card is a simple separator for dividing your pop-up into categories / sections. e.g. Lights, Devices, Covers, Settings, Automations...&lt;/p&gt; &#xA;&lt;h3&gt;Separator options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + descriptions)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional but recommended&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your separator&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional but recommended&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your separator&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;card_layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt; (default), &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Styling layout of the card, see &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#card-layouts&#34;&gt;card layouts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;columns&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Number of columns when placed in a &lt;strong&gt;section view&lt;/strong&gt; (e.g. &lt;code&gt;2&lt;/code&gt; is 2/4)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1&lt;/code&gt; (default), &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Number of rows when placed in a &lt;strong&gt;section view&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;sub_button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#sub-buttons&#34;&gt;sub-buttons&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Add customized buttons fixed to the right&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A separator/divider for a &#34;Covers&#34; section&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: separator&#xA;name: Covers&#xA;icon: mdi:window-shutter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Empty column&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/a97fa8df-8360-4613-8bb7-e8a269cb1913&#34; alt=&#34;readme-empty-column&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This card is here to fill an empty column. This is useful if you have a &lt;code&gt;horizontal-stack&lt;/code&gt; in your pop-up with only one card. Take a look at the bottom right corner of this screenshot to (not) see it.&lt;/p&gt; &#xA;&lt;h3&gt;Empty column options&lt;/h3&gt; &#xA;&lt;p&gt;This card has no options and doesn’t support &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#styling&#34;&gt;styling&lt;/a&gt;, though it does support layout options for HA sections.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;An empty column in an horizontal stack&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: horizontal-stack&#xA;cards:&#xA;  - type: custom:bubble-card&#xA;    card_type: button&#xA;    ...&#xA;  - type: custom:bubble-card&#xA;    card_type: empty-column&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Sub-buttons&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/c7bfda91-943e-42f3-a963-4847e57c6b97&#34; alt=&#34;readme-button&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;In every card that supports that option, you can add sub-buttons to customize your cards even more. You can, for exemple, create a button that can control a vacuum, a weather card, or almost anything that you can come up with. These sub-buttons support the tap actions and most of the button options.&lt;/p&gt; &#xA;&lt;h3&gt;Sub-buttons options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + description)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Requirement&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any entity&lt;/td&gt; &#xA;    &lt;td&gt;An entity to control&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any string&lt;/td&gt; &#xA;    &lt;td&gt;A name for your sub-button, if not defined it will display the entity name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;Any &lt;code&gt;mdi:&lt;/code&gt; icon&lt;/td&gt; &#xA;    &lt;td&gt;An icon for your sub-button, if not defined it will display the entity icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_background&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show a background for your sub-button, it will change its color based on your entity state&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_state&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the state of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_name&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the name&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_icon&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Show or hide the icon&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_last_changed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show the last changed time of your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;show_attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;boolean&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/td&gt; &#xA;    &lt;td&gt;Show an attribute of your &lt;code&gt;entity&lt;/code&gt; below its &lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;attribute&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Optional (required if &lt;code&gt;show_attribute&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt; &#xA;    &lt;td&gt;An attribute from your &lt;code&gt;entity&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The attribute to show (e.g. &lt;code&gt;brightness&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on sub-button click, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;double_tap_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on sub-button double click, if undefined, &lt;code&gt;toggle&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;hold_action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Optional&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#tap-double-tap-and-hold-actions&#34;&gt;actions&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Define the type of action on sub-button hold, if undefined, &lt;code&gt;more-info&lt;/code&gt; will be used.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button with some sub-buttons to make a vacuum card (like on the screenshot)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: switch&#xA;name: Vacuum&#xA;entity: vacuum.downstairs&#xA;icon: mdi:robot-vacuum&#xA;show_state: true&#xA;show_last_changed: true&#xA;tap_action:&#xA;  action: more-info&#xA;button_action:&#xA;  tap_action:&#xA;    action: more-info&#xA;sub_button:&#xA;  - name: Battery&#xA;    icon: mdi:battery&#xA;    show_name: false&#xA;    show_icon: true&#xA;    show_background: false&#xA;    show_attribute: true&#xA;    attribute: battery_level&#xA;  - name: Return to dock&#xA;    icon: mdi:home&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: call-service&#xA;      service: vacuum.return_to_base&#xA;      target:&#xA;        entity_id: vacuum.downstairs&#xA;  - name: Pause&#xA;    icon: mdi:pause&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: call-service&#xA;      service: vacuum.pause&#xA;      target:&#xA;        entity_id: vacuum.downstairs&#xA;  - name: Start&#xA;    icon: mdi:play&#xA;    tap_action:&#xA;      action: call-service&#xA;      service: vacuum.start&#xA;      target:&#xA;        entity_id: vacuum.downstairs&#xA;styles: &amp;gt;-&#xA;  .bubble-button-card-container {&#xA;    /* Change the background color when the vacuum get an error (optional), more details in the styles template section */&#xA;    background: ${state === &#39;error&#39; ? &#39;rgb(200, 80, 40)&#39; : &#39;&#39;} !important;&#xA;  }&#xA;  /* Change the first sub-button battery icon based on the battery_icon attribute, more details in the styles template section */&#xA;  ${subButtonIcon[0].setAttribute(&#34;icon&#34;, hass.states[&#39;vacuum.downstairs&#39;].attributes.battery_icon)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button slider with a sub-button that shows the brightness and one that toggle the light (like on the screenshot)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: slider&#xA;name: Kitchen&#xA;entity: light.kitchen&#xA;icon: mdi:fridge-outline&#xA;show_last_updated: true&#xA;sub_button:&#xA;  - name: Brightness&#xA;    icon: mdi:fridge-outline&#xA;    show_icon: false&#xA;    show_background: false&#xA;    show_attribute: true&#xA;    attribute: brightness&#xA;  - name: Toggle button&#xA;    icon: mdi:lightbulb&#xA;    tap_action:&#xA;      action: toggle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button that shows the inside and outside temperature with the weather for today and tomorrow (screenshot included)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;591&#34; alt=&#34;image&#34; src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/360312de-db08-47bf-9b46-92afeb435edd&#34;&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Bad luck for me it&#39;s cloudy all the time but all the icons are changing based on the weather.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: state&#xA;entity: weather.openweathermap&#xA;name: Weather&#xA;show_state: true&#xA;card_layout: large-2-rows&#xA;sub_button:&#xA;  - name: Home temperature&#xA;    icon: mdi:home-thermometer-outline&#xA;    entity: sensor.home_temperature&#xA;    show_state: true&#xA;    show_icon: true&#xA;    show_background: false&#xA;  - name: Outside temperature&#xA;    entity: sensor.outside_temperature&#xA;    show_state: true&#xA;    show_background: false&#xA;  - name: Today&#xA;    entity: sensor.home_realfeel_temperature_max_0d&#xA;    show_name: true&#xA;    show_state: true&#xA;    tap_action:&#xA;      action: more-info&#xA;  - name: Tomorrow&#xA;    entity: sensor.home_realfeel_temperature_max_1d&#xA;    show_name: true&#xA;    show_state: true&#xA;    show_background: false&#xA;styles: &amp;gt;-&#xA;  /* Change the third and fourth sub-button icon based on the forecast.condition attribute, more details in the styles template section */&#xA;  ${subButtonIcon[2].setAttribute(&#34;icon&#34;, getWeatherIcon(hass.states[&#39;sensor.weather_forecast_daily&#39;].attributes.forecast[0]?.condition))}&#xA;  ${subButtonIcon[3].setAttribute(&#34;icon&#34;, getWeatherIcon(hass.states[&#39;sensor.weather_forecast_daily&#39;].attributes.forecast[1]?.condition))}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Card layouts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/0c049498-969b-4939-959e-fc49fb08d0a1&#34; alt=&#34;My-Bubble-Card-dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bubble Card fully supports the Home Assistant section view, you can change the card layout to make the card bigger and also change the number of columns or rows the card should occupy in your section view (only on the cards that support that option). These layouts are also supported in all other view types.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Available card layouts&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Layout&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;The regular layout (not optimized for the section view)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;large&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;A larger layout (optimized for the section view)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;large-2-rows&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;A larger layout with 2 rows of sub-buttons (optimized for the section view)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A large button that shows energy statistics with 2 rows of sub-buttons (screenshot included)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;547&#34; alt=&#34;image&#34; src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/faa643d5-5d1e-488d-b4a5-6bedd043c747&#34;&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: state&#xA;card_layout: large-2-rows&#xA;name: Energy&#xA;entity: sensor.current_power_production&#xA;icon: mdi:home-lightning-bolt-outline&#xA;show_state: true&#xA;button_action:&#xA;  tap_action:&#xA;    action: navigate&#xA;    navigation_path: &#39;#energy&#39;&#xA;sub_button:&#xA;  - entity: sensor.electricity_counter&#xA;    icon: mdi:counter&#xA;    show_background: false&#xA;    show_state: true&#xA;    tap_action:&#xA;      action: more-info&#xA;  - entity: sensor.today_s_energy_production&#xA;    show_state: true&#xA;    show_background: false&#xA;  - entity: sensor.average_daily_consumption&#xA;    show_background: false&#xA;    show_state: true&#xA;  - entity: sensor.this_week_production&#xA;    show_state: true&#xA;    show_background: false&#xA;    icon: mdi:calendar-week&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tap, double tap and hold actions&lt;/h2&gt; &#xA;&lt;p&gt;You can also use Home Assistant default tap actions, double tap actions and hold actions on the cards that supports this option. For example, this allows you to display the “more info” window by holding a button icon or running a service when a sub-button is pressed.&lt;/p&gt; &#xA;&lt;h3&gt;Action options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA; &lt;summary&gt;&lt;strong&gt;Options (YAML + description)&lt;/strong&gt;&lt;/summary&gt;&#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Type&lt;/th&gt; &#xA;    &lt;th&gt;Supported options&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;action&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;more-info&lt;/code&gt;, &lt;code&gt;toggle&lt;/code&gt;, &lt;code&gt;call-service&lt;/code&gt;, &lt;code&gt;navigate&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;fire-dom-event&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Action to perform&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Only works with &lt;code&gt;call-service&lt;/code&gt;. Follows the &lt;a href=&#34;https://www.home-assistant.io/docs/scripts/service-calls/#targeting-areas-and-devices&#34;&gt;home-assistant syntax&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;navigation_path&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Any path of your dashboard&lt;/td&gt; &#xA;    &lt;td&gt;Path to navigate to (e.g. &lt;code&gt;&#39;#kitchen&#39;&lt;/code&gt; for opening a pop-up) when action defined as navigate&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;url_path&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Any link&lt;/td&gt; &#xA;    &lt;td&gt;URL to open on click (e.g. &lt;code&gt;https://www.google.com&lt;/code&gt;) when action is &lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;service&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;string&lt;/td&gt; &#xA;    &lt;td&gt;Any service&lt;/td&gt; &#xA;    &lt;td&gt;Service to call (e.g. &lt;code&gt;media_player.media_play_pause&lt;/code&gt;) when &lt;code&gt;action&lt;/code&gt; defined as &lt;code&gt;call-service&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;data&lt;/code&gt; or &lt;code&gt;service_data&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;Any service data&lt;/td&gt; &#xA;    &lt;td&gt;Service data to include (e.g. &lt;code&gt;entity_id: media_player.kitchen&lt;/code&gt;) when &lt;code&gt;action&lt;/code&gt; defined as &lt;code&gt;call-service&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;confirmation&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;object&lt;/td&gt; &#xA;    &lt;td&gt;See &lt;a href=&#34;https://www.home-assistant.io/dashboards/actions/#options-for-confirmation&#34;&gt;confirmation&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Display a confirmation pop-up (not a Bubble Card one), overrides the default &lt;code&gt;confirmation&lt;/code&gt; object&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;A button to open a pop-up&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;button_type: name&#xA;name: Kitchen&#xA;icon: mdi:fridge&#xA;button_action:&#xA;  tap_action:&#xA;    action: navigate&#xA;    navigation_path: &#39;#kitchen&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Styling&lt;/h2&gt; &#xA;&lt;p&gt;You can add custom styles in the editor or by adding &lt;code&gt;styles: |&lt;/code&gt; in YAML &lt;strong&gt;without using card-mod&lt;/strong&gt; which allows you to modify the CSS style of all the cards.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;br&gt; &lt;strong&gt;To understand which style classes can be modified&lt;/strong&gt;, you can take a look at the &lt;a href=&#34;https://github.com/Clooos/Bubble-Card/tree/main/src/cards&#34;&gt;&lt;code&gt;src/cards&lt;/code&gt;&lt;/a&gt; folder in this repository. In each card folder, you will find a file named &lt;code&gt;styles.ts&lt;/code&gt;. These files contain all the applied styles.&lt;/p&gt; &#xA; &lt;p&gt;You can also find a lot of examples on the &lt;a href=&#34;https://community.home-assistant.io/t/bubble-card-a-minimalist-card-collection-for-home-assistant-with-a-nice-pop-up-touch/&#34;&gt;Home Assistant forum&lt;/a&gt; by doing a bit of searching.&lt;/p&gt; &#xA; &lt;p&gt;The Bubble theme for Home Assistant (like on the screenshots) can be found &lt;a href=&#34;https://github.com/Clooos/Bubble&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; Please note that you will have to add &lt;code&gt;!important;&lt;/code&gt; to some CSS styles that are already defined (see examples below).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the font size of any Bubble Card&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  * { &#xA;    font-size: 16px !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of a single button in an horizontal buttons stack&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: &amp;gt;&#xA;  /* Selector for the &#39;#kitchen&#39; button */&#xA;  .kitchen &amp;gt; .color-background {&#xA;    background-color: blue !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of a button&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: | &#xA;  .bubble-button-card-container {&#xA;    background: rgba(12,120,50,0.5) !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To change the color when it&#39;s &lt;code&gt;on&lt;/code&gt; take a look at the style templates below.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the color of a button slider&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-range-fill { &#xA;    background: rgba(79, 69, 87, 1) !important;&#xA;    opacity: 1 !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the line color of a separator&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-line {&#xA;    background: var(--primary-text-color);&#xA;    opacity: 0.1;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the color of an icon&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-icon {&#xA;    color: white !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For an horizontal buttons stack icon.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;.kitchen &amp;gt; .bubble-icon {&#xA;  color: grey !important&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of an icon container&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-icon-container {&#xA;    background: rgb(230, 128, 41);&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the size of the sub-buttons (perfect for the large layout)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button {&#xA;    height: 48px !important;&#xA;    min-width: 48px !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of the second sub-button&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button-2 {&#xA;    background-color: blue !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the size of an icon&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;For the main icon.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-icon {&#xA;    --mdc-icon-size: 26px !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;For the sub-button icons.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button-icon {&#xA;    --mdc-icon-size: 26px !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using a picture rather than an icon in a sub button&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sub_button:&#xA;  - icon: none&#xA;styles: |-&#xA;  .bubble-sub-button-1 {&#xA;    background-image: url(&#34;/local/pictures/your_picture.jpg&#34;);&#xA;    background-size: cover;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Just upload this picture in a “pictures” folder (or the name you want) in the Home Assistant “www” folder.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Advanced example: Creating an horizontal row of sub-buttons (screenshot included)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;img width=&#34;556&#34; alt=&#34;image&#34; src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/b9be2bcf-93fc-4b06-8eae-ecac97dfb5e2&#34;&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;I really love this one, I use it as a header on my dashboard.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;card_layout: large&#xA;button_type: name&#xA;show_icon: false&#xA;show_name: false&#xA;sub_button:&#xA;  - name: Mute&#xA;    icon: mdi:volume-off&#xA;    tap_action:&#xA;      action: toggle&#xA;      service: input_boolean.toggle&#xA;    entity: input_boolean.silent_mode&#xA;  - name: Covers&#xA;    entity: cover.all_group&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: navigate&#xA;      navigation_path: &#39;#cover&#39;&#xA;  - name: Shopping list&#xA;    icon: mdi:cart-outline&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: navigate&#xA;      navigation_path: &#39;#shopping-list&#39;&#xA;  - name: Security&#xA;    icon: mdi:video-outline&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: navigate&#xA;      navigation_path: &#39;#security&#39;&#xA;  - name: Settings&#xA;    icon: mdi:cog&#xA;    show_background: false&#xA;    tap_action:&#xA;      action: navigate&#xA;      navigation_path: &#39;#configuration&#39;&#xA;styles: |&#xA;  .card-content {&#xA;    width: 100%;&#xA;    margin: 0 !important;&#xA;  }&#xA;  .bubble-button-card-container {&#xA;    background: none;&#xA;  }&#xA;  .bubble-sub-button {&#xA;    height: 46px !important;&#xA;    width: 46px !important;&#xA;  }&#xA;  .bubble-sub-button-container {&#xA;    width: 100%;&#xA;    justify-content: space-between !important;&#xA;  }&#xA;  .bubble-sub-button-icon {&#xA;    --mdc-icon-size: inherit !important;&#xA;  }&#xA;  .bubble-name-container {&#xA;    margin-right: 0px !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/3bf04969-e00d-4755-89df-481e8f7d73b2&#34; alt=&#34;Sub-buttons-everywhere&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Templates&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bubble Card doesn’t support Jinja templates&lt;/strong&gt; but advanced users can add templates in JS directly in their custom styles. For example, this allows you to dynamically change an icon, the texts or the colors of an element, to show or hide an element conditionally (like a sub-button), or almost anything based on a state, an attribute and more.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;br&gt; More information about JS templates &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_operator&#34;&gt;here&lt;/a&gt;. My advice is to always take a look at your browser console to be sure that everything is working correctly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Available variables and functions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Variables&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;You have access to these variables in most cards:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;state&lt;/code&gt; will return the state of your defined &lt;code&gt;entity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;entity&lt;/code&gt; will return your entity you defined like &lt;code&gt;switch.test&lt;/code&gt; in this example.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;icon&lt;/code&gt; can be used like this to change the icon &lt;code&gt;icon.setAttribute(&#34;icon&#34;, &#34;mdi:lightbulb&#34;)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;subButtonIcon[0]&lt;/code&gt; can be used like this to change the first sub-button icon &lt;code&gt;subButtonIcon[0].setAttribute(&#34;icon&#34;, &#34;mdi:lightbulb&#34;)&lt;/code&gt;, &lt;code&gt;[0]&lt;/code&gt; is the first sub-button icon, &lt;code&gt;[1]&lt;/code&gt; the second...&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;card&lt;/code&gt; will return the card element in the DOM.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;hass&lt;/code&gt; is an advanced variable that allows you even more control, for example you can return the state of &lt;code&gt;light.kitchen&lt;/code&gt; like this &lt;code&gt;hass.states[&#39;light.kitchen&#39;].state&lt;/code&gt; or an attribute like this &lt;code&gt;hass.states[entity].attributes.brightness&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;this&lt;/code&gt; will return a lot of usefull informations about your setup and dashboard, only use this if you know what you are doing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Functions (&lt;code&gt;getWeatherIcon&lt;/code&gt;)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;You have access to all the global JS functions, but you have also access to:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;getWeatherIcon&lt;/code&gt; can be used to return a weather icon based on a state that return the weather. For example, you can can do this &lt;code&gt;${subButtonIcon[2].setAttribute(&#34;icon&#34;, getWeatherIcon(hass.states[&#39;sensor.weather_forecast_daily&#39;].attributes.forecast[0]?.condition))}&lt;/code&gt; to change the third sub-button icon to today&#39;s weather icon, &lt;code&gt;.forecast[1]?.condition&lt;/code&gt; is for tomorrow...&lt;/p&gt; &lt;p&gt;You will have to create a template sensor for that. Here is what you can add in your &lt;code&gt;configuration.yaml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  - trigger:&#xA;      - platform: time_pattern&#xA;        hours: /2&#xA;    action:&#xA;      - service: weather.get_forecasts&#xA;        data:&#xA;          type: daily&#xA;        target:&#xA;          entity_id: weather.home&#xA;        response_variable: daily&#xA;    sensor:&#xA;      - name: Weather Forecast Daily&#xA;        unique_id: weather_forecast_daily&#xA;        state: &#34;{{ now().isoformat() }}&#34;&#xA;        attributes:&#xA;          forecast: &#34;{{ daily[&#39;weather.home&#39;].forecast }}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of a button that is red when it&#39;s &lt;code&gt;off&lt;/code&gt; and green when it&#39;s &lt;code&gt;on&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: button&#xA;entity: switch.test&#xA;name: Test&#xA;styles: |&#xA;  .bubble-button-background {&#xA;    opacity: 1 !important;&#xA;    background-color: ${state === &#39;on&#39; ? &#39;blue&#39; : &#39;red&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing the background color of a button based on an entity for the horizontal buttons stack&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .kitchen &amp;gt; .color-background {&#xA;    background-color: ${hass.states[&#39;light.kitchen&#39;].state === &#39;on&#39; ? &#39;blue&#39; : &#39;red&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Showing/Hiding a sub-button conditionally&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This one is showing the first sub-button only when my vacuum is stuck.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button-1 {&#xA;    display: ${hass.states[&#39;vacuum.downstairs&#39;].state === &#39;error&#39; ? &#39;&#39; : &#39;none&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is showing a sub-button when the battery is below 10%. Usefull with a sub-button that shows &#34;Low battery&#34;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button-1 {&#xA;    display: ${hass.states[&#39;vacuum.downstairs&#39;].attributes.battery_level &amp;lt;= 10 ? &#39;&#39; : &#39;none&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing an icon or sub-button icon conditionally&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This one is changing a button icon only when a vacuum is stuck.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  ${icon.setAttribute(&#34;icon&#34;, hass.states[&#39;vacuum.downstairs&#39;].state === &#39;error&#39; ? &#39;mdi:alert&#39; : &#39;mdi:robot-vacuum&#39;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is changing the first sub-button icon only when a vacuum is stuck.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  ${subButtonIcon[0].setAttribute(&#34;icon&#34;, hass.states[&#39;vacuum.downstairs&#39;].state === &#39;error&#39; ? &#39;mdi:alert&#39; : &#39;mdi:robot-vacuum&#39;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Changing an icon or sub-button icon color conditionally&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This one is changing a button icon color based on its state.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-icon {&#xA;    color: ${hass.states[&#39;light.your_light&#39;].state === &#39;on&#39; ? &#39;green&#39; : &#39;red&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This one is changing a sub-button icon color based on its state. &lt;code&gt;.bubble-sub-button-1&lt;/code&gt; is the first sub-button, replace &lt;code&gt;1&lt;/code&gt; if you want to change another sub-button icon.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  .bubble-sub-button-1 &amp;gt; ha-icon {&#xA;    color: ${hass.states[&#39;light.your_light&#39;].state === &#39;on&#39; ? &#39;green&#39; : &#39;red&#39;} !important;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Animating a fan icon conditionally&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This one is rotating a button icon when a fan is &lt;code&gt;on&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |-&#xA;  .bubble-icon {&#xA;    animation: ${hass.states[&#39;fan.you_fan&#39;].state === &#39;on&#39; ? &#39;slow-rotate 2s linear infinite&#39; : &#39;&#39;};&#xA;  }&#xA;  @keyframes slow-rotate {&#xA;    0% { transform: rotate(0deg); }&#xA;    100% { transform: rotate(360deg); }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Templating texts (like name or state)&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;This one is changing a button name/state with &#34;It&#39;s currently sunny&#34; depending on your weather.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  ${card.querySelector(&#39;.bubble-name&#39;).innerText = &#34;It&#39;s currently &#34; + hass.states[&#39;weather.home&#39;].state}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you want to template the state (&lt;code&gt;.bubble-state&lt;/code&gt;) don&#39;t toggle &lt;code&gt;show_state: true&lt;/code&gt; just toggle &lt;code&gt;show_attribute: true&lt;/code&gt; without any attribute.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Advanced example: Changing the color of a sub-button when a pop-up is open&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;styles: |&#xA;  ${window.addEventListener(&#39;location-changed&#39;, () =&amp;gt; { &#xA;  card.querySelector(&#39;.bubble-sub-button-1&#39;).style.backgroundColor = this.location.href.includes(&#39;#kitchen&#39;) ? &#39;blue&#39; : &#39;&#39;;&#xA;  })}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Advanced example: Templating a separator name based on a state translated to your language&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;You can use &lt;code&gt;hass.formatEntityState(state)&lt;/code&gt; to transtale a state and &lt;code&gt;hass.formatEntityAttributeValue(state, &#34;attribute&#34;)&lt;/code&gt; to translate an attribute.&lt;/p&gt; &#xA; &lt;p&gt;This one is changing the name and the icon based on the weather, &#34;Nuageux&#34; means &#34;Cloudy&#34; in French.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/Clooos/Bubble-Card/assets/36499953/35ac9d0f-c3b8-4c09-9c15-fe6954011d55&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;type: custom:bubble-card&#xA;card_type: separator&#xA;icon: mdi:weather-cloudy&#xA;sub_button:&#xA;  - entity: sensor.outside_temperature&#xA;    icon: mdi:thermometer&#xA;    name: Temperature&#xA;    show_state: true&#xA;    show_background: false&#xA;styles: &amp;gt;&#xA;  .bubble-line {&#xA;    background: white;&#xA;    opacity: 1;&#xA;  }&#xA;&#xA;  ${card.querySelector(&#39;.bubble-name&#39;).innerText =&#xA;  hass.formatEntityState(hass.states[&#39;weather.maison&#39;])}&#xA;&#xA;  ${icon.setAttribute(&#34;icon&#34;,&#xA;  getWeatherIcon(hass.states[&#39;weather.maison&#39;].state))}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Custom components conflicts&lt;/h2&gt; &#xA;&lt;p&gt;⚠️ For now there are some features that are not working with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kiosk mode, but this is fixed in Kiosk mode v6.0.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open an issue if something is not working as expected.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Clooos/Bubble-Card/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Issues-green?logo=github&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Got questions or thoughts about Bubble Card? Want to share your dashboards or discoveries? You can go on the Home Assistant forum, on the Bubble Card subreddit or on the GitHub Discussions section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://community.home-assistant.io/t/bubble-card-a-minimalist-card-collection-for-home-assistant-with-a-nice-pop-up-touch/609678&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Home%20Assistant-Community%20Forum-blue?logo=home-assistant&#34; alt=&#34;Home Assistant Community Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/BubbleCard/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-r/BubbleCard-orange?logo=reddit&#34; alt=&#34;Reddit Page&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Clooos/Bubble-Card/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Discussions-lightgrey?logo=github&#34; alt=&#34;GitHub Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;I dedicate most of my spare time to making this project the best it can be. So if you appreciate my work, any donation would be a great way to show your support 🍻&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/clooos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Buy%20me%20a%20beer-yellow?logo=buy-me-a-coffee&#34; alt=&#34;Buy me a beer&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/donate/?business=MRVBV9PLT9ZPL&amp;amp;no_recurring=0&amp;amp;item_name=Hi%2C+I%27m+Clooos+the+creator+of+Bubble+Card.+Thank+you+for+supporting+me+and+my+passion.+You+are+awesome%21+%F0%9F%8D%BB&amp;amp;currency_code=EUR&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-blue?logo=paypal&#34; alt=&#34;PayPal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Thank you everyone for your support, you all are my greatest motivation!&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Clooos/Bubble-Card/main/#top&#34;&gt;&lt;img src=&#34;https://cdn-icons-png.flaticon.com/512/892/892692.png&#34; height=&#34;50px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>