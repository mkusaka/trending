<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-19T01:36:08Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>langchain-ai/chat-langchain</title>
    <updated>2024-10-19T01:36:08Z</updated>
    <id>tag:github.com,2024-10-19:/langchain-ai/chat-langchain</id>
    <link href="https://github.com/langchain-ai/chat-langchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ü¶úÔ∏èüîó Chat LangChain&lt;/h1&gt; &#xA;&lt;p&gt;This repo is an implementation of a chatbot specifically focused on question answering over the &lt;a href=&#34;https://python.langchain.com/&#34;&gt;LangChain documentation&lt;/a&gt;. Built with &lt;a href=&#34;https://github.com/langchain-ai/langchain/&#34;&gt;LangChain&lt;/a&gt;, &lt;a href=&#34;https://github.com/langchain-ai/langgraph/&#34;&gt;LangGraph&lt;/a&gt;, and &lt;a href=&#34;https://nextjs.org&#34;&gt;Next.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Deployed version: &lt;a href=&#34;https://chat.langchain.com&#34;&gt;chat.langchain.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Looking for the JS version? Click &lt;a href=&#34;https://github.com/langchain-ai/chat-langchainjs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The app leverages LangChain and LangGraph&#39;s streaming support and async API to update the page in real time for multiple users.&lt;/p&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;p&gt;This project is now deployed using &lt;a href=&#34;https://langchain-ai.github.io/langgraph/cloud/&#34;&gt;LangGraph Cloud&lt;/a&gt;, which means you won&#39;t be able to run it locally (or without a LangGraph Cloud account). If you want to run it WITHOUT LangGraph Cloud, please use the code and documentation from this &lt;a href=&#34;https://github.com/langchain-ai/chat-langchain/tree/langserve&#34;&gt;branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This &lt;a href=&#34;https://github.com/langchain-ai/chat-langchain/tree/langserve&#34;&gt;branch&lt;/a&gt; &lt;strong&gt;does not&lt;/strong&gt; have the same set of features.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üìö Technical description&lt;/h2&gt; &#xA;&lt;p&gt;There are two components: ingestion and question-answering.&lt;/p&gt; &#xA;&lt;p&gt;Ingestion has the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pull html from documentation site as well as the Github Codebase&lt;/li&gt; &#xA; &lt;li&gt;Load html with LangChain&#39;s &lt;a href=&#34;https://python.langchain.com/docs/integrations/document_loaders/recursive_url_loader&#34;&gt;RecursiveURLLoader&lt;/a&gt; and &lt;a href=&#34;https://python.langchain.com/docs/integrations/document_loaders/sitemap&#34;&gt;SitemapLoader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Split documents with LangChain&#39;s &lt;a href=&#34;https://api.python.langchain.com/en/latest/text_splitter/langchain.text_splitter.RecursiveCharacterTextSplitter.html&#34;&gt;RecursiveCharacterTextSplitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a vectorstore of embeddings, using LangChain&#39;s &lt;a href=&#34;https://python.langchain.com/docs/integrations/vectorstores/weaviate&#34;&gt;Weaviate vectorstore wrapper&lt;/a&gt; (with OpenAI&#39;s embeddings).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Question-Answering has the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Given the chat history and new user input, determine what a standalone question would be using an LLM.&lt;/li&gt; &#xA; &lt;li&gt;Given that standalone question, look up relevant documents from the vectorstore.&lt;/li&gt; &#xA; &lt;li&gt;Pass the standalone question and relevant documents to the model to generate and stream the final answer.&lt;/li&gt; &#xA; &lt;li&gt;Generate a trace URL for the current chat session, as well as the endpoint to collect feedback.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Looking to use or modify this Use Case Accelerant for your own needs? We&#39;ve added a few docs to aid with this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/langchain-ai/chat-langchain/master/CONCEPTS.md&#34;&gt;Concepts&lt;/a&gt;&lt;/strong&gt;: A conceptual overview of the different components of Chat LangChain. Goes over features like ingestion, vector stores, query analysis, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/langchain-ai/chat-langchain/master/MODIFY.md&#34;&gt;Modify&lt;/a&gt;&lt;/strong&gt;: A guide on how to modify Chat LangChain for your own needs. Covers the frontend, backend and everything in between.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/langchain-ai/chat-langchain/master/LANGSMITH.md&#34;&gt;LangSmith&lt;/a&gt;&lt;/strong&gt;: A guide on adding robustness to your application using LangSmith. Covers observability, evaluations, and feedback.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/langchain-ai/chat-langchain/master/PRODUCTION.md&#34;&gt;Production&lt;/a&gt;&lt;/strong&gt;: Documentation on preparing your application for production usage. Explains different security considerations, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/langchain-ai/chat-langchain/master/DEPLOYMENT.md&#34;&gt;Deployment&lt;/a&gt;&lt;/strong&gt;: How to deploy your application to production. Covers setting up production databases, deploying the frontend, and more.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>