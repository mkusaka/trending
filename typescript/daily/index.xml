<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-22T01:43:58Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sst/demo-ai-app</title>
    <updated>2024-01-22T01:43:58Z</updated>
    <id>tag:github.com,2024-01-22:/sst/demo-ai-app</id>
    <link href="https://github.com/sst/demo-ai-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample AI movies app built with ❍ Ion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;❍ Movies Demo&lt;/h1&gt; &#xA;&lt;p&gt;A sample movies app built with &lt;a href=&#34;https://github.com/sst/ion&#34;&gt;❍ Ion&lt;/a&gt; to demo how to &lt;strong&gt;use AI in your apps using your data&lt;/strong&gt; — &lt;a href=&#34;https://movies.sst.dev&#34;&gt;movies.sst.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sst/demo-ai-app/main/screenshot.png&#34; alt=&#34;Movies App&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The movie database in this app contains around 700 popular movies. You can search through them, check out related movies, and some of the movies are also tagged.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Most of the AI demos to date include some form of chat. While this is useful, it doesn&#39;t apply to majority of the apps out there. It also involves storing your data outside your infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;This demo shows how you can use AI related features in your infrastructure in a way that makes sense to your users.&lt;/p&gt; &#xA;&lt;h2&gt;AI&lt;/h2&gt; &#xA;&lt;p&gt;The following AI features are powered by our new Vector component.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tags&lt;/strong&gt; — Classify data based on text that&#39;s more descriptive and carries more context&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Related&lt;/strong&gt; — Find semantically similar data in your database&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt; — Deep search your data and images using natural language&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search Images&lt;/strong&gt; — Do a deep search through your data, including your images&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Vector Component&lt;/h3&gt; &#xA;&lt;p&gt;The Vector component is based on Amazon Bedrock and it exposes a couple of functions that makes it easy to use AI with your data.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ingest&lt;/code&gt;: This takes some text, generates an embedding with a given model, and stores it in a Vector database powered by RDS. Also takes some metadata to tag the data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;retrieve&lt;/code&gt;: Takes a prompt and optionally the metadata to filter on. Returns matching results with a score 0 - 1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Models&lt;/h3&gt; &#xA;&lt;p&gt;Currently the embeddings can be generated using the &lt;code&gt;titan-embed-text-v1&lt;/code&gt;, &lt;code&gt;titan-embed-image-v1&lt;/code&gt;, and &lt;code&gt;text-embedding-ada-002&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ion&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sst/ion&#34;&gt;❍ Ion&lt;/a&gt; is an experimental new engine for &lt;a href=&#34;https://sst.dev&#34;&gt;SST&lt;/a&gt; that has some unique advantages over our previous CDK based engine. Here are a couple that you can see in action in this repo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It&#39;s a lot faster to deploy, 10x faster&lt;/li&gt; &#xA; &lt;li&gt;There are &lt;a href=&#34;https://raw.githubusercontent.com/sst/demo-ai-app/main/sst.config.ts#L15&#34;&gt;no stacks&lt;/a&gt; or stack limits&lt;/li&gt; &#xA; &lt;li&gt;No cyclical dependency issues in your resources&lt;/li&gt; &#xA; &lt;li&gt;Access linked resources in Next.js doesn&#39;t need top-level await&lt;/li&gt; &#xA; &lt;li&gt;Next.js 14 with linked resources are deployed in order and don&#39;t need a &lt;em&gt;double deploy&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Next.js apps have access to linked resources without the need for &lt;a href=&#34;https://raw.githubusercontent.com/sst/demo-ai-app/main/package.json#L7&#34;&gt;&lt;code&gt;sst bind next build&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;This demo works by ingesting movie data from IMDB, generating embeddings, and storing it in a Vector database. The Next.js app then retrieves the data from the Vector database.&lt;/p&gt; &#xA;&lt;p&gt;The sample app is made up of &lt;strong&gt;4 simple components&lt;/strong&gt; defined in the &lt;a href=&#34;https://raw.githubusercontent.com/sst/demo-ai-app/main/sst.config.ts&#34;&gt;&lt;code&gt;sst.config.ts&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A DynamoDB table to store the movies&lt;/li&gt; &#xA; &lt;li&gt;An S3 bucket to store the posters&lt;/li&gt; &#xA; &lt;li&gt;A Vector database to store the embeddings&lt;/li&gt; &#xA; &lt;li&gt;A Next.js app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Join the SST community over on &lt;a href=&#34;https://discord.gg/sst&#34;&gt;Discord&lt;/a&gt; and follow us on &lt;a href=&#34;https://twitter.com/SST_dev&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>placemark/placemark</title>
    <updated>2024-01-22T01:43:58Z</updated>
    <id>tag:github.com,2024-01-22:/placemark/placemark</id>
    <link href="https://github.com/placemark/placemark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Placemark open source project&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Placemark&lt;/h3&gt; &#xA;&lt;p&gt;The Placemark application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this is an early open source release of the codebase. I&#39;m happy to help to some extent with setup, but I can&#39;t provide end-to-end integration assistance - it&#39;s a fairly complex web application and it works in the environment it was written in, but it will not work in every environment: it almost certainly won&#39;t work on Windows, for example.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;I&#39;m happy to accept PRs&lt;/strong&gt; that make this easier to set up in different environments, to make features optional (to reduce the many environment variables required), or other broad improvements or fixes! I&#39;m not sure about entirely &lt;em&gt;removing&lt;/em&gt; features, given that I think it&#39;s useful to have this as an example of a fully-integrated real-world application, and things like error tracking are essential for that.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/placemark/placemark-oss/issues&#34;&gt;Opening an issue&lt;/a&gt; is the best way to get me –&amp;nbsp;I&#39;ll get notifications for new issues.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/placemark/placemark/main/docs/architecture.md&#34;&gt;docs/architecture.md&lt;/a&gt; for notes on the technologies under the hood.&lt;/p&gt; &#xA;&lt;h3&gt;Running with Docker&lt;/h3&gt; &#xA;&lt;p&gt;✨ There&#39;s now an example Docker file! See &lt;a href=&#34;https://github.com/placemark/placemark/raw/main/docs/docker.md&#34;&gt;docs/docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Running in Render&lt;/h3&gt; &#xA;&lt;p&gt;The application is configured by the &lt;code&gt;render.yaml&lt;/code&gt; file which is a &lt;a href=&#34;https://render.com/docs/blueprint-spec&#34;&gt;Render blueprint&lt;/a&gt;. Hosting it on Render and using that is probably the fastest route to getting it on running, but it will work on similar hosting setups, like Railway, Heroku, or Flightcontrol. It might also work on Fly.io.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: it seems like &lt;a href=&#34;https://github.com/prisma/prisma&#34;&gt;Prisma&lt;/a&gt;, which Placemark uses as its ORM, has &lt;a href=&#34;https://github.com/prisma/prisma/issues/19743&#34;&gt;a bug when used within a Docker container on a Mac with an M chip&lt;/a&gt;. This bug is fixed in Prisma 5, so an upgrade to Prisma 5 would be great - in the meantime, this was originally developed without Docker and doesn&#39;t have the bug in macOS.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;This project is built with &lt;a href=&#34;https://github.com/yarnpkg/yarn&#34;&gt;yarn&lt;/a&gt; and last tested with version &lt;code&gt;1.22.19&lt;/code&gt; of yarn. There&#39;s a lockfile for yarn. Installing with npm or another package manager will yield different, and potentially broken, dependencies.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m open to switching to npm if there is a PR submitted.&lt;/p&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;This application reads &lt;code&gt;.env&lt;/code&gt; files when in development, and requires environment variables in production. It checks these environment variables when it starts up, so it &lt;em&gt;will crash&lt;/em&gt; if one is missing. This is good: it&#39;s better for applications to crash now rather than later (see &lt;a href=&#34;http://www.catb.org/~esr/writings/taoup/html/ch01s06.html&#34;&gt;rule of repair&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can see a list of the required environment variables at&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/placemark/placemark/main/app/lib/env_server.ts&#34;&gt;app/lib/env_server.ts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/placemark/placemark/main/app/lib/env_client.ts&#34;&gt;app/lib/env_client.ts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that there&#39;s a lot of these. Placemark relies on:&lt;/p&gt; &#xA;&lt;h3&gt;Required&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub&lt;/li&gt; &#xA; &lt;li&gt;Replicache&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Optional&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Posthog&lt;/li&gt; &#xA; &lt;li&gt;Cloudflare&lt;/li&gt; &#xA; &lt;li&gt;Postmark&lt;/li&gt; &#xA; &lt;li&gt;WorkOS&lt;/li&gt; &#xA; &lt;li&gt;Stripe&lt;/li&gt; &#xA; &lt;li&gt;CampaignMonitor&lt;/li&gt; &#xA; &lt;li&gt;Logtail&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of these could be made optional because self-hosted installations probably don&#39;t need Stripe. Doing this is very possible, and I&#39;d gladly accept PRs doing so - but it&#39;s probably not something that I&#39;ll (tmcw) be able to do with my limited time.&lt;/p&gt; &#xA;&lt;h3&gt;Infrastructure&lt;/h3&gt; &#xA;&lt;p&gt;Placemark relies on two servers:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The application (this repository)&lt;/li&gt; &#xA; &lt;li&gt;A Postgres 14 (or higher) database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Domains&lt;/h3&gt; &#xA;&lt;p&gt;On the web, Placemark is served under three domains:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;app.placemark.io&lt;/code&gt;, the main application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;api.placemark.io&lt;/code&gt;, the API&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The API is served from the same web server as the app. This is done by using a &lt;a href=&#34;https://workers.cloudflare.com/&#34;&gt;Cloudflare Worker&lt;/a&gt; which proxies requests from &lt;code&gt;api.placemark.io&lt;/code&gt; to &lt;code&gt;app.placemark.io&lt;/code&gt; after setting a rule for the paths that can be requested. There&#39;s an example of this worker in &lt;code&gt;docs/worker_example.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Testing Local SSL&lt;/h3&gt; &#xA;&lt;p&gt;This probably isn&#39;t necessary for anyone: for myself, I was having to test things that only work under SSL, like testing geolocation on an iPhone, and this was required. You probably don&#39;t need to use local SSL.&lt;/p&gt; &#xA;&lt;p&gt;Requires Tailscale with &lt;code&gt;tailscale cert&lt;/code&gt; and the certs moved to this directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;caddy start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Stripe&lt;/h3&gt; &#xA;&lt;p&gt;Stripe is becoming an optional dependency of this project. There&#39;s a webhook proxy in &lt;code&gt;./_scripts/webhook-proxy.js&lt;/code&gt; which you can run optionally by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yarn dev-with-stripe&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>mihonapp/website</title>
    <updated>2024-01-22T01:43:58Z</updated>
    <id>tag:github.com,2024-01-22:/mihonapp/website</id>
    <link href="https://github.com/mihonapp/website" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official website for the Mihon app.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://mihon.app&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mihonapp/website/main/.github/assets/logo.png&#34; width=&#34;90&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Mihon &lt;a href=&#34;https://raw.githubusercontent.com/mihonapp/website/main/#&#34;&gt;Website&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Full-featured reader&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Discover and read manga, webtoons, comics, and more – easier than ever on your Android device.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Discord server&#34; href=&#34;https://discord.gg/mihon&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1195734228319617024.svg?label=&amp;amp;labelColor=6A7EC2&amp;amp;color=7389D8&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&#34;&gt; &lt;/a&gt; &lt;a title=&#34;GitHub downloads&#34; href=&#34;https://github.com/mihonapp/mihon/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/mihonapp/mihon/total?label=downloads&amp;amp;labelColor=27303D&amp;amp;color=0D1117&amp;amp;logo=github&amp;amp;logoColor=FFFFFF&amp;amp;style=flat&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a title=&#34;Netlify deployment&#34; href=&#34;https://app.netlify.com/sites/mihonapp/deploys&#34;&gt; &lt;img src=&#34;https://api.netlify.com/api/v1/badges/95d9e2f8-42ae-4e40-8c99-82b870c51e1a/deploy-status&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Contributing&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mihonapp/website/main/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/mihonapp/website/main/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; · &lt;a href=&#34;https://mihon.app/sandbox/style-guide/&#34;&gt;Project style guide&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;If you got any questions, join our &lt;a target=&#34;_blank&#34; href=&#34;https://discord.gg/mihon&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Repositories&lt;/h3&gt; &#xA;&lt;div&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mihonapp/mihon/&#34;&gt; &lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=mihonapp&amp;amp;repo=mihon&amp;amp;bg_color=161B22&amp;amp;text_color=c9d1d9&amp;amp;title_color=818CF8&amp;amp;icon_color=818CF8&amp;amp;border_radius=8&amp;amp;hide_border=true&#34; alt=&#34;Android App&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;License&lt;/h3&gt; &#xA;&lt;pre align=&#34;center&#34;&gt;Copyright © 2024 The Mihon Open Source Project&lt;br&gt;&lt;br&gt;This Source Code Form is subject to the terms of the Mozilla Public&lt;br&gt;License, v. 2.0. If a copy of the MPL was not distributed with this&lt;br&gt;file, You can obtain one at http://mozilla.org/MPL/2.0/.&lt;/pre&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Credits&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Thank you to all the people who have already contributed!&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;a href=&#34;https://github.com/mihonapp/mihon/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mihonapp/website&#34; width=&#34;800&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
</feed>