<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:59:50Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yaklang/yakit</title>
    <updated>2022-06-29T01:59:50Z</updated>
    <id>tag:github.com,2022-06-29:/yaklang/yakit</id>
    <link href="https://github.com/yaklang/yakit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cyber Security ALL-IN-ONE Platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YAKIT-网络安全单兵工具&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yaklang/yakit/raw/master/README-EN.md&#34;&gt;English&lt;/a&gt; • &lt;a href=&#34;https://github.com/yaklang/yakit/raw/master/README.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;本工具仅面向 &lt;strong&gt;合法授权&lt;/strong&gt; 的企业安全建设行为与个人学习行为，如您需要测试本工具的可用性，请自行搭建靶机环境。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。请勿对非授权目标进行扫描。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;禁止对本软件实施逆向工程、反编译、试图破译源代码，植入后门传播恶意软件等行为。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果发现上述禁止行为，我们将保留追究您法律责任的权利。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。&lt;/p&gt; &#xA;&lt;p&gt;在安装并使用本工具前，请您 &lt;strong&gt;务必审慎阅读、充分理解各条款内容&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;限制、免责条款或者其他涉及您重大权益的条款可能会以 &lt;strong&gt;加粗&lt;/strong&gt;、加下划线等形式提示您重点注意。&lt;/p&gt; &#xA;&lt;p&gt;除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; &#xA;&lt;h2&gt;1. YAK语言简介&lt;/h2&gt; &#xA;&lt;p&gt;一群拥有丰富网络安全从业经验的工程师，对现有的通用编程语言感到不满——他们想要的是一个开源的语言，它要具备Golang的高并发执行能力；要像Python一样&lt;strong&gt;语法简单&lt;/strong&gt;；要是个&lt;strong&gt;脚本语言&lt;/strong&gt;，这样可以快速分发给同伴；要可以一次编写直接执行，而不要安装第三方库；要原生&lt;strong&gt;具备网络安全专用能力&lt;/strong&gt;，如端口探测、SYN无状态扫描、Nmap的服务指纹，并以函数形式扩展提供；还有，它应该是&lt;strong&gt;图灵完备&lt;/strong&gt;的，&lt;strong&gt;易于学习&lt;/strong&gt;的……&lt;/p&gt; &#xA;&lt;p&gt;所以，Yak 语言诞生了！&lt;/p&gt; &#xA;&lt;p&gt;YAK是国际上首个为网络安全而生的“领域特定语言（Domain Specific Language）”，提供了非常强大的安全能力。Yak是绝大部分 “数据描述语言/容器语言” 的超集，宿主语言采用Golang，具备Go语言所有能力与库生态，具备自己的VSCode插件等。Yak语法可自定义，是一门图灵完备的脚本语言，完全&lt;strong&gt;国产&lt;/strong&gt;。通过函数提供各类底层安全能力，包括端口扫描、指纹识别、poc框架、shell管理、MITM劫持、强大的插件系统等。&lt;/p&gt; &#xA;&lt;h2&gt;2. YAKIT单兵工具简介&lt;/h2&gt; &#xA;&lt;p&gt;Yakit是基于Yak语言开发的网络安全单兵工具，旨在打造一个覆盖渗透测试全流程的网络安全工具库。&lt;/p&gt; &#xA;&lt;p&gt;受限于Yak使用形式，用户必须学习 Yak 语言并同时具备对安全的一定理解。为了让 Yak 本身的安全能力更容易被大家接受和使用，我们为Yak编写了gRPC服务器，并使用这个服务器构建了一个客户端：Yakit，通过界面化GUI的形式，降低大家使用Yak的门槛。&lt;/p&gt; &#xA;&lt;h3&gt;2.1 Burpsuite 的年轻中国挑战者&lt;/h3&gt; &#xA;&lt;p&gt;Burpsuite几乎成为全球WEB安全从业者必装的安全测试工具，然而十余年来尚无一个可替代的解决方案。破解版被投毒风险高、商业版太贵、插件难写、依赖java等等问题逐渐显露。我们团队基于yak顺手实现了BurpSuite的核心功能，期望给所有的从业者一个新的选择。完全替代并不是我们终极目标，替代并超越，切实降低门槛，提升从业者工作效率，才是我们的追求。&lt;/p&gt; &#xA;&lt;p&gt;当前，我们已经实现了BurpSuite常用的功能，包括拦截并修改请求/返回报文、history模块、repeater模块、intruder模块，并且在我们的fuzz模块中创新性的实现了GUI标签fuzz，具备更好的可扩展性。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;HTTP History&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106162406937.png&#34; alt=&#34;image-20220106162406937&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WEB Fuzzer:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106162442487.png&#34; alt=&#34;image-20220106162442487&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;被动漏洞检测系统：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106165619622.png&#34; alt=&#34;image-20220106165619622&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.2 Poc/Exp超集&lt;/h3&gt; &#xA;&lt;p&gt;在实战安全测试过程中，我们经常面临一个需求，即已知对方使用了weblogic/struts2等，需要一键检测是否存在指定漏洞，然而这么简单的需求我们当下却要打开各种专用工具不停切换，甚至为了安装某个工具而不得不切换Windows/Linux，或者安装一堆复杂的依赖。在yakit上，我们将致力于提供一站式的解决方案，您只需要输入目标，点击开始检测按钮，即可快速得到结果。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106162908302.png&#34; alt=&#34;image-20220106162908302&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;为了快速提升poc的检测能力，我们在yak语言中原生集成了nuclei(MIT协议)，当然，在插件模块中，你可以基于yak/yaml编写各种你想要的检测能力，并将插件快速展示到左侧菜单栏中。&lt;strong&gt;快来跟我们一起完善Yakit插件吧&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.3 ”地表最强“的插件系统&lt;/h3&gt; &#xA;&lt;p&gt;作为一个单兵工具平台，自然离不开可快速扩展的插件系统。理论上一个带界面的插件，编写者需要对前端、后台都比较熟悉，这增大了开发者的进入门槛。与其他平台不同的是，我们在设计时，插件核心代码全部用yak实现，并且可以通过yakit库实现与界面的交互，除此之外，为了配得上”地表最强“，您还可以参考以下文章的描述：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yaklang.io/products/professional/yak-script-system&#34;&gt;插件设计思路&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yaklang.io/products/professional/yakit-plugin-how-to&#34;&gt;插件编写指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106162406945.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.4 Teamserver设计&lt;/h3&gt; &#xA;&lt;p&gt;由于 Yak 核心引擎与 Yakit 的分离式安装，Yakit 仅仅作为一个客户端而存在，Yakit 的使用理所当然就应该存在两种模式。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;本地模式：默认启动一个随机端口的 &lt;code&gt;yak grpc&lt;/code&gt; 服务器&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;远程模式：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yak grpc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;可以启动在任何平台 / 任何网络位置，包括&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;远端托管主机 ECS/VPS&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;本地个人 PC&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;内网环境&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;除此以外，我们还创新性的加入了brige模式，可方便的将内网通过反弹模式映射到公网，在这种模式下，我们不在需要安装frp之类的端口转发工具，而是在一个GUI界面下，执行内网横向移动操作，极大的提升了测试效率。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106203601893.png&#34; alt=&#34;image-20220106203601893&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.5 原生的JAVA反序列化能力支持&lt;/h3&gt; &#xA;&lt;p&gt;在当下环境，我们要检测java反序列化漏洞，在生成payload阶段，我们通常需要借助&lt;a href=&#34;https://github.com/frohoff/ysoserial&#34;&gt;ysoserial&lt;/a&gt;，然而这种解决方案不仅需要安装java环境，还甚至需要安装指定版本的java才行。而yakit则使用yak原生实现了java反序列化协议的支持，如此一来，我们即可方便的通过编写yak脚本快速对目标进行测试。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/image-20220106204618700.png&#34; alt=&#34;image-20220106204618700&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;该部分的使用详情请参见文章&lt;a href=&#34;https://mp.weixin.qq.com/s/HdUARJFQu3WMWvvqs9VGyg&#34;&gt;”新年献礼：使用 Yakit 打破 Java 序列化协议语言隔离“&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/yaklang/yakit&#34;&gt;&lt;img src=&#34;https://starchart.cc/yaklang/yakit.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3. 我们的目标&lt;/h2&gt; &#xA;&lt;p&gt;​ Yakit作为Burpsuite 的年轻中国挑战者，我们的第一个目标是，成为像Burpsuite一样有技术深度的产品，让Burpsuite的盗版用户能有一个更好、更安全的工具去选择和使用。但脚步却不仅仅停在这 里，我们的梦想是，成为安全领域的matlab，拥有强大且丰富的算法能力，成为安全领域的基座。 ​ Yak和Yakit想做的从来不是像现在安全工具一样的孤岛，而是通过融合，为大家提供一个拥有强大且完备安全能力的产品。Yak和Yakit从开源到编写包含实战案例的安全研发教程，以及Yakit的个性自主化编辑，都在告诉大家一个理念，我们不单单只是想要为大家提供好用的工具，而是为了全面提升大家的安全能力，真正达到人与产品的共同进步。业内大多产品都强调傻瓜式的一键操作与结果可视化，这也是Yakit和Yak最大的不同，我们强调的是用户在操作中的参与感，在不断地学习中，像升级打怪一样，从小白用户蜕变成专业用户，实现国内安全从业人员的能力提升，形成自有的安全壁垒，这才是我们团队的终极目标。&lt;/p&gt; &#xA;&lt;h2&gt;4. 官网安装及使用教程&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yaklang.io/docs/startup&#34;&gt;https://www.yaklang.io/docs/startup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;5. 联系我们&lt;/h2&gt; &#xA;&lt;p&gt;如果对我们的产品有任何建设性意见或 BUG 反馈，欢迎大家提 issue&lt;/p&gt; &#xA;&lt;p&gt;或通过微信公众号联系我们，也欢迎联系商业授权与合作&lt;/p&gt; &#xA;&lt;p&gt;进交流群或有问题想与技术同学沟通，请联系并添加运营微信号：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/wechat2.png&#34; alt=&#34;wechat2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;公众号二维码：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yaklang/yakit/master/imgs/wechat1.jpeg&#34; alt=&#34;wechat1&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opensumi/core</title>
    <updated>2022-06-29T01:59:50Z</updated>
    <id>tag:github.com,2022-06-29:/opensumi/core</id>
    <link href="https://github.com/opensumi/core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 A framework helps you quickly build Cloud or Desktop IDE products.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/opensumi/core&#34;&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i2/O1CN01dqjQei1tpbj9z9VPH_!!6000000005951-55-tps-87-78.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/opensumi/core/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/opensumi/core/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@opensumi/ide-core-common&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@opensumi/ide-core-common.svg?sanitize=true&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/@opensumi/ide-core-common&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@opensumi/ide-core-common.svg?sanitize=true&#34; alt=&#34;NPM downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/opensumi/core&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/opensumi/core/branch/main/graph/badge.svg?token=07JAPLU957&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cla-assistant.io/opensumi/core&#34;&gt;&lt;img src=&#34;https://cla-assistant.io/readme/badge/opensumi/core&#34; alt=&#34;CLA assistant&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensumi/core/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/@opensumi/ide-core-common.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensumi/core/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discussions-on%20github-blue&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;OpenSumi&lt;/h1&gt; &#xA;&lt;p&gt;A framework helps you quickly build Cloud or Desktop IDE products.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i2/O1CN018JorOL1oWlLmbzGv0_!!6000000005233-2-tps-2844-1796.png&#34; alt=&#34;perview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/opensumi/core/main/README-zh_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚡️ Quick start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install&#xA;$ npm run init&#xA;$ npm run download-extension  # Optional&#xA;$ npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;tools/workspace&lt;/code&gt; folder in the project would be opened, or you can run the project by specifying the directory in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ MY_WORKSPACE={local_path} npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Usually, you may still encounter some system-level environment dependencies. You can visit &lt;a href=&#34;https://raw.githubusercontent.com/opensumi/core/main/CONTRIBUTING.md#development-environment-preparation&#34;&gt;Development Environment Preparation&lt;/a&gt; to see how to install the corresponding environment dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;📕 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For complete documentation: &lt;a href=&#34;https://opensumi.com&#34;&gt;opensumi.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔥 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read through our &lt;a href=&#34;https://raw.githubusercontent.com/opensumi/core/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to learn about our submission process, coding rules and more.&lt;/p&gt; &#xA;&lt;h2&gt;🙋‍♀️ Want to Help?&lt;/h2&gt; &#xA;&lt;p&gt;Want to report a bug, contribute some code, or improve documentation? Excellent! Read up on our &lt;a href=&#34;https://raw.githubusercontent.com/opensumi/core/main/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt; for contributing and then check out one of our issues labeled as help wanted or good first issue.&lt;/p&gt; &#xA;&lt;h2&gt;🧑‍💻 DingTalk Group&lt;/h2&gt; &#xA;&lt;p&gt;use &lt;a href=&#34;https://www.dingtalk.com/&#34;&gt;DingTalk&lt;/a&gt; APP scan or join the group with the number &lt;code&gt;34355491&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i1/O1CN01k3gCmL1HWPjLchVv7_!!6000000000765-0-tps-200-199.jpg&#34; alt=&#34;dingtalk&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📃 License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2019-present Alibaba Group Holding Limited, Ant Group Co. Ltd.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/opensumi/core/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;h2&gt;✨ Contributors&lt;/h2&gt; &#xA;&lt;p&gt;❤️ Thanks goes to these wonderful people!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/opensumi/core/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=opensumi/core&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>date-fns/date-fns</title>
    <updated>2022-06-29T01:59:50Z</updated>
    <id>tag:github.com,2022-06-29:/date-fns/date-fns</id>
    <link href="https://github.com/date-fns/date-fns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⏳ Modern JavaScript date utility library ⌛️&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://date-fns.org/&#34;&gt; &lt;img alt=&#34;date-fns&#34; title=&#34;date-fns&#34; src=&#34;https://raw.githubusercontent.com/date-fns/date-fns/master/docs/logotype.svg?sanitize=true&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;date-fns&lt;/b&gt; provides the most comprehensive, yet simple and consistent toolset &lt;br&gt; for manipulating &lt;b&gt;JavaScript dates&lt;/b&gt; in &lt;b&gt;a browser&lt;/b&gt; &amp;amp; &lt;b&gt;Node.js&lt;/b&gt;. &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://date-fns.org/docs/Getting-Started/&#34;&gt;📖&amp;nbsp; Documentation&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://jobs.date-fns.org/&#34;&gt;🧑‍💻&amp;nbsp; JavaScript Jobs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;It&#39;s like &lt;a href=&#34;https://lodash.com&#34;&gt;Lodash&lt;/a&gt; for dates&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It has &lt;a href=&#34;https://date-fns.org/docs/Getting-Started/&#34;&gt;&lt;strong&gt;200+ functions&lt;/strong&gt; for all occasions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Pick what you need. Works with webpack, Browserify, or Rollup and also supports tree-shaking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native dates&lt;/strong&gt;: Uses existing native type. It doesn&#39;t extend core objects for safety&#39;s sake.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Immutable &amp;amp; Pure&lt;/strong&gt;: Built using pure functions and always returns a new date instance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeScript &amp;amp; Flow&lt;/strong&gt;: Supports both Flow and TypeScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;I18n&lt;/strong&gt;: Dozens of locales. Include only what you need.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://date-fns.org/&#34;&gt;and many more benefits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { compareAsc, format } from &#39;date-fns&#39;&#xA;&#xA;format(new Date(2014, 1, 11), &#39;yyyy-MM-dd&#39;)&#xA;//=&amp;gt; &#39;2014-02-11&#39;&#xA;&#xA;const dates = [&#xA;  new Date(1995, 6, 2),&#xA;  new Date(1987, 1, 11),&#xA;  new Date(1989, 6, 10),&#xA;]&#xA;dates.sort(compareAsc)&#xA;//=&amp;gt; [&#xA;//   Wed Feb 11 1987 00:00:00,&#xA;//   Mon Jul 10 1989 00:00:00,&#xA;//   Sun Jul 02 1995 00:00:00&#xA;// ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library is available as an &lt;a href=&#34;https://www.npmjs.com/package/date-fns&#34;&gt;npm package&lt;/a&gt;. To install the package run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install date-fns --save&#xA;# or with yarn&#xA;yarn add date-fns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://date-fns.org/&#34;&gt;See date-fns.org&lt;/a&gt; for more details, API, and other docs.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;!-- END OF README-JOB SECTION --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kossnocorp.mit-license.org/&#34;&gt;MIT © Sasha Koss&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>