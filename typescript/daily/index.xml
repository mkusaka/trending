<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-09T01:38:42Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Tencent/tmagic-editor</title>
    <updated>2023-09-09T01:38:42Z</updated>
    <id>tag:github.com,2023-09-09:/Tencent/tmagic-editor</id>
    <link href="https://github.com/Tencent/tmagic-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TMagic&lt;/h1&gt; &#xA;&lt;p&gt;TMagic 可视化搭建平台。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💪 Vue 3.0 Composition API&lt;/li&gt; &#xA; &lt;li&gt;🔥 Written in TypeScript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;文档&lt;/h1&gt; &#xA;&lt;p&gt;文档请移步 &lt;a href=&#34;https://tencent.github.io/tmagic-editor/docs/index.html&#34;&gt;https://tencent.github.io/tmagic-editor/docs/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;目前文档仍在逐步完善中，如有疑问欢迎给我们提 issue。&lt;/p&gt; &#xA;&lt;h1&gt;Playground 体验&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tencent.github.io/tmagic-editor/playground/index.html&#34;&gt;https://tencent.github.io/tmagic-editor/playground/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;环境准备&lt;/h2&gt; &#xA;&lt;p&gt;node.js &amp;gt;= 16&lt;/p&gt; &#xA;&lt;p&gt;pnpm &amp;gt;= 8&lt;/p&gt; &#xA;&lt;p&gt;先安装 pnpm&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install -g pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后安装依赖&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pnpm bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;运行项目&lt;/h2&gt; &#xA;&lt;p&gt;执行命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pnpm playground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;最后在浏览器中打开&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:8098/tmagic-editor/playground/&#34;&gt;http://localhost:8098/tmagic-editor/playground/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;即可得到一个魔方编辑器示例项目&lt;/p&gt; &#xA;&lt;h2&gt;magic-admin&lt;/h2&gt; &#xA;&lt;p&gt;已迁移至 &lt;a href=&#34;https://github.com/vft-magic/tmagic-admin&#34;&gt;https://github.com/vft-magic/tmagic-admin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目介绍&lt;/h2&gt; &#xA;&lt;p&gt;在本项目中，我们核心内容，是包含在 &lt;code&gt;packages/editor&lt;/code&gt; 中的编辑器，以及 &lt;code&gt;runtime&lt;/code&gt; 和 &lt;code&gt;packages/ui&lt;/code&gt; 提供的各个前端框架相关的 runtime 和 ui。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages&lt;/code&gt; 目录中提供的内容，我们都以 npm 包形式输出，开发者可以通过安装对应的包来使用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;runtime&lt;/code&gt; 是我们提供的编辑器活动页和编辑器模拟器运行的页面项目示例。可以直接使用，也可以参考并自行实现。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;playground&lt;/code&gt; 是一个简单的编辑器项目示例。即使用了 &lt;code&gt;packages&lt;/code&gt; 和 &lt;code&gt;runtime&lt;/code&gt; 内容的集成项目。开发者可以参考 playground，使用魔方提供的能力实现一个满足业务方需求的编辑器。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;编辑器&lt;/h3&gt; &#xA;&lt;p&gt;通过安装和使用 @tmagic/editor，可以快速搭建起一个魔方编辑器。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_88b7d-32_509802977_1635842258505918&#34; alt=&#34;魔方demo图&#34;&gt; &#xA;&lt;h3&gt;页面渲染&lt;/h3&gt; &#xA;&lt;p&gt;runtime 是魔方提供的页面渲染环境。通过加载在编辑器中产出的 DSL，即可得到魔方编辑器希望拥有的最终产物，一个活动页面。我们提供了 vue2/vue3/react 几个版本的 runtime。&lt;/p&gt; &#xA;&lt;p&gt;通过魔方编辑器和 runtime 渲染，以及通过自定义的复杂组件开发，可以在魔方项目上，搭建出复杂而精美的页面。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_7cf5e6-5_466783002_1637935497991411&#34; width=&#34;375&#34;&gt; &#xA;&lt;h3&gt;表单渲染&lt;/h3&gt; &#xA;&lt;p&gt;魔方的表单配置项，使用了我们开发的基于 element-ui 的 @tmagic/form，@tmagic/form 也可以在其他地方单独使用。支持渲染 JS Schema 提供的表单描述。&lt;/p&gt; &#xA;&lt;img src=&#34;https://image.video.qpic.cn/oa_28dbde-2_1333081854_1637935825410557&#34;&gt; &#xA;&lt;h3&gt;使用&lt;/h3&gt; &#xA;&lt;p&gt;playground 的示例项目，就是为开发者提供的基础应用示例。开发者可以基于此或者参考自行实现，搭建一个基于魔方的可视化搭建平台。&lt;/p&gt; &#xA;&lt;p&gt;tmagic-editor主要定位是搭建生成移动端H5页面，如果有搭建PC端低代码平台的需求，可以了解一下腾讯出品的另外一个低代码平台：&lt;a href=&#34;https://wujicode.cn?from=tmagic&#34;&gt;无极低代码平台&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;参与贡献&lt;/h3&gt; &#xA;&lt;p&gt;如果你有好的意见或建议，欢迎给我们提 Issues 或 Pull Requests，为提升魔方可视化编辑器开发体验贡献力量。&lt;br&gt;详见：&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/tmagic-editor/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;欢迎入群交流&lt;/h3&gt; &#xA;&lt;img src=&#34;https://vfiles.gtimg.cn/vupload/20220412/b85d331649748582992.jpg&#34; width=&#34;375&#34;&gt;</summary>
  </entry>
  <entry>
    <title>measuredco/puck</title>
    <updated>2023-09-09T01:38:42Z</updated>
    <id>tag:github.com,2023-09-09:/measuredco/puck</id>
    <link href="https://github.com/measuredco/puck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The self-hosted drag and drop editor for React.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;puck&lt;/h1&gt; &#xA;&lt;p&gt;The self-hosted, drag and drop editor for React.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🖱️ &lt;strong&gt;Drag and drop&lt;/strong&gt;: Visual editing for your existing React component library&lt;/li&gt; &#xA; &lt;li&gt;🌐 &lt;strong&gt;Integrations&lt;/strong&gt;: Load your content from a 3rd party headless CMS&lt;/li&gt; &#xA; &lt;li&gt;✍️ &lt;strong&gt;Inline editing&lt;/strong&gt;: Author content directly via puck for convenience&lt;/li&gt; &#xA; &lt;li&gt;⭐️ &lt;strong&gt;No vendor lock-in&lt;/strong&gt;: Self-host or integrate with your existing application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://puck-editor-demo.vercel.app/edit&#34;&gt;See demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Render the editor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Editor.jsx&#xA;import { Puck } from &#34;@measured/puck&#34;;&#xA;&#xA;// Create puck component config&#xA;const config = {&#xA;  components: {&#xA;    HeadingBlock: {&#xA;      fields: {&#xA;        children: {&#xA;          type: &#34;text&#34;,&#xA;        },&#xA;      },&#xA;      render: ({ children }) =&amp;gt; {&#xA;        return &amp;lt;h1&amp;gt;{children}&amp;lt;/h1&amp;gt;;&#xA;      },&#xA;    },&#xA;  },&#xA;};&#xA;&#xA;// Describe the initial data&#xA;const initialData = {};&#xA;&#xA;// Save the data to your database&#xA;const save = (data) =&amp;gt; {};&#xA;&#xA;// Render Puck editor&#xA;export function Editor() {&#xA;  return &amp;lt;Puck config={config} data={initialData} onPublish={save} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Render the page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Page.jsx&#xA;import { Render } from &#34;@measured/puck&#34;;&#xA;&#xA;export function Page() {&#xA;  return &amp;lt;Render config={config} data={data} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the package&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i @measured/puck --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or generate a puck application using a recipe&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx create-puck-app my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Recipes&lt;/h2&gt; &#xA;&lt;p&gt;Puck is a React component that can be easily integrated into your existing application. We also provide helpful recipes for common use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes/next&#34;&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/a&gt;: Next.js app example&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Puck can be configured to work with plugins. Plugins can extend the functionality to support novel functionality.&lt;/p&gt; &#xA;&lt;h3&gt;Official plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/packages/plugin-heading-analyzer&#34;&gt;&lt;code&gt;heading-analyzer&lt;/code&gt;&lt;/a&gt;: Analyze the heading outline of your page and be warned when you&#39;re not respecting WCAG 2 accessibility standards.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developing a plugin&lt;/h3&gt; &#xA;&lt;p&gt;The plugin API follows a React paradigm. Each plugin passed to the Puck editor can provide three functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;renderRoot&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root node of the preview content&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;renderRootFields&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root fields&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;renderFields&lt;/code&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the fields for the currently selected component&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each render function receives the &lt;code&gt;children&lt;/code&gt; prop, which you must render, and the &lt;code&gt;data&lt;/code&gt; prop, which can be used to read the data model.&lt;/p&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s a basic plugin that renders a &#34;My plugin&#34; heading in the root field area:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const myPlugin = {&#xA;  renderRootFields: (props) =&amp;gt; (&#xA;    &amp;lt;div&amp;gt;&#xA;      {props.children}&#xA;&#xA;      &amp;lt;h2&amp;gt;My plugin&amp;lt;/h2&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  ),&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;Puck&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;Puck&amp;gt;&lt;/code&gt; component renders the Puck editor.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; (&lt;code&gt;Config&lt;/code&gt;): Puck component configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; (&lt;code&gt;Data&lt;/code&gt;): Initial data to render&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;onChange&lt;/strong&gt; (&lt;code&gt;(Data) =&amp;gt; void&lt;/code&gt; [optional]): Callback that triggers when the user makes a change&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;onPublish&lt;/strong&gt; (&lt;code&gt;(Data) =&amp;gt; void&lt;/code&gt; [optional]): Callback that triggers when the user hits the &#34;Publish&#34; button&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderHeader&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt; [optional]): Render function for overriding the Puck header component&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderHeaderActions&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt; [optional]): Render function for overriding the Puck header actions. Use a fragment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headerTitle&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; [optional]): Set the title shown in the header title&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;headerPath&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; [optional]): Set a path to show after the header title&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;plugins&lt;/strong&gt; (&lt;code&gt;Plugin[]&lt;/code&gt; [optional]): Array of plugins that can be used to enhance Puck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;Render&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;Render&amp;gt;&lt;/code&gt; component renders user-facing UI using Puck data.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; (&lt;code&gt;Config&lt;/code&gt;): Puck component configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; (&lt;code&gt;Data&lt;/code&gt;): Data to render&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Config&lt;/code&gt; object describes which components Puck should render, how they should render and which inputs are available to them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;root&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): Title of the content, typically used for the page title.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;[fieldName]&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): User defined fields, used to describe the input data stored in the &lt;code&gt;root&lt;/code&gt; key.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;render&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render a React component at the root of your component tree. Useful for defining context providers.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;components&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Definitions for each of the components you want to show in the visual editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[componentName]&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): The Field objects describing the input data stored against this component.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;render&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render function for your React component. Receives props as defined in fields.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;defaultProps&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt; [optional]): Default props to pass to your component. Will show in fields.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Field&lt;/code&gt; represents a user input field shown in the Puck interface.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; (&lt;code&gt;text&lt;/code&gt; | &lt;code&gt;textarea&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;select&lt;/code&gt; | &lt;code&gt;radio&lt;/code&gt; | &lt;code&gt;external&lt;/code&gt; | &lt;code&gt;array&lt;/code&gt;): The input type to render&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;label&lt;/strong&gt; (&lt;code&gt;text&lt;/code&gt; [optional]): A label for the input. Will use the key if not provided.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;arrayFields&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Object describing sub-fields for items in an &lt;code&gt;array&lt;/code&gt; input &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[fieldName]&lt;/strong&gt; (&lt;code&gt;Field&lt;/code&gt;): The Field objects describing the input data for each item&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;getItemSummary&lt;/strong&gt; (&lt;code&gt;(object, number) =&amp;gt; string&lt;/code&gt; [optional]): Function to get the name of each item when using the &lt;code&gt;array&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt; field types&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;defaultItemProps&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt; [optional]): Default props to pass to each new item added, when using a &lt;code&gt;array&lt;/code&gt; field type&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; (&lt;code&gt;object[]&lt;/code&gt;): array of items to render for select or radio inputs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;label&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;number&lt;/code&gt; | &lt;code&gt;boolean&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adaptor&lt;/strong&gt; (&lt;code&gt;Adaptor&lt;/code&gt;): Content adaptor if using the &lt;code&gt;external&lt;/code&gt; input type&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;adaptorParams&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): Paramaters passed to the adaptor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Data&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;Data&lt;/code&gt; object stores the puck state.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;root&lt;/strong&gt; (&lt;code&gt;object&lt;/code&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt; (string): Title of the content, typically used for the page title&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;[prop]&lt;/strong&gt; (string): User defined data from &lt;code&gt;root&lt;/code&gt; fields&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;content&lt;/strong&gt; (&lt;code&gt;object[]&lt;/code&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; (string): Component name&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;props&lt;/strong&gt; (object): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;[prop]&lt;/strong&gt; (string): User defined data from component fields&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;Adaptor&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;An &lt;code&gt;Adaptor&lt;/code&gt; can be used to load content from an external content repository, like Strapi.js.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; (&lt;code&gt;string&lt;/code&gt;): The human-readable name of the adaptor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;fetchList&lt;/strong&gt; (&lt;code&gt;(adaptorParams: object) =&amp;gt; object&lt;/code&gt;): Fetch a list of content and return an array&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NB Using an adaptor on the reserved field name &lt;code&gt;_data&lt;/code&gt; will spread the resulting data over your object, and lock the overridden fields.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;code&gt;Plugin&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Plugins that can be used to enhance Puck.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderRoot&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root node of the preview content&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderRootFields&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the root fields&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;renderFields&lt;/strong&gt; (&lt;code&gt;Component&lt;/code&gt;): Render the fields for the currently selected component&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hire the Puck team&lt;/h2&gt; &#xA;&lt;p&gt;Puck is developed and maintained by &lt;strong&gt;Measured&lt;/strong&gt;, a small group of industry veterans with decades of experience helping companies solve hard UI problems. We offer consultancy and development services for scale-ups, SMEs and enterprises.&lt;/p&gt; &#xA;&lt;p&gt;If you need support integrating Puck or creating a beautiful component library, please reach out via &lt;a href=&#34;https://measured.co&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://github.com/measuredco&#34;&gt;Measured Co.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>run-llama/sec-insights</title>
    <updated>2023-09-09T01:38:42Z</updated>
    <id>tag:github.com,2023-09-09:/run-llama/sec-insights</id>
    <link href="https://github.com/run-llama/sec-insights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A real world full-stack application using LlamaIndex&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SEC Insights 🏦&lt;/h1&gt; &#xA;&lt;p&gt;SEC Insights uses the Retrieval Augmented Generation (RAG) capabilities of &lt;a href=&#34;https://github.com/jerryjliu/llama_index&#34;&gt;LlamaIndex&lt;/a&gt; to answer questions about SEC 10-K &amp;amp; 10-Q documents.&lt;/p&gt; &#xA;&lt;p&gt;You can start using the application now at &lt;a href=&#34;https://www.secinsights.ai/&#34;&gt;secinsights.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also check out our &lt;a href=&#34;https://youtu.be/2O52Tfj79T4?si=CYUcaBkc9P9g_m0P&#34;&gt;End-to-End tutorial guide on YouTube&lt;/a&gt; for this project! This video covers product features, system architecture, development environment setup, and how to use this application with your own custom documents &lt;em&gt;(beyond just SEC filings!)&lt;/em&gt;. The video has chapters so you can skip to the section most relevant to you.&lt;/p&gt; &#xA;&lt;h2&gt;Why did we make this? 🤔&lt;/h2&gt; &#xA;&lt;p&gt;As RAG applications look to move increasingly from prototype to production, we thought our developer community would find value in having a complete example of a working real world RAG application.&lt;/p&gt; &#xA;&lt;p&gt;SEC Insights works as well locally as it does in the cloud. It also comes with many product features that will be immediately applicable to most RAG applications.&lt;/p&gt; &#xA;&lt;p&gt;Use this repository as a reference when building out your own RAG application or fork it entirely to start your project off with a solid foundation.&lt;/p&gt; &#xA;&lt;h2&gt;Product Features 😎&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat-based Document Q&amp;amp;A against a pool of documents&lt;/li&gt; &#xA; &lt;li&gt;Citation of source data that LLM response was based on&lt;/li&gt; &#xA; &lt;li&gt;PDF Viewer with highlighting of citations&lt;/li&gt; &#xA; &lt;li&gt;Use of API-based tools (&lt;a href=&#34;https://polygon.io/&#34;&gt;polygon.io&lt;/a&gt;) for answering quantitative questions&lt;/li&gt; &#xA; &lt;li&gt;Token-level streaming of LLM responses via &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&#34;&gt;Server-Sent Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Streaming of Reasoning Steps (Sub-Questions) within Chat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Features 🤓&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Infrastructure-as-code for deploying directly to &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://render.com/&#34;&gt;Render&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Robust local environment setup making use of &lt;a href=&#34;https://localstack.cloud/&#34;&gt;LocalStack&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; compose&lt;/li&gt; &#xA; &lt;li&gt;Monitoring &amp;amp; Profiling provided by &lt;a href=&#34;https://sentry.io/welcome/&#34;&gt;Sentry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Load Testing provided by &lt;a href=&#34;https://loader.io/&#34;&gt;Loader.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Variety of python scripts for REPL-based interaction &amp;amp; data management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack ⚒️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frontend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt; / &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Backend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.sqlalchemy.org/&#34;&gt;SQLAlchemy&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; (gpt-3.5-turbo + text-embedding-ada-002)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;PGVector&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.llamaindex.ai/&#34;&gt;LlamaIndex 🦙&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Infrastructure &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://render.com/&#34;&gt;Render.com&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Backend hosting&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres 15&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Frontend Hosting&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/cloudfront/&#34;&gt;Cloudfront&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;S3&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;System Architecture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.plantuml.com/plantuml/uml/jLJ1RjD04BtxAuPmo2bLsgGIaH0YYMqe0XhL4HoggjhOKsVRzMoqEsuR4F_EncxTDEjGX8GFbdRUcpTldZVfGeXNaX2KMEkI8PC6KvQQRF0ggv7FKJo_d9zUdfry-3WFWgR3wiAzUAtS6vabvJQmDv9MmeW2LYAz4Jd2pm3SCt6dtEYIigbMsi3hy70wZ4O0NKYGOT70a5OuQoW4fqlW9O8mHj_LG2scJORcGMXGFLKzriI9_85mE6pEFYjXDAXvlS8jFAuU3s_qsf1gyubMsGuuLZ8dI95S9VWLR6MIAbrc_psHez6R_cJKdi1pFvbWiH1sxqUAmsWIzlq9uU1usE__pOJQQ2t_R4-lUJWS7KTLTRwKwGsXjN3qN8nqji_gt0YoZeN4EtPzx0NB1bCMbAkzgKJZA8p2bjodW-Zu3way2NVEa5pVGQgB3WWBzV5XtdaiB8zd9zLW1rpKrQdH19_qeZusNswcBUS6xMP0VRqwu-y998FEezoiN2YPmYoCOL8wHNuGd1bvAnWXOMr4ZbDDZFVSS9xqedj6Gq91WkPMfcWRwIIQTYr4MIuCECSNyBQNwJlgxRXrixHQvveEf8POag1KEhbGiDXfQryzGMAptZH_qIHP6qdvfadX5UzjEbqXZKyUFRyumwTxcxX47l_KEj_GfAYQ8Bwwv0wkBSIEp4wq8dSXSNpd5KHsNLekaDX2QJULfSmofFhdOGE_7thdDUMYpR5NsQOtDwAnlWstteTsvaitfDLskUgzynstKXsnpOpNN36RhThXFLxz3Vsv7kMV51j_mNjdgYnKy1i0&#34;&gt;&lt;img src=&#34;https://www.plantuml.com/plantuml/png/jLJ1RjD04BtxAuPmo2bLsgGIaH0YYMqe0XhL4HoggjhOKsVRzMoqEsuR4F_EncxTDEjGX8GFbdRUcpTldZVfGeXNaX2KMEkI8PC6KvQQRF0ggv7FKJo_d9zUdfry-3WFWgR3wiAzUAtS6vabvJQmDv9MmeW2LYAz4Jd2pm3SCt6dtEYIigbMsi3hy70wZ4O0NKYGOT70a5OuQoW4fqlW9O8mHj_LG2scJORcGMXGFLKzriI9_85mE6pEFYjXDAXvlS8jFAuU3s_qsf1gyubMsGuuLZ8dI95S9VWLR6MIAbrc_psHez6R_cJKdi1pFvbWiH1sxqUAmsWIzlq9uU1usE__pOJQQ2t_R4-lUJWS7KTLTRwKwGsXjN3qN8nqji_gt0YoZeN4EtPzx0NB1bCMbAkzgKJZA8p2bjodW-Zu3way2NVEa5pVGQgB3WWBzV5XtdaiB8zd9zLW1rpKrQdH19_qeZusNswcBUS6xMP0VRqwu-y998FEezoiN2YPmYoCOL8wHNuGd1bvAnWXOMr4ZbDDZFVSS9xqedj6Gq91WkPMfcWRwIIQTYr4MIuCECSNyBQNwJlgxRXrixHQvveEf8POag1KEhbGiDXfQryzGMAptZH_qIHP6qdvfadX5UzjEbqXZKyUFRyumwTxcxX47l_KEj_GfAYQ8Bwwv0wkBSIEp4wq8dSXSNpd5KHsNLekaDX2QJULfSmofFhdOGE_7thdDUMYpR5NsQOtDwAnlWstteTsvaitfDLskUgzynstKXsnpOpNN36RhThXFLxz3Vsv7kMV51j_mNjdgYnKy1i0&#34; alt=&#34;System Architecture&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage 💻&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;README.md&lt;/code&gt; files in &lt;code&gt;frontend/&lt;/code&gt; &amp;amp; &lt;code&gt;backend/&lt;/code&gt; folders for individual setup instructions for each. As mentioned above, we also have a YouTube tutorial &lt;a href=&#34;https://youtu.be/2O52Tfj79T4?si=1Tm3zvuqna5ei4Cu&amp;amp;t=677&#34;&gt;here&lt;/a&gt; that covers how to setup up this project&#39;s development environment.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve also included a config for a &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;Github Codespace&lt;/a&gt; in &lt;a href=&#34;https://github.com/run-llama/sec-insights/raw/main/.devcontainer/devcontainer.json&#34;&gt;&lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt;&lt;/a&gt;. If you choose to use Github Codespaces, your codespace will come pre-configured with a lot of the libraries and system dependencies that are needed to run this project. This is probably the fastest way to get this project up and running!&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions when trying to run this project, you may find your answer quickly by reviewing our &lt;a href=&#34;https://raw.githubusercontent.com/run-llama/sec-insights/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt; or by searching through our &lt;a href=&#34;https://github.com/run-llama/sec-insights/issues&#34;&gt;Github issues&lt;/a&gt;! If you don&#39;t see a satisfactory answer to your question, feel free to &lt;a href=&#34;https://github.com/run-llama/sec-insights/issues/new&#34;&gt;open a Github issue&lt;/a&gt; so we may assist you!&lt;/p&gt; &#xA;&lt;h2&gt;Caveats 🧐&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The frontend currently doesn&#39;t support Mobile&lt;/li&gt; &#xA; &lt;li&gt;Our main goal with this project is to provide a solid foundation for full-stack RAG apps. There is still room for improvement in terms of RAG performance!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing 💡&lt;/h2&gt; &#xA;&lt;p&gt;We remain very open to contributions! We&#39;re looking forward to seeing the ideas and improvements the LlamaIndex community is able to provide.&lt;/p&gt; &#xA;&lt;p&gt;Huge shoutout to &lt;a href=&#34;https://github.com/Evanc123&#34;&gt;&lt;strong&gt;@Evanc123&lt;/strong&gt;&lt;/a&gt; for his fantastic work building the frontend for this project!&lt;/p&gt;</summary>
  </entry>
</feed>