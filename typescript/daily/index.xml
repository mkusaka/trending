<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-27T01:47:38Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Yidadaa/ChatGPT-Next-Web</title>
    <updated>2023-03-27T01:47:38Z</updated>
    <id>tag:github.com,2023-03-27:/Yidadaa/ChatGPT-Next-Web</id>
    <link href="https://github.com/Yidadaa/ChatGPT-Next-Web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一键拥有你自己的 ChatGPT 网页服务。 One-Click to deploy your own ChatGPT web UI.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/static/icon.svg?sanitize=true&#34; alt=&#34;预览&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;ChatGPT Next Web&lt;/h1&gt; &#xA; &lt;p&gt;一键免费部署你的私人 ChatGPT 网页应用。&lt;/p&gt; &#xA; &lt;p&gt;One-Click to deploy your own ChatGPT web UI.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://chat-gpt-next-web.vercel.app/&#34;&gt;演示 Demo&lt;/a&gt; / &lt;a href=&#34;https://github.com/Yidadaa/ChatGPT-Next-Web/issues&#34;&gt;反馈 Issues&lt;/a&gt; / &lt;a href=&#34;https://discord.gg/zrhvHCr79N&#34;&gt;加入 Discord&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/16968934/227772522-b3ba3713-9206-4c8d-a81f-22300b7c313a.jpg&#34;&gt;微信群&lt;/a&gt; / &lt;a href=&#34;https://user-images.githubusercontent.com/16968934/227772541-5bcd52d8-61b7-488c-a203-0330d8006e2b.jpg&#34;&gt;打赏开发者&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FYidadaa%2FChatGPT-Next-Web&amp;amp;env=OPENAI_API_KEY&amp;amp;project-name=chatgpt-next-web&amp;amp;repository-name=ChatGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/static/cover.png&#34; alt=&#34;主界面&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在 1 分钟内使用 Vercel &lt;strong&gt;免费一键部署&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;精心设计的 UI，响应式设计，支持深色模式&lt;/li&gt; &#xA; &lt;li&gt;极快的首屏加载速度（~85kb）&lt;/li&gt; &#xA; &lt;li&gt;自动压缩上下文聊天记录，在节省 Token 的同时支持超长对话&lt;/li&gt; &#xA; &lt;li&gt;一键导出聊天记录，完整的 Markdown 支持&lt;/li&gt; &#xA; &lt;li&gt;拥有自己的域名？好上加好，绑定后即可在任何地方&lt;strong&gt;无障碍&lt;/strong&gt;快速访问&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deploy for free with one-click&lt;/strong&gt; on Vercel in under 1 minute&lt;/li&gt; &#xA; &lt;li&gt;Responsive design, and dark mode&lt;/li&gt; &#xA; &lt;li&gt;Fast first screen loading speed (~85kb)&lt;/li&gt; &#xA; &lt;li&gt;Automatically compresses chat history to support long conversations while also saving your tokens&lt;/li&gt; &#xA; &lt;li&gt;One-click export all chat history with full Markdown support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;准备好你的 &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API Key&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;点击右侧按钮开始部署： &lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FYidadaa%2FChatGPT-Next-Web&amp;amp;env=OPENAI_API_KEY&amp;amp;project-name=chatgpt-next-web&amp;amp;repository-name=ChatGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;，直接使用 Github 账号登陆即可，记得在环境变量页填入 API Key；&lt;/li&gt; &#xA; &lt;li&gt;部署完毕后，即可开始使用；&lt;/li&gt; &#xA; &lt;li&gt;（可选）&lt;a href=&#34;https://vercel.com/docs/concepts/projects/domains/add-a-domain&#34;&gt;绑定自定义域名&lt;/a&gt;：Vercel 分配的域名 DNS 在某些区域被污染了，绑定自定义域名即可直连。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API Key&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FYidadaa%2FChatGPT-Next-Web&amp;amp;env=OPENAI_API_KEY&amp;amp;project-name=chatgpt-next-web&amp;amp;repository-name=ChatGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Enjoy :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;保持更新 Keep Updated&lt;/h2&gt; &#xA;&lt;p&gt;如果你按照上述步骤一键部署了自己的项目，可能会发现总是提示“存在更新”的问题，这是由于 Vercel 会默认为你创建一个新项目而不是 fork 本项目，这会导致无法正确地检测更新。 推荐你按照下列步骤重新部署：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;删除掉原先的 repo；&lt;/li&gt; &#xA; &lt;li&gt;fork 本项目；&lt;/li&gt; &#xA; &lt;li&gt;前往 vercel 控制台，删除掉原先的 project，然后新建 project，选择你刚刚 fork 出来的项目重新进行部署即可；&lt;/li&gt; &#xA; &lt;li&gt;在重新部署的过程中，请手动添加名为 &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; 的环境变量，并填入你的 api key 作为值。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本项目会持续更新，如果你想让代码库总是保持更新，可以查看 &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork&#34;&gt;Github 的文档&lt;/a&gt; 了解如何让 fork 的项目与上游代码同步，建议定期进行同步操作以获得新功能。&lt;/p&gt; &#xA;&lt;p&gt;你可以 star/watch 本项目或者 follow 作者来及时获得新功能更新通知。&lt;/p&gt; &#xA;&lt;p&gt;If you have deployed your own project with just one click following the steps above, you may encounter the issue of &#34;Updates Available&#34; constantly showing up. This is because Vercel will create a new project for you by default instead of forking this project, resulting in the inability to detect updates correctly.&lt;/p&gt; &#xA;&lt;p&gt;We recommend that you follow the steps below to re-deploy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete the original repo;&lt;/li&gt; &#xA; &lt;li&gt;Fork this project;&lt;/li&gt; &#xA; &lt;li&gt;Go to the Vercel dashboard, delete the original project, then create a new project and select the project you just forked to redeploy;&lt;/li&gt; &#xA; &lt;li&gt;Please manually add an environment variable named &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; and enter your API key as the value during the redeploy process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project will be continuously maintained. If you want to keep the code repository up to date, you can check out the &lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork&#34;&gt;Github documentation&lt;/a&gt; to learn how to synchronize a forked project with upstream code. It is recommended to perform synchronization operations regularly.&lt;/p&gt; &#xA;&lt;p&gt;You can star or watch this project or follow author to get release notifictions in time.&lt;/p&gt; &#xA;&lt;h2&gt;访问控制 Access Control&lt;/h2&gt; &#xA;&lt;p&gt;本项目提供有限的权限控制功能，请在环境变量页增加名为 &lt;code&gt;CODE&lt;/code&gt; 的环境变量，值为用英文逗号分隔的自定义控制码：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;code1,code2,code3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;增加或修改该环境变量后，请&lt;strong&gt;重新部署&lt;/strong&gt;项目使改动生效。&lt;/p&gt; &#xA;&lt;p&gt;This project provides limited access control. Please add an environment variable named &lt;code&gt;CODE&lt;/code&gt; on the environment variables page. The value should be a custom control code separated by comma like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;code1,code2,code3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After adding or modifying this environment variable, please redeploy the project for the changes to take effect.&lt;/p&gt; &#xA;&lt;h2&gt;开发 Development&lt;/h2&gt; &#xA;&lt;p&gt;点击下方按钮，开始二次开发：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/Yidadaa/ChatGPT-Next-Web&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;在开始写代码之前，需要在项目根目录新建一个 &lt;code&gt;.env.local&lt;/code&gt; 文件，里面填入环境变量：&lt;/p&gt; &#xA;&lt;p&gt;Before starting development, you must create a new &lt;code&gt;.env.local&lt;/code&gt; file at project root, and place your api key into it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=&amp;lt;your api key here&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;本地开发 Local Development&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你是中国大陆用户，不建议在本地进行开发，除非你能够独立解决 OpenAI API 本地代理问题。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;安装 nodejs 和 yarn，具体细节请询问 ChatGPT；&lt;/li&gt; &#xA; &lt;li&gt;执行 &lt;code&gt;yarn install &amp;amp;&amp;amp; yarn dev&lt;/code&gt; 即可。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;本地部署 Local Deployment&lt;/h3&gt; &#xA;&lt;p&gt;请直接询问 ChatGPT，使用下列 Prompt：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;如何使用 pm2 和 yarn 部署 nextjs 项目到 ubuntu 服务器上，项目编译命令为 yarn build，启动命令为 yarn start，启动时需要设置环境变量为 OPENAI_API_KEY，端口为 3000，使用 ngnix 做反向代理&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please ask ChatGPT with prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;how to deploy nextjs project with pm2 and yarn on my ubuntu server, the build command is `yarn build`, the start command is `yarn start`, the project must start with env var named `OPENAI_API_KEY`, the port is 3000, use ngnix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Deployment&lt;/h3&gt; &#xA;&lt;p&gt;请直接询问 ChatGPT，使用下列 Prompt：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;如何使用 docker 部署 nextjs 项目到 ubuntu 服务器上，项目编译命令为 yarn build，启动命令为 yarn start，启动时需要设置环境变量为 OPENAI_API_KEY，端口为 3000，使用 ngnix 做反向代理&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please ask ChatGPT with prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;how to deploy nextjs project with docker on my ubuntu server, the build command is `yarn build`, the start command is `yarn start`, the project must start with env var named `OPENAI_API_KEY`, the port is 3000, use ngnix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;截图 Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/static/settings.png&#34; alt=&#34;设置 Settings&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/static/more.png&#34; alt=&#34;更多展示 More&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;说明 Attention&lt;/h2&gt; &#xA;&lt;p&gt;本项目的演示地址所用的 OpenAI 账户的免费额度将于 2023-04-01 过期，届时将无法通过演示地址在线体验。&lt;/p&gt; &#xA;&lt;p&gt;如果你想贡献出自己的 API Key，可以通过作者主页的邮箱发送给作者，并标注过期时间。&lt;/p&gt; &#xA;&lt;p&gt;The free trial of the OpenAI account used by the demo will expire on April 1, 2023, and the demo will not be available at that time.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to contribute your API key, you can email it to the author and indicate the expiration date of the API key.&lt;/p&gt; &#xA;&lt;h2&gt;鸣谢 Special Thanks&lt;/h2&gt; &#xA;&lt;h3&gt;捐赠者 Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mushan0x0&#34;&gt;@mushan0x0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kattgu7/Anti-996-License/raw/master/LICENSE_CN_EN&#34;&gt;Anti 996 License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>w-okada/voice-changer</title>
    <updated>2023-03-27T01:47:38Z</updated>
    <id>tag:github.com,2023-03-27:/w-okada/voice-changer</id>
    <link href="https://github.com/w-okada/voice-changer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;VC Client&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/w-okada/voice-changer/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/yvPWtq7isfI&#34;&gt;https://youtu.be/yvPWtq7isfI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/6U7ZM2ZSwCU&#34;&gt;https://youtu.be/6U7ZM2ZSwCU&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;VC Client とは&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/w-okada/voice-changer&#34;&gt;VC Client&lt;/a&gt;は&lt;a href=&#34;https://github.com/isletennos/MMVC_Trainer&#34;&gt;MMVC&lt;/a&gt;, &lt;a href=&#34;https://github.com/svc-develop-team/so-vits-svc&#34;&gt;so-vits-svc&lt;/a&gt;などの AI を使ったリアルタイムボイスチェンジャーのクライアントソフトウェアです。また、リアルタイムボイスチェンジャーで必要となるトレーニング用の音声の録音(MMVC 向け)アプリも提供しています。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nicovideo.jp/watch/sm41507891&#34;&gt;解説動画&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MMVC のトレーニングについては&lt;a href=&#34;https://github.com/isletennos/MMVC_Trainer&#34;&gt;公式ノートブック&lt;/a&gt;をご利用ください。&lt;/li&gt; &#xA; &lt;li&gt;so-vits-svc のトレーニングについては&lt;a href=&#34;https://github.com/isletennos/MMVC_Trainer&#34;&gt;公式ノートブック&lt;/a&gt;をご利用ください。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;特徴&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;複数のプラットフォームで動作 Windows, Mac(M1 等 Apple silicon), Linux, Google Colaboratory での動作をサポートしています。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;音声録音用アプリのインストールが不要 音声録音を Github Pages にホストしてあるアプリケーション上で実行可能です。全てブラウザ上で動くため、特別なアプリケーションのインストールは不要です。また、完全にブラウザアプリケーションとして動くのでデータがサーバに送信されることもありません。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ボイチェンを別の PC 上で実行して負荷を分散 本アプリケーションのリアルタイムボイスチェンジャーは、サーバ・クライアント構成で動きます。MMVC のサーバを別の PC 上で動かすことで、ゲーム実況など他の負荷の高い処理への影響を抑えながら動かすことができます。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48346627/206640768-53f6052d-0a96-403b-a06c-6714a0b7471d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;p&gt;詳細は&lt;a href=&#34;https://zenn.dev/wok/books/0004_vc-client-v_1_5_1_x&#34;&gt;こちら&lt;/a&gt;に纏まっています。&lt;/p&gt; &#xA;&lt;h1&gt;(1) レコーダー（トレーニング用音声録音アプリ）&lt;/h1&gt; &#xA;&lt;p&gt;MMVC トレーニング用の音声を簡単に録音できるアプリです。 Github Pages 上で実行できるため、ブラウザのみあれば様々なプラットフォームからご利用可能です。 録音したデータは、ブラウザ上に保存されます。外部に漏れることはありません。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://w-okada.github.io/voice-changer/&#34;&gt;録音アプリ on Github Pages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/s_GirFEGvaA&#34;&gt;解説動画&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;(2) プレイヤー（ボイスチェンジャーアプリ）&lt;/h1&gt; &#xA;&lt;p&gt;MMVC や so-vits-svc でボイチェンを行うためのアプリです。&lt;/p&gt; &#xA;&lt;p&gt;大きく 3 つの方法でご利用できます。難易度順に次の通りです。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Colaboratory での利用(MMVC のみ)&lt;/li&gt; &#xA; &lt;li&gt;事前ビルド済みの Binary での利用&lt;/li&gt; &#xA; &lt;li&gt;Docker や Anaconda など環境構築を行った上での利用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本ソフトウェアや MMVC になじみの薄い方は上から徐々に慣れていくとよいと思います。&lt;/p&gt; &#xA;&lt;h2&gt;(2-1) Google Colaboratory での利用(MMVC のみ)&lt;/h2&gt; &#xA;&lt;p&gt;Google が提供している機械学習プラットフォーム Colaboratory 上で実行できます。 MMVC のモデルをトレーニングが完了している場合、既に Colaboratory を利用していると思いますので、事前準備は必要ありません。ただし、ネットワーク環境や Colaboratory の状況によってボイスチェンジャのタイムラグが大きくなる傾向があります。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/w-okada/voice-changer/raw/master/VoiceChangerDemo_Simple.ipynb&#34;&gt;超簡単バージョン&lt;/a&gt;: 事前設定なしで Colab から実行できます。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/w-okada/voice-changer/raw/master/VoiceChangerDemo.ipynb&#34;&gt;普通バージョン&lt;/a&gt;: Google Drive と連携してモデルを読み込むことができます。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/TogfMzXH1T0&#34;&gt;解説動画&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;(2-2) 事前ビルド済みの Binary での利用&lt;/h2&gt; &#xA;&lt;p&gt;実行形式のバイナリをダウンロードして実行することができます。 Windows 版と Mac 版を提供しています。&lt;/p&gt; &#xA;&lt;p&gt;・Mac 版はダウンロードファイルを解凍したのちに、使用する VC に応じた&lt;code&gt;startHttp_xxx.command&lt;/code&gt;をダブルクリックしてください。開発元を検証できない旨が示される場合は、再度コントロールキーを押してクリックして実行してください(or 右クリックから実行してください)。（詳細下記 *1）&lt;/p&gt; &#xA;&lt;p&gt;・Windows 版は、&lt;code&gt;ONNX(cpu,cuda),PyTorch(cpu)&lt;/code&gt;版と &lt;code&gt;ONNX(cpu,cuda), PyTorch(cpu,cuda)&lt;/code&gt;版と&lt;code&gt;ONNX(cpu,DirectML), PyTorch(cpu)&lt;/code&gt;版を提供しています。環境に応じた zip ファイルをダウンロードしてください。ダウンロードした zip ファイルを解凍して、使用する VC に応じた VC に応じた&lt;code&gt;start_http_xxx.bat&lt;/code&gt;を実行してください。&lt;/p&gt; &#xA;&lt;p&gt;・各種&lt;code&gt;startHttp_xxx.command&lt;/code&gt;ファイル(mac)、&lt;code&gt;start_http_xxx.bat&lt;/code&gt;ファイル(win)で起動できるボイスチェンジャは次の通りです。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;バッチファイル(mac の場合は&lt;code&gt;.bat&lt;/code&gt;を&lt;code&gt;.command&lt;/code&gt;に読み替え)&lt;/th&gt; &#xA;   &lt;th&gt;説明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;start_http_v13.bat&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x 系のモデルが使用できます。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;start_http_v15.bat&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x 系のモデルが使用できます。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;start_http_so-vits-svc_40.bat&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0 系のモデルが使用できます。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;start_http_so-vits-svc_40v2.bat&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0v2 系のモデルが使用できます。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;start_http_so-vits-svc_40v2_tsukuyomi.bat&lt;/td&gt; &#xA;   &lt;td&gt;つくよみちゃんのモデルを使用します。(変更不可)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;start_http_so-vits-svc_40v2_amitaro.bat&lt;/td&gt; &#xA;   &lt;td&gt;あみたろのモデルを使用します。(変更不可)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;・リモートから接続する場合は、各種&lt;code&gt;.command&lt;/code&gt;ファイル(mac)、&lt;code&gt;.bat&lt;/code&gt;ファイル(win)の http が https に置き換わっているものを使用してください。&lt;/p&gt; &#xA;&lt;p&gt;・Windows 環境で Nvidia の GPU をお持ちの方は多くの場合は &lt;code&gt;ONNX(cpu,cuda),PyTorch(cpu)&lt;/code&gt;版で動きます。環境によって極まれに gpu が認識されない場合があります。その場合は &lt;code&gt;ONNX(cpu,cuda), PyTorch(cpu,cuda)&lt;/code&gt;版の方をご利用ください。（サイズが大きく違います。）&lt;/p&gt; &#xA;&lt;p&gt;・Windows 環境で Nvidia の GPU をお持ちでない方は多くの場合は &lt;code&gt;ONNX(cpu,DirectML), PyTorch(cpu) &lt;/code&gt;版で動きます。&lt;/p&gt; &#xA;&lt;p&gt;・Windows 環境で so-vits-svc 4.0/so-vits-svc 4.0v2 をお使いの場合は&lt;code&gt;ONNX(cpu,cuda), PyTorch(cpu,cuda)&lt;/code&gt;版をご利用ください&lt;/p&gt; &#xA;&lt;p&gt;・so-vits-svc 4.0/so-vits-svc 4.0v2 やつくよみちゃんの動作には content vec のモデルが必要となります。こちらの&lt;a href=&#34;https://github.com/auspicious3000/contentvec&#34;&gt;リポジトリ&lt;/a&gt;から、ContentVec_legacy 500 のモデルをダウンロードして、実行する&lt;code&gt;startHttp_xxx.command&lt;/code&gt;や&lt;code&gt;start_http_xxx.bat&lt;/code&gt;と同じフォルダに配置してください。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;フレームワーク&lt;/th&gt; &#xA;   &lt;th&gt;link&lt;/th&gt; &#xA;   &lt;th&gt;サポート VC&lt;/th&gt; &#xA;   &lt;th&gt;サイズ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v.1.5.1.9&lt;/td&gt; &#xA;   &lt;td&gt;mac(M1)&lt;/td&gt; &#xA;   &lt;td&gt;ONNX(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1dBnkV5Me-JnS855EYghMjki7VOusg6mu/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x, MMVC v.1.3.x, so-vits-svc 4.0, so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;549MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1HNq7gMldASmHPxZ83QKyN3vrAq9pEve8/view?usp=sharing&#34;&gt;つくよみちゃん&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;646MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1zJ9GXJwOO2JnqszM1dfttKG3ZFYCh6RQ/view?usp=sharing&#34;&gt;あみたろ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;646MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;   &lt;td&gt;ONNX(cpu,cuda),PyTorch(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1CifVq4b8umQh-oMK14eMd68expDqAEdd/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x, MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;564MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1VPVplDuywhCvhS9LVXDHJ90LocdHT4gB/view?usp=sharing&#34;&gt;つくよみちゃん&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;661MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1HzXTWmchY7jFKU0ALbqPLaVIeJdpro0k/view?usp=sharing&#34;&gt;あみたろ&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;659MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ONNX(cpu,cuda), PyTorch(cpu,cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/12FBZfky_J2YLNbfSn3ynrWCmBk6yeC09/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x, MMVC v.1.3.x, so-vits-svc 4.0, so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;2.6GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ONNX(cpu,DirectML), PyTorch(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1ACU8190JBxYMUNF53b1Y31OMXONSKjpn/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x, MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;461MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ONNX(cpu,DirectML), PyTorch(cpu,cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1BIEvDwi14zg5JG8DTtc72oDpdr2fx89V/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x, MMVC v.1.3.x、so-vits-svc 4.0, so-vits-svc 4.0v2&lt;/td&gt; &#xA;   &lt;td&gt;2.48GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*1 MMVC v.1.5.x は Experimental です。&lt;/p&gt; &#xA;&lt;p&gt;*2 つくよみちゃんはフリー素材キャラクター「つくよみちゃん」が無料公開している音声データを使用しています。（利用規約など、詳細は文末）&lt;/p&gt; &#xA;&lt;p&gt;*3 解凍や起動が遅い場合、ウィルス対策ソフトのチェックが走っている可能性があります。ファイルやフォルダを対象外にして実行してみてください。（自己責任です）&lt;/p&gt; &#xA;&lt;p&gt;*4 本ソフトウェアは開発元の署名しておりません。下記のように警告が出ますが、コントロールキーを押しながらアイコンをクリックすると実行できるようになります。これは Apple のセキュリティポリシーによるものです。実行は自己責任となります。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48346627/212567711-c4a8d599-e24c-4fa3-8145-a5df7211f023.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/48346627/212569645-e30b7f4e-079d-4504-8cf8-7816c5f40b00.mp4&#34;&gt;https://user-images.githubusercontent.com/48346627/212569645-e30b7f4e-079d-4504-8cf8-7816c5f40b00.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;(2-3) Docker や Anaconda など環境構築を行った上での利用&lt;/h2&gt; &#xA;&lt;p&gt;本リポジトリをクローンして利用します。Windows では WSL2 の環境構築が必須になります。また、WSL2 上で Docker もしくは Anaconda などの仮想環境の構築が必要となります。Mac では Anaconda などの Python の仮想環境の構築が必要となります。事前準備が必要となりますが、多くの環境においてこの方法が一番高速で動きます。&lt;strong&gt;&lt;font color=&#34;red&#34;&gt; GPU が無くてもそこそこ新しい CPU であれば十分動く可能性があります &lt;/font&gt;（下記のリアルタイム性の節を参照）&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/POo_Cg0eFMU&#34;&gt;WSL2 と Docker のインストールの解説動画&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/fba9Zhsukqw&#34;&gt;WSL2 と Anaconda のインストールの解説動画&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;リアルタイム性&lt;/h2&gt; &#xA;&lt;p&gt;GPU を使用するとほとんどタイムラグなく変換可能です。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/DannadoriYellow/status/1613483372579545088?s=20&amp;amp;t=7CLD79h1F3dfKiTb7M8RUQ&#34;&gt;https://twitter.com/DannadoriYellow/status/1613483372579545088?s=20&amp;amp;t=7CLD79h1F3dfKiTb7M8RUQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CPU でも最近のであればそれなりの速度で変換可能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/DannadoriYellow/status/1613553862773997569?s=20&amp;amp;t=7CLD79h1F3dfKiTb7M8RUQ&#34;&gt;https://twitter.com/DannadoriYellow/status/1613553862773997569?s=20&amp;amp;t=7CLD79h1F3dfKiTb7M8RUQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;古い CPU( i7-4770)だと、1000msec くらいかかってしまう。&lt;/p&gt; &#xA;&lt;h3&gt;過去バージョン&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;フレームワーク&lt;/th&gt; &#xA;   &lt;th&gt;link&lt;/th&gt; &#xA;   &lt;th&gt;サポート VC&lt;/th&gt; &#xA;   &lt;th&gt;サイズ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v.1.5.1.4a&lt;/td&gt; &#xA;   &lt;td&gt;mac(M1)&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1urqcB_S4lqbrxL4osKIlQ6MLhsh__W7t/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x&lt;/td&gt; &#xA;   &lt;td&gt;510MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1cQVnwenJD0vXzyThZ3iiMBUVLRXoDPBJ/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x&lt;/td&gt; &#xA;   &lt;td&gt;541MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1sUa42la2vjTkIMcLKRSBf8icvfB6fqM0/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x&lt;/td&gt; &#xA;   &lt;td&gt;2.55GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+DirectML)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1B_dPZMIf39Of7olTVzR0h6fNP5u0lx8P/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x&lt;/td&gt; &#xA;   &lt;td&gt;430MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+DirectML+cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1KSmmu5A29f3wXc_ZreycuuCyLltgNg5h/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.5.x&lt;/td&gt; &#xA;   &lt;td&gt;2.45GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;   &lt;td&gt;---&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v.1.3.1.4a&lt;/td&gt; &#xA;   &lt;td&gt;mac(M1)&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1dliqQE7Kn5vhycrDUZQ6pgwLfP_znAyp/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;510MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;windows&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/16R44mbi4AlkynVzhROrmA6u9MRSegpwd/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;541MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1wBgjNHf0Kz3BPp-73KCbCEnPTW4FnuEE/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;2.55GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+DirectML)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/14DaEPJnio-Ne50e2t1wFRgwQYnWwkh6n/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;430MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;onnx(cpu+DirectML+cuda)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://drive.google.com/file/d/1vfZc52f0BVD8nGjsuaAhl0jb4djHBBYe/view?usp=sharing&#34;&gt;通常&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MMVC v.1.3.x&lt;/td&gt; &#xA;   &lt;td&gt;2.45GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Acknowledgments&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://seiga.nicovideo.jp/seiga/im10792934&#34;&gt;立ちずんだもん素材&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.irasutoya.com/&#34;&gt;いらすとや&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tyc.rei-yumesaki.net/&#34;&gt;つくよみちゃん&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  本ソフトウェアの音声合成には、フリー素材キャラクター「つくよみちゃん」が無料公開している音声データを使用しています。&#xA;  ■つくよみちゃんコーパス（CV.夢前黎）&#xA;  https://tyc.rei-yumesaki.net/material/corpus/&#xA;  © Rei Yumesaki&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amitaro.net/&#34;&gt;あみたろの声素材工房&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;利用規約&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;リアルタイムボイスチェンジャーつくよみちゃんについては、つくよみちゃんコーパスの利用規約に準じ、次の目的での利用を禁止します。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;■人を批判・攻撃すること。（「批判・攻撃」の定義は、つくよみちゃんキャラクターライセンスに準じます）&#xA;&#xA;■特定の政治的立場・宗教・思想への賛同または反対を呼びかけること。&#xA;&#xA;■刺激の強い表現をゾーニングなしで公開すること。&#xA;&#xA;■他者に対して二次利用（素材としての利用）を許可する形で公開すること。&#xA;※鑑賞用の作品として配布・販売していただくことは問題ございません。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;リアルタイムボイスチェンジャーあみたろについては、あみたろの声素材工房様の次の利用規約に準じます。詳細は&lt;a href=&#34;https://amitaro.net/voice/faq/#index_id6&#34;&gt;こちら&lt;/a&gt;です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;あみたろの声素材やコーパス読み上げ音声を使って音声モデルを作ったり、ボイスチェンジャーや声質変換などを使用して、自分の声をあみたろの声に変換して使うのもOKです。&#xA;&#xA;ただしその場合は絶対に、あみたろ（もしくは小春音アミ）の声に声質変換していることを明記し、あみたろ（および小春音アミ）が話しているわけではないことが誰でもわかるようにしてください。&#xA;また、あみたろの声で話す内容は声素材の利用規約の範囲内のみとし、センシティブな発言などはしないでください。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;免責事項&lt;/h1&gt; &#xA;&lt;p&gt;本ソフトウェアの使用または使用不能により生じたいかなる直接損害・間接損害・波及的損害・結果的損害 または特別損害についても、一切責任を負いません。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vincanger/coverlettergpt</title>
    <updated>2023-03-27T01:47:38Z</updated>
    <id>tag:github.com,2023-03-27:/vincanger/coverlettergpt</id>
    <link href="https://github.com/vincanger/coverlettergpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate Cover Letters based on Job Description and your Resumé. Manage jobs and applications. Get Hired. Have fun. Be cool. Go to School.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CoverLetterGPT.xyz&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/vincanger/coverlettergpt/main/src/client/static/coverlettegpt.png&#34; width=&#34;600px&#34;&gt; &#xA;&lt;h2&gt;Running it locally&lt;/h2&gt; &#xA;&lt;p&gt;After cloning this repo, you can run it locally by following these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://wasp-lang.dev&#34;&gt;Wasp&lt;/a&gt; by running &lt;code&gt;curl -sSL https://get.wasp-lang.dev/installer.sh | sh&lt;/code&gt; in your terminal.&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env.server&lt;/code&gt; file in the root of the project&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;env.example&lt;/code&gt; file contents to &lt;code&gt;.env.server&lt;/code&gt; and fill in your API keys&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;wasp db migrate-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;wasp start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;localhost:3000&lt;/code&gt; in your browser (your NodeJS server will be running on port &lt;code&gt;3001&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://coverlettergpt.xyz&#34;&gt;coverlettergpt.xyz&lt;/a&gt; was built in a couple of days using a few really cool tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🐝&amp;nbsp;&lt;a href=&#34;https://wasp-lang.dev&#34;&gt;Wasp&lt;/a&gt; - allows you to build full-stack apps with 10x less boilerplate&lt;/li&gt; &#xA; &lt;li&gt;🎨&amp;nbsp;&lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra-ui&lt;/a&gt; - UI components for React that look good and are easy to work with&lt;/li&gt; &#xA; &lt;li&gt;🤖&amp;nbsp;&lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; - GPT-3.5 turbo API&lt;/li&gt; &#xA; &lt;li&gt;💸 &lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt; - for tip payments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wasp-lang.dev&#34;&gt;Wasp&lt;/a&gt; as the full-stack framework allows you to describe your app’s core features in the &lt;code&gt;main.wasp&lt;/code&gt; config file in the root directory. Then it builds and glues these features into a React-Express-Prisma app for you so that you can focus on writing the client and server-side logic instead of configuring. For example, I did not have to use any third-party libraries for Google Authentication. I just wrote a couple lines of code in the config file stating that I want to use Google Auth, and Wasp configures it for me. Check out the &lt;code&gt;main.wasp&lt;/code&gt; file for more.&lt;/p&gt; &#xA;&lt;p&gt;Also, &lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra-ui&lt;/a&gt; is great for building nice looking UI’s really quickly and easily. Some people are turned off by the fact that they’re React components, but I find that they’re easy to customize and configure, and get me started on designs 10x faster and with less code than tailwind.&lt;/p&gt; &#xA;&lt;p&gt;For more info on the prompts and configuration I used for the &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; API, check out the &lt;code&gt;src/server/actions.ts&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt; makes the payment functionality super easy. I just used their &lt;code&gt;Pre-configured Checkout&lt;/code&gt; feature on a one-time purchase product. After the user pays, I update their &lt;code&gt;hasPaid&lt;/code&gt; and &lt;code&gt;datePaid&lt;/code&gt; fields in the database. Then I use &lt;a href=&#34;https://wasp-lang.dev/docs/language/features#jobs&#34;&gt;Wasp&#39;s integrated Jobs&lt;/a&gt; feature to run a cron job that checks if 3 months has passed since paying, and if so, it sets &lt;code&gt;hasPaid&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; again.&lt;/p&gt; &#xA;&lt;p&gt;I also implemented a cron job to send an email to the user to notify them 2 weeks before their subscription ends. I used &lt;a href=&#34;https://sendgrid.com/&#34;&gt;SendGrid&lt;/a&gt; for the email service.&lt;/p&gt; &#xA;&lt;p&gt;If you have any other questions, feel free to reach out to me on &lt;a href=&#34;https://twitter.com/hot_town&#34;&gt;twitter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>