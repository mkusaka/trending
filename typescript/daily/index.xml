<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-13T01:46:15Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ohmplatform/FreedomGPT</title>
    <updated>2023-04-13T01:46:15Z</updated>
    <id>tag:github.com,2023-04-13:/ohmplatform/FreedomGPT</id>
    <link href="https://github.com/ohmplatform/FreedomGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This codebase is for an React and Electron-based app that executes the FreedomGPT LLM locally (offline and private) on Mac and Windows using a chat-based interface (based on Alpaca Lora)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Freedom GPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GNU-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/release/ohmplatform/freedom-gpt-electron-app.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ohmplatform/freedom-gpt-electron-app.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ohmplatform/freedom-gpt-electron-app/total.svg?sanitize=true&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is the repository for the Freedom GPT application. This application is built using &lt;a href=&#34;https://www.electronjs.org/&#34;&gt;Electron&lt;/a&gt; and &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;. It is a desktop application that allows users to run alpaca models on their local machine.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install/#windows-stable&#34;&gt;Yarn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;If you want to run the application directly&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/ohmplatform/FreedomGPT.git&#xA;cd FreedomGPT&#xA;yarn install&#xA;yarn start:prod&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;If you want to contribute to the project&lt;/h1&gt; &#xA;&lt;h2&gt;Working with the repository&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recursive https://github.com/ohmplatform/FreedomGPT.git&#xA;cd FreedomGPT&#xA;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Building the alpaca.cpp library&lt;/h1&gt; &#xA;&lt;h2&gt;Building from Source (MacOS/Linux)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd alpaca.cpp&#xA;make chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building from Source (Windows)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and install CMake: &lt;a href=&#34;https://cmake.org/download/&#34;&gt;https://cmake.org/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the following commands one by one:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;cd alpaca.cpp&#xA;cmake .&#xA;cmake --build . --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You should now have a &lt;code&gt;Release&lt;/code&gt; folder with a &lt;code&gt;chat.exe&lt;/code&gt; file inside it. You can run this file to test the chat client.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changing the API URL&lt;/h2&gt; &#xA;&lt;p&gt;We are using &lt;code&gt;http://localhost:8889&lt;/code&gt; as the API URL, you can change it in the file &lt;code&gt;src/index.ts&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running the application&lt;/h2&gt; &#xA;&lt;p&gt;To run the application, run the following command in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start&#xA;&#xA;â¦» Make sure you are in the root directory of the project.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;This project utilizes several open-source packages and libraries, without which this project would not have been possible:&lt;/p&gt; &#xA;&lt;p&gt;&#34;alpaca.cpp&#34; by antimatter15 - a C++ library for Alpaca API. &lt;a href=&#34;https://github.com/antimatter15/alpaca.cpp&#34;&gt;https://github.com/antimatter15/alpaca.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#34;LLAMA&#34; by Facebook Research - a low-latency, large-scale approximate nearest neighbor search algorithm. &lt;a href=&#34;https://github.com/facebookresearch/llama&#34;&gt;https://github.com/facebookresearch/llama&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#34;Alpaca&#34; by Stanford CRFM - a framework for understanding and improving the efficiency and robustness of algorithms. &lt;a href=&#34;https://crfm.stanford.edu/2023/03/13/alpaca.html&#34;&gt;https://crfm.stanford.edu/2023/03/13/alpaca.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#34;alpaca-lora&#34; by tloen - a Python library for working with LoRa radios and the Alpaca protocol. &lt;a href=&#34;https://github.com/tloen/alpaca-lora&#34;&gt;https://github.com/tloen/alpaca-lora&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#34;alpaca-lora-7b&#34; by Hugging Face - a pre-trained language model for the Alpaca protocol. &lt;a href=&#34;https://huggingface.co/Sosaka/Alpaca-native-4bit-ggml/tree/main&#34;&gt;https://huggingface.co/Sosaka/Alpaca-native-4bit-ggml/tree/main&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We would like to express our gratitude to the developers of these packages and their contributors for making their work available to the public under open source licenses. Their contributions have enabled us to build a more robust and efficient project.&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ohmplatform/FreedomGPT/main/LICENSE&#34;&gt; LICENSE &lt;/a&gt;file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>transitive-bullshit/chatgpt-plugin-ts</title>
    <updated>2023-04-13T01:46:15Z</updated>
    <id>tag:github.com,2023-04-13:/transitive-bullshit/chatgpt-plugin-ts</id>
    <link href="https://github.com/transitive-bullshit/chatgpt-plugin-ts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Everything you need to start building ChatGPT Plugins in JS/TS ðŸ”¥&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-plugin-ts&#34;&gt; &lt;img alt=&#34;ChatGPT Plugin TS&#34; src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/social.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;ChatGPT Plugin TS&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Examples and resources for creating ChatGPT plugins in TypeScript. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/chatgpt-plugin&#34;&gt;&lt;img alt=&#34;chatgpt-plugin NPM package&#34; src=&#34;https://img.shields.io/npm/v/chatgpt-plugin.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-plugin-ts/actions/workflows/test.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/transitive-bullshit/chatgpt-plugin-ts/actions/workflows/test.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-plugin-ts/raw/main/license&#34;&gt;&lt;img alt=&#34;MIT License&#34; src=&#34;https://img.shields.io/badge/license-MIT-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prettier.io&#34;&gt;&lt;img alt=&#34;Prettier Code Formatting&#34; src=&#34;https://img.shields.io/badge/code_style-prettier-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#example-plugins&#34;&gt;Example Plugins&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#dexa-lex-fridman-plugin&#34;&gt;Dexa Lex Fridman Plugin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#ascii-art-plugin&#34;&gt;ASCII Art Plugin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains the &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/packages/chatgpt-plugin&#34;&gt;chatgpt-plugin NPM package&lt;/a&gt;, with TS types and utilities for building ChatGPT Plugins with TypeScript.&lt;/p&gt; &#xA;&lt;p&gt;It also contains several high quality example plugins that you can use as a template for building your own plugins. The goal is to add more examples using different OpenAPI frameworks and hosting providers over time. Currently, all of the examples use Cloudflare Workers, but I&#39;ll add an example using Vercel serverless functions soon.&lt;/p&gt; &#xA;&lt;p&gt;If there&#39;s something missing that you&#39;d like to see, please &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-plugin-ts/issues/new&#34;&gt;open an issue&lt;/a&gt; or join our &lt;a href=&#34;https://www.chatgpthackers.dev/&#34;&gt;ChatGPT Hackers community&lt;/a&gt; on Discord, with over 8000 developers who are building cool stuff with AI!&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install chatgpt-plugin&#xA;# or&#xA;yarn add chatgpt-plugin&#xA;# or&#xA;pnpm install chatgpt-plugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Plugins&lt;/h2&gt; &#xA;&lt;p&gt;TS code for all example plugins can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Dexa Lex Fridman Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Example ChatGPT retrieval plugin to search across all of the &lt;a href=&#34;https://lexfridman.com/podcast/&#34;&gt;Lex Fridman Podcast&lt;/a&gt; episodes â€“&amp;nbsp;powered by &lt;a href=&#34;https://dexa.ai&#34;&gt;Dexa AI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/examples/dexa-lex-fridman&#34;&gt;source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/transitive_bs/status/1643990888417464332&#34;&gt;launch tweet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;built using CF workers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/advice-for-youth-opt.jpg&#34; alt=&#34;What advice does Lex&#39;s podcast have for young people?&#34; width=&#34;45%&#34;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/elon-musk-philosophy-on-life-opt.jpg&#34; alt=&#34;What is Elon Musk&#39;s philosophy on life?&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/poker-and-physics-opt.jpg&#34; alt=&#34;What do poker and physics have in common?&#34; width=&#34;45%&#34;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/love-opt.jpg&#34; alt=&#34;What do Lex&#39;s guests think about love?&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;ASCII Art Plugin&lt;/h3&gt; &#xA;&lt;p&gt;This is a really simple example plugin that converts text to ASCII art. It&#39;s a great template to start building your own plugins.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/examples/ascii-art/&#34;&gt;source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/transitive_bs/status/1643144204900597760&#34;&gt;launch tweet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;built using CF workers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-plugin-ts/main/media/plugin-ascii-art-demo-opt.jpg&#34; alt=&#34;ASCII art using the Poison font&#34; width=&#34;45%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name_for_human&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;30 character max&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;name_for_model&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;50 character max&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description_for_human&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;120 character max&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description_for_model&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;8000 character max&lt;/li&gt; &#xA;   &lt;li&gt;Max decreases over time&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;API response body length &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;100k character limit&lt;/li&gt; &#xA;   &lt;li&gt;Decreases over time&lt;/li&gt; &#xA;   &lt;li&gt;Subject to limitations&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TODO: &lt;code&gt;defineConfig&lt;/code&gt; function to help validate &lt;code&gt;ai-plugin.json&lt;/code&gt; configs?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT Â© &lt;a href=&#34;https://transitivebullsh.it&#34;&gt;Travis Fischer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you found this project interesting, please consider &lt;a href=&#34;https://github.com/sponsors/transitive-bullshit&#34;&gt;sponsoring me&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>langchain-ai/langchain-template-supabase</title>
    <updated>2023-04-13T01:46:15Z</updated>
    <id>tag:github.com,2023-04-13:/langchain-ai/langchain-template-supabase</id>
    <link href="https://github.com/langchain-ai/langchain-template-supabase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;supabase-template&lt;/h1&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies, including the Supabase CLI&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you install the Supabase CLI using a different method you have to make sure you are on version 1.49.4 as more recent versions currently suffer from an issue which prevents this from working correctly.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Create frontend env file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create supabase functions env file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;OPENAI_API_KEY=sk-xxx&#34; &amp;gt; supabase/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Start the supabase project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx supabase start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Start the supabase functions locally&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn supabase:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Start the frontend locally&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:3100&#34;&gt;http://localhost:3100&lt;/a&gt; with your browser to see the result.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new project on &lt;a href=&#34;https://supabase.io&#34;&gt;Supabase&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new project on &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To deploy the frontend, connect your Vercel project to your GitHub repo and push to main.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To deploy the supabase functions, first login to Supabase:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx supabase login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, link your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx supabase link --project-ref &amp;lt;project-ref&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, deploy the functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn supabase:deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, if you&#39;re also using the Supabase Vector Store from LangcChain, you&#39;ll need to push the schema to the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;supabase db push&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>