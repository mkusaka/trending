<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-01T01:40:28Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>puckeditor/puck</title>
    <updated>2025-08-01T01:40:28Z</updated>
    <id>tag:github.com,2025-08-01:/puckeditor/puck</id>
    <link href="https://github.com/puckeditor/puck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The visual editor for React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://puckeditor.com&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://res.cloudinary.com/die3nptcg/image/upload/Puck_Logo_White_RGB_j2rwgg.svg&#34; height=&#34;100px&#34; aria-label=&#34;Puck logo&#34;&gt; &#xA;   &lt;img src=&#34;https://res.cloudinary.com/die3nptcg/image/upload/Puck_Logo_Black_RGB_dqsjag.svg?sanitize=true&#34; height=&#34;100px&#34; aria-label=&#34;Puck logo&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;The visual editor for React&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://puckeditor.com/docs&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://demo.puckeditor.com/edit&#34;&gt;Demo&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/V9mDAhuxyZ&#34;&gt;Discord&lt;/a&gt; • &lt;a href=&#34;https://github.com/puckeditor/puck/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;⭐️ Enjoying Puck? Please &lt;a href=&#34;https://github.com/puckeditor/puck&#34;&gt;leave a star&lt;/a&gt;!&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://demo.puckeditor.com/edit&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/25e1ae25-ca5e-450f-afa0-01816830b731&#34; alt=&#34;GIF showing a page being created in the Puck Editor, with components being added, arranged, and customized in real time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is Puck?&lt;/h2&gt; &#xA;&lt;p&gt;Puck is a modular, open-source visual editor for React.js. You can use Puck to build custom drag-and-drop experiences with your own application and React components.&lt;/p&gt; &#xA;&lt;p&gt;Because Puck is just a React component, it plays well with all React.js environments, including Next.js. You own your data and there’s no vendor lock-in.&lt;/p&gt; &#xA;&lt;p&gt;Puck is also &lt;a href=&#34;https://github.com/puckeditor/puck?tab=MIT-1-ov-file#readme&#34;&gt;licensed under MIT&lt;/a&gt;, making it suitable for both internal systems and commercial applications.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Install the package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i @measured/puck --save # or npx create-puck-app my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Render the editor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Editor.jsx&#xA;import { Puck } from &#34;@measured/puck&#34;;&#xA;import &#34;@measured/puck/puck.css&#34;;&#xA;&#xA;// Create Puck component config&#xA;const config = {&#xA;  components: {&#xA;    HeadingBlock: {&#xA;      fields: {&#xA;        children: {&#xA;          type: &#34;text&#34;,&#xA;        },&#xA;      },&#xA;      render: ({ children }) =&amp;gt; {&#xA;        return &amp;lt;h1&amp;gt;{children}&amp;lt;/h1&amp;gt;;&#xA;      },&#xA;    },&#xA;  },&#xA;};&#xA;&#xA;// Describe the initial data&#xA;const initialData = {};&#xA;&#xA;// Save the data to your database&#xA;const save = (data) =&amp;gt; {};&#xA;&#xA;// Render Puck editor&#xA;export function Editor() {&#xA;  return &amp;lt;Puck config={config} data={initialData} onPublish={save} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Render the page:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;// Page.jsx&#xA;import { Render } from &#34;@measured/puck&#34;;&#xA;import &#34;@measured/puck/puck.css&#34;;&#xA;&#xA;export function Page() {&#xA;  return &amp;lt;Render config={config} data={data} /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Recipes&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;create-puck-app&lt;/code&gt; to quickly spin up a a pre-configured app based on our provided &lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes&#34;&gt;recipes&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx create-puck-app my-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available recipes include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes/next&#34;&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/a&gt;: Next.js example, using App Router and static page generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes/remix&#34;&gt;&lt;strong&gt;remix&lt;/strong&gt;&lt;/a&gt;: Remix Run v2 example, using dynamic routes at root-level&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/puck/tree/main/recipes/react-router&#34;&gt;&lt;strong&gt;react-router&lt;/strong&gt;&lt;/a&gt;: React Router v7 app example, using dynamic routes to create pages at any level&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/D9e4E3MQVZ&#34;&gt;Discord server&lt;/a&gt; for discussions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/measuredco/awesome-puck&#34;&gt;awesome-puck&lt;/a&gt; community repo for plugins, custom fields &amp;amp; more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions about Puck, please open a &lt;a href=&#34;https://github.com/measuredco/puck/issues&#34;&gt;GitHub issue&lt;/a&gt; or join us on &lt;a href=&#34;https://discord.gg/D9e4E3MQVZ&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or &lt;a href=&#34;https://app.cal.com/chrisvxd/puck-enquiry/&#34;&gt;book a discovery call&lt;/a&gt; for hands-on support and consultancy.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://github.com/measuredco/puck/graphs/contributors&#34;&gt;The Puck Contributors&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devlikeapro/waha</title>
    <updated>2025-08-01T01:40:28Z</updated>
    <id>tag:github.com,2025-08-01:/devlikeapro/waha</id>
    <link href="https://github.com/devlikeapro/waha" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png&#34; style=&#34;border-radius: 50%&#34; width=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/devlikeapro/waha&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/devlikeapro/waha&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://waha.devlike.pro/&#34;&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dashboard Example: &lt;a href=&#34;https://waha.devlike.pro/dashboard&#34;&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Swagger Example: &lt;a href=&#34;https://waha.devlike.pro/swagger&#34;&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tables of Contents&lt;/h1&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start&#34;&gt;Quick start&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message&#34;&gt;Send your first message&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image&#34;&gt;1. Download image&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api&#34;&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session&#34;&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr&#34;&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot&#34;&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message&#34;&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next&#34;&gt;What is next?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project&#34;&gt;Start the project&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h1&gt;Quick start&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; &#xA;&lt;h2&gt;Send your first message&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; &#xA;&lt;h3&gt;1. Download image&lt;/h3&gt; &#xA;&lt;p&gt;Assuming you have installed &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt;, let&#39;s download the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull devlikeapro/waha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker login -u devlikeapro -p {KEY}&#xA;docker pull devlikeapro/waha-plus&#xA;docker logout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href=&#34;https://waha.devlike.pro/docs/how-to/waha-plus/&#34;&gt;&lt;strong&gt;➕ WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; &#xA;&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha&#xA;&#xA;# It prints logs and the last line must be&#xA;# WhatsApp HTTP API is running on: http://[::1]:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the link in your browser &lt;a href=&#34;http://localhost:3000/&#34;&gt;http://localhost:3000/&lt;/a&gt; and you&#39;ll see API documentation (Swagger).&lt;/p&gt; &#xA;&lt;h3&gt;3. Start a new session&lt;/h3&gt; &#xA;&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; &#xA;&lt;p&gt;Please go and read how what we&#39;ll need to a bit later: &lt;a href=&#34;https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav&#34; target=&#34;_blank&#34;&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; &#xA;&lt;p&gt;The example payload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34;: &#34;default&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; &#xA;&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; &#xA;&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone&#39;s WhatsApp app.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it&#39;ll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you&#39;re ready to start sending messages!&lt;/p&gt; &#xA;&lt;h3&gt;6. Send a text message&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href=&#34;http://localhost:3000/&#34;&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; &#xA;&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The example payload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;chatId&#34;: &#34;12132132130@c.us&#34;,&#xA;  &#34;text&#34;: &#34;Hi there!&#34;,&#xA;  &#34;session&#34;: &#34;default&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Phone without +&#xA;export PHONE=12132132130&#xA;curl -d &#34;{\&#34;chatId\&#34;: \&#34;${PHONE}@c.us\&#34;, \&#34;text\&#34;: \&#34;Hello from WhatsApp HTTP API\&#34; }&#34; -H &#34;Content-Type: application/json&#34; -X POST http://localhost:3000/api/sendText&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is next?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://waha.devlike.pro/docs/overview/introduction/&#34;&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Start the project&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Make sure you&#39;re using node&amp;gt;=22 (check &lt;a href=&#34;https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc&#34;&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; &#xA; &lt;li&gt;Run the following commands:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install dependencies&#xA;yarn install&#xA;# Fetch and compile proto files&#xA;yarn gows:proto&#xA;# Run&#xA;yarn start&#xA;# open http://localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>