<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-22T01:38:19Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wonderwhy-er/ClaudeDesktopCommander</title>
    <updated>2025-03-22T01:38:19Z</updated>
    <id>tag:github.com,2025-03-22:/wonderwhy-er/ClaudeDesktopCommander</id>
    <link href="https://github.com/wonderwhy-er/ClaudeDesktopCommander" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is MCP server for Claude that gives it terminal control&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Desktop Commander MCP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@wonderwhy-er/desktop-commander&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/@wonderwhy-er/desktop-commander&#34; alt=&#34;npm downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://smithery.ai/server/@wonderwhy-er/desktop-commander&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/@wonderwhy-er/desktop-commander&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Short version. Two key things. Terminal commands and diff based file editing.&lt;/p&gt; &#xA;&lt;a href=&#34;https://glama.ai/mcp/servers/zempur9oh4&#34;&gt; &lt;img width=&#34;380&#34; height=&#34;200&#34; src=&#34;https://glama.ai/mcp/servers/zempur9oh4/badge&#34; alt=&#34;Claude Desktop Commander MCP server&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;This is server that allows Claude desktop app to execute long-running terminal commands on your computer and manage processes through Model Context Protocol (MCP) + Built on top of &lt;a href=&#34;https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem&#34;&gt;MCP Filesystem Server&lt;/a&gt; to provide additional search and replace file editing capabilities .&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute terminal commands with output streaming&lt;/li&gt; &#xA; &lt;li&gt;Command timeout and background execution support&lt;/li&gt; &#xA; &lt;li&gt;Process management (list and kill processes)&lt;/li&gt; &#xA; &lt;li&gt;Session management for long-running commands&lt;/li&gt; &#xA; &lt;li&gt;Full filesystem operations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Read/write files&lt;/li&gt; &#xA;   &lt;li&gt;Create/list directories&lt;/li&gt; &#xA;   &lt;li&gt;Move files/directories&lt;/li&gt; &#xA;   &lt;li&gt;Search files&lt;/li&gt; &#xA;   &lt;li&gt;Get file metadata&lt;/li&gt; &#xA;   &lt;li&gt;Code editing capabilities:&lt;/li&gt; &#xA;   &lt;li&gt;Surgical text replacements for small changes&lt;/li&gt; &#xA;   &lt;li&gt;Full file rewrites for major changes&lt;/li&gt; &#xA;   &lt;li&gt;Multiple file support&lt;/li&gt; &#xA;   &lt;li&gt;Pattern-based replacements&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, ensure you&#39;ve downloaded and installed the &lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop app&lt;/a&gt; and you have &lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;npm installed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Option 1: Installing via Smithery&lt;/h3&gt; &#xA;&lt;p&gt;To install Desktop Commander for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/@wonderwhy-er/desktop-commander&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install @wonderwhy-er/desktop-commander --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 2: Install trough npx&lt;/h3&gt; &#xA;&lt;p&gt;Just run this in terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx @wonderwhy-er/desktop-commander setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart Claude if running&lt;/p&gt; &#xA;&lt;h3&gt;Option 3: Add to claude_desktop_config by hand&lt;/h3&gt; &#xA;&lt;p&gt;Add this entry to your claude_desktop_config.json (on Mac, found at ~/Library/Application\ Support/Claude/claude_desktop_config.json):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;desktop-commander&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;-y&#34;,&#xA;        &#34;@wonderwhy-er/desktop-commander&#34;&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart Claude if running&lt;/p&gt; &#xA;&lt;h3&gt;Option 4: Checkout locally&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone and build:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/wonderwhy-er/ClaudeComputerCommander.git&#xA;cd ClaudeComputerCommander&#xA;npm run setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Restart Claude if running&lt;/p&gt; &#xA;&lt;p&gt;The setup command will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install dependencies&lt;/li&gt; &#xA; &lt;li&gt;Build the server&lt;/li&gt; &#xA; &lt;li&gt;Configure Claude&#39;s desktop app&lt;/li&gt; &#xA; &lt;li&gt;Add MCP servers to Claude&#39;s config if needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The server provides these tool categories:&lt;/p&gt; &#xA;&lt;h3&gt;Terminal Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;execute_command&lt;/code&gt;: Run commands with configurable timeout&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;read_output&lt;/code&gt;: Get output from long-running commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;force_terminate&lt;/code&gt;: Stop running command sessions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;list_sessions&lt;/code&gt;: View active command sessions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;list_processes&lt;/code&gt;: View system processes&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kill_process&lt;/code&gt;: Terminate processes by PID&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;block_command&lt;/code&gt;/&lt;code&gt;unblock_command&lt;/code&gt;: Manage command blacklist&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Filesystem Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;read_file&lt;/code&gt;/&lt;code&gt;write_file&lt;/code&gt;: File operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;create_directory&lt;/code&gt;/&lt;code&gt;list_directory&lt;/code&gt;: Directory management&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;move_file&lt;/code&gt;: Move/rename files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;search_files&lt;/code&gt;: Pattern-based file search&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;get_file_info&lt;/code&gt;: File metadata&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Edit Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;edit_block&lt;/code&gt;: Apply surgical text replacements (best for changes &amp;lt;20% of file size)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;write_file&lt;/code&gt;: Complete file rewrites (best for large changes &amp;gt;20% or when edit_block fails)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Search/Replace Block Format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;filepath.ext&#xA;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; SEARCH&#xA;existing code to replace&#xA;=======&#xA;new code to insert&#xA;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; REPLACE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;src/main.js&#xA;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; SEARCH&#xA;console.log(&#34;old message&#34;);&#xA;=======&#xA;console.log(&#34;new message&#34;);&#xA;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; REPLACE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Handling Long-Running Commands&lt;/h2&gt; &#xA;&lt;p&gt;For commands that may take a while:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;execute_command&lt;/code&gt; returns after timeout with initial output&lt;/li&gt; &#xA; &lt;li&gt;Command continues in background&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;read_output&lt;/code&gt; with PID to get new output&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;force_terminate&lt;/code&gt; to stop if needed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Model Context Protocol Integration&lt;/h2&gt; &#xA;&lt;p&gt;This project extends the MCP Filesystem Server to enable:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local server support in Claude Desktop&lt;/li&gt; &#xA; &lt;li&gt;Full system command execution&lt;/li&gt; &#xA; &lt;li&gt;Process management&lt;/li&gt; &#xA; &lt;li&gt;File operations&lt;/li&gt; &#xA; &lt;li&gt;Code editing with search/replace blocks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Created as part of exploring Claude MCPs: &lt;a href=&#34;https://youtube.com/live/TlbjFDbl5Us&#34;&gt;https://youtube.com/live/TlbjFDbl5Us&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you find this project useful, please consider giving it a ‚≠ê star on GitHub! This helps others discover the project and encourages further development.&lt;/p&gt; &#xA;&lt;p&gt;We welcome contributions from the community! Whether you&#39;ve found a bug, have a feature request, or want to contribute code, here&#39;s how you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Found a bug?&lt;/strong&gt; Open an issue at &lt;a href=&#34;https://github.com/wonderwhy-er/ClaudeComputerCommander/issues&#34;&gt;github.com/wonderwhy-er/ClaudeComputerCommander/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Have a feature idea?&lt;/strong&gt; Submit a feature request in the issues section&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Want to contribute code?&lt;/strong&gt; Fork the repository, create a branch, and submit a pull request&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Questions or discussions?&lt;/strong&gt; Start a discussion in the GitHub Discussions tab&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All contributions, big or small, are greatly appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>