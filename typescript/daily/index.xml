<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-11T01:36:39Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Nicenonecb/TalkGPT</title>
    <updated>2024-03-11T01:36:39Z</updated>
    <id>tag:github.com,2024-03-11:/Nicenonecb/TalkGPT</id>
    <link href="https://github.com/Nicenonecb/TalkGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TalkGPT&lt;/h1&gt; &#xA;&lt;h2&gt;Introduce&lt;/h2&gt; &#xA;&lt;p&gt;Implement local deployment and language learning based on openAI API&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;# or&#xA;yarn dev&#xA;# or&#xA;pnpm dev&#xA;# or&#xA;bun dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;h2&gt;Deploy on Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy your Next.js app is to use the &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=create-next-app&amp;amp;utm_campaign=create-next-app-readme&#34;&gt;Vercel Platform&lt;/a&gt; from the creators of Next.js.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://nextjs.org/docs/deployment&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>meetqy/aspoem</title>
    <updated>2024-03-11T01:36:39Z</updated>
    <id>tag:github.com,2024-03-11:/meetqy/aspoem</id>
    <link href="https://github.com/meetqy/aspoem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn Chinese Poetry With AsPoem.com&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/WzbeuNH.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;移动端&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://github.com/meetqy/aspoem/assets/18411315/1748c1bf-b4e9-4e69-94d7-9a83fd997804&#34; alt=&#34;310017729-c5728ebe-2977-4471-b0e1-92cd872874ee&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://github.com/meetqy/aspoem/assets/18411315/2515bd07-7b9a-46e0-b87b-d28aa5319281&#34; alt=&#34;310017294-502bd505-e10e-4e4c-86d8-e93f91ab7201&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;aspoem.com&lt;/h1&gt; &#xA;&lt;p&gt;现代化中国诗词学习网站，一个更加注重 &lt;strong&gt;UI和阅读体验&lt;/strong&gt;的诗词网站。&lt;/p&gt; &#xA;&lt;h2&gt;基础技术栈&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;prisma&lt;/li&gt; &#xA; &lt;li&gt;nextjs&lt;/li&gt; &#xA; &lt;li&gt;trpc&lt;/li&gt; &#xA; &lt;li&gt;tailwindcss&lt;/li&gt; &#xA; &lt;li&gt;shadcn/ui&lt;/li&gt; &#xA; &lt;li&gt;postgres + supabase&lt;/li&gt; &#xA; &lt;li&gt;twikoo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;本地部署&lt;/h2&gt; &#xA;&lt;p&gt;参考 &lt;code&gt;.env.example&lt;/code&gt; 配置。&lt;/p&gt; &#xA;&lt;h2&gt;协议&lt;/h2&gt; &#xA;&lt;p&gt;AGPL 3.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cuixueshe/earthworm</title>
    <updated>2024-03-11T01:36:39Z</updated>
    <id>tag:github.com,2024-03-11:/cuixueshe/earthworm</id>
    <link href="https://github.com/cuixueshe/earthworm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learning English through the method of constructing sentences with conjunctions&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Earthworm&#34; width=&#34;120&#34; height=&#34;120&#34; src=&#34;https://raw.githubusercontent.com/cuixueshe/earthworm/main/apps/client/public/logo.png&#34;&gt; &#xA; &lt;h1&gt;Earthworm&lt;/h1&gt; &#xA; &lt;span&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/cuixueshe/earthworm/main/README.zh-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/span&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚡ Introduction&lt;/h2&gt; &#xA;&lt;p&gt;By constructing sentences with conjunctions, it helps you learn English better~ 😊&lt;/p&gt; &#xA;&lt;h2&gt;🚀 How to start ?&lt;/h2&gt; &#xA;&lt;h3&gt;⚠️ Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;pnpm version &amp;gt;= 8&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node.js version &amp;gt;= v20&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MySQL version &amp;gt;= 8.0.0&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis version &amp;gt;= 5.0.0&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;. please make sure it is installed and running successfully on your local machine.&lt;/li&gt; &#xA; &lt;li&gt;The mentioned operations below are based on the root directory of the current project, please be attentive to ensure there are no errors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker --version # Docker version 24.0.7, build afdd53b&#xA;&#xA;node --version # v20+&#xA;&#xA;pnpm -v # 8+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;1. Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Copy the contents of &lt;code&gt;.env.example&lt;/code&gt; to the &lt;code&gt;./apps/api/.env&lt;/code&gt; file&lt;/h3&gt; &#xA;&lt;p&gt;If the file doesn&#39;t exist, you need to create it manually. Linux users can perform the operation with the following command.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It primarily stores environmental variable information for the main storage system, such as database connection addresses, usernames, passwords, ports, keys, and so on. The backend service will read configuration from this file. Of course, you can also customize it with your own configuration information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example ./apps/api/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start/stop/delete Docker Compose service&lt;/h3&gt; &#xA;&lt;p&gt;The backend relies on MySQL and Redis services. Start and stop these services using the commands configured in &lt;code&gt;package.json&lt;/code&gt; below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start&#xA;pnpm docker:start&#xA;# stop&#xA;pnpm docker:stop&#xA;# delete&#xA;pnpm docker:delete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer manual, you can use the commands below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;docker compose stop&#xA;docker compose down&#xA;&#xA;# commands compatible with older versions of Docker&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Initialize Database&lt;/h3&gt; &#xA;&lt;p&gt;When executing the current command, try to wait for a short interval after the previous command, as we are using the &lt;code&gt;-d&lt;/code&gt; parameter, which runs the services in the background. They might still be in a &#39;running&#39; state. If you encounter an error, try running the command again.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Create and upload course data (only execute this during the initial database initialization)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:upload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;6. Start the backend service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev:serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7. Start the frontend service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev:client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How to correctly update course data ?&lt;/h3&gt; &#xA;&lt;p&gt;when you identify incorrect course data and make modifications, you should use the following command to update the course data in the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;pnpm install Error?&lt;/h3&gt; &#xA;&lt;p&gt;Some dependencies require compilation during installation, necessitating the presence of relevant build environments. If these environments are not available, the compilation process may fail. Additionally, different modules may require different build environments, so specific issues need to be analyzed individually. Below are specific problems encountered along with their solutions.&lt;/p&gt; &#xA;&lt;p&gt;First try the following command to update &lt;code&gt;pnpm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm i -g&#xA;# or&#xA;pnpm i -g pnpm&#xA;# or&#xA;npx pnpm i -g pnpm@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Error installing the argon2 module on Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio 2015 or later, specifically the &#34;Desktop development with C++&#34; component. (In practice, any component containing C++ development tools and libraries will suffice.)&lt;/li&gt; &#xA; &lt;li&gt;If you encounter Chinese characters display issues during compilation, execute &lt;code&gt;chcp 437&lt;/code&gt; in the command prompt, then rerun the install command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Permission Denied in Docker?&lt;/h3&gt; &#xA;&lt;p&gt;When using WSL2 as a development environment in Windows, the following error occurs when starting Docker with &lt;code&gt;docker compose up -d&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &#34;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json&#34;: dial unix /var/run/docker.sock: connect: permission denied&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Solution&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add the current user to the docker group&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add docker user group&#xA;sudo groupadd docker&#xA;# Add the logged-in user to the docker user group&#xA;sudo gpasswd -a $USER docker&#xA;# Update user group&#xA;newgrp docker&#xA;# Test if docker command is working properly&#xA;docker images&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Frontend Development Guideline&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Do not Destructure Pinia store. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The readability will be better when using &lt;code&gt;store&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Destructuring can lead to reactivity loss and using &lt;code&gt;storeToRefs&lt;/code&gt; is also quite cumbersome&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Avoid including UI logic in composables. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Such as &lt;code&gt;useMessage&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;We categorize the router as UI logic, and for ease of testing, avoid including routerrelated logic in there&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone who has already contributed to Earthworm! 🎉&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com//cuixueshe/earthworm/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors.nn.ci/api?repo=cuixueshe/earthworm&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>