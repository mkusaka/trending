<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-20T01:32:44Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nasan016/webshell</title>
    <updated>2023-12-20T01:32:44Z</updated>
    <id>tag:github.com,2023-12-20:/nasan016/webshell</id>
    <link href="https://github.com/nasan016/webshell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Customizable Terminal Styled Website&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.nasan.dev/&#34;&gt;WebShell | Terminal Portfolio Website&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;banner&#34; src=&#34;https://raw.githubusercontent.com/nasan016/webshell/main/res/banner.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/vercel-%23000000.svg?style=for-the-badge&amp;amp;logo=vercel&amp;amp;logoColor=white&#34; alt=&#34;Vercel&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/vite-%23646CFF.svg?style=for-the-badge&amp;amp;logo=vite&amp;amp;logoColor=white&#34; alt=&#34;Vite&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&amp;amp;logo=typescript&amp;amp;logoColor=white&#34; alt=&#34;TypeScript&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&amp;amp;logo=html5&amp;amp;logoColor=white&#34; alt=&#34;HTML5&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/css3-%231572B6.svg?style=for-the-badge&amp;amp;logo=css3&amp;amp;logoColor=white&#34; alt=&#34;CSS3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Tab]&lt;/strong&gt; for auto completion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[Esc]&lt;/strong&gt; to clear the input line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;[↑][↓]&lt;/strong&gt; to scroll through your command history.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;???&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;banner&#34; src=&#34;https://raw.githubusercontent.com/nasan016/webshell/main/res/secret.png&#34;&gt; &#xA;&lt;/div&gt; How did we get here? &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Most of the configuration is done in the &lt;code&gt;config.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;ascii&#34;: [&#xA;    &#34;██████╗ ██╗   ██╗ ██████╗&#34;,&#xA;    &#34;██╔══██╗██║   ██║██╔════╝&#34;,&#xA;    &#34;██║  ██║██║   ██║██║  ███╗&#34;,&#xA;    &#34;██║  ██║██║   ██║██║   ██║&#34;,&#xA;    &#34;██████╔╝╚██████╔╝╚██████╔╝&#34;,&#xA;    &#34;╚═════╝  ╚═════╝  ╚═════╝&#34;,&#xA;  ],&#xA;  &#34;repoLink&#34;: &#34;https://github.com/nasan016/webshell&#34;,&#xA;  &#34;social&#34;: {&#xA;    &#34;email&#34;: &#34;dug@pixar.com&#34;,&#xA;    &#34;github&#34;: &#34;dugfromup&#34;,&#xA;    &#34;linkedin&#34;: &#34;dugthedog&#34;&#xA;  },&#xA;  &#34;aboutGreeting&#34;: &#34;My name is Dug. I have just met you.&#34;,&#xA;  &#34;projects&#34;: [&#xA;    [&#xA;      &#34;Project Name&#34;,&#xA;      &#34;Project Description&#34;,&#xA;      &#34;Project Link&#34;&#xA;    ],&#xA;    [&#xA;      &#34;Another Project Name&#34;,&#xA;      &#34;Another Project Description&#34;,&#xA;      &#34;Another Project Link&#34;&#xA;    ]&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the Project Locally:&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/nasan016/webshell.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to the project directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd webshell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>homanp/superagent</title>
    <updated>2023-12-20T01:32:44Z</updated>
    <id>tag:github.com,2023-12-20:/homanp/superagent</id>
    <link href="https://github.com/homanp/superagent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🥷 The open framework for building AI Assistants&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;100px&#34; src=&#34;https://github.com/homanp/superagent/assets/2464556/eb51fa38-4a2a-4c41-b348-d3c1abc04234&#34;&gt; &#xA; &lt;h1&gt;Superagent&lt;/h1&gt; &#xA; &lt;h3&gt;The open framework for building AI Assistants&lt;/h3&gt; &#xA; &lt;p&gt; &lt;img alt=&#34;GitHub Contributors&#34; src=&#34;https://img.shields.io/github/contributors/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/homanp/Superagent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/repo-size/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Issues&#34; src=&#34;https://img.shields.io/github/issues/homanp/Superagent&#34;&gt; &lt;img alt=&#34;GitHub Pull Requests&#34; src=&#34;https://img.shields.io/github/issues-pr/homanp/Superagent&#34;&gt; &lt;img alt=&#34;Github License&#34; src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1110910277110743103?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=plastic&amp;amp;color=d7b023)%5D(https://discord.gg/e8j7mgjDUK&#34;&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-demo&#34;&gt;Demo&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-use-cases&#34;&gt;Use cases&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://docs.superagent.sh&#34; target=&#34;_blank&#34;&gt;Docs&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-tutorials&#34; target=&#34;_blank&#34;&gt;Tutorials&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-sdks&#34; target=&#34;_blank&#34;&gt;SDKs&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/homanp/superagent/main/#-contributions&#34; target=&#34;_blank&#34;&gt;Contributions&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Superagent is an open-source agent framework that enables any developer to integrate production-ready AI Assistants into any application in a matter of minutes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎥 Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/homanp/superagent/assets/2464556/1a742181-6a5f-428c-82db-5f891dad0d31&#34;&gt;https://github.com/homanp/superagent/assets/2464556/1a742181-6a5f-428c-82db-5f891dad0d31&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Use cases&lt;/h2&gt; &#xA;&lt;p&gt;Superagent lets you build any AI application/microservice you want, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Question/Answering over Documents (LLM Finetunes/Vectorstores).&lt;/li&gt; &#xA; &lt;li&gt;Chatbots.&lt;/li&gt; &#xA; &lt;li&gt;Co-pilots &amp;amp; AI assistants.&lt;/li&gt; &#xA; &lt;li&gt;Content generation.&lt;/li&gt; &#xA; &lt;li&gt;Data aggregation.&lt;/li&gt; &#xA; &lt;li&gt;Workflow automation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👀 Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory&lt;/li&gt; &#xA; &lt;li&gt;Streaming&lt;/li&gt; &#xA; &lt;li&gt;Custom finetuning 🆕&lt;/li&gt; &#xA; &lt;li&gt;Python/Typescript SDKs&lt;/li&gt; &#xA; &lt;li&gt;REST API&lt;/li&gt; &#xA; &lt;li&gt;API connectivity&lt;/li&gt; &#xA; &lt;li&gt;Vectorization&lt;/li&gt; &#xA; &lt;li&gt;Support for proprietary and OSS LLMs&lt;/li&gt; &#xA; &lt;li&gt;API concurrency support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📋 Documentation:&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, examples and setup guidelines, visit &lt;a href=&#34;https://docs.superagent.sh&#34;&gt;docs.superagent.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧐 Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;We post tutorials regularly on our &lt;a href=&#34;https://www.youtube.com/channel/UCBeXnF8gh2EwAmOIwpmfjmA&#34;&gt;YouTube channel&lt;/a&gt;. Make sure to check them out !&lt;/p&gt; &#xA;&lt;h2&gt;🔗 SDKs&lt;/h2&gt; &#xA;&lt;p&gt;If you are planning to integrate Superagent into your stack, you can use one of the following SDKs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/homanp/superagent-py&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/homanp/superagent-js&#34;&gt;Typescript/Javascript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simonweniger/superagent-swift&#34;&gt;Swift&lt;/a&gt; (Community)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🫶 Contributions:&lt;/h2&gt; &#xA;&lt;p&gt;Superagent is an open-source project, and contributions are welcome. If you want to contribute, you can create new features, fix bugs, or improve the infrastructure. Please refer to the &lt;a href=&#34;https://github.com/homanp/Superagent/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file in the repository for more information on how to contribute.&lt;/p&gt; &#xA;&lt;p&gt;To see how to contribute, visit &lt;a href=&#34;https://github.com/homanp/Superagent/raw/main/.github/CONTRIBUTING.md&#34;&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/homanp/superagent/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=homanp/superagent&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>anoma/namada-interface</title>
    <updated>2023-12-20T01:32:44Z</updated>
    <id>tag:github.com,2023-12-20:/anoma/namada-interface</id>
    <link href="https://github.com/anoma/namada-interface" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; namada-interface&lt;/h1&gt; &#xA;&lt;div style=&#34;width: 100%; display: flex; justify-content: center; margin-bottom: 32px;&#34;&gt; &#xA; &lt;img style=&#34;width: 300px;&#34; src=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/banner-image.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;See our &lt;code&gt;specs&lt;/code&gt; for more detailed documentation in &lt;a href=&#34;https://github.com/anoma/namada-interface/raw/main/specs&#34;&gt;/specs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#ubuntu&#34;&gt;Ubuntu Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#macos&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#apple-silicon&#34;&gt;Apple Silicon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#local-chain&#34;&gt;Local Chain&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#extension&#34;&gt;Extension&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#interface&#34;&gt;Interface&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#testing&#34;&gt;Testing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#unit&#34;&gt;Unit&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/#e2e&#34;&gt;e2e&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Before using apps in this repo, we first need to install all dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt; These instructions may work with other Ubuntu-based systems, but are only confirmed to work in Ubuntu.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install rustup&#xA;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&#xA;# Add WASM target&#xA;rustup target add wasm32-unknown-unknown&#xA;&#xA;# Install clang&#xA;sudo apt-get install -y clang&#xA;&#xA;# Install pkg-config&#xA;sudo apt-get install -y pkg-config&#xA;&#xA;# Install openssl development packages&#xA;sudo apt-get install -y libssl-dev&#xA;&#xA;# Install protoc&#xA;sudo apt-get install -y protobuf-compiler&#xA;&#xA;# Install wasm-pack&#xA;curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh&#xA;&#xA;# Install yarn and JS dependencies&#xA;npm install -g yarn&#xA;&#xA;# within namada-interface/ base folder:&#xA;yarn&#xA;&#xA;# Install web-ext&#xA;yarn global add web-ext&#xA;&#xA;# Initialize Husky&#xA;yarn prepare&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install xcode&#xA;xcode-select --install&#xA;&#xA;# Install rustup&#xA;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&#xA;# Add WASM target&#xA;rustup target add wasm32-unknown-unknown&#xA;&#xA;# Install clang&#xA;brew install clang&#xA;&#xA;# Install pkg-config&#xA;brew install pkg-config&#xA;&#xA;# Install openssl development packages&#xA;brew install libssl-dev&#xA;&#xA;# Install protoc&#xA;brew install protobuf&#xA;&#xA;# Install wasm-pack&#xA;curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh&#xA;&#xA;# Install yarn and JS dependencies&#xA;npm install -g yarn&#xA;&#xA;# within namada-interface/ base folder:&#xA;yarn&#xA;&#xA;# Install web-ext&#xA;yarn global add web-ext&#xA;&#xA;# Initialize Husky&#xA;yarn prepare&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, update your shell environment (e.g., in &lt;code&gt;~/.zshrc&lt;/code&gt;) to set the following variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export CC=/usr/local/opt/llvm/bin/clang&#xA;AR=/usr/local/opt/llvm/bin/llvm-ar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Apple Silicon&lt;/h4&gt; &#xA;&lt;p&gt;On macOS, when using Apple Silicon architecture, in order to compile some packages for our wasm dependencies, you will need to install the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Mac M1/M2 only - install brew&#39;s version of llvm&#xA;brew install llvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in your shell profile (e.g., &lt;code&gt;~/.zshrc&lt;/code&gt;), export the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Mac M1/M2 only&#xA;export LDFLAGS=&#34;-L/opt/homebrew/opt/llvm/lib&#34;&#xA;export CPPFLAGS=&#34;-I/opt/homebrew/opt/llvm/include&#34;&#xA;export CC=/opt/homebrew/opt/llvm/bin/clang&#xA;export AR=/opt/homebrew/opt/llvm/bin/llvm-ar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Local chain&lt;/h3&gt; &#xA;&lt;p&gt;Before you start the extension and interface, you will need at least a chain ID and an RPC URL. This can either be a local chain or an existing network. If you know the chain ID and URL, you can skip the following and simply enter these values in the &lt;code&gt;apps/namada-interface/.env&lt;/code&gt; file (to see an example of the values you can set, see &lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/apps/namada-interface/.env.sample&#34;&gt;.env.sample&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;To build and run the chain locally, you will need to clone &lt;a href=&#34;http://github.com/anoma/namada&#34;&gt;http://github.com/anoma/namada&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;namada/&lt;/code&gt;, first run &lt;code&gt;make build&lt;/code&gt;, then &lt;code&gt;make install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize a local chain with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;namadac utils init-network --genesis-path genesis/e2e-tests-single-node.toml --wasm-checksums-path wasm/checksums.json --chain-prefix local --unsafe-dont-encrypt --localhost --allow-duplicate-ip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Make note of the chain ID from this output! This will be used below where &lt;code&gt;{CHAIN_ID}&lt;/code&gt; is denoted (replace these instances with the actual chain ID). 3. To transfer funds from faucet via the CLI, you will need to create a wallet:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;namadaw key gen --alias my-key&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Before running the chain, you will need to change one configuration file:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Linux: Edit &lt;code&gt;~/.local/share/namada/{CHAIN_ID}/setup/validator-0/.namada/{CHAIN_ID}/config.toml&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;On macOS: Edit &lt;code&gt;~/Library/Application\ Support/Namada/{CHAIN_ID}/setup/validator-0/.namada/{CHAIN_ID}/config.toml&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;config.toml&lt;/code&gt;, change the line &lt;code&gt;cors_allowed_origins = []&lt;/code&gt; to &lt;code&gt;cors_allowed_origins = [&#34;*&#34;]&lt;/code&gt;, then save and close.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can now start the local chain&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Linux:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;namadan --chain-id {CHAIN_ID} --base-dir ~/.local/share/Namada/{CHAIN_ID}/setup/validator-0/.namada ledger run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On macOS:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;namadan --chain-id {CHAIN_ID} --base-dir ~/Library/Application\ Support/Namada/{CHAIN_ID}/setup/validator-0/.namada ledger run&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit the following value in &lt;code&gt;namada-interface/apps/namada-interface/.env&lt;/code&gt; (remember to replace &lt;code&gt;{CHAIN_ID}&lt;/code&gt; with the actual chain ID from above):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAMADA_INTERFACE_NAMADA_CHAIN_ID={CHAIN_ID}&#xA;NAMADA_INTERFACE_NAMADA_URL=http://127.0.0.1:27657/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Extension&lt;/h3&gt; &#xA;&lt;p&gt;Within &lt;code&gt;apps/extension/&lt;/code&gt;, we may issue the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build wasm dependencies&#xA;yarn wasm:build&#xA;&#xA;# Build wasm dependencies with debugging enabled&#xA;yarn wasm:build:dev&#xA;&#xA;# Run development extension for Chrome&#xA;yarn start:chrome&#xA;&#xA;# Run development extension for Firefox&#xA;yarn start:firefox&#xA;&#xA;# Build Chrome extension (production version)&#xA;yarn build:chrome&#xA;&#xA;# Build Firefox extension (production version)&#xA;yarn build:firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interface&lt;/h3&gt; &#xA;&lt;p&gt;Within &lt;code&gt;apps/namada-interface/&lt;/code&gt;, we may issue the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Make sure to build wasm dependencies before starting development server&#xA;yarn wasm:build&#xA;&#xA;# Run development interface, hosted at http://localhost:3000&#xA;yarn dev:local&#xA;&#xA;# Build production version&#xA;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also app-specific instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/apps/namada-interface/README.md&#34;&gt;namada-interface README&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/anoma/namada-interface/main/apps/extension/README.md&#34;&gt;extension README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;h4&gt;Unit&lt;/h4&gt; &#xA;&lt;p&gt;At the root-level, we can issue commands for all packages in the monorepo. Following is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Execute all tests within monorepo&#xA;# Running this from the root project directory will run unit tests&#xA;# for all packages where a test script is defined&#xA;yarn test&#xA;&#xA;# Lint all packages&#xA;yarn lint&#xA;&#xA;# Fix linting on all packages&#xA;yarn lint:fix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;e2e&lt;/h4&gt; &#xA;&lt;p&gt;TBA&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Unless explicitly stated otherwise all files in this repository are licensed under the Apache License 2.0.&lt;/p&gt; &#xA;&lt;p&gt;License boilerplate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright Anoma Foundation 2021-2023&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>