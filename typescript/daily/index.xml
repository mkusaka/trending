<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T01:58:42Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>actions/upload-artifact</title>
    <updated>2022-06-04T01:58:42Z</updated>
    <id>tag:github.com,2022-06-04:/actions/upload-artifact</id>
    <link href="https://github.com/actions/upload-artifact" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Upload-Artifact v3&lt;/h1&gt; &#xA;&lt;p&gt;This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/actions/download-artifact&#34;&gt;download-artifact&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;What&#39;s new&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easier upload &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Specify a wildcard pattern&lt;/li&gt; &#xA;   &lt;li&gt;Specify an individual file&lt;/li&gt; &#xA;   &lt;li&gt;Specify a directory (previously you were limited to only this option)&lt;/li&gt; &#xA;   &lt;li&gt;Multi path upload &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Use a combination of individual files, wildcards or directories&lt;/li&gt; &#xA;     &lt;li&gt;Support for excluding certain files&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Upload an artifact without providing a name&lt;/li&gt; &#xA; &lt;li&gt;Fix for artifact uploads sometimes not working with containers&lt;/li&gt; &#xA; &lt;li&gt;Proxy support out of the box&lt;/li&gt; &#xA; &lt;li&gt;Port entire action to typescript from a runner plugin so it is easier to collaborate and accept contributions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Refer &lt;a href=&#34;https://github.com/actions/upload-artifact/tree/releases/v1&#34;&gt;here&lt;/a&gt; for the previous version&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/actions/upload-artifact/main/action.yml&#34;&gt;action.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Upload an Individual File&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v2&#xA;&#xA;- run: mkdir -p path/to/artifact&#xA;&#xA;- run: echo hello &amp;gt; path/to/artifact/world.txt&#xA;&#xA;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    name: my-artifact&#xA;    path: path/to/artifact/world.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload an Entire Directory&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    name: my-artifact&#xA;    path: path/to/artifact/ # or path/to/artifact&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload using a Wildcard Pattern&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    name: my-artifact&#xA;    path: path/**/[abc]rtifac?/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload using Multiple Paths and Exclusions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    name: my-artifact&#xA;    path: |&#xA;      path/output/bin/&#xA;      path/output/test-results&#xA;      !path/**/*.tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For supported wildcards along with behavior and documentation, see &lt;a href=&#34;https://github.com/actions/toolkit/tree/main/packages/glob&#34;&gt;@actions/glob&lt;/a&gt; which is used internally to search for files.&lt;/p&gt; &#xA;&lt;p&gt;If a wildcard pattern is used, the path hierarchy will be preserved after the first wildcard pattern:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;path/to/*/directory/foo?.txt =&amp;gt;&#xA;    ∟ path/to/some/directory/foo1.txt&#xA;    ∟ path/to/some/directory/foo2.txt&#xA;    ∟ path/to/other/directory/foo1.txt&#xA;&#xA;would be flattened and uploaded as =&amp;gt;&#xA;    ∟ some/directory/foo1.txt&#xA;    ∟ some/directory/foo2.txt&#xA;    ∟ other/directory/foo1.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If multiple paths are provided as input, the least common ancestor of all the search paths will be used as the root directory of the artifact. Exclude paths do not affect the directory structure.&lt;/p&gt; &#xA;&lt;p&gt;Relative and absolute file paths are both allowed. Relative paths are rooted against the current working directory. Paths that begin with a wildcard character should be quoted to avoid being interpreted as YAML aliases.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/actions/toolkit/tree/main/packages/artifact&#34;&gt;@actions/artifact&lt;/a&gt; package is used internally to handle most of the logic around uploading an artifact. There is extra documentation around upload limitations and behavior in the toolkit repo that is worth checking out.&lt;/p&gt; &#xA;&lt;h3&gt;Customization if no files are found&lt;/h3&gt; &#xA;&lt;p&gt;If a path (or paths), result in no files being found for the artifact, the action will succeed but print out a warning. In certain scenarios it may be desirable to fail the action or suppress the warning. The &lt;code&gt;if-no-files-found&lt;/code&gt; option allows you to customize the behavior of the action if no files are found:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    name: my-artifact&#xA;    path: path/to/artifact/&#xA;    if-no-files-found: error # &#39;warn&#39; or &#39;ignore&#39; are also available, defaults to `warn`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conditional Artifact Upload&lt;/h3&gt; &#xA;&lt;p&gt;To upload artifacts only when the previous step of a job failed, use &lt;a href=&#34;https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#job-status-check-functions&#34;&gt;&lt;code&gt;if: failure()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  if: failure()&#xA;  with:&#xA;    name: my-artifact&#xA;    path: path/to/artifact/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uploading without an artifact name&lt;/h3&gt; &#xA;&lt;p&gt;You can upload an artifact without specifying a name&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    path: path/to/artifact/world.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If not provided, &lt;code&gt;artifact&lt;/code&gt; will be used as the default name which will manifest itself in the UI after upload.&lt;/p&gt; &#xA;&lt;h3&gt;Uploading to the same artifact&lt;/h3&gt; &#xA;&lt;p&gt;With the following example, the available artifact (named &lt;code&gt;artifact&lt;/code&gt; by default if no name is provided) would contain both &lt;code&gt;world.txt&lt;/code&gt; (&lt;code&gt;hello&lt;/code&gt;) and &lt;code&gt;extra-file.txt&lt;/code&gt; (&lt;code&gt;howdy&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- run: echo hi &amp;gt; world.txt&#xA;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    path: world.txt&#xA;&#xA;- run: echo howdy &amp;gt; extra-file.txt&#xA;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    path: extra-file.txt&#xA;&#xA;- run: echo hello &amp;gt; world.txt&#xA;- uses: actions/upload-artifact@v3&#xA;  with:&#xA;    path: world.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each artifact behaves as a file share. Uploading to the same artifact multiple times in the same workflow can overwrite and append already uploaded files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    strategy:&#xA;      matrix:&#xA;          node-version: [8.x, 10.x, 12.x, 13.x]&#xA;    steps:&#xA;        - name: Create a file&#xA;          run: echo ${{ matrix.node-version }} &amp;gt; my_file.txt&#xA;        - name: Accidentally upload to the same artifact via multiple jobs&#xA;          uses: actions/upload-artifact@v3&#xA;          with:&#xA;              name: my-artifact&#xA;              path: ${{ github.workspace }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; Be careful when uploading to the same artifact via multiple jobs as artifacts may become corrupted. When uploading a file with an identical name and path in multiple jobs, uploads may fail with 503 errors due to conflicting uploads happening at the same time. Ensure uploads to identical locations to not interfere with each other.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In the above example, four jobs will upload four different files to the same artifact but there will only be one file available when &lt;code&gt;my-artifact&lt;/code&gt; is downloaded. Each job overwrites what was previously uploaded. To ensure that jobs don&#39;t overwrite existing artifacts, use a different name per job:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;          uses: actions/upload-artifact@v3&#xA;          with:&#xA;              name: my-artifact ${{ matrix.node-version }}&#xA;              path: ${{ github.workspace }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables and Tilde Expansion&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;~&lt;/code&gt; in the path input as a substitute for &lt;code&gt;$HOME&lt;/code&gt;. Basic tilde expansion is supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  - run: |&#xA;      mkdir -p ~/new/artifact&#xA;      echo hello &amp;gt; ~/new/artifact/world.txt&#xA;  - uses: actions/upload-artifact@v3&#xA;    with:&#xA;      name: Artifacts-V3&#xA;      path: ~/new/**/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Environment variables along with context expressions can also be used for input. For documentation see &lt;a href=&#34;https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions&#34;&gt;context and expression syntax&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    env:&#xA;      name: my-artifact&#xA;    steps:&#xA;    - run: |&#xA;        mkdir -p ${{ github.workspace }}/artifact&#xA;        echo hello &amp;gt; ${{ github.workspace }}/artifact/world.txt&#xA;    - uses: actions/upload-artifact@v3&#xA;      with:&#xA;        name: ${{ env.name }}-name&#xA;        path: ${{ github.workspace }}/artifact/**/*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For environment variables created in other steps, make sure to use the &lt;code&gt;env&lt;/code&gt; expression syntax&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    steps:&#xA;    - run: | &#xA;        mkdir testing&#xA;        echo &#34;This is a file to upload&#34; &amp;gt; testing/file.txt&#xA;        echo &#34;artifactPath=testing/file.txt&#34; &amp;gt;&amp;gt; $GITHUB_ENV&#xA;    - uses: actions/upload-artifact@v3&#xA;      with:&#xA;        name: artifact&#xA;        path: ${{ env.artifactPath }} # this will resolve to testing/file.txt at runtime&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retention Period&lt;/h3&gt; &#xA;&lt;p&gt;Artifacts are retained for 90 days by default. You can specify a shorter retention period using the &lt;code&gt;retention-days&lt;/code&gt; input:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  - name: Create a file&#xA;    run: echo &#34;I won&#39;t live long&#34; &amp;gt; my_file.txt&#xA;&#xA;  - name: Upload Artifact&#xA;    uses: actions/upload-artifact@v3&#xA;    with:&#xA;      name: my-artifact&#xA;      path: my_file.txt&#xA;      retention-days: 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The retention period must be between 1 and 90 inclusive. For more information see &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/usage-limits-billing-and-administration#artifact-and-log-retention-policy&#34;&gt;artifact and log retention policies&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Where does the upload go?&lt;/h2&gt; &#xA;&lt;p&gt;At the bottom of the workflow summary page, there is a dedicated section for artifacts. Here&#39;s a screenshot of something you might see:&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/16109154/103645952-223c6880-4f59-11eb-8268-8dca6937b5f9.png&#34; width=&#34;700&#34; height=&#34;300&#34;&gt; &#xA;&lt;p&gt;There is a trashcan icon that can be used to delete the artifact. This icon will only appear for users who have write permissions to the repository.&lt;/p&gt; &#xA;&lt;p&gt;The size of the artifact is denoted in bytes. The displayed artifact size denotes the raw uploaded artifact size (the sum of all the individual files uploaded during the workflow run for the artifact), not the compressed size. When you click to download an artifact from the summary page, a compressed zip is created with all the contents of the artifact and the size of the zip that you download may differ significantly from the displayed size. Billing is based on the raw uploaded size and not the size of the zip.&lt;/p&gt; &#xA;&lt;h1&gt;Limitations&lt;/h1&gt; &#xA;&lt;h3&gt;Zipped Artifact Downloads&lt;/h3&gt; &#xA;&lt;p&gt;During a workflow run, files are uploaded and downloaded individually using the &lt;code&gt;upload-artifact&lt;/code&gt; and &lt;code&gt;download-artifact&lt;/code&gt; actions. However, when a workflow run finishes and an artifact is downloaded from either the UI or through the &lt;a href=&#34;https://developer.github.com/v3/actions/artifacts/#download-an-artifact&#34;&gt;download api&lt;/a&gt;, a zip is dynamically created with all the file contents that were uploaded. There is currently no way to download artifacts after a workflow run finishes in a format other than a zip or to download artifact contents individually. One of the consequences of this limitation is that if a zip is uploaded during a workflow run and then downloaded from the UI, there will be a double zip created.&lt;/p&gt; &#xA;&lt;h3&gt;Permission Loss&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; File permissions are not maintained during artifact upload &lt;span&gt;❗&lt;/span&gt; For example, if you make a file executable using &lt;code&gt;chmod&lt;/code&gt; and then upload that file, post-download the file is no longer guaranteed to be set as an executable.&lt;/p&gt; &#xA;&lt;h3&gt;Case Insensitive Uploads&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; File uploads are case insensitive &lt;span&gt;❗&lt;/span&gt; If you upload &lt;code&gt;A.txt&lt;/code&gt; and &lt;code&gt;a.txt&lt;/code&gt; with the same root path, only a single file will be saved and available during download.&lt;/p&gt; &#xA;&lt;h3&gt;Maintaining file permissions and case sensitive files&lt;/h3&gt; &#xA;&lt;p&gt;If file permissions and case sensitivity are required, you can &lt;code&gt;tar&lt;/code&gt; all of your files together before artifact upload. Post download, the &lt;code&gt;tar&lt;/code&gt; file will maintain file permissions and case sensitivity:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  - name: Tar files&#xA;    run: tar -cvf my_files.tar /path/to/my/directory&#xA;&#xA;  - name: Upload Artifact&#xA;    uses: actions/upload-artifact@v3&#xA;    with:&#xA;      name: my-artifact&#xA;      path: my_files.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Too many uploads resulting in 429 responses&lt;/h3&gt; &#xA;&lt;p&gt;A very minute subset of users who upload a very very large amount of artifacts in a short period of time may see their uploads throttled or fail because of &lt;code&gt;Request was blocked due to exceeding usage of resource &#39;DBCPU&#39; in namespace&lt;/code&gt; or &lt;code&gt;Unable to copy file to server StatusCode=TooManyRequests&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To reduce the chance of this happening, you can reduce the number of HTTP calls made during artifact upload by zipping or archiving the contents of your artifact before an upload starts. As an example, imagine an artifact with 1000 files (each 10 Kb in size). Without any modification, there would be around 1000 HTTP calls made to upload the artifact. If you zip or archive the artifact beforehand, the number of HTTP calls can be dropped to single digit territory. Measures like this will significantly speed up your upload and prevent uploads from being throttled or in some cases fail.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.github.com/en/actions/advanced-guides/storing-workflow-data-as-artifacts&#34;&gt;Storing workflow data as artifacts&lt;/a&gt; for additional examples and tips.&lt;/p&gt; &#xA;&lt;p&gt;See extra documentation for the &lt;a href=&#34;https://github.com/actions/toolkit/raw/main/packages/artifact/docs/additional-information.md&#34;&gt;@actions/artifact&lt;/a&gt; package that is used internally regarding certain behaviors and limitations.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/actions/upload-artifact/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vitejs/vite</title>
    <updated>2022-06-04T01:58:42Z</updated>
    <id>tag:github.com,2022-06-04:/vitejs/vite</id>
    <link href="https://github.com/vitejs/vite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next generation frontend tooling. It&#39;s fast!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://vitejs.dev&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img width=&#34;180&#34; src=&#34;https://vitejs.dev/logo.svg?sanitize=true&#34; alt=&#34;Vite logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://npmjs.com/package/vite&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vite.svg?sanitize=true&#34; alt=&#34;npm package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nodejs.org/en/about/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/node/v/vite.svg?sanitize=true&#34; alt=&#34;node compatibility&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vitejs/vite/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/vitejs/vite/actions/workflows/ci.yml/badge.svg?branch=main&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat.vitejs.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-discord-blue?style=flat&amp;amp;logo=discord&#34; alt=&#34;discord chat&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Vite ⚡&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Next Generation Frontend Tooling&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💡 Instant Server Start&lt;/li&gt; &#xA; &lt;li&gt;⚡️ Lightning Fast HMR&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Rich Features&lt;/li&gt; &#xA; &lt;li&gt;📦 Optimized Build&lt;/li&gt; &#xA; &lt;li&gt;🔩 Universal Plugin Interface&lt;/li&gt; &#xA; &lt;li&gt;🔑 Fully Typed APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Vite (French word for &#34;quick&#34;, pronounced &lt;a href=&#34;https://cdn.jsdelivr.net/gh/vitejs/vite@main/docs/public/vite.mp3&#34;&gt;&lt;code&gt;/vit/&lt;/code&gt;&lt;/a&gt;, like &#34;veet&#34;) is a new breed of frontend build tool that significantly improves the frontend development experience. It consists of two major parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A dev server that serves your source files over &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules&#34;&gt;native ES modules&lt;/a&gt;, with &lt;a href=&#34;https://vitejs.dev/guide/features.html&#34;&gt;rich built-in features&lt;/a&gt; and astonishingly fast &lt;a href=&#34;https://vitejs.dev/guide/features.html#hot-module-replacement&#34;&gt;Hot Module Replacement (HMR)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A &lt;a href=&#34;https://vitejs.dev/guide/build.html&#34;&gt;build command&lt;/a&gt; that bundles your code with &lt;a href=&#34;https://rollupjs.org&#34;&gt;Rollup&lt;/a&gt;, pre-configured to output highly optimized static assets for production.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, Vite is highly extensible via its &lt;a href=&#34;https://vitejs.dev/guide/api-plugin.html&#34;&gt;Plugin API&lt;/a&gt; and &lt;a href=&#34;https://vitejs.dev/guide/api-javascript.html&#34;&gt;JavaScript API&lt;/a&gt; with full typing support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vitejs.dev&#34;&gt;Read the Docs to Learn More&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;v3.0&lt;/h2&gt; &#xA;&lt;p&gt;Current Status: &lt;strong&gt;Alpha&lt;/strong&gt; (for internal testing, not recommended for production)&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch is now for v3.0, if you are looking for current stable releases, check the &lt;a href=&#34;https://github.com/vitejs/vite/tree/v2&#34;&gt;&lt;code&gt;v2&lt;/code&gt; branch&lt;/a&gt; branch instead.&lt;/p&gt; &#xA;&lt;p&gt;We will start drafting release notes and migration guide for v3.0 when we enter the beta stage. Before that you can check:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/milestone/5&#34;&gt;v3.0 Milestone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues?q=label%3A%22breaking+change%22+is%3Aclosed+milestone%3A3.0&#34;&gt;Breaking Change List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version (click for changelogs)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/vite&#34;&gt;vite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/vite/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vite.svg?label=%20&#34; alt=&#34;vite version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue&#34;&gt;@vitejs/plugin-vue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@vitejs/plugin-vue.svg?label=%20&#34; alt=&#34;plugin-vue version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue-jsx&#34;&gt;@vitejs/plugin-vue-jsx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-vue-jsx/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@vitejs/plugin-vue-jsx.svg?label=%20&#34; alt=&#34;plugin-vue-jsx version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-react&#34;&gt;@vitejs/plugin-react&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-react/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@vitejs/plugin-react.svg?label=%20&#34; alt=&#34;plugin-react version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-legacy&#34;&gt;@vitejs/plugin-legacy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/plugin-legacy/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg?label=%20&#34; alt=&#34;plugin-legacy version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/create-vite&#34;&gt;create-vite&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vitejs/vite/main/packages/create-vite/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/create-vite.svg?label=%20&#34; alt=&#34;create-vite version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/vitejs/vite/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/sponsors/yyx990803&#34;&gt; &lt;img alt=&#34;sponsors&#34; src=&#34;https://sponsors.vuejs.org/vite.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wbkd/react-flow</title>
    <updated>2022-06-04T01:58:42Z</updated>
    <id>tag:github.com,2022-06-04:/wbkd/react-flow</id>
    <link href="https://github.com/wbkd/react-flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly customizable library for building interactive node-based UIs, editors, flow charts and diagrams&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3797215/156384064-08a889d6-73c0-4cbf-8ff3-28dc601d1f5f.svg#gh-dark-mode-only&#34; alt=&#34;readme-header-dark&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3797215/156259138-fb9f59f8-52f2-474a-b78c-6570867e4ead.svg#gh-light-mode-only&#34; alt=&#34;readme-header&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/wbkd/react-flow?color=%23FF0072&#34; alt=&#34;GitHub License MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/react-flow-renderer?color=%23FF0072&amp;amp;label=downloads&#34; alt=&#34;npm downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/wbkd/react-flow?color=%23FF0072&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/wbkd/react-flow?color=%23FF0072&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Wire Your Ideas With React Flow!&lt;/h3&gt; &#xA; &lt;p&gt;A highly customizable React component for building interactive graphs and node-based editors.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://reactflow.dev/docs/getting-started/installation&#34;&gt;🚀 Getting Started&lt;/a&gt; | &lt;a href=&#34;https://reactflow.dev/docs/api/react-flow-props&#34;&gt;📖 Documentation&lt;/a&gt; | &lt;a href=&#34;https://reactflow.dev/docs/examples/overview&#34;&gt;📺 Examples&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/RVmnytFmGW&#34;&gt;☎️ Discord&lt;/a&gt; | &lt;a href=&#34;https://pro.reactflow.dev/pricing&#34;&gt;💎 React Flow Pro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; Seamless zooming and panning, single- and multi selection of graph elements and keyboard shortcuts are supported out of the box&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable:&lt;/strong&gt; Different &lt;a href=&#34;https://reactflow.dev/docs/api/nodes/node-types&#34;&gt;node&lt;/a&gt; and &lt;a href=&#34;https://reactflow.dev/docs/api/edges/edge-types&#34;&gt;edge types&lt;/a&gt; and support for custom nodes with multiple handles and custom edges&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast rendering:&lt;/strong&gt; Only nodes that have changed are re-rendered and only those in the viewport are displayed&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hooks and Utils:&lt;/strong&gt; &lt;a href=&#34;https://reactflow.dev/docs/api/hooks/use-react-flow&#34;&gt;Hooks&lt;/a&gt; for handling nodes, edges and the viewport and graph &lt;a href=&#34;https://reactflow.dev/docs/api/graph-util-functions&#34;&gt;helper functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plugin Components:&lt;/strong&gt; &lt;a href=&#34;https://reactflow.dev/docs/api/plugin-components/background&#34;&gt;Background&lt;/a&gt;, &lt;a href=&#34;https://reactflow.dev/docs/api/plugin-components/minimap&#34;&gt;MiniMap&lt;/a&gt; and &lt;a href=&#34;https://reactflow.dev/docs/api/plugin-components/controls&#34;&gt;Controls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Written in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt; and tested with &lt;a href=&#34;https://www.cypress.io/&#34;&gt;cypress&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Commercial Usage / Attribution&lt;/h2&gt; &#xA;&lt;p&gt;React Flow includes a small attribution that links to the React Flow website. &lt;strong&gt;We expect companies who are using React Flow commercially to subscribe to &lt;a href=&#34;https://pro.reactflow.dev/pricing&#34;&gt;React Flow Pro&lt;/a&gt; if they want to remove the attribution.&lt;/strong&gt; By subscribing you get access to other exclusive services like advanced examples, individual support or prioritized bug reports. In non-commercial applications you may hide the attribution without subscribing but are welcome to &lt;a href=&#34;https://github.com/sponsors/wbkd&#34;&gt;sponsor us on Github&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find more information in our &lt;a href=&#34;https://pro.reactflow.dev/faq&#34;&gt;React Flow Pro FAQs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get the latest version of React Flow is to install it via npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install react-flow-renderer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;This is only a very basic usage example of React Flow. To see everything that is possible with the library, please refer to the &lt;a href=&#34;https://reactflow.dev&#34;&gt;website&lt;/a&gt; for &lt;a href=&#34;https://reactflow.dev/docs/guides/custom-nodes&#34;&gt;guides&lt;/a&gt;, &lt;a href=&#34;https://reactflow.dev/docs/examples/overview&#34;&gt;examples&lt;/a&gt; and &lt;a href=&#34;https://reactflow.dev/docs/api/react-flow-props&#34;&gt;API reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import ReactFlow, { MiniMap, Controls } from &#39;react-flow-renderer&#39;;&#xA;&#xA;function Flow({ nodes, edges, onNodesChange, onEdgesChange, onConnect }) {&#xA;  return (&#xA;    &amp;lt;ReactFlow&#xA;      nodes={nodes}&#xA;      edges={edges}&#xA;      onNodesChange={onNodesChange}&#xA;      onEdgesChange={onEdgesChange}&#xA;      onConnect={onConnect}&#xA;    &amp;gt;&#xA;      &amp;lt;MiniMap /&amp;gt;&#xA;      &amp;lt;Controls /&amp;gt;&#xA;    &amp;lt;/ReactFlow&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before you start you need to build the project using &lt;code&gt;npm run build&lt;/code&gt;. Then install the React Flow dependencies via &lt;code&gt;npm install&lt;/code&gt; and the ones of the examples &lt;code&gt;cd example &amp;amp;&amp;amp; npm install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute or develop custom features the easiest way is to start the dev server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and the example app via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd example &amp;amp;&amp;amp; npm start &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The example app serves the content of the &lt;code&gt;example&lt;/code&gt; folder and watches changes inside the &lt;code&gt;src&lt;/code&gt; folder. The examples are using the source of the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Testing is done with cypress. You can find the tests in the &lt;a href=&#34;https://raw.githubusercontent.com/wbkd/react-flow/main/cypress/integration/flow&#34;&gt;&lt;code&gt;integration/flow&lt;/code&gt;&lt;/a&gt; folder. In order to run the tests do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;React Flow is developed and maintained by &lt;a href=&#34;https://webkid.io&#34;&gt;webkid&lt;/a&gt;, a web development agency with focus on data driven applications from Berlin. If you need help or want to talk to us about a collaboration, feel free to contact us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Moritz Klack • &lt;a href=&#34;https://twitter.com/moklick&#34;&gt;Twitter&lt;/a&gt; • &lt;a href=&#34;https://github.com/moklick&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Christopher Möller • &lt;a href=&#34;https://twitter.com/chrtze&#34;&gt;Twitter&lt;/a&gt; • &lt;a href=&#34;https://github.com/chrtze&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also use our &lt;a href=&#34;https://pro.reactflow.dev/contact&#34;&gt;contact form&lt;/a&gt; or join the &lt;a href=&#34;https://discord.gg/Bqt6xrs&#34;&gt;React Flow Discord Server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Infinium8/useUndoable&#34;&gt;useUndoable&lt;/a&gt; - Hook for undo/redo functionality with an explicit React Flow example&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tisoap/react-flow-smart-edge&#34;&gt;react-flow-smart-edge&lt;/a&gt; - Custom edge that doesn&#39;t intersect with nodes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tforkmann/Feliz.ReactFlow&#34;&gt;Feliz.ReactFlow&lt;/a&gt; - Feliz React Bindings for React Flow&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;React Flow was initially developed for &lt;a href=&#34;https://datablocks.pro&#34;&gt;datablocks&lt;/a&gt;, a graph-based editor for transforming, analyzing and visualizing data in your browser. Under the hood, React Flow depends on these great libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3-zoom&#34;&gt;d3-zoom&lt;/a&gt; - used for zoom, pan and drag interactions with the graph canvas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d3/d3-drag&#34;&gt;d3-drag&lt;/a&gt; - used for making the nodes draggable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmndrs/zustand&#34;&gt;zustand&lt;/a&gt; - internal state management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;React Flow is &lt;a href=&#34;https://github.com/wbkd/react-flow/raw/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>