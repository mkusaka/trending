<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-20T01:49:26Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>niklasvh/html2canvas</title>
    <updated>2022-08-20T01:49:26Z</updated>
    <id>tag:github.com,2022-08-20:/niklasvh/html2canvas</id>
    <link href="https://github.com/niklasvh/html2canvas" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Screenshots with JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;html2canvas&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://html2canvas.hertzen.com&#34;&gt;Homepage&lt;/a&gt; | &lt;a href=&#34;https://github.com/niklasvh/html2canvas/releases&#34;&gt;Downloads&lt;/a&gt; | &lt;a href=&#34;https://github.com/niklasvh/html2canvas/discussions/categories/q-a&#34;&gt;Questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/niklasvh/html2canvas?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/niklasvh/html2canvas/workflows/CI/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://www.npmjs.org/package/html2canvas&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/html2canvas.svg?sanitize=true&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/html2canvas&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/html2canvas.svg?sanitize=true&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;JavaScript HTML renderer&lt;/h4&gt; &#xA;&lt;p&gt;The script allows you to take &#34;screenshots&#34; of webpages or parts of it, directly on the users browser. The screenshot is based on the DOM and as such may not be 100% accurate to the real representation as it does not make an actual screenshot, but builds the screenshot based on the information available on the page.&lt;/p&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;The script renders the current page as a canvas image, by reading the DOM and the different styles applied to the elements.&lt;/p&gt; &#xA;&lt;p&gt;It does &lt;strong&gt;not require any rendering from the server&lt;/strong&gt;, as the whole image is created on the &lt;strong&gt;client&#39;s browser&lt;/strong&gt;. However, as it is heavily dependent on the browser, this library is &lt;em&gt;not suitable&lt;/em&gt; to be used in nodejs. It doesn&#39;t magically circumvent any browser content policy restrictions either, so rendering cross-origin content will require a &lt;a href=&#34;https://github.com/niklasvh/html2canvas/wiki/Proxies&#34;&gt;proxy&lt;/a&gt; to get the content to the &lt;a href=&#34;http://en.wikipedia.org/wiki/Same_origin_policy&#34;&gt;same origin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The script is still in a &lt;strong&gt;very experimental state&lt;/strong&gt;, so I don&#39;t recommend using it in a production environment nor start building applications with it yet, as there will be still major changes made.&lt;/p&gt; &#xA;&lt;h3&gt;Browser compatibility&lt;/h3&gt; &#xA;&lt;p&gt;The library should work fine on the following browsers (with &lt;code&gt;Promise&lt;/code&gt; polyfill):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Firefox 3.5+&lt;/li&gt; &#xA; &lt;li&gt;Google Chrome&lt;/li&gt; &#xA; &lt;li&gt;Opera 12+&lt;/li&gt; &#xA; &lt;li&gt;IE9+&lt;/li&gt; &#xA; &lt;li&gt;Safari 6+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As each CSS property needs to be manually built to be supported, there are a number of properties that are not yet supported.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;The html2canvas library utilizes &lt;code&gt;Promise&lt;/code&gt;s and expects them to be available in the global context. If you wish to support &lt;a href=&#34;http://caniuse.com/#search=promise&#34;&gt;older browsers&lt;/a&gt; that do not natively support &lt;code&gt;Promise&lt;/code&gt;s, please include a polyfill such as &lt;a href=&#34;https://github.com/jakearchibald/es6-promise&#34;&gt;es6-promise&lt;/a&gt; before including &lt;code&gt;html2canvas&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To render an &lt;code&gt;element&lt;/code&gt; with html2canvas, simply call: &lt;code&gt; html2canvas(element[, options]);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The function returns a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise&lt;/a&gt; containing the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element. Simply add a promise fulfillment handler to the promise using &lt;code&gt;then&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;html2canvas(document.body).then(function(canvas) {&#xA;    document.body.appendChild(canvas);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;You can download ready builds &lt;a href=&#34;https://github.com/niklasvh/html2canvas/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Clone git repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git://github.com/niklasvh/html2canvas.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build browser bundle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;For more information and examples, please visit the &lt;a href=&#34;https://html2canvas.hertzen.com&#34;&gt;homepage&lt;/a&gt; or try the &lt;a href=&#34;https://html2canvas.hertzen.com/tests/&#34;&gt;test console&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute to the project, please send the pull requests to the develop branch. Before submitting any changes, try and test that the changes work with all the support browsers. If some CSS property isn&#39;t supported or is incomplete, please create appropriate tests for it as well before submitting any code changes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fireship-io/flamethrower</title>
    <updated>2022-08-20T01:49:26Z</updated>
    <id>tag:github.com,2022-08-20:/fireship-io/flamethrower</id>
    <link href="https://github.com/fireship-io/flamethrower" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A blazingly fast router for static sites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flamethrower ðŸ”¥&lt;/h1&gt; &#xA;&lt;p&gt;Status: Meme&lt;/p&gt; &#xA;&lt;p&gt;A 2kB zero-config router and prefetcher that makes a static site feel like a blazingly fast SPA.&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; Static sites feel slow and cannot easily share state between pages. This makes it difficult to create a pleasant user experience (UX) with JavaScript libraries because each new page needs to reboot your JS from scratch.&lt;/p&gt; &#xA;&lt;p&gt;Rather than requiring a frontend framework to take control of the entire DOM, the goal is to make route changes on static sites feel faster, like an SPA.&lt;/p&gt; &#xA;&lt;h2&gt;How?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It tells the browser to prefetch visible links in the current page with &lt;code&gt;IntersectionObserver&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Intercepts click and popstate events, then updates the HTML5 history on route changes.&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;code&gt;fetch&lt;/code&gt; to get the next page, swaps the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; out, merges the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, but does not re-execute head scripts (unless asked to).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This means you can have long-lived JavaScript behaviors between navigations. It works especially well with native web components.&lt;/p&gt; &#xA;&lt;h2&gt;QuickStart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i flamethrower-router&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import flamethrower from &#39;flamethrower-router&#39;;&#xA;const router = flamethrower();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it. Your site now feels blazingly fast.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// with opts&#xA;const router = flamethrower({ prefetch: &#39;visible&#39;, log: false, pageTransitions: false });&#xA;&#xA;// Navigate manually&#xA;router.go(&#39;/somewhere&#39;);&#xA;router.back();&#xA;router.forward();&#xA;&#xA;// Listen to events&#xA;window.addEventListener(&#39;flamethrower:router:fetch&#39;, showLoader);&#xA;window.addEventListener(&#39;flamethrower:router:end&#39;, hideLoader);&#xA;&#xA;// Disable it&#xA;router.enabled = false;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Opt-out of specific links for full page load.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#34;/somewhere&#34; data-cold&amp;gt;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scripts in &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; will run on every page change, but you can force scripts in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;...&#34; data-reload&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Prefetching&lt;/h3&gt; &#xA;&lt;p&gt;Prefecthing is disabled by default.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;visible&lt;/code&gt;: prefetch visible links on the page with IntersectionObserver&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hover&lt;/code&gt;: prefetch links on hover&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const router = flamethrower({ prefetch: &#39;visible&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported in all browsers?&lt;/strong&gt; Yes. It will fallback to standard navigation if &lt;code&gt;window.history&lt;/code&gt; does not exist.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Does it work with Next.js?&lt;/strong&gt; No, any framework that fully hydrates to an SPA does not need this - you already have a client-side router.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Does it work with Astro?&lt;/strong&gt; I think so. It can share state between routes, but partially hydrated components may flash between routes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other things to know:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; scripts run only on the first page load. &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; scripts will still run on every page change (by design).&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s a good idea to show a global loading bar in case of a slow page load.&lt;/li&gt; &#xA; &lt;li&gt;This library is inspired by &lt;a href=&#34;https://github.com/hotwired/turbo&#34;&gt;Turbo&lt;/a&gt; Drive.&lt;/li&gt; &#xA; &lt;li&gt;This project is experimental.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Build it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Serve the example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure all playwright tests pass before submitting new features.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run test&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>snoopForms/snoopforms</title>
    <updated>2022-08-20T01:49:26Z</updated>
    <id>tag:github.com,2022-08-20:/snoopForms/snoopforms</id>
    <link href="https://github.com/snoopForms/snoopforms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open-Source Typeform Alternative&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/snoopForms/snoopforms&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/72809645/172191504-808da997-025b-4b1f-90c0-b8ef658af2dd.svg?sanitize=true&#34; alt=&#34;Logo&#34; width=&#34;500&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;snoopForms&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Finally, good open-source forms! &lt;br&gt; &lt;a href=&#34;https://snoopforms.com/&#34;&gt;Website &amp;amp; Hosted version&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/3YFcABF2Ts&#34;&gt;Join Discord community&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/snoopForms/snoopforms/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-AGPLv3-purple&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/3YFcABF2Ts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-SnoopForms-%234A154B&#34; alt=&#34;Join snoopForms Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/snoopForms/snoopforms/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/snoopForms/snoopforms&#34; alt=&#34;Github Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://news.ycombinator.com/item?id=32303986&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Hacker%20News-122-%23FF6600&#34; alt=&#34;Hacker News&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;âš &lt;/span&gt; &lt;strong&gt;Note&lt;/strong&gt;: This repository is still in an early stage of development. We love the open source community and want to show what we are working on early. We will update this readme with more information once it is safe to use. Until then, feel free to share your thoughts, contact us, and contribute if you&#39;d like.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;About snoopForms&lt;/h2&gt; &#xA;&lt;img width=&#34;937&#34; alt=&#34;snoopForms-architecture&#34; src=&#34;https://user-images.githubusercontent.com/675065/182550268-09794c9e-1187-470e-b795-697ceb2a93b8.svg?sanitize=true&#34;&gt; &#xA;&lt;p&gt;Spin up forms in minutes. Pipe your data exactly where you need it. Maximize your results with juicy analytics.&lt;/p&gt; &#xA;&lt;h2&gt;What is snoopForms?&lt;/h2&gt; &#xA;&lt;p&gt;With snoopForms you can build complex multi-page forms in minutes using either our built-in No Code Builder or our &lt;a href=&#34;https://github.com/snoopForms/snoopforms-react&#34;&gt;React library&lt;/a&gt;. All form submissions are automatically sent to the snoopForms platform for processing and analysis. You can view the submission within the platform or you can easily configure pipelines to send your data to other systems, services or databases.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;React Lib &amp;amp; No Code Builder to build &amp;amp; integrate forms rapidly.&lt;/li&gt; &#xA; &lt;li&gt;100% compliant with all privacy regulations (self-hosted).&lt;/li&gt; &#xA; &lt;li&gt;(next) Put your data to work with integrations.&lt;/li&gt; &#xA; &lt;li&gt;(next) Juicy analytics out of the box.&lt;/li&gt; &#xA; &lt;li&gt;(always) smooth Developer Experience comes first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Built With&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prisma.io/&#34;&gt;Prisma&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To get the project running locally on your machine you need to have the following development tools installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.JS (we recommend v16)&lt;/li&gt; &#xA; &lt;li&gt;Yarn&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/snoopForms/snoopforms.git &amp;amp;&amp;amp; cd snoopforms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install Node.JS packages via yarn. Don&#39;t have yarn? Use &lt;code&gt;npm install --global yarn&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Make sure you have a running database instance, e.g. by using docker. A quick and dirty instance can be spun up via:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name snoopformsDB -p 5432:5432 -e POSTGRES_USER=snoopforms -e POSTGRES_PASSWORD=password -e POSTGRES_DB=snoopforms -d postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.example&lt;/code&gt; and change it according to your setup. Make sure the &lt;code&gt;DATABASE_URL&lt;/code&gt; variable is set correctly according to your local database.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the example above, use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DATABASE_URL=&#39;postgresql://snoopforms:password@localhost:5432/snoopforms?schema=public&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the code editor of your choice to edit the .env file. You need to change all fields according to your setup.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure your PostgreSQL Database Server is running. Then let prisma set up the database for you:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn prisma migrate dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Start the development server:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can now access the app on &lt;a href=&#34;https://localhost:3000&#34;&gt;https://localhost:3000&lt;/a&gt;&lt;/strong&gt;. You will be automatically redirected to the login. To use your local installation of snoopForms, create a new account.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to deploy the snoopHub on your own machine is using Docker. This requires Docker and the docker compose plugin on your system to work.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;git clone https://github.com/snoopForms/snoopforms.git &amp;amp;&amp;amp; cd snoopforms&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file based on &lt;code&gt;.env.example&lt;/code&gt; and change all fields according to your setup. The SMTP-credentials are essential for verification emails to work during user signup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;cp .env.example .env &amp;amp;&amp;amp; nano .env&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the docker compose process to build and spin up the snoopForms container as well as the postgres database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;docker compose up -d&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can now access the app on &lt;a href=&#34;https://localhost:3000&#34;&gt;https://localhost:3000&lt;/a&gt;. You will be automatically redirected to the login. To use your local installation of snoopForms, create a new account.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the project&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Make your changes&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the AGPLv3 License. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>