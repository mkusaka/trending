<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-26T01:44:03Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>projectx-codehagen/Badget</title>
    <updated>2024-02-26T01:44:03Z</updated>
    <id>tag:github.com,2024-02-26:/projectx-codehagen/Badget</id>
    <link href="https://github.com/projectx-codehagen/Badget" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Badget aims to simplify financial management with a user-friendly interface and robust backend&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://badget-eight-gilt.vercel.app/&#34;&gt; &lt;h1 align=&#34;center&#34;&gt;Badget: Revolutionizing Financial Management&lt;/h1&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Empower your financial management with Badget - AI-driven insights at your fingertips. Optimize your finances effortlessly. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- &lt;a href=&#34;https://twitter.com/placeholder&#34;&gt;&#xA;    &lt;img src=&#34;https://img.shields.io/twitter/follow/badget?style=flat&amp;label=%40badgety&amp;logo=twitter&amp;color=0bf&amp;logoColor=fff&#34; alt=&#34;Twitter&#34; /&gt;&#xA;  &lt;/a&gt; --&gt; &lt;a href=&#34;https://github.com/projectx-codehagen/Badget/raw/main/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/projectx-codehagen/Badget?label=license&amp;amp;logo=github&amp;amp;color=f80&amp;amp;logoColor=fff&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/Badget/main/#introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/Badget/main/#installation&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/Badget/main/#tech-stack--features&#34;&gt;&lt;strong&gt;Tech Stack + Features&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/Badget/main/#author&#34;&gt;&lt;strong&gt;Author&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/Badget/main/#contributing&#34;&gt;&lt;strong&gt;Credits&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to Badget, where we&#39;re ushering in a new era of financial management. Leveraging cutting-edge AI, Badget redefines how you track, analyze, and optimize your finances, ensuring smarter, more secure financial decisions.&lt;/p&gt; &#xA;&lt;p&gt;With Badget, gain unparalleled insights into your spending habits and financial patterns, empowering you to budget better and experience more. Trusted by the world&#39;s most innovative companies, Badget is here to revolutionize your financial management experience.&lt;/p&gt; &#xA;&lt;h2&gt;What we are using&lt;/h2&gt; &#xA;&lt;p&gt;Lets goooo - Next.js 14, Turborepo, Drizzle ORM, Planetscale, Clerk, Resend, React Email, Shadcn/ui, and Stripe. &lt;br&gt; All seamlessly integrated with the Badget to accelerate the development.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;Badget is a monorepo managed by &lt;a href=&#34;https://turbo.build/repo&#34;&gt;Turborepo&lt;/a&gt;. The monorepo is split between &lt;code&gt;apps&lt;/code&gt; and &lt;code&gt;packages&lt;/code&gt; directories.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── apps                         # Its app workspace which contains&#xA;│    ├── www                     # Nextjs app which is deployed in Vercel&#xA;│    └── ...&#xA;├── tooling                      # are the shared configuration that are used by the apps and packages (e.g. `@badget/eslint-config`)&#xA;├── packages                     # are the shared packages that are used by the apps (e.g. `@badget/components`)&#xA;├── docker-compose.yml&#xA;├── LICENSE&#xA;└── README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use short lowercase names at least for the top-level files and folders except &lt;code&gt;LICENSE&lt;/code&gt;, &lt;code&gt;README.md&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Clone &amp;amp; create this repo locally with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/projectx-codehagen/Badget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies using pnpm:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt; and update the variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.example .env.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Input everything you need for the env.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://clerk.com&#34;&gt;Clerk&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://planetscale.com/&#34;&gt;Planet Scale&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://resend.com&#34;&gt;Resend&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://edgestore.dev&#34;&gt;Edge Store&lt;/a&gt; Account&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the development server from either yarn or turbo:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# At the root of the mono repo&#xA;pnpm run dev&#xA;&#xA;# Or from the app directory&#xA;cd apps/www&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;p&gt;This project uses MySQL database on PlanetScale. To setup a DB for your local dev:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a free account and a &lt;a href=&#34;https://planetscale.com/docs/tutorials/planetscale-quick-start-guide#create-a-database&#34;&gt;new Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;From the dashboard, create a branch and click &#34;Connect&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Create password&lt;/code&gt; and select &lt;code&gt;Drizzle&lt;/code&gt; in &lt;code&gt;Connect with&lt;/code&gt; dropdown&lt;/li&gt; &#xA; &lt;li&gt;Copy the entire list of params to &lt;code&gt;.env.local&lt;/code&gt; file. Make sure to change the params under the section &#34;Database (MySQL - PlanetScale)&#34;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;pnpm run db:push&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;docker-compose&lt;/code&gt; to have a Mysql database locally, instead of relying on PlanetScale:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;, &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;, &lt;code&gt;MYSQL_USER&lt;/code&gt; and &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt; values in &lt;code&gt;.env.local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;docker-compose --env-file .env.local up&lt;/code&gt; to start the DB.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;pnpm run db:push&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Email provider&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://resend.com/&#34;&gt;Resend&lt;/a&gt; to handle transactional emails. You need to add create an account and get an api key needed for authentication.&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that the Resend is designed to send test emails exclusively to the email address registered with the account, or to &lt;code&gt;delivered@resend.dev&lt;/code&gt;, where they are logged on their dashboard.&lt;/p&gt; &#xA;&lt;p&gt;The default setting for &lt;code&gt;TEST_EMAIL_ADDRESS&lt;/code&gt; is &lt;code&gt;delivered@resend.dev&lt;/code&gt; but you have the option to change it to the email address that is associated with your Resend account.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;Initial setup&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Start removing template&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Update UI to match the product&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; XXXXXXXX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack + Features&lt;/h2&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; – React framework for building performant apps with the best developer experience&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clerk.com/&#34;&gt;Clerk&lt;/a&gt; – Handle user authentication with ease with providers like Google, Twitter, GitHub, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle ORM&lt;/a&gt; – TypeScript ORM that feels like SPA with SSR&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.email/&#34;&gt;React Email&lt;/a&gt; – Versatile email framework for efficient and flexible email development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; – Easily preview &amp;amp; deploy changes with git&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://planetscale.com/&#34;&gt;PlanetScale&lt;/a&gt; – A cutting-edge database platform for seamless, scalable data management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://resend.com/&#34;&gt;Resend&lt;/a&gt; – A powerful email framework for streamlined email development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edgestore.dev/&#34;&gt;Edge Store&lt;/a&gt; - Storage, CDN and a super easy to use type-safe library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; - Payments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; – Utility-first CSS framework for rapid UI development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;Shadcn/ui&lt;/a&gt; – Re-usable components built using Radix UI and Tailwind CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://framer.com/motion&#34;&gt;Framer Motion&lt;/a&gt; – Motion library for React to animate components with ease&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lucide.dev/&#34;&gt;Lucide&lt;/a&gt; – Beautifully simple, pixel-perfect icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; – Optimize custom fonts and remove external network requests for improved performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/app/api-reference/functions/image-response&#34;&gt;&lt;code&gt;ImageResponse&lt;/code&gt;&lt;/a&gt; – Generate dynamic Open Graph images at the edge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love our contributors! Here&#39;s how you can contribute:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectx-codehagen/badget/issues&#34;&gt;Open an issue&lt;/a&gt; if you believe you&#39;ve encountered a bug.&lt;/li&gt; &#xA; &lt;li&gt;Make a &lt;a href=&#34;https://github.com/projectx-codehagen/badget/pull&#34;&gt;pull request&lt;/a&gt; to add new features/make quality-of-life improvements/fix bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://github.com/projectx-codehagen/badget/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=projectx-codehagen/badget&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/f90bd65d98d57ce8fc8bbf36079da64f0c5c8764.svg?sanitize=true&#34; alt=&#34;Nextify repo activity – generated by Axiom&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>electric-sql/pglite</title>
    <updated>2024-02-26T01:44:03Z</updated>
    <id>tag:github.com,2024-02-26:/electric-sql/pglite</id>
    <link href="https://github.com/electric-sql/pglite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight Postgres packaged as WASM into a TypeScript library for the browser, Node.js, Bun and Deno&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PGlite - Postgres in WASM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/electric-sql/pglite/main/screenshot.png&#34; alt=&#34;PGlite&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;PGlite is a WASM Postgres build packaged into a TypeScript client library that enables you to run Postgres in the browser, Node.js and Bun, with no need to install any other dependencies. It is only 3.7mb gzipped.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { PGlite } from &#34;@electric-sql/pglite&#34;&#xA;&#xA;const db = new PGlite()&#xA;await db.query(&#34;select &#39;Hello world&#39; as message;&#34;)&#xA;// -&amp;gt; [ { message: &#34;Hello world&#34; } ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can be used both as an ephemeral in-memory database or with persistance to the file system (Node/Bun) or indexedDB (Browser).&lt;/p&gt; &#xA;&lt;p&gt;Unlike previous &#34;Postgres in the browser&#34; projects, PGlite does not use a Linux virtual machine - it is simply Postgres in WASM.&lt;/p&gt; &#xA;&lt;p&gt;It is being developed at &lt;a href=&#34;http://electric-sql.com&#34;&gt;ElectricSQL&lt;/a&gt; in collaboration with &lt;a href=&#34;http://neon.tech&#34;&gt;Neon&lt;/a&gt;. We plan to continue to build on this experiment, and aim to create a fully capable lightweight WASM Postgres with support for extensions such as pgvector.&lt;/p&gt; &#xA;&lt;h2&gt;Node/Bun&lt;/h2&gt; &#xA;&lt;p&gt;Install into your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @electric-sql/pglite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use the in-memory Postgres:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { PGlite } from &#34;@electric-sql/pglite&#34;&#xA;&#xA;const db = new PGlite()&#xA;await db.query(&#34;select &#39;Hello world&#39; as message;&#34;)&#xA;// -&amp;gt; [ { message: &#34;Hello world&#34; } ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or to persist to the filesystem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const db = new PGlite(&#39;./path/to/pgdata&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Browser&lt;/h2&gt; &#xA;&lt;p&gt;It can be loaded via JSDeliver or your usual package manager, and for an in-memory Postgres:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;&#xA;import { PGlite } from &#34;https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/index.js&#34;;&#xA;&#xA;const db = new PGlite()&#xA;await db.query(&#34;select &#39;Hello world&#39; as message;&#34;)&#xA;// -&amp;gt; [ { message: &#34;Hello world&#34; } ]&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or to persist the database to indexedDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const db = new PGlite(&#39;idb://my-pgdata&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deno&lt;/h2&gt; &#xA;&lt;p&gt;To use the in-memory Postgres, create a file &lt;code&gt;server.ts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { PGlite } from &#34;npm:@electric-sql/pglite&#34;&#xA;&#xA;Deno.serve(async (_request: Request) =&amp;gt; {&#xA;  const db = new PGlite()&#xA;  const query = await db.query(&#34;select &#39;Hello world&#39; as message;&#34;)&#xA;&#xA;  return new Response(JSON.stringify(query))&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the file with &lt;code&gt;deno run --allow-net --allow-read server.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;Parameterized queries are not currently supported, but this will be added soon.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;There are a couple of prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the Postgres build toolchain&lt;/li&gt; &#xA; &lt;li&gt;emscripten version 3.1.25&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To build, checkout the repo, then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ./pglite/packages/pglite&#xA;emsdk install 3.1.25&#xA;emsdk activate 3.1.25&#xA;pnpm install&#xA;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;PGlite builds on the work of &lt;a href=&#34;https://github.com/kelvich&#34;&gt;Stas Kelvich&lt;/a&gt; of &lt;a href=&#34;https://neon.tech&#34;&gt;Neon&lt;/a&gt; in this &lt;a href=&#34;https://github.com/electric-sql/postgres-wasm&#34;&gt;Postgres fork&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coinbase/build-onchain-apps</title>
    <updated>2024-02-26T01:44:03Z</updated>
    <id>tag:github.com,2024-02-26:/coinbase/build-onchain-apps</id>
    <link href="https://github.com/coinbase/build-onchain-apps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Accelerate your web3 creativity with the Build Onchain Apps Toolkit. ⛵️&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coinbase/build-onchain-apps/main/docs/logo-v-0-17.png&#34; width=&#34;800&#34; alt=&#34;Build Onchain Apps Toolkit&#34;&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/&#34;&gt;Build Onchain Apps Toolkit (⛵️)&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Accelerate your onchain creativity with the Build Onchain Apps Toolkit. ☕️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/raw/main/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/coinbase/build-onchain-apps?color=3498DB&amp;amp;label=version&#34; alt=&#34;Current version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/coinbase/build-onchain-apps?color=3498DB&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/coinbase/build-onchain-apps.svg?color=3498DB&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/coinbase/build-onchain-apps?color=3498DB&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build Onchain Apps Toolkit&lt;/strong&gt; (aka BOAT ⛵️) will help you save weeks of initial app setup and the hassle of integrating onchain components with web2 infrastructure. 🌊&lt;/p&gt; &#xA;&lt;p&gt;We do this by taking an opinionated approach to streamlining early decisions you must make when building an onchain app.&lt;/p&gt; &#xA;&lt;p&gt;Whether you&#39;re a hackathon participant or an ambitious entrepreneur looking to build the next big thing, this toolkit is designed with you in mind. 💙&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Out of the box&lt;/strong&gt; 🧰 🧙 ✨&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Progressive Web App support using &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; 🏗️&lt;/li&gt; &#xA; &lt;li&gt;Ethereum L2 support through &lt;a href=&#34;https://base.org/&#34;&gt;Base&lt;/a&gt; 🔵&lt;/li&gt; &#xA; &lt;li&gt;Wallet connect integration with &lt;a href=&#34;https://www.rainbowkit.com&#34;&gt;RainbowKit&lt;/a&gt; 🌈&lt;/li&gt; &#xA; &lt;li&gt;Live examples and documentation for Minting and Payments experiences with &lt;a href=&#34;https://wagmi.sh/&#34;&gt;wagmi&lt;/a&gt; and &lt;a href=&#34;https://viem.sh/&#34;&gt;Viem&lt;/a&gt; 🚀&lt;/li&gt; &#xA; &lt;li&gt;Latest styling best practices with &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; 💅&lt;/li&gt; &#xA; &lt;li&gt;Easy maintenance with linting, formatting, and tests ✅&lt;/li&gt; &#xA; &lt;li&gt;Insights into Web Vitals performance metrics with Perfume.js 📈&lt;/li&gt; &#xA; &lt;li&gt;Smart contract deployment with Foundry ☁️&lt;/li&gt; &#xA; &lt;li&gt;Support for a local testnet node for testing smart contracts using &lt;a href=&#34;https://book.getfoundry.sh/reference/anvil/&#34;&gt;Anvil&lt;/a&gt;. 🧪&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started building with BOAT, just run our CLI, and you will be guided to have an Onchain App and running.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx @coinbase/build-onchain-apps@latest create&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coinbase/build-onchain-apps/main/docs/images/build-onchain-apps-step-1.gif&#34; width=&#34;800&#34; alt=&#34;Build Onchain Apps Toolkit&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;&lt;em&gt;Congrats, Time to enjoy your onchain app with some coffee ☕️&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;Build and deploy your own contracts&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/coinbase/build-onchain-apps/raw/main/template/contracts/README.md&#34;&gt;Contracts README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;For a Live demo use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackblitz.com/github/coinbase/build-onchain-apps/tree/main/template/web&#34;&gt;Stackblitz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Do you need gas for Base Sepolia? 🔵&lt;/h2&gt; &#xA;&lt;p&gt;Learn how you can obtain free testnet funds here: &lt;a href=&#34;https://docs.base.org/tools/network-faucets/&#34;&gt;https://docs.base.org/tools/network-faucets/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community ☁️ 🌁 ☁️&lt;/h2&gt; &#xA;&lt;p&gt;Check out the following places for more BOAT-related content:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow @zizzamia (&lt;a href=&#34;https://twitter.com/zizzamia&#34;&gt;X&lt;/a&gt;, &lt;a href=&#34;https://warpcast.com/zizzamia&#34;&gt;Farcaster&lt;/a&gt;) for project updates&lt;/li&gt; &#xA; &lt;li&gt;Join the discussions on our &lt;a href=&#34;https://warpcast.com/~/channel/onchainkit&#34;&gt;OnchainKit warpcast channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zizzamia&#34;&gt;@zizzamia&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/Zizzamia&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sneh1999&#34;&gt;@Sneh1999&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/snoopies_eth&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wespickett&#34;&gt;@wespickett&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/wespickett&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mochikuan&#34;&gt;@mochikuan&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/mochikuan&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/renanmav&#34;&gt;@renanmav&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/renanmav&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robpolak&#34;&gt;@robpolak&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/0xr0b_eth&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyhyco&#34;&gt;@kyhyco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cnasc&#34;&gt;@cnasc&lt;/a&gt; (&lt;a href=&#34;https://warpcast.com/cnasc&#34;&gt;warpcast&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arsood&#34;&gt;@arsood&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/arsood&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eragon512&#34;&gt;@eragon512&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/eragon5121&#34;&gt;X&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/build-onchain-apps/main/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; file for details&lt;/p&gt;</summary>
  </entry>
</feed>