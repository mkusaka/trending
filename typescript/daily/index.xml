<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-11T01:39:07Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>abielzulio/chatgpt-raycast</title>
    <updated>2022-12-11T01:39:07Z</updated>
    <id>tag:github.com,2022-12-11:/abielzulio/chatgpt-raycast</id>
    <link href="https://github.com/abielzulio/chatgpt-raycast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unofficial ChatGPT raycast extension&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;100&#34; src=&#34;https://github.com/abielzulio/chatgpt-raycast/raw/main/assets/icon@dark.png?raw=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;ChatGPT&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Interact with OpenAI&#39;s ChatGPT right from your command bar &lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/1.png&#34; alt=&#34;Conversation View&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h3&gt;Ask anything, from your favourite thing&lt;/h3&gt; &#xA;&lt;p&gt;Straight from your command bar, ask anything that you wanted and get ChatGPT&#39;s generated answer without opening any browser app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/2.png&#34; alt=&#34;Ask ChatGPT from the command bar&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Well-designed, undistracted&lt;/h3&gt; &#xA;&lt;p&gt;Read through AI-generated answer in a clean and nice-looking markdown view without losing ongoing conversation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/3.png&#34; alt=&#34;Conversation view&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Save the answer, faster&lt;/h3&gt; &#xA;&lt;p&gt;Got the answer that you wanted? Great. Now you can save it in your collection locally and here you have it! No need to reask again.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/4.png&#34; alt=&#34;Saving the answer&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Look-up your past, fast&lt;/h3&gt; &#xA;&lt;p&gt;Automatically save all the asked questions and its generated answer locally, so you can go back digging for the answer you&#39;re looking for without any internet connection!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/5.png&#34; alt=&#34;Looking through the question history&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;p&gt;This package requires a valid session token from ChatGPT to access it&#39;s unofficial REST API by &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;transitive-bullshit/chatgpt-api&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get a session token:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; and log in or sign up.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open dev tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;Application&lt;/code&gt; &amp;gt; &lt;code&gt;Cookies&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/transitive-bullshit/chatgpt-api/raw/main/media/session-token.png?raw=true&#34; alt=&#34;ChatGPT cookies&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the value for &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; and paste in the initialization set-up!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/abielzulio/chatgpt-raycast/main/metadata/6.png&#34; alt=&#34;Looking through the question history&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Session token will be stored locally using &lt;a href=&#34;https://developers.raycast.com/api-reference/preferences&#34;&gt;Preferences API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;right&#34;&gt; Made with â™¥ from Indonesia &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taskforcesh/bullmq</title>
    <updated>2022-12-11T01:39:07Z</updated>
    <id>tag:github.com,2022-12-11:/taskforcesh/bullmq</id>
    <link href="https://github.com/taskforcesh/bullmq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BullMQ - Premium Message Queue for NodeJS based on Redis&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/95200/143832033-32e868df-f3b0-4251-97fb-c64809a43d36.png&#34; width=&#34;800&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; The fastest, most reliable, Redis-based distributed queue for Node. &lt;br&gt; Carefully written for rock solid stability and atomicity. &lt;/p&gt; Read the &#xA; &lt;a href=&#34;https://docs.bullmq.io&#34;&gt;documentation&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://openbase.com/js/bullmq?utm_source=embedded&amp;amp;utm_medium=badge&amp;amp;utm_campaign=rate-badge&#34;&gt; &lt;img src=&#34;https://badges.openbase.com/js/rating/bullmq.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitter.im/OptimalBits/bull&#34;&gt; &lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/js/bullmq&#34;&gt; &lt;img src=&#34;https://badge.fury.io/js/bullmq.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/taskforcesh/bullmq?branch=master&#34;&gt; &lt;img src=&#34;https://coveralls.io/repos/github/taskforcesh/bullmq/badge.svg?branch=master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;em&gt;Follow &lt;a href=&#34;https://twitter.com/manast&#34;&gt;@manast&lt;/a&gt; for *important* Bull/BullMQ news and updates!&lt;/em&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;ðŸ›  Tutorials&lt;/h1&gt; &#xA;&lt;p&gt;You can find tutorials and news in this blog: &lt;a href=&#34;https://blog.taskforce.sh/&#34;&gt;https://blog.taskforce.sh/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Official FrontEnd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://taskforce.sh&#34;&gt;&lt;img src=&#34;http://taskforce.sh/assets/logo_square.png&#34; width=&#34;200&#34; alt=&#34;Taskforce.sh, Inc&#34; style=&#34;padding: 200px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supercharge your queues with a professional front end:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get a complete overview of all your queues.&lt;/li&gt; &#xA; &lt;li&gt;Inspect jobs, search, retry, or promote delayed jobs.&lt;/li&gt; &#xA; &lt;li&gt;Metrics and statistics.&lt;/li&gt; &#xA; &lt;li&gt;and many more features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sign up at &lt;a href=&#34;https://taskforce.sh&#34;&gt;Taskforce.sh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Used by&lt;/h1&gt; &#xA;&lt;p&gt;Some notable organizations using BullMQ:&lt;/p&gt; &#xA;&lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/microsoft/lage&#34;&gt; &lt;img src=&#34;https://files.gitbook.com/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-LUuDmt_xXMfG66Rn1GA%2Fuploads%2FUvwInTAmk7hxAViDwJzU%2Fclipart1565701.png?alt=media&#34; width=&#34;150&#34; alt=&#34;Microsoft&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/vendure-ecommerce/vendure&#34;&gt; &lt;img src=&#34;https://files.gitbook.com/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-LUuDmt_xXMfG66Rn1GA%2Fuploads%2FvT30DUqsi61gL8edn3R2%2Fwordmark-logo.png?alt=media&#34; width=&#34;150&#34; alt=&#34;Vendure&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/datawrapper/datawrapper&#34;&gt; &lt;img src=&#34;https://files.gitbook.com/v0/b/gitbook-x-prod.appspot.com/o/spaces%2F-LUuDmt_xXMfG66Rn1GA%2Fuploads%2FCJ5XmotpBBsuSgD8CilC%2Fdatawrapper-logo.png?alt=media&#34; width=&#34;150&#34; alt=&#34;Datawrapper&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/teamcurri&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/659829/161662129-ae645bc4-c1e9-48ff-997e-4cee281a964a.png&#34; width=&#34;150&#34; alt=&#34;Curri&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://novu.co&#34;&gt; &lt;img src=&#34;https://super-static-assets.s3.amazonaws.com/1e9f5a51-c4c6-4fca-b6e8-25fa0186f139/images/4052d2f1-dc73-4421-984c-cdd02e989fdb.png&#34; width=&#34;150&#34; alt=&#34;Curri&#34;&gt; &lt;/a&gt; &lt;/td&gt;  &#xA;   &lt;td valign=&#34;center&#34;&gt; &lt;a href=&#34;https://www.nocodb.com&#34;&gt; &lt;img src=&#34;https://www.nocodb.com/brand/logo-text.png&#34; width=&#34;150&#34; alt=&#34;NoCodeDB&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;The gist&lt;/h1&gt; &#xA;&lt;p&gt;Install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ yarn add bullmq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add jobs to the queue:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { Queue } from &#39;bullmq&#39;;&#xA;&#xA;const queue = new Queue(&#39;Paint&#39;);&#xA;&#xA;queue.add(&#39;cars&#39;, { color: &#39;blue&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Process the jobs in your workers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { Worker } from &#39;bullmq&#39;;&#xA;&#xA;const worker = new Worker(&#39;Paint&#39;, async job =&amp;gt; {&#xA;  if (job.name === &#39;cars&#39;) {&#xA;    await paintCar(job.data.color);&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Listen to jobs for completion:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { QueueEvents } from &#39;bullmq&#39;;&#xA;&#xA;const queueEvents = new QueueEvents(&#39;Paint&#39;);&#xA;&#xA;queueEvents.on(&#39;completed&#39;, ({ jobId }) =&amp;gt; {&#xA;  console.log(&#39;done painting&#39;);&#xA;});&#xA;&#xA;queueEvents.on(&#39;failed&#39;, ({ jobId, failedReason }: { jobId: string, failedReason: string }) =&amp;gt; {&#xA;  console.error(&#39;error painting&#39;, failedReason);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is just scratching the surface, check all the features and more in the official &lt;a href=&#34;https://docs.bullmq.io&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Feature Comparison&lt;/h1&gt; &#xA;&lt;p&gt;Since there are a few job queue solutions, here is a table comparing them:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BullMQ-Pro&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BullMQ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Bull&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Kue&lt;/th&gt; &#xA;   &lt;th&gt;Bee&lt;/th&gt; &#xA;   &lt;th&gt;Agenda&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Backend&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;redis&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;redis&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;redis&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;redis&lt;/td&gt; &#xA;   &lt;td&gt;redis&lt;/td&gt; &#xA;   &lt;td&gt;mongo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Observables&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Group Rate Limit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Group Support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Parent/Child Dependencies&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Priorities&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Concurrency&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Delayed jobs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Global events&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rate Limiter&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pause/Resume&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sandboxed worker&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Repeatable jobs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Atomic ops&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Persistence&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UI&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;âœ“&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;âœ“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optimized for&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Jobs / Messages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Jobs / Messages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Jobs / Messages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Jobs&lt;/td&gt; &#xA;   &lt;td&gt;Messages&lt;/td&gt; &#xA;   &lt;td&gt;Jobs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;ðŸš€ Sponsor ðŸš€&lt;/h1&gt; &#xA;&lt;a href=&#34;https://dashboard.memetria.com/new?utm_campaign=BULLMQ&#34;&gt; &lt;img src=&#34;https://www.memetria.com/images/logo/memetria-logo.svg?sanitize=true&#34; width=&#34;300&#34; alt=&#34;Memetria for Redis&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;If you need high quality production Redis instances for your BullMQ project, please consider subscribing to &lt;a href=&#34;https://dashboard.memetria.com/new?utm_campaign=BULLMQ&#34;&gt;Memetria for Redis&lt;/a&gt;, leaders in Redis hosting that works perfectly with BullMQ. Use the promo code &#34;BULLMQ&#34; when signing up to help us sponsor the development of BullMQ!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Fork the repo, make some changes, submit a pull-request! Here is the &lt;a href=&#34;https://raw.githubusercontent.com/taskforcesh/bullmq/master/contributing.md&#34;&gt;contributing&lt;/a&gt; doc that has more details.&lt;/p&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;p&gt;Thanks for all the contributors that made this library possible, also a special mention to Leon van Kammen that kindly donated his npm bullmq repo.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wesbos/pommade</title>
    <updated>2022-12-11T01:39:07Z</updated>
    <id>tag:github.com,2022-12-11:/wesbos/pommade</id>
    <link href="https://github.com/wesbos/pommade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A menu bar app to check your hair&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Pommade&lt;/h2&gt; &#xA;&lt;p&gt;A little app to check your hair. Built with Electron.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wesbos/pommade/main/images/handsome.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start&lt;/code&gt; to run as a menu bar&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm start:detached&lt;/code&gt; to run as a detached window. Kinda handy for debugging&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features I&#39;d like&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Package it as an actual app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;When you start it, it absolutely pukes stuff into the node console. Not sure why or what that is.&lt;/p&gt;</summary>
  </entry>
</feed>