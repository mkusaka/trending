<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-20T01:48:17Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kettle11/tangle</title>
    <updated>2023-02-20T01:48:17Z</updated>
    <id>tag:github.com,2023-02-20:/kettle11/tangle</id>
    <link href="https://github.com/kettle11/tangle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Radically simple multiplayer / networked WebAssembly&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;p&gt;This library is incredibly new. I value building in public so I&#39;m making Tangle available &lt;em&gt;very&lt;/em&gt; early. As a result Tangle has major bugs, TODOs, and known issues. The library is not stable: it will change constantly! Give it a try, be patient, and consider contributing!&lt;/p&gt; &#xA;&lt;h1&gt;Tangle&lt;/h1&gt; &#xA;&lt;p&gt;Tangle is a library that aims to make multiplayer apps and games far easier to build.&lt;/p&gt; &#xA;&lt;p&gt;Tangle &#39;magically&#39; wraps WebAssembly so you can write programs without worrying about message passing, serialization, or consensus.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tanglesync.com&#34;&gt;Play with a live demo:&lt;/a&gt; &lt;a href=&#34;https://tanglesync.com&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4565191/219482853-ac964fbd-a40f-4507-851a-5152c12d71f8.jpeg&#34; alt=&#34;1500x500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kettle11/tangle/main/examples&#34;&gt;Check out the examples to get started!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;h3&gt;What is this for?&lt;/h3&gt; &#xA;&lt;p&gt;Tangle is a great fit for small games and apps that want to add multiplayer. In the future it may be useful for all sorts of things including (but not limited to): syncing programs between servers / clients, untrusted plugins in networked software, &#39;metaverse&#39;-like scripting, and backend-less collaborative software.&lt;/p&gt; &#xA;&lt;h3&gt;Does this use WebSockets or WebRTC?&lt;/h3&gt; &#xA;&lt;p&gt;Under the hood Tangle uses peer to peer WebRTC connections. This may change!&lt;/p&gt; &#xA;&lt;h3&gt;How is this hosted?&lt;/h3&gt; &#xA;&lt;p&gt;Connections are peer to peer but the initial connection needs to be facilitated by a central server. Right now I run a free instance of that server but if it gets serious traffic I may offer a paid version.&lt;/p&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;Tangle syncs initial state and networks all subsequent inputs that could cause simulations to diverge. Tangle keeps every bit identical between all connected Wasm instances. &#39;Snapshots&#39; are taken at each simulation step to enable &#39;rewinding&#39; and &#39;replaying&#39; events to ensure all peers apply events in the same order, without adding latency to user input.&lt;/p&gt; &#xA;&lt;p&gt;TODO: Write a more detailed explainer.&lt;/p&gt; &#xA;&lt;h3&gt;What are its limitations?&lt;/h3&gt; &#xA;&lt;p&gt;Due to how rollback works frequently updated programs will have increased input latency if they do not keep CPU and memory usage low. This is an area that will see future improvement.&lt;/p&gt; &#xA;&lt;p&gt;Tangle does nothing to merge long stretches of offline editing. It is not a CRDT.&lt;/p&gt; &#xA;&lt;h3&gt;What languages does this support?&lt;/h3&gt; &#xA;&lt;p&gt;In theory: Any language that targets WebAssembly. In practice I&#39;ve only tested &lt;a href=&#34;https://www.assemblyscript.org&#34;&gt;AssemblyScript&lt;/a&gt; and &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Is this web only?&lt;/h3&gt; &#xA;&lt;p&gt;Right now Tangle is implemented as a TypeScript library for web but its fundamental architecture &lt;em&gt;could&lt;/em&gt; eventually be made to work on native platforms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>askrella/whatsapp-chatgpt</title>
    <updated>2023-02-20T01:48:17Z</updated>
    <id>tag:github.com,2023-02-20:/askrella/whatsapp-chatgpt</id>
    <link href="https://github.com/askrella/whatsapp-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT + DALL-E + WhatsApp = AI Assistant üöÄ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT + DALL-E + Whatsapp = AI Assistant üöÄ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/askrella/whatsapp-chatgpt/actions/workflows/docker.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt; &lt;img src=&#34;https://github.com/askrella/whatsapp-chatgpt/actions/workflows/prettier.yml/badge.svg?sanitize=true&#34; alt=&#34;Prettier&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/9VJaRXKwd3&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/9VJaRXKwd3&#34; alt=&#34;Discord Invite&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This WhatsApp bot uses OpenAI&#39;s GPT and DALL-E 2 to respond to user inputs.&lt;/p&gt; &#xA;&lt;img width=&#34;904&#34; alt=&#34;Example prompts&#34; src=&#34;https://user-images.githubusercontent.com/6507938/219959783-96cac29a-d786-4586-a1fc-4dca827c4344.png&#34;&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js (18 or newer)&lt;/li&gt; &#xA; &lt;li&gt;A recent version of npm&lt;/li&gt; &#xA; &lt;li&gt;An OpenAI Account&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Install the required packages by running &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put your OpenAI API key into the &lt;code&gt;.env&lt;/code&gt; file &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example file: &lt;a href=&#34;https://github.com/askrella/whatsapp-chatgpt/raw/master/.env-example&#34;&gt;.env-example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You can obtain an API key &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the bot using &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan the QR code with WhatsApp (link a device)&lt;/li&gt; &#xA; &lt;li&gt;Now you&#39;re ready to go! People can send you messages, and the bot will respond to them&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to edit the &lt;code&gt;docker-compose.yml&lt;/code&gt; file and set your own variables there.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use the bot, simply send a message with the &lt;code&gt;!gpt&lt;/code&gt;/&lt;code&gt;!dalle&lt;/code&gt; command followed by your prompt. For example:&lt;/p&gt; &#xA;&lt;p&gt;GPT:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;!gpt What is the meaning of life?&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;DALLE:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;!dalle A frog with a red hat is walking on a bridge.&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disable prefix&lt;/h2&gt; &#xA;&lt;p&gt;You can disable the &lt;code&gt;!gpt&lt;/code&gt;/&lt;code&gt;!dalle&lt;/code&gt; prefix by setting &lt;code&gt;PREFIX_ENABLED&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt; If you disable the prefix, the bot will not support DALL-E, and only GPT will be used.&lt;/p&gt; &#xA;&lt;h2&gt;Sending messages to yourself&lt;/h2&gt; &#xA;&lt;p&gt;This bot also supports sending messages to yourself.&lt;/p&gt; &#xA;&lt;p&gt;To use this feature, simply send a message to your own phone number using the WhatsApp link &lt;code&gt;https://wa.me/&amp;lt;your_phone_number&amp;gt;&lt;/code&gt;. This will take you to your own chat window.&lt;/p&gt; &#xA;&lt;p&gt;After gaining access to your own chat, you can send a message to yourself and the bot will respond.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The operations performed by this bot are not free. You will be charged by OpenAI for each request you make.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/askrella/whatsapp-chatgpt/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=askrella/whatsapp-chatgpt&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Used libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pedroslopez/whatsapp-web.js&#34;&gt;https://github.com/pedroslopez/whatsapp-web.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api&#34;&gt;https://github.com/transitive-bullshit/chatgpt-api&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hwchase17/langchainjs</title>
    <updated>2023-02-20T01:48:17Z</updated>
    <id>tag:github.com,2023-02-20:/hwchase17/langchainjs</id>
    <link href="https://github.com/hwchase17/langchainjs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ü¶úÔ∏èüîó LangChain.js&lt;/h1&gt; &#xA;&lt;p&gt;‚ö° Building applications with LLMs through composability ‚ö°&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Production Support:&lt;/strong&gt; As you move your LangChains into production, we&#39;d love to offer more comprehensive support. Please fill out &lt;a href=&#34;https://forms.gle/57d8AmXBYp8PP8tZA&#34;&gt;this form&lt;/a&gt; and we&#39;ll set up a dedicated support Slack channel.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;yarn add langchain&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { OpenAI } from &#34;langchain/llms&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§î What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Large language models (LLMs) are emerging as a transformative technology, enabling developers to build applications that they previously could not. But using these LLMs in isolation is often not enough to create a truly powerful app - the real power comes when you can combine them with other sources of computation or knowledge.&lt;/p&gt; &#xA;&lt;p&gt;This library is aimed at assisting in the development of those types of applications.&lt;/p&gt; &#xA;&lt;h2&gt;Relationship with Python LangChain&lt;/h2&gt; &#xA;&lt;p&gt;This is built to integrate as seamlessly as possible with the &lt;a href=&#34;https://github.com/hwchase17/langchain&#34;&gt;LangChain Python package&lt;/a&gt;. Specifically, this means all objects (prompts, LLMs, chains, etc) are designed in a way where they can be serialized and shared between languages.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/hwchase17/langchain-hub&#34;&gt;LangChainHub&lt;/a&gt; is a central place for the serialized versions of these prompts, chains, and agents.&lt;/p&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation of prompts, chains, agents and more, please see &lt;a href=&#34;https://hwchase17.github.io/langchainjs/docs/overview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üíÅ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infra, or better documentation.&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://raw.githubusercontent.com/hwchase17/langchainjs/main/CONTRIBUTING.md&#34;&gt;our contributing guidelines&lt;/a&gt; for instructions on how to contribute.&lt;/p&gt;</summary>
  </entry>
</feed>