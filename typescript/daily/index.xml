<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-03T01:38:10Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>marcusGoncalvess/zap-gpt</title>
    <updated>2024-03-03T01:38:10Z</updated>
    <id>tag:github.com,2024-03-03:/marcusGoncalvess/zap-gpt</id>
    <link href="https://github.com/marcusGoncalvess/zap-gpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Este projeto explora a integração do ChatGPT com o WhatsApp, transformando o chatbot em um assistente virtual capaz de realizar tarefas como falar com amigos, responder a perguntas de clientes, e muito mais, com um toque de humanização nas conversas.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zap-GPT&lt;/h1&gt; &#xA;&lt;p&gt;Este projeto explora a integração do ChatGPT com o WhatsApp, transformando o chatbot em um assistente virtual capaz de realizar tarefas como falar com amigos, responder a perguntas de clientes, e muito mais, com um toque de humanização nas conversas.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Como funciona&lt;/h2&gt; &#xA;&lt;p&gt;A integração começa com o &lt;a href=&#34;https://github.com/wppconnect-team/wppconnect&#34;&gt;wpconnect&lt;/a&gt;, que estabelece a conexão com o WhatsApp. &lt;br&gt; As mensagens recebidas são então processadas pela API do ChatGPT ou Gemini, que gera respostas coerentes e personalizadas.&lt;br&gt; Utilizamos um &lt;a href=&#34;https://platform.openai.com/docs/assistants/overview&#34;&gt;assistant&lt;/a&gt; da OpenAI, que é um do modelo OpenAI que foi pré-configurado com prompts detalhados. &lt;br&gt; No caso do Gemini usamos um prompt pronto para instruções do modelo. &lt;br&gt; Esses prompts orientam o assistente sobre como responder de maneira coerente e personalizada, assegurando que as interações não só se mantenham relevantes e engajantes, mas também reflitam uma abordagem humana e natural na conversação.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Como rodar o projeto&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/Sh94c6yn5aQ&#34;&gt;Vídeo mostrando como rodar&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;📌 Prompt do Assistant utilizado para marcar dates&lt;/h3&gt; &#xA;&lt;p&gt;Aqui o prompt que usei para o vídeo do gpt marcando dates. Caso queira o mesmo comportamento, pegue o prompt, crie uma assistant na openai e jogue ele lá como base para o assistente. O assistente gerará um ID que você colocará no .env como &lt;code&gt;OPENAI_ASSISTANT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Você é o Marcus Twin. o Marcus Twin é projetado para imitar o estilo conversacional único do Marcus, agora com uma atualização específica: a evitação de emojis. Este GPT, falando em português, reflete as características do Marcus, incluindo o uso de expressões, gírias e um tom casual adequado para uma variedade de tópicos.&#xA;Quando se trata de iniciar frases, Marcus Twin deve sempre começar com letras minúsculas, reforçando seu estilo informal. Em situações que normalmente exigiriam mais informações, o Marcus Twin não buscará esclarecimentos diretos, mas fará suposições informadas ou responderá de maneira consistente com o estilo de comunicação do Marcus.&#xA;É crucial que o Marcus Twin evite frases típicas de assistentes, como ofertas para ajudar ou perguntas clarificadoras. Em vez disso, ele deve preferir um estilo mais próximo de uma conversa informal entre amigos.&#xA;Suas respostas devem ser em português. Importante: o Marcus Twin não deve usar emojis e deve evitar comportamentos padronizados de assistentes virtuais, mantendo-se fiel ao estilo único do Marcus real.&#xA;Dê somente respostas curtas! Sem exceções!&#xA;E caso já tenha perguntado o que a pessoa está fazendo ou algo do tipo, cuide para não perguntar novamente, não tem problema se uma mensagem ficar sem puxar assunto.&#xA;Nome de filmes/séries ou o que for, não precisa colocar o nome exato, por exemplo &#34;The Office&#34; você pode escrever como the office sem aspas.&#xA;Você não pode assumir que é uma Inteligencia Artificial, você é o Marcus lembre-se disso, se alguém pedir para te encontrar ou algo assim, pode marcar o encontro em algum lugar de porto alegre, porque marcus mora em porto alegre no rio grande do sul, brasil.&#xA;Lembre-se que estamos em 2024, você não está mais em uma pandemia.&#xA;Você está falando com uma moça muito bonita, seja gentil e carinhoso, e tente flertar de uma forma sutil e leve. Apenas se surgir o assunto ou se houver brecha você pode sugerir lugares de porto alegre como a cb que é um bairro com vários bares ou algo como a orla ou a redenção que são parques bonitos de porto alegre. Mas lembre-se que você está falando com uma pessoa que nem conhece, não marque um encontro tão rápido&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Doações 🖤&lt;/h3&gt; &#xA;&lt;p&gt;Me pague o café que eu transformo ele em código 👇🏽🤩 &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://nubank.com.br/cobrar/1bkhum/65e06650-3954-4a4b-a4d7-c9a7148c97be&#34;&gt;Doar 5 reais para Marcus&lt;/a&gt;&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>bangbang93/openbmclapi</title>
    <updated>2024-03-03T01:38:10Z</updated>
    <id>tag:github.com,2024-03-03:/bangbang93/openbmclapi</id>
    <link href="https://github.com/bangbang93/openbmclapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BMCLAPI@Home&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BMCLAPI&lt;/h1&gt; &#xA;&lt;p&gt;BMCLAPI是@bangbang93开发的BMCL的一部分，用于解决国内线路对Forge和Minecraft官方使用的Amazon S3 速度缓慢的问题。BMCLAPI是对外开放的，所有需要Minecraft资源的启动器均可调用。&lt;/p&gt; &#xA;&lt;h1&gt;OpenBMCLAPI&lt;/h1&gt; &#xA;&lt;p&gt;这个项目的主要目的是辅助bmclapi分发文件 对节点的要求降低了不少&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;公网可访问（端口映射也可），可以非80&lt;/li&gt; &#xA; &lt;li&gt;10Mbps以上的上行速度&lt;/li&gt; &#xA; &lt;li&gt;暂时不接受国外节点了&lt;/li&gt; &#xA; &lt;li&gt;可以长时间稳定在线&lt;/li&gt; &#xA; &lt;li&gt;暂不支持IPv6 only(可以双栈)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bangbang93/openbmclapi/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你是家庭宽带打算参与，配置信息可以参考 &lt;a href=&#34;https://github.com/bangbang93/openbmclapi/wiki/%E5%AE%B6%E5%AE%BD%E6%90%AD%E5%BB%BA%E8%AF%B4%E6%98%8E&#34;&gt;家宽搭建说明&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果你是国内服务器打算参与，配置信息可以参考 &lt;a href=&#34;https://github.com/bangbang93/openbmclapi/wiki/%E5%9B%BD%E5%86%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E8%AF%B4%E6%98%8E&#34;&gt;国内服务器搭建说明&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Cli&lt;/h3&gt; &#xA;&lt;p&gt;如果你不熟悉docker，可以参考&lt;a href=&#34;https://github.com/bangbang93/openbmclapi/wiki/docker%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8C%97&#34;&gt;Docker部署指北&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;-e CLUSTER_ID=${CLUSTER_ID} \&#xA;-e CLUSTER_SECRET=${CLUSTER_SECRET} \&#xA;-e CLUSTER_PUBLIC_PORT=${CLUSTER_PORT} \&#xA;-e TZ=Asia/Shanghai \&#xA;-v /data/openbmclapi:/opt/openbmclapi/cache \&#xA;-p ${CLUSTER_PORT}:4000 \&#xA;--restart always \&#xA;--name openbmclapi \&#xA;bangbang93/openbmclapi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;若无法访问 Docker Hub Registry, 可以使用国内镜像:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull registry.bangbang93.com/bmclapi/openbmclapi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;请先根据 &lt;a href=&#34;https://raw.githubusercontent.com/bangbang93/openbmclapi/master/#%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0&#34;&gt;设置参数&lt;/a&gt; 中说明的内容创建 &lt;code&gt;.env&lt;/code&gt; 文件或直接更改 &lt;code&gt;docker-compose.yml&lt;/code&gt; 文件, 然后运行以下命令:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;配置&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;环境变量&lt;/th&gt; &#xA;   &lt;th&gt;必填&lt;/th&gt; &#xA;   &lt;th&gt;默认值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_ID&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;集群 ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;集群密钥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_IP&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;出口IP&lt;/td&gt; &#xA;   &lt;td&gt;集群 IP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_PORT&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;4000&lt;/td&gt; &#xA;   &lt;td&gt;监听端口&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_PUBLIC_PORT&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;CLUSTER_PORT&lt;/td&gt; &#xA;   &lt;td&gt;对外端口&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CLUSTER_BYOC&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;是否使用自定义域名, (BYOC=Bring you own certificate),当使用国内服务器需要备案时, 需要启用这个参数来使用你自己的域名, 并且你需要自己提供ssl termination&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_NGINX&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;使用 nginx 提供文件服务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_ACCESS_LOG&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;禁用访问日志输出&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;如果你在源码中发现了其他环境变量, 那么它们是为了方便开发而存在的, 可能会随时修改, 不要在生产环境中使用&lt;/p&gt; &#xA;&lt;h3&gt;安装包&lt;/h3&gt; &#xA;&lt;p&gt;从 &lt;a href=&#34;https://github.com/bangbang93/openbmclapi/releases&#34;&gt;Github Release&lt;/a&gt; 中选择对应你的系统的最新版本&lt;/p&gt; &#xA;&lt;h3&gt;从源码安装&lt;/h3&gt; &#xA;&lt;h4&gt;环境&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js 18以上&lt;/li&gt; &#xA; &lt;li&gt;Windows/MacOS/Linux, x86/arm均可 (凡是nodejs支持的环境都可以)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;设置环境&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;去 &lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;https://nodejs.org/zh-cn/&lt;/a&gt; 下载LTS版本的nodejs并安装&lt;/li&gt; &#xA; &lt;li&gt;Clone 并安装依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/bangbang93/openbmclapi&#xA;cd openbmclapi&#xA;## 安装依赖&#xA;npm ci&#xA;## 编译&#xA;npm run build&#xA;## 运行&#xA;node dist/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;如果你看到了 &lt;code&gt;CLUSTER_ID is not set&lt;/code&gt; 的报错, 说明一切正常, 该设置参数了&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;设置参数&lt;/h3&gt; &#xA;&lt;p&gt;在项目根目录创建一个文件, 名为 &lt;code&gt;.env&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;写入如下内容&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;CLUSTER_ID=你的CLUSTER_ID&#xA;CLUSTER_SECRET=你的CLUSTER_SECRET&#xA;CLUSTER_PORT=对外访问端口&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CLUSTER_ID 和 CLUSTER_SECRET 请联系我获取&lt;/p&gt; &#xA;&lt;p&gt;如果配置无误的话, 运行程序, 就会开始拉取文件, 拉取完成后就会开始等待服务器分发请求了&lt;/p&gt; &#xA;&lt;h3&gt;同步数据&lt;/h3&gt; &#xA;&lt;p&gt;openbmclapi 会自行同步需要的文件, 但是初次同步可能会速度过慢, 如果您的节点是个全量节点, 可以通过以下命令使用rsync快速同步 以下三台rsync服务器是相同的, 你可以选择任意一台进行同步&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;rsync -rzvP openbmclapi@home.933.moe::openbmclapi cache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsync -avP openbmclapi@storage.yserver.ink::bmcl cache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsync -azvrhP openbmclapi@openbmclapi.home.mxd.moe::volume cache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>