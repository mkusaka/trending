<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-20T01:36:24Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>devflowinc/trieve</title>
    <updated>2025-06-20T01:36:24Z</updated>
    <id>tag:github.com,2025-06-20:/devflowinc/trieve</id>
    <link href="https://github.com/devflowinc/trieve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All-in-one platform for search, recommendations, RAG, and analytics offered via API&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;100&#34; src=&#34;https://cdn.trieve.ai/trieve-logo.png&#34; alt=&#34;Trieve Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://dashboard.trieve.ai&#34;&gt;Sign Up (1k chunks free)&lt;/a&gt; | &lt;a href=&#34;https://pdf2md.trieve.ai&#34;&gt;PDF2MD&lt;/a&gt; | &lt;a href=&#34;https://docs.trieve.ai&#34;&gt;Hacker News Search Engine&lt;/a&gt; | &lt;a href=&#34;https://docs.trieve.ai&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://cal.com/nick.k/meet&#34;&gt;Meet a Maintainer&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/eBJXXZDB8z&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://matrix.to/#/%23trieve-general:trieve.ai&#34;&gt;Matrix&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/devflowinc/trieve/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/devflowinc/trieve.svg?style=flat&amp;amp;color=yellow&#34; alt=&#34;Github stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/CuJVfgZf54&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1130153053056684123.svg?label=Discord&amp;amp;logo=Discord&amp;amp;colorB=7289da&amp;amp;style=flat&#34; alt=&#34;Join Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/%23trieve-general:trieve.ai&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/matrix-join-purple?style=flat&amp;amp;logo=matrix&amp;amp;logocolor=white&#34; alt=&#34;Join Matrix&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://smithery.ai/server/trieve-mcp-server&#34;&gt; &lt;img src=&#34;https://smithery.ai/badge/trieve-mcp-server&#34; alt=&#34;smithery badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522trieve-mcp-server%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522more%2520args...%2522%255D%257D&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/vscode-mcp-install?style=flat&amp;amp;logoColor=%230078d4&amp;amp;label=vscode-mcp&amp;amp;labelColor=%230078d4&amp;amp;link=https%3A%2F%2Finsiders.vscode.dev%2Fredirect%3Furl%3Dvscode%253Amcp%252Finstall%253F%25257B%252522name%252522%25253A%252522trieve-mcp-server%252522%25252C%252522command%252522%25253A%252522npx%252522%25252C%252522args%252522%25253A%25255B%252522more%252520args...%252522%25255D%25257D&#34; alt=&#34;vscode mcp install badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; &lt;b&gt;All-in-one solution for search, recommendations, and RAG&lt;/b&gt; &lt;/h2&gt; &#xA;&lt;a href=&#34;https://trieve.ai&#34;&gt; &lt;img src=&#34;https://cdn.trieve.ai/landing-tabs/light-api.webp&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.trieve.ai/api-reference&#34;&gt;API Reference + Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.trieve.ai/redoc&#34;&gt;OpenAPI specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ts-sdk.trieve.ai/&#34;&gt;Typescript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/trieve-py-client/&#34;&gt;Python SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîí Self-Hosting in your VPC or on-prem&lt;/strong&gt;: We have full self-hosting guides for AWS, GCP, Kubernetes generally, and docker compose available on our &lt;a href=&#34;https://docs.trieve.ai/self-hosting/docker-compose&#34;&gt;documentation page here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üß† Semantic Dense Vector Search&lt;/strong&gt;: Integrates with OpenAI or Jina embedding models and &lt;a href=&#34;https://qdrant.tech&#34;&gt;Qdrant&lt;/a&gt; to provide semantic vector search.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîç Typo Tolerant Full-Text/Neural Search&lt;/strong&gt;: Every uploaded chunk is vector&#39;ized with &lt;a href=&#34;https://huggingface.co/naver/efficient-splade-VI-BT-large-query&#34;&gt;naver/efficient-splade-VI-BT-large-query&lt;/a&gt; for typo tolerant, quality neural sparse-vector search.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üñäÔ∏è Sub-Sentence Highlighting&lt;/strong&gt;: Highlight the matching words or sentences within a chunk and bold them on search to enhance UX for your users. Shout out to the &lt;a href=&#34;https://github.com/smartdatalake/simsearch&#34;&gt;simsearch&lt;/a&gt; crate!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üåü Recommendations&lt;/strong&gt;: Find similar chunks (or files if using grouping) with the recommendation API. Very helpful if you have a platform where users&#39; favorite, bookmark, or upvote content.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ü§ñ Convenient RAG API Routes&lt;/strong&gt;: We integrate with OpenRouter to provide you with access to any LLM you would like for RAG. Try our routes for &lt;a href=&#34;https://api.trieve.ai/redoc#tag/message/operation/create_message_completion_handler&#34;&gt;fully-managed RAG with topic-based memory management&lt;/a&gt; or &lt;a href=&#34;https://api.trieve.ai/redoc#tag/chunk/operation/generate_off_chunks&#34;&gt;select your own context RAG&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üíº Bring Your Own Models&lt;/strong&gt;: If you&#39;d like, you can bring your own text-embedding, SPLADE, cross-encoder re-ranking, and/or large-language model (LLM) and plug it into our infrastructure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üîÑ Hybrid Search with cross-encoder re-ranking&lt;/strong&gt;: For the best results, use hybrid search with &lt;a href=&#34;https://huggingface.co/BAAI/bge-reranker-large&#34;&gt;BAAI/bge-reranker-large&lt;/a&gt; re-rank optimization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üìÜ Recency Biasing&lt;/strong&gt;: Easily bias search results for what was most recent to prevent staleness&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üõ†Ô∏è Tunable Merchandizing&lt;/strong&gt;: Adjust relevance using signals like clicks, add-to-carts, or citations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üï≥Ô∏è Filtering&lt;/strong&gt;: Date-range, substring match, tag, numeric, and other filter types are supported.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;üë• Grouping&lt;/strong&gt;: Mark multiple chunks as being part of the same file and search on the file-level such that the same top-level result never appears twice&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Are we missing a feature that your use case would need?&lt;/strong&gt; - call us at &lt;a href=&#34;mailto:+16282224090&#34;&gt;628-222-4090&lt;/a&gt;, make a &lt;a href=&#34;https://github.com/devflowinc/trieve/issues&#34;&gt;Github issue&lt;/a&gt;, or join the &lt;a href=&#34;https://matrix.to/#/%23trieve-general:trieve.ai&#34;&gt;Matrix community&lt;/a&gt; and tell us! We are a small company who is still very hands-on and eager to build what you need; professional services are available.&lt;/p&gt; &#xA;&lt;h2&gt;Local development with Linux&lt;/h2&gt; &#xA;&lt;h3&gt;Installing via Smithery&lt;/h3&gt; &#xA;&lt;p&gt;To install Trieve for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/trieve-mcp-server&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install trieve-mcp-server --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian/Ubuntu Packages needed packages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install curl \&#xA;gcc \&#xA;g++ \&#xA;make \&#xA;pkg-config \&#xA;python3 \&#xA;python3-pip \&#xA;libpq-dev \&#xA;libssl-dev \&#xA;openssl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Packages needed&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo pacman -S base-devel postgresql-libs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install NodeJS and Yarn&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;NVM&lt;/a&gt; using its install script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should restart the terminal to update bash profile with NVM. Then, you can install NodeJS LTS release and Yarn.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nvm install --lts&#xA;npm install -g yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Make server tmp dir&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir server/tmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install rust&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install cargo-watch&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install cargo-watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup env&#39;s&lt;/h3&gt; &#xA;&lt;p&gt;You might need to create the &lt;code&gt;analytics&lt;/code&gt; directory in ./frontends&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.analytics ./frontends/analytics/.env&#xA;cp .env.chat ./frontends/chat/.env&#xA;cp .env.search ./frontends/search/.env&#xA;cp .env.example ./server/.env&#xA;cp .env.dashboard ./frontends/dashboard/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add your &lt;code&gt;LLM_API_KEY&lt;/code&gt; to &lt;code&gt;./server/.env&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.streamlit.io/beginners-guide-to-openai-api/#get-your-own-openai-api-key&#34;&gt;Here is a guide for acquiring that&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Steps once you have the key&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the &lt;code&gt;./server/.env&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;Replace the value for &lt;code&gt;LLM_API_KEY&lt;/code&gt; to be your own OpenAI API key.&lt;/li&gt; &#xA; &lt;li&gt;Replace the value for &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; to be your own OpenAI API key.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Export the following keys in your terminal for local dev&lt;/h3&gt; &#xA;&lt;p&gt;The PAGEFIND_CDN_BASE_URL and S3_SECRET_KEY_CSVJSONL could be set to a random list of strings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export OPENAI_API_KEY=&#34;your_OpenAI_api_key&#34; \&#xA;LLM_API_KEY=&#34;your_OpenAI_api_key&#34; \&#xA;PAGEFIND_CDN_BASE_URL=&#34;lZP8X4h0Q5Sj2ZmV,aAmu1W92T6DbFUkJ,DZ5pMvz8P1kKNH0r,QAqwvKh8rI5sPmuW,YMwgsBz7jLfN0oX8&#34; \&#xA;S3_SECRET_KEY_CSVJSONL=&#34;Gq6wzS3mjC5kL7i4KwexnL3gP8Z1a5Xv,V2c4ZnL0uHqBzFvR2NcN8Pb1g6CjmX9J,TfA1h8LgI5zYkH9A9p7NvWlL0sZzF9p8N,pKr81pLq5n6MkNzT1X09R7Qb0Vn5cFr0d,DzYwz82FQiW6T3u9A4z9h7HLOlJb7L2V1&#34; \&#xA;GROQ_API_KEY=&#34;GROQ_API_KEY_if_applicable&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start docker container services needed for local dev&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat .env.chat .env.search .env.server .env.docker-compose &amp;gt; .env&#xA;&#xA;./convenience.sh -l&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install front-end packages for local dev&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd frontends&#xA;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;cd ..&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd clients/ts-sdk&#xA;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;cd ../..&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Start services for local dev&lt;/h3&gt; &#xA;&lt;p&gt;It is recommend to manage services through &lt;a href=&#34;https://gist.github.com/skeptrunedev/101c7a13bb9b9242999830655470efac&#34;&gt;tmuxp, see the guide here&lt;/a&gt; or terminal tabs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd frontends&#xA;yarn&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd server&#xA;cargo watch -x run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd server&#xA;cargo run --bin ingestion-worker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd server&#xA;cargo run --bin file-worker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd server&#xA;cargo run --bin delete-worker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd search&#xA;yarn&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verify Working Setup&lt;/h3&gt; &#xA;&lt;p&gt;After the cargo build has finished (after the &lt;code&gt;tmuxp load trieve&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;check that you can see redoc with the OpenAPI reference at &lt;a href=&#34;http://localhost:8090/redoc&#34;&gt;localhost:8090/redoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;make an account create a dataset with test data at &lt;a href=&#34;http://localhost:5173&#34;&gt;localhost:5173&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;search that dataset with test data at &lt;a href=&#34;http://localhost:5174&#34;&gt;localhost:5174&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Instructions for testing cross encoder reranking models&lt;/h3&gt; &#xA;&lt;p&gt;To test the Cross Encoder rerankers in local dev,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;click on the dataset, go to the Dataset Settings -&amp;gt; Dataset Options -&amp;gt; Additional Options and uncheck the &lt;code&gt;Fulltext Enabled&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;in the Embedding Settings, select your reranker model and enter the respective key in the adjacent textbox, and hit save.&lt;/li&gt; &#xA; &lt;li&gt;in the search playground, set Type -&amp;gt; Semantic and select Rerank By -&amp;gt; Cross Encoder&lt;/li&gt; &#xA; &lt;li&gt;if AIMon Reranker is selected in the Embedding Settings, you can enter an optional Task Definition in the search playground to specify the domain of context documents to the AIMon reranker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Debugging issues with local dev&lt;/h3&gt; &#xA;&lt;p&gt;Reach out to us on &lt;a href=&#34;https://discord.gg/E9sPRZqpDT&#34;&gt;discord&lt;/a&gt; for assistance. We are available and more than happy to assist.&lt;/p&gt; &#xA;&lt;h2&gt;Debug diesel by getting the exact generated SQL&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;diesel::debug_query(&amp;amp;query).to_string();&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running evals&lt;/h2&gt; &#xA;&lt;p&gt;The evals package loads an mcp client that then runs the index.ts file, so there is no need to rebuild between tests. You can load environment variables by prefixing the npx command. Full documentation can be found &lt;a href=&#34;https://www.mcpevals.io/docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=your-key  npx mcp-eval evals.ts clients/mcp-server/src/index.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Local Setup for Testing Stripe Features&lt;/h2&gt; &#xA;&lt;p&gt;Install Stripe CLI.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;stripe login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stripe listen --forward-to localhost:8090/api/stripe/webhook&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;set the &lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt; in the &lt;code&gt;server/.env&lt;/code&gt; to the resulting webhook signing secret&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stripe products create --name trieve --default-price-data.unit-amount 1200 --default-price-data.currency usd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stripe plans create --amount=1200 --currency=usd --interval=month --product={id from response of step 3}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/devflowinc/trieve/graphs/contributors&#34;&gt; &lt;img alt=&#34;contributors&#34; src=&#34;https://contrib.rocks/image?repo=devflowinc/trieve&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>cloudflare/ai</title>
    <updated>2025-06-20T01:36:24Z</updated>
    <id>tag:github.com,2025-06-20:/cloudflare/ai</id>
    <link href="https://github.com/cloudflare/ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cloudflare AI&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains various packages and demo apps related consuming Cloudflare&#39;s AI offerings on the client-side. It is a monorepo powered by &lt;a href=&#34;https://nx.dev/&#34;&gt;Nx&lt;/a&gt; and &lt;a href=&#34;https://github.com/changesets/changesets&#34;&gt;Changesets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/ai/main/packages/workers-ai-provider/README.md&#34;&gt;&lt;code&gt;workers-ai-provider&lt;/code&gt;&lt;/a&gt;: A custom provider that enables &lt;a href=&#34;https://ai.cloudflare.com/&#34;&gt;Workers AI&lt;/a&gt;&#39;s models for the &lt;a href=&#34;https://sdk.vercel.ai/&#34;&gt;Vercel AI SDK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/ai/main/packages/ai-gateway-provider/README.md&#34;&gt;&lt;code&gt;ai-gateway-provider&lt;/code&gt;&lt;/a&gt;: &lt;a href=&#34;https://developers.cloudflare.com/ai-gateway/&#34;&gt;AI Gateway&lt;/a&gt; Provider for &lt;a href=&#34;https://sdk.vercel.ai/&#34;&gt;Vercel AI SDK&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:cloudflare/ai.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Dependencies.&lt;/p&gt; &lt;p&gt;From the root directory, run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ai&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Develop.&lt;/p&gt; &lt;p&gt;To start a development server for a specific app (for instance, &lt;code&gt;tool-calling&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx dev tool-calling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Ideally all commands should be executed from the repository root with the &lt;code&gt;pnpm nx&lt;/code&gt; prefix. This will ensure that the dependency graph is managed correctly, e.g. if one package relies on the output of an other.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Testing and Linting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To execute your continuous integration tests for a specific project (e.g., &lt;code&gt;workers-ai-provider&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx test:ci workers-ai-provider&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To lint a specific project:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx lint my-project&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run a more comprehensive sweep of tasks (lint, tests, type checks, build) against one or more projects:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx run-many -t lint test:ci type-check build -p &#34;my-project other-project&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Other Nx Tasks.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;build&lt;/code&gt;: Compiles a project or a set of projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Runs project tests in watch mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test:ci&lt;/code&gt;: Runs tests in CI mode (no watch).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test:smoke&lt;/code&gt;: Runs smoke tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;type-check&lt;/code&gt;: Performs TypeScript type checks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a New Demo App&lt;/h2&gt; &#xA;&lt;p&gt;In order to scaffold a new demo app, you can use the &lt;code&gt;create-demo&lt;/code&gt; script. This script will create a new demo app in the &lt;code&gt;demos&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm create-demo &amp;lt;demo-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After creating the app, &lt;code&gt;pnpm install&lt;/code&gt; will be run to install the dependencies, and &lt;code&gt;pnpm nx cf-typegen &amp;lt;demo-name&amp;gt;&lt;/code&gt; will be run to generate the types for the demo app. Then it&#39;s simply a case of starting the app with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm nx dev &amp;lt;demo-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate contributions and encourage pull requests. Please follow these guidelines:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Project Setup: After forking or cloning, install dependencies with &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Branching: Create a new branch for your feature or fix.&lt;/li&gt; &#xA; &lt;li&gt;Making Changes:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add or update relevant tests.&lt;/li&gt; &#xA; &lt;li&gt;On pushing your changes, automated tasks will be run (courtesy of a Husky pre-push hook).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Changesets: If your changes affect a published package, run &lt;code&gt;pnpm changeset&lt;/code&gt; to create a changeset. Provide a concise summary of your changes in the changeset prompt.&lt;/li&gt; &#xA; &lt;li&gt;Pull Request: Submit a pull request to the &lt;code&gt;main&lt;/code&gt; branch. The team will review it and merge if everything is in order.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Release Process&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://github.com/changesets/changesets&#34;&gt;Changesets&lt;/a&gt; to manage versioning and publication:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Changeset Creation&lt;/strong&gt;: Whenever a change is made that warrants a new release (e.g., bug fixes, new features), run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm changeset&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Provide a clear description of the changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Merging&lt;/strong&gt;: Once the changeset is merged into &lt;code&gt;main&lt;/code&gt;, our GitHub Actions workflows will:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detect the changed packages, and create a Version Packages PR.&lt;/li&gt; &#xA; &lt;li&gt;Increment versions automatically (via Changesets).&lt;/li&gt; &#xA; &lt;li&gt;Publish any package that has a version number to npm. (Demos and other internal items do not require versioning.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Publication&lt;/strong&gt;: The release workflow (&lt;code&gt;.github/workflows/release.yml&lt;/code&gt;) will run on every push to &lt;code&gt;main&lt;/code&gt;. It ensures each published package is tagged and released on npm. Any package with a version field in its &lt;code&gt;package.json&lt;/code&gt; will be included in this process.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For any queries or guidance, kindly open an issue or submit a pull request. We hope this structure and process help you to contribute effectively.&lt;/p&gt;</summary>
  </entry>
</feed>