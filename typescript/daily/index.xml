<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-21T01:35:05Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>solana-developers/program-examples</title>
    <updated>2024-10-21T01:35:05Z</updated>
    <id>tag:github.com,2024-10-21:/solana-developers/program-examples</id>
    <link href="https://github.com/solana-developers/program-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository of Solana program examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Program Examples&lt;/h1&gt; &#xA;&lt;h2&gt;Onchain program examples for &lt;span&gt;‚öì&lt;/span&gt; Anchor &lt;span&gt;ü¶Ä&lt;/span&gt; Native Rust, [TS] TypeScript and &lt;span&gt;üêç&lt;/span&gt; Python&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains Solana onchain programs (referred to as &#39;Smart Contracts&#39; in other blockchains).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you&#39;re new to Solana, you don&#39;t need to create your own programs to perform basic things like making accounts, creating tokens, sending tokens, or minting NFTs. These common tasks are handled with existing programs, for example the System Program (for making account or transferring SOL) or the token program (for creating tokens and NFTs). See the &lt;a href=&#34;https://solana.com/developers&#34;&gt;Solana Developer site&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Each folder includes examples for one or more of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;anchor&lt;/code&gt; - Written using &lt;a href=&#34;https://www.anchor-lang.com/&#34;&gt;Anchor&lt;/a&gt;, the most popular framework for Solana Development, which uses Rust. Use &lt;code&gt;anchor build &amp;amp;&amp;amp; anchor deploy&lt;/code&gt; to build &amp;amp; deploy the program. Run &lt;code&gt;anchor run test&lt;/code&gt; to test it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;native&lt;/code&gt; - Written using Solana&#39;s native Rust crates and vanilla Rust. Use &lt;code&gt;cicd.sh&lt;/code&gt; to build &amp;amp; deploy the program. Run &lt;code&gt;yarn run test&lt;/code&gt; to test it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;poseidon&lt;/code&gt; - Written using &lt;a href=&#34;https://turbin3.github.io/poseidon&#34;&gt;Poseidon&lt;/a&gt;, which converts your TypeScript code to Anchor Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;seahorse&lt;/code&gt; - Written using the &lt;a href=&#34;https://seahorse-lang.org/&#34;&gt;Seahorse framework&lt;/a&gt;, which converts your Python code to Anchor Rust. Use &lt;code&gt;seahorse build &amp;amp;&amp;amp; anchor deploy&lt;/code&gt; to build &amp;amp; deploy the program. Run &lt;code&gt;anchor run test&lt;/code&gt; to test it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;If a given example is missing, please send us a PR to add it!&lt;/strong&gt; Our aim is to have every example available in every option. We&#39;d also love to see more programs involving staking, wrapped tokens, oracles, compression and VRF. Follow the &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to keep things consistent.&lt;/p&gt; &#xA;&lt;h2&gt;The example programs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Basics&lt;/summary&gt; &#xA; &lt;h3&gt;Hello world&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/hello-solana/README.md&#34;&gt;Hello World on Solana! A minimal program that logs a greeting.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/hello-solana/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/hello-solana/native&#34;&gt;native&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/hello-solana/seahorse&#34;&gt;seahorse&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Account-data&lt;/h3&gt; &#xA; &lt;p&gt;Store and retrieve data using Solana accounts.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/account-data/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/account-data/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Storing global state - Counter&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/counter/README.md&#34;&gt;Use a PDA to store global state, making a counter that increments when called.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/counter/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/counter/native&#34;&gt;native&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/counter/seahorse&#34;&gt;seahorse&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Saving per-user state - Favorites&lt;/h3&gt; &#xA; &lt;p&gt;Save and update per-user state on the blockchain, ensuring users can only update their own information.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/favorites/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Checking Instruction Accounts&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/checking-accounts/README.md&#34;&gt;Check that the accounts provided in incoming instructions meet particular criteria.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/checking-accounts/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/checking-accounts/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Closing Accounts&lt;/h3&gt; &#xA; &lt;p&gt;Close an account and get the Lamports back.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/close-account/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/close-account/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Creating Accounts&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/create-account/README.md&#34;&gt;Make new accounts on the blockchain.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/create-account/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/create-account/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Cross program invocations&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/cross-program-invocation/README.md&#34;&gt;Invoke an instruction handler from one onchain program in another onchain program.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/cross-program-invocation/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/cross-program-invocation/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;PDA rent-payer&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/pda-rent-payer/README.md&#34;&gt;Use a PDA to pay the rent for the creation of a new account.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/pda-rent-payer/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/pda-rent-payer/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Processing instructions&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/processing-instructions/README.md&#34;&gt;Add parameters to an instruction handler and use them.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/processing-instructions/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/processing-instructions/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Storing date in program derived addresses&lt;/h3&gt; &#xA; &lt;p&gt;Store and retrieve state in Solana.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/program-derived-addresses/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/program-derived-addresses/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Handling accounts that expland in size&lt;/h3&gt; &#xA; &lt;p&gt;How to store state that changes size in Solana.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/realloc/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/realloc/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Calculating account size to determine rent&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/rent/README.md&#34;&gt;Determine the necessary minimum rent by calculating an account&#39;s size.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/rent/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/rent/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Laying out larger programs&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/repository-layout/README.md&#34;&gt;Layout larger Solana onchain programs.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/repository-layout/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/repository-layout/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Transferring SOL&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/transfer-sol/README.md&#34;&gt;Send SOL between two accounts.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/transfer-sol/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/transfer-sol/native&#34;&gt;native&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/basics/transfer-sol/seahorse&#34;&gt;seahorse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tokens&lt;/summary&gt; &#xA; &lt;h3&gt;Creating tokens&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/create-token/README.md&#34;&gt;Create a token on Solana with a token symbol and icon.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/create-token/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/create-token/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Minting NFTS&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/nft-minter/README.md&#34;&gt;Mint an NFT from inside your own onchain program using the Token and Metaplex Token Metadata programs.&lt;/a&gt; Reminder: you don&#39;t need your own program just to mint an NFT, see the note at the top of this README.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/nft-minter/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/nft-minter/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Minting a token from inside a program&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/spl-token-minter/README.md&#34;&gt;Mint a Token from inside your own onchain program using the Token program.&lt;/a&gt; Reminder: you don&#39;t need your own program just to mint an NFT, see the note at the top of this README.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/spl-token-minter/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/spl-token-minter/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Transferring Tokens&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/transfer-tokens/README.md&#34;&gt;Transfer tokens between accounts&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/transfer-tokens/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/transfer-tokens/native&#34;&gt;native&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/transfer-tokens/seahorse&#34;&gt;seahorse&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Allowing users to swap digital assets - Escrow&lt;/h3&gt; &#xA; &lt;p&gt;Allow two users to swap digital assets with each other, each getting 100% of what the other has offered due to the power of decentralization!&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/escrow/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Minting a token from inside a program with a PDA as the mint authority&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/pda-mint-authority/README.md&#34;&gt;Mint a Token from inside your own onchain program using the Token program.&lt;/a&gt; Reminder: you don&#39;t need your own program just to mint an NFT, see the note at the top of this README.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/pda-mint-authority/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/pda-mint-authority/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Creating an Automated Market Maker&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-swap/README.md&#34;&gt;Create liquidity pools to allow trading of new digital assets and allows users that provide liquidity to be rewarded by creating an Automated Market Maker.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-swap/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Token Extensions&lt;/summary&gt; &#xA; &lt;h3&gt;Basics - create token mints, mint tokens, and transfer tokens with Token Extensions&lt;/h3&gt; &#xA; &lt;p&gt;Create token mints, mint tokens, and transferr tokens using Token Extensions.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/basics/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Preventing CPIs with CPI guard&lt;/h3&gt; &#xA; &lt;p&gt;Enable CPI guard to prevents certain token action from occurring within CPI (Cross-Program Invocation).&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/cpi-guard/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Using default account state&lt;/h3&gt; &#xA; &lt;p&gt;Create new token accounts that are frozen by default.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/default-account-state/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/default-account-state/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Grouping tokens&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens that belong to larger groups of tokens using the Group Pointer extension.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/group/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Creating token accounts whose owner cannot be changed&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens whose owning program cannot be changed.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/immutable-owner/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Interest bearing tokens&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens that show an &#39;interest&#39; calculation.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/interest-bearing/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Requiring transactions to include descriptive memos&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens where transfers must have a memo describing the transaction attached.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/memo-transfer/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Adding on-chain metadata to the token mint&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens that store their onchain metadata inside the token mint, without needing to use or pay for additional programs.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/metadata/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Allow a designedated account to close a mint&lt;/h3&gt; &#xA; &lt;p&gt;Allow a designated account to close a Mint.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/mint-close-authority/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/mint-close-authority/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Usng multiple token extensions&lt;/h3&gt; &#xA; &lt;p&gt;Use multiple Token Extensions at once.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/multiple-extensions/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Non-transferrable - create tokens that can&#39;t be transferred.&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens that cannot be transferred.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/non-transferable/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/non-transferable/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Permanent Delegate - Create tokens permanently under the control of a particular account&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens that remain under the control of an account, even when transferred elsewhere.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/permanent-delegate/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Create tokens with a transfer-fee.&lt;/h3&gt; &#xA; &lt;p&gt;Create tokens with an inbuilt transfer fee.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/transfer-fee/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/tokens/token-2022/transfer-fee/native&#34;&gt;native&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Compression&lt;/summary&gt; &#xA; &lt;h3&gt;Cnft-burn&lt;/h3&gt; &#xA; &lt;p&gt;Burn compressed NFTs.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/compression/cnft-burn/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Cnft-vault&lt;/h3&gt; &#xA; &lt;p&gt;Store Metaplex compressed NFTs inside a PDA.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/compression/cnft-vault/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Cutils&lt;/h3&gt; &#xA; &lt;p&gt;Work with Metaplex compressed NFTs.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/compression/cutils/anchor&#34;&gt;anchor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Oracles&lt;/summary&gt; &#xA; &lt;h3&gt;pyth&lt;/h3&gt; &#xA; &lt;p&gt;Use a data source for offchain data (called an Oracle) to perform activities onchain.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/oracles/pyth/anchor&#34;&gt;anchor&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/solana-developers/program-examples/main/oracles/pyth/seahorse&#34;&gt;seahorse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>e2b-dev/fragments</title>
    <updated>2024-10-21T01:35:05Z</updated>
    <id>tag:github.com,2024-10-21:/e2b-dev/fragments</id>
    <link href="https://github.com/e2b-dev/fragments" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Next.js template for building apps that are fully generated by AI. By E2B.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fragments by E2B&lt;/h1&gt; &#xA;&lt;p&gt;This is an open-source version of &lt;a href=&#34;https://www.anthropic.com/news/claude-3-5-sonnet&#34;&gt;Anthropic&#39;s Claude Artifacts&lt;/a&gt;, Vercel &lt;a href=&#34;https://v0.dev&#34;&gt;v0&lt;/a&gt; and &lt;a href=&#34;https://gptengineer.app&#34;&gt;GPT Engineer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Powered by the &lt;a href=&#34;https://github.com/e2b-dev/code-interpreter&#34;&gt;E2B SDK&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/preview.png&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fragments.e2b.dev&#34;&gt;‚Üí Try on fragments.e2b.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on Next.js 14 (App Router, Server Actions), shadcn/ui, TailwindCSS, Vercel AI SDK.&lt;/li&gt; &#xA; &lt;li&gt;Uses the &lt;a href=&#34;https://github.com/e2b-dev/code-interpreter&#34;&gt;E2B SDK&lt;/a&gt; by &lt;a href=&#34;https://e2b.dev&#34;&gt;E2B&lt;/a&gt; to securely execute code generated by AI.&lt;/li&gt; &#xA; &lt;li&gt;Streaming in the UI.&lt;/li&gt; &#xA; &lt;li&gt;Can install and use any package from npm, pip.&lt;/li&gt; &#xA; &lt;li&gt;Supported stacks (&lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-personas&#34;&gt;add your own&lt;/a&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;üî∏ Python interpreter&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Next.js&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Vue.js&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Streamlit&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Gradio&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supported LLM Providers (&lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-llm-models&#34;&gt;add your own&lt;/a&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;üî∏ OpenAI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Anthropic&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Google AI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Mistral&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Groq&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Fireworks&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Together AI&lt;/li&gt; &#xA;   &lt;li&gt;üî∏ Ollama&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure to give us a star!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;165&#34; alt=&#34;Screenshot 2024-04-20 at 22 13 32&#34; src=&#34;https://github.com/mishushakov/llm-scraper/assets/10400064/11e2a79f-a835-48c4-9f85-5c104ca7bb49&#34;&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recent version of &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; and npm package manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://e2b.dev&#34;&gt;E2B API Key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LLM Provider API Key&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1. Clone the repository&lt;/h3&gt; &#xA;&lt;p&gt;In your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/e2b-dev/fragments.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install the dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Enter the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd fragments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following to install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Set the environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file and set the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Get your API key here - https://e2b.dev/&#xA;E2B_API_KEY=&#34;your-e2b-api-key&#34;&#xA;&#xA;# OpenAI API Key&#xA;OPENAI_API_KEY=&#xA;&#xA;# Other providers&#xA;ANTHROPIC_API_KEY=&#xA;GROQ_API_KEY=&#xA;FIREWORKS_API_KEY=&#xA;TOGETHER_AI_API_KEY=&#xA;GOOGLE_AI_API_KEY=&#xA;MISTRAL_API_KEY=&#xA;&#xA;### Optional env vars&#xA;&#xA;# Domain of the site&#xA;NEXT_PUBLIC_SITE_URL=&#xA;&#xA;# Disabling API key and base URL input in the chat&#xA;NEXT_PUBLIC_NO_API_KEY_INPUT=&#xA;NEXT_PUBLIC_NO_BASE_URL_INPUT=&#xA;&#xA;# Rate limit&#xA;RATE_LIMIT_MAX_REQUESTS=&#xA;RATE_LIMIT_WINDOW=&#xA;&#xA;# Vercel/Upstash KV (short URLs, rate limiting)&#xA;KV_REST_API_URL=&#xA;KV_REST_API_TOKEN=&#xA;&#xA;# Supabase (auth)&#xA;SUPABASE_URL=&#xA;SUPABASE_ANON_KEY=&#xA;&#xA;# PostHog (analytics)&#xA;NEXT_PUBLIC_POSTHOG_KEY=&#xA;NEXT_PUBLIC_POSTHOG_HOST=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Start the development server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Build the web app&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;h3&gt;Adding custom personas&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure &lt;a href=&#34;https://e2b.dev/docs/cli/installation&#34;&gt;E2B CLI&lt;/a&gt; is installed and you&#39;re logged in.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new folder under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/sandbox-templates/&#34;&gt;sandbox-templates/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize a new template using E2B CLI:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;e2b template init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will create a new file called &lt;code&gt;e2b.Dockerfile&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adjust the &lt;code&gt;e2b.Dockerfile&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Here&#39;s an example streamlit template:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;# You can use most Debian-based base images&#xA;FROM python:3.19-slim&#xA;&#xA;RUN pip3 install --no-cache-dir streamlit pandas numpy matplotlib requests seaborn plotly&#xA;&#xA;# Copy the code to the container&#xA;WORKDIR /home/user&#xA;COPY . /home/user&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Specify a custom start command in &lt;code&gt;e2b.toml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;start_cmd = &#34;cd /home/user &amp;amp;&amp;amp; streamlit run app.py&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy the template with the E2B CLI&lt;/p&gt; &lt;pre&gt;&lt;code&gt;e2b template build --name &amp;lt;template-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After the build has finished, you should get the following message:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;‚úÖ Building sandbox template &amp;lt;template-id&amp;gt; &amp;lt;template-name&amp;gt; finished.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/templates.json&#34;&gt;lib/templates.json&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;p&gt;Add your new template to the list. Here&#39;s an example for Streamlit:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;streamlit-developer&#34;: {&#xA;  &#34;name&#34;: &#34;Streamlit developer&#34;,&#xA;  &#34;lib&#34;: [&#xA;    &#34;streamlit&#34;,&#xA;    &#34;pandas&#34;,&#xA;    &#34;numpy&#34;,&#xA;    &#34;matplotlib&#34;,&#xA;    &#34;request&#34;,&#xA;    &#34;seaborn&#34;,&#xA;    &#34;plotly&#34;&#xA;  ],&#xA;  &#34;file&#34;: &#34;app.py&#34;,&#xA;  &#34;instructions&#34;: &#34;A streamlit app that reloads automatically.&#34;,&#xA;  &#34;port&#34;: 8501 // can be null&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Provide a template id (as key), name, list of dependencies, entrypoint and a port (optional). You can also add additional instructions that will be given to the LLM.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, add a new logo under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/public/thirdparty/templates&#34;&gt;public/thirdparty/templates&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding custom LLM models&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/models.ts&#34;&gt;lib/models.json&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new entry to the models list:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;mistral-large&#34;,&#xA;  &#34;name&#34;: &#34;Mistral Large&#34;,&#xA;  &#34;provider&#34;: &#34;Ollama&#34;,&#xA;  &#34;providerId&#34;: &#34;ollama&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Where id is the model id, name is the model name (visible in the UI), provider is the provider name and providerId is the provider tag (see &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/#adding-custom-llm-providers&#34;&gt;adding providers&lt;/a&gt; below).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Adding custom LLM providers&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/lib/models.ts&#34;&gt;lib/models.ts&lt;/a&gt; in your code editor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new entry to the &lt;code&gt;providerConfigs&lt;/code&gt; list:&lt;/p&gt; &lt;p&gt;Example for fireworks:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;fireworks: () =&amp;gt; createOpenAI({ apiKey: apiKey || process.env.FIREWORKS_API_KEY, baseURL: baseURL || &#39;https://api.fireworks.ai/inference/v1&#39; })(modelNameString),&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, adjust the default structured output mode in the &lt;code&gt;getDefaultMode&lt;/code&gt; function:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;if (providerId === &#39;fireworks&#39;) {&#xA;  return &#39;json&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Optionally, add a new logo under &lt;a href=&#34;https://raw.githubusercontent.com/e2b-dev/fragments/main/public/thirdparty/logos&#34;&gt;public/thirdparty/logos&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open-source project, we welcome contributions from the community. If you are experiencing any bugs or want to add some improvements, please feel free to open an issue or pull request.&lt;/p&gt;</summary>
  </entry>
</feed>