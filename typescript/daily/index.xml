<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-26T01:55:54Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>liyupi/yuindex</title>
    <updated>2022-07-26T01:55:54Z</updated>
    <id>tag:github.com,2022-07-26:/liyupi/yuindex</id>
    <link href="https://github.com/liyupi/yuindex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✨ 新项目 - 极客范儿的浏览器主页 💻 Vue 3 + Node.js 全栈项目，自实现 web 终端 + 命令系统&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YuIndex - 极客范儿的浏览器主页&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Coolest browser index for geeks!&lt;/p&gt; &#xA; &lt;p&gt;前后端全栈项目 By &lt;a href=&#34;https://docs.qq.com/doc/DUFFRVWladXVjeUxW&#34;&gt;程序员鱼皮&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;在线体验：&lt;a href=&#34;https://yuindex.com&#34;&gt;https://yuindex.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic1.png&#34; alt=&#34;YuIndex 定制你的最强主页&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic2.png&#34; alt=&#34;YuIndex 用命令来控制网页&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;YuIndex 是什么？&lt;/h2&gt; &#xA;&lt;p&gt;一个很特别的浏览器主页，支持使用输入命令的方式来操作，目标是帮你在一个 web 终端中高效完成所有的事情！（all in one）&lt;/p&gt; &#xA;&lt;p&gt;此外，它也是一个功能强大的 web 终端组件。开发者可以在它的基础上定制自己的 web 终端，并且可以在终端中集成任何内容！&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你是一名程序员，相信你会爱上它~&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;你可以将音乐、游戏，甚至可以将自己的偶像封装到主页~&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1 分钟上手使用&lt;/h3&gt; &#xA;&lt;p&gt;请打开网站：&lt;a href=&#34;https://yuindex.com&#34;&gt;https://yuindex.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;然后在网站内依次输入以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;baidu 程序员鱼皮&#xA;github yuindex&#xA;goto yupi.icu&#xA;todo&#xA;music 坤坤&#xA;moyu&#xA;按键 Ctrl + O 触发折叠, 再按可展开&#xA;history&#xA;按键 Ctrl + L 清屏&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;help 命令英文名&lt;/code&gt; 可以查询某命令的具体用法，如：&lt;code&gt;help search&lt;/code&gt; 。&lt;/p&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;shortcut&lt;/code&gt; 可以查看所有的快捷键。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;完整命令用法请见：&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/commands.md&#34;&gt;命令手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;尽情探索吧~&lt;/p&gt; &#xA;&lt;h2&gt;项目优势&lt;/h2&gt; &#xA;&lt;h3&gt;用户&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;无需鼠标，即可快速完成操作（比如从不同平台搜索内容）&lt;/li&gt; &#xA; &lt;li&gt;极简炫酷，极客范儿，Linux 的味道儿~&lt;/li&gt; &#xA; &lt;li&gt;支持快捷键、帮助和输入提示，降低使用成本&lt;/li&gt; &#xA; &lt;li&gt;支持定制背景等，打造你的个性主页&lt;/li&gt; &#xA; &lt;li&gt;帮助你熟悉 Linux 命令，感受到编程的乐趣&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;开发者&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以独立使用功能丰富的 web 终端组件，或二次开发&lt;/li&gt; &#xA; &lt;li&gt;可以开发自己的命令并接入系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;学习者&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以学到 web 终端的开发方式&lt;/li&gt; &#xA; &lt;li&gt;可以学到系统设计知识，理解抽象和复用&lt;/li&gt; &#xA; &lt;li&gt;可以学到较为规范的代码目录和格式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能和特性&lt;/h2&gt; &#xA;&lt;h3&gt;web 终端&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;命令历史记录、快速执行历史命令&lt;/li&gt; &#xA; &lt;li&gt;快捷键&lt;/li&gt; &#xA; &lt;li&gt;清屏&lt;/li&gt; &#xA; &lt;li&gt;命令输入提示&lt;/li&gt; &#xA; &lt;li&gt;多种格式输出&lt;/li&gt; &#xA; &lt;li&gt;内置 5 种输出状态&lt;/li&gt; &#xA; &lt;li&gt;命令折叠&lt;/li&gt; &#xA; &lt;li&gt;帮助手册生成&lt;/li&gt; &#xA; &lt;li&gt;自定义配置（比如更换背景、提示开关等）&lt;/li&gt; &#xA; &lt;li&gt;支持子命令&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;已支持命令&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;完整命令用法请见：&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/commands.md&#34;&gt;命令手册&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多平台搜索 search&lt;/li&gt; &#xA; &lt;li&gt;网页快速跳转 goto&lt;/li&gt; &#xA; &lt;li&gt;空间管理（类似收藏夹，可以存储网页信息）&lt;/li&gt; &#xA; &lt;li&gt;查看日期 date&lt;/li&gt; &#xA; &lt;li&gt;翻译 fanyi&lt;/li&gt; &#xA; &lt;li&gt;待办事项 todo&lt;/li&gt; &#xA; &lt;li&gt;网络检测 ping&lt;/li&gt; &#xA; &lt;li&gt;定时器 timing&lt;/li&gt; &#xA; &lt;li&gt;更换背景 background&lt;/li&gt; &#xA; &lt;li&gt;听音乐 music&lt;/li&gt; &#xA; &lt;li&gt;摸鱼小游戏 moyu&lt;/li&gt; &#xA; &lt;li&gt;坤坤 ikun&lt;/li&gt; &#xA; &lt;li&gt;其他。。。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;h3&gt;前端&lt;/h3&gt; &#xA;&lt;p&gt;主要技术：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vue 3&lt;/li&gt; &#xA; &lt;li&gt;Vite 2&lt;/li&gt; &#xA; &lt;li&gt;Ant Design Vue 3 组件库&lt;/li&gt; &#xA; &lt;li&gt;Pinia 2 状态管理&lt;/li&gt; &#xA; &lt;li&gt;TypeScript 类型控制&lt;/li&gt; &#xA; &lt;li&gt;Eslint 代码规范控制&lt;/li&gt; &#xA; &lt;li&gt;Prettier 美化代码&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖库：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;axios 网络请求&lt;/li&gt; &#xA; &lt;li&gt;dayjs 时间处理&lt;/li&gt; &#xA; &lt;li&gt;lodash 工具库&lt;/li&gt; &#xA; &lt;li&gt;getopts 命令参数解析&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;库：getopts&lt;/p&gt; &#xA;&lt;h3&gt;后端&lt;/h3&gt; &#xA;&lt;p&gt;主要技术：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA; &lt;li&gt;Express、express-session&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;Sequelize（ORM 框架）&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖库：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Axios&lt;/li&gt; &#xA; &lt;li&gt;NeteaseCloudMusicApi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;依赖服务：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;百度翻译 API&lt;/li&gt; &#xA; &lt;li&gt;新浪壁纸 API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/server/README.md&#34;&gt;点击了解后端详情&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目录结构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;public 公共静态资源&lt;/li&gt; &#xA; &lt;li&gt;server 后端&lt;/li&gt; &#xA; &lt;li&gt;src &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;assets 静态资源&lt;/li&gt; &#xA;   &lt;li&gt;components 组件 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;yu-terminal 终端组件&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;configs 配置 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;routes 路由&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;core 核心 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;commands 命令集&lt;/li&gt; &#xA;     &lt;li&gt;commandRegister 命令注册&lt;/li&gt; &#xA;     &lt;li&gt;commandExecutor 命令执行器&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;pages 页面 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;IndexPage.vue 主页&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;plugins 第三方依赖&lt;/li&gt; &#xA;   &lt;li&gt;utils 工具&lt;/li&gt; &#xA;   &lt;li&gt;App.vue 主页面&lt;/li&gt; &#xA;   &lt;li&gt;env.d.ts 环境定义&lt;/li&gt; &#xA;   &lt;li&gt;main.ts Vue 主文件&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;.eslintrc.js 代码规范&lt;/li&gt; &#xA; &lt;li&gt;components.d.ts 自动生成的组件动态引入&lt;/li&gt; &#xA; &lt;li&gt;Dockerfile 镜像构建&lt;/li&gt; &#xA; &lt;li&gt;index.html 静态主页&lt;/li&gt; &#xA; &lt;li&gt;package.json 项目管理&lt;/li&gt; &#xA; &lt;li&gt;tsconfig.json TS 配置&lt;/li&gt; &#xA; &lt;li&gt;vite.config.ts 打包工具配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统设计&lt;/h2&gt; &#xA;&lt;h3&gt;设计理念&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;开放：采用类插件化设计，便于开发者自定义新命令，且能够通过配置自动生成帮助提示&lt;/li&gt; &#xA; &lt;li&gt;重前端轻后端：考虑到扩展性、安全性以及实现的方便，除了核心模块外，尽量不请求后端&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;核心&lt;/h3&gt; &#xA;&lt;p&gt;系统分为 3 个核心模块，各模块职责分明：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;微终端：UI 展示和终端交互逻辑&lt;/li&gt; &#xA; &lt;li&gt;命令系统：连接微终端和命令集（中介者），负责匹配、解析和执行命令，并通过终端提供的操作接口给予其反馈&lt;/li&gt; &#xA; &lt;li&gt;命令集：各种不同功能的命令定义和实现&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;前端架构图：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yuindex/master/doc/assets/docpic5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;微终端&lt;/h3&gt; &#xA;&lt;p&gt;从 0 开始实现的 web 终端控制台，包含以下模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;终端输入：常驻 Input 框，负责接收用户命令&lt;/li&gt; &#xA; &lt;li&gt;终端输出：负责展示用户的命令及执行结果等，支持以下三种类型的输出 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;命令类型：输入命令 + 结果列表&lt;/li&gt; &#xA;   &lt;li&gt;文本类型：单行文本展示，内置 5 种不同的展示状态（成功、错误、警告、信息、系统等）&lt;/li&gt; &#xA;   &lt;li&gt;自定义组件类型：可以自由定制要展示的内容&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;快捷键：更方便地操作终端，使用 &lt;code&gt;document.onkeydown&lt;/code&gt; 全局按键事件实现&lt;/li&gt; &#xA; &lt;li&gt;开放接口：提供一组操作终端的 API，供命令系统调用，比如清屏、立即输出等&lt;/li&gt; &#xA; &lt;li&gt;命令历史：记录用户输入的命令结果，使用 Vue 3 Composition API 封装部分逻辑&lt;/li&gt; &#xA; &lt;li&gt;命令提示：根据用户的输入给出提示，使用 Vue 3 Composition API 独立封装&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;命令系统&lt;/h3&gt; &#xA;&lt;p&gt;一套独立于终端的命令解析执行引擎，包含以下模块：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;注册器：用于注册和管理可被匹配的命令集&lt;/li&gt; &#xA; &lt;li&gt;匹配器：根据输入文本匹配到对应的命令&lt;/li&gt; &#xA; &lt;li&gt;解析器：从输入文本中解析出参数和选项&lt;/li&gt; &#xA; &lt;li&gt;执行器：执行命令，完成操作&lt;/li&gt; &#xA; &lt;li&gt;子命令机制：支持递归解析子命令&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;命令集&lt;/h3&gt; &#xA;&lt;p&gt;一组可用命令的集合（类似插件），通过 TS 明确命令的定义，支持配置别名、选项、子命令等，便于开发者扩展和定制。&lt;/p&gt; &#xA;&lt;p&gt;核心命令包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;空间系统：自实现的类文件系统，可以管理网页链接等内容&lt;/li&gt; &#xA; &lt;li&gt;用户系统：管理用户、同步个人定制化内容&lt;/li&gt; &#xA; &lt;li&gt;终端控制：定制或控制终端，比如更换背景、输出帮助等&lt;/li&gt; &#xA; &lt;li&gt;搜索：可以快速从不同搜索引擎检索内容&lt;/li&gt; &#xA; &lt;li&gt;其他模块。。。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;为什么要自己写终端？&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;本来打算使用现成的 xterm.js，但实际使用中发现它的文档比较少、问题难解决（比如中文字符），解决问题消耗的时间足够自己写一套新的 web 终端了。而且它更适用于和后端服务器强交互的场景，与本项目的定位不符。&lt;/li&gt; &#xA; &lt;li&gt;开源的 web 终端很少，给开源贡献一份力。&lt;/li&gt; &#xA; &lt;li&gt;帮助自己复习 Vue，突破个人系统开发设计能力的边界。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;更多讲解&lt;/h3&gt; &#xA;&lt;p&gt;如果你希望获取该项目的完整详细讲解，欢迎加入 &lt;a href=&#34;https://yupi.icu/&#34;&gt;鱼皮的编程知识星球&lt;/a&gt; ，这是鱼皮的编程学习圈子，我会在圈子内带大家从 0 到 1 分析解读这个项目，让你也能独立做一个，项目经历 + 1。&lt;/p&gt; &#xA;&lt;h2&gt;贡献指南&lt;/h2&gt; &#xA;&lt;p&gt;欢迎各位朋友贡献代码，还请先阅读以下指南。&lt;/p&gt; &#xA;&lt;h3&gt;开发新命令&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在 commands 下新建目录，目录名称为命令英文名称，所有该命令相关的代码都必须放在该目录中&lt;/li&gt; &#xA; &lt;li&gt;编写命令定义文件 xxxCommand.ts（xxx 为命令英文名称），可以参考其他命令，如 music、goto 等&lt;/li&gt; &#xA; &lt;li&gt;若命令包含子命令，需要将子命令相关文件放到 subCommands 目录中，可以参考 user 命令&lt;/li&gt; &#xA; &lt;li&gt;在 commandRegister 的 commandList 中补充新命令&lt;/li&gt; &#xA; &lt;li&gt;测试验证通过后，可以发起 PR 等鱼皮合并&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;摸鱼命令的实现依赖于 &lt;a href=&#34;https://haiyong.site/moyu&#34;&gt;https://haiyong.site/moyu&lt;/a&gt; ，感谢大佬的开源分享。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cloudscape-design/components</title>
    <updated>2022-07-26T01:55:54Z</updated>
    <id>tag:github.com,2022-07-26:/cloudscape-design/components</id>
    <link href="https://github.com/cloudscape-design/components" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React components for Cloudscape Design System&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;React components for Cloudscape Design System&lt;/h2&gt; &#xA;&lt;p&gt;This package contains the source code of the React components for the &lt;a href=&#34;https://cloudscape.design/&#34;&gt;Cloudscape Design System&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cloudscape is an open source design system for building intuitive, engaging, and inclusive user experiences at scale. It consists of an extensive set of guidelines to create web applications, along with the design resources and front-end components to streamline implementation.&lt;/p&gt; &#xA;&lt;p&gt;Cloudscape was built for and is used by Amazon Web Services (AWS) products and services. We created it in 2016 to improve the user experience across AWS web applications, and also to help teams implement those applications faster. Since then, we have continued enhancing the system based on customer feedback and research.&lt;/p&gt; &#xA;&lt;p&gt;Components APIs and guidelines can be found in the &lt;a href=&#34;https://cloudscape.design/components/&#34;&gt;Components section of the Cloudscape website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://github.com/cloudscape-design/components/issues/new/choose&#34;&gt;create bug reports or feature requests&lt;/a&gt;, or &lt;a href=&#34;https://github.com/cloudscape-design/components/discussions&#34;&gt;start a discussion&lt;/a&gt; to ask a question. To minimize duplicates, we recommend that you search for existing bug reports, feature requests, or discussions before initiating a new thread.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/cloudscape-design/components/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; contains information on how to contribute, as well as our support model and versioning strategy.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/cloudscape-design/components/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BetaSu/big-react</title>
    <updated>2022-07-26T01:55:54Z</updated>
    <id>tag:github.com,2022-07-26:/BetaSu/big-react</id>
    <link href="https://github.com/BetaSu/big-react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;跟着我，从0实现React18&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Big-React&lt;/h1&gt; &#xA;&lt;p&gt;从零实现 React v18 的核心功能，特点如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👬 与 React 源码最接近的极简实现&lt;/li&gt; &#xA; &lt;li&gt;💪 虽然实现极简，但功能完备，当前可跑通官方测试用例数量：25&lt;/li&gt; &#xA; &lt;li&gt;🚶 按&lt;code&gt;Git Tag&lt;/code&gt;划分迭代步骤，记录从 0 实现的每个功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO List&lt;/h2&gt; &#xA;&lt;h3&gt;工程类需求&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;内容&lt;/th&gt; &#xA;   &lt;th&gt;完成情况&lt;/th&gt; &#xA;   &lt;th&gt;在哪个版本实现的&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;架构&lt;/td&gt; &#xA;   &lt;td&gt;monorepo（pnpm 实现）&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;eslint&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;prettier&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;commitlint + husky&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;lint-staged&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;tsc&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;测试&lt;/td&gt; &#xA;   &lt;td&gt;jest 环境搭建&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v4&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;规范&lt;/td&gt; &#xA;   &lt;td&gt;tsc&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;构建&lt;/td&gt; &#xA;   &lt;td&gt;babel 配置&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v4&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;构建&lt;/td&gt; &#xA;   &lt;td&gt;Dev 环境包的构建&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;构建&lt;/td&gt; &#xA;   &lt;td&gt;Prod 环境包的构建&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;部署&lt;/td&gt; &#xA;   &lt;td&gt;Github Action 执行 lint 与 test&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;部署&lt;/td&gt; &#xA;   &lt;td&gt;Github Action 根据 tag 发布 npm 包&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;框架需求&lt;/h3&gt; &#xA;&lt;p&gt;当前跑通 React 官方测试用例 17 个&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;内容&lt;/th&gt; &#xA;   &lt;th&gt;完成情况&lt;/th&gt; &#xA;   &lt;th&gt;在哪个版本实现的&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;JSX 转换&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;React.isValidElement&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v4&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactDOM&lt;/td&gt; &#xA;   &lt;td&gt;浏览器环境 DOM 的插入&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v2&#34;&gt;v2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactDOM&lt;/td&gt; &#xA;   &lt;td&gt;浏览器环境 DOM 的移动&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v7&#34;&gt;v7&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactDOM&lt;/td&gt; &#xA;   &lt;td&gt;浏览器环境 DOM 的属性变化&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactDOM&lt;/td&gt; &#xA;   &lt;td&gt;浏览器环境 DOM 的删除&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v5&#34;&gt;v5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactDOM&lt;/td&gt; &#xA;   &lt;td&gt;ReactTestUtils&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v4&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReactNoop&lt;/td&gt; &#xA;   &lt;td&gt;ReactNoop Renderer&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;Fiber 架构&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;事件模型&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v6&#34;&gt;v6&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;onClick 事件支持&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v6&#34;&gt;v6&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;input 元素 onChange 事件支持&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;Lane 模型&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;基础 Update 机制&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;带优先级的 Update 机制&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;插入单节点的 mount 流程&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;插入多节点的 mount 流程&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v7&#34;&gt;v7&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;插入单节点的 reconcile 流程&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v5&#34;&gt;v5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;插入多节点的 reconcile 流程&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v7&#34;&gt;v7&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;删除节点的 reconcile 流程&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v5&#34;&gt;v5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;HostText 类型支持&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v2&#34;&gt;v2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;HostComponent 类型支持&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;HostRoot 类型支持&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;FunctionComponent 类型支持&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v3&#34;&gt;v3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;Hooks 架构 mount 时实现&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v3&#34;&gt;v3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;Hooks 架构 update 时实现&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v5&#34;&gt;v5&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;useState 实现&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v3&#34;&gt;v3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;useEffect 实现&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;useRef 实现&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;Legacy 调度流程&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;Concurrent 调度流程&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;异常处理流程&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reconciler&lt;/td&gt; &#xA;   &lt;td&gt;useErrorBoundary 实现&lt;/td&gt; &#xA;   &lt;td&gt;⬜️&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;调试&lt;/h2&gt; &#xA;&lt;p&gt;提供 3 种调试方式：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;实时调试&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;执行&lt;code&gt;pnpm demo&lt;/code&gt;会运行项目&lt;code&gt;demos&lt;/code&gt;目录下的示例项目（默认项目是针对&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v7&#34;&gt;v7&lt;/a&gt;的调试项目）&lt;/p&gt; &#xA;&lt;p&gt;这种方式的好处是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;控制台会打印各个主要步骤的执行信息，可以直观看到执行流程&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;热更新（包括示例代码和源码代码）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;pnpm link&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;通过&lt;code&gt;CRA&lt;/code&gt;或&lt;code&gt;Vite&lt;/code&gt;起一个&lt;code&gt;React&lt;/code&gt;测试项目后，在本项目执行&lt;code&gt;pnpm run build:dev&lt;/code&gt;打包&lt;code&gt;react&lt;/code&gt;与&lt;code&gt;react-dom&lt;/code&gt;，在测试项目中通过&lt;code&gt;pnpm link&lt;/code&gt;将项目依赖的&lt;code&gt;react&lt;/code&gt;与&lt;code&gt;react-dom&lt;/code&gt;替换为我们打包的&lt;code&gt;react&lt;/code&gt;与&lt;code&gt;react-dom&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;这种方式的好处是：最贴合项目中实际使用&lt;code&gt;React&lt;/code&gt;的情况&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;跑&lt;code&gt;React&lt;/code&gt;官方的测试用例&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;执行&lt;code&gt;pnpm test&lt;/code&gt;跑官方的测试用例，用例中引用的是执行&lt;code&gt;pnpm run build:dev&lt;/code&gt;打包的&lt;code&gt;react&lt;/code&gt;与&lt;code&gt;react-dom&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;这种方式的好处是：可以从官方用例的角度观察框架实现的细节、各种边界情况&lt;/p&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v7&#34;&gt;v7&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;实现了多节点 reconcile 流程（俗称的 Diff 算法），包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;修复了 update 时 onClick 回调不更新的 bug&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;插入多节点的 mount 流程&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;插入多节点的 reconcile 流程&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;浏览器环境 DOM 的移动&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Diff 算法的测试用例还依赖 useEffect、useRef 的实现，放在后面再实现&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v6&#34;&gt;v6&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;实现事件系统，包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;事件模型&lt;/li&gt; &#xA; &lt;li&gt;onClick 事件支持（以及 onClickCapture 事件）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v5&#34;&gt;v5&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;实现单节点 update，包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;浏览器环境 DOM 的删除（比如 h3 变为 p，那么就要经历删除 h3、插入 p）&lt;/li&gt; &#xA; &lt;li&gt;插入单节点的 reconcile 流程（包括 HostComponent、HostText）&lt;/li&gt; &#xA; &lt;li&gt;删除节点的 reconcile 流程（为后续 ref、useEffect 特性做准备，实现的比较完备）&lt;/li&gt; &#xA; &lt;li&gt;Hooks 架构 update 时实现&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v4&#34;&gt;v4&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;初始化测试相关架构，包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;实现 React.isValidElement&lt;/li&gt; &#xA; &lt;li&gt;jest 环境搭建&lt;/li&gt; &#xA; &lt;li&gt;babel 配置&lt;/li&gt; &#xA; &lt;li&gt;ReactTestUtils&lt;/li&gt; &#xA; &lt;li&gt;跑通关于 jsx 的 17 个官方用例&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v3&#34;&gt;v3&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;实现 useState 的 mount 时流程，包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FunctionComponent 类型支持&lt;/li&gt; &#xA; &lt;li&gt;Hooks 架构 mount 时实现&lt;/li&gt; &#xA; &lt;li&gt;useState 实现&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v2&#34;&gt;v2&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;插入单节点的 mount 流程（可以在浏览器环境渲染 DOM），包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;浏览器环境 DOM 的插入&lt;/li&gt; &#xA; &lt;li&gt;HostText 类型支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/BetaSu/big-react/tree/v1&#34;&gt;v1&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;插入单节点的 render 阶段 mount 流程，包括如下功能：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JSX 转换&lt;/li&gt; &#xA; &lt;li&gt;Fiber 架构&lt;/li&gt; &#xA; &lt;li&gt;插入单节点的 reconcile 流程&lt;/li&gt; &#xA; &lt;li&gt;HostComponent 类型支持&lt;/li&gt; &#xA; &lt;li&gt;HostRoot 类型支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;注：还未实现浏览器环境下的渲染&lt;/p&gt;</summary>
  </entry>
</feed>