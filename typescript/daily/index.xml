<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-09T01:37:19Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>afadil/wealthfolio</title>
    <updated>2024-09-09T01:37:19Z</updated>
    <id>tag:github.com,2024-09-09:/afadil/wealthfolio</id>
    <link href="https://github.com/afadil/wealthfolio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Beautiful Private and Secure Desktop Investment Tracking Application&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/afadil&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/afadil/wealthfolio/main/public/button-buy-me-a-coffee.png&#34; width=&#34;150&#34; alt=&#34;Buy me a coffee button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Wealthfolio&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wealthfolio App&lt;/strong&gt; is a Beautiful and Boring Investment Tracker, with Local Data Storage. No Subscriptions, No Cloud.&lt;/p&gt; &#xA;&lt;p&gt;Visit the app website at &lt;a href=&#34;https://wealthfolio.app/&#34;&gt;Wealthfolio App&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/afadil/wealthfolio/main/public/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Export Data&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support Options&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support Bonds&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Monte-Carlo Portfolio Projection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CSV Import Profile by Account&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Mobile App with Database File Sync&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have the following installed on your machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tauri.app/&#34;&gt;Tauri&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/afadil/wealthfolio.git&#xA;cd wealthfolio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies using pnpm&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running the Application&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Development Mode&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Build and run the desktop application using Tauri:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm tauri dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build for Production&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Build the application for production:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm tauri build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technologies Used&lt;/h2&gt; &#xA;&lt;h3&gt;Frontend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;: JavaScript library for building user interfaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React Router&lt;/strong&gt;: Declarative routing for React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tailwind CSS&lt;/strong&gt;: Utility-first CSS framework for styling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Radix UI/Shadcn&lt;/strong&gt;: Accessible UI components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Recharts&lt;/strong&gt;: Charting library built with React.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backend / APIs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;React Query&lt;/strong&gt;: Data-fetching library for React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zod&lt;/strong&gt;: TypeScript-first schema declaration and validation library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vite&lt;/strong&gt;: Next-generation frontend tooling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: Typed superset of JavaScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESLint&lt;/strong&gt;: Pluggable linting utility for JavaScript and JSX.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prettier&lt;/strong&gt;: Code formatter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tauri&lt;/strong&gt;: Framework for building tiny, secure, and fast desktop applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Folder Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;wealthfolio/&#xA;├── .github/&#xA;│   └── workflows/&#xA;│       └── release.yml&#xA;├── public/&#xA;├── src/&#xA;│   ├── assets/&#xA;│   ├── commands/&#xA;│   ├── components/&#xA;│   ├── lib/&#xA;│   ├── pages/&#xA;│   ├── App.tsx&#xA;│   ├── main.tsx&#xA;│   ├── routes.tsx&#xA;│   ├── styles.css&#xA;│   ├── useGlobalEventListener.ts&#xA;│   └── vite-env.d.ts&#xA;├── src-tauri/&#xA;│   ├── icons/&#xA;│   ├── migrations/&#xA;│   ├── src/&#xA;│   ├── target/&#xA;│   ├── .gitignore&#xA;│   ├── build.rs&#xA;│   ├── Cargo.lock&#xA;│   ├── Cargo.toml&#xA;│   ├── diesel.toml&#xA;│   ├── tauri.conf.json&#xA;├── .env&#xA;├── .eslintrc.cjs&#xA;├── .gitignore&#xA;├── .prettierrc.cjs&#xA;├── components.json&#xA;├── index.html&#xA;├── package.json&#xA;├── pnpm-lock.yaml&#xA;├── postcss.config.js&#xA;├── README.md&#xA;├── tailwind.config.js&#xA;├── tsconfig.json&#xA;└── vite.config.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository.&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch (&lt;code&gt;git checkout -b feature-branch&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Make your changes.&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some feature&#39;&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature-branch&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the LGPL-3.0 license. See the &lt;code&gt;LICENSE&lt;/code&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Star History&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://star-history.com/#afadil/wealthfolio&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=afadil/wealthfolio&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Enjoy managing your wealth with &lt;strong&gt;Wealthfolio&lt;/strong&gt;! 🚀&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>weaviate/Verba</title>
    <updated>2024-09-09T01:37:19Z</updated>
    <id>tag:github.com,2024-09-09:/weaviate/Verba</id>
    <link href="https://github.com/weaviate/Verba" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Retrieval Augmented Generation (RAG) chatbot powered by Weaviate&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Verba&lt;/h1&gt; &#xA;&lt;h2&gt;The Golden RAGtriever&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=powered%20by&amp;amp;message=Weaviate%20%E2%9D%A4&amp;amp;color=green&amp;amp;style=flat-square&#34; alt=&#34;Weaviate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/goldenverba/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/personalized-badge/goldenverba?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=orange&amp;amp;left_text=pip%20downloads&#34; alt=&#34;PyPi downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.docker.com/get-started/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker_support-%E2%9C%93-4c1?style=flat-square&amp;amp;logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Docker support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://verba.weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Check%20out%20the%20demo!-yellow?&amp;amp;style=flat-square&amp;amp;logo=react&amp;amp;logoColor=white&#34; alt=&#34;Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Verba: The Golden RAGtriever, an open-source application designed to offer an end-to-end, streamlined, and user-friendly interface for Retrieval-Augmented Generation (RAG) out of the box. In just a few easy steps, explore your datasets and extract insights with ease, either locally with Ollama and Huggingface or through LLM providers such as Anthrophic, Cohere, and OpenAI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba.gif&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#verba&#34;&gt;Verba&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#what-is-verba&#34;&gt;🎯 What Is Verba?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#feature-lists&#34;&gt;✨ Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#getting-started-with-verba&#34;&gt;✨ Getting Started with Verba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#api-keys&#34;&gt;🔑 API Keys&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#weaviate&#34;&gt;Weaviate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#unstructured&#34;&gt;Unstructured&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#openai&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#huggingface&#34;&gt;HuggingFace&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-deploy-with-pip&#34;&gt;Quickstart: Deploy with pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-build-from-source&#34;&gt;Quickstart: Build from Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-install-verba-with-docker&#34;&gt;Quickstart: Deploy with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#%EF%B8%8Fverba-walkthrough&#34;&gt;💾 Verba Walkthrough&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#open-source-contribution&#34;&gt;💖 Open Source Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#known-issues&#34;&gt;🚩 Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#faq&#34;&gt;❔FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What Is Verba?&lt;/h2&gt; &#xA;&lt;p&gt;Verba is a fully-customizable personal assistant utilizing &lt;a href=&#34;https://weaviate.io/rag#:~:text=RAG%20with%20Weaviate,accuracy%20of%20AI%2Dgenerated%20content.&#34;&gt;Retrieval Augmented Generation (RAG)&lt;/a&gt; for querying and interacting with your data, &lt;strong&gt;either locally or deployed via cloud&lt;/strong&gt;. Resolve questions around your documents, cross-reference multiple data points or gain insights from existing knowledge bases. Verba combines state-of-the-art RAG techniques with Weaviate&#39;s context-aware database. Choose between different RAG frameworks, data types, chunking &amp;amp; retrieving techniques, and LLM providers based on your individual use-case.&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Spirit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Weaviate&lt;/strong&gt; is proud to offer this open-source project for the community. While we strive to address issues as fast as we can, please understand that it may not be maintained with the same rigor as production software. We welcome and encourage community contributions to help keep it running smoothly. Your support in fixing open issues quickly is greatly appreciated.&lt;/p&gt; &#xA;&lt;h3&gt;Watch our newest Verba video here:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=swKKRdLBhas&amp;amp;t&#34;&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/main/img/thumbnail.png&#34; alt=&#34;VIDEO LINK&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature Lists&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;🤖 Model Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ollama (e.g. Llama3)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding and Generation Models powered by Ollama&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HuggingFace (e.g. MiniLMEmbedder)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding Models powered by HuggingFace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cohere (e.g. Command R+)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by Cohere&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anthrophic (e.g. Claude Sonnet)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by Anthrophic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAI (e.g. GPT4)&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;🤖 Embedding Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Weaviate&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models powered by Weaviate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ollama&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding Models powered by Ollama&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SentenceTransformers&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models powered by HuggingFace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cohere&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by Cohere&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VoyageAI&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by VoyageAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;📁 Data Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;UnstructuredIO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Import Data through Unstructured&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.firecrawl.dev/&#34;&gt;Firecrawl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Scrape and Crawl URL through Firecrawl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PDF Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Import PDF into Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub &amp;amp; GitLab&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Import Files from Github and GitLab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSV/XLSX Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Import Table Data into Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.DOCX&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Import .docx files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi-Modal&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Import Multi-Modal Data into Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;✨ RAG Features&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hybrid Search&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Semantic Search combined with Keyword Search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Autocomplete Suggestion&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Verba suggests autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filtering&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Apply Filters (e.g. documents, document types etc.) before performing RAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customizable Metadata&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Free control over Metadata&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Async Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Ingest data asynchronously to speed up the process&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Advanced Querying&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Task Delegation Based on LLM Evaluation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reranking&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Rerank results based on context for improved results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RAG Evaluation&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Interface for Evaluating RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;🗡️ Chunking Techniques&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Token&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk by Token powered by &lt;a href=&#34;https://spacy.io/&#34;&gt;spaCy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sentence&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk by Sentence powered by &lt;a href=&#34;https://spacy.io/&#34;&gt;spaCy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Semantic&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk and group by semantic sentence similarity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Recursive&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Recursively chunk data based on rules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk HTML files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk Markdown files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk Code files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JSON&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Chunk JSON files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;🆒 Cool Bonus&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker Support&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Verba is deployable via Docker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customizable Frontend&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Verba&#39;s frontend is fully-customizable via the frontend&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vector Viewer&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Visualize your data in 3D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;🤝 RAG Libraries&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LangChain&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Implement LangChain RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Haystack&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Implement Haystack RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LlamaIndex&lt;/td&gt; &#xA;   &lt;td&gt;planned ⏱️&lt;/td&gt; &#xA;   &lt;td&gt;Implement LlamaIndex RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Something is missing? Feel free to create a new issue or discussion with your idea!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_screen.png&#34; alt=&#34;Showcase of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Getting Started with Verba&lt;/h1&gt; &#xA;&lt;p&gt;You have three deployment options for Verba:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install via pip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build from Source&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba&#xA;&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Docker for Deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: If you&#39;re not using Docker, ensure that you have &lt;code&gt;Python &amp;gt;=3.10.0&lt;/code&gt; installed on your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba&#xA;&#xA;docker compose --env-file &amp;lt;your-env-file&amp;gt; up -d --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re unfamiliar with Python and Virtual Environments, please read the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/PYTHON_TUTORIAL.md&#34;&gt;python tutorial guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;API Keys&lt;/h1&gt; &#xA;&lt;p&gt;You can set all API keys in the Verba frontend, but to make your life easier, we can also prepare a &lt;code&gt;.env&lt;/code&gt; file in which Verba will automatically look for the keys. Create a &lt;code&gt;.env&lt;/code&gt; in the same directory you want to start Verba in. You can find an &lt;code&gt;.env.example&lt;/code&gt; file in the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/goldenverba/.env.example&#34;&gt;goldenverba&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to only set environment variables you intend to use, environment variables with missing or incorrect values may lead to errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Below is a comprehensive list of the API keys and variables you may require:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WEAVIATE_URL_VERBA&lt;/td&gt; &#xA;   &lt;td&gt;URL to your hosted Weaviate Cluster&lt;/td&gt; &#xA;   &lt;td&gt;Connect to your &lt;a href=&#34;https://console.weaviate.cloud/&#34;&gt;WCS&lt;/a&gt; Cluster&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WEAVIATE_API_KEY_VERBA&lt;/td&gt; &#xA;   &lt;td&gt;API Credentials to your hosted Weaviate Cluster&lt;/td&gt; &#xA;   &lt;td&gt;Connect to your &lt;a href=&#34;https://console.weaviate.cloud/&#34;&gt;WCS&lt;/a&gt; Cluster&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ANTHROPIC_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Anthropic API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://www.anthropic.com/&#34;&gt;Anthropic&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your OpenAI Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to OpenAI instance&lt;/td&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COHERE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://cohere.com/&#34;&gt;Cohere&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OLLAMA_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to your Ollama instance (e.g. &lt;a href=&#34;http://localhost:11434&#34;&gt;http://localhost:11434&lt;/a&gt; )&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UNSTRUCTURED_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;Unstructured&lt;/a&gt; Data Ingestion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UNSTRUCTURED_API_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to Unstructured Instance&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;Unstructured&lt;/a&gt; Data Ingestion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GITHUB_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;Your GitHub Token&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GITLAB_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;Your GitLab Token&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via GitLab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FIRECRAWL_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Firecrawl API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via Firecrawl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VOYAGE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your VoyageAI API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via VoyageAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EMBEDDING_SERVICE_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to your Embedding Service Instance&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via Weaviate Embedding Service&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EMBEDDING_SERVICE_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Embedding Service Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via Weaviate Embedding Service&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/api_screen.png&#34; alt=&#34;API Keys in Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Weaviate&lt;/h2&gt; &#xA;&lt;p&gt;Verba provides flexibility in connecting to Weaviate instances based on your needs. You have three options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Deployment&lt;/strong&gt;: Use Weaviate Embedded which runs locally on your device (except Windows, choose the Docker/Cloud Deployment)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker Deployment&lt;/strong&gt;: Choose this option when you&#39;re running Verba&#39;s Dockerfile.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Deployment&lt;/strong&gt;: Use an existing Weaviate instance hosted on WCD to run Verba&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;🌩️ Weaviate Cloud Deployment (WCD)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer a cloud-based solution, Weaviate Cloud (WCD) offers a scalable, managed environment. Learn how to set up a cloud cluster and get the API keys by following the &lt;a href=&#34;https://weaviate.io/developers/wcs/guides/create-instance&#34;&gt;Weaviate Cluster Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🐳 Docker Deployment&lt;/strong&gt; Another local alternative is deploying Weaviate using Docker. For more details, follow the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-install-verba-with-docker&#34;&gt;How to install Verba with Docker&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_deployment.png&#34; alt=&#34;Deployment in Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ollama&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports Ollama models. Download and Install Ollama on your device (&lt;a href=&#34;https://ollama.com/download&#34;&gt;https://ollama.com/download&lt;/a&gt;). Make sure to install your preferred LLM using &lt;code&gt;ollama run &amp;lt;model&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tested with &lt;code&gt;llama3&lt;/code&gt;, &lt;code&gt;llama3:70b&lt;/code&gt; and &lt;code&gt;mistral&lt;/code&gt;. The bigger models generally perform better, but need more computational power.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure Ollama Server runs in the background and that you don&#39;t ingest documents with different ollama models since their vector dimension can vary that will lead to errors&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can verify that by running the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ollama run llama3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Unstructured&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports importing documents through Unstructured IO (e.g plain text, .pdf, .csv, and more). To use them you need the &lt;code&gt;UNSTRUCTURED_API_KEY&lt;/code&gt; and &lt;code&gt;UNSTRUCTURED_API_URL&lt;/code&gt; environment variable. You can get it from &lt;a href=&#34;https://unstructured.io/&#34;&gt;Unstructured&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;UNSTRUCTURED_API_URL is set to &lt;code&gt;https://api.unstructured.io/general/v0/general&lt;/code&gt; by default&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;OpenAI&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports OpenAI Models such as Ada, GPT3, and GPT4. To use them, you need to specify the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable. You can get it from &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also add a &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt; to use proxies such as LiteLLM (&lt;a href=&#34;https://github.com/BerriAI/litellm&#34;&gt;https://github.com/BerriAI/litellm&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_BASE_URL=YOUR-OPENAI_BASE_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;HuggingFace&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use the HuggingFace Features, make sure to install the correct Verba package. It will install required packages to use the local embedding models. Please note that on startup, Verba will automatically download and install embedding models when used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install goldenverba[huggingface]&#xA;&#xA;or&#xA;&#xA;pip install `.[huggingface]`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re using Docker, modify the Dockerfile accordingly&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;How to deploy with pip&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Python &amp;gt;=3.10.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;(Very Important) &lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m virtualenv venv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;verba start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can specify the --port and --host via flags&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Visit localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;(Optional)&lt;strong&gt;Create .env file and add environment variables&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to build from Source&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m virtualenv venv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;verba start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can specify the --port and --host via flags&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Visit localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;(Optional) &lt;strong&gt;Create .env file and add environment variables&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to install Verba with Docker&lt;/h1&gt; &#xA;&lt;p&gt;Docker is a set of platform-as-a-service products that use OS-level virtualization to deliver software in packages called containers. To get started with deploying Verba using Docker, follow the steps below. If you need more detailed instructions on Docker usage, check out the &lt;a href=&#34;https://docker-curriculum.com/&#34;&gt;Docker Curriculum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt; Ensure you have Git installed on your system. Then, open a terminal or command prompt and run the following command to clone the Verba repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set necessary environment variables&lt;/strong&gt; Make sure to set your required environment variables in the &lt;code&gt;.env&lt;/code&gt; file. You can read more about how to set them up in the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#api-keys&#34;&gt;API Keys Section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adjust the docker-compose file&lt;/strong&gt; You can use the &lt;code&gt;docker-compose.yml&lt;/code&gt; to add required environment variables under the &lt;code&gt;verba&lt;/code&gt; service and can also adjust the Weaviate Docker settings to enable Authentification or change other settings of your database instance. You can read more about the Weaviate configuration in our &lt;a href=&#34;https://weaviate.io/developers/weaviate/installation/docker-compose&#34;&gt;docker-compose documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please make sure to only add environment variables that you really need.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deploy using Docker&lt;/strong&gt; With Docker installed and the Verba repository cloned, navigate to the directory containing the Docker Compose file in your terminal or command prompt. Run the following command to start the Verba application in detached mode, which allows it to run in the background:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;docker compose up -d&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;docker compose --env-file goldenverba/.env up -d --build&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will download the necessary Docker images, create containers, and start Verba. Remember, Docker must be installed on your system to use this method. For installation instructions and more details about Docker, visit the official Docker documentation.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can access your local Weaviate instance at &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can access the Verba frontend at &lt;code&gt;localhost:8000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want your Docker Instance to install a specific version of Verba you can edit the &lt;code&gt;Dockerfile&lt;/code&gt; and change the installation line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN pip install -e &#39;.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verba Walkthrough&lt;/h2&gt; &#xA;&lt;h3&gt;Import Your Data&lt;/h3&gt; &#xA;&lt;p&gt;First thing you need to do is to add your data. You can do this by clicking on &lt;code&gt;Import Data&lt;/code&gt; and selecting either &lt;code&gt;Add Files&lt;/code&gt;, &lt;code&gt;Add Directory&lt;/code&gt;, or &lt;code&gt;Add URL&lt;/code&gt; tab. Here you can add all your files that you want to ingest. You can then configure every file individually by selecting the file and clicking on &lt;code&gt;Overview&lt;/code&gt; or &lt;code&gt;Configure&lt;/code&gt; tab. &lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_data.png&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Query Your Data&lt;/h3&gt; &#xA;&lt;p&gt;With Data imported, you can use the &lt;code&gt;Chat&lt;/code&gt; page to ask any related questions. You will receive relevant chunks that are semantically relevant to your question and an answer generated by your choosen model. You can configure the RAG pipeline under the &lt;code&gt;Config&lt;/code&gt; tab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_rag.png&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Your contributions are always welcome! Feel free to contribute ideas, feedback, or create issues and bug reports if you find any! Before contributing, please read the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;. Visit our &lt;a href=&#34;https://forum.weaviate.io/&#34;&gt;Weaviate Community Forum&lt;/a&gt; if you need any help!&lt;/p&gt; &#xA;&lt;h3&gt;Project Architecture&lt;/h3&gt; &#xA;&lt;p&gt;You can learn more about Verba&#39;s architecture and implementation in its &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/TECHNICAL.md&#34;&gt;technical documentation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/FRONTEND.md&#34;&gt;frontend documentation&lt;/a&gt;. It&#39;s recommended to have a look at them before making any contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weaviate Embeeded&lt;/strong&gt; currently not working on Windows yet &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Will be fixed in future versions, until then please use the Docker or WCS Deployment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is Verba Multi-Lingual?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This depends on your choosen Embedding and Generation Model whether they support multi-lingual data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can I use my Ollama Server with the Verba Docker?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes, you can! Make sure the URL is set to: &lt;code&gt;OLLAMA_URL=http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you&#39;re running on Linux, you might need to get the IP Gateway of the Ollama server: &lt;code&gt;OLLAMA_URL=&#34;http://YOUR-IP-OF-OLLAMA:11434&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to clear Weaviate Embedded Storage?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You&#39;ll find the stored data here: &lt;code&gt;~/.local/share/weaviate&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can I specify the port?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can use the port and host flag &lt;code&gt;verba start --port 9000 --host 0.0.0.0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>