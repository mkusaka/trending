<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-12T01:59:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>withfig/autocomplete</title>
    <updated>2022-07-12T01:59:49Z</updated>
    <id>tag:github.com,2022-07-12:/withfig/autocomplete</id>
    <link href="https://github.com/withfig/autocomplete" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fig adds autocomplete to your terminal.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; alt=&#34;Fig logo&#34; src=&#34;https://raw.githubusercontent.com/withfig/fig/main/static/FigBanner.png#gh-light-mode-only&#34;&gt; &lt;img width=&#34;300&#34; alt=&#34;Fig logo&#34; src=&#34;https://raw.githubusercontent.com/withfig/fig/main/static/FigBannerInverted.png#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/withfig/autocomplete/master/#&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-%EF%A3%BF%20macOS-light&#34; alt=&#34;Badge: macOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fig.io?ref=github_autocomplete&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/signup-public%20beta-blueviolet&#34; alt=&#34;Badge: Sign up (public beta)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fig.io/docs/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-black&#34; alt=&#34;Badge: Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/withfig/autocomplete/master/#Contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/withfig/autocomplete&#34; alt=&#34;Badge: contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fig.io/community&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/837809111248535583?color=768ad4&amp;amp;label=discord&#34; alt=&#34;Badge: Join the Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=fig&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/fig.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Badge: Follow on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://fig.io?ref=github_autocomplete&#34;&gt;Fig&lt;/a&gt; adds autocomplete to your terminal.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As you type, Fig pops up subcommands, options, and contextually relevant arguments in your existing terminal on macOS.&lt;/p&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Homebrew&lt;/strong&gt;: &lt;code&gt;brew install --cask fig&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;DMG&lt;/strong&gt;: Download from our website: &lt;a href=&#34;https://fig.io/welcome&#34;&gt;fig.io&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows/Linux&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Join the &lt;a href=&#34;https://withfig.typeform.com/linux&#34;&gt;waitlist&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Once it&#39;s downloaded, launch the app to set up Fig!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://fig.io/gifs/demo-with-header.gif&#34; alt=&#34;Demo of Fig&#39;s visual autocomplete in a terminal&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üëã What are &#34;completion specs&#34;?&lt;/h2&gt; &#xA;&lt;p&gt;A completion spec is a &lt;em&gt;declarative&lt;/em&gt; schema that specifies the &lt;code&gt;subcommands&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; for a CLI tool. Fig uses these schemas to generate suggestions.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üòé Contribute your first spec in &amp;lt; 3 minutes&lt;/h2&gt; &#xA;&lt;p&gt;Use the steps below or follow our getting started guide: &lt;a href=&#34;https://fig.io/docs&#34;&gt;fig.io/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download Fig for macOS&lt;/li&gt; &#xA; &lt;li&gt;Node and NPM (or Yarn)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;a href=&#34;https://GitHub.com/withfig/autocomplete/fork/&#34;&gt;here&lt;/a&gt; to fork this repo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone your forked repo and create an example spec&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Replace `YOUR_GITHUB_USERNAME` with your own github username&#xA;git clone https://github.com/YOUR_GITHUB_USERNAME/autocomplete.git fig-autocomplete&#xA;cd fig-autocomplete&#xA;&#xA;# Add withfig/autocomplete as a remote&#xA;git remote add upstream https://github.com/withfig/autocomplete.git&#xA;&#xA;# Install packages&#xA;npm install&#xA;&#xA;# Create an example spec (call it &#34;abc&#34;)&#xA;npm run create-spec abc&#xA;&#xA;# Turn on &#34;dev mode&#34;&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now go to your terminal and type &lt;code&gt;abc[space]&lt;/code&gt;. Your example spec will appear. üòä&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Other things to know&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit your spec in TypeScript in the &lt;code&gt;src/&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;On save, specs are compiled to the &lt;code&gt;build/&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;In &lt;strong&gt;dev mode&lt;/strong&gt;, specs are read from the &lt;code&gt;build&lt;/code&gt; folder, and generators run every keystroke.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üè† Make completions for local scripts&lt;/h2&gt; &#xA;&lt;p&gt;You can use Fig&#39;s autocomplete for your own tools too. Here&#39;s how to create private completions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Make sure you&#39;re in your home directory&#xA;cd ~&#xA;&#xA;# Create your .fig/autocomplete folder&#xA;npx @withfig/autocomplete-tools init&#xA;cd ~/.fig/autocomplete&#xA;&#xA;# Create your completions!&#xA;npm run create-spec xyz&#xA;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create completions for project scripts, or even add custom suggestions to official specs. Read more at &lt;a href=&#34;https://fig.io/docs/guides/private-autocomplete&#34;&gt;fig.io/docs/guides/private-autocomplete&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;üì¶ Other available package.json commands&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Typecheck all specs in the src/ folder&#xA;npm test&#xA;&#xA;# Compile typescripts specs from src/ folder to build/ folder&#xA;npm run build&#xA;&#xA;# Lint and fix issues&#xA;npm run lint:fix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üî• Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We would love contributions for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;new completion specs&lt;/li&gt; &#xA; &lt;li&gt;errors with existing completion specs (e.g. missing subcommands, options, or arguments)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fig.io/docs/getting-started/generating-argument-suggestions&#34;&gt;generators&lt;/a&gt; for argument suggestions&lt;/li&gt; &#xA; &lt;li&gt;better descriptions, icons etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/withfig/themes&#34;&gt;themes&lt;/a&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you aren&#39;t able to contribute, please feel free to open an &lt;a href=&#34;https://github.com/withfig/autocomplete/issues/new/choose&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üòä Need Help?&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Join our community &lt;br&gt; &lt;a href=&#34;https://fig.io/community&#34;&gt; &lt;img alt=&#34;Discord logo&#34; src=&#34;http://fig.io/icons/discord-logo-square.png&#34; width=&#34;80px&#34; height=&#34;80px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üßë‚Äçüíª Teams / Enterprise&lt;/h2&gt; &#xA;&lt;p&gt;Want to use Fig to add autocomplete internal CLI tools? Or want to use Fig at work but have security / compliance concerns.&lt;/p&gt; &#xA;&lt;p&gt;We would love to help get you set up. Please email &lt;a href=&#34;mailto:enterprise@fig.io&#34;&gt;enterprise@fig.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üôã‚Äç‚ôÄÔ∏è FAQ&lt;/h2&gt; &#xA;&lt;h4&gt;What terminals does Fig work with?&lt;/h4&gt; &#xA;&lt;p&gt;Fig works with the native macOS Terminal app, &lt;a href=&#34;https://iterm2.com&#34;&gt;iTerm&lt;/a&gt;, &lt;a href=&#34;https://tabby.sh&#34;&gt;Tabby&lt;/a&gt;, &lt;a href=&#34;https://hyper.is&#34;&gt;Hyper&lt;/a&gt;, &lt;a href=&#34;https://sw.kovidgoyal.net/kitty&#34;&gt;Kitty&lt;/a&gt;, &lt;a href=&#34;https://wezfurlong.org/wezterm/&#34;&gt;WezTerm&lt;/a&gt;, and &lt;a href=&#34;https://alacritty.org/&#34;&gt;Alacritty&lt;/a&gt;. It also works in the integrated terminals of &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt;, &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains IDEs&lt;/a&gt;, &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;, and &lt;a href=&#34;https://nova.app/&#34;&gt;Nova&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Want to see another terminal included? Check our &lt;a href=&#34;https://github.com/withfig/fig&#34;&gt;issue tracker&lt;/a&gt; and add your support for it!&lt;/p&gt; &#xA;&lt;h4&gt;How does Fig work?&lt;/h4&gt; &#xA;&lt;p&gt;Fig uses the Accessibility API on Mac to position the window, and integrates with your shell to read what you&#39;ve typed.&lt;/p&gt; &#xA;&lt;h4&gt;Does Fig work on Windows or Linux?&lt;/h4&gt; &#xA;&lt;p&gt;Not yet, Fig is only available on macOS for now. &lt;a href=&#34;https://github.com/withfig/fig/issues/35&#34;&gt;Windows&lt;/a&gt; and &lt;a href=&#34;https://github.com/withfig/fig/issues/34&#34;&gt;Linux&lt;/a&gt; support is in progress!&lt;/p&gt; &#xA;&lt;h4&gt;How can I download Fig?&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;brew install --cask fig&lt;/code&gt; or, downloading the app at &lt;a href=&#34;https://fig.io/download&#34;&gt;fig.io/download&lt;/a&gt;. Then, launch the Fig app!&lt;/p&gt; &#xA;&lt;h4&gt;Can I use Fig to build autocomplete for my team&#39;s internal scripts and CLI tools?&lt;/h4&gt; &#xA;&lt;p&gt;Yes! Check out our guide on how to &lt;a href=&#34;https://fig.io/docs/getting-started&#34;&gt;get started building autocomplete specs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;How do I submit a PR?&lt;/h4&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://fig.io/docs/getting-started/contributing&#34;&gt;How to Contribute&lt;/a&gt; guide. Many of Fig&#39;s 200+ contributors made their first open source contribution to Fig!&lt;/p&gt; &#xA;&lt;h4&gt;Fig doesn&#39;t work for me!&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fig.io/community&#34;&gt;Join the Discord server&lt;/a&gt; and we&#39;ll debug it. Fixing Fig in your setup will fix it for other people too! üôÇ&lt;/p&gt; &#xA;&lt;h4&gt;Did we miss something?&lt;/h4&gt; &#xA;&lt;p&gt;Get in touch at &lt;a href=&#34;mailto:hello@fig.io&#34;&gt;hello@fig.io&lt;/a&gt; or chat with us on &lt;a href=&#34;https://fig.io/community&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;‚ú® Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/withfig/autocomplete/graphs/contributors&#34;&gt; &lt;img alt=&#34;Grid of profile icons of the 200+ contributors&#34; src=&#34;https://contrib.rocks/image?repo=withfig/autocomplete&#34;&gt; &lt;/a&gt; &#xA;&lt;!--  https://contrib.rocks --&gt;</summary>
  </entry>
  <entry>
    <title>firefly-sol/jupiter-arb</title>
    <updated>2022-07-12T01:59:49Z</updated>
    <id>tag:github.com,2022-07-12:/firefly-sol/jupiter-arb</id>
    <link href="https://github.com/firefly-sol/jupiter-arb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>ZaneH/piano-trainer</title>
    <updated>2022-07-12T01:59:49Z</updated>
    <id>tag:github.com,2022-07-12:/ZaneH/piano-trainer</id>
    <link href="https://github.com/ZaneH/piano-trainer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üéπ Memorize piano scales with ease! A music practice program w/ MIDI support. Consider it an interactive reference manual&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/piano-trainer?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-piano-trainer&#34; target=&#34;_blank&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=351951&amp;amp;theme=light&#34; alt=&#34;Piano Trainer - Memorize piano scales and chords with ease | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Piano Trainer&lt;/h1&gt; &#xA;&lt;p&gt;Learn to play the piano at your own pace through various modes of practice.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Piano Trainer screenshot&#34; src=&#34;https://i.imgur.com/k2y1Gr5.png&#34; height=&#34;250px&#34;&gt; &lt;img alt=&#34;Piano Trainer screenshot #2&#34; src=&#34;https://i.imgur.com/mBg1fjH.png&#34; height=&#34;250px&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MIDI compatible&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cross-platform support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive scale practice &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hard mode&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive chord practice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive Circle of Fifths practice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive fifths practice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive quiz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Coming Soon&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Computer keyboard support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Interactive inversion practice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Ignore octave for MIDI input&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add crash reporting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Musical corrections&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Change audio output (ASIO?)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Settings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Toggle questions in quiz mode&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Change keyboard sound&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;Download for free on all platforms on &lt;a href=&#34;https://zaneh.itch.io/piano-trainer&#34;&gt;itch.io/piano-trainer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or download the &lt;a href=&#34;https://github.com/ZaneH/scale-trainer/releases&#34;&gt;latest build here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run Locally&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need to setup Rust and Tauri CLI by following the &lt;a href=&#34;https://tauri.app/v1/guides/getting-started/prerequisites&#34;&gt;Getting Started guide here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/ZaneH/scale-trainer.git&#xA;$ cd scale-trainer&#xA;$ yarn &amp;amp;&amp;amp; yarn tauri dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build target binary&lt;/h2&gt; &#xA;&lt;p&gt;Outputs to &lt;code&gt;/src-tauri/target/release/bundle&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ yarn tauri build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributions&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are more than welcome.&lt;/p&gt; &#xA;&lt;p&gt;Create a PR pointing to the &lt;code&gt;dev&lt;/code&gt; branch. Stable builds will be merged into &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code formatting is handled with Git Hooks.&lt;/p&gt; &#xA;&lt;h1&gt;Credit&lt;/h1&gt; &#xA;&lt;p&gt;Special thank you to &lt;a href=&#34;https://github.com/ruohki/tauri-midi-example&#34;&gt;ruohki/tauri-midi-example&lt;/a&gt;, &lt;a href=&#34;https://github.com/kevinsqi/react-piano&#34;&gt;kevinsqi/react-piano&lt;/a&gt;, and the &lt;a href=&#34;https://tauri.app/&#34;&gt;Tauri Discord community&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>