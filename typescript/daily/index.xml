<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-26T01:48:43Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>layerhub-io/react-design-editor</title>
    <updated>2022-08-26T01:48:43Z</updated>
    <id>tag:github.com,2022-08-26:/layerhub-io/react-design-editor</id>
    <link href="https://github.com/layerhub-io/react-design-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Image, Presentation and Video editor. React design editor using fabric.js. Canva clone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Design Editor&lt;/h1&gt; &#xA;&lt;p&gt;If you are worrying about something like a designer tool, such as graphic editor, presentation editor, video editor, etc. Layerhub is a perfect choice for you.&lt;br&gt; Try demo here &lt;a href=&#34;https://react-editor-core.vercel.app/&#34;&gt;react-editor-core.vercel.app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://discord.gg/7jxnh8rHDV&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/1001450881448951838/widget.png?style=banner2&#34; alt=&#34;Discord Banner 2&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;React editor created editors for graphics, presentations and video.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/y0L2C4c/select-editor.png&#34; alt=&#34;Select Editor&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/TTgdsk2/video-editor.png&#34; alt=&#34;Video Editor&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;@layerhub-io/react: This editor is using SDK for react.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to start&lt;/h2&gt; &#xA;&lt;p&gt;Clone the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/layerhub-io/react-editor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies, currently using pnpm, but other package managers should work too.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the project on development mode&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;App should be running now.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute by opening issues with any questions, bug reports or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch&lt;/h2&gt; &#xA;&lt;p&gt;You can reach us at &lt;a href=&#34;mailto:cloud@scenify.io&#34;&gt;cloud@scenify.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/layerhub-io/react-design-editor/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>compound-finance/compound-protocol</title>
    <updated>2022-08-26T01:48:43Z</updated>
    <id>tag:github.com,2022-08-26:/compound-finance/compound-protocol</id>
    <link href="https://github.com/compound-finance/compound-protocol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Compound On-Chain Protocol&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/compound-finance/compound-protocol&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/compound-finance/compound-protocol.svg?style=svg&amp;amp;circle-token=5ed19932325c559a06f71f87d69012aedd2cf3fb&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/compound-finance/compound-protocol&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/compound-finance/compound-protocol/branch/master/graph/badge.svg?token=q4UvsvVzOX&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Compound Protocol&lt;/h1&gt; &#xA;&lt;p&gt;The Compound Protocol is an Ethereum smart contract for supplying or borrowing assets. Through the cToken contracts, accounts on the blockchain &lt;em&gt;supply&lt;/em&gt; capital (Ether or ERC-20 tokens) to receive cTokens or &lt;em&gt;borrow&lt;/em&gt; assets from the protocol (holding other assets as collateral). The Compound cToken contracts track these balances and algorithmically set interest rates for borrowers.&lt;/p&gt; &#xA;&lt;p&gt;Before getting started with this repo, please read:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://compound.finance/documents/Compound.Whitepaper.pdf&#34;&gt;Compound Whitepaper&lt;/a&gt;, describing how Compound works&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/compound-finance/compound-protocol/tree/master/docs/CompoundProtocol.pdf&#34;&gt;Compound Protocol Specification&lt;/a&gt;, explaining in plain English how the protocol operates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For questions about interacting with Compound, please visit &lt;a href=&#34;https://compound.finance/discord&#34;&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For security concerns, please visit &lt;a href=&#34;https://compound.finance/security&#34;&gt;https://compound.finance/security&lt;/a&gt; or email &lt;a href=&#34;mailto:security@compound.finance&#34;&gt;security@compound.finance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributing to the Compound protocol is a bit different than most open-source projects -- check out the &lt;a href=&#34;https://www.comp.xyz/t/contributing-to-compound-protocol/48&#34;&gt;community guide on Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contracts&lt;/h1&gt; &#xA;&lt;p&gt;We detail a few of the core contracts in the Compound protocol.&lt;/p&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  CToken, CErc20 and CEther&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  The Compound cTokens, which are self-contained borrowing and lending contracts. CToken contains the core logic and CErc20 and CEther add public interfaces for Erc20 tokens and ether, respectively. Each CToken is assigned an interest rate and risk model (see InterestRateModel and Comptroller sections), and allows accounts to *mint* (supply capital), *redeem* (withdraw capital), *borrow* and *repay a borrow*. Each CToken is an ERC-20 compliant token where balances represent ownership of the market.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Comptroller&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  The risk model contract, which validates permissible user actions and disallows actions if they do not fit certain risk parameters. For instance, the Comptroller enforces that each borrowing user must maintain a sufficient collateral balance across all cTokens.&#xA; &lt;/dd&gt; &#xA; &lt;ul&gt; &#xA;  &lt;em&gt;Updating the Comptroller&lt;/em&gt; &#xA;  &lt;li&gt;Follow the existing naming schema (ControllerGX)&lt;/li&gt; &#xA;  &lt;li&gt;Update the scenario runner in scenario/src/Builder/ComptrollerImplBuilder.ts&lt;/li&gt; &#xA;  &lt;li&gt;Create unit tests and fork simulations as necessary&lt;/li&gt; &#xA;  &lt;li&gt;Call &lt;code&gt;npx saddle deploy Comptroller -n mainnet&lt;/code&gt; to deploy to mainnet and generate new ABI&lt;/li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The ABI can also be generated by deploying to mainnet in a fork simulation&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;li&gt;Call &lt;code&gt;node script/comptroller-abi&lt;/code&gt; to merge the new Comptroller ABI with the Unitroller ABI&lt;/li&gt; &#xA;  &lt;li&gt;Ensure that commit contains new generated Comptroller ABI&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Comp&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  The Compound Governance Token (COMP). Holders of this token have the ability to govern the protocol via the governor contract.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Governor Alpha&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  The administrator of the Compound timelock contract. Holders of Comp token may create and vote on proposals which will be queued into the Compound timelock and then have effects on Compound cToken and Comptroller contracts. This contract may be replaced in the future with a beta version.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  InterestRateModel&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Contracts which define interest rate models. These models algorithmically determine interest rates based on the current utilization of a given market (that is, how much of the supplied assets are liquid versus borrowed).&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Careful Math&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Library for safe math operations.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  ErrorReporter&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Library for tracking error codes and failure conditions.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  Exponential&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Library for handling fixed-point decimal numbers.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  SafeToken&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Library for safely handling Erc20 interaction.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;dl&gt; &#xA; &lt;dt&gt;&#xA;  WhitePaperInterestRateModel&#xA; &lt;/dt&gt; &#xA; &lt;dd&gt;&#xA;  Initial interest rate model, as defined in the Whitepaper. This contract accepts a base rate and slope parameter in its constructor.&#xA; &lt;/dd&gt; &#xA;&lt;/dl&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To run compound, pull the repository from GitHub and install its dependencies. You will need &lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install/&#34;&gt;yarn&lt;/a&gt; or &lt;a href=&#34;https://docs.npmjs.com/cli/install&#34;&gt;npm&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/compound-finance/compound-protocol&#xA;cd compound-protocol&#xA;yarn install --lock-file # or `npm install`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;REPL&lt;/h2&gt; &#xA;&lt;p&gt;The Compound Protocol has a simple scenario evaluation tool to test and evaluate scenarios which could occur on the blockchain. This is primarily used for constructing high-level integration tests. The tool also has a REPL to interact with local the Compound Protocol (similar to &lt;code&gt;truffle console&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn repl -n development&#xA;yarn repl -n rinkeby&#xA;&#xA;&amp;gt; Read CToken cBAT Address&#xA;Command: Read CToken cBAT Address&#xA;AddressV&amp;lt;val=0xAD53863b864AE703D31b819d29c14cDA93D7c6a6&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can read more about the scenario runner in the &lt;a href=&#34;https://github.com/compound-finance/compound-protocol/tree/master/scenario/SCENARIO.md&#34;&gt;Scenario Docs&lt;/a&gt; on steps for using the repl.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Jest contract tests are defined under the &lt;a href=&#34;https://github.com/compound-finance/compound-protocol/tree/master/tests&#34;&gt;tests directory&lt;/a&gt;. To run the tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integration Specs&lt;/h2&gt; &#xA;&lt;p&gt;There are additional tests under the &lt;a href=&#34;https://github.com/compound-finance/compound-protocol/tree/master/spec/scenario&#34;&gt;spec/scenario&lt;/a&gt; folder. These are high-level integration tests based on the scenario runner depicted above. The aim of these tests is to be highly literate and have high coverage in the interaction of contracts.&lt;/p&gt; &#xA;&lt;h2&gt;Formal Verification Specs&lt;/h2&gt; &#xA;&lt;p&gt;The Compound Protocol has a number of formal verification specifications, powered by &lt;a href=&#34;https://www.certora.com/&#34;&gt;Certora&lt;/a&gt;. You can find details in the &lt;a href=&#34;https://github.com/compound-finance/compound-protocol/tree/master/spec/formal&#34;&gt;spec/formal&lt;/a&gt; folder. The Certora Verification Language (CVL) files included are specifications, which when with the Certora CLI tool, produce formal proofs (or counter-examples) that the code of a given contract exactly matches that specification.&lt;/p&gt; &#xA;&lt;h2&gt;Code Coverage&lt;/h2&gt; &#xA;&lt;p&gt;To run code coverage, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Linting&lt;/h2&gt; &#xA;&lt;p&gt;To lint the code, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;To run in docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Build the docker image&#xA;docker build -t compound-protocol .&#xA;&#xA;# Run a shell to the built image&#xA;docker run -it compound-protocol /bin/sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From within a docker shell, you can interact locally with the protocol via ganache and truffle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    /compound-protocol &amp;gt; yarn console -n goerli&#xA;    Using network goerli https://goerli-eth.compound.finance&#xA;    Saddle console on network goerli https://goerli-eth.compound.finance&#xA;    Deployed goerli contracts&#xA;      comptroller: 0x627EA49279FD0dE89186A58b8758aD02B6Be2867&#xA;      comp: 0xfa5E1B628EFB17C024ca76f65B45Faf6B3128CA5&#xA;      governorAlpha: 0x8C3969Dd514B559D78135e9C210F2F773Feadf21&#xA;      maximillion: 0x73d3F01b8aC5063f4601C7C45DA5Fdf1b5240C92&#xA;      priceOracle: 0x9A536Ed5C97686988F93C9f7C2A390bF3B59c0ec&#xA;      priceOracleProxy: 0xd0c84453b3945cd7e84BF7fc53BfFd6718913B71&#xA;      timelock: 0x25e46957363e16C4e2D5F2854b062475F9f8d287&#xA;      unitroller: 0x627EA49279FD0dE89186A58b8758aD02B6Be2867&#xA;&#xA;    &amp;gt; await comp.methods.totalSupply().call()&#xA;    &#39;10000000000000000000000000&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Console&lt;/h2&gt; &#xA;&lt;p&gt;After you deploy, as above, you can run a truffle console with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn console -n goerli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will start a saddle console conencted to Goerli testnet (see &lt;a href=&#34;https://github.com/compound-finance/saddle#cli&#34;&gt;Saddle README&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    Using network goerli https://goerli.infura.io/v3/e1a5d4d2c06a4e81945fca56d0d5d8ea&#xA;    Saddle console on network goerli https://goerli.infura.io/v3/e1a5d4d2c06a4e81945fca56d0d5d8ea&#xA;    Deployed goerli contracts&#xA;      comptroller: 0x627EA49279FD0dE89186A58b8758aD02B6Be2867&#xA;      comp: 0xfa5E1B628EFB17C024ca76f65B45Faf6B3128CA5&#xA;      governorAlpha: 0x8C3969Dd514B559D78135e9C210F2F773Feadf21&#xA;      maximillion: 0x73d3F01b8aC5063f4601C7C45DA5Fdf1b5240C92&#xA;      priceOracle: 0x9A536Ed5C97686988F93C9f7C2A390bF3B59c0ec&#xA;      priceOracleProxy: 0xd0c84453b3945cd7e84BF7fc53BfFd6718913B71&#xA;      timelock: 0x25e46957363e16C4e2D5F2854b062475F9f8d287&#xA;      unitroller: 0x627EA49279FD0dE89186A58b8758aD02B6Be2867&#xA;    &amp;gt; await comp.methods.totalSupply().call()&#xA;    &#39;10000000000000000000000000&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploying a CToken from Source&lt;/h2&gt; &#xA;&lt;p&gt;Note: you will need to set &lt;code&gt;~/.ethereum/&amp;lt;network&amp;gt;&lt;/code&gt; with your private key or assign your private key to the environment variable &lt;code&gt;ACCOUNT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: for all sections including Etherscan verification, you must set the &lt;code&gt;ETHERSCAN_API_KEY&lt;/code&gt; to a valid API Key from &lt;a href=&#34;https://etherscan.io/apis&#34;&gt;Etherscan&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To deploy a new cToken, you can run the &lt;code&gt;token:deploy&lt;/code&gt;. command, as follows. If you set &lt;code&gt;VERIFY=true&lt;/code&gt;, the script will verify the token on Etherscan as well. The JSON here is the token config JSON, which should be specific to the token you wish to list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx saddle -n rinkeby script token:deploy &#39;{&#xA;  &#34;underlying&#34;: &#34;0x577D296678535e4903D59A4C929B718e1D575e0A&#34;,&#xA;  &#34;comptroller&#34;: &#34;$Comptroller&#34;,&#xA;  &#34;interestRateModel&#34;: &#34;$Base200bps_Slope3000bps&#34;,&#xA;  &#34;initialExchangeRateMantissa&#34;: &#34;2.0e18&#34;,&#xA;  &#34;name&#34;: &#34;Compound Kyber Network Crystal&#34;,&#xA;  &#34;symbol&#34;: &#34;cKNC&#34;,&#xA;  &#34;decimals&#34;: &#34;8&#34;,&#xA;  &#34;admin&#34;: &#34;$Timelock&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you only want to verify an existing token an Etherscan, make sure &lt;code&gt;ETHERSCAN_API_KEY&lt;/code&gt; is set and run &lt;code&gt;token:verify&lt;/code&gt; with the first argument as the token address and the second as the token config JSON:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx saddle -n rinkeby script token:verify 0x19B674715cD20626415C738400FDd0d32D6809B6 &#39;{&#xA;  &#34;underlying&#34;: &#34;0x577D296678535e4903D59A4C929B718e1D575e0A&#34;,&#xA;  &#34;comptroller&#34;: &#34;$Comptroller&#34;,&#xA;  &#34;interestRateModel&#34;: &#34;$Base200bps_Slope3000bps&#34;,&#xA;  &#34;initialExchangeRateMantissa&#34;: &#34;2.0e18&#34;,&#xA;  &#34;name&#34;: &#34;Compound Kyber Network Crystal&#34;,&#xA;  &#34;symbol&#34;: &#34;cKNC&#34;,&#xA;  &#34;decimals&#34;: &#34;8&#34;,&#xA;  &#34;admin&#34;: &#34;$Timelock&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, to see if a given deployment matches this version of the Compound Protocol, you can run &lt;code&gt;token:match&lt;/code&gt; with a token address and token config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx saddle -n rinkeby script token:match 0x19B674715cD20626415C738400FDd0d32D6809B6 &#39;{&#xA;  &#34;underlying&#34;: &#34;0x577D296678535e4903D59A4C929B718e1D575e0A&#34;,&#xA;  &#34;comptroller&#34;: &#34;$Comptroller&#34;,&#xA;  &#34;interestRateModel&#34;: &#34;$Base200bps_Slope3000bps&#34;,&#xA;  &#34;initialExchangeRateMantissa&#34;: &#34;2.0e18&#34;,&#xA;  &#34;name&#34;: &#34;Compound Kyber Network Crystal&#34;,&#xA;  &#34;symbol&#34;: &#34;cKNC&#34;,&#xA;  &#34;decimals&#34;: &#34;8&#34;,&#xA;  &#34;admin&#34;: &#34;$Timelock&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploying a CToken from Docker Build&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;To deploy a specific version of the Compound Protocol, you can use the &lt;code&gt;token:deploy&lt;/code&gt; script through Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --env ETHERSCAN_API_KEY --env VERIFY=true --env ACCOUNT=0x$(cat ~/.ethereum/rinkeby) compoundfinance/compound-protocol:latest npx saddle -n rinkeby script token:deploy &#39;{&#xA;  &#34;underlying&#34;: &#34;0x577D296678535e4903D59A4C929B718e1D575e0A&#34;,&#xA;  &#34;comptroller&#34;: &#34;$Comptroller&#34;,&#xA;  &#34;interestRateModel&#34;: &#34;$Base200bps_Slope3000bps&#34;,&#xA;  &#34;initialExchangeRateMantissa&#34;: &#34;2.0e18&#34;,&#xA;  &#34;name&#34;: &#34;Compound Kyber Network Crystal&#34;,&#xA;  &#34;symbol&#34;: &#34;cKNC&#34;,&#xA;  &#34;decimals&#34;: &#34;8&#34;,&#xA;  &#34;admin&#34;: &#34;$Timelock&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To match a deployed contract against a given version of the Compound Protocol, you can run &lt;code&gt;token:match&lt;/code&gt; through Docker, passing a token address and config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --env ACCOUNT=0x$(cat ~/.ethereum/rinkeby) compoundfinance/compound-protocol:latest npx saddle -n rinkeby script token:match 0xF1BAd36CB247C82Cb4e9C2874374492Afb50d565 &#39;{&#xA;  &#34;underlying&#34;: &#34;0x577D296678535e4903D59A4C929B718e1D575e0A&#34;,&#xA;  &#34;comptroller&#34;: &#34;$Comptroller&#34;,&#xA;  &#34;interestRateModel&#34;: &#34;$Base200bps_Slope3000bps&#34;,&#xA;  &#34;initialExchangeRateMantissa&#34;: &#34;2.0e18&#34;,&#xA;  &#34;name&#34;: &#34;Compound Kyber Network Crystal&#34;,&#xA;  &#34;symbol&#34;: &#34;cKNC&#34;,&#xA;  &#34;decimals&#34;: &#34;8&#34;,&#xA;  &#34;admin&#34;: &#34;$Timelock&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;For any concerns with the protocol, open an issue or visit us on &lt;a href=&#34;https://compound.finance/discord&#34;&gt;Discord&lt;/a&gt; to discuss.&lt;/p&gt; &#xA;&lt;p&gt;For security concerns, please email &lt;a href=&#34;mailto:security@compound.finance&#34;&gt;security@compound.finance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;© Copyright 2020, Compound Labs&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>typescript-eslint/typescript-eslint</title>
    <updated>2022-08-26T01:48:43Z</updated>
    <id>tag:github.com,2022-08-26:/typescript-eslint/typescript-eslint</id>
    <link href="https://github.com/typescript-eslint/typescript-eslint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✨ Monorepo for all the tooling which enables ESLint to support TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;TypeScript ESLint&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Monorepo for all the tooling which enables ESLint to support TypeScript&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/typescript-eslint/typescript-eslint/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt; &lt;a href=&#34;https://opencollective.com/typescript-eslint&#34;&gt;&lt;img src=&#34;https://opencollective.com/typescript-eslint/all/badge.svg?label=financial+contributors&amp;amp;style=flat-square&#34; alt=&#34;Financial Contributors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@typescript-eslint/typescript-estree&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@typescript-eslint/typescript-estree.svg?style=flat-square&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/typescript-eslint/typescript-eslint&#34;&gt;&lt;img alt=&#34;Codecov&#34; src=&#34;https://img.shields.io/codecov/c/github/typescript-eslint/typescript-eslint.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 👇 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- markdownlint-disable MD033 --&gt; See &lt;strong&gt;&lt;a href=&#34;https://typescript-eslint.io&#34;&gt;typescript-eslint.io&lt;/a&gt;&lt;/strong&gt; for documentation. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 👆 &lt;/p&gt; &#xA;&lt;h2&gt;Packages included in this project&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://typescript-eslint.io/docs/development/architecture/packages&#34;&gt;https://typescript-eslint.io/docs/development/architecture/packages&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/eslint-plugin&#34;&gt;&lt;code&gt;@typescript-eslint/eslint-plugin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/parser&#34;&gt;&lt;code&gt;@typescript-eslint/parser&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/eslint-plugin-tslint&#34;&gt;&lt;code&gt;@typescript-eslint/eslint-plugin-tslint&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/utils&#34;&gt;&lt;code&gt;@typescript-eslint/utils&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/typescript-estree&#34;&gt;&lt;code&gt;@typescript-eslint/typescript-estree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/scope-manager&#34;&gt;&lt;code&gt;@typescript-eslint/scope-manager&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;All of the packages are published with the same version number to make it easier to coordinate both releases and installations.&lt;/p&gt; &#xA;&lt;p&gt;We publish a canary release on every successful merge to &lt;code&gt;main&lt;/code&gt;, so &lt;strong&gt;you never need to wait for a new stable version to make use of any updates&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, we promote to the &lt;code&gt;latest&lt;/code&gt; tag on NPM once per week, &lt;strong&gt;on Mondays at 1 pm Eastern&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The latest version under the &lt;code&gt;latest&lt;/code&gt; tag is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@typescript-eslint/parser&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@typescript-eslint/parser/latest.svg?style=flat-square&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The latest version under the &lt;code&gt;canary&lt;/code&gt; tag &lt;strong&gt;(latest commit to &lt;code&gt;main&lt;/code&gt;)&lt;/strong&gt; is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@typescript-eslint/parser&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@typescript-eslint/parser/canary.svg?style=flat-square&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Note: The only exception to the automated publishes described above is when we are in the final phases of creating the next major version of the libraries - e.g. going from &lt;code&gt;1.x.x&lt;/code&gt; to &lt;code&gt;2.x.x&lt;/code&gt;. During these periods, we manually publish &lt;code&gt;canary&lt;/code&gt; releases until we are happy with the release and promote it to &lt;code&gt;latest&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h3&gt;Supported TypeScript Version&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;The version range of TypeScript currently supported by this parser is &lt;code&gt;&amp;gt;=3.3.1 &amp;lt;4.8.0&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;These versions are what we test against.&lt;/p&gt; &#xA;&lt;p&gt;We will always endeavor to support the latest stable version of TypeScript. Sometimes, but not always, changes in TypeScript will not require breaking changes in this project, and so we are able to support more than one version of TypeScript. In some cases, we may even be able to support additional pre-releases (i.e. betas and release candidates) of TypeScript, but only if doing so does not require us to compromise on support for the latest stable version.&lt;/p&gt; &#xA;&lt;p&gt;Note that our packages have an open &lt;code&gt;peerDependency&lt;/code&gt; requirement in order to allow for experimentation on newer/beta versions of TypeScript.&lt;/p&gt; &#xA;&lt;p&gt;If you use a non-supported version of TypeScript, the parser will log a warning to the console. If you want to disable this warning, you can configure this in your &lt;code&gt;parserOptions&lt;/code&gt;. See: &lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/parser/&#34;&gt;&lt;code&gt;@typescript-eslint/parser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/typescript-estree/&#34;&gt;&lt;code&gt;@typescript-eslint/typescript-estree&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please ensure that you are using a supported version before submitting any issues/bug reports.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported ESLint Version&lt;/h3&gt; &#xA;&lt;p&gt;See the value of &lt;code&gt;eslint&lt;/code&gt; declared in &lt;code&gt;@typescript-eslint/eslint-plugin&lt;/code&gt;&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/packages/eslint-plugin/package.json&#34;&gt;package.json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Node Version&lt;/h3&gt; &#xA;&lt;p&gt;This project makes an effort to support Active LTS and Maintenance LTS release statuses of Node according to &lt;a href=&#34;https://nodejs.org/en/about/releases&#34;&gt;Node&#39;s release document&lt;/a&gt;. Support for specific Current status releases are considered periodically.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TypeScript ESLint inherits from the original TypeScript ESLint Parser license, as the majority of the work began there. It is licensed under a permissive BSD 2-clause license.&lt;/p&gt; &#xA;&lt;h2&gt;How can I help?&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m so glad you asked!&lt;/p&gt; &#xA;&lt;p&gt;Although typescript-eslint&#39;s packages are already downloaded millions of times per month and power high profile projects across our industry, this is a 100% community-driven project. From the second you install one of the packages from this monorepo, you are a part of that community.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;See an issue?&lt;/strong&gt; Report it in as much detail as possible, ideally with a clear and minimal reproduction.&lt;/p&gt; &#xA;&lt;p&gt;If you have the time and the inclination, you can even take it a step further and submit a PR to improve the project.&lt;/p&gt; &#xA;&lt;p&gt;There are also financial ways to contribute, please see &lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/#Financial-Contributors&#34;&gt;Financial Contributors&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;All positive contributions are welcome here!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/CONTRIBUTING.md&#34;&gt;See the contributing guide here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please be respectful and mindful of how many hours of unpaid work go into typescript-eslint.&lt;/p&gt; &#xA;&lt;h2&gt;Code Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to every one of the awesome people who contribute code and documentation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint/graphs/contributors&#34;&gt;&lt;img alt=&#34;Gallery of all contributors&#39; profile photos&#34; src=&#34;https://opencollective.com/typescript-eslint/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🙏 An extra special thanks goes out to the wonderful people listed in &lt;a href=&#34;https://raw.githubusercontent.com/typescript-eslint/typescript-eslint/main/CONTRIBUTORS.md&#34;&gt;&lt;code&gt;CONTRIBUTORS.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Financial Contributors&lt;/h2&gt; &#xA;&lt;p&gt;In addition to submitting code and documentation updates, you can help us sustain our community by becoming a financial contributor [&lt;a href=&#34;https://opencollective.com/typescript-eslint/contribute&#34;&gt;Click here to contribute - every little bit helps!&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.netlify.com&#34;&gt; &lt;img src=&#34;https://www.netlify.com/img/global/badges/netlify-light.svg?sanitize=true&#34; alt=&#34;Deploys by Netlify&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>