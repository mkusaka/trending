<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-17T01:48:04Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KevinVandy/material-react-table</title>
    <updated>2023-06-17T01:48:04Z</updated>
    <id>tag:github.com,2023-06-17:/KevinVandy/material-react-table</id>
    <link href="https://github.com/KevinVandy/material-react-table" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully featured Material UI V5 implementation of TanStack React Table V8, written from the ground up in TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Material React Table&lt;/h1&gt; &#xA;&lt;p&gt;View &lt;a href=&#34;https://www.material-react-table.com/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://npmjs.com/package/material-react-table&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/npm/v/material-react-table?color=blue&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://npmtrends.com/material-react-table&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/npm/dt/material-react-table?label=installs&amp;amp;icon=npm&amp;amp;color=blue&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://bundlephobia.com/result?p=material-react-table&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/bundlephobia/minzip/material-react-table@latest?color=blue&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://star-history.com/#kevinvandy/material-react-table&amp;amp;Date&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/github/stars/KevinVandy/material-react-table?color=blue&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/KevinVandy/material-react-table/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/github/license/KevinVandy/material-react-table?color=blue&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;http://makeapullrequest.com&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;em&gt;Quickly Create React Data Tables with Material Design&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Built with &lt;a href=&#34;https://mui.com&#34;&gt;Material UI &lt;sup&gt;V5&lt;/sup&gt;&lt;/a&gt; and &lt;a href=&#34;https://tanstack.com/table/v8&#34;&gt;TanStack Table &lt;sup&gt;V8&lt;/sup&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;img src=&#34;https://material-react-table.com/banner.png&#34; alt=&#34;MRT&#34; height=&#34;50&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Want to use Mantine instead of Material UI? Check out &lt;a href=&#34;https://www.mantine-react-table.com&#34;&gt;Mantine React Table&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://discord.gg/5wqyRx6fnm&#34;&gt;Discord&lt;/a&gt; server to join in on the development discussion or ask questions&lt;/li&gt; &#xA; &lt;li&gt;View the &lt;a href=&#34;https://www.material-react-table.com/&#34;&gt;Docs Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See all &lt;a href=&#34;https://www.material-react-table.com/docs/api&#34;&gt;Props, Options, and APIs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/basic/&#34;&gt;Basic Table&lt;/a&gt; (See Default Features)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/minimal/&#34;&gt;Minimal Table&lt;/a&gt; (Turn off Features like Pagination, Sorting, Filtering, and Toolbars)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/advanced/&#34;&gt;Advanced Table&lt;/a&gt; (See some of the Advanced Features)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/aggregation-and-grouping/&#34;&gt;Aggregation/Grouping&lt;/a&gt; (Aggregation features such as Sum, Average, Count, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/data-export/&#34;&gt;Data Export Table&lt;/a&gt; (Export to CSV, Excel, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/editing-crud/&#34;&gt;Editing CRUD Table&lt;/a&gt; (Create, Edit, and Delete Rows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/remote/&#34;&gt;Remote Data&lt;/a&gt; (Server-side Pagination, Sorting, and Filtering)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/react-query/&#34;&gt;React Query&lt;/a&gt; (Server-side Pagination, Sorting, and Filtering, simplified)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/virtualized/&#34;&gt;Virtualized Rows&lt;/a&gt; (10,000 rows at once!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/examples/infinite-scrolling/&#34;&gt;Infinite Scrolling&lt;/a&gt; (Fetch data as you scroll)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.material-react-table.com/docs/guides/localization#built-in-locale-examples&#34;&gt;Localization (i18n)&lt;/a&gt; (Over a dozen languages built-in)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;View additional &lt;a href=&#34;https://www.material-react-table.dev/&#34;&gt;storybook examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;All features can easily be enabled/disabled&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Fully Fleshed out &lt;a href=&#34;https://www.material-react-table.com/docs/guides#guides&#34;&gt;Docs&lt;/a&gt; are available for all features&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &amp;lt; 45kb gzipped - &lt;a href=&#34;https://bundlephobia.com/package/material-react-table&#34;&gt;Bundlephobia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Advanced TypeScript Generics Support (TypeScript Optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Aggregation and Grouping (Sum, Average, Count, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Click To Copy Cell Values&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Column Action Dropdown Menu&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Column Hiding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Column Ordering via Drag&#39;n&#39;Drop&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Column Pinning (Freeze Columns)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Column Resizing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customize Icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customize Styling of internal Mui Components&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Data Editing (4 different editing modes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Density Toggle&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Detail Panels (Expansion)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Filtering (supports client-side and server-side)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Filter Match Highlighting&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Full Screen Mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Global Filtering (Search across all columns, rank by best match)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Header Groups &amp;amp; Footers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Localization (i18n) support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Manage your own state or let the table manage it internally for you&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pagination (supports client-side and server-side)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Row Actions (Your Custom Action Buttons)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Row Numbers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Row Ordering via Drag&#39;n&#39;Drop&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Row Selection (Checkboxes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SSR compatible&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Sorting (supports client-side and server-side)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Theming (Respects your Material UI Theme)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Toolbars (Add your own action buttons)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Tree Data / Expanding Sub-rows&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Virtualization (@tanstack/react-virtual)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;View the full &lt;a href=&#34;https://www.material-react-table.com/docs/getting-started/install&#34;&gt;Installation Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure that you have React 17 or later installed (Material UI V5 requires React 17 or 18)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Peer Dependencies (Material UI V5)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @mui/material @mui/icons-material @emotion/react @emotion/styled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install material-react-table&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install material-react-table&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;code&gt;@tanstack/react-table&lt;/code&gt;, &lt;code&gt;@tanstack/react-virtual&lt;/code&gt;, and &lt;code&gt;@tanstack/match-sorter-utils&lt;/code&gt;&lt;/em&gt; are internal dependencies, so you do NOT need to install them yourself.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Read the full usage docs &lt;a href=&#34;https://www.material-react-table.com/docs/getting-started/usage/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React, { useMemo, useRef, useState, useEffect } from &#39;react&#39;;&#xA;import { MaterialReactTable } from &#39;material-react-table&#39;;&#xA;&#xA;const data = [&#xA;  {&#xA;    name: &#39;John&#39;,&#xA;    age: 30,&#xA;  },&#xA;  {&#xA;    name: &#39;Sara&#39;,&#xA;    age: 25,&#xA;  },&#xA;]&#xA;&#xA;export default function App() {&#xA;  const columns = useMemo(&#xA;    () =&amp;gt; [&#xA;      {&#xA;        accessorKey: &#39;name&#39;, //simple recommended way to define a column&#xA;        header: &#39;Name&#39;,&#xA;        muiTableHeadCellProps: { sx: { color: &#39;green&#39; } }, //optional custom props&#xA;        Cell: ({ cell }) =&amp;gt; &amp;lt;span&amp;gt;{cell.getValue()}&amp;lt;/span&amp;gt;, //optional custom cell render&#xA;      },&#xA;      {&#xA;        accessorFn: (row) =&amp;gt; row.age, //alternate way&#xA;        id: &#39;age&#39;, //id required if you use accessorFn instead of accessorKey&#xA;        header: &#39;Age&#39;,&#xA;        Header: () =&amp;gt; &amp;lt;i&amp;gt;Age&amp;lt;/i&amp;gt;, //optional custom header render&#xA;      },&#xA;    ],&#xA;    [],&#xA;  );&#xA;&#xA;  //optionally, you can manage any/all of the table state yourself&#xA;  const [rowSelection, setRowSelection] = useState({});&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    //do something when the row selection changes&#xA;  }, [rowSelection]);&#xA;&#xA;  //Or, optionally, you can get a reference to the underlying table instance&#xA;  const tableInstanceRef = useRef(null);&#xA;&#xA;  const someEventHandler = () =&amp;gt; {&#xA;    //read the table state during an event from the table instance ref&#xA;    console.log(tableInstanceRef.current.getState().sorting);&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;MaterialReactTable &#xA;      columns={columns} &#xA;      data={data} &#xA;      enableColumnOrdering //enable some features&#xA;      enableRowSelection &#xA;      enablePagination={false} //disable a default feature&#xA;      onRowSelectionChange={setRowSelection} //hoist internal state to your own state (optional)&#xA;      state={{ rowSelection }} //manage your own state, pass it back to the table (optional)&#xA;      tableInstanceRef={tableInstanceRef} //get a reference to the underlying table instance (optional)&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Open in &lt;a href=&#34;https://codesandbox.io/s/simple-material-react-table-example-t5c3ji&#34;&gt;Code Sandbox&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/kevinvandy/material-react-table/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=kevinvandy/material-react-table&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;PRs are Welcome, but please discuss in &lt;a href=&#34;https://github.com/KevinVandy/material-react-table/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; or the &lt;a href=&#34;https://discord.gg/5wqyRx6fnm&#34;&gt;Discord Server&lt;/a&gt; first if it is a large change!&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/KevinVandy/material-react-table/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn how to run this project locally.&lt;/p&gt; &#xA;&lt;!-- Use the FORCE, Luke! --&gt;</summary>
  </entry>
  <entry>
    <title>Sh4yy/cloudflare-email</title>
    <updated>2023-06-17T01:48:04Z</updated>
    <id>tag:github.com,2023-06-17:/Sh4yy/cloudflare-email</id>
    <link href="https://github.com/Sh4yy/cloudflare-email" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a simple proxy server that can be used for sending free transactional emails through Cloudflare workers.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/Sh4yy/cloudflare-email/assets/23535123/36a28753-7ded-45ef-bfed-fcc308658b33&#34; alt=&#34;Cloudflare Worker Email Server&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Cloudflare Worker Email Server&lt;/h1&gt; &#xA; &lt;p&gt;Send free transactional emails from your Cloudflare Workers using MailChannels.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Getting Started!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Install the dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the command &lt;code&gt;npx wrangler secret put --env production TOKEN&lt;/code&gt; to deploy a securely stored token to Cloudflare. With this command, you will be prompted to enter a random secret value, which will be used to authenticate your requests with the HTTP &lt;code&gt;Authorization&lt;/code&gt; header as described below. You can also set this encrypted value directly in your Cloudflare dashboard.&lt;/li&gt; &#xA; &lt;li&gt;Deploy the worker with &lt;code&gt;npm run deploy&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Or deploy directly to cloudflare&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://deploy.workers.cloudflare.com/?url=https://github.com/Sh4yy/cloudflare-email&#34;&gt;&lt;img src=&#34;https://deploy.workers.cloudflare.com/button&#34; alt=&#34;Deploy to Cloudflare Workers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup SPF&lt;/h2&gt; &#xA;&lt;p&gt;SPF is a DNS record that helps prevent email spoofing. You will need to add an SPF record to your domain to allow MailChannels to send emails on your behalf.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add a &lt;code&gt;TXT&lt;/code&gt; record to your domain with the following values: - Name: &lt;code&gt;@&lt;/code&gt; - Value: &lt;code&gt;v=spf1 a mx include:relay.mailchannels.net ~all&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Setup DKIM&lt;/h2&gt; &#xA;&lt;p&gt;This step is optional, but highly recommended. DKIM is a DNS record that helps prevent email spoofing. You may follow the steps listed in the &lt;a href=&#34;https://support.mailchannels.com/hc/en-us/articles/7122849237389-Adding-a-DKIM-Signature&#34;&gt;MailChannels documentation&lt;/a&gt; to set up DKIM for your domain.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Once you have deployed this worker function to Cloudflare Workers, you can send emails by making a &lt;code&gt;POST&lt;/code&gt; request to the worker on the &lt;code&gt;/api/email&lt;/code&gt; endpoint with the following parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note you need to pass an &lt;code&gt;Authorization&lt;/code&gt; header with the secure token you deployed. Like the following: &lt;code&gt;Authorization: TOKEN&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Basic Email&lt;/h3&gt; &#xA;&lt;p&gt;The Most basic request would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: &#34;john@example.com&#34;,&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HTML Emails&lt;/h3&gt; &#xA;&lt;p&gt;You can also send HTML emails by adding an &lt;code&gt;html&lt;/code&gt; parameter to the request. This can be used in conjunction with the &lt;code&gt;text&lt;/code&gt; parameter to send a multi-part email.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: &#34;john@example.com&#34;,&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;html&#34;: &#34;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sender and Recipient Name&lt;/h3&gt; &#xA;&lt;p&gt;You can also specify a sender and recipient name by adding a &lt;code&gt;name&lt;/code&gt; parameter to the request. This can be used for both the &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;from&lt;/code&gt; parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: { &#34;email&#34;: &#34;john@example.com&#34;,  &#34;name&#34;: &#34;John Doe&#34; },&#xA;&#x9;&#34;from&#34;: { &#34;email&#34;: &#34;me@example.com&#34;, &#34;name&#34;: &#34;Jane Doe&#34; },&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sending to Multiple Recipients&lt;/h3&gt; &#xA;&lt;p&gt;You may also send to multiple recipients by passing an array of eamils, or an array of objects with &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: [&#xA;&#x9;&#x9;&#34;john@example.com&#34;,&#xA;&#x9;&#x9;&#34;rose@example.com&#34;&#xA; &#x9;],&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: [&#xA;&#x9;&#x9;{ &#34;email&#34;: &#34;john@example.com&#34;, &#34;name&#34;: &#34;John Doe&#34; },&#xA;&#x9;&#x9;{ &#34;email&#34;: &#34;rose@example.com&#34;, &#34;name&#34;: &#34;Rose Doe&#34; }&#xA; &#x9;],&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sending BCC and CC&lt;/h3&gt; &#xA;&lt;p&gt;You can also send BCC and CC emails by passing an array of eamils, an object with &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties, or an array of either, similar to the &lt;code&gt;to&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: &#34;john@example.com&#34;,&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;cc&#34;: [&#xA;&#x9;&#x9;&#34;jim@example.com&#34;,&#xA;&#x9;&#x9;&#34;rose@example.com&#34;&#xA;&#x9;],&#xA;&#x9;&#34;bcc&#34;: [&#xA;&#x9;&#x9;&#34;gil@example.com&#34;&#xA;&#x9;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Reply To&lt;/h3&gt; &#xA;&lt;p&gt;You can also specify a reply to email address by adding a &lt;code&gt;replyTo&lt;/code&gt; parameter to the request. Again, you can use an email string, an object with &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties, or an array of either.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;to&#34;: &#34;john@example.com&#34;,&#xA;&#x9;&#34;from&#34;: &#34;me@example.com&#34;,&#xA;&#x9;&#34;replyTo&#34;: &#34;support@example.com&#34;,&#xA;&#x9;&#34;subject&#34;: &#34;Hello World&#34;,&#xA;&#x9;&#34;text&#34;: &#34;Hello World&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>erictik/midjourney-client</title>
    <updated>2023-06-17T01:48:04Z</updated>
    <id>tag:github.com,2023-06-17:/erictik/midjourney-client</id>
    <link href="https://github.com/erictik/midjourney-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MidJourney client. Unofficial Node.js client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;midjourney-client&lt;/h1&gt; &#xA;&lt;p&gt;Node.js client for the unofficial MidJourney api.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://discord.gg/GavuGHQbV4&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1082500871478329374?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/midjourney&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/midjourney.svg?maxAge=3600&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/erictik/midjourney-discord/&#34;&gt;discord-bot&lt;/a&gt; &lt;a href=&#34;https://github.com/erictik/midjourney-ui/&#34;&gt;web-ui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i midjourney&#xA;# or&#xA;yarn add midjourney&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Midjourney } from &#34;midjourney&#34;;&#xA;  const client = new Midjourney({&#xA;    ServerId: &amp;lt;string&amp;gt;process.env.SERVER_ID,&#xA;    ChannelId: &amp;lt;string&amp;gt;process.env.CHANNEL_ID,&#xA;    SalaiToken: &amp;lt;string&amp;gt;process.env.SALAI_TOKEN,&#xA;    Debug: true,&#xA;    Ws:true,&#xA;  });&#xA;  await client.init();&#xA;  const Imagine = await client.Imagine(&#34;A little pink elephant&#34;, (uri: string, progress:string) =&amp;gt; {&#xA;   onsole.log(&#34;Imagine&#34;, uri, &#34;progress&#34;, progress);&#xA;  });&#xA;  console.log({ Imagine });&#xA;&#xA;  const Variation = await client.Variation(&#xA;    Imagine.content,&#xA;    2,&#xA;    &amp;lt;string&amp;gt;Imagine.id,&#xA;    &amp;lt;string&amp;gt;Imagine.hash,&#xA;    (uri: string, progress:string) =&amp;gt; {&#xA;     onsole.log(&#34;Imagine&#34;, uri, &#34;progress&#34;, progress);&#xA;    }&#xA;  );&#xA;  console.log({ Variation });&#xA;  const Upscale = await client.Upscale(&#xA;    Variation.content,&#xA;    2,&#xA;    &amp;lt;string&amp;gt;Variation.id,&#xA;    &amp;lt;string&amp;gt;Variation.hash,&#xA;    (uri: string, progress: string) =&amp;gt; {&#xA;      console.log(&#34;Upscale&#34;, uri, &#34;progress&#34;, progress);&#xA;    }&#xA;  );&#xA;  console.log({ Upscale });&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;To run the included example, you must have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; installed. Then, run the following commands in the root directory of this project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/erictik/midjourney-client.git&#xA;cd midjourney-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;# or npm&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;set the environment variables&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.androidauthority.com/get-discord-token-3149920/&#34;&gt;How to get your Discord SALAI_TOKEN:&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/blog/starting-your-first-discord-server&#34;&gt;Create a server&lt;/a&gt; and &lt;a href=&#34;https://docs.midjourney.com/docs/invite-the-bot&#34;&gt;Invite Midjourney Bot to Your Server&lt;/a&gt;&lt;br&gt; OR &lt;a href=&#34;https://discord.com/invite/GavuGHQbV4&#34;&gt;Join my discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How to get server and channel ids:&lt;br&gt; when you click on a channel in your server in the browser expect to have the follow URL pattern &lt;code&gt;https://discord.com/channels/$SERVER_ID/$CHANNEL_ID&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#example variables, please set up yours&#xA;&#xA;export SERVER_ID=&#34;1082500871478329374&#34;&#xA;export CHANNEL_ID=&#34;1094892992281718894&#34;&#xA;export SALAI_TOKEN=&#34;your-salai-token&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the example with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx example/imagine-ws.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;route-map&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;/imagine&lt;/code&gt; &lt;code&gt;variation&lt;/code&gt; &lt;code&gt;upscale&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; websocket get message&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; callback error&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; verify human&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;/info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;/fast api&lt;/code&gt; and &lt;code&gt;/relax api&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;/describe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/erictik/midjourney-discord/raw/main/examples/proxy.ts&#34;&gt;proxy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; get command payload from discord&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/erictik&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;36&#34; style=&#34;border:0px;height:36px;&#34; src=&#34;https://storage.ko-fi.com/cdn/kofi1.png?v=3&#34; border=&#34;0&#34; alt=&#34;Buy Me a Coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#erictik/midjourney-client&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=erictik/midjourney-client&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>