<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-26T01:39:12Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>timlrx/tailwind-nextjs-starter-blog</title>
    <updated>2023-08-26T01:39:12Z</updated>
    <id>tag:github.com,2023-08-26:/timlrx/tailwind-nextjs-starter-blog</id>
    <link href="https://github.com/timlrx/tailwind-nextjs-starter-blog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a Next.js, Tailwind CSS blogging starter template. Comes out of the box configured with the latest technologies to make technical writing a breeze. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/timlrx/tailwind-nextjs-starter-blog/main/public/static/images/twitter-card.png&#34; alt=&#34;tailwind-nextjs-banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tailwind Nextjs Starter Blog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/timlrx/tailwind-nextjs-starter-blog?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://GitHub.com/timlrx/tailwind-nextjs-starter-blog/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/timlrx/tailwind-nextjs-starter-blog?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/timlrxx&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Ftimlrxx&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/timlrx&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;link=https://github.com/sponsors/timlrx&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/git/external?repository-url=https://github.com/timlrx/tailwind-nextjs-starter-blog&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;, &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; blogging starter template. Version 2 is based on Next App directory with &lt;a href=&#34;https://nextjs.org/docs/getting-started/react-essentials#server-components&#34;&gt;React Server Component&lt;/a&gt; and uses &lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt; to manage markdown content.&lt;/p&gt; &#xA;&lt;p&gt;Probably the most feature-rich Next.js markdown blogging template out there. Easily configurable and customizable. Perfect as a replacement to existing Jekyll and Hugo individual blogs.&lt;/p&gt; &#xA;&lt;p&gt;Check out the documentation below to get started.&lt;/p&gt; &#xA;&lt;p&gt;Facing issues? Check the &lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/wiki&#34;&gt;FAQ page&lt;/a&gt; and do a search on past issues. Feel free to open a new issue if none has been posted previously.&lt;/p&gt; &#xA;&lt;p&gt;Feature request? Check the past discussions to see if it has been brought up previously. Otherwise, feel free to start a new discussion thread. All ideas are welcomed!&lt;/p&gt; &#xA;&lt;h2&gt;Examples V2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/&#34;&gt;Demo Blog&lt;/a&gt; - this repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.timlrx.com&#34;&gt;My personal blog&lt;/a&gt; - modified to auto-generate blog posts with dates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ben.codes&#34;&gt;ben.codes blog&lt;/a&gt; - Benoit&#39;s personal blog about software development (&lt;a href=&#34;https://github.com/bendotcodes/bendotcodes&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tsix.top&#34;&gt;tsix blog&lt;/a&gt; - A front-end engineer is used to record some knowledge points in work and study &lt;em&gt;中文&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atksoto.com/&#34;&gt;SOTO&#39;s Blog&lt;/a&gt; - A more personalized personal website upgraded from V1 (&lt;a href=&#34;https://github.com/acsoto/soto-blog-nextjs&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the template? Feel free to create a PR and add your blog to this list.&lt;/p&gt; &#xA;&lt;h2&gt;Examples V1&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/assets/28362229/2124c81f-b99d-4431-839c-347e01a2616c&#34;&gt;v1-blogs-showcase.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to the community of users and contributors to the template! We are no longer accepting new blog listings over here. If you have updated from version 1 to version 2, feel free to remove your blog from this list and add it to the one above.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tambouille.vercel.app/&#34;&gt;Aloisdg&#39;s cookbook&lt;/a&gt; - with pictures and recipes!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog-seven.vercel.app/&#34;&gt;GautierArcin&#39;s demo with next translate&lt;/a&gt; - includes translation of mdx posts, &lt;a href=&#34;https://github.com/GautierArcin/tailwind-nextjs-starter-blog/tree/demo/next-translate&#34;&gt;source code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://davidlevai.com/&#34;&gt;David Levai&#39;s digital garden&lt;/a&gt; - customized design and added email subscriptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leohuynh.dev&#34;&gt;Leo&#39;s Blog&lt;/a&gt; - Tuan Anh Huynh&#39;s personal site. Add Snippets Page, Author Profile Card, Image Lightbox, ...&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thvu.dev&#34;&gt;thvu.dev&lt;/a&gt; - Added &lt;code&gt;mdx-embed&lt;/code&gt;, view count, reading minutes and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.irvin.dev/&#34;&gt;irvin.dev&lt;/a&gt; - Irvin Lin&#39;s personal site. Added YouTube embedding.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kirillso.com/&#34;&gt;KirillSo.com&lt;/a&gt; - Personal blog &amp;amp; website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slightlysharpe.com&#34;&gt;slightlysharpe.com&lt;/a&gt; - &lt;a href=&#34;https://tincre.com&#34;&gt;Tincre&#39;s&lt;/a&gt; main company blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.b00st.com&#34;&gt;blog.b00st.com&lt;/a&gt; - &lt;a href=&#34;https://b00st.com&#34;&gt;b00st.com&#39;s&lt;/a&gt; main music promotion blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://astrosaurus.me/&#34;&gt;astrosaurus.me&lt;/a&gt; - Ephraim Atta-Duncan&#39;s Personal Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dhanrajsp.me/&#34;&gt;dhanrajsp.me&lt;/a&gt; - Dhanraj&#39;s personal site and blog.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.r00ks.io/&#34;&gt;blog.r00ks.io&lt;/a&gt; - Austin Rooks&#39;s personal blog (&lt;a href=&#34;https://github.com/Austionian/blog.r00ks&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://honghong.me&#34;&gt;honghong.me&lt;/a&gt; - Tszhong&#39;s personal website (&lt;a href=&#34;https://github.com/tszhong0411/home&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marceloformentao.dev&#34;&gt;marceloformentao.dev&lt;/a&gt; - Marcelo Formentão personal website (&lt;a href=&#34;https://github.com/marceloavf/marceloformentao.dev&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.abiraja.com/&#34;&gt;abiraja.com&lt;/a&gt; - with a &lt;a href=&#34;https://www.abiraja.com/blog/querying-solana-blockchain&#34;&gt;runnable JS code snippet component!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bpiggin.com&#34;&gt;bpiggin.com&lt;/a&gt; - Ben Piggin&#39;s personal blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maqib.cn&#34;&gt;maqib.cn&lt;/a&gt; - A blog of Chinese front-end developers 狂奔小马的博客 (&lt;a href=&#34;https://github.com/maqi1520/nextjs-tailwind-blog&#34;&gt;源码&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ambilena.com/&#34;&gt;ambilena.com&lt;/a&gt; - Electronic Music Blog &amp;amp; imprint for upcoming musicians.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dalelarroder.com&#34;&gt;dalelarroder.com&lt;/a&gt; - Dale Larroder&#39;s personal website and blog (&lt;a href=&#34;https://github.com/dlarroder/dalelarroder&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://0xchai.io&#34;&gt;0xchai.io&lt;/a&gt; - Chai&#39;s personal blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techipedia.vercel.app&#34;&gt;techipedia&lt;/a&gt; - Simple blogging progressive web app with custom installation button and top progress bar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reubence.com&#34;&gt;reubence.com&lt;/a&gt; - Reuben Rapose&#39;s Digital Garden&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://axolo.co/blog&#34;&gt;axolo.co/blog&lt;/a&gt; - Engineering management news &amp;amp; axolo.co updates (with image preview for article in the home page)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://musing.vercel.app/&#34;&gt;musing.vercel.app&lt;/a&gt; - Parth Desai&#39;s personal blog (&lt;a href=&#34;https://github.com/pycoder2000/blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.onyourmental.com/&#34;&gt;onyourmental.com&lt;/a&gt; - &lt;a href=&#34;https://github.com/Cwarcup&#34;&gt;Curtis Warcup&#39;s&lt;/a&gt; website for the On Your Mental Podcast (&lt;a href=&#34;https://github.com/Cwarcup/on-your-mental&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cwarcup.com/&#34;&gt;cwarcup.com&lt;/a&gt; - Curtis Warcup&#39;s personal website and blog (&lt;a href=&#34;https://github.com/Cwarcup/personal-blog&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ondiek-elijah.me/&#34;&gt;ondiek-elijah.me&lt;/a&gt; - Ondiek Elijah&#39;s website and blog (&lt;a href=&#34;https://github.com/Dev-Elie/ondiek-elijah&#34;&gt;source code&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jmalvarez.dev/&#34;&gt;jmalvarez.dev&lt;/a&gt; - José Miguel Álvarez&#39;s personal blog (&lt;a href=&#34;https://github.com/josemiguel-alvarez/nextjs-blog&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://justingosses.com/&#34;&gt;justingosses.com&lt;/a&gt; - Justin Gosses&#39;s personal website and blog (&lt;a href=&#34;https://github.com/JustinGOSSES/justingosses-website&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitoflearning-9a57.fly.dev/&#34;&gt;https://bitoflearning-9a57.fly.dev/&lt;/a&gt; - Sangeet Agarwal&#39;s personal blog, replatformed to &lt;a href=&#34;https://remix.run/remix&#34;&gt;remix&lt;/a&gt; using the &lt;a href=&#34;https://github.com/remix-run/indie-stack&#34;&gt;indie stack&lt;/a&gt; (&lt;a href=&#34;https://github.com/SangeetAgarwal/bitoflearning&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raphaelchelly.com/&#34;&gt;raphaelchelly.com&lt;/a&gt; - Raphaël Chelly&#39;s personal website and blog (&lt;a href=&#34;https://github.com/raphaelchelly/raph_www&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kaveh.page&#34;&gt;kaveh.page&lt;/a&gt; - Kaveh Tehrani&#39;s personal blog. Added tags directory, profile card, time-to-read on posts directory, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;I wanted to port my existing blog to Nextjs and Tailwind CSS but there was no easy out of the box template to use so I decided to create one. Design is adapted from &lt;a href=&#34;https://github.com/tailwindlabs/blog.tailwindcss.com&#34;&gt;Tailwindlabs blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I wanted it to be nearly as feature-rich as popular blogging templates like &lt;a href=&#34;https://github.com/daattali/beautiful-jekyll&#34;&gt;beautiful-jekyll&lt;/a&gt; and &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules&#34;&gt;Hugo Academic&lt;/a&gt; but with the best of React&#39;s ecosystem and current web development&#39;s best practices.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js with Typescript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt; to manage content logic&lt;/li&gt; &#xA; &lt;li&gt;Easy styling customization with &lt;a href=&#34;https://tailwindcss.com/blog/tailwindcss-v3&#34;&gt;Tailwind 3.0&lt;/a&gt; and primary color attribute&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mdxjs.com/&#34;&gt;MDX - write JSX in markdown documents!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Near perfect lighthouse score - &lt;a href=&#34;https://www.webpagetest.org/result/230805_BiDcBQ_4H7&#34;&gt;Lighthouse report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lightweight, 85kB first load JS&lt;/li&gt; &#xA; &lt;li&gt;Mobile-friendly view&lt;/li&gt; &#xA; &lt;li&gt;Light and dark theme&lt;/li&gt; &#xA; &lt;li&gt;Font optimization with &lt;a href=&#34;https://nextjs.org/docs/app/api-reference/components/font&#34;&gt;next/font&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://github.com/timlrx/pliny&#34;&gt;pliny&lt;/a&gt; that provides: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Multiple analytics options including &lt;a href=&#34;https://umami.is/&#34;&gt;Umami&lt;/a&gt;, &lt;a href=&#34;https://plausible.io/&#34;&gt;Plausible&lt;/a&gt;, &lt;a href=&#34;https://simpleanalytics.com/&#34;&gt;Simple Analytics&lt;/a&gt;, Posthog and Google Analytics&lt;/li&gt; &#xA;   &lt;li&gt;Comments via &lt;a href=&#34;https://github.com/laymonage/giscus&#34;&gt;Giscus&lt;/a&gt;, &lt;a href=&#34;https://github.com/utterance/utterances&#34;&gt;Utterances&lt;/a&gt; or Disqus&lt;/li&gt; &#xA;   &lt;li&gt;Newsletter API and component with support for Mailchimp, Buttondown, Convertkit, Klaviyo, Revue, and Emailoctopus&lt;/li&gt; &#xA;   &lt;li&gt;Command palette search with &lt;a href=&#34;https://github.com/timc1/kbar&#34;&gt;Kbar&lt;/a&gt; or Algolia&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Server-side syntax highlighting with line numbers and line highlighting via &lt;a href=&#34;https://github.com/timlrx/rehype-prism-plus&#34;&gt;rehype-prism-plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Math display supported via &lt;a href=&#34;https://katex.org/&#34;&gt;KaTeX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Citation and bibliography support via &lt;a href=&#34;https://github.com/timlrx/rehype-citation&#34;&gt;rehype-citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic image optimization via &lt;a href=&#34;https://nextjs.org/docs/basic-features/image-optimization&#34;&gt;next/image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for tags - each unique tag will be its own page&lt;/li&gt; &#xA; &lt;li&gt;Support for multiple authors&lt;/li&gt; &#xA; &lt;li&gt;3 different blog layouts&lt;/li&gt; &#xA; &lt;li&gt;2 different blog listing layouts&lt;/li&gt; &#xA; &lt;li&gt;Support for nested routing of blog posts&lt;/li&gt; &#xA; &lt;li&gt;Projects page&lt;/li&gt; &#xA; &lt;li&gt;Preconfigured security headers&lt;/li&gt; &#xA; &lt;li&gt;SEO friendly with RSS feed, sitemaps and more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample posts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/github-markdown-guide&#34;&gt;A markdown guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/guide-to-using-images-in-nextjs&#34;&gt;Learn more about images in Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/deriving-ols-estimator&#34;&gt;A tour of math typesetting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/pictures-of-canada&#34;&gt;Simple MDX image grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/the-time-machine&#34;&gt;Example of long prose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwind-nextjs-starter-blog.vercel.app/blog/nested-route/introducing-multi-part-posts-with-nested-routing&#34;&gt;Example of Nested Route Post&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start Guide&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx degit &#39;timlrx/tailwind-nextjs-starter-blog&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Personalize &lt;code&gt;siteMetadata.js&lt;/code&gt; (site related information)&lt;/li&gt; &#xA; &lt;li&gt;Modify the content security policy in &lt;code&gt;next.config.js&lt;/code&gt; if you want to use other analytics provider or a commenting solution other than giscus.&lt;/li&gt; &#xA; &lt;li&gt;Personalize &lt;code&gt;authors/default.md&lt;/code&gt; (main author)&lt;/li&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;projectsData.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Modify &lt;code&gt;headerNavLinks.js&lt;/code&gt; to customize navigation links&lt;/li&gt; &#xA; &lt;li&gt;Add blog posts&lt;/li&gt; &#xA; &lt;li&gt;Deploy on Vercel&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;First, run the development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;p&gt;Edit the layout in &lt;code&gt;app&lt;/code&gt; or content in &lt;code&gt;data&lt;/code&gt;. With live reloading, the pages auto-updates as you edit them.&lt;/p&gt; &#xA;&lt;h2&gt;Extend / Customize&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;data/siteMetadata.js&lt;/code&gt; - contains most of the site related information which should be modified for a user&#39;s need.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/authors/default.md&lt;/code&gt; - default author information (required). Additional authors can be added as files in &lt;code&gt;data/authors&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/projectsData.js&lt;/code&gt; - data used to generate styled card on the projects page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/headerNavLinks.js&lt;/code&gt; - navigation links.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/logo.svg&lt;/code&gt; - replace with your own logo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;data/blog&lt;/code&gt; - replace with your own blog posts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;public/static&lt;/code&gt; - store assets such as images and favicons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tailwind.config.js&lt;/code&gt; and &lt;code&gt;css/tailwind.css&lt;/code&gt; - tailwind configuration and stylesheet which can be modified to change the overall look and feel of the site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;css/prism.css&lt;/code&gt; - controls the styles associated with the code blocks. Feel free to customize it and use your preferred prismjs theme e.g. &lt;a href=&#34;https://github.com/PrismJS/prism-themes&#34;&gt;prism themes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;contentlayer.config.ts&lt;/code&gt; - configuration for Contentlayer, including definition of content sources and MDX plugins used. See &lt;a href=&#34;https://www.contentlayer.dev/docs/getting-started&#34;&gt;Contentlayer documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;components/MDXComponents.js&lt;/code&gt; - pass your own JSX code or React component by specifying it over here. You can then use them directly in the &lt;code&gt;.mdx&lt;/code&gt; or &lt;code&gt;.md&lt;/code&gt; file. By default, a custom link, &lt;code&gt;next/image&lt;/code&gt; component, table of contents component and Newsletter form are passed down. Note that the components should be default exported to avoid &lt;a href=&#34;https://github.com/vercel/next.js/issues/51593&#34;&gt;existing issues with Next.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;layouts&lt;/code&gt; - main templates used in pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are currently 3 post layouts available: &lt;code&gt;PostLayout&lt;/code&gt;, &lt;code&gt;PostSimple&lt;/code&gt; and &lt;code&gt;PostBanner&lt;/code&gt;. &lt;code&gt;PostLayout&lt;/code&gt; is the default 2 column layout with meta and author information. &lt;code&gt;PostSimple&lt;/code&gt; is a simplified version of &lt;code&gt;PostLayout&lt;/code&gt;, while &lt;code&gt;PostBanner&lt;/code&gt; features a banner image.&lt;/li&gt; &#xA; &lt;li&gt;There are 2 blog listing layouts: &lt;code&gt;ListLayout&lt;/code&gt;, the layout used in version 1 of the template with a search bar and &lt;code&gt;ListLayoutWithTags&lt;/code&gt;, currently used in version 2, which omits the search bar but includes a sidebar with information on the tags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;app&lt;/code&gt; - pages to route to. Read the &lt;a href=&#34;https://nextjs.org/docs/app&#34;&gt;Next.js documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;next.config.js&lt;/code&gt; - configuration related to Next.js. You need to adapt the Content Security Policy if you want to load scripts, images etc. from other domains.&lt;/p&gt; &#xA;&lt;h2&gt;Post&lt;/h2&gt; &#xA;&lt;p&gt;Content is modelled using &lt;a href=&#34;https://www.contentlayer.dev/&#34;&gt;Contentlayer&lt;/a&gt;, which allows you to define your own content schema and use it to generate typed content objects. See &lt;a href=&#34;https://www.contentlayer.dev/docs/getting-started&#34;&gt;Contentlayer documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Frontmatter&lt;/h3&gt; &#xA;&lt;p&gt;Frontmatter follows &lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;Hugo&#39;s standards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;code&gt;contentlayer.config.ts&lt;/code&gt; for an up to date list of supported fields. The following fields are supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;title (required)&#xA;date (required)&#xA;tags (optional)&#xA;lastmod (optional)&#xA;draft (optional)&#xA;summary (optional)&#xA;images (optional)&#xA;authors (optional list which should correspond to the file names in `data/authors`. Uses `default` if none is specified)&#xA;layout (optional list which should correspond to the file names in `data/layouts`)&#xA;canonicalUrl (optional, canonical url for the post for SEO)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an example of a post&#39;s frontmatter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;title: &#39;Introducing Tailwind Nexjs Starter Blog&#39;&#xA;date: &#39;2021-01-12&#39;&#xA;lastmod: &#39;2021-01-18&#39;&#xA;tags: [&#39;next-js&#39;, &#39;tailwind&#39;, &#39;guide&#39;]&#xA;draft: false&#xA;summary: &#39;Looking for a performant, out of the box template, with all the best in web technology to support your blogging needs? Checkout the Tailwind Nextjs Starter Blog template.&#39;&#xA;images: [&#39;/static/images/canada/mountains.jpg&#39;, &#39;/static/images/canada/toronto.jpg&#39;]&#xA;authors: [&#39;default&#39;, &#39;sparrowhawk&#39;]&#xA;layout: PostLayout&#xA;canonicalUrl: https://tailwind-nextjs-starter-blog.vercel.app/blog/introducing-tailwind-nextjs-starter-blog&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;br&gt; The easiest way to deploy the template is to deploy on &lt;a href=&#34;https://vercel.com&#34;&gt;Vercel&lt;/a&gt;. Check out the &lt;a href=&#34;https://nextjs.org/docs/app/building-your-application/deploying&#34;&gt;Next.js deployment documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Netlify&lt;/strong&gt; &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;’s Next.js runtime configures enables key Next.js functionality on your website without the need for additional configurations. Netlify generates serverless functions that will handle Next.js functionalities such as server-side rendered (SSR) pages, incremental static regeneration (ISR), &lt;code&gt;next/images&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.netlify.com/integrations/frameworks/next-js/overview/#next-js-runtime&#34;&gt;Next.js on Netlify&lt;/a&gt; for suggested configuration values and more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Static hosting services / GitHub Pages / S3 / Firebase etc.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add &lt;code&gt;output: &#39;export&#39;&lt;/code&gt; in &lt;code&gt;next.config.js&lt;/code&gt;. See &lt;a href=&#34;https://nextjs.org/docs/app/building-your-application/deploying/static-exports#configuration&#34;&gt;static exports documentation&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Comment out &lt;code&gt;headers()&lt;/code&gt; from &lt;code&gt;next.config.js&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change &lt;code&gt;components/Image.tsx&lt;/code&gt; to use a standard &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag instead of &lt;code&gt;next/image&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;/* eslint-disable jsx-a11y/alt-text */&#xA;/* eslint-disable @next/next/no-img-element */&#xA;import NextImage, { ImageProps } from &#39;next/image&#39;&#xA;&#xA;// @ts-ignore&#xA;const Image = ({ ...rest }: ImageProps) =&amp;gt; &amp;lt;img {...rest} /&amp;gt;&#xA;&#xA;export default Image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Alternatively, to continue using &lt;code&gt;next/image&lt;/code&gt;, you can use an alternative image optimization provider such as Imgix, Cloudinary or Akamai. See &lt;a href=&#34;https://nextjs.org/docs/app/building-your-application/deploying/static-exports#image-optimization&#34;&gt;image optimization documentation&lt;/a&gt; for more details.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remove &lt;code&gt;api&lt;/code&gt; folder and components which call the server-side function such as the Newsletter component. Not technically required and the site will build successfully, but the APIs cannot be used as they are server-side functions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;yarn build&lt;/code&gt;. The generated static content is in the &lt;code&gt;out&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploy the &lt;code&gt;out&lt;/code&gt; folder to your hosting service of choice or run &lt;code&gt;npx serve out&lt;/code&gt; to view the website locally.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;h3&gt;How can I customize the &lt;code&gt;kbar&lt;/code&gt; search?&lt;/h3&gt; &#xA;&lt;p&gt;Add a &lt;code&gt;SearchProvider&lt;/code&gt; component such as the one shown below and use it in place of the default &lt;code&gt;SearchProvider&lt;/code&gt; component in &lt;code&gt;app/layout.tsx&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;defaultActions&lt;/code&gt; are the initial list of actions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;onSearchDocumentsLoad&lt;/code&gt; is a callback function that is called when the documents specified by &lt;code&gt;searchDocumentsPath&lt;/code&gt; are loaded. Set &lt;code&gt;searchDocumentsPath&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable the dynamically loaded search feature.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#39;use client&#39;&#xA;&#xA;import { KBarSearchProvider } from &#39;pliny/search/KBar&#39;&#xA;import { useRouter } from &#39;next/navigation&#39;&#xA;import { CoreContent } from &#39;pliny/utils/contentlayer&#39;&#xA;import { Blog } from &#39;contentlayer/generated&#39;&#xA;&#xA;export const SearchProvider = ({ children }) =&amp;gt; {&#xA;  const router = useRouter()&#xA;  return (&#xA;    &amp;lt;KBarSearchProvider&#xA;      kbarConfig={{&#xA;        searchDocumentsPath: &#39;search.json&#39;,&#xA;        defaultActions: [&#xA;          {&#xA;            id: &#39;homepage&#39;,&#xA;            name: &#39;Homepage&#39;,&#xA;            keywords: &#39;&#39;,&#xA;            shortcut: [&#39;h&#39;, &#39;h&#39;],&#xA;            section: &#39;Home&#39;,&#xA;            perform: () =&amp;gt; router.push(&#39;/&#39;),&#xA;          },&#xA;          {&#xA;            id: &#39;projects&#39;,&#xA;            name: &#39;Projects&#39;,&#xA;            keywords: &#39;&#39;,&#xA;            shortcut: [&#39;p&#39;],&#xA;            section: &#39;Home&#39;,&#xA;            perform: () =&amp;gt; router.push(&#39;/projects&#39;),&#xA;          },&#xA;        ],&#xA;        onSearchDocumentsLoad(json) {&#xA;          return json.map((post: CoreContent&amp;lt;Blog&amp;gt;) =&amp;gt; ({&#xA;            id: post.path,&#xA;            name: post.title,&#xA;            keywords: post?.summary || &#39;&#39;,&#xA;            section: &#39;Blog&#39;,&#xA;            subtitle: post.tags.join(&#39;, &#39;),&#xA;            perform: () =&amp;gt; router.push(post.path),&#xA;          }))&#xA;        },&#xA;      }}&#xA;    &amp;gt;&#xA;      {children}&#xA;    &amp;lt;/KBarSearchProvider&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Using the template? Support this effort by giving a star on GitHub, sharing your own blog and giving a shoutout on Twitter or becoming a project &lt;a href=&#34;https://github.com/sponsors/timlrx&#34;&gt;sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/timlrx/tailwind-nextjs-starter-blog/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt; © &lt;a href=&#34;https://www.timlrx.com&#34;&gt;Timothy Lin&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actions/typescript-action</title>
    <updated>2023-08-26T01:39:12Z</updated>
    <id>tag:github.com,2023-08-26:/actions/typescript-action</id>
    <link href="https://github.com/actions/typescript-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create a TypeScript Action with tests, linting, workflow, publishing, and versioning&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Create a JavaScript Action Using TypeScript&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/super-linter/super-linter&#34;&gt;&lt;img src=&#34;https://github.com/actions/typescript-action/actions/workflows/linter.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Super-Linter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/actions/typescript-action/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use this template to bootstrap the creation of a TypeScript action. &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;This template includes compilation support, tests, a validation workflow, publishing, and versioning guidance.&lt;/p&gt; &#xA;&lt;p&gt;If you are new, there&#39;s also a simpler introduction in the &lt;a href=&#34;https://github.com/actions/hello-world-javascript-action&#34;&gt;Hello world JavaScript action repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Create Your Own Action&lt;/h2&gt; &#xA;&lt;p&gt;To create your own action, you can use this repository as a template! Just follow the below instructions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Use this template&lt;/strong&gt; button at the top of the repository&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Create a new repository&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select an owner and name for your new repository&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Create repository&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone your new repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Initial Setup&lt;/h2&gt; &#xA;&lt;p&gt;After you&#39;ve cloned the repository to your local machine or codespace, you&#39;ll need to perform some initial setup steps before you can develop your action.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;You&#39;ll need to have a reasonably modern version of &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; handy. If you are using a version manager like &lt;a href=&#34;https://github.com/nodenv/nodenv&#34;&gt;&lt;code&gt;nodenv&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt;, you can run &lt;code&gt;nodenv install&lt;/code&gt; in the root of your repository to install the version specified in &lt;a href=&#34;https://raw.githubusercontent.com/actions/typescript-action/main/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;. Otherwise, 16.x or later should work!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span&gt;🛠&lt;/span&gt; Install the dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span&gt;🏗&lt;/span&gt; Package the TypeScript for distribution&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run bundle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;span&gt;✅&lt;/span&gt; Run the tests&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm test&#xA;&#xA;PASS  ./index.test.js&#xA;  ✓ throws invalid number (3ms)&#xA;  ✓ wait 500 ms (504ms)&#xA;  ✓ test runs (95ms)&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Update the Action Metadata&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/actions/typescript-action/main/action.yml&#34;&gt;&lt;code&gt;action.yml&lt;/code&gt;&lt;/a&gt; file defines metadata about your action, such as input(s) and output(s). For details about this file, see &lt;a href=&#34;https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions&#34;&gt;Metadata syntax for GitHub Actions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you copy this repository, update &lt;code&gt;action.yml&lt;/code&gt; with the name, description, inputs, and outputs for your action.&lt;/p&gt; &#xA;&lt;h2&gt;Update the Action Code&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/actions/typescript-action/main/src/&#34;&gt;&lt;code&gt;src/&lt;/code&gt;&lt;/a&gt; directory is the heart of your action! This contains the source code that will be run when your action is invoked. You can replace the contents of this directory with your own code.&lt;/p&gt; &#xA;&lt;p&gt;There are a few things to keep in mind when writing your action code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Most GitHub Actions toolkit and CI/CD operations are processed asynchronously. In &lt;code&gt;index.ts&lt;/code&gt;, you will see that the action is run in an &lt;code&gt;async&lt;/code&gt; function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as core from &#39;@actions/core&#39;;&#xA;...&#xA;&#xA;async function run() {&#xA;  try {&#xA;      ...&#xA;  }&#xA;  catch (error) {&#xA;    core.setFailed(error.message);&#xA;  }&#xA;}&#xA;&#xA;run()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more information about the GitHub Actions toolkit, see the &lt;a href=&#34;https://github.com/actions/toolkit/raw/master/README.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So, what are you waiting for? Go ahead and start customizing your action!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new branch&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b releases/v1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace the contents of &lt;code&gt;src/&lt;/code&gt; with your action code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add tests to &lt;code&gt;__tests__/&lt;/code&gt; for your source code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Format, test, and build the action&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA;   &lt;p&gt;This step is important! It will run &lt;a href=&#34;https://github.com/vercel/ncc&#34;&gt;&lt;code&gt;ncc&lt;/code&gt;&lt;/a&gt; to build the final JavaScript action code with all dependencies included. If you do not run this step, your action will not work correctly when it is used in a workflow. This step also includes the &lt;code&gt;--license&lt;/code&gt; option for &lt;code&gt;ncc&lt;/code&gt;, which will create a license file for all of the production node modules used in your project.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit your changes&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .&#xA;git commit -m &#34;My first action is ready!&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push them to your repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin releases/v1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a pull request and get feedback on your action&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Merge the pull request into the &lt;code&gt;main&lt;/code&gt; branch&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Your action is now published! &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;For information about versioning your action, see &lt;a href=&#34;https://github.com/actions/toolkit/raw/master/docs/action-versioning.md&#34;&gt;Versioning&lt;/a&gt; in the GitHub Actions toolkit.&lt;/p&gt; &#xA;&lt;h2&gt;Validate the Action&lt;/h2&gt; &#xA;&lt;p&gt;You can now validate the action by referencing it in a workflow file. For example, &lt;a href=&#34;https://raw.githubusercontent.com/actions/typescript-action/main/.github/workflows/ci.yml&#34;&gt;&lt;code&gt;ci.yml&lt;/code&gt;&lt;/a&gt; demonstrates how to reference an action in the same repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;  - name: Checkout&#xA;    id: checkout&#xA;    uses: actions/checkout@v3&#xA;&#xA;  - name: Test Local Action&#xA;    id: test-action&#xA;    uses: ./&#xA;    with:&#xA;      milliseconds: 1000&#xA;&#xA;  - name: Print Output&#xA;    id: output&#xA;    run: echo &#34;${{ steps.test-action.outputs.time }}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example workflow runs, check out the &lt;a href=&#34;https://github.com/actions/typescript-action/actions&#34;&gt;Actions tab&lt;/a&gt;! &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;After testing, you can create version tag(s) that developers can use to reference different stable versions of your action. For more information, see &lt;a href=&#34;https://github.com/actions/toolkit/raw/master/docs/action-versioning.md&#34;&gt;Versioning&lt;/a&gt; in the GitHub Actions toolkit.&lt;/p&gt; &#xA;&lt;p&gt;To include the action in a workflow in another repository, you can use the &lt;code&gt;uses&lt;/code&gt; syntax with the &lt;code&gt;@&lt;/code&gt; symbol to reference a specific branch, tag, or commit hash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;  - name: Checkout&#xA;    id: checkout&#xA;    uses: actions/checkout@v3&#xA;&#xA;  - name: Test Local Action&#xA;    id: test-action&#xA;    uses: actions/typescript-action@v1 # Commit with the `v1` tag&#xA;    with:&#xA;      milliseconds: 1000&#xA;&#xA;  - name: Print Output&#xA;    id: output&#xA;    run: echo &#34;${{ steps.test-action.outputs.time }}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>