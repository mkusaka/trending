<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-06T01:44:24Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SKHon/diudiu</title>
    <updated>2024-02-06T01:44:24Z</updated>
    <id>tag:github.com,2024-02-06:/SKHon/diudiu</id>
    <link href="https://github.com/SKHon/diudiu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个轻量的企业级BFF框架&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;          _ _ _ _     _ _ _ _      _       _      _ _ _ _      _ _ _ _      _       _&#xA;         | _ _ _ |   |_ _ _ _|    | |     | |    | _ _ _ |    |_ _ _ _|    | |     | |&#xA;         | |   | |      | |       | |     | |    | |   | |       | |       | |     | |&#xA;         | |   | |      | |       | |     | |    | |   | |       | |       | |     | |&#xA;         | |  | |     __| |__     | |_ _ _| |    | |  | |      __| |__     | |_ _ _| |&#xA;         | | / /     |_ _ _ _|    |_ _ _ _ _|    | | / /      |_ _ _ _|    |_ _ _ _ _|&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;一个基于koa的BFF框架，内置路由、模板、日志、mysql、redis、elasticsearch等模块。也支持用户自定义中间件能力。&lt;/p&gt; &#xA;&lt;h2&gt;使用指南&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;全局安装脚手架&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g diudiu-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;初始化项目&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;diudiu-cli new my-diudiu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;安装依赖&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;启动项目&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;开发指南&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;将diudiu工程最新代码拉下来&lt;/li&gt; &#xA; &lt;li&gt;目录介绍 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;lib：核心工程&lt;/li&gt; &#xA;   &lt;li&gt;example：调试工程，&lt;/li&gt; &#xA;   &lt;li&gt;cli：脚手架工程。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;在主工程diudiu下，按顺序执行 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;npm run lerna&lt;/li&gt; &#xA;   &lt;li&gt;npm run dev&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;pr规范&lt;/h2&gt; &#xA;&lt;p&gt;对于 Pull Request，请遵守以下几点要求：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;标题请写明本次 PR 的目的（做了 什么 工作，修复了 什么 问题）。&lt;/li&gt; &#xA; &lt;li&gt;内容请简要叙述修改的内容。如果修复了一个 issue 的问题，请在内容中添加 fix #xxxx 字段，其中 xxxx 代表 issue 的编号。&lt;/li&gt; &#xA; &lt;li&gt;推荐删除 pull request message 中的模板信息（“首先，十分感谢……”这一段）。 对于 Pull Request 的标题，推荐使用如下格式书写：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;修改类型&amp;gt;(&amp;lt;文件名&amp;gt;): &amp;lt;修改的内容&amp;gt; (&amp;lt;对应 issue 的编号&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改类型分为如下几类：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;feat: 新增特性或功能&lt;/li&gt; &#xA; &lt;li&gt;fix: 修复问题&lt;/li&gt; &#xA; &lt;li&gt;docs: 修改文档&lt;/li&gt; &#xA; &lt;li&gt;style: 修改代码格式&lt;/li&gt; &#xA; &lt;li&gt;refactor: 代码重构，不引入新功能和修复问题&lt;/li&gt; &#xA; &lt;li&gt;perf: 性能优化&lt;/li&gt; &#xA; &lt;li&gt;test: 新增、修改测试用例&lt;/li&gt; &#xA; &lt;li&gt;chore: 构建过程或者辅助工具的变动&lt;/li&gt; &#xA; &lt;li&gt;merge: 代码合并&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;官方群&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/SKHon/diudiu/main/docs/qq.jpg&#34; alt=&#34;qq group&#34; width=&#34;300&#34;&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;如有引用，请标明出处。 &lt;a href=&#34;https://github.com/SKHon/koa-book-code/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rjmacarthy/twinny</title>
    <updated>2024-02-06T01:44:24Z</updated>
    <id>tag:github.com,2024-02-06:/rjmacarthy/twinny</id>
    <link href="https://github.com/rjmacarthy/twinny" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most no-nonsense locally hosted (or API hosted) AI code completion plugin for Visual Studio Code, like GitHub Copilot but 100% free and 100% private.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;twinny&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Are you fed up of all of those so called &#34;free&#34; Copilot alternatives with paywalls and signups? Fear not my developer friend! Twinny is the most no-nonsense locally hosted (or api hosted) AI code completion plugin for Visual Studio Code designed to work seamlessly with &lt;a href=&#34;https://github.com/jmorganca/ollama&#34;&gt;Ollama&lt;/a&gt; or &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;. Like Github Copilot but 100% free and 100% private.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; Install the twinny vscode extension &lt;/p&gt; &#xA; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&#34;&gt; &lt;img src=&#34;https://code.visualstudio.com/assets/images/code-stable.png&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;How twinny helps developers&lt;/h3&gt; &#xA;&lt;p&gt;Fast and accurate code completion:&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rjmacarthy/twinny/assets/5537428/69f567c0-2700-4474-b621-6099255bc87b&#34; width=&#34;760&#34;&gt; &#xA;&lt;p&gt;Chat with AI about your code&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rjmacarthy/twinny/assets/5537428/679bd283-28e9-47ff-9165-84dfe293c56a&#34; width=&#34;760&#34;&gt; &#xA;&lt;h4&gt;Other features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Free&lt;/li&gt; &#xA; &lt;li&gt;Private&lt;/li&gt; &#xA; &lt;li&gt;Auto code completion&lt;/li&gt; &#xA; &lt;li&gt;Configurable single or multiline completions&lt;/li&gt; &#xA; &lt;li&gt;Fast and accurate&lt;/li&gt; &#xA; &lt;li&gt;Multiple language support&lt;/li&gt; &#xA; &lt;li&gt;Configurable prompt templates&lt;/li&gt; &#xA; &lt;li&gt;Easy to install&lt;/li&gt; &#xA; &lt;li&gt;Configurable endpoint and port and path for completion API&lt;/li&gt; &#xA; &lt;li&gt;Chat feature like Copilot Chat&lt;/li&gt; &#xA; &lt;li&gt;Accept solution directly to editor&lt;/li&gt; &#xA; &lt;li&gt;Copy generated code solution blocks&lt;/li&gt; &#xA; &lt;li&gt;Chat history preserved per conversation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Easy Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can install the verified extension at &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&#34;&gt;this link&lt;/a&gt; or find the extension in the extensions section of Visual Studio Code marketplace.&lt;/p&gt; &#xA;&lt;p&gt;Twinny is configured to use Ollama by deafult. Therefore, when installing the twinny extension in Visual Studio Code, it will automatically prompt and guide you through the installation of Ollama using two default small models &lt;code&gt;codellama:7b-instruct&lt;/code&gt; for chat and &lt;code&gt;codellama:7b-code&lt;/code&gt; for &#34;fill in the middle&#34; completions.&lt;/p&gt; &#xA;&lt;p&gt;If you already have Ollama installed or you want to use llama.cpp instead, you can cancel the automatic setup of Ollama and proceed to update the values inside twinny extension settings to point to your existing models and server.&lt;/p&gt; &#xA;&lt;p&gt;You can find the settings inside the extension sidebar by clicking the gear icon inside the twinny sidebar or by searching for &lt;code&gt;twinny&lt;/code&gt; in the extensions search bar.&lt;/p&gt; &#xA;&lt;p&gt;The main values which need to be updated to switch between Ollama and llama.cpp are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;apiUrl&lt;/code&gt; - The url to your Ollama or llama.cpp server (default: localhost)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;apiPath&lt;/code&gt; - The API path which defaults to &lt;code&gt;/api/generate&lt;/code&gt; for Ollama and &lt;code&gt;/completion&lt;/code&gt; for llama.cpp (See llama.cpp docs or Ollama docs).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;apiPort&lt;/code&gt; - The port of your Ollama (default 11434) or llama.cpp server (default 8080)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using llama.cpp - The twinny settings for FIM model name and Chat model name will be ignored, as this should already be configured when running the llama.cpp server.&lt;/p&gt; &#xA;&lt;p&gt;When the extension is ready you will see a &lt;code&gt;🤖&lt;/code&gt; icon at the bottom of your code editor.&lt;/p&gt; &#xA;&lt;p&gt;You will also see which models are being used (only applicable to Ollama hosted servers).&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it! Enjoy enhanced code completions and chat with twinny! 🎉&lt;/p&gt; &#xA;&lt;h2&gt;Tested and supported Ollama models&lt;/h2&gt; &#xA;&lt;p&gt;twinny and Ollama have been tested and are working on Linux with a 3090 with the following models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;codellama &lt;code&gt;instruct&lt;/code&gt; for chat and &lt;code&gt;code&lt;/code&gt; for FIM. (&lt;a href=&#34;https://ollama.ai/library/codellama&#34;&gt;https://ollama.ai/library/codellama&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;phind-codellama for chat (&lt;a href=&#34;https://ollama.ai/library/phind-codellama&#34;&gt;https://ollama.ai/library/phind-codellama&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;deepseek-coder:6.7b-base-q5_K_M and deepseek-coder:base for FIM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For FIM&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The model must support the llama special tokens for prefix and suffix if using codellama models.&lt;/li&gt; &#xA; &lt;li&gt;Only use deepseek base models for FIM completions for example &lt;code&gt;deepseek-coder:base&lt;/code&gt; and &lt;code&gt;deepseek-coder:6.7b-base-q5_K_M&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;For stable-code &lt;code&gt;stable-code:code&lt;/code&gt; has been tested and works for FIM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For chat&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All llama models should work, although any model will probably work too, results may vary if the special tokens are different from Llama.&lt;/li&gt; &#xA; &lt;li&gt;Prompt templates will need to be updated if using different models due to special tokens see known issues section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tested and supported llama.cpp models&lt;/h2&gt; &#xA;&lt;p&gt;twinny and llama.ccp has been tested and are working with the following models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/TheBloke/CodeLlama-7B-GGUF&#34;&gt;https://huggingface.co/TheBloke/CodeLlama-7B-GGUF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/TheBloke/CodeLlama-13B-GGUF&#34;&gt;https://huggingface.co/TheBloke/CodeLlama-13B-GGUF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Keyboard shortcuts&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Shortcut&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ALT+\&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Trigger inline code completion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CTRL+SHIFT+t&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open twinny sidebar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CTRL+SHIFT+/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stop code generation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the server settings are incorrectly set chat and fim completion will not work, if this is the case please open an issue with your error message.&lt;/li&gt; &#xA; &lt;li&gt;Some models may not support the special tokens of llama which means they would not work correctly for FIM completions.&lt;/li&gt; &#xA; &lt;li&gt;Sometimes a restart of vscode is required for new settings to take effect&lt;/li&gt; &#xA; &lt;li&gt;FIM and Chat completions for llama.cpp aren&#39;t working if using one api/model endpoint (i.e spit out garbage chat/fim completions), so use two different endpoints (one for chat and another for fim) or use Ollama instead of llama.cpp&lt;/li&gt; &#xA; &lt;li&gt;Using file context often causes incorrect completions for FIM completions because small models get confused when provided with more than one file context.&lt;/li&gt; &#xA; &lt;li&gt;If using stable-code or deekseek for instruct prompt-templates need to be updated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have a suggestion for improvement please open an issue and I will do my best to make it happen!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are actively looking for contributors who want to help improve the project, if you are interested in helping out please reach out on &lt;a href=&#34;https://x.com/rjmacarthy&#34;&gt;twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contributions are welcome please open an issue describing your changes and open a pull request when ready.&lt;/p&gt; &#xA;&lt;p&gt;This project is under MIT licence, please read the &lt;a href=&#34;https://github.com/rjmacarthy/twinny/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt;</summary>
  </entry>
</feed>