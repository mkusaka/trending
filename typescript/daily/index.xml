<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-21T01:45:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wormhole-foundation/wormhole</title>
    <updated>2023-05-21T01:45:49Z</updated>
    <id>tag:github.com,2023-05-21:/wormhole-foundation/wormhole</id>
    <link href="https://github.com/wormhole-foundation/wormhole" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reference implementation for the Wormhole blockchain interoperability protocol.&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;Banner&#34; src=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/docs/images/banner.jpg&#34;&gt; &#xA;&lt;p&gt;This monorepo contains the reference implementation of the &lt;a href=&#34;https://wormholenetwork.com&#34;&gt;Wormhole protocol&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn about how to use and build on Wormhole read the &lt;a href=&#34;http://book.wormholenetwork.com/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.wormholenetwork.com/wormhole/contracts&#34;&gt;Live Contracts&lt;/a&gt; for current testnet and mainnet deployments of the Wormhole smart contracts.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/DEVELOP.md&#34;&gt;DEVELOP.md&lt;/a&gt; for instructions on how to set up a local devnet, &lt;a href=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for instructions on how to contribute to this project, and &lt;a href=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; for more information about our security audits and bug bounty program.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/docs/operations.md&#34;&gt;docs/operations.md&lt;/a&gt; for node operator instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wormhole-foundation/wormhole/main/docs/images/overview.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚠ &lt;strong&gt;This software is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/strong&gt; Or plainly spoken - this is a very complex piece of software which targets a bleeding-edge, experimental smart contract runtime. Mistakes happen, and no matter how hard you try and whether you pay someone to audit it, it may eat your tokens, set your printer on fire or startle your cat. Cryptocurrencies are a high-risk investment, no matter how fancy.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mattermost/mattermost-mobile</title>
    <updated>2023-05-21T01:45:49Z</updated>
    <id>tag:github.com,2023-05-21:/mattermost/mattermost-mobile</id>
    <link href="https://github.com/mattermost/mattermost-mobile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next generation iOS and Android apps for Mattermost in React Native&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mattermost Mobile v2&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimum Server versions:&lt;/strong&gt; Current ESR version (7.8.0+)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supported iOS versions:&lt;/strong&gt; 12.1+&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supported Android versions:&lt;/strong&gt; 7.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mattermost is an open source Slack-alternative used by thousands of companies around the world in 21 languages. Learn more at &lt;a href=&#34;https://mattermost.com&#34;&gt;https://mattermost.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can download our apps from the &lt;a href=&#34;https://mattermost.com/mattermost-ios-app/&#34;&gt;App Store&lt;/a&gt; or &lt;a href=&#34;https://mattermost.com/mattermost-android-app/&#34;&gt;Google Play Store&lt;/a&gt;, or &lt;a href=&#34;https://developers.mattermost.com/contribute/mobile/build-your-own/&#34;&gt;build them yourself&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We plan on releasing monthly updates with new features - check the &lt;a href=&#34;https://github.com/mattermost/mattermost-mobile/raw/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; for what features are currently supported!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you self-compile the Mattermost Mobile apps you also need to deploy your own &lt;a href=&#34;https://github.com/mattermost/mattermost-push-proxy/releases&#34;&gt;Mattermost Push Notification Service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;How to Contribute&lt;/h1&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;To help with testing app updates before they&#39;re released, you can:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sign up to be a beta tester &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.google.com/apps/testing/com.mattermost.rnbeta&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://testflight.apple.com/join/Q7Rx7K9P&#34;&gt;iOS&lt;/a&gt; - Open this link from your iOS device&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;code&gt;Mattermost Beta&lt;/code&gt; app. New updates in the Beta app are released periodically. You will receive a notification when the new updates are available.&lt;/li&gt; &#xA; &lt;li&gt;File any bugs you find by filing a &lt;a href=&#34;https://github.com/mattermost/mattermost-mobile/issues&#34;&gt;GitHub issue&lt;/a&gt; with: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Device information&lt;/li&gt; &#xA;   &lt;li&gt;Repro steps&lt;/li&gt; &#xA;   &lt;li&gt;Observed behavior (including screenshot / video when possible)&lt;/li&gt; &#xA;   &lt;li&gt;Expected behavior&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;(Optional) &lt;a href=&#34;https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e&amp;amp;md=link&amp;amp;sbr=su&#34;&gt;Sign up for our team site&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Join the &lt;a href=&#34;https://community.mattermost.com/core/channels/native-mobile-apps&#34;&gt;Native Mobile Apps channel&lt;/a&gt; to see what&#39;s new and discuss feedback with other contributors and the core team&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can leave the Beta testing program at any time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Android, &lt;a href=&#34;https://play.google.com/apps/testing/com.mattermost.rnbeta&#34;&gt;click this link&lt;/a&gt; while logged in with your Google Play email address used to opt-in for the Beta program, then click &lt;strong&gt;Leave the program&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On iOS, access the &lt;code&gt;Mattermost Beta&lt;/code&gt; app page in TestFlight and click &lt;strong&gt;Stop Testing&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contribute Code&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Look in &lt;a href=&#34;https://mattermost.com/pl/help-wanted-mattermost-mobile&#34;&gt;GitHub issues&lt;/a&gt; for issues marked as [Help Wanted]&lt;/li&gt; &#xA; &lt;li&gt;Comment to let people know you’re working on it&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://developers.mattermost.com/contribute/mobile/developer-setup/&#34;&gt;these instructions&lt;/a&gt; to set up your developer environment&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;a href=&#34;https://community.mattermost.com/core/channels/native-mobile-apps&#34;&gt;Native Mobile Apps channel&lt;/a&gt; on our team site to ask questions&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Frequently Asked Questions&lt;/h1&gt; &#xA;&lt;h3&gt;How is data handled on mobile devices after a user account is deactivated?&lt;/h3&gt; &#xA;&lt;p&gt;App data is wiped from the device when a user logs out of the app. If the user is logged in when the account is deactivated, then within one minute the system logs the user out, and as a result all app data is wiped from the device.&lt;/p&gt; &#xA;&lt;h3&gt;I need the code for the v1 version&lt;/h3&gt; &#xA;&lt;p&gt;You can still access it! We have moved the code from master to the &lt;a href=&#34;https://github.com/mattermost/mattermost-mobile/tree/v1&#34;&gt;v1 branch&lt;/a&gt;. Be aware that we will not be providing any more v1 versions or updates in the public stores.&lt;/p&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;h3&gt;I keep getting a message &#34;Cannot connect to the server. Please check your server URL and internet connection.&#34;&lt;/h3&gt; &#xA;&lt;p&gt;This sometimes appears when there is an issue with the SSL certitificate configuration.&lt;/p&gt; &#xA;&lt;p&gt;To check that your SSL certificate is set up correctly, test the SSL certificate by visiting a site such as &lt;a href=&#34;https://www.ssllabs.com/ssltest/index.html&#34;&gt;https://www.ssllabs.com/ssltest/index.html&lt;/a&gt;. If there’s an error about the missing chain or certificate path, there is likely an intermediate certificate missing that needs to be included.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the apps cannot connect to servers with self-signed certificates, consider using &lt;a href=&#34;https://docs.mattermost.com/install/config-ssl-http2-nginx.html&#34;&gt;Let&#39;s Encrypt&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;I see a “Connecting…” bar that does not go away&lt;/h3&gt; &#xA;&lt;p&gt;If your app is working properly, you should see a grey “Connecting…” bar that clears or says “Connected” after the app reconnects.&lt;/p&gt; &#xA;&lt;p&gt;If you are seeing this message all the time, and your internet connection seems fine:&lt;/p&gt; &#xA;&lt;p&gt;Ask your server administrator if the server uses NGINX or another webserver as a reverse proxy. If so, they should check that it is configured correctly for &lt;a href=&#34;https://docs.mattermost.com/install/install-ubuntu-1604.html#configuring-nginx-as-a-proxy-for-mattermost-server&#34;&gt;supporting the websocket connection for APIv4 endpoints&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Blazity/next-enterprise</title>
    <updated>2023-05-21T01:45:49Z</updated>
    <id>tag:github.com,2023-05-21:/Blazity/next-enterprise</id>
    <link href="https://github.com/Blazity/next-enterprise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💼 An enterprise-grade Next.js boilerplate for high-performance, maintainable apps. Packed with features like Tailwind CSS, TypeScript, ESLint, Prettier, testing tools, and more to accelerate your development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js Enterprise Boilerplate&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Blazity/next-enterprise/assets/28964599/01d736af-4849-40c1-aaff-a95b74ac6c53&#34; alt=&#34;Project intro image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the &lt;em&gt;Next.js Enterprise Boilerplate&lt;/em&gt;, an open-source template for enterprise projects! It&#39;s loaded with features that&#39;ll help you build a high-performance, maintainable, and enjoyable app. We&#39;ve done all the heavy lifting for you, so sit back, relax, and get ready to conquer the world with your incredible app! 🌍&lt;/p&gt; &#xA;&lt;h2&gt;📚 Features&lt;/h2&gt; &#xA;&lt;p&gt;With this template, you get all the awesomeness you need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🏎️ &lt;strong&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/strong&gt; - Fast by default, with config optimized for performance&lt;/li&gt; &#xA; &lt;li&gt;💅 &lt;strong&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/strong&gt; - A utility-first CSS framework for rapid UI development&lt;/li&gt; &#xA; &lt;li&gt;✨ &lt;strong&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESlint&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt;&lt;/strong&gt; - For clean, consistent, and error-free code&lt;/li&gt; &#xA; &lt;li&gt;🛠️ &lt;strong&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Extremely strict TypeScript&lt;/a&gt;&lt;/strong&gt; - With &lt;a href=&#34;https://github.com/total-typescript/ts-reset&#34;&gt;&lt;code&gt;ts-reset&lt;/code&gt;&lt;/a&gt; library for ultimate type safety&lt;/li&gt; &#xA; &lt;li&gt;📊 &lt;strong&gt;&lt;a href=&#34;https://www.npmjs.com/package/@next/bundle-analyzer&#34;&gt;Bundle analyzer plugin&lt;/a&gt;&lt;/strong&gt; - Keep an eye on your bundle size&lt;/li&gt; &#xA; &lt;li&gt;🧪 &lt;strong&gt;&lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://testing-library.com/react&#34;&gt;React Testing Library&lt;/a&gt;&lt;/strong&gt; - For rock-solid unit and integration tests&lt;/li&gt; &#xA; &lt;li&gt;🎭 &lt;strong&gt;&lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt;&lt;/strong&gt; - Write end-to-end tests like a pro&lt;/li&gt; &#xA; &lt;li&gt;📕 &lt;strong&gt;&lt;a href=&#34;https://storybook.js.org/&#34;&gt;Storybook&lt;/a&gt;&lt;/strong&gt; - Create, test, and showcase your components&lt;/li&gt; &#xA; &lt;li&gt;🌬️ &lt;strong&gt;Smoke Testing&lt;/strong&gt; and &lt;strong&gt;Acceptance Tests&lt;/strong&gt; - For confidence in your deployments&lt;/li&gt; &#xA; &lt;li&gt;📝 &lt;strong&gt;&lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional commits git hook&lt;/a&gt;&lt;/strong&gt; - Keep your commit history neat and tidy&lt;/li&gt; &#xA; &lt;li&gt;🔍 &lt;strong&gt;&lt;a href=&#34;https://opentelemetry.io/&#34;&gt;Observability&lt;/a&gt;&lt;/strong&gt; - Open Telemetry integration for seamless monitoring&lt;/li&gt; &#xA; &lt;li&gt;🎯 &lt;strong&gt;&lt;a href=&#34;https://nextjs.org/docs/advanced-features/module-path-aliases&#34;&gt;Absolute imports&lt;/a&gt;&lt;/strong&gt; - No more spaghetti imports&lt;/li&gt; &#xA; &lt;li&gt;⚕️ &lt;strong&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&#34;&gt;Health checks&lt;/a&gt;&lt;/strong&gt; - Kubernetes-compatible for robust deployments&lt;/li&gt; &#xA; &lt;li&gt;🧩 &lt;strong&gt;&lt;a href=&#34;https://www.radix-ui.com/&#34;&gt;Radix UI&lt;/a&gt;&lt;/strong&gt; - Headless UI components for endless customization&lt;/li&gt; &#xA; &lt;li&gt;💎 &lt;strong&gt;&lt;a href=&#34;http://cva.style/&#34;&gt;CVA&lt;/a&gt;&lt;/strong&gt; - Create a consistent, reusable, and atomic design system&lt;/li&gt; &#xA; &lt;li&gt;🤖 &lt;strong&gt;&lt;a href=&#34;https://www.whitesourcesoftware.com/free-developer-tools/renovate&#34;&gt;Renovate BOT&lt;/a&gt;&lt;/strong&gt; - Auto-updating dependencies, so you can focus on coding&lt;/li&gt; &#xA; &lt;li&gt;🩹 &lt;strong&gt;&lt;a href=&#34;https://www.npmjs.com/package/patch-package&#34;&gt;Patch-package&lt;/a&gt;&lt;/strong&gt; - Fix external dependencies without losing your mind&lt;/li&gt; &#xA; &lt;li&gt;📈 &lt;strong&gt;Components coupling and cohesion graph&lt;/strong&gt; - A tool for managing component relationships&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;strong&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt; - Pre-configured actions for smooth workflows, including Bundle Size and performance stats&lt;/li&gt; &#xA; &lt;li&gt;🤖🧠 &lt;strong&gt;&lt;a href=&#34;https://openai.com/research/chatgpt&#34;&gt;Automated ChatGPT Code Reviews&lt;/a&gt;&lt;/strong&gt; - &lt;strong&gt;Stay on the cutting edge with AI-powered code reviews!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;💯 &lt;strong&gt;Perfect Lighthouse score&lt;/strong&gt; - Because performance matters&lt;/li&gt; &#xA; &lt;li&gt;🚢 &lt;strong&gt;&lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt;Semantic Release&lt;/a&gt;&lt;/strong&gt; - for automatic changelog&lt;/li&gt; &#xA; &lt;li&gt;💻 &lt;strong&gt;&lt;a href=&#34;https://env.t3.gg/&#34;&gt;T3 Env&lt;/a&gt;&lt;/strong&gt; - Manage your environment variables with ease&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#nextjs-enterprise-boilerplate&#34;&gt;Next.js Enterprise Boilerplate&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-features&#34;&gt;📚 Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-getting-started&#34;&gt;🎯 Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-deployment&#34;&gt;🚀 Deployment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-scripts-overview&#34;&gt;📃 Scripts Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-coupling-graph&#34;&gt;🔗 Coupling Graph&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-testing&#34;&gt;🧪 Testing&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#running-tests&#34;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#acceptance-tests&#34;&gt;Acceptance Tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#smoke-testing&#34;&gt;Smoke Testing&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-styling-and-design-system&#34;&gt;🎨 Styling and Design System&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#cva---a-new-approach-to-variants&#34;&gt;CVA - A New Approach to Variants&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-state-management&#34;&gt;💾 State Management&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#zustand&#34;&gt;Zustand&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#jotai&#34;&gt;Jotai&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#recoil&#34;&gt;Recoil&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-chatgpt-code-review&#34;&gt;🤖 ChatGPT Code Review&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-environment-variables-handling&#34;&gt;💻 Environment Variables handling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-contribution&#34;&gt;🤝 Contribution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#-license&#34;&gt;📜 License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎯 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with this boilerplate, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork &amp;amp; clone repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Don&#39;t forget to ⭐ star and fork it first :)&#xA;git clone https://github.com/&amp;lt;your_username)/next-enterprise.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install the dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install --frozen-lockfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run the development server:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This project uses a git hook to enforce &lt;a href=&#34;https://github.com/qoomon/git-conventional-commits&#34;&gt;conventional commits&lt;/a&gt;. To install the git hook, run the following command in the root directory of the project:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install pre-commit&#xA;pre-commit install -t commit-msg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Deployment&lt;/h2&gt; &#xA;&lt;p&gt;Easily deploy your Next.js app with &lt;a href=&#34;https://vercel.com/new?utm_medium=default-template&amp;amp;filter=next.js&amp;amp;utm_source=github&amp;amp;utm_campaign=next-enterprise&#34;&gt;Vercel&lt;/a&gt; by clicking the button below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/git/external?repository-url=https://github.com/Blazity/next-enterprise&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or if you prefer netlify:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/Blazity/next-enterprise&#34;&gt;&lt;img src=&#34;https://www.netlify.com/img/deploy/button.svg?sanitize=true&#34; alt=&#34;Netlify&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📃 Scripts Overview&lt;/h2&gt; &#xA;&lt;p&gt;The following scripts are available in the &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dev&lt;/code&gt;: Starts the development server with colorized output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;build&lt;/code&gt;: Builds the app for production&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start&lt;/code&gt;: Starts the production server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lint&lt;/code&gt;: Lints the code using ESLint&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lint:fix&lt;/code&gt;: Automatically fixes linting errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier&lt;/code&gt;: Checks the code for proper formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;prettier:fix&lt;/code&gt;: Automatically fixes formatting issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;analyze&lt;/code&gt;: Analyzes the bundle sizes for Client, Server and Edge environments&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;storybook&lt;/code&gt;: Starts the Storybook server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;build-storybook&lt;/code&gt;: Builds the Storybook for deployment&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Runs unit and integration tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;e2e:headless&lt;/code&gt;: Runs end-to-end tests in headless mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;e2e:ui&lt;/code&gt;: Runs end-to-end tests with UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: Formats the code with Prettier&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;postinstall&lt;/code&gt;: Applies patches to external dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;preinstall&lt;/code&gt;: Ensures the project is installed with Yarn&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coupling-graph&lt;/code&gt;: &lt;strong&gt;Generates a coupling and cohesion graph for the components&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Coupling Graph&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;coupling-graph&lt;/code&gt; script is a useful tool that helps visualize the coupling and connections between your project&#39;s internal modules. It&#39;s built using the &lt;a href=&#34;https://github.com/pahen/madge&#34;&gt;Madge&lt;/a&gt; library. To generate the graph, simply run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn coupling-graph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a &lt;code&gt;graph.svg&lt;/code&gt; file, which contains a graphical representation of the connections between your components. You can open the file with any SVG-compatible viewer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28964599/233662744-3ba89713-8466-49cd-9be7-e6fb38191f58.png&#34; alt=&#34;graph&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧪 Testing&lt;/h2&gt; &#xA;&lt;p&gt;This boilerplate comes with various testing setups to ensure your application&#39;s reliability and robustness.&lt;/p&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unit and integration tests&lt;/strong&gt;: Run Jest tests using &lt;code&gt;yarn test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-to-end tests (headless mode)&lt;/strong&gt;: Run Playwright tests in headless mode with &lt;code&gt;yarn e2e:headless&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-to-end tests (UI mode)&lt;/strong&gt;: Run Playwright tests with UI using &lt;code&gt;yarn e2e:ui&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1392&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/28964599/233666655-93b7d08b-2fd8-406a-b43c-44d4d96cf387.png&#34;&gt; &#xA;&lt;h3&gt;Acceptance Tests&lt;/h3&gt; &#xA;&lt;p&gt;To write acceptance tests, we leverage Storybook&#39;s &lt;a href=&#34;https://storybook.js.org/docs/react/writing-stories/play-function#writing-stories-with-the-play-function&#34;&gt;&lt;code&gt;play&lt;/code&gt; function&lt;/a&gt;. This allows you to interact with your components and test various user flows within Storybook.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;/*&#xA; * See https://storybook.js.org/docs/react/writing-stories/play-function#working-with-the-canvas&#xA; * to learn more about using the canvasElement to query the DOM&#xA; */&#xA;export const FilledForm: Story = {&#xA;  play: async ({ canvasElement }) =&amp;gt; {&#xA;    const canvas = within(canvasElement)&#xA;&#xA;    const emailInput = canvas.getByLabelText(&#34;email&#34;, {&#xA;      selector: &#34;input&#34;,&#xA;    })&#xA;&#xA;    await userEvent.type(emailInput, &#34;example-email@email.com&#34;, {&#xA;      delay: 100,&#xA;    })&#xA;&#xA;    const passwordInput = canvas.getByLabelText(&#34;password&#34;, {&#xA;      selector: &#34;input&#34;,&#xA;    })&#xA;&#xA;    await userEvent.type(passwordInput, &#34;ExamplePassword&#34;, {&#xA;      delay: 100,&#xA;    })&#xA;    // See https://storybook.js.org/docs/react/essentials/actions#automatically-matching-args to learn how to setup logging in the Actions panel&#xA;    const submitButton = canvas.getByRole(&#34;button&#34;)&#xA;&#xA;    await userEvent.click(submitButton)&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Smoke Testing&lt;/h3&gt; &#xA;&lt;p&gt;In this boilerplate, we use Storybook&#39;s out-of-the-box support for smoke testing to verify that components render correctly without any errors. Just run &lt;code&gt;yarn test-storybook&lt;/code&gt; to perform smoke testing. Remember to write stories in JSX or TSX format only. Smoke testing and a lot of other functionalities dont work well with MDX stories.&lt;/p&gt; &#xA;&lt;h2&gt;🎨 Styling and Design System&lt;/h2&gt; &#xA;&lt;p&gt;This boilerplate uses Tailwind CSS for styling and CVA for creating a powerful, easy-to-use design system. If you want to learn more about the setup, check out this fantastic video by Vercel:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=T-Zv73yZ_QI&amp;amp;ab_channel=Vercel&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/T-Zv73yZ_QI/0.jpg&#34; alt=&#34;Styling and Design System&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;CVA - A New Approach to Variants&lt;/h3&gt; &#xA;&lt;p&gt;While CSS-in-TS libraries such as &lt;a href=&#34;https://stitches.dev/&#34;&gt;Stitches&lt;/a&gt; and &lt;a href=&#34;https://vanilla-extract.style/&#34;&gt;Vanilla Extract&lt;/a&gt; are great for building type-safe UI components, they might not be the perfect fit for everyone. You may prefer more control over your stylesheets, need to use a framework like Tailwind CSS, or simply enjoy writing your own CSS.&lt;/p&gt; &#xA;&lt;p&gt;Creating variants using traditional CSS can be a tedious task, requiring you to manually match classes to props and add types. CVA is here to take that pain away, allowing you to focus on the enjoyable aspects of UI development. By providing an easy and type-safe way to create variants, CVA simplifies the process and helps you create powerful design systems without compromising on the flexibility and control of CSS.&lt;/p&gt; &#xA;&lt;h2&gt;💾 State Management&lt;/h2&gt; &#xA;&lt;p&gt;While this boilerplate doesn&#39;t include a specific state management library, we believe it&#39;s essential for you to choose the one that best suits your project&#39;s needs. Here are some libraries we recommend for state management:&lt;/p&gt; &#xA;&lt;h3&gt;Zustand&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pmndrs/zustand&#34;&gt;Zustand&lt;/a&gt; is a small, fast, and scalable state management library. It&#39;s designed to be simple and intuitive, making it a great choice for small to medium-sized projects. It&#39;s also optimized for bundle size, ensuring minimal impact on your app&#39;s performance.&lt;/p&gt; &#xA;&lt;h3&gt;Jotai&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pmndrs/jotai&#34;&gt;Jotai&lt;/a&gt; is an atom-based state management library for React that focuses on providing a minimal and straightforward API. Its atom-based approach allows you to manage your state in a granular way while still being highly optimized for bundle size.&lt;/p&gt; &#xA;&lt;h3&gt;Recoil&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://recoiljs.org/&#34;&gt;Recoil&lt;/a&gt; is a state management library developed by Facebook, specifically designed for React applications. By utilizing atoms and selectors, Recoil allows you to efficiently manage state and derived state. Its key benefit is the ability to update components only when the state they&#39;re subscribed to changes, reducing unnecessary re-renders and keeping your application fast and efficient. Recoil also offers great developer experience with built-in debugging tools.&lt;/p&gt; &#xA;&lt;p&gt;Choose the library that best fits your requirements and project structure to ensure an efficient state management solution for your application.&lt;/p&gt; &#xA;&lt;h2&gt;🤖 ChatGPT Code Review&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve integrated the innovative &lt;a href=&#34;https://github.com/anc95/ChatGPT-CodeReview&#34;&gt;ChatGPT Code Review&lt;/a&gt; for AI-powered, automated code reviews. This feature provides real-time feedback on your code, helping improve code quality and catch potential issues.&lt;/p&gt; &#xA;&lt;p&gt;To use ChatGPT Code Review, add an &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable with an appropriate key from the OpenAI platform. For setup details, refer to the &lt;a href=&#34;https://github.com/anc95/ChatGPT-CodeReview#using-github-actions&#34;&gt;Using GitHub Actions&lt;/a&gt; section in the documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28964599/233685071-e1371edf-6359-41c3-a989-335d6ee09cb7.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Environment Variables handling&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://env.t3.gg/&#34;&gt;T3 Env&lt;/a&gt; is a library that provides environmental variables checking at build time, type validation and transforming. It ensures that your application is using the correct environment variables and their values are of the expected type. You’ll never again struggle with runtime errors caused by incorrect environment variable usage.&lt;/p&gt; &#xA;&lt;p&gt;Config file is located at &lt;code&gt;env.mjs&lt;/code&gt;. Simply set your client and server variables and import &lt;code&gt;env&lt;/code&gt; from any file in your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export const env = createEnv({&#xA;  server: {&#xA;    // Server variables&#xA;    SECRET_KEY: z.string(),&#xA;  },&#xA;  client: {&#xA;    // Client variables&#xA;    API_URL: z.string().url(),&#xA;  },&#xA;  runtimeEnv: {&#xA;    // Assign runtime variables&#xA;    SECRET_KEY: process.env.SECRET_KEY,&#xA;    API_URL: process.env.NEXT_PUBLIC_API_URL,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the required environment variables are not set, you&#39;ll get an error message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;  ❌ Invalid environment variables: { SECRET_KEY: [ &#39;Required&#39; ] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🤝 Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome! To contribute, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository.&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch with a descriptive name.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes, and commit them using the &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commits&lt;/a&gt; format.&lt;/li&gt; &#xA; &lt;li&gt;Push your changes to the forked repository.&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request, and we&#39;ll review your changes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📜 License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://bstefanski.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/28964599?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Bart Stefanski&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bart Stefanski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Blazity/next-enterprise/commits?author=bmstefanski&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/jjablonski-it&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51968772?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jakub Jabłoński&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jakub Jabłoński&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Blazity/next-enterprise/main/#infra-jjablonski-it&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA; &lt;tfoot&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; size=&#34;13px&#34; colspan=&#34;7&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg?sanitize=true&#34;&gt; &lt;a href=&#34;https://all-contributors.js.org/docs/en/bot/usage&#34;&gt;Add your contributions&lt;/a&gt;  &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tfoot&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>