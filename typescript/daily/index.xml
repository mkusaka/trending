<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-12T01:40:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adefee/paver-palworld-save-editor</title>
    <updated>2024-02-12T01:40:49Z</updated>
    <id>tag:github.com,2024-02-12:/adefee/paver-palworld-save-editor</id>
    <link href="https://github.com/adefee/paver-palworld-save-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;Paver&lt;/strong&gt;: A Palworld Save Editor&lt;/h1&gt; &#xA;&lt;p&gt;A comprehensive and extensible save editor and reporting tool for Palworld, intended to work with any version of Palworld v0.1.2.0 and above. Point it to your save directory (where your Level.sav is) and go!&lt;/p&gt; &#xA;&lt;p&gt;This project is in early development. I&#39;ve tried to make it user-friendly and safety-first (don&#39;t write changes if anything goes wrong), but &lt;strong&gt;I&#39;ll always recommend making a backup of your save before using this tool.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Questions? Bugs? Ideas? &lt;a href=&#34;https://discord.gg/tu2rnEBWn9&#34;&gt;Join the Paver Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: I am not, nor is this project, associated with Palworld or Pocket Pair. I&#39;m just a fan who needed a save editor to better maintain the Palworld servers I host. This is not a commercial project, and the license (GPL-3.0) is intended to help deter commercialization of this project by others.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Save Editing, Duh!&lt;/strong&gt;: Add a config file with a path to your save directory and the changes you want (to the world, or to players), and Paver will make it happen! Several common changes are already supported, and more are planned and on the way (they just didn&#39;t make it into the first release).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify Player Appearance&lt;/strong&gt;: That&#39;s right - you can&#39;t change your appearance ingame, but you can with Paver! Change your player&#39;s body type, hair, head, name, &amp;amp; more (color changes coming in next feature release).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Built-In, Modular Reporting&lt;/strong&gt;: Paver can optionally run read-only (or not) and generate reports on your save, players, and more to be added. Reporting inclusions are modular and can be added to or removed from the config file as you see fit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Incremental Changelog&lt;/strong&gt;: Reports of Paver include changelogs, so you know exactly what was changed, when, and where.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Highly Customizable&lt;/strong&gt;: The bare minimum requires only a single line in a config file (pointing to your save directory), but there are a host of options to tailor Paver to your needs (and more planned).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic SAV&amp;lt;&amp;gt;JSON conversion&lt;/strong&gt;: Paver uses &lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;@cheahjs/palworld-save-tools&lt;/a&gt; to convert your save to JSON, and back again. Paver provides the option to retain both the SAV and the JSON, making it easy for you to verify changes or add your own. Conversion is optional: as long as you already have your SAV converted to JSON, Paver can work with that too.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Credit where it&#39;s very much due: This project is built on the shoulders of others. Paver uses the &lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;palworld-save-tools&lt;/a&gt; library by CheahJS to convert saves to JSON and back. Without that tool, I wouldn&#39;t have bothered making this. I can&#39;t express enough gratitude for the work that went into that library. Thank you, CheahJS!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;@cheahjs/palworld-save-tools&lt;/a&gt; requires Python 3.9 or newer.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;This is not needed if your save files are already in JSON format.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows users: You can install &lt;a href=&#34;https://apps.microsoft.com/detail/9NCVDN91XZQP&#34;&gt;Python 3.12 from the Microsoft Store&lt;/a&gt; or from &lt;a href=&#34;https://www.python.org/&#34;&gt;python.org&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;See the &lt;a href=&#34;https://github.com/cheahjs/palworld-save-tools&#34;&gt;palworld-save-tools README&lt;/a&gt; for updates and more information.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;ijson&lt;/code&gt; module for Python is required for the save conversion process, but &lt;strong&gt;Paver will attempt to install it for you&lt;/strong&gt; if you don&#39;t already have it.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;This is not needed if your save files are already in JSON format.&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you see errors about &lt;code&gt;ijson&lt;/code&gt;, or see an error related to &lt;code&gt;helpers/updatePlayersInLevelSav.py&lt;/code&gt;, you can workaround this by installing &lt;code&gt;ijson&lt;/code&gt; yourself. Just open command prompt, type &#34;pip install ijson&#34;, and hit enter. Then restart Paver and you should be good!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started: Run Paver!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install any necessary prerequisites (see above).&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download the latest release from from &lt;a href=&#34;https://github.com/adefee/palworld-save-editor/releases/latest&#34;&gt;Releases&lt;/a&gt;.&lt;/strong&gt; For most users, you&#39;ll want to grab the zip file, which includes an exe and some helper files. Once downloaded, extract the zip file to a location of your choice.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a config file, or run Paver once to create one for you. The config file is a JSON file that tells Paver what to do. Later, we might have a nice UI to do this for you - but in the meantime, here&#39;s a basic example to get you started:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;gameSaveDirectoryPath&#34;: &#34;C:\\path\\to\\your\\save\\directory&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Only this first field, &lt;code&gt;gameSaveDirectoryPath&lt;/code&gt; is required. This should point to a save directory (where your Level.sav is). This can be a relative path (&lt;code&gt;./&lt;/code&gt;) or absolute (&lt;code&gt;C:\\your\\path&lt;/code&gt;). If you use an absolute path, you will need to escape your slashes (e.g. &lt;code&gt;C:\your\path&lt;/code&gt; becomes &lt;code&gt;C:\\your\\path&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All other fields are optional. You can see a full list of options in &lt;a href=&#34;https://raw.githubusercontent.com/adefee/paver-palworld-save-editor/main/#config-options&#34;&gt;Config Options&lt;/a&gt;. Reporting, changelogs, and guardrails (help make sure you don&#39;t set something wrong) are &lt;strong&gt;enabled by default&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Advanced: Add the config flag to the command to specify a different config file location or name. For example, `paver config=./my-config.json``.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run the executable you downloaded. It will pick up your config file and start working based on what you&#39;ve added. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/adefee/paver-palworld-save-editor/main/#config-examples&#34;&gt;Examples&lt;/a&gt; to see some common use cases.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Advanced: Running from Source&lt;/h2&gt; &#xA;&lt;p&gt;If you want to run Paver as a Node app, feel free! You&#39;ll need to have ateast Node.js installed, and then you can run the following commands to get started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn # Installs dependencies&#xA;yarn start # Runs `node .`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For troubleshooting, you may find &lt;code&gt;process.env.DEBUG&lt;/code&gt; useful, in addition to some of the config file options.&lt;/p&gt; &#xA;&lt;h2&gt;Config Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Basic changes to a single player&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s give player &#34;Lent&#34; 42 Technology Points and add 10 Stat Points to his HP. Also, make sure he goes to leg day - set his leg size to 0.8.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;gameSaveDirectoryPath&#34;: &#34;C:\\path\\to\\your\\save\\directory&#34;,&#xA;  &#34;changesToMake&#34;: {&#xA;    &#34;enableGuardrails&#34;: true,&#xA;    &#34;world&#34;: {},&#xA;    &#34;players&#34;: [&#xA;      {&#xA;        &#34;handle&#34;: &#34;Lent&#34;,&#xA;        &#34;techPoints&#34;: 42,&#xA;        &#34;statusPoints&#34;: {&#xA;          &#34;health&#34;: 10,&#xA;        },&#xA;        &#34;appearance&#34;: {&#xA;          &#34;bodyType&#34;: &#34;TypeB&#34;,&#xA;          &#34;hairType&#34;: &#34;type12&#34;,&#xA;          &#34;legSize&#34;: 0.5&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note the &lt;code&gt;enableGuardrails&lt;/code&gt; option. This is enabled by default, and it will help make sure you don&#39;t set something wrong (for example, make sure you don&#39;t set legsize to &#34;fdjsklfajs&#34;). If you&#39;re confident in your changes, or you want to play with values that go beyond the game defaults (level 100, anyone?), just set this to false.&lt;/p&gt; &#xA;&lt;h3&gt;Generate a read-only report of your save&lt;/h3&gt; &#xA;&lt;p&gt;Easy! Let&#39;s take out the &lt;code&gt;changesToMake&lt;/code&gt; object and add a &lt;code&gt;reporting&lt;/code&gt; object. There&#39;s a variety of options available, here&#39;s a few:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;gameSaveDirectoryPath&#34;: &#34;./my-awesome-palworld-save&#34;,&#xA;  &#34;reporting&#34;: {&#xA;    &#34;export&#34;: true,&#xA;    &#34;exportPath&#34;: &#34;./reports&#34;,&#xA;    &#34;showSummary&#34;: true,&#xA;    &#34;showCapturedPals&#34;: true,&#xA;    &#34;showPlayerData&#34;: true,&#xA;    &#34;showPlayerUnlockedRecipes&#34;: true,&#xA;    &#34;showPlayerAppearance&#34;: true,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, and by default, you&#39;ll want &lt;code&gt;export: true&lt;/code&gt;. Setting this false will increase the logs you see in the console, but it won&#39;t save any reports to disk (and the report output in the console will be a bit messy).&lt;/p&gt; &#xA;&lt;h3&gt;Level up &#34;Lent&#34; and change his name to &#34;Seraph&#34;. Bump Ghost&#39;s capture rate, too!&lt;/h3&gt; &#xA;&lt;p&gt;This has a a bit more nuance to it, but also easy! Note that &#34;level&#34; is mostly just a number in Palworld. Your total experience also needs to change, or you&#39;ll receive future XP as if you&#39;re a different level. For example, if we set level 1 &#34;Lent&#34; to level 40, he&#39;ll be 40 but only gain XP as if he&#39;s level 1 - meaning going from 40 to 41 will take the same amount of XP as going from 1 to 40.&lt;/p&gt; &#xA;&lt;p&gt;This is probably not what we usually want, right? No problem - we calculate the exp for you! If you set the &lt;code&gt;level&lt;/code&gt; field and &lt;em&gt;do not&lt;/em&gt; specify &lt;code&gt;exp&lt;/code&gt;, we will calculate and add the exp for you. For those wanting more control or to try things out, you can also set &lt;code&gt;exp&lt;/code&gt; yourself and Paver will trust your judgment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;gameSaveDirectoryPath&#34;: &#34;./my-awesome-palworld-save&#34;,&#xA;  &#34;changesToMake&#34;: {&#xA;    &#34;enableGuardrails&#34;: true,&#xA;    &#34;world&#34;: {&#xA;      &#xA;    },&#xA;    &#34;players&#34;: [&#xA;      {&#xA;        &#34;guid&#34;: &#34;e1337m8e-0000-0000-0000-000000000000&#34;,&#xA;        &#34;handle&#34;: &#34;Seraph&#34;,&#xA;        &#34;level&#34;: 35,&#xA;      },&#xA;      {&#xA;        &#34;handle&#34;: &#34;Ghostpixel&#34;,&#xA;        &#34;statusPoints&#34;: {&#xA;          &#34;captureRate&#34;: 9001,&#xA;        },&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before we continue, let&#39;s talk about names real quick. There are two fields we use for identifying a target user for changes: &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;guid&lt;/code&gt;. The former is what you see in-game, and the latter is a unique identifier for the player that doesn&#39;t typically change. Most of the time, you can use &lt;code&gt;handle&lt;/code&gt; - but if you want to change someone&#39;s handle, you&#39;ll need to specify their &lt;code&gt;guid&lt;/code&gt;, too. If you&#39;re not sure what a player&#39;s &lt;code&gt;guid&lt;/code&gt; is, you can find it in the reports Paver generates.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Pro Tip: If you have multiple players with the same name, Paver will tell you it&#39;s indeterminate and will not make any changes to your save - we don&#39;t want to modify the wrong player! In such cases, you&#39;ll want to specify the &lt;code&gt;guid&lt;/code&gt; field of the target player.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Oh, and Ghost&#39;s capture rate? &lt;em&gt;It&#39;s OVER 9000!&lt;/em&gt; Fun fact: We tried 5000 once and he had 100% capture rate with basic spheres on endgame bosses! On a more serious note, astute observers may have noticed that &lt;code&gt;captureRate&lt;/code&gt; is inside of Status Points, where we also put HP, weight, stamina, etc. We were surprised, too, but this is how the save file organizes it. In cases like this, we&#39;ve tried to keep our structure as close to that of the save file as possible so.&lt;/p&gt; &#xA;&lt;h2&gt;Config Options&lt;/h2&gt; &#xA;&lt;p&gt;Below is a list of all currently available options for the &lt;code&gt;config.json&lt;/code&gt; file. All fields other than &lt;code&gt;gameSaveDirectoryPath&lt;/code&gt; are optional; the values you see below are the defaults (by us or Palword). Below is an example with all currently possible options specified; look below that for a table/list that dives into the purpose of each.&lt;/p&gt; &#xA;&lt;h3&gt;Quick View&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;gameSaveDirectoryPath&#34;: &#34;C:\\path\\to\\your\\save\\directory&#34;,&#xA;  &#34;skipSavJsonConversion&#34;: false,&#xA;  &#34;cheahJsToolsInstallPath&#34;: &#34;./helpers/cheahjs-save-tools&#34;,&#xA;  &#34;cheahJsToolsVersion&#34;: &#34;0.18.0&#34;,&#xA;  &#34;cheahJsToolsDownloadUrl&#34;: &#34;https://github.com/cheahjs/palworld-save-tools/releases/download/v0.18.0/palworld-save-tools-windows-v0.18.0.zip&#34;,&#xA;  &#34;useCustomDataStorePath&#34;: false,&#xA;  &#34;cleanUpDataStore&#34;: true,&#xA;  &#34;reporting&#34;: {&#xA;    &#34;export&#34;: true,&#xA;    &#34;exportPath&#34;: &#34;./reports&#34;,&#xA;    &#34;showSummary&#34;: true,&#xA;    &#34;showCapturedPals&#34;: true,&#xA;    &#34;showPlayerData&#34;: true,&#xA;  },&#xA;  &#34;changesToMake&#34;: {&#xA;    &#34;enableGuardrails&#34;: true,&#xA;    &#34;world&#34;: {&#xA;      &#34;soon&#34;:&#34;Broader world changes will be added here and are coming soon!&#34;&#xA;    },&#xA;    &#34;players&#34;: [&#xA;      {&#xA;        &#34;guid&#34;: &#34;e1337m8e-0000-0000-0000-000000000000&#34;,&#xA;        &#34;handle&#34;: &#34;Lent&#34;,&#xA;        &#34;level&#34;: 42,&#xA;        &#34;exp&#34;: 123456789,&#xA;        &#34;techPoints&#34;: 250,&#xA;        &#34;ancientTechPoints&#34;: 100,&#xA;        &#34;unlockedRecipes&#34;: [&#xA;          &#34;Workbench&#34;,&#xA;          &#34;Product_Axe_Grade_01&#34;,&#xA;          &#34;Product_Pickaxe_Grade_01&#34;,&#xA;          &#34;HandTorch&#34;,&#xA;        ],&#xA;        &#34;unlockedFastTravels&#34;: [&#xA;          &#34;soon - fast travels will be added here soon!&#34;&#xA;        ],&#xA;        &#34;countEffigiesFound&#34;: 0,&#xA;        &#34;currentHp&#34;: 50000,&#xA;        &#34;maxHealth&#34;: 50000,&#xA;        &#34;maxStamina&#34;: 50000,&#xA;        &#34;hunger&#34;: 100,&#xA;        &#34;sanityValue&#34;: 100,&#xA;        &#34;isPlayer&#34;: true,&#xA;        &#34;workSpeed&#34;: 100,&#xA;        &#34;support&#34;: 100,&#xA;        &#34;unusedStatusPoint&#34;: 0,&#xA;        &#34;statusPoints&#34;: {&#xA;          &#34;health&#34;: 0,&#xA;          &#34;stamina&#34;: 0,&#xA;          &#34;attack&#34;: 0,&#xA;          &#34;weight&#34;: 0,&#xA;          &#34;captureRate&#34;: 0,&#xA;          &#34;workSpeed&#34;: 0,&#xA;        },&#xA;        &#34;appearance&#34;: {&#xA;          &#34;bodyType&#34;: &#34;TypeB&#34;,&#xA;          &#34;torsoSize&#34;: 0.5,&#xA;          &#34;armSize&#34;: 0.5,&#xA;          &#34;legSize&#34;: 0.5,&#xA;          &#34;headType&#34;: &#34;type1&#34;,&#xA;          &#34;hairType&#34;: &#34;type1&#34;,&#xA;          &#34;hairColor&#34;: &#34;soon - colors will be added here soon!&#34;,&#xA;          &#34;browColor&#34;: &#34;soon - colors will be added here soon!&#34;,&#xA;          &#34;bodyColor&#34;: &#34;soon - colors will be added here soon!&#34;,&#xA;          &#34;bodySubsurfaceColor&#34;: &#34;soon - colors will be added here soon!&#34;,&#xA;          &#34;eyeColor&#34;: &#34;soon - colors will be added here soon!&#34;,&#xA;          &#34;eyeMaterialName&#34;: &#34;Type001&#34;,&#xA;        },&#xA;        &#34;voiceId&#34;: 1,&#xA;      }&#xA;    ]&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Options Rundown&lt;/h3&gt; &#xA;&lt;p&gt;Deeper details on each option and what it does will be added here soon.&lt;/p&gt; &#xA;&lt;h2&gt;Planned Improvements &amp;amp; Features&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ll be adding to this list soon (I&#39;m sleepy), but there are quite a lot of things I&#39;d expect to add to this project if people find it useful. Here&#39;s a few things I&#39;m thinking about:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full appearance options&lt;/li&gt; &#xA; &lt;li&gt;Inventory &amp;amp; base editing&lt;/li&gt; &#xA; &lt;li&gt;In reports, scan world &amp;amp; players for potential issues (chars in name that could break things), VAC/global ban lists, evidence of cheating, etc.&lt;/li&gt; &#xA; &lt;li&gt;Better abstraction and clean up the code - it&#39;s fresh out of hackathon mode, and it shows.&lt;/li&gt; &#xA; &lt;li&gt;More guardrails and safety checks, more options with saving.&lt;/li&gt; &#xA; &lt;li&gt;Potential automated/rolled-up RCON + backup + save edit + restart server functionality.&lt;/li&gt; &#xA; &lt;li&gt;Incremental and/or Git-style rollbacks of changes.&lt;/li&gt; &#xA; &lt;li&gt;Way better documentation&lt;/li&gt; &#xA; &lt;li&gt;Features voted on by users/community.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>projectx-codehagen/projectx</title>
    <updated>2024-02-12T01:40:49Z</updated>
    <id>tag:github.com,2024-02-12:/projectx-codehagen/projectx</id>
    <link href="https://github.com/projectx-codehagen/projectx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ProjectX aims to simplify financial management with a user-friendly interface and robust backend&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://projectx-eight-gilt.vercel.app/&#34;&gt; &lt;h1 align=&#34;center&#34;&gt;ProjectX: Revolutionizing Financial Management&lt;/h1&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Empower your financial management with ProjectX - AI-driven insights at your fingertips. Optimize your finances effortlessly. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- &lt;a href=&#34;https://twitter.com/placeholder&#34;&gt;&#xA;    &lt;img src=&#34;https://img.shields.io/twitter/follow/Projectx?style=flat&amp;label=%40projectxy&amp;logo=twitter&amp;color=0bf&amp;logoColor=fff&#34; alt=&#34;Twitter&#34; /&gt;&#xA;  &lt;/a&gt; --&gt; &lt;a href=&#34;https://github.com/meglerhagen/projectx/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/meglerhagen/projectx?label=license&amp;amp;logo=github&amp;amp;color=f80&amp;amp;logoColor=fff&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/projectx/main/#introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/projectx/main/#installation&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/projectx/main/#tech-stack--features&#34;&gt;&lt;strong&gt;Tech Stack + Features&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/projectx/main/#author&#34;&gt;&lt;strong&gt;Author&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/projectx-codehagen/projectx/main/#contributing&#34;&gt;&lt;strong&gt;Credits&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to ProjectX, where we&#39;re ushering in a new era of financial management. Leveraging cutting-edge AI, ProjectX redefines how you track, analyze, and optimize your finances, ensuring smarter, more secure financial decisions.&lt;/p&gt; &#xA;&lt;p&gt;With ProjectX, gain unparalleled insights into your spending habits and financial patterns, empowering you to budget better and experience more. Trusted by the world&#39;s most innovative companies, ProjectX is here to revolutionize your financial management experience.&lt;/p&gt; &#xA;&lt;h2&gt;What we are using&lt;/h2&gt; &#xA;&lt;p&gt;Lets goooo - Next.js 14, Turborepo, Drizzle ORM, Planetscale, Clerk, Resend, React Email, Shadcn/ui, and Stripe. &lt;br&gt; All seamlessly integrated with the Projectx to accelerate the development.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;ProjectX is a monorepo managed by &lt;a href=&#34;https://turbo.build/repo&#34;&gt;Turborepo&lt;/a&gt;. The monorepo is split between &lt;code&gt;apps&lt;/code&gt; and &lt;code&gt;packages&lt;/code&gt; directories.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── apps                         # Its app workspace which contains&#xA;│    ├── www                     # Nextjs app which is deployed in Vercel&#xA;│    └── ...&#xA;├── tooling                      # are the shared configuration that are used by the apps and packages (e.g. `@projectx/eslint-config`)&#xA;├── packages                     # are the shared packages that are used by the apps (e.g. `@projectx/components`)&#xA;├── docker-compose.yml&#xA;├── LICENSE&#xA;└── README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use short lowercase names at least for the top-level files and folders except &lt;code&gt;LICENSE&lt;/code&gt;, &lt;code&gt;README.md&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Clone &amp;amp; create this repo locally with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/meglerhagen/projectx.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies using pnpm:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt; and update the variables.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.example .env.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Input everything you need for the env.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://clerk.com&#34;&gt;Clerk&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://planetscale.com/&#34;&gt;Planet Scale&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://resend.com&#34;&gt;Resend&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; Account&lt;/li&gt; &#xA;   &lt;li&gt;Create &lt;a href=&#34;https://edgestore.dev&#34;&gt;Edge Store&lt;/a&gt; Account&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the development server from either yarn or turbo:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# At the root of the mono repo&#xA;pnpm run dev&#xA;&#xA;# Or from the app directory&#xA;cd apps/www&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;p&gt;This project uses MySQL database on PlanetScale. To setup a DB for your local dev:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a free account and a &lt;a href=&#34;https://planetscale.com/docs/tutorials/planetscale-quick-start-guide#create-a-database&#34;&gt;new Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;From the dashboard, create a branch and click &#34;Connect&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;Hit &lt;code&gt;Create password&lt;/code&gt; and select &lt;code&gt;Drizzle&lt;/code&gt; in &lt;code&gt;Connect with&lt;/code&gt; dropdown&lt;/li&gt; &#xA; &lt;li&gt;Copy the entire list of params to &lt;code&gt;.env.local&lt;/code&gt; file. Make sure to change the params under the section &#34;Database (MySQL - PlanetScale)&#34;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;pnpm run db:push&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also use &lt;code&gt;docker-compose&lt;/code&gt; to have a Mysql database locally, instead of relying on PlanetScale:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;MYSQL_ROOT_PASSWORD&lt;/code&gt;, &lt;code&gt;MYSQL_DATABASE&lt;/code&gt;, &lt;code&gt;MYSQL_USER&lt;/code&gt; and &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt; values in &lt;code&gt;.env.local&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;docker-compose --env-file .env.local up&lt;/code&gt; to start the DB.&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;pnpm run db:push&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Email provider&lt;/h2&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://resend.com/&#34;&gt;Resend&lt;/a&gt; to handle transactional emails. You need to add create an account and get an api key needed for authentication.&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that the Resend is designed to send test emails exclusively to the email address registered with the account, or to &lt;code&gt;delivered@resend.dev&lt;/code&gt;, where they are logged on their dashboard.&lt;/p&gt; &#xA;&lt;p&gt;The default setting for &lt;code&gt;TEST_EMAIL_ADDRESS&lt;/code&gt; is &lt;code&gt;delivered@resend.dev&lt;/code&gt; but you have the option to change it to the email address that is associated with your Resend account.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;Initial setup&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Start removing template&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Update UI to match the product&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; XXXXXXXX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack + Features&lt;/h2&gt; &#xA;&lt;h3&gt;Frameworks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; – React framework for building performant apps with the best developer experience&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clerk.com/&#34;&gt;Clerk&lt;/a&gt; – Handle user authentication with ease with providers like Google, Twitter, GitHub, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle ORM&lt;/a&gt; – TypeScript ORM that feels like SPA with SSR&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.email/&#34;&gt;React Email&lt;/a&gt; – Versatile email framework for efficient and flexible email development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt; – Easily preview &amp;amp; deploy changes with git&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://planetscale.com/&#34;&gt;PlanetScale&lt;/a&gt; – A cutting-edge database platform for seamless, scalable data management&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://resend.com/&#34;&gt;Resend&lt;/a&gt; – A powerful email framework for streamlined email development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edgestore.dev/&#34;&gt;Edge Store&lt;/a&gt; - Storage, CDN and a super easy to use type-safe library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; - Payments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt; – Utility-first CSS framework for rapid UI development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;Shadcn/ui&lt;/a&gt; – Re-usable components built using Radix UI and Tailwind CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://framer.com/motion&#34;&gt;Framer Motion&lt;/a&gt; – Motion library for React to animate components with ease&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lucide.dev/&#34;&gt;Lucide&lt;/a&gt; – Beautifully simple, pixel-perfect icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/basic-features/font-optimization&#34;&gt;&lt;code&gt;next/font&lt;/code&gt;&lt;/a&gt; – Optimize custom fonts and remove external network requests for improved performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs/app/api-reference/functions/image-response&#34;&gt;&lt;code&gt;ImageResponse&lt;/code&gt;&lt;/a&gt; – Generate dynamic Open Graph images at the edge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love our contributors! Here&#39;s how you can contribute:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meglerhagen/projectx/issues&#34;&gt;Open an issue&lt;/a&gt; if you believe you&#39;ve encountered a bug.&lt;/li&gt; &#xA; &lt;li&gt;Make a &lt;a href=&#34;https://github.com/meglerhagen/projectx/pull&#34;&gt;pull request&lt;/a&gt; to add new features/make quality-of-life improvements/fix bugs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://github.com/meglerhagen/projectx/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=meglerhagen/projectx&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/f90bd65d98d57ce8fc8bbf36079da64f0c5c8764.svg?sanitize=true&#34; alt=&#34;Nextify repo activity – generated by Axiom&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>QuivrHQ/quivr</title>
    <updated>2024-02-12T01:40:49Z</updated>
    <id>tag:github.com,2024-02-12:/QuivrHQ/quivr</id>
    <link href="https://github.com/QuivrHQ/quivr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your GenAI Second Brain 🧠 A personal productivity assistant (RAG) ⚡️🤖 Chat with your docs (PDF, CSV, ...) &amp; apps using Langchain, GPT 3.5 / 4 turbo, Private, Anthropic, VertexAI, Ollama, LLMs, that you can share with users ! Local &amp; Private alternative to OpenAI GPTs &amp; ChatGPT powered by retrieval-augmented generation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quivr - Your Second Brain, Empowered by Generative AI&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/QuivrHQ/quivr/main/logo.png&#34; alt=&#34;Quivr-logo&#34; width=&#34;30%&#34; style=&#34;border-radius: 50%; padding-bottom: 20px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/HUpRgp2HG8&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/HUpRgp2HG8?style=flat&#34; alt=&#34;Discord Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/quivrhq/quivr&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/quivrhq/quivr?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/_StanGirard&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/StanGirard?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quivr, your second brain, utilizes the power of GenerativeAI to be your personal assistant ! Think of it as Obsidian, but turbocharged with AI capabilities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.quivr.app/docs/roadmap&#34;&gt;Roadmap here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key Features 🎯&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast and Efficient&lt;/strong&gt;: Designed with speed and efficiency at its core. Quivr ensures rapid access to your data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;: Your data, your control. Always.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OS Compatible&lt;/strong&gt;: Ubuntu 22 or newer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Compatibility&lt;/strong&gt;: Text, Markdown, PDF, Powerpoint, Excel, CSV, Word, Audio, Video&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Freedom is beautiful, and so is Quivr. Open source and free to use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Public/Private&lt;/strong&gt;: Share your brains with your users via a public link, or keep them private.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Marketplace&lt;/strong&gt;: Share your brains with the world, or use other people&#39;s brains to boost your productivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Offline Mode&lt;/strong&gt;: Quivr works offline, so you can access your data anytime, anywhere.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo Highlights 🎥&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/assets/19614572/a6463b73-76c7-4bc0-978d-70562dca71f5&#34;&gt;https://github.com/quivrhq/quivr/assets/19614572/a6463b73-76c7-4bc0-978d-70562dca71f5&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started 🚀&lt;/h2&gt; &#xA;&lt;p&gt;Follow these instructions to get a copy of the project up and running on your local machine for development and testing purposes.&lt;/p&gt; &#xA;&lt;p&gt;You can find everything on the &lt;a href=&#34;https://docs.quivr.app/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites 📋&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have the following installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;60 seconds Installation 💽&lt;/h3&gt; &#xA;&lt;p&gt;You can find the installation video &lt;a href=&#34;https://www.youtube.com/watch?v=cXBa6dZJN48&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 0&lt;/strong&gt;: Supabase CLI&lt;/p&gt; &lt;p&gt;Follow the instructions &lt;a href=&#34;https://supabase.com/docs/guides/cli/getting-started&#34;&gt;here&lt;/a&gt; to install the Supabase CLI that is required.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;supabase -v # Check that the installation worked&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/quivrhq/quivr.git &amp;amp;&amp;amp; cd Quivr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Copy the &lt;code&gt;.env.example&lt;/code&gt; files&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Update the &lt;code&gt;.env&lt;/code&gt; files&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim .env # or emacs or vscode or nano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Update &lt;strong&gt;OPENAI_API_KEY&lt;/strong&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;You just need to update the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; variable in the &lt;code&gt;.env&lt;/code&gt; file. You can get your API key &lt;a href=&#34;https://platform.openai.com/api-keys&#34;&gt;here&lt;/a&gt;. You need to create an account first. And put your credit card information. Don&#39;t worry, you won&#39;t be charged unless you use the API. You can find more information about the pricing &lt;a href=&#34;https://openai.com/pricing/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Don&#39;t want to use OpenAI and want to use Ollama instead for a completely private experience? You can find the instructions &lt;a href=&#34;https://docs.quivr.app/developers/contribution/llm/ollama&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Launch the project&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;supabase start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and then&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose pull&#xA;docker compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you have a Mac, go to Docker Desktop &amp;gt; Settings &amp;gt; General and check that the &#34;file sharing implementation&#34; is set to &lt;code&gt;VirtioFS&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you are a developer, you can run the project in development mode with the following command: &lt;code&gt;docker compose -f docker-compose.dev.yml up --build&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;: Login to the app&lt;/p&gt; &lt;p&gt;You can now sign in to the app with &lt;code&gt;admin@quivr.app&lt;/code&gt; &amp;amp; &lt;code&gt;admin&lt;/code&gt;. You can access the app at &lt;a href=&#34;http://localhost:3000/login&#34;&gt;http://localhost:3000/login&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can access Quivr backend API at &lt;a href=&#34;http://localhost:5050/docs&#34;&gt;http://localhost:5050/docs&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can access supabase at &lt;a href=&#34;http://localhost:54323&#34;&gt;http://localhost:54323&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Quivr 🚀&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Pull the latest changes&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Update the migration&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;supabase migration up&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks go to these wonderful people: &lt;a href=&#34;https://github.com/quivrhq/quivr/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=quivrhq/quivr&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute 🤝&lt;/h2&gt; &#xA;&lt;p&gt;Did you get a pull request? Open it, and we&#39;ll review it as soon as possible. Check out our project board &lt;a href=&#34;https://github.com/users/StanGirard/projects/5&#34;&gt;here&lt;/a&gt; to see what we&#39;re currently focused on, and feel free to bring your fresh ideas to the table!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/issues&#34;&gt;Open Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/pulls&#34;&gt;Open Pull Requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;Good First Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/issues?q=is%3Aopen+is%3Aissue+label%3Afrontend&#34;&gt;Frontend Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quivrhq/quivr/issues?q=is%3Aopen+is%3Aissue+label%3Abackend&#34;&gt;Backend Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.quivr.app/docs/Developers/contribution/guidelines#translations&#34;&gt;Translate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Partners ❤️&lt;/h2&gt; &#xA;&lt;p&gt;This project would not be possible without the support of our partners. Thank you for your support!&lt;/p&gt; &#xA;&lt;a href=&#34;https://ycombinator.com/&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Y_Combinator_logo.svg/1200px-Y_Combinator_logo.svg.png&#34; alt=&#34;YCombinator&#34; style=&#34;padding: 10px&#34; width=&#34;70px&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://www.theodo.fr/&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/332041?s=200&amp;amp;v=4&#34; alt=&#34;Theodo&#34; style=&#34;padding: 10px&#34; width=&#34;70px&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License 📄&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache 2.0 License - see the &lt;a href=&#34;https://raw.githubusercontent.com/QuivrHQ/quivr/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details&lt;/p&gt; &#xA;&lt;h2&gt;Stars History 📈&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#quivrhq/quivr&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=quivrhq/quivr&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>