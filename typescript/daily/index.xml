<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-28T01:42:39Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AmruthPillai/Reactive-Resume</title>
    <updated>2022-09-28T01:42:39Z</updated>
    <id>tag:github.com,2022-09-28:/AmruthPillai/Reactive-Resume</id>
    <link href="https://github.com/AmruthPillai/Reactive-Resume" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. Try it out today!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://rxresu.me/images/logos/logo.png&#34; alt=&#34;Reactive Resume&#34; width=&#34;256px&#34; height=&#34;256px&#34;&gt; &#xA;&lt;h1&gt;Reactive Resume&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AmruthPillai/Reactive-Resume/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/package-json/v/AmruthPillai/Reactive-Resume?style=flat-square&#34; alt=&#34;Project Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AmruthPillai/Reactive-Resume/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/AmruthPillai/Reactive-Resume?style=flat-square&#34; alt=&#34;Project License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://translate.rxresu.me&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/reactive-resume/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/amruthpillai/reactive-resume&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/amruthpillai/reactive-resume?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/AmruthPillai/Reactive-Resume/Build%20and%20Push%20Docker%20Image?label=docker%20build&amp;amp;style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FAmruthPillai%2FReactive-Resume?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FAmruthPillai%2FReactive-Resume.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://rxresu.me&#34;&gt;Go to App&lt;/a&gt; | &lt;a href=&#34;https://docs.rxresu.me&#34;&gt;Docs&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Reactive Resume is a free and open source resume builder that’s built to make the mundane tasks of creating, updating and sharing your resume as easy as 1, 2, 3. With this app, you can create multiple resumes, share them with recruiters through a unique link and print as PDF, all for free, no advertisements, without losing the integrity and privacy of your data.&lt;/p&gt; &#xA;&lt;p&gt;You have complete control over what goes into your resume, how it looks, what colors, what templates, even the layout in which sections placed. Want a dark mode resume? It’s as easy as editing 3 values and you’re done. You don’t need to wait to see your changes either. Everything you type, everything you change, appears immediately on your resume and gets updated in real time.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#reactive-resume&#34;&gt;Reactive Resume&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#languages&#34;&gt;Languages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#tutorial&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#build-from-source&#34;&gt;Build from Source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#report-bugs-and-feature-requests&#34;&gt;Report Bugs and Feature Requests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#donations&#34;&gt;Donations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#infrastructure&#34;&gt;Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#contributors-wall&#34;&gt;Contributors Wall&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmruthPillai/Reactive-Resume/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Free, forever&lt;/li&gt; &#xA; &lt;li&gt;No Advertising&lt;/li&gt; &#xA; &lt;li&gt;No User Tracking&lt;/li&gt; &#xA; &lt;li&gt;Sync your data across devices&lt;/li&gt; &#xA; &lt;li&gt;Accessible in multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Import data from &lt;a href=&#34;https://www.linkedin.com/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://jsonresume.org/&#34;&gt;JSON Resume&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Manage multiple resumes with one account&lt;/li&gt; &#xA; &lt;li&gt;Open Source (with large community support)&lt;/li&gt; &#xA; &lt;li&gt;Send your resume to others with a unique sharable link&lt;/li&gt; &#xA; &lt;li&gt;Pick any font from &lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt; to use on your resume&lt;/li&gt; &#xA; &lt;li&gt;Choose from 6 vibrant templates and more coming soon&lt;/li&gt; &#xA; &lt;li&gt;Export your resume to JSON or PDF format with just one click&lt;/li&gt; &#xA; &lt;li&gt;Create an account using your email, or just Sign in with Google&lt;/li&gt; &#xA; &lt;li&gt;Mix and match colors to any degree, even a dark mode resume?&lt;/li&gt; &#xA; &lt;li&gt;Add sections, add pages and change layouts the way you want to&lt;/li&gt; &#xA; &lt;li&gt;Tailor-made Backend and Database, isolated from Google, Amazon etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Oh, and did I mention that it&#39;s free?&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Arabic (اَلْعَرَبِيَّةُ)&lt;/li&gt; &#xA; &lt;li&gt;Bengali (বাংলা)&lt;/li&gt; &#xA; &lt;li&gt;Bulgarian (български)&lt;/li&gt; &#xA; &lt;li&gt;Catalan (Valencian)&lt;/li&gt; &#xA; &lt;li&gt;Chinese (中文)&lt;/li&gt; &#xA; &lt;li&gt;Czech (čeština)&lt;/li&gt; &#xA; &lt;li&gt;Danish (Dansk)&lt;/li&gt; &#xA; &lt;li&gt;Dutch (Nederlands)&lt;/li&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;Finnish (Suomi)&lt;/li&gt; &#xA; &lt;li&gt;French (Français)&lt;/li&gt; &#xA; &lt;li&gt;German (Deutsch)&lt;/li&gt; &#xA; &lt;li&gt;Greek (Ελληνικά)&lt;/li&gt; &#xA; &lt;li&gt;Hebrew (Ivrit)&lt;/li&gt; &#xA; &lt;li&gt;Hindi (हिन्दी)&lt;/li&gt; &#xA; &lt;li&gt;Hungarian (Magyar)&lt;/li&gt; &#xA; &lt;li&gt;Indonesian (Bahasa Indonesia)&lt;/li&gt; &#xA; &lt;li&gt;Italian (Italiano)&lt;/li&gt; &#xA; &lt;li&gt;Japanese (日本語)&lt;/li&gt; &#xA; &lt;li&gt;Kannada (ಕನ್ನಡ)&lt;/li&gt; &#xA; &lt;li&gt;Khmer (ភាសាខ្មែរ)&lt;/li&gt; &#xA; &lt;li&gt;Korean (한국어)&lt;/li&gt; &#xA; &lt;li&gt;Malayalam (മലയാളം)&lt;/li&gt; &#xA; &lt;li&gt;Marathi (मराठी)&lt;/li&gt; &#xA; &lt;li&gt;Nepali (नेपाली)&lt;/li&gt; &#xA; &lt;li&gt;Norwegian (Norsk)&lt;/li&gt; &#xA; &lt;li&gt;Odia (ଓଡ଼ିଆ)&lt;/li&gt; &#xA; &lt;li&gt;Persian (فارسی)&lt;/li&gt; &#xA; &lt;li&gt;Polish (Polski)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese (Português)&lt;/li&gt; &#xA; &lt;li&gt;Romanian (limba română)&lt;/li&gt; &#xA; &lt;li&gt;Russian (русский)&lt;/li&gt; &#xA; &lt;li&gt;Serbian (српски језик)&lt;/li&gt; &#xA; &lt;li&gt;Spanish (Español)&lt;/li&gt; &#xA; &lt;li&gt;Swedish (Svenska)&lt;/li&gt; &#xA; &lt;li&gt;Tamil (தமிழ்)&lt;/li&gt; &#xA; &lt;li&gt;Turkish (Türkçe)&lt;/li&gt; &#xA; &lt;li&gt;Ukranian (Українська мова)&lt;/li&gt; &#xA; &lt;li&gt;Vietnamese (Tiếng Việt)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Help by &lt;a href=&#34;https://translate.rxresu.me&#34;&gt;translating Reactive Resume&lt;/a&gt; to your language!&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;The docs include an extensive &lt;a href=&#34;https://docs.rxresu.me/tutorial&#34;&gt;Tutorial&lt;/a&gt; section which outline the features of Reactive Resume and help you through building your first resume on the app.&lt;/p&gt; &#xA;&lt;h2&gt;Build from Source&lt;/h2&gt; &#xA;&lt;p&gt;For extensive information on how to build the app on your local machine, head over to the docs&#39;s &lt;a href=&#34;https://docs.rxresu.me/source-code&#34;&gt;Source Code&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project makes use of &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/&#34;&gt;conventional commits&lt;/a&gt; style and workflow for commit messages to ensure that the CHANGELOG is auto-generated. In general, this project follows the &#34;fork-and-pull&#34; Git workflow.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; the repo on GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; the project to your own machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Commit&lt;/strong&gt; changes to your own branch&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Push&lt;/strong&gt; your work back up to your fork&lt;/li&gt; &#xA; &lt;li&gt;Submit a &lt;strong&gt;Pull Request&lt;/strong&gt; so that we can review your changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: Be sure to merge the latest from &lt;code&gt;main&lt;/code&gt; before making a pull request!&lt;/p&gt; &#xA;&lt;h2&gt;Report Bugs and Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://github.com/AmruthPillai/Reactive-Resume/issues/new/choose&#34;&gt;GitHub Issues&lt;/a&gt; platform to notify me about bugs or new features that you would like to see in Reactive Resume. Please check before creating new issues as there might already be one.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Reactive Resume would be nothing without the folks who supported me and kept the project alive in the beginning, and your continued support is what keeps me going. If you found Reactive Resume to be useful, helpful or just insightful and appreciate the effort I took to make the project, please consider donating as little or as much as you can.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/sponsors/AmruthPillai&#34;&gt;GitHub Sponsor&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://paypal.me/RajaRajanA&#34;&gt;PayPal&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Infrastructure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;, frontend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nestjs.com/&#34;&gt;NestJS&lt;/a&gt;, backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt;, infrastructure provider&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://translate.rxresu.me/&#34;&gt;Crowdin&lt;/a&gt;, translation management platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;a href=&#34;https://pillai.xyz/digitalocean&#34;&gt; &lt;img src=&#34;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg?sanitize=true&#34; width=&#34;200px&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Contributors Wall&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/AmruthPillai/Reactive-Resume/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=AmruthPillai/Reactive-Resume&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: It may take up to 24h for the &lt;a href=&#34;https://contrib.rocks/image?repo=AmruthPillai/Reactive-Resume&#34;&gt;contrib.rocks&lt;/a&gt; plugin to update because it&#39;s refreshed once a day.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reactive Resume is packaged and distributed using the &lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT License&lt;/a&gt; which allows for commercial use, distribution, modification and private use provided that all copies of the software contain the same license and copyright.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;By the community, for the community.&lt;/em&gt;&lt;br&gt; A passion project by &lt;a href=&#34;https://amruthpillai.com/&#34;&gt;Amruth Pillai&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>googleapis/release-please</title>
    <updated>2022-09-28T01:42:39Z</updated>
    <id>tag:github.com,2022-09-28:/googleapis/release-please</id>
    <link href="https://github.com/googleapis/release-please" rel="alternate"></link>
    <summary type="html">&lt;p&gt;generate release PRs based on the conventionalcommits.org spec&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/2810941?v=3&amp;amp;s=96&#34; alt=&#34;Google Cloud Platform logo&#34; title=&#34;Google Cloud Platform&#34; align=&#34;right&#34; height=&#34;96&#34; width=&#34;96&#34;&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/googleapis/release-please&#34;&gt;Release Please&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.org/package/release-please&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/release-please.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/googleapis/release-please&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/googleapis/release-please/main.svg?style=flat&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Release Please automates CHANGELOG generation, the creation of GitHub releases, and version bumps for your projects.&lt;/p&gt; &#xA;&lt;p&gt;It does so by parsing your git history, looking for &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commit messages&lt;/a&gt;, and creating release PRs.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s a Release PR?&lt;/h2&gt; &#xA;&lt;p&gt;Rather than continuously releasing what&#39;s landed to your default branch, release-please maintains Release PRs:&lt;/p&gt; &#xA;&lt;img width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/screen.png&#34;&gt; &#xA;&lt;p&gt;These Release PRs are kept up-to-date as additional work is merged. When you&#39;re ready to tag a release, simply merge the release PR. Both squash-merge and merge commits work with Release PRs.&lt;/p&gt; &#xA;&lt;p&gt;When the Release PR is merged, release-please takes the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Updates your changelog file (for example &lt;code&gt;CHANGELOG.md&lt;/code&gt;), along with other language specific files (for example &lt;code&gt;package.json&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Tags the commit with the version number&lt;/li&gt; &#xA; &lt;li&gt;Creates a GitHub Release based on the tag&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can tell where the Release PR is in its lifecycle by the status label on the PR itself:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;autorelease: pending&lt;/code&gt; is the initial state of the Release PR before it is merged&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autorelease: tagged&lt;/code&gt; means that the Release PR has been merged and the release has been tagged in GitHub&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autorelease: snapshot&lt;/code&gt; is a special state for snapshot version bumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autorelease: published&lt;/code&gt; means that a GitHub release has been published based on the Release PR (&lt;em&gt;release-please does not automatically add this tag, but we recommend it as a convention for publication tooling&lt;/em&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How should I write my commits?&lt;/h2&gt; &#xA;&lt;p&gt;Release Please assumes you are using &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commit messages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most important prefixes you should have in mind are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; which represents bug fixes, and correlates to a &lt;a href=&#34;https://semver.org/&#34;&gt;SemVer&lt;/a&gt; patch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; which represents a new feature, and correlates to a SemVer minor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feat!:&lt;/code&gt;, or &lt;code&gt;fix!:&lt;/code&gt;, &lt;code&gt;refactor!:&lt;/code&gt;, etc., which represent a breaking change (indicated by the &lt;code&gt;!&lt;/code&gt;) and will result in a SemVer major.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What if my PR contains multiple fixes or features?&lt;/h3&gt; &#xA;&lt;p&gt;Release Please allows you to represent multiple changes in a single commit, using footers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;feat: adds v4 UUID to crypto&#xA;&#xA;This adds support for v4 UUIDs to the library.&#xA;&#xA;fix(utils): unicode no longer throws exception&#xA;  PiperOrigin-RevId: 345559154&#xA;  BREAKING-CHANGE: encode method no longer throws.&#xA;  Source-Link: googleapis/googleapis@5e0dcb2&#xA;&#xA;feat(utils): update encode to support unicode&#xA;  PiperOrigin-RevId: 345559182&#xA;  Source-Link: googleapis/googleapis@e5eef86&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above commit message will contain:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;an entry for the &lt;strong&gt;&#34;adds v4 UUID to crypto&#34;&lt;/strong&gt; feature.&lt;/li&gt; &#xA; &lt;li&gt;an entry for the fix &lt;strong&gt;&#34;unicode no longer throws exception&#34;&lt;/strong&gt;, along with a note that it&#39;s a breaking change.&lt;/li&gt; &#xA; &lt;li&gt;an entry for the feature &lt;strong&gt;&#34;update encode to support unicode&#34;&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Important:&lt;/strong&gt; The additional messages must be added to the bottom of the commit.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;How do I change the version number?&lt;/h2&gt; &#xA;&lt;p&gt;When a commit to the main branch has &lt;code&gt;Release-As: x.x.x&lt;/code&gt; (case insensitive) in the &lt;strong&gt;commit body&lt;/strong&gt;, Release Please will open a new pull request for the specified version.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Empty commit example:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git commit --allow-empty -m &#34;chore: release 2.0.0&#34; -m &#34;Release-As: 2.0.0&#34;&lt;/code&gt; results in the following commit message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;chore: release 2.0.0&#xA;&#xA;Release-As: 2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How can I fix release notes?&lt;/h2&gt; &#xA;&lt;p&gt;If you have merged a pull request and would like to amend the commit message used to generate the release notes for that commit, you can edit the body of the merged pull requests and add a section like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BEGIN_COMMIT_OVERRIDE&#xA;feat: add ability to override merged commit message&#xA;&#xA;fix: another message&#xA;chore: a third message&#xA;END_COMMIT_OVERRIDE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The next time Release Please runs, it will use that override section as the commit message instead of the merged commit message.&lt;/p&gt; &#xA;&lt;h2&gt;Release Please bot does not create a release PR. Why?&lt;/h2&gt; &#xA;&lt;p&gt;Release Please creates a release pull request after it notices the default branch contains &#34;releasable units&#34; since the last release. A releasable unit is a commit to the branch with one of the following prefixes: &#34;feat&#34;, &#34;fix&#34;, and &#34;deps&#34;. (A &#34;chore&#34; or &#34;build&#34; commit is not a releasable unit.)&lt;/p&gt; &#xA;&lt;p&gt;Some languages have their specific releasable unit configuration. For example, &#34;docs&#34; is a prefix for releasable units in Java and Python.&lt;/p&gt; &#xA;&lt;p&gt;If you think Release Please missed to create a release PR after a pull request with with releasable unit has been merged, please re-run &lt;code&gt;release-please&lt;/code&gt;. If you are using the GitHub application, add &lt;code&gt;release-please:force-run&lt;/code&gt; label to the merged pull request. If you are using the action, look for the failed invocation and retry the workflow run. Release Please will process the pull request immediately to find releasable units.&lt;/p&gt; &#xA;&lt;h2&gt;Strategy (Language) types supported&lt;/h2&gt; &#xA;&lt;p&gt;Release Please automates releases for the following flavors of repositories:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;release type&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;dart&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a pubspec.yaml and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;elixir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a mix.exs and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;helm&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a Chart.yaml and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;java&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/java.md&#34;&gt;A strategy that generates SNAPSHOT version after each release&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;krm-blueprint&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/blueprints/tree/main/catalog/project&#34;&gt;A kpt package, with 1 or more KRM files and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/java.md&#34;&gt;Strategy for Maven projects, generates SNAPSHOT version after each release and updates &lt;code&gt;pom.xml&lt;/code&gt; automatically&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;node&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yargs/yargs&#34;&gt;A Node.js repository, with a package.json and CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ocaml&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grain-lang/binaryen.ml&#34;&gt;An OCaml repository, containing 1 or more opam or esy files and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;php&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a composer.json and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/python-storage&#34;&gt;A Python repository, with a setup.py, setup.cfg, CHANGELOG.md&lt;/a&gt; and optionally a pyproject.toml and a &amp;lt;project&amp;gt;/__init__.py&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ruby&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A repository with a version.rb and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;rust&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Rust repository, with a Cargo.toml (either as a crate or workspace) and a CHANGELOG.md&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;simple&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googleapis/gapic-generator&#34;&gt;A repository with a version.txt and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraform-module&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terraform-google-modules/terraform-google-project-factory&#34;&gt;A terraform module, with a version in the README.md, and a CHANGELOG.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Setting up Release Please&lt;/h2&gt; &#xA;&lt;p&gt;There are a variety of ways you can deploy release-please:&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Action (recommended)&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to run Release Please is as a GitHub action. Please see &lt;a href=&#34;https://github.com/google-github-actions/release-please-action&#34;&gt;google-github-actions/release-please-action&lt;/a&gt; for installation and configuration instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Running as CLI&lt;/h3&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/cli.md&#34;&gt;Running release-please CLI&lt;/a&gt; for all the configuration options.&lt;/p&gt; &#xA;&lt;h3&gt;Install the GitHub App&lt;/h3&gt; &#xA;&lt;p&gt;There is a probot application available, which allows you to deploy Release Please as a GitHub App. Please see &lt;a href=&#34;https://github.com/googleapis/repo-automation-bots/tree/main/packages/release-please&#34;&gt;github.com/googleapis/repo-automation-bots&lt;/a&gt; for installation and configuration instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Bootstrapping your Repository&lt;/h2&gt; &#xA;&lt;p&gt;Release Please looks at commits since your last release tag. It may or may not be able to find your previous releases. The easiest way to on-board your repository is to &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/cli.md#bootstrapping&#34;&gt;bootstrap a manifest config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing Release Please&lt;/h2&gt; &#xA;&lt;p&gt;Release Please provides several configuration options to allow customizing your release process. Please see &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/customizing.md&#34;&gt;customizing.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Supporting Monorepos via Manifest Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Release Please also supports releasing multiple artifacts from the same repository. See more at &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/release-please/main/docs/manifest-releaser.md&#34;&gt;manifest-releaser.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Node.js Versions&lt;/h2&gt; &#xA;&lt;p&gt;Our client libraries follow the &lt;a href=&#34;https://nodejs.org/en/about/releases/&#34;&gt;Node.js release schedule&lt;/a&gt;. Libraries are compatible with all current &lt;em&gt;active&lt;/em&gt; and &lt;em&gt;maintenance&lt;/em&gt; versions of Node.js.&lt;/p&gt; &#xA;&lt;p&gt;Client libraries targeting some end-of-life versions of Node.js are available, and can be installed via npm &lt;a href=&#34;https://docs.npmjs.com/cli/dist-tag&#34;&gt;dist-tags&lt;/a&gt;. The dist-tags follow the naming convention &lt;code&gt;legacy-(version)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Legacy Node.js versions are supported as a best effort:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Legacy versions will not be tested in continuous integration.&lt;/li&gt; &#xA; &lt;li&gt;Some security patches may not be able to be backported.&lt;/li&gt; &#xA; &lt;li&gt;Dependencies will not be kept up-to-date, and features will not be backported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Legacy tags available&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;legacy-8&lt;/code&gt;: install client libraries from this dist-tag for versions compatible with Node.js 8.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This library follows &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions welcome! See the &lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information on the design of the library, see &lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/docs/design.md&#34;&gt;design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache Version 2.0&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/googleapis/release-please/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wix/react-native-calendars</title>
    <updated>2022-09-28T01:42:39Z</updated>
    <id>tag:github.com,2022-09-28:/wix/react-native-calendars</id>
    <link href="https://github.com/wix/react-native-calendars" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native Calendar Components 🗓️ 📆&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://stand-with-ukraine.pp.ua&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg?sanitize=true&#34; alt=&#34;Stand With Ukraine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;React Native Calendars 🗓️ 📆&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-calendars&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-calendars.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/wix/react-native-calendars&#34;&gt;&lt;img src=&#34;https://travis-ci.org/wix/react-native-calendars.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This module includes various customizable &lt;strong&gt;React-Native&lt;/strong&gt; calendar components.&lt;/p&gt; &#xA;&lt;p&gt;The package is both &lt;strong&gt;Android&lt;/strong&gt; and &lt;strong&gt;iOS&lt;/strong&gt; compatible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;See our new &lt;a href=&#34;https://wix.github.io/react-native-calendars/&#34;&gt;Docs site&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Try it out&lt;/h2&gt; &#xA;&lt;p&gt;You can run example module by performing these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:wix/react-native-calendars.git&#xA;$ cd react-native-calendars&#xA;$ npm install&#xA;$ cd ios &amp;amp;&amp;amp; pod install &amp;amp;&amp;amp; cd ..&#xA;$ react-native run-ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check example screens source code in &lt;a href=&#34;https://github.com/wix-private/wix-react-native-calendar/tree/master/example/src/screens&#34;&gt;example module screens&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is compatible with Expo/CRNA (without ejecting), and the examples have been &lt;a href=&#34;https://expo.io/@community/react-native-calendars-example&#34;&gt;published on Expo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm install --save react-native-calendars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The solution is implemented in JavaScript so no native module linking is required.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;import {&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wix/react-native-calendars/master/#calendar&#34;&gt;Calendar&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/wix/react-native-calendars/master/#calendarlist&#34;&gt;CalendarList&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/wix/react-native-calendars/master/#agenda&#34;&gt;Agenda&lt;/a&gt;&lt;code&gt;} from &#39;react-native-calendars&#39;;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;All parameters for components are optional. By default the month of current local date will be displayed.&lt;/p&gt; &#xA;&lt;p&gt;Event handler callbacks are called with &lt;code&gt;calendar objects&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;  day: 1,      // day of month (1-31)&#xA;  month: 1,    // month of year (1-12)&#xA;  year: 2017,  // year&#xA;  timestamp,   // UTC timestamp representing 00:00 AM of this date&#xA;  dateString: &#39;2016-05-13&#39; // date formatted as &#39;YYYY-MM-DD&#39; string&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Parameters that require date types accept &lt;code&gt;YYYY-MM-DD&lt;/code&gt; formatted &lt;code&gt;date-strings&lt;/code&gt;, JavaScript date objects, &lt;code&gt;calendar objects&lt;/code&gt; and &lt;code&gt;UTC timestamps&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Calendars can be localized by adding custom locales to &lt;code&gt;LocaleConfig&lt;/code&gt; object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import {LocaleConfig} from &#39;react-native-calendars&#39;;&#xA;&#xA;LocaleConfig.locales[&#39;fr&#39;] = {&#xA;  monthNames: [&#xA;    &#39;Janvier&#39;,&#xA;    &#39;Février&#39;,&#xA;    &#39;Mars&#39;,&#xA;    &#39;Avril&#39;,&#xA;    &#39;Mai&#39;,&#xA;    &#39;Juin&#39;,&#xA;    &#39;Juillet&#39;,&#xA;    &#39;Août&#39;,&#xA;    &#39;Septembre&#39;,&#xA;    &#39;Octobre&#39;,&#xA;    &#39;Novembre&#39;,&#xA;    &#39;Décembre&#39;&#xA;  ],&#xA;  monthNamesShort: [&#39;Janv.&#39;, &#39;Févr.&#39;, &#39;Mars&#39;, &#39;Avril&#39;, &#39;Mai&#39;, &#39;Juin&#39;, &#39;Juil.&#39;, &#39;Août&#39;, &#39;Sept.&#39;, &#39;Oct.&#39;, &#39;Nov.&#39;, &#39;Déc.&#39;],&#xA;  dayNames: [&#39;Dimanche&#39;, &#39;Lundi&#39;, &#39;Mardi&#39;, &#39;Mercredi&#39;, &#39;Jeudi&#39;, &#39;Vendredi&#39;, &#39;Samedi&#39;],&#xA;  dayNamesShort: [&#39;Dim.&#39;, &#39;Lun.&#39;, &#39;Mar.&#39;, &#39;Mer.&#39;, &#39;Jeu.&#39;, &#39;Ven.&#39;, &#39;Sam.&#39;],&#xA;  today: &#34;Aujourd&#39;hui&#34;&#xA;};&#xA;LocaleConfig.defaultLocale = &#39;fr&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Calendar&lt;/h3&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/calendar.gif?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;h4&gt;Basic parameters&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  // Initially visible month. Default = now&#xA;  initialDate={&#39;2012-03-01&#39;}&#xA;  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined&#xA;  minDate={&#39;2012-05-10&#39;}&#xA;  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined&#xA;  maxDate={&#39;2012-05-30&#39;}&#xA;  // Handler which gets executed on day press. Default = undefined&#xA;  onDayPress={day =&amp;gt; {&#xA;    console.log(&#39;selected day&#39;, day);&#xA;  }}&#xA;  // Handler which gets executed on day long press. Default = undefined&#xA;  onDayLongPress={day =&amp;gt; {&#xA;    console.log(&#39;selected day&#39;, day);&#xA;  }}&#xA;  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting&#xA;  monthFormat={&#39;yyyy MM&#39;}&#xA;  // Handler which gets executed when visible month changes in calendar. Default = undefined&#xA;  onMonthChange={month =&amp;gt; {&#xA;    console.log(&#39;month changed&#39;, month);&#xA;  }}&#xA;  // Hide month navigation arrows. Default = false&#xA;  hideArrows={true}&#xA;  // Replace default arrows with custom ones (direction can be &#39;left&#39; or &#39;right&#39;)&#xA;  renderArrow={direction =&amp;gt; &amp;lt;Arrow /&amp;gt;}&#xA;  // Do not show days of other months in month page. Default = false&#xA;  hideExtraDays={true}&#xA;  // If hideArrows = false and hideExtraDays = false do not switch month when tapping on greyed out&#xA;  // day from another month that is visible in calendar page. Default = false&#xA;  disableMonthChange={true}&#xA;  // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday&#xA;  firstDay={1}&#xA;  // Hide day names. Default = false&#xA;  hideDayNames={true}&#xA;  // Show week numbers to the left. Default = false&#xA;  showWeekNumbers={true}&#xA;  // Handler which gets executed when press arrow icon left. It receive a callback can go back month&#xA;  onPressArrowLeft={subtractMonth =&amp;gt; subtractMonth()}&#xA;  // Handler which gets executed when press arrow icon right. It receive a callback can go next month&#xA;  onPressArrowRight={addMonth =&amp;gt; addMonth()}&#xA;  // Disable left arrow. Default = false&#xA;  disableArrowLeft={true}&#xA;  // Disable right arrow. Default = false&#xA;  disableArrowRight={true}&#xA;  // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates&#xA;  disableAllTouchEventsForDisabledDays={true}&#xA;  // Replace default month and year title with custom one. the function receive a date as parameter&#xA;  renderHeader={date =&amp;gt; {&#xA;    /*Return JSX*/&#xA;  }}&#xA;  // Enable the option to swipe between months. Default = false&#xA;  enableSwipeMonths={true}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Date marking&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Make sure that &lt;code&gt;markedDates&lt;/code&gt; param is immutable. If you change &lt;code&gt;markedDates&lt;/code&gt; object content but the reference to it does not change calendar update will not be triggered.&lt;/p&gt; &#xA;&lt;p&gt;Dot marking&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking1.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  // Collection of dates that have to be marked. Default = {}&#xA;  markedDates={{&#xA;    &#39;2012-05-16&#39;: {selected: true, marked: true, selectedColor: &#39;blue&#39;},&#xA;    &#39;2012-05-17&#39;: {marked: true},&#xA;    &#39;2012-05-18&#39;: {marked: true, dotColor: &#39;red&#39;, activeOpacity: 0},&#xA;    &#39;2012-05-19&#39;: {disabled: true, disableTouchEvent: true}&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can customize a dot color for each day independently.&lt;/p&gt; &#xA;&lt;p&gt;Multi-Dot marking&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking4.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;markingType={&#39;multi-dot&#39;}&lt;/code&gt; if you want to display more than one dot. Both the &lt;code&gt;&amp;lt;Calendar/&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;CalendarList/&amp;gt;&lt;/code&gt; support multiple dots by using &lt;code&gt;dots&lt;/code&gt; array in &lt;code&gt;markedDates&lt;/code&gt; prop. The property &lt;code&gt;color&lt;/code&gt; is mandatory while &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;selectedColor&lt;/code&gt; are optional. If key is omitted then the array index is used as key. If &lt;code&gt;selectedColor&lt;/code&gt; is omitted then &lt;code&gt;color&lt;/code&gt; will be used for selected dates.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const vacation = {key: &#39;vacation&#39;, color: &#39;red&#39;, selectedDotColor: &#39;blue&#39;};&#xA;const massage = {key: &#39;massage&#39;, color: &#39;blue&#39;, selectedDotColor: &#39;blue&#39;};&#xA;const workout = {key: &#39;workout&#39;, color: &#39;green&#39;};&#xA;&#xA;&amp;lt;Calendar&#xA;  markingType={&#39;multi-dot&#39;}&#xA;  markedDates={{&#xA;    &#39;2017-10-25&#39;: {dots: [vacation, massage, workout], selected: true, selectedColor: &#39;red&#39;},&#xA;    &#39;2017-10-26&#39;: {dots: [massage, workout], disabled: true}&#xA;  }}&#xA;/&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Period marking&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking2.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking3.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  markingType={&#39;period&#39;}&#xA;  markedDates={{&#xA;    &#39;2012-05-20&#39;: {textColor: &#39;green&#39;},&#xA;    &#39;2012-05-22&#39;: {startingDay: true, color: &#39;green&#39;},&#xA;    &#39;2012-05-23&#39;: {selected: true, endingDay: true, color: &#39;green&#39;, textColor: &#39;gray&#39;},&#xA;    &#39;2012-05-04&#39;: {disabled: true, startingDay: true, color: &#39;green&#39;, endingDay: true}&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Multi-period marking&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking6.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: This marking is only fully supported by the &lt;code&gt;&amp;lt;Calendar/&amp;gt;&lt;/code&gt; component because it expands its height. Usage with &lt;code&gt;&amp;lt;CalendarList/&amp;gt;&lt;/code&gt; might lead to overflow issues.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  markingType=&#34;multi-period&#34;&#xA;  markedDates={{&#xA;    &#39;2017-12-14&#39;: {&#xA;      periods: [&#xA;        {startingDay: false, endingDay: true, color: &#39;#5f9ea0&#39;},&#xA;        {startingDay: false, endingDay: true, color: &#39;#ffa500&#39;},&#xA;        {startingDay: true, endingDay: false, color: &#39;#f0e68c&#39;}&#xA;      ]&#xA;    },&#xA;    &#39;2017-12-15&#39;: {&#xA;      periods: [&#xA;        {startingDay: true, endingDay: false, color: &#39;#ffa500&#39;},&#xA;        {color: &#39;transparent&#39;},&#xA;        {startingDay: false, endingDay: false, color: &#39;#f0e68c&#39;}&#xA;      ]&#xA;    }&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Custom marking allows you to customize each marker with custom styles.&lt;/p&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/marking5.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  markingType={&#39;custom&#39;}&#xA;  markedDates={{&#xA;    &#39;2018-03-28&#39;: {&#xA;      customStyles: {&#xA;        container: {&#xA;          backgroundColor: &#39;green&#39;&#xA;        },&#xA;        text: {&#xA;          color: &#39;black&#39;,&#xA;          fontWeight: &#39;bold&#39;&#xA;        }&#xA;      }&#xA;    },&#xA;    &#39;2018-03-29&#39;: {&#xA;      customStyles: {&#xA;        container: {&#xA;          backgroundColor: &#39;white&#39;,&#xA;          elevation: 2&#xA;        },&#xA;        text: {&#xA;          color: &#39;blue&#39;&#xA;        }&#xA;      }&#xA;    }&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NEW!&lt;/strong&gt; While we still don&#39;t support multi marking type, we add the possibility to combine between &lt;code&gt;period&lt;/code&gt; and &lt;code&gt;simple&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  markingType={&#39;period&#39;}&#xA;  markedDates={{&#xA;    &#39;2012-05-15&#39;: {marked: true, dotColor: &#39;#50cebb&#39;},&#xA;    &#39;2012-05-16&#39;: {marked: true, dotColor: &#39;#50cebb&#39;},&#xA;    &#39;2012-05-21&#39;: {startingDay: true, color: &#39;#50cebb&#39;, textColor: &#39;white&#39;},&#xA;    &#39;2012-05-22&#39;: {color: &#39;#70d7c7&#39;, textColor: &#39;white&#39;},&#xA;    &#39;2012-05-23&#39;: {color: &#39;#70d7c7&#39;, textColor: &#39;white&#39;, marked: true, dotColor: &#39;white&#39;},&#xA;    &#39;2012-05-24&#39;: {color: &#39;#70d7c7&#39;, textColor: &#39;white&#39;},&#xA;    &#39;2012-05-25&#39;: {endingDay: true, color: &#39;#50cebb&#39;, textColor: &#39;white&#39;}&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;350&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/multi-marking.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that different marking types are not compatible. You can use just one marking style for a calendar.&lt;/p&gt; &#xA;&lt;h4&gt;Displaying data loading indicator&lt;/h4&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/loader.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;The loading indicator next to the month name will be displayed if &lt;code&gt;&amp;lt;Calendar/&amp;gt;&lt;/code&gt; has &lt;code&gt;displayLoadingIndicator&lt;/code&gt; prop and the &lt;code&gt;markedDates&lt;/code&gt; collection does not have a value for every day of the month in question. When you load data for days, just set &lt;code&gt;[]&lt;/code&gt; or special marking value to all days in &lt;code&gt;markedDates&lt;/code&gt; collection.&lt;/p&gt; &#xA;&lt;h4&gt;Customizing look &amp;amp; feel&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  // Specify style for calendar container element. Default = {}&#xA;  style={{&#xA;    borderWidth: 1,&#xA;    borderColor: &#39;gray&#39;,&#xA;    height: 350&#xA;  }}&#xA;  // Specify theme properties to override specific styles for calendar parts. Default = {}&#xA;  theme={{&#xA;    backgroundColor: &#39;#ffffff&#39;,&#xA;    calendarBackground: &#39;#ffffff&#39;,&#xA;    textSectionTitleColor: &#39;#b6c1cd&#39;,&#xA;    textSectionTitleDisabledColor: &#39;#d9e1e8&#39;,&#xA;    selectedDayBackgroundColor: &#39;#00adf5&#39;,&#xA;    selectedDayTextColor: &#39;#ffffff&#39;,&#xA;    todayTextColor: &#39;#00adf5&#39;,&#xA;    dayTextColor: &#39;#2d4150&#39;,&#xA;    textDisabledColor: &#39;#d9e1e8&#39;,&#xA;    dotColor: &#39;#00adf5&#39;,&#xA;    selectedDotColor: &#39;#ffffff&#39;,&#xA;    arrowColor: &#39;orange&#39;,&#xA;    disabledArrowColor: &#39;#d9e1e8&#39;,&#xA;    monthTextColor: &#39;blue&#39;,&#xA;    indicatorColor: &#39;blue&#39;,&#xA;    textDayFontFamily: &#39;monospace&#39;,&#xA;    textMonthFontFamily: &#39;monospace&#39;,&#xA;    textDayHeaderFontFamily: &#39;monospace&#39;,&#xA;    textDayFontWeight: &#39;300&#39;,&#xA;    textMonthFontWeight: &#39;bold&#39;,&#xA;    textDayHeaderFontWeight: &#39;300&#39;,&#xA;    textDayFontSize: 16,&#xA;    textMonthFontSize: 16,&#xA;    textDayHeaderFontSize: 16&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Customize days titles with disabled styling&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  theme={{&#xA;    textSectionTitleDisabledColor: &#39;#d9e1e8&#39;&#xA;  }}&#xA;  markedDates={{&#xA;    ...this.getDisabledDates(&#39;2012-05-01&#39;, &#39;2012-05-30&#39;, [0, 6])&#xA;  }}&#xA;  disabledDaysIndexes={[0, 6]}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Advanced styling&lt;/h4&gt; &#xA;&lt;p&gt;If you want to have complete control over the calendar styles you can do it by overriding default &lt;code&gt;style.ts&lt;/code&gt; files. For example, if you want to override &lt;code&gt;&amp;lt;CalendarHeader/&amp;gt;&lt;/code&gt; style first you have to find stylesheet id for this file:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wix/react-native-calendars/raw/master/src/calendar/header/style.ts#L60&#34;&gt;https://github.com/wix/react-native-calendars/blob/master/src/calendar/header/style.ts#L60&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this case it is &lt;code&gt;stylesheet.calendar.header&lt;/code&gt;. Next you can add overriding stylesheet to your theme with this id.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wix/react-native-calendars/raw/master/example/src/screens/calendars.tsx#L142&#34;&gt;https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.tsx#L142&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;theme={{&#xA;  arrowColor: &#39;white&#39;,&#xA;  &#39;stylesheet.calendar.header&#39;: {&#xA;    week: {&#xA;      marginTop: 5,&#xA;      flexDirection: &#39;row&#39;,&#xA;      justifyContent: &#39;space-between&#39;&#xA;    }&#xA;  }&#xA;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Individual day header styling&lt;/h4&gt; &#xA;&lt;p&gt;Using the above advanced styling, it is possible to set styles independently for each day&#39;s header. If we wanted to make the header for Sunday red, and Saturday blue, we could write something like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;theme={{&#xA;  &#39;stylesheet.calendar.header&#39;: {&#xA;    dayTextAtIndex0: {&#xA;      color: &#39;red&#39;&#xA;    },&#xA;    dayTextAtIndex6: {&#xA;      color: &#39;blue&#39;&#xA;    }&#xA;  }&#xA;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;kbd&gt; &lt;img height=&#34;50&#34; src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/day-header-style.png?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Issues that arise because something breaks after using stylesheet override will not be supported. Use this option at your own risk.&lt;/p&gt; &#xA;&lt;h4&gt;Overriding day component&lt;/h4&gt; &#xA;&lt;p&gt;If you need custom functionality not supported by current day component implementations you can pass your own custom day component to the calendar.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Calendar&#xA;  style={[styles.calendar, {height: 300}]}&#xA;  dayComponent={({date, state}) =&amp;gt; {&#xA;    return (&#xA;      &amp;lt;View&amp;gt;&#xA;        &amp;lt;Text style={{textAlign: &#39;center&#39;, color: state === &#39;disabled&#39; ? &#39;gray&#39; : &#39;black&#39;}}&amp;gt;{date.day}&amp;lt;/Text&amp;gt;&#xA;      &amp;lt;/View&amp;gt;&#xA;    );&#xA;  }}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;dayComponent&lt;/code&gt; prop has to receive a RN component or a function that receive props. The &lt;code&gt;dayComponent&lt;/code&gt; will receive such props:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;state - disabled if the day should be disabled (this is decided by base calendar component).&lt;/li&gt; &#xA; &lt;li&gt;marking - &lt;code&gt;markedDates&lt;/code&gt; value for this day.&lt;/li&gt; &#xA; &lt;li&gt;date - the date object representing this day.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Don&#39;t forget to implement &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; for your custom day component to make the calendar perform better&lt;/p&gt; &#xA;&lt;p&gt;If you implement an awesome day component please make a PR so that other people could use it :)&lt;/p&gt; &#xA;&lt;h3&gt;CalendarList&lt;/h3&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/calendar-list.gif?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;CalendarList/&amp;gt;&lt;/code&gt; is scrollable semi-infinite calendar composed of &lt;code&gt;&amp;lt;Calendar/&amp;gt;&lt;/code&gt; components. Currently it is possible to scroll 4 years back and 4 years to the future. All parameters that are available for &lt;code&gt;&amp;lt;Calendar/&amp;gt;&lt;/code&gt; are also available for this component. There are also some additional params that can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;CalendarList&#xA;  // Callback which gets executed when visible months change in scroll view. Default = undefined&#xA;  onVisibleMonthsChange={(months) =&amp;gt; {console.log(&#39;now these months are visible&#39;, months);}}&#xA;  // Max amount of months allowed to scroll to the past. Default = 50&#xA;  pastScrollRange={50}&#xA;  // Max amount of months allowed to scroll to the future. Default = 50&#xA;  futureScrollRange={50}&#xA;  // Enable or disable scrolling of calendar list&#xA;  scrollEnabled={true}&#xA;  // Enable or disable vertical scroll indicator. Default = false&#xA;  showScrollIndicator={true}&#xA;  ...calendarParams&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Horizontal CalendarList&lt;/h4&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/horizontal-calendar-list.gif?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also make the &lt;code&gt;CalendarList&lt;/code&gt; scroll horizontally. To do that you need to pass specific props to the &lt;code&gt;CalendarList&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;CalendarList&#xA;  // Enable horizontal scrolling, default = false&#xA;  horizontal={true}&#xA;  // Enable paging on horizontal, default = false&#xA;  pagingEnabled={true}&#xA;  // Set custom calendarWidth.&#xA;  calendarWidth={320}&#xA;  ...calendarListParams&#xA;  ...calendarParams&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Agenda&lt;/h3&gt; &#xA;&lt;kbd&gt; &lt;img src=&#34;https://github.com/wix-private/wix-react-native-calendar/raw/master/demo/assets/agenda.gif?raw=true&#34;&gt; &lt;/kbd&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;An advanced &lt;code&gt;Agenda&lt;/code&gt; component that can display interactive listings for calendar day items.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Agenda&#xA;  // The list of items that have to be displayed in agenda. If you want to render item as empty date&#xA;  // the value of date key has to be an empty array []. If there exists no value for date key it is&#xA;  // considered that the date in question is not yet loaded&#xA;  items={{&#xA;    &#39;2012-05-22&#39;: [{name: &#39;item 1 - any js object&#39;}],&#xA;    &#39;2012-05-23&#39;: [{name: &#39;item 2 - any js object&#39;, height: 80}],&#xA;    &#39;2012-05-24&#39;: [],&#xA;    &#39;2012-05-25&#39;: [{name: &#39;item 3 - any js object&#39;}, {name: &#39;any js object&#39;}]&#xA;  }}&#xA;  // Callback that gets called when items for a certain month should be loaded (month became visible)&#xA;  loadItemsForMonth={month =&amp;gt; {&#xA;    console.log(&#39;trigger items loading&#39;);&#xA;  }}&#xA;  // Callback that fires when the calendar is opened or closed&#xA;  onCalendarToggled={calendarOpened =&amp;gt; {&#xA;    console.log(calendarOpened);&#xA;  }}&#xA;  // Callback that gets called on day press&#xA;  onDayPress={day =&amp;gt; {&#xA;    console.log(&#39;day pressed&#39;);&#xA;  }}&#xA;  // Callback that gets called when day changes while scrolling agenda list&#xA;  onDayChange={day =&amp;gt; {&#xA;    console.log(&#39;day changed&#39;);&#xA;  }}&#xA;  // Initially selected day&#xA;  selected={&#39;2012-05-16&#39;}&#xA;  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined&#xA;  minDate={&#39;2012-05-10&#39;}&#xA;  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined&#xA;  maxDate={&#39;2012-05-30&#39;}&#xA;  // Max amount of months allowed to scroll to the past. Default = 50&#xA;  pastScrollRange={50}&#xA;  // Max amount of months allowed to scroll to the future. Default = 50&#xA;  futureScrollRange={50}&#xA;  // Specify how each item should be rendered in agenda&#xA;  renderItem={(item, firstItemInDay) =&amp;gt; {&#xA;    return &amp;lt;View /&amp;gt;;&#xA;  }}&#xA;  // Specify how each date should be rendered. day can be undefined if the item is not first in that day&#xA;  renderDay={(day, item) =&amp;gt; {&#xA;    return &amp;lt;View /&amp;gt;;&#xA;  }}&#xA;  // Specify how empty date content with no items should be rendered&#xA;  renderEmptyDate={() =&amp;gt; {&#xA;    return &amp;lt;View /&amp;gt;;&#xA;  }}&#xA;  // Specify how agenda knob should look like&#xA;  renderKnob={() =&amp;gt; {&#xA;    return &amp;lt;View /&amp;gt;;&#xA;  }}&#xA;  // Override inner list with a custom implemented component&#xA;  renderList={listProps =&amp;gt; {&#xA;    return &amp;lt;MyCustomList {...listProps} /&amp;gt;;&#xA;  }}&#xA;  // Specify what should be rendered instead of ActivityIndicator&#xA;  renderEmptyData={() =&amp;gt; {&#xA;    return &amp;lt;View /&amp;gt;;&#xA;  }}&#xA;  // Specify your item comparison function for increased performance&#xA;  rowHasChanged={(r1, r2) =&amp;gt; {&#xA;    return r1.text !== r2.text;&#xA;  }}&#xA;  // Hide knob button. Default = false&#xA;  hideKnob={true}&#xA;  // When `true` and `hideKnob` prop is `false`, the knob will always be visible and the user will be able to drag the knob up and close the calendar. Default = false&#xA;  showClosingKnob={false}&#xA;  // By default, agenda dates are marked if they have at least one item, but you can override this if needed&#xA;  markedDates={{&#xA;    &#39;2012-05-16&#39;: {selected: true, marked: true},&#xA;    &#39;2012-05-17&#39;: {marked: true},&#xA;    &#39;2012-05-18&#39;: {disabled: true}&#xA;  }}&#xA;  // If disabledByDefault={true} dates flagged as not disabled will be enabled. Default = false&#xA;  disabledByDefault={true}&#xA;  // If provided, a standard RefreshControl will be added for &#34;Pull to Refresh&#34; functionality. Make sure to also set the refreshing prop correctly&#xA;  onRefresh={() =&amp;gt; console.log(&#39;refreshing...&#39;)}&#xA;  // Set this true while waiting for new data from a refresh&#xA;  refreshing={false}&#xA;  // Add a custom RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView&#xA;  refreshControl={null}&#xA;  // Agenda theme&#xA;  theme={{&#xA;    ...calendarTheme,&#xA;    agendaDayTextColor: &#39;yellow&#39;,&#xA;    agendaDayNumColor: &#39;green&#39;,&#xA;    agendaTodayColor: &#39;red&#39;,&#xA;    agendaKnobColor: &#39;blue&#39;&#xA;  }}&#xA;  // Agenda container style&#xA;  style={{}}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tautvilas/&#34;&gt;Tautvilas Mecinskas&lt;/a&gt; - Initial code - &lt;a href=&#34;https://twitter.com/Tautvilas&#34;&gt;@tautvilas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Katrin Zotchev - Initial design - &lt;a href=&#34;https://twitter.com/katrin_zot&#34;&gt;@katrin_zot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also the list of &lt;a href=&#34;https://github.com/wix/react-native-calendar-components/contributors&#34;&gt;contributors&lt;/a&gt; who participated in this project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are most welcome! Please &lt;code&gt;npm run test&lt;/code&gt; and &lt;code&gt;npm run lint&lt;/code&gt; before push. Don&#39;t forget to add a &lt;strong&gt;title&lt;/strong&gt; and a &lt;strong&gt;description&lt;/strong&gt; that explain the issue you&#39;re trying to solve and your suggested solution. Screenshots and gifs are VERY helpful. Please do NOT format the files as we are trying to keep a unified syntax and the reviewing process fast and simple.&lt;/p&gt;</summary>
  </entry>
</feed>