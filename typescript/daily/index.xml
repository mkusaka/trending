<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-22T01:49:10Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sadmann7/shadcn-table</title>
    <updated>2024-04-22T01:49:10Z</updated>
    <id>tag:github.com,2024-04-22:/sadmann7/shadcn-table</id>
    <link href="https://github.com/sadmann7/shadcn-table" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A shadcn table component with server-side sorting, filtering, and pagination.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://table.sadmn.com&#34;&gt;Shadcn Table&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This is a shadcn table component with server-side sorting, filtering, and pagination. It is bootstrapped with &lt;code&gt;create-t3-app&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://table.sadmn.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sadmann7/shadcn-table/main/public/images/screenshot.png&#34; alt=&#34;Shadcn Table&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; This project is still in development and is not ready for production use.&lt;/p&gt; &#xA; &lt;p&gt;It uses new technologies (ppr, and drizzle ORM) which are subject to change and may break your application.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Framework:&lt;/strong&gt; &lt;a href=&#34;https://nextjs.org&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Styling:&lt;/strong&gt; &lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI Components:&lt;/strong&gt; &lt;a href=&#34;https://ui.shadcn.com&#34;&gt;shadcn/ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Table package:&lt;/strong&gt; &lt;a href=&#34;https://tanstack.com/table/latest&#34;&gt;TanStack/react-table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Database:&lt;/strong&gt; &lt;a href=&#34;https://neon.tech&#34;&gt;Neon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ORM:&lt;/strong&gt; &lt;a href=&#34;https://orm.drizzle.team&#34;&gt;Drizzle ORM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Validation:&lt;/strong&gt; &lt;a href=&#34;https://zod.dev&#34;&gt;Zod&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Server-side pagination, sorting, and filtering (via &lt;code&gt;useDataTable&lt;/code&gt; hook)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Customizable columns (&lt;code&gt;dataTable&lt;/code&gt; and &lt;code&gt;columns&lt;/code&gt; props)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic debounced search filters, and faceted filters (&lt;code&gt;filterFields&lt;/code&gt; prop)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dynamic &lt;code&gt;Data-Table-Toolbar&lt;/code&gt; with search, filters, and actions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Optional &lt;code&gt;Notion&lt;/code&gt; like advanced filtering (&lt;code&gt;enableAdvancedFilter&lt;/code&gt; prop)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Optional &lt;code&gt;Linear&lt;/code&gt; like floating bar on row selection (&lt;code&gt;floatingBar&lt;/code&gt; prop)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sadmann7/shadcn-table&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies using pnpm&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and update the variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the development server&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push the database schema&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm run db:push&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build your own Table&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the following folders and files into your project (configured with ) at the exact specific locations&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;src/components/data-table&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;src/db/index.ts&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;src/hooks&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;src/lib&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;src/types&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Also install the required shadcn components and other required packages with the following commands:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dlx shadcn-ui@latest init&#xA;&#xA;pnpm dlx shadcn-ui@latest add badge button calendar checkbox command dialog dropdown-menu form input label popover select separator skeleton sonner table toggle-group tooltip&#xA;&#xA;pnpm add drizzle-orm postgres @tanstack/react-table zod @t3-oss/env-nextjs&#xA;pnpm add -D drizzle-kit dotenv-cli pg tsx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure your Environment Variables Then set up the Database URL, for this example, we&#39;re using PlanetScale MySQL2 Database. Our schemas will also be made using this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Database Actions: For this you can use any ORM of your choice, but for the sake of this particular example, we&#39;re using &lt;a href=&#34;https://orm.drizzle.team&#34;&gt;Drizzle ORM&lt;/a&gt; and &lt;a href=&#34;https://neon.tech/&#34;&gt;Neon&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;As an example, lets use the &lt;code&gt;tasks&lt;/code&gt; table.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Create the Table Schema at &lt;code&gt;@/db/schema.ts&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Create the associated zod validations &lt;code&gt;@/lib/validations/tasks.ts&lt;/code&gt; file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting up the Table&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Create Files&lt;/strong&gt;: Create &lt;code&gt;page.tsx&lt;/code&gt; and, if needed, &lt;code&gt;layout.tsx&lt;/code&gt; in your app directory.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Copy Directories&lt;/strong&gt;: Copy &lt;code&gt;./_components&lt;/code&gt; and &lt;code&gt;./_lib&lt;/code&gt; directories into your project.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Update Queries/Mutations&lt;/strong&gt;: Modify &lt;code&gt;./_lib/queries.ts&lt;/code&gt;, &lt;code&gt;./_lib/actions.ts&lt;/code&gt;, and &lt;code&gt;./_lib/mutations.ts&lt;/code&gt; to match your database operations.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Update Floating Bar&lt;/strong&gt;: Update &lt;code&gt;./_components/tasks-table-floating-bar.tsx&lt;/code&gt; to match your table&#39;s actions (optional).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Define Table Columns&lt;/strong&gt;: Update &lt;code&gt;./_components/tasks-table-columns.tsx&lt;/code&gt; to define column headers, actions, searchable and filterable columns.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Setup Data Fetching&lt;/strong&gt;: In &lt;code&gt;./page.tsx&lt;/code&gt;, define &lt;code&gt;getTasksPromise&lt;/code&gt;, &lt;code&gt;getTaskCountByStatus&lt;/code&gt;, and &lt;code&gt;getTaskCountByPriority&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Fetch Data&lt;/strong&gt;: In &lt;code&gt;./_components/tasks-table.tsx&lt;/code&gt;, consume the &lt;code&gt;getTasksPromise&lt;/code&gt; promise using the &lt;code&gt;React.use&lt;/code&gt; hook. The promise is passed to trigger the &lt;code&gt;suspense&lt;/code&gt; boundary.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Memoize Table Columns&lt;/strong&gt;: In &lt;code&gt;./_components/tasks-table.tsx&lt;/code&gt;, memoize columns defined in &lt;code&gt;./_components/tasks-table-columns.tsx&lt;/code&gt; using &lt;code&gt;React.useMemo&lt;/code&gt; hook to prevent unnecessary re-renders.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Use Data Table Hook&lt;/strong&gt;: In &lt;code&gt;./_components/tasks-table.tsx&lt;/code&gt;, call &lt;code&gt;./hooks/useTasksTable.tsx&lt;/code&gt; hook to handle server-side pagination, sorting, and filtering.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remove Tasks Table Provider&lt;/strong&gt;: Make sure to remove the provider from &lt;code&gt;./components/tasks-table-provider.tsx&lt;/code&gt;. The provider is used to showcase some additional features like floating bar and advanced filters.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Codebase Overview&lt;/h2&gt; &#xA;&lt;p&gt;Watch the codebase overview video on &lt;a href=&#34;https://www.youtube.com/watch?v=BsvjF5Y6-C8&amp;amp;t=1s&#34;&gt;YouTube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Consider subscribing to Kavin Desi Valli&#39;s &lt;a href=&#34;https://www.youtube.com/@livecode247&#34;&gt;YouTube channel&lt;/a&gt; for more videos.&lt;/p&gt; &#xA;&lt;h2&gt;How do I deploy this?&lt;/h2&gt; &#xA;&lt;p&gt;Follow the deployment guides for &lt;a href=&#34;https://create.t3.gg/en/deployment/vercel&#34;&gt;Vercel&lt;/a&gt;, &lt;a href=&#34;https://create.t3.gg/en/deployment/netlify&#34;&gt;Netlify&lt;/a&gt; and &lt;a href=&#34;https://create.t3.gg/en/deployment/docker&#34;&gt;Docker&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wvit/web-document</title>
    <updated>2024-04-22T01:49:10Z</updated>
    <id>tag:github.com,2024-04-22:/wvit/web-document</id>
    <link href="https://github.com/wvit/web-document" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A browser extension for saving web documents locally, allowing you to access them offline and quickly search for webpage content without an internet connection, while also saving browser memory usage.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Web document local management browser extension.&lt;/h2&gt; &#xA;&lt;p&gt;A browser extension for saving web documents locally, allowing you to access them offline and quickly search for webpage content without an internet connection, while also saving browser memory usage.&lt;/p&gt; &#xA;&lt;p&gt;English ｜ &lt;a href=&#34;https://raw.githubusercontent.com/wvit/web-document/main/README-zh_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features and capabilities&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Save your webpages with their original styles to the browser&#39;s database, without worrying about any privacy leaks, and without relying on the network.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remove unnecessary content elements and large images to save disk space.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable fast keyword search to quickly locate saved page content, facilitating efficient filtering.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multiple cached pages from the same website share related CSS files and other resources, saving disk space.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When you need to access content from multiple websites, using this plugin eliminates the need to open multiple browser tabs, saving memory resources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The plugin locally stores all your preference configurations, such as previously used search keywords and sorting preferences.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports importing and exporting documents in JSON format, and also supports importing from remote URLs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;（Please note that this plugin is not suitable for interactive websites that rely on JavaScript or make frequent requests to remote servers, as it is not designed for such scenarios.）&lt;/p&gt; &#xA;&lt;h3&gt;Quick tutorial&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wvit/web-document/assets/21981758/73822f8f-852a-4d71-b4a9-0d6011256efd&#34;&gt;https://github.com/wvit/web-document/assets/21981758/73822f8f-852a-4d71-b4a9-0d6011256efd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Plugin screenshot&lt;/h3&gt; &#xA;&lt;h6&gt;(Right-click menu - buttons like &#39;Save Page).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img6.jpg&#34; alt=&#34;buttons like &#39;Save Page&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Page document homepage - view page content).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img3.jpg&#34; alt=&#34;view page content&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Page document homepage - search keywords).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img2.jpg&#34; alt=&#34;search keywords&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Plugin popup - arranged by website).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img4.jpg&#34; alt=&#34;arranged by website&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Plugin popup - default arrangement and deletion).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img5.jpg&#34; alt=&#34;default arrangement and deletion&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Comparison with original website&#39;s memory resources).gif&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img1.gif&#34; alt=&#34;memory resources&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Precautions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;To save the webpage before installing the plugin, please refresh the webpage once.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This plugin will use some system notifications. If you don&#39;t receive notifications even after successful saving, you can check the notification settings of your system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h6&gt;(Plugin prompts).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img7.jpg&#34; alt=&#34;Plugin prompts&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(Open system notification settings).jpg&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wvit.github.io/static/web-document/img8.jpg&#34; alt=&#34;Open system notification settings&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PKief/vscode-material-icon-theme</title>
    <updated>2024-04-22T01:49:10Z</updated>
    <id>tag:github.com,2024-04-22:/PKief/vscode-material-icon-theme</id>
    <link href="https://github.com/PKief/vscode-material-icon-theme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Available on the VSCode Marketplace&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/logo.png&#34; alt=&#34;logo&#34; width=&#34;200&#34;&gt; &lt;br&gt;&lt;br&gt; Material Icon Theme &lt;br&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Get the Material Design icons into your VS Code.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&#34;&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/v/PKief.material-icon-theme?style=for-the-badge&amp;amp;colorA=252526&amp;amp;colorB=43A047&amp;amp;label=VERSION&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&#34;&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/r/PKief.material-icon-theme?style=for-the-badge&amp;amp;colorA=252526&amp;amp;colorB=43A047&amp;amp;label=Rating&#34; alt=&#34;Rating&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&#34;&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/i/PKief.material-icon-theme?style=for-the-badge&amp;amp;colorA=252526&amp;amp;colorB=43A047&amp;amp;label=Installs&#34; alt=&#34;Installs&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&#34;&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/d/PKief.material-icon-theme?style=for-the-badge&amp;amp;colorA=252526&amp;amp;colorB=43A047&amp;amp;label=Downloads&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;File icons&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/fileIcons.png&#34; alt=&#34;file icons&#34;&gt; &#xA;&lt;h3&gt;Folder icons&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/folderIcons.png&#34; alt=&#34;folder icons&#34;&gt; &#xA;&lt;h4&gt;Customize file &amp;amp; folder color&lt;/h4&gt; &#xA;&lt;p&gt;You can change the color of the default file and folder icons using the command palette:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/set-folder-color.gif&#34; alt=&#34;custom folder colors&#34;&gt; &#xA;&lt;p&gt;or via user settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.folders.color&#34;: &#34;#ef5350&#34;,&#xA;&#34;material-icon-theme.files.color&#34;: &#34;#42a5f5&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Folder themes&lt;/h4&gt; &#xA;&lt;p&gt;You can change the design of the folder icons using the command palette:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/set-folder-theme.gif&#34; alt=&#34;folder themes&#34;&gt; &#xA;&lt;p&gt;or via user settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.folders.theme&#34;: &#34;specific&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom icon opacity&lt;/h2&gt; &#xA;&lt;p&gt;You can set a custom opacity for the icons:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.opacity&#34;: 0.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom icon saturation&lt;/h2&gt; &#xA;&lt;p&gt;If colors do not make you happy you can change the icons to have less saturation making them look grayish or completely grayscale by setting saturation to 0:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.saturation&#34;: 0.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also achieve no saturation (i.e., grayscale) by setting &lt;strong&gt;Toggle Grayscale&lt;/strong&gt; to ON.&lt;/p&gt; &#xA;&lt;h2&gt;Custom icon associations&lt;/h2&gt; &#xA;&lt;p&gt;You can customize the icon associations directly in the user settings.&lt;/p&gt; &#xA;&lt;h3&gt;File associations&lt;/h3&gt; &#xA;&lt;p&gt;With the &lt;code&gt;*.[extension]&lt;/code&gt; pattern you can define custom file icon associations. For example you could define an icon for &lt;code&gt;*.sample&lt;/code&gt; and every file that ends with &lt;code&gt;.sample&lt;/code&gt; will have the defined icon. However, not all files with the same file extension always have the same icon. For some specific file names there is a special icon. In order to overwrite all the specific file icons as well, two asterisks must be set instead of one, i.e. &lt;code&gt;**.[extension]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If there&#39;s no leading &lt;code&gt;*&lt;/code&gt; it will be automatically configured as filename and not as file extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.files.associations&#34;: {&#xA;    &#34;*.ts&#34;: &#34;typescript&#34;,&#xA;    &#34;**.json&#34;: &#34;json&#34;,&#xA;    &#34;fileName.ts&#34;: &#34;angular&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom SVG icons&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s possible to add custom icons by adding a path to an SVG file which is located relative to the extension&#39;s dist folder. However, the restriction applies that the directory in which the custom icons are located must be within the &lt;code&gt;extensions&lt;/code&gt; directory of the &lt;code&gt;.vscode&lt;/code&gt; folder in the user directory.&lt;/p&gt; &#xA;&lt;p&gt;For example a custom SVG file called &lt;code&gt;sample.svg&lt;/code&gt; can be placed in an &lt;code&gt;icons&lt;/code&gt; folder inside of VS Code&#39;s &lt;code&gt;extensions&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.vscode&#xA; ┗ extensions&#xA;   ┗ icons&#xA;     ┗ sample.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the settings.json (User Settings only!) the icon can be associated to a file name or file extension like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.files.associations&#34;: {&#xA;    &#34;fileName.ts&#34;: &#34;../../icons/sample&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The custom file name must be configured in the settings without the file ending &lt;code&gt;.svg&lt;/code&gt; as shown in the example above.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Folder associations&lt;/h3&gt; &#xA;&lt;p&gt;The following configuration can customize the folder icons. It is also possible to overwrite existing associations and create nice combinations. For example you could change the folder theme to &#34;classic&#34; and define icons only for the folder names you like.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.folders.associations&#34;: {&#xA;    &#34;customFolderName&#34;: &#34;src&#34;,&#xA;    &#34;sample&#34;: &#34;dist&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom SVG folder icons&lt;/h4&gt; &#xA;&lt;p&gt;Similar to the files, it is also possible to reference your own SVG icons for folder icons. Here it&#39;s important to provide two SVG files: one for the folder if it&#39;s closed and another one for the opened state. These two files - let&#39;s call them &#34;folder-sample.svg&#34; and &#34;folder-sample-open.svg&#34; - have to be placed into a directory which is relative to the extensions dist folder. This directory has to be somewhere inside of the &lt;code&gt;.vscode/extensions&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;In our example we place them into an &lt;code&gt;icons&lt;/code&gt; folder inside of the &lt;code&gt;.vscode/extensions&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.vscode&#xA; ┗ extensions&#xA;   ┗ icons&#xA;     ┣ folder-sample.svg&#xA;     ┗ folder-sample-open.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the settings.json (User Settings only!) the folder icons can be associated to a folder name (e.g. &#34;src&#34;) like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.folders.associations&#34;: {&#xA;    &#34;src&#34;: &#34;../../../../icons/folder-sample&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Language associations&lt;/h3&gt; &#xA;&lt;p&gt;With the following configuration you can customize the language icons. It is also possible to overwrite existing associations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;material-icon-theme.languages.associations&#34;: {&#xA;    &#34;languageId&#34;: &#34;iconName&#34;,&#xA;    &#34;json&#34;: &#34;json&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see the available icon names in the overview above. See &#34;&lt;a href=&#34;https://code.visualstudio.com/docs/languages/identifiers#_known-language-identifiers&#34;&gt;Known language identifiers&lt;/a&gt;&#34; in the VS Code documentation for a list of permitted values for &lt;code&gt;languageId&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;Press &lt;code&gt;Ctrl-Shift-P&lt;/code&gt; to open the command palette and type &lt;code&gt;Material Icons&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/commandPalette.png&#34; alt=&#34;commands&#34;&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Activate Icon Theme&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Activate the icon theme.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Change File Color&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the color of the file icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Change Folder Color&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the color of the folder icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Change Folder Theme&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the design of the folder icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Change Opacity&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the opacity of the icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Change Saturation&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Change the saturation value of the icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Configure Icon Packs&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Selects an icon pack that enables additional icons (e.g. for Angular, React, Ngrx).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Toggle Explorer Arrows&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show or hide the arrows next to the folder icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Restore Default Configuration&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reset to the default configuration.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Toggle Grayscale&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set icon saturation to &lt;code&gt;0&lt;/code&gt; (grayscale), or &lt;code&gt;1&lt;/code&gt; (color).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Icon sources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://materialdesignicons.com/&#34;&gt;Material Design Icons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/PKief/vscode-material-icon-theme/graphs/contributors&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PKief/vscode-material-icon-theme/main/images/contributors.png&#34; alt=&#34;Contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;strong&gt;Would you like to contribute?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Take a look at the &lt;a href=&#34;https://github.com/PKief/vscode-material-icon-theme/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and open a &lt;a href=&#34;https://github.com/PKief/vscode-material-icon-theme/issues&#34;&gt;new issue&lt;/a&gt; or &lt;a href=&#34;https://github.com/PKief/vscode-material-icon-theme/pulls&#34;&gt;pull request&lt;/a&gt; on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Related extensions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Claudiohbsantos/github-material-icons-extension&#34;&gt;Material Icons for GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>