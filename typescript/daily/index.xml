<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:35:55Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rgthree/rgthree-comfy</title>
    <updated>2024-07-01T01:35:55Z</updated>
    <id>tag:github.com,2024-07-01:/rgthree/rgthree-comfy</id>
    <link href="https://github.com/rgthree/rgthree-comfy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Making ComfyUI more comfortable!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; rgthree-comfy &lt;br&gt; &lt;sub&gt;&lt;sup&gt;&lt;i&gt;Making ComfyUI more comfortable!&lt;/i&gt;&lt;/sup&gt;&lt;/sub&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;#Ô∏è-the-nodes&#34;&gt;The Nodes&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/#-improvements--features&#34;&gt;Improvements &amp;amp; Features&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/#-link-fixer&#34;&gt;Link Fixer&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A collection of nodes and improvements created while messing around with ComfyUI. I made them for myself to make my workflow cleaner, easier, and faster. You&#39;re welcome to try them out. But remember, I made them for my own use cases :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/docs/rgthree_advanced.png&#34; alt=&#34;Context Node&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Get Started&lt;/h1&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the great &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI&#34;&gt;ComfyUi&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone this repo into &lt;code&gt;custom_modules&lt;/code&gt;: &lt;pre&gt;&lt;code&gt;cd ComfyUI/custom_nodes&#xA;git clone https://github.com/rgthree/rgthree-comfy.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start up ComfyUI.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;You can configure certain aspect of rgthree-comfy. For instance, perhaps a future ComfyUI change breaks rgthree-comfy, or you already have another extension that does something similar and you want to turn it off for rgthree-comfy.&lt;/p&gt; &#xA;&lt;p&gt;You can get to rgthree-settings by right-clicking on the empty part of the graph, and selecting &lt;code&gt;rgthree-comfy &amp;gt; Settings (rgthree-comfy)&lt;/code&gt; or by clicking the &lt;code&gt;rgthree-comfy settings&lt;/code&gt; in the ComfyUI settings dialog.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;(Note, settings are stored in an &lt;code&gt;rgthree_config.json&lt;/code&gt; in the &lt;code&gt;rgthree-comfy&lt;/code&gt; directory. There are other advanced settings that can only be configured there; You can copy default settings from &lt;code&gt;rgthree_config.json.default&lt;/code&gt; before &lt;code&gt;rgthree_config.json&lt;/code&gt; before modifying)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;‚ú¥Ô∏è The Nodes&lt;/h1&gt; &#xA;&lt;p&gt;Note, you can right-click on a bunch of the rgthree-comfy nodes and select &lt;code&gt;üõü Node Help&lt;/code&gt; menu item for in-app help when available.&lt;/p&gt; &#xA;&lt;h2&gt;Seed&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An intuitive seed control node for ComfyUI that works very much like Automatic1111&#39;s seed control.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;See More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set the seed value to &#34;-1&#34; to use a random seed every time&lt;/li&gt; &#xA;   &lt;li&gt;Set any other number in there to use as a static/fixed seed&lt;/li&gt; &#xA;   &lt;li&gt;Quick actions to randomize, or (re-)use the last queued seed.&lt;/li&gt; &#xA;   &lt;li&gt;Images metadata will store the seed value &lt;em&gt;(so dragging an image in, will have the seed field already fixed to its seed)&lt;/em&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Secret Features&lt;/em&gt;: You can manually set the seed value to &#34;-2&#34; or &#34;-3&#34; to increment or decrement the last seed value. If there was not last seed value, it will randomly use on first.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/docs/rgthree_seed.png&#34; alt=&#34;Router Node&#34;&gt;&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Reroute&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Keep your workflow neat with this much improved Reroute node with, like, actual rerouting with multiple directions and sizes.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use the right-click context menu to change the width, height and connection layout&lt;/li&gt; &#xA;   &lt;li&gt;Also toggle resizability (min size is 40x43 if resizing though), and title/type display.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/docs/rgthree_router.png&#34; alt=&#34;Router Node&#34;&gt;&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Bookmark (üîñ)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Place the bookmark node anywhere on screen to quickly navigate to that with a shortcut key.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;See More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Define the &lt;code&gt;shortcut_key&lt;/code&gt; to press to go right to that bookmark node, anchored in the top left.&lt;/li&gt; &#xA;   &lt;li&gt;You can also define the zoom level as well!&lt;/li&gt; &#xA;   &lt;li&gt;Pro tip: &lt;code&gt;shortcut_key&lt;/code&gt; can be multiple keys. For instance &#34;alt + shift + !&#34; would require pressing the alt key, the shift key, and the &#34;!&#34; (as in the &#34;1&#34; key, but with shift pressed) in order to trigger.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Context / Context Big&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Pass along in general flow properties, and merge in new data. Similar to some other node suites &#34;pipes&#34; but easier merging, is more easily interoperable with standard nodes by both combining and exploding all in a single node.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Context and Context Big are backwards compatible with each other. That is, an input connected to a Context Big will be passed through the CONTEXT outputs through normal Context nodes and available as an output on either (or, Context Big if the output is only on that node, like &#34;steps&#34;).&lt;/li&gt; &#xA;   &lt;li&gt;Pro Tip: When dragging a Context output over a nother node, hold down &#34;ctrl&#34; and release to automatically connect the other Context outputs to the hovered node.&lt;/li&gt; &#xA;   &lt;li&gt;Pro Tip: You can change between Context and Context Big nodes from the menu.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/docs/rgthree_context.png&#34; alt=&#34;Context Node&#34;&gt;&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Image Comparer&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Image Comparer node compares two images on top of each other.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; The right-click menu may show image options (Open Image, Save Image, etc.) which will correspond to the first image (image_a) if clicked on the left-half of the node, or the second image if on the right half of the node.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Inputs:&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;image_a&lt;/code&gt; &lt;em&gt;Required.&lt;/em&gt; The first image to use to compare. If image_b is not supplied and image_a is a batch, the comparer will use the first two images of image_a.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;image_b&lt;/code&gt; &lt;em&gt;Optional.&lt;/em&gt; The second image to use to compare. Optional only if image_a is a batch with two images.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; You can change the following properties (by right-clicking on the node, and select &#34;Properties&#34; or &#34;Properties Panel&#34; from the menu): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;comparer_mode&lt;/code&gt; - Choose between &#34;Slide&#34; and &#34;Click&#34;. Defaults to &#34;Slide&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt;&#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Image Inset Crop&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The node that lets you crop an input image by either pixel value, or percentage value.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Display Any&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Displays most any piece of text data from the backend &lt;em&gt;after execution&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Power Lora Loader&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A super-simply Lora Loader node that can load multiple Loras at once, and quick toggle each, all in an ultra-condensed node.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add as many Lora&#39;s as you would like by clicking the &#34;+ Add Lora&#34; button. There&#39;s no real limit!&lt;/li&gt; &#xA;   &lt;li&gt;Right-click on a Lora widget for special options to move the lora up or down &lt;em&gt;(no affect on image, just presentation)&lt;/em&gt;, toggle it on/off, or delete the row all together.&lt;/li&gt; &#xA;   &lt;li&gt;from the properties, change the &lt;code&gt;Show Strengths&lt;/code&gt; to choose between showing a single, simple strength value (which will be used for both model and clip), or a more advanced view with both model and clip strengths being modifiable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;del&gt;Lora Loader Stack&lt;/del&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Deprecated.&lt;/strong&gt; Used the &lt;code&gt;Power Lora Loader&lt;/code&gt; instead.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;A simplified Lora Loader stack. Much like other suites, but more interoperable with standard inputs/outputs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Power Prompt&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Power up your prompt and get drop downs for adding your embeddings, loras, and even have saved prompt snippets.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;At the core, you can use Power Prompt almost as a String Primitive node with additional features of dropdowns for choosing your embeddings, and even loras, with no further processing. This will output just the raw &lt;code&gt;TEXT&lt;/code&gt; to another node for any lora processing, CLIP Encoding, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Connect a &lt;code&gt;CLIP&lt;/code&gt; to the input to encode the text, with both the &lt;code&gt;CLIP&lt;/code&gt; and &lt;code&gt;CONDITIONING&lt;/code&gt; output right from the node.&lt;/li&gt; &#xA;   &lt;li&gt;Connect a &lt;code&gt;MODEL&lt;/code&gt; to the input to parse and load any &lt;code&gt;&amp;lt;lora:...&amp;gt;&lt;/code&gt; tags in the text automatically, without needing a separate Lora Loaders&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Power Prompt - Simple&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Same as Power Prompt above, but without LORA support; made for a slightly cleaner negative prompt &lt;em&gt;(since negative prompts do not support loras)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;SDXL Power Prompt - Positive&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The SDXL sibling to the Power Prompt above. It contains the text_g and text_l as separate text inputs, as well a couple more input slots necessary to ensure proper clipe encoding. Combine with&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;SDXL Power Prompt - Simple&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Like the non-SDXL &lt;code&gt;Power Prompt - Simple&lt;/code&gt; node, this one is essentially the same as the SDXL Power Prompt but without lora support for either non-lora positive prompts or SDXL negative prompts &lt;em&gt;(since negative prompts do not support loras)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;SDXL Config&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just some configuration fields for SDXL prompting. Honestly, could be used for non SDXL too.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Context Switch / Context Switch Big&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A powerful node to branch your workflow. Works by choosing the first Context input that is not null/empty.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pass in several context nodes and the Context Switch will automatically choose the first non-null context to continue onward with.&lt;/li&gt; &#xA;   &lt;li&gt;Wondering how to toggle contexts to null? Use in conjuction with the &lt;strong&gt;Fast Muter&lt;/strong&gt; or &lt;strong&gt;Fast Groups Muter&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Any Switch&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A powerful node to similar to the Context Switch above, that chooses the first input that is not null/empty.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pass in several inmputs of the same type and the Any Switch will automatically choose the first non-null value to continue onward with.&lt;/li&gt; &#xA;   &lt;li&gt;Wondering how to toggle contexts to null? Use in conjuction with the &lt;strong&gt;Fast Muter&lt;/strong&gt; or &lt;strong&gt;Fast Groups Muter&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Fast Groups Muter&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Fast Groups Muter is an input-less node that automatically collects all groups in your current workflow and allows you to quickly mute and unmute all nodes within the group.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Groups will automatically be shown, though you can filter, sort and more from the &lt;strong&gt;node Properties&lt;/strong&gt; &lt;em&gt;(by right-clicking on the node, and select &#34;Properties&#34; or &#34;Properties Panel&#34; from the menu)&lt;/em&gt;. Properties include:&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;matchColors&lt;/code&gt; - Only add groups that match the provided colors. Can be ComfyUI colors (red, pale_blue) or hex codes (#a4d399). Multiple can be added, comma delimited.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;matchTitle&lt;/code&gt; - Filter the list of toggles by title match (string match, or regular expression).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;showNav&lt;/code&gt; - Add / remove a quick navigation arrow to take you to the group. (default: true)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;sort&lt;/code&gt; - Sort the toggles&#39; order by &#34;alphanumeric&#34;, graph &#34;position&#34;, or &#34;custom alphabet&#34;. (default: &#34;position&#34;)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;customSortAlphabet&lt;/code&gt; - When the sort property is &#34;custom alphabet&#34; you can define the alphabet to use here, which will match the beginning of each group name and sort against it. If group titles do not match any custom alphabet entry, then they will be put after groups that do, ordered alphanumerically.&lt;/p&gt; &lt;p&gt;This can be a list of single characters, like &#34;zyxw...&#34; or comma delimited strings for more control, like &#34;sdxl,pro,sd,n,p&#34;.&lt;/p&gt; &lt;p&gt;Note, when two group title match the same custom alphabet entry, the normal alphanumeric alphabet breaks the tie. For instance, a custom alphabet of &#34;e,s,d&#34; will order groups names like &#34;SDXL, SEGS, Detailer&#34; eventhough the custom alphabet has an &#34;e&#34; before &#34;d&#34; (where one may expect &#34;SE&#34; to be before &#34;SD&#34;).&lt;/p&gt; &lt;p&gt;To have &#34;SEGS&#34; appear before &#34;SDXL&#34; you can use longer strings. For instance, the custom alphabet value of &#34;se,s,f&#34; would work here.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;toggleRestriction&lt;/code&gt; - Optionally, attempt to restrict the number of widgets that can be enabled to a maximum of one, or always one.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note: If using &#34;max one&#34; or &#34;always one&#34; then this is only enforced when clicking a toggle on this node; if nodes within groups are changed outside of the initial toggle click, then these restriction will not be enforced, and could result in a state where more than one toggle is enabled. This could also happen if nodes are overlapped with multiple groups.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Fast Groups Bypasser&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Same as &lt;strong&gt;Fast Groups Muter&lt;/strong&gt; above, but sets the connected nodes to &#34;Bypass&#34; instead of &#34;Mute&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Fast Muter&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A powerful &#39;control panel&#39; node to quickly toggle connected nodes allowing them to quickly be muted or enabled&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add a collection of all connected nodes allowing a single-spot as a &#34;dashboard&#34; to quickly enable and disable nodes. Two distinct nodes; one for &#34;Muting&#34; connected nodes, and one for &#34;Bypassing&#34; connected nodes.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Fast Bypasser&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Same as Fast Muter but sets the connected nodes to &#34;Bypass&#34;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Fast Actions Button&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Oh boy, this node allows you to semi-automate connected nodes and/or ConfyUI.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Connect nodes and, at the least, mute, bypass or enable them when the button is pressed.&lt;/li&gt; &#xA;   &lt;li&gt;Certain nodes expose additional actions. For instance, the &lt;code&gt;Seed&lt;/code&gt; node you can set &lt;code&gt;Randomize Each Time&lt;/code&gt; or &lt;code&gt;Use Last Queued Seed&lt;/code&gt; when the button is pressed.&lt;/li&gt; &#xA;   &lt;li&gt;Also, from the node properties, set a shortcut key to toggle the button actions, without needing a click!&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Node Collector&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Used to cleanup noodles, this will accept any number of input nodes and passes it along to another node.&lt;/p&gt; &#xA; &lt;p&gt;‚ö†Ô∏è &lt;em&gt;Currently, this should really only be connected to &lt;strong&gt;Fast Muter&lt;/strong&gt;, &lt;strong&gt;Fast Bypasser&lt;/strong&gt;, or &lt;strong&gt;Mute / Bypass Relay&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Mute / Bypass Repeater&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A powerful node that will dispatch its Mute/Bypass/Active mode to all connected input nodes or, if in a group w/o any connected inputs, will dispatch its Mute/Bypass/Active mode to all nodes in that group.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;üí° Pro Tip #1: Connect this node&#39;s output to a &lt;strong&gt;Fast Muter&lt;/strong&gt; or &lt;strong&gt;Fast Bypasser&lt;/strong&gt; to have a single toggle there that can mute/bypass/enable many nodes with one click.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;üí° Pro Tip #2: Connect a &lt;strong&gt;Mute / Bypass Relay&lt;/strong&gt; node to this node&#39;s inputs to have the relay automatically dispatch a mute/bypass/enable change to the repeater.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Mute / Bypass Relay&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An advanced node that, when working with a &lt;strong&gt;Mute / Bypass Repeater&lt;/strong&gt;, will relay its input nodes&#39; modes (Mute, Bypass, or Active) to a connected repeater (which would then repeat that mode change to all of its inputs).&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When all connected input nodes are muted, the relay will set a connected repeater to mute (by default).&lt;/li&gt; &#xA;   &lt;li&gt;When all connected input nodes are bypassed, the relay will set a connected repeater to bypass (by default).&lt;/li&gt; &#xA;   &lt;li&gt;When &lt;em&gt;any&lt;/em&gt; connected input nodes are active, the relay will set a connected repeater to active (by default).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; If no inputs are connected, the relay will set a connected repeater to its mode &lt;em&gt;when its own mode is changed&lt;/em&gt;. &lt;strong&gt;Note&lt;/strong&gt;, if any inputs are connected, then the above bullets will occur and the Relay&#39;s mode does not matter.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pro Tip:&lt;/strong&gt; You can change which signals get sent on the above in the &lt;code&gt;Properties&lt;/code&gt;. For instance, you could configure an inverse relay which will send a MUTE when any of its inputs are active (instead of sending an ACTIVE signal), and send an ACTIVE signal when all of its inputs are muted (instead of sending a MUTE signal), etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Random Unmuter&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An advanced node used to unmute one of its inputs randomly when the graph is queued (and, immediately mute it back).&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; All input nodes MUST be muted to start; if not this node will not randomly unmute another. (This is powerful, as the generated image can be dragged in and the chosen input will already by unmuted and work w/o any further action.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Connect a Repeater&#39;s output to this nodes input and place that Repeater on a group without any other inputs, and it will mute/unmute the entire group.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Label&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A purely visual node, this allows you to add a floating label to your workflow.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The text shown is the &#34;Title&#34; of the node and you can adjust the the font size, font family, font color, text alignment as well as a background color, padding, and background border radius from the node&#39;s properties. You can double-click the node to open the properties panel.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pro Tip #1:&lt;/strong&gt; You can add multiline text from the properties panel &lt;em&gt;(because ComfyUI let&#39;s you shift + enter there, only).&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pro Tip #2:&lt;/strong&gt; You can use ComfyUI&#39;s native &#34;pin&#34; option in the right-click menu to make the label stick to the workflow and clicks to &#34;go through&#34;. You can right-click at any time to unpin.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pro Tip #3:&lt;/strong&gt; Color values are hexidecimal strings, like &#34;#FFFFFF&#34; for white, or &#34;#660000&#34; for dark red. You can supply a 7th &amp;amp; 8th value (or 5th if using shorthand) to create a transluscent color. For instance, &#34;#FFFFFF88&#34; is semi-transparent white.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Advanced Techniques&lt;/h1&gt; &#xA;&lt;h2&gt;First, a word on muting&lt;/h2&gt; &#xA;&lt;p&gt;A lot of the power of these nodes comes from &lt;em&gt;Muting&lt;/em&gt;. Muting is the basis of correctly implementing multiple paths for a workflow utlizing the Context Switch node.&lt;/p&gt; &#xA;&lt;p&gt;While other extensions may provide switches, they often get it wrong causing your workflow to do more work than is needed. While other switches may have a selector to choose which input to pass along, they don&#39;t stop the execution of the other inputs, which will result in wasted work. Instead, Context Switch works by choosing the first non-empty context to pass along and correctly Muting is one way to make a previous node empty, and causes no extra work to be done when set up correctly.&lt;/p&gt; &#xA;&lt;h3&gt;To understand muting, is to understand the graph flow&lt;/h3&gt; &#xA;&lt;p&gt;Muting, and therefore using Switches, can often confuse people at first because it &lt;em&gt;feels&lt;/em&gt; like muting a node, or using a switch, should be able to stop or direct the &lt;em&gt;forward&lt;/em&gt; flow of the graph. However, this is not the case and, in fact, the graph actually starts working backwards.&lt;/p&gt; &#xA;&lt;p&gt;If you have a workflow that has a path like &lt;code&gt;... &amp;gt; Context &amp;gt; KSampler &amp;gt; VAE Decode &amp;gt; Save Image&lt;/code&gt; it may initially &lt;em&gt;feel&lt;/em&gt; like you should be able to mute that first Context node and the graph would stop there when moving forward and skip the rest of that workflow.&lt;/p&gt; &#xA;&lt;p&gt;But you&#39;ll quickly find that will cause an error, becase the graph doesn&#39;t actually move forward. When a workflow is processed, it &lt;em&gt;first moves backwards&lt;/em&gt; starting at each &#34;Output Node&#34; (Preview Image, Save Image, even &#34;Display String&#34; etc.) and then walking backwards to all possible paths to get there.&lt;/p&gt; &#xA;&lt;p&gt;So, with that &lt;code&gt;... &amp;gt; Context &amp;gt; KSampler &amp;gt; VAE Decode &amp;gt; Save Image&lt;/code&gt; example from above, we actually want to mute the &lt;code&gt;Save Image&lt;/code&gt; node to stop this path. Once we do, since the output node is gone, none of these nodes will be run.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s take a look at an example.&lt;/p&gt; &#xA;&lt;h3&gt;A powerful combination: Using Context, Context Switch, &amp;amp; Fast Muter&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rgthree/rgthree-comfy/main/docs/rgthree_advanced.png&#34; alt=&#34;Context Node&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Using the &lt;strong&gt;Context Switch&lt;/strong&gt; (aqua colored in screenshot) feed context inputs in order of preference. In the workflow above, the &lt;code&gt;Upscale Out&lt;/code&gt; context is first so, if that one is enabled, it will be chosen for the output. If not, the second input slot which comes from the context rerouted from above (before the Upscaler booth) will be chosen.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Notice the &lt;code&gt;Upscale Preview&lt;/code&gt; is &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;Upscale Out&lt;/code&gt; context node, using the image from it instead of the image from the upscale &lt;code&gt;VAE Decoder&lt;/code&gt;. This is on purpose so, when we disable the &lt;code&gt;Upscale Out&lt;/code&gt; context, none of the Upscaler nodes will run, saving precious GPU cycles. If we had the preview hooked up directly to the &lt;code&gt;VAE Decoder&lt;/code&gt; the upscaler would always run to generate the preview, even if we had the &lt;code&gt;Upscale Out&lt;/code&gt; context node disabled.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We can now disable the &lt;code&gt;Upscale Out&lt;/code&gt; context node by &lt;em&gt;muting&lt;/em&gt; it. Highlighting it and pressing &lt;code&gt;ctrl + m&lt;/code&gt; will work. By doing so, it&#39;s output will be None, and it will not pass anthing onto the further nodes. In the diagram you can see the &lt;code&gt;Upscale Preview&lt;/code&gt; is red, but that&#39;s OK; there are no actual errors to stop execution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, let&#39;s hook it up to the &lt;code&gt;Fast Muter&lt;/code&gt; node. &lt;code&gt;The Fast Muter&lt;/code&gt; node works as dashboard by adding quick toggles for any connected node (ignoring reroutes). In the diagram, we have both the &lt;code&gt;Upscaler Out&lt;/code&gt; context node, and the &lt;code&gt;Save File&lt;/code&gt; context node hooked up. So, we can quickly enable and disable those.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The workflow seen here would be a common one where we can generate a handful of base previews cheaply with a random seed, and then choose one to upscale and save to disk.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lastly, and optionally, you can see the &lt;code&gt;Node Collector&lt;/code&gt;. Use it to clean up noodles if you want and connect it to the muter. You can connect anything to it, but doing so may break your workflow&#39;s execution.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;‚ö° Improvements &amp;amp; Features&lt;/h1&gt; &#xA;&lt;p&gt;rgthree-comfy adds several improvements, features, and optimizations to ComfyUI that are not directly tied to nodes.&lt;/p&gt; &#xA;&lt;h2&gt;Progress Bar&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A minimal progress bar that run alongs the top of the app window that shows the queue size, the current progress of the a prompt execution (within the same window), and the progress of multi-step nodes as well.&lt;/p&gt; &#xA; &lt;p&gt;&lt;i&gt;You can remove/enable from rgthree-comfy settings, as well as configure the height/size.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;ComfyUI Recursive Optimization&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An optimization to ComfyUI&#39;s recursive execution. Because rgthree-comfy nodes make it easy to build larger, more complex workflows, I (and others) started to hit a wall of poor execution times.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Until &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI/issues/1502&#34;&gt;ComfyUI/issues/1502&lt;/a&gt; is resolved and/or &lt;a href=&#34;https://github.com/comfyanonymous/ComfyUI/pull/1503&#34;&gt;ComfyUI/pull/1503&lt;/a&gt; is pulled in, then know that you&#39;re benefiting from hundreds of millions of saved cycles each run.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Specifically, for a rather complex test workflow, the patch reduces iterations of &lt;code&gt;recursive_will_execute&lt;/code&gt; from 113,292,566 to just 135 (and 116.32 seconds to 69.84 seconds on my machine) on a fresh queue, and reduces recursive calls of &lt;code&gt;recursive_output_delete_if_changed&lt;/code&gt; from 250,496,808 to 142 (and 158.13 seconds to 0.0 seconds on my machine).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;‚ö†Ô∏è &lt;em&gt;However,&lt;/em&gt; there is a chance ComfyUI changes something in/around the code I patched which could break. If that&#39;s the case, you should disable the optimization from rgthree-comfy settings.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&#34;Queue Selected Output Nodes&#34; in right-click menu&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sometimes you want to just queue one or two paths to specific output node(s) without executing the entire workflow. Well, now you can do just that by right-clicking on an output node and selecting &lt;code&gt;Queue Selected Output Nodes (rgthree)&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;‚ÑπÔ∏è &lt;i&gt;More Information&lt;/i&gt;&lt;/summary&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Select the &lt;em&gt;output&lt;/em&gt; nodes you want to execute.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Note: Only output nodes are captured and traversed, not all selected nodes. So if you select an output AND a node from a different path, only the path connected to the output will be executed and not non-output nodes, even if they were selected.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Note: The whole workflow is serialized, and then we trim what we don&#39;t want for the backend. So things like all seed random/increment/decrement will run even if that node isn&#39;t being sent in the end, etc.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/details&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Auto-Nest Subdirectories in long Combos&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;(Off by default while experimenting, turn on in rgthree-comfy settings)&lt;/em&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Automatically detect top-level subdirectories in long combo lists (like, Load Checkpoint) and break out into sub directories.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Quick Mute/Bypass Toggles in Group Headers&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;(Off by default while experimenting, turn on in rgthree-comfy settings)&lt;/em&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Adds a mute and/or bypass toggle icons in the top-right of Group Headers for one-click toggling of groups you may be currently looking at.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Import Individual Node Widgets (Drag &amp;amp; Drop)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;(Off by default while experimenting, turn on in rgthree-comfy settings)&lt;/em&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Allows dragging and dropping an image/JSON workflow from a previous generation and overriding the same node&#39;s widgets (that match with the same id &amp;amp; type). This is useful if you have several generations using the same general workflow and would like to import just some data, like a previous generation&#39;s seed, or prompt, etc.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&#34;Copy Image&#34; in right-click menu&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Right clicking on a node that has an image should have a context-menu item of &#34;Copy Image&#34; will allow you to copy the image right to your clipboard&lt;/p&gt; &#xA; &lt;p&gt;&lt;i&gt;üéì I believe this has graduated, with ComfyUI recently adding this setting too. You won&#39;t get two menu items; my code checks that there isn&#39;t already a &#34;Copy Image&#34; item there before adding it.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Other/Smaller Fixes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed the width of ultra-wide node chooser on double click.&lt;/li&gt; &#xA; &lt;li&gt;Fixed z-indexes for textareas that would overlap above other elements, like Properties Panel, or @pythongosssss&#39;s image viewer.&lt;/li&gt; &#xA; &lt;li&gt;Check for bad links when loading a workflow and log to console, by default. &lt;em&gt;(See Link Fixer below).&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;üìÑ Link Fixer&lt;/h1&gt; &#xA;&lt;p&gt;If your workflows sometimes have missing connections, or even errors on load, start up ComfyUI and go to &lt;a href=&#34;http://127.0.0.1:8188/rgthree/link_fixer&#34;&gt;http://127.0.0.1:8188/rgthree/link_fixer&lt;/a&gt; which will allow you to drop in an image or workflow json file and check for and fix any bad links.&lt;/p&gt; &#xA;&lt;p&gt;You can also enable a link fixer check in the rgthree-comfy settings to give you an alert if you load a workflow with bad linking data to start.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thepeacockproject/Peacock</title>
    <updated>2024-07-01T01:35:55Z</updated>
    <id>tag:github.com,2024-07-01:/thepeacockproject/Peacock</id>
    <link href="https://github.com/thepeacockproject/Peacock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Peacock Project is a HITMAN‚Ñ¢ World of Assassination trilogy server replacement.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Peacock Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/peacock&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/826809653181808651?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Peacock Project is a HITMAN World of Assassination Trilogy server replacement. The primary purpose is preservation of the game, but it also adds new features and content to the game, and allows for other enhancements to be made while in online mode.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;. Use the Latest version, or the version specifically mentioned here: &lt;strong&gt;Version 20&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository where-ever you wish.&lt;/p&gt; &#xA;&lt;p&gt;Open Windows terminal &lt;strong&gt;AS ADMINISTRATOR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install Yarn, by typing:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;corepack enable&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then move to the folder where you cloned the repo to by using:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd Folder/Path/Here&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;then install the dependencies by using:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;yarn install&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The project is bundled with a server running configuration. Run that when editing the project with the IDE of choice, and it should open.&lt;/p&gt; &#xA;&lt;p&gt;We highly suggest you use &lt;a href=&#34;https://www.jetbrains.com/webstorm/&#34;&gt;WebStorm&lt;/a&gt; for development, but it is a paid product, so you may want to choose something like &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;. WebStorm will provide a better experience for development, but VSCode will work just fine.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute, you can use Pull Requests from your own fork. You can fix bugs reported in issues or add new features you think would be useful, new features not listed in issues would have to be discussed before merging.&lt;/p&gt; &#xA;&lt;h3&gt;Localisation&lt;/h3&gt; &#xA;&lt;h4&gt;Automated&lt;/h4&gt; &#xA;&lt;p&gt;The Peacock repository has an automated workflow to rebuild locale packages. All you need to do to update localisation files is:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;locale.json&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you&#39;re adding new strings, make sure to add the English versions to all languages.&lt;/li&gt; &#xA;   &lt;li&gt;If you&#39;re translating existing strings, you only need to translate the ones that are in the language(s) you are translating.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Then push &lt;code&gt;locale.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then, make a Pull Request. When it is reviewed and merged, locale packages will automatically be rebuilt.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Manual&lt;/h4&gt; &#xA;&lt;p&gt;If you need to manually rebuild locale packages for whatever reason (testing or otherwise), follow steps 1 and 2 above, then do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure &lt;code&gt;rpkg_cli.exe&lt;/code&gt;, &lt;code&gt;HMLanguageTools.exe&lt;/code&gt;, and &lt;code&gt;ResourceLib_*.dll&lt;/code&gt; are in the &lt;code&gt;resources&lt;/code&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Then, from the root project folder, run &lt;code&gt;yarn rebuild-locale&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;These generated RPKGs should &lt;strong&gt;not&lt;/strong&gt; be pushed or merged into Peacock as the automated workflow will take care of this for you.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Thank you to people who have contributed!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Peacock is under the AGPL-3.0 license, see the license file for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Peacock started off as a fork of &lt;a href=&#34;https://gitlab.com/grappigegovert/LocalGhost&#34;&gt;LocalGhost&lt;/a&gt; by grappigegovert, and has since been rewritten in TypeScript, and a whole host of new features have been added. The codebase has been relicensed to AGPL-3.0 with explicit permission from grappigegovert.&lt;/p&gt; &#xA;&lt;p&gt;The game is owned by &lt;a href=&#34;https://ioi.dk&#34;&gt;IO Interactive&lt;/a&gt;, and is not affiliated with this project in any way.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>maurodesouza/profile-readme-generator</title>
    <updated>2024-07-01T01:35:55Z</updated>
    <id>tag:github.com,2024-07-01:/maurodesouza/profile-readme-generator</id>
    <link href="https://github.com/maurodesouza/profile-readme-generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üé® Enhance your GitHub profile with this amazing tool, which allows you to create a personalized README quickly and easily. This profile README generator is the best you&#39;ll find üöÄ&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34; id=&#34;top&#34;&gt; &#xA; &lt;img src=&#34;https://profile-readme-generator.com/assets/app.png&#34; width=&#34;900&#34; alt=&#34;Profile Readme Generator&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://profile-readme-generator.com&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Profile Readme Generator&lt;/h1&gt; &#xA; &lt;h3&gt;The best profile readme generator you will find!&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/fork&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing the total of project forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/stargazers&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing the total of project stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/commits/main&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing average commit frequency per month&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/commits/main&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing when the last commit was made&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/issues&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing the total of project issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/pulls&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/maurodesouza/profile-readme-generator?&#34; alt=&#34;Badge showing the total of project pull-requests&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/raw/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Badge showing project license type&#34; src=&#34;https://img.shields.io/github/license/maurodesouza/profile-readme-generator?color=f85149&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/#dart-about&#34;&gt;About&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/#rocket-main-technologies&#34;&gt;Technologies&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/#white_check_mark-requirements&#34;&gt;Requirements&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/#checkered_flag-starting&#34;&gt;Starting&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&#34;https://github.com/maurodesouza/profile-readme-generator/raw/main/.github/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üéØ&lt;/span&gt; About&lt;/h2&gt; &#xA;&lt;p&gt;Are you tired of manually editing your GitHub profile or missing out on the amazing features you can add to it? üò© Configuring GitHub actions can also be a hassle, right? Say no more! üí™&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Introducing a tool that lets you beautify your GitHub profile with a customized README, easily and in no time!&lt;/strong&gt; ‚ú® You can include whatever content you want, wherever you want it (&lt;em&gt;within the limitations of markdown, of course&lt;/em&gt;). üìù&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;With this amazing tool, creating your own README has never been so simple and fast.&lt;/strong&gt; ‚ö° You can save time and focus on what really matters - showcasing your skills and projects. üöÄ&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t miss out on the opportunity to enhance your GitHub profile.&lt;/strong&gt; Give it a try and see for yourself how easy and convenient it is! üòâ&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;Loved the tool? Please consider &lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=FR3A2DGVYKGJS&#34;&gt;donating üí∏&lt;/a&gt; to support its continuous&lt;br&gt; improvement and development!&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/54520907/173442002-dafc63ea-321f-4ce2-b349-be490b3a00ff.mp4&#34;&gt;https://user-images.githubusercontent.com/54520907/173442002-dafc63ea-321f-4ce2-b349-be490b3a00ff.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; Main Technologies&lt;/h2&gt; &#xA;&lt;a href=&#34;https://nextjs.org&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;NextJs&#34; alt=&#34;Next Logo&#34; src=&#34;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/next-logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &amp;nbsp; &amp;nbsp; &#xA;&lt;a href=&#34;https://www.typescriptlang.org&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;Typescript&#34; alt=&#34;Typescript Logo&#34; src=&#34;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/typescript-logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &amp;nbsp; &amp;nbsp; &#xA;&lt;a href=&#34;https://styled-components.com&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;Styled Components&#34; alt=&#34;Styled Components Logo&#34; src=&#34;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/styled-components/styled-components.png&#34;&gt; &lt;/a&gt; &amp;nbsp; &amp;nbsp; &#xA;&lt;a href=&#34;https://jestjs.io&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;Jest&#34; alt=&#34;Jest Logo&#34; src=&#34;https://raw.githubusercontent.com/maurodesouza/maurodesouza/master/assets/jest-logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &amp;nbsp; &amp;nbsp; &#xA;&lt;a href=&#34;https://eslint.org&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;Eslint&#34; alt=&#34;Eslint Logo&#34; src=&#34;https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/eslint/eslint.png&#34;&gt; &lt;/a&gt; &amp;nbsp; &amp;nbsp; &#xA;&lt;a href=&#34;https://prettier.io&#34;&gt; &lt;img width=&#34;50&#34; title=&#34;Prettier&#34; alt=&#34;Prettier Logo&#34; src=&#34;https://prettier.io/icon.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;See more&lt;/summary&gt; &#xA; &lt;h3&gt;&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://styled-icons.js.org&#34;&gt;Styled Icons (Feather Icons)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/morajabi/styled-media-query&#34;&gt;Styled Media Query&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://framer.com/motion/&#34;&gt;Framer Motion&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Dmc0125/html-prettify&#34;&gt;HTML Prettify&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nygardk/react-share&#34;&gt;React Share&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://prismjs.com&#34;&gt;Prismjs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/uuid&#34;&gt;UUID&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Before starting &lt;span&gt;üèÅ&lt;/span&gt;, make sure you have &lt;a href=&#34;https://git-scm.com&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node&lt;/a&gt; installed on your system. (&lt;a href=&#34;https://github.com/nvm-sh/nvm#node-version-manager---&#34;&gt;nvm&lt;/a&gt; recommended).&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üèÅ&lt;/span&gt; Starting&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone this project&#xA;$ git clone https://github.com/maurodesouza/profile-readme-generator&#xA;&#xA;# Access&#xA;$ cd profile-readme-generator&#xA;&#xA;# Install dependencies&#xA;$ yarn&#xA;&#xA;# Run the project&#xA;$ yarn dev&#xA;&#xA;# The server will initialize in the &amp;lt;http://localhost:3000&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;üéÆ&lt;/span&gt; Scripts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dev&lt;/code&gt;: starts the application at &lt;code&gt;localhost:3000&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;build&lt;/code&gt;: creates an optimized production build of the application;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start&lt;/code&gt;: starts the application in production mode at localhost:3000 (make sure to run the build first);&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: runs the tests;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lint&lt;/code&gt;: runs eslint in the /src directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìù&lt;/span&gt; License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. For more details, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; by &lt;a href=&#34;https://github.com/maurodesouza&#34; target=&#34;_blank&#34;&gt;Mauro de Souza&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/maurodesouza/profile-readme-generator/main/#top&#34;&gt;Back to top&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Readme created with &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=maurodesouza.vscode-simple-readme&#34;&gt;Simple Readme&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>