<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-06T01:37:29Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JSv4/OpenContracts</title>
    <updated>2024-07-06T01:37:29Z</updated>
    <id>tag:github.com,2024-07-06:/JSv4/OpenContracts</id>
    <link href="https://github.com/JSv4/OpenContracts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mass document analytics platform based on LlamaIndex, Pgvector, React and Django.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/logos/OS_Legal_Logo.png&#34; alt=&#34;OpenContracts&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Open Contracts&lt;/h1&gt; &#xA;&lt;h2&gt;The Free and Open Source Document Analytics Platform&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CI/CD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/JSv4/OpenContracts&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/JSv4/OpenContracts/branch/main/graph/badge.svg?token=RdVsiuaTVz&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Meta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;code style - black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/python/mypy&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/types-Mypy-blue.svg?sanitize=true&#34; alt=&#34;types - Mypy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pycqa/isort&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/imports-isort-ef8336.svg?sanitize=true&#34; alt=&#34;imports - isort&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License - Apache2&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What Does it Do?&lt;/h2&gt; &#xA;&lt;p&gt;OpenContracts is an &lt;strong&gt;Apache-2 Licensed&lt;/strong&gt; enterprise document analytics tool. It provides several key features:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manage Documents&lt;/strong&gt; - Manage document collections (&lt;code&gt;Corpuses&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Layout Parser&lt;/strong&gt; - Automatically extracts layout features from PDFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic Vector Embeddings&lt;/strong&gt; - generated for uploaded PDFs and extracted layout blocks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pluggable microservice analyzer architecture&lt;/strong&gt; - to let you analyze documents and automatically annotate them&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Human Annotation Interface&lt;/strong&gt; - to manually annotated documents, including multi-page annotations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LlamaIndex Integration&lt;/strong&gt; - Use our vector stores (powered by pgvector) and any manual or automatically annotated features to let an LLM intelligently answer questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Extract&lt;/strong&gt; - ask multiple questions across hundreds of documents using complex LLM-powered querying behavior. Our sample implementation uses LlamaIndex + Marvin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Data Extract&lt;/strong&gt; - Custom data extract pipelines can be used on the frontend to query documents in bulk.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/gifs/Grid_Review_And_Sources.gif&#34; alt=&#34;Grid Review And Sources.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/screenshots/Jumped_To_Annotation.png&#34; alt=&#34;Manual Annotations&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key Docs&lt;/h2&gt; &#xA;&lt;p&gt;We recommend you &lt;a href=&#34;https://jsv4.github.io/OpenContracts/&#34;&gt;browse our docs&lt;/a&gt; via our Mkdocs Site. You can also view the docs in the repo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/quick-start.md&#34;&gt;Quickstart Guide&lt;/a&gt; - You&#39;ll probably want to get started quickly. Setting up locally should be pretty painless if you&#39;re already running Docker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/walkthrough/key-concepts.md&#34;&gt;Basic Walkthrough&lt;/a&gt; - Check out the walkthrough to step through basic usage of the application for document and annotation management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/architecture/PDF-data-layer.md&#34;&gt;PDF Annotation Data Format Overview&lt;/a&gt; - You may be interested how we map text to PDFs visually and the underlying data format we&#39;re using.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/extract_and_retrieval/intro_to_django_annotation_vector_store.md&#34;&gt;Django + Pgvector Powered Hybrid Vector Database&lt;/a&gt; We&#39;ve used the latest open source tooling for vector storage in postgres to make it almost trivially easy to combine structured metadata and vector embeddings with an API-powered application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/extract_and_retrieval/intro_to_django_annotation_vector_store.md&#34;&gt;LlamaIndex Integration Walkthrough&lt;/a&gt; - We wrote a wrapper for our backend database and vector store to make it simple to load our parsed annotations, embeddings and text into LlamaIndex. Even better, if you have additional annotations in the document, the LLM can access those too.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/walkthrough/advanced/write-your-own-extractors.md&#34;&gt;Write Custom Data Extractors&lt;/a&gt; - Custom data extract tasks (which can use LlamaIndex or can be totally bespoke) are automatically loaded and displayed on the frontend to let user&#39;s select how to ask questions and extract data from documents.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture and Data Flows at a Glance&lt;/h2&gt; &#xA;&lt;h3&gt;Core Data Standard&lt;/h3&gt; &#xA;&lt;p&gt;The core idea here - besides providing a platform to analyze contracts - is an open and standardized architecture that makes data extremely portable. Powering this is a set of data standards to describe the text and layout blocks on a PDF page:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/diagrams/pawls-annotation-mapping.svg?sanitize=true&#34; alt=&#34;Data Format&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Robust PDF Processing Pipeline&lt;/h3&gt; &#xA;&lt;p&gt;We have a robust PDF processing pipeline that is horizontally scalable and generates our standardized data consistently for PDF inputs (We&#39;re working on adding additional formats soon):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/diagrams/PDF-processor-sequence-diagram.png&#34; alt=&#34;PDF Processor&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to Nlmatics and &lt;a href=&#34;https://github.com/nlmatics/nlm-ingestor&#34;&gt;nlm-ingestor&lt;/a&gt; for powering the layout parsing and extraction.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;At the moment, it only works with PDFs. In the future, it will be able to convert other document types to PDF for storage and labeling. PDF is an excellent format for this as it introduces a consistent, repeatable format which we can use to generate a text and x-y coordinate layer from scratch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding OCR and ingestion for other enterprise documents is a priority&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to AllenAI&#39;s &lt;a href=&#34;https://github.com/allenai/pawls&#34;&gt;PAWLS project&lt;/a&gt; and Nlmatics &lt;a href=&#34;https://github.com/nlmatics/nlm-ingestor&#34;&gt;nlm-ingestor&lt;/a&gt;. They&#39;ve pioneered a number of features and flows, and we are using their code in some parts of the application.&lt;/p&gt;</summary>
  </entry>
</feed>