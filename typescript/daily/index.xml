<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-25T01:46:19Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>influxion/ts-plugins-quickstart</title>
    <updated>2023-05-25T01:46:19Z</updated>
    <id>tag:github.com,2023-05-25:/influxion/ts-plugins-quickstart</id>
    <link href="https://github.com/influxion/ts-plugins-quickstart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get a ChatGPT plugin up and running in under 5 minutes using TypeScript &amp; NodeJS!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT plugins quickstart&lt;/h1&gt; &#xA;&lt;p&gt;Get a todo list ChatGPT plugin up and running in under 5 minutes using Typescript &amp;amp; NodeJS on an Express server. If you do not already have plugin developer access, please &lt;a href=&#34;https://openai.com/waitlist/plugins&#34;&gt;join the waitlist&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To install the required packages for this plugin, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the plugin, enter the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the local server is running:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to &lt;a href=&#34;https://chat.openai.com&#34;&gt;https://chat.openai.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the Model drop down, select &#34;Plugins&#34; (note, if you don&#39;t see it there, you don&#39;t have access yet).&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Plugin store&#34;&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Develop your own plugin&#34;&lt;/li&gt; &#xA; &lt;li&gt;Enter in &lt;code&gt;localhost:5003&lt;/code&gt; since this is the URL the server is running on locally, then select &#34;Find manifest file&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The plugin should now be installed and enabled! You can start with a question like &#34;What is on my todo list&#34; and then try adding something to it as well!&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you run into issues or have questions building a plugin, please join our &lt;a href=&#34;https://community.openai.com/c/chat-plugins/20&#34;&gt;Developer community forum&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vantezzen/wrapped</title>
    <updated>2023-05-25T01:46:19Z</updated>
    <id>tag:github.com,2023-05-25:/vantezzen/wrapped</id>
    <link href="https://github.com/vantezzen/wrapped" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“Š Personalized stats about your time on TikTok.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wrapped for TikTok&lt;/h1&gt; &#xA;&lt;p&gt;Wrapped for TikTok uses your TikTok data export to give you personalized stats about your time on TikTok.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install all dependencies&lt;/li&gt; &#xA; &lt;li&gt;Start the development server using &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>capricorn86/happy-dom</title>
    <updated>2023-05-25T01:46:19Z</updated>
    <id>tag:github.com,2023-05-25:/capricorn86/happy-dom</id>
    <link href="https://github.com/capricorn86/happy-dom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Happy DOM is a JavaScript implementation of a web browser without its graphical user interface. It includes many web standards from WHATWG DOM and HTML.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/capricorn86/happy-dom/raw/master/docs/happy-dom-logo.jpg&#34; alt=&#34;Happy DOM Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capricorn86/happy-dom&#34;&gt;Happy DOM&lt;/a&gt; is a JavaScript implementation of a web browser without its graphical user interface. It includes many web standards from WHATWG &lt;a href=&#34;https://dom.spec.whatwg.org/&#34;&gt;DOM&lt;/a&gt; and &lt;a href=&#34;https://html.spec.whatwg.org/multipage/&#34;&gt;HTML&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The goal of &lt;a href=&#34;https://github.com/capricorn86/happy-dom&#34;&gt;Happy DOM&lt;/a&gt; is to emulate enough of a web browser to be useful for testing, scraping web sites and server-side rendering.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capricorn86/happy-dom&#34;&gt;Happy DOM&lt;/a&gt; focuses heavily on performance and can be used as an alternative to &lt;a href=&#34;https://github.com/jsdom/jsdom&#34;&gt;JSDOM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/happy-dom&#34;&gt;Read more about how to use Happy DOM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DOM Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom Elements (Web Components)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shadow Root (Shadow DOM)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Declarative Shadow DOM&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mutation Observer&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tree Walker&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fetch&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And much more..&lt;/p&gt; &#xA;&lt;h3&gt;Works With&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lit-html.polymer-project.org&#34;&gt;Google LitHTML&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lit-element.polymer-project.org&#34;&gt;Google LitElement&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://reactjs.org&#34;&gt;React&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://angular.io/&#34;&gt;Angular&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Packages&lt;/h1&gt; &#xA;&lt;p&gt;This repository is a &lt;em&gt;Monorepo&lt;/em&gt;. Each package lives under &lt;code&gt;packages/&amp;lt;package&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.npmjs.com/package/happy-dom&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/happy-dom.svg?sanitize=true&#34; alt=&#34;Published on npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/happy-dom&#34;&gt;happy-dom&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package contains the core functionality of Happy DOM.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.npmjs.com/package/@happy-dom/jest-environment&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@happy-dom/jest-environment.svg?sanitize=true&#34; alt=&#34;Published on npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/jest-environment&#34;&gt;jest-environment&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package makes it possible to use Happy DOM with &lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.npmjs.com/package/@happy-dom/global-registrator&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@happy-dom/global-registrator.svg?sanitize=true&#34; alt=&#34;Published on npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/global-registrator&#34;&gt;global-registrator&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A utility that registers Happy DOM globally, which makes it possible to use Happy DOM for testing in a Node environment.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.npmjs.com/package/@happy-dom/server-rendering&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@happy-dom/server-rendering.svg?sanitize=true&#34; alt=&#34;Published on npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/server-rendering&#34;&gt;server-rendering&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This package has been deprecated.&lt;/p&gt; &#xA;&lt;p&gt;Happy DOM now supports &lt;a href=&#34;https://github.com/capricorn86/happy-dom/tree/master/packages/happy-dom#server-side-rendering-of-web-components&#34;&gt;Declarative Shadow DOM&lt;/a&gt; which can be used for server-side rendering of web components.&lt;/p&gt; &#xA;&lt;h1&gt;Performance&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operation&lt;/th&gt; &#xA;   &lt;th&gt;JSDOM&lt;/th&gt; &#xA;   &lt;th&gt;Happy DOM&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Import / Require&lt;/td&gt; &#xA;   &lt;td&gt;333 ms&lt;/td&gt; &#xA;   &lt;td&gt;45 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parse HTML&lt;/td&gt; &#xA;   &lt;td&gt;256 ms&lt;/td&gt; &#xA;   &lt;td&gt;26 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serialize HTML&lt;/td&gt; &#xA;   &lt;td&gt;65 ms&lt;/td&gt; &#xA;   &lt;td&gt;8 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Render custom element&lt;/td&gt; &#xA;   &lt;td&gt;214 ms&lt;/td&gt; &#xA;   &lt;td&gt;19 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySelectorAll(&#39;tagname&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;4.9 ms&lt;/td&gt; &#xA;   &lt;td&gt;0.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySelectorAll(&#39;.class&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;6.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySelectorAll(&#39;[attribute]&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;4.0 ms&lt;/td&gt; &#xA;   &lt;td&gt;1.7 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySelectorAll(&#39;[class~=&#34;name&#34;]&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;5.5 ms&lt;/td&gt; &#xA;   &lt;td&gt;2.9 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;querySelectorAll(&#39;:nth-child(2n+1)&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;10.4 ms&lt;/td&gt; &#xA;   &lt;td&gt;3.8 ms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capricorn86/happy-dom-performance-test&#34;&gt;See how the test was done here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capricorn86/happy-dom/raw/master/docs/contributing.md&#34;&gt;Read more about how to develop and contribute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rtvision.com&#34;&gt;&lt;img alt=&#34;RTVision&#34; width=&#34;120px&#34; src=&#34;https://avatars.githubusercontent.com/u/8292810?s=200&amp;amp;v=4&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>