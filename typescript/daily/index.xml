<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-19T01:38:33Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>learn-anything/learn-anything.xyz</title>
    <updated>2024-04-19T01:38:33Z</updated>
    <id>tag:github.com,2024-04-19:/learn-anything/learn-anything.xyz</id>
    <link href="https://github.com/learn-anything/learn-anything.xyz" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Organize world&#39;s knowledge, explore connections and curate learning paths&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://learn-anything.xyz&#34;&gt; &lt;img alt=&#34;Learn-Anything.xyz&#34; src=&#34;https://raw.githubusercontent.com/learn-anything/docs/main/brand/learn-anything-banner.png&#34; width=&#34;800&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://learn-anything.xyz&#34;&gt;Learn-Anything.xyz&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-100000?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=black&amp;amp;color=black&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Organize world&#39;s knowledge, explore connections and curate learning paths&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;End goal of Learn Anything is to become the best place and tool for keeping track of what you know. What ideas you have. What you want to learn next. What you don&#39;t know yet. And how you can learn that in most optimal way possible given what you know already.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learn-anything.xyz&#34;&gt;Try website yourself first to get feel for it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is fully open source project with active community on &lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;Discord&lt;/a&gt;. There is great focus on both DX of developing everything LA and even more, end user UX.&lt;/p&gt; &#xA;&lt;h4&gt;Contents&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#files&#34;&gt;Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#run-graphql-server-grafbase&#34;&gt;Run GraphQL server (Grafbase)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#run-website-solid&#34;&gt;Run website (Solid)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#docs&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#design&#34;&gt;Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#tasks--explore&#34;&gt;Tasks / Explore&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/api&#34;&gt;api&lt;/a&gt; - &lt;a href=&#34;https://grafbase.com&#34;&gt;Grafbase&lt;/a&gt; GraphQL API layer + &lt;a href=&#34;https://www.edgedb.com&#34;&gt;EdgeDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/app&#34;&gt;app&lt;/a&gt; - desktop app built with Tauri/Solid&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/cli&#34;&gt;cli&lt;/a&gt; - clis for internal/external use&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/shared&#34;&gt;shared&lt;/a&gt; - shared TS functions (can be used by any part of monorepo)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/website&#34;&gt;website&lt;/a&gt; - learn-anything.xyz website code in Solid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pnpm.io&#34;&gt;PNPM&lt;/a&gt; is used to manage dependencies. &lt;a href=&#34;https://bun.sh&#34;&gt;Bun&lt;/a&gt; is used to run things.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm i&#xA;bun setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;bun setup&lt;/code&gt; runs &lt;code&gt;bun cmd.ts setup&lt;/code&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/cmd.ts&#34;&gt;cmd.ts&lt;/a&gt; code for what it does). In short it will setup the project ready for development with all the deps, &lt;code&gt;.env&lt;/code&gt; files necessary. Together with working EdgeDB database. Just follow instructions in the setup script.&lt;/p&gt; &#xA;&lt;p&gt;All next actions assume &lt;code&gt;bun setup&lt;/code&gt; was done correctly, you will receive &lt;code&gt;Setup completed&lt;/code&gt; after &lt;code&gt;bun setup&lt;/code&gt; completes succesfully.&lt;/p&gt; &#xA;&lt;p&gt;All commands you can run are seen &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/#commands&#34;&gt;here&lt;/a&gt;. Below goes over important ones.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] If you get any problems with setup, reach out on &lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Run GraphQL server (Grafbase)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bun grafbase&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;code&gt;http://localhost:4000&lt;/code&gt; either in browser or &lt;a href=&#34;https://pathfinder.dev&#34;&gt;Pathfinder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run website (Solid)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bun web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;code&gt;http://localhost:3000&lt;/code&gt; in browser.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Always open to useful ideas or fixes in form of issues or PRs.&lt;/p&gt; &#xA;&lt;p&gt;Current &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/issues&#34;&gt;issues&lt;/a&gt; are organised with &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/labels&#34;&gt;labels&lt;/a&gt;. Issues currently in focus are labeled with &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/labels/Current%20Month&#34;&gt;Current Month&lt;/a&gt; label.&lt;/p&gt; &#xA;&lt;p&gt;If issue is not already present (&lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/issues&#34;&gt;do search&lt;/a&gt; first), open &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/issues/new/choose&#34;&gt;new issue&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/discussions&#34;&gt;start discussion&lt;/a&gt; or ask about it on &lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s okay to submit draft PR as you can get help along the way to make it merge ready.&lt;/p&gt; &#xA;&lt;p&gt;Any issues with setup or making your first feature or trying to fix a bug will be resolved asap. Same goes for discussing ideas on how to make the tool even better than it is now.&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;All docs can be seen in &lt;a href=&#34;https://github.com/learn-anything/docs&#34;&gt;docs.learn-anything.xyz&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is advisable you read them, before you start developing anything as they provide a lot of context and general knowledge.&lt;/p&gt; &#xA;&lt;p&gt;There is big focus on documentation and clarity in the project. All code should be clear and understandable and well documented.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://github.com/learn-anything/docs/raw/main/docs/dev-tips.md&#34;&gt;Dev Tips&lt;/a&gt; for some advice on development together with &lt;a href=&#34;https://docs.learn-anything.xyz/tech-stack&#34;&gt;tech stack explanation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;All design is done in &lt;a href=&#34;https://www.figma.com/file/cJbTJZLDUpz8QPI5Q9Etiu/LA&#34;&gt;Figma&lt;/a&gt; and &lt;a href=&#34;https://www.figma.com/file/GelB3DWCdjQ2tU4v3kbHOj/LA-Think&#34;&gt;FigJam&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re designer and want to help out or have ideas, mention it on &lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;Discord&lt;/a&gt;&#39;s &lt;a href=&#34;https://discord.com/channels/428579844046192640/490987127891558400&#34;&gt;#design channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tasks / Explore&lt;/h2&gt; &#xA;&lt;p&gt;There is separate repo of &lt;a href=&#34;https://github.com/learn-anything/tasks&#34;&gt;tasks&lt;/a&gt; with goal to take the tasks used in LA and generalise it for use by community.&lt;/p&gt; &#xA;&lt;p&gt;Together with &lt;a href=&#34;https://github.com/learn-anything/explore&#34;&gt;explore&lt;/a&gt; for prototyping of various kind.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;h3&gt;bun setup&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bun cmd.ts setup&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Fully sets up LA for development (website, desktop, mobile, api, ..).&lt;/p&gt; &#xA;&lt;h3&gt;bun web&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd website &amp;amp;&amp;amp; bun dev&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run website.&lt;/p&gt; &#xA;&lt;h3&gt;bun app&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd app &amp;amp;&amp;amp; bun tauri:dev&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run desktop app built with Tauri.&lt;/p&gt; &#xA;&lt;h3&gt;bun cli&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd api/edgedb &amp;amp;&amp;amp; bun --watch ../../cli/cli.ts&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run CLI to quickly execute TS code (run queries and more..).&lt;/p&gt; &#xA;&lt;h3&gt;bun db:ui&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd grafbase/edgedb &amp;amp;&amp;amp; edgedb ui&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Open EdgeDB UI to run queries and more.&lt;/p&gt; &#xA;&lt;h3&gt;bun grafbase&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bun cmd.ts grafbase&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run Grafbase in development mode.&lt;/p&gt; &#xA;&lt;h3&gt;bun graphql&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bun cmd.ts graphql&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Generate queries for GQL client.&lt;/p&gt; &#xA;&lt;h3&gt;bun cmd&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bun --watch cmd.ts&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run command in &lt;a href=&#34;https://raw.githubusercontent.com/learn-anything/learn-anything.xyz/dev/cmd.ts&#34;&gt;cmd.ts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;bun ios&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;cd mobile &amp;amp;&amp;amp; pnpm run ios&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run mobile app with Expo.&lt;/p&gt; &#xA;&lt;h3&gt;🖤&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/bxtD8x6aNF&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-100000?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=black&amp;amp;color=black&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/learnanything_&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/learnanything-100000?logo=X&amp;amp;color=black&#34; alt=&#34;X&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>figma/code-connect</title>
    <updated>2024-04-19T01:38:33Z</updated>
    <id>tag:github.com,2024-04-19:/figma/code-connect</id>
    <link href="https://github.com/figma/code-connect" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool for connecting your design system components in code with your design system in Figma&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Code Connect&lt;/h1&gt; &#xA;&lt;p&gt;Code Connect is a tool for connecting your design system components in code with your design system in Figma. When using Code Connect, Figma&#39;s Dev Mode will display true-to-production code snippets from your design system instead of autogenerated code examples. In addition to connecting component definitions, Code Connect also supports mapping properties from code to Figma enabling dynamic and correct examples. This can be useful for when you have an existing design system and are looking to drive consistent and correct adoption of that design system across design and engineering.&lt;/p&gt; &#xA;&lt;p&gt;Code Connect is easy to set up, easy to maintain, type-safe, and extensible. Out of the box Code Connect comes with support for React, Storybook and SwiftUI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.figma.com/uploads/9a04c8236ff9cc18303b98a0983c82a589b6cfe3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Code Connect is available on Organization and Enterprise plans and requires a full Design or Dev Mode seat to use. Code Connect is currently in beta, so you can expect this feature to change. You may also experience bugs or performance issues during this time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to implement Code Connect for your platform, please navigate to the platform-specific API usage and documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/figma/code-connect/main/react/README.md&#34;&gt;React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/figma/code-connect/main/swiftui/README.md&#34;&gt;SwiftUI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>warp-id/solana-trading-bot</title>
    <updated>2024-04-19T01:38:33Z</updated>
    <id>tag:github.com,2024-04-19:/warp-id/solana-trading-bot</id>
    <link href="https://github.com/warp-id/solana-trading-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solana Trading Bot - Beta&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Solana Sniper Bot (Poc)&lt;/h1&gt; &#xA;&lt;p&gt;This code is written as proof of concept to demonstrate how we can buy new tokens immediately after the liquidity pool is open for trading.&lt;/p&gt; &#xA;&lt;p&gt;Script listens to new Raydium USDC or SOL pools and buys tokens for a fixed amount in USDC/SOL.&lt;br&gt; Depending on the speed of the RPC node, the purchase usually happens before the token is available on Raydium UI for swapping.&lt;/p&gt; &#xA;&lt;p&gt;This is provided as is, for learning purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To run the script you need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new empty Solana wallet&lt;/li&gt; &#xA; &lt;li&gt;Transfer some SOL to it.&lt;/li&gt; &#xA; &lt;li&gt;Convert some SOL to USDC or WSOL. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You need USDC or WSOL depending on the configuration set below.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configure the script by updating &lt;code&gt;.env.copy&lt;/code&gt; file (remove the .copy from the file name when done). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/warp-id/solana-trading-bot/master/#configuration&#34;&gt;Configuration&lt;/a&gt; section bellow&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install dependencies by typing: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the script by typing: &lt;code&gt;npm run start&lt;/code&gt; in terminal&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should see the following output:&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/warp-id/solana-trading-bot/master/readme/output.png&#34; alt=&#34;output&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Wallet&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PRIVATE_KEY&lt;/code&gt; - Your wallet&#39;s private key.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Connection&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RPC_ENDPOINT&lt;/code&gt; - HTTPS RPC endpoint for interacting with the Solana network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RPC_WEBSOCKET_ENDPOINT&lt;/code&gt; - WebSocket RPC endpoint for real-time updates from the Solana network.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMMITMENT_LEVEL&lt;/code&gt;- The commitment level of transactions (e.g., &#34;finalized&#34; for the highest level of security).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Bot&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt; - Set logging level, e.g., &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ONE_TOKEN_AT_A_TIME&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to process buying one token at a time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPUTE_UNIT_LIMIT&lt;/code&gt; - Compute limit used to calculate fees.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPUTE_UNIT_PRICE&lt;/code&gt; - Compute price used to calculate fees.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PRE_LOAD_EXISTING_MARKETS&lt;/code&gt; - Bot will load all existing markets in memory on start. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This option should not be used with public RPC.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CACHE_NEW_MARKETS&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to cache new markets. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This option should not be used with public RPC.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TRANSACTION_EXECUTOR&lt;/code&gt; - Set to &lt;code&gt;warp&lt;/code&gt; to use warp infrastructure for executing transactions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For more details checkout &lt;a href=&#34;https://raw.githubusercontent.com/warp-id/solana-trading-bot/master/#warp-transactions-beta&#34;&gt;warp&lt;/a&gt; section&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;WARP_FEE&lt;/code&gt; - If using warp executor this value will be used for transaction fees instead of &lt;code&gt;COMPUTE_UNIT_LIMIT&lt;/code&gt; and &lt;code&gt;COMPUTE_UNIT_LIMIT&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Minimum value is 0.0001 SOL, but we recommend using 0.006 SOL or above&lt;/li&gt; &#xA;   &lt;li&gt;On top of this fee, minimal solana network fee will be applied&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Buy&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;QUOTE_MINT&lt;/code&gt; - Which pools to snipe, USDC or WSOL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QUOTE_AMOUNT&lt;/code&gt; - Amount used to buy each new token.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTO_BUY_DELAY&lt;/code&gt; - Delay in milliseconds before buying a token.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_BUY_RETRIES&lt;/code&gt; - Maximum number of retries for buying a token.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BUY_SLIPPAGE&lt;/code&gt; - Slippage %&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Sell&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTO_SELL&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to enable automatic selling of tokens.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_SELL_RETRIES&lt;/code&gt; - Maximum number of retries for selling a token.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTO_SELL_DELAY&lt;/code&gt; - Delay in milliseconds before auto-selling a token.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PRICE_CHECK_INTERVAL&lt;/code&gt; - Interval in milliseconds for checking the take profit and stop loss conditions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PRICE_CHECK_DURATION&lt;/code&gt; - Time in milliseconds to wait for stop loss/take profit conditions. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you don&#39;t reach profit or loss bot will auto sell after this time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TAKE_PROFIT&lt;/code&gt; - Percentage profit at which to take profit. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Take profit is calculated based on quote mint.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STOP_LOSS&lt;/code&gt; - Percentage loss at which to stop the loss. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stop loss is calculated based on quote mint.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SELL_SLIPPAGE&lt;/code&gt; - Slippage %.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Filters&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;USE_SNIPE_LIST&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to enable buying only tokens listed in &lt;code&gt;snipe-list.txt&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pool must not exist before the script starts.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SNIPE_LIST_REFRESH_INTERVAL&lt;/code&gt; - Interval in milliseconds to refresh the snipe list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHECK_IF_MINT_IS_RENOUNCED&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to buy tokens only if their mint is renounced.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CHECK_IF_BURNED&lt;/code&gt; - Set to &lt;code&gt;true&lt;/code&gt; to buy tokens only if their liquidity pool is burned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MIN_POOL_SIZE&lt;/code&gt; - Bot will buy only if the pool size is greater than or equal the specified amount. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;0&lt;/code&gt; to disable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAX_POOL_SIZE&lt;/code&gt; - Bot will buy only if the pool size is less than or equal the specified amount. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set &lt;code&gt;0&lt;/code&gt; to disable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Warp transactions (beta)&lt;/h2&gt; &#xA;&lt;p&gt;In case you experience a lot of failed transactions or transaction performance is too slow, you can try using &lt;code&gt;warp&lt;/code&gt; for executing transactions. Warp is hosted service that executes transactions using integrations with third party providers.&lt;/p&gt; &#xA;&lt;p&gt;Using warp for transactions supports the team behind this project.&lt;/p&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;When using warp, transaction is sent to the hosted service. &lt;strong&gt;Payload that is being sent will NOT contain your wallet private key&lt;/strong&gt;. Fee transaction is signed on your machine. Each request is processed by hosted service and sent to third party provider. &lt;strong&gt;We don&#39;t store your transactions, nor we store your private key.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: Warp transactions are disabled by default.&lt;/p&gt; &#xA;&lt;h3&gt;Fees&lt;/h3&gt; &#xA;&lt;p&gt;When using warp for transactions, fee is distributed between developers of warp and third party providers. In case TX fails, no fee will be taken from your account.&lt;/p&gt; &#xA;&lt;h2&gt;Common issues&lt;/h2&gt; &#xA;&lt;p&gt;If you have an error which is not listed here, please create a new issue in this repository. To collect more information on an issue, please change &lt;code&gt;LOG_LEVEL&lt;/code&gt; to &lt;code&gt;debug&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unsupported RPC node&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you see following error in your log file:&lt;br&gt; &lt;code&gt;Error: 410 Gone: {&#34;jsonrpc&#34;:&#34;2.0&#34;,&#34;error&#34;:{&#34;code&#34;: 410, &#34;message&#34;:&#34;The RPC call or parameters have been disabled.&#34;}, &#34;id&#34;: &#34;986f3599-b2b7-47c4-b951-074c19842bad&#34; }&lt;/code&gt;&lt;br&gt; it means your RPC node doesn&#39;t support methods needed to execute script. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIX: Change your RPC node. You can use Helius or Quicknode.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;No token account&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you see following error in your log file:&lt;br&gt; &lt;code&gt;Error: No SOL token account found in wallet: &lt;/code&gt;&lt;br&gt; it means that wallet you provided doesn&#39;t have USDC/WSOL token account. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FIX: Go to dex and swap some SOL to USDC/WSOL. For example when you swap sol to wsol you should see it in wallet as shown below:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/warp-id/solana-trading-bot/master/readme/wsol.png&#34; alt=&#34;wsol&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xYUETCA2aP&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1201826085655023616?color=5865F2&amp;amp;logo=Discord&amp;amp;style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to leave a tip, you can send it to the following address: &lt;code&gt;7gm6BPQrSBaTAYaJheuRevBNXcmKsgbkfBCVSjBnt9aP&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you need custom features or assistance, feel free to contact the admin team on discord for dedicated support.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Use this script at your own risk.&lt;/p&gt;</summary>
  </entry>
</feed>