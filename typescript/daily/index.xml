<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-19T01:36:15Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>expo/react-conf-app</title>
    <updated>2024-05-19T01:36:15Z</updated>
    <id>tag:github.com,2024-05-19:/expo/react-conf-app</id>
    <link href="https://github.com/expo/react-conf-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Conference App for React Conf 2024&lt;/h1&gt; &#xA;&lt;p&gt;This is the source code for the React Conf 2024 app. Download it from stores: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.reactconf.app&#34;&gt;Google Play&lt;/a&gt;, &lt;a href=&#34;https://apps.apple.com/gb/app/react-conf/id6499559897&#34;&gt;App Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run the app locally, clone the repo and install dependencies with &lt;code&gt;yarn&lt;/code&gt; (&lt;strong&gt;yarn.lock&lt;/strong&gt; was generated with Yarn v1). Next, either &lt;a href=&#34;https://raw.githubusercontent.com/expo/react-conf-app/main/#compile-and-run-locally&#34;&gt;compile and run it locally&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/expo/react-conf-app/main/#build-and-run-with-eas&#34;&gt;build and run it with EAS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compile and run locally&lt;/h2&gt; &#xA;&lt;p&gt;To compile the app locally, you will need to have Xcode (&lt;a href=&#34;https://docs.expo.dev/guides/local-app-development/#ios&#34;&gt;learn more&lt;/a&gt;) and/or Android (&lt;a href=&#34;https://docs.expo.dev/guides/local-app-development/#android&#34;&gt;learn more&lt;/a&gt;) toolchains installed and configured.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] In order to be able to sign the app for an iOS device with a development certificate, you need a unique bundle identifier. Change the &lt;code&gt;APP_ID_PREFIX&lt;/code&gt; in &lt;strong&gt;app.config.js&lt;/strong&gt; to a unique ID, such as &lt;code&gt;yourname.reactconf&lt;/code&gt;. Run &lt;code&gt;npx expo prebuild --clean&lt;/code&gt; when you&#39;ve updated the value to sync it to the native project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generate the `android/` directory&#xA;npx expo prebuild -p android&#xA;&#xA;# Compile with Gradle&#xA;npx expo run:android&#xA;# Alternatively, start the dev server and manually open in Android Studio and build&#xA;npx expo start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generate the `ios/` directory&#xA;npx expo prebuild -p ios&#xA;&#xA;# Compile with xcodebuild and run on simulator.&#xA;npx expo run:ios&#xA;# Alternatively, start the dev server and manually open Xcode and build&#xA;npx expo start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For development on the Android Emulator / iOS Simulator:&lt;/p&gt; &#xA;&lt;h2&gt;Build and run with EAS&lt;/h2&gt; &#xA;&lt;h3&gt;Initial configuration&lt;/h3&gt; &#xA;&lt;p&gt;In order to run a build with EAS, you will need to update the EAS owner and project ID fields in &lt;strong&gt;app.config.js&lt;/strong&gt;. Change the &lt;code&gt;EAS_APP_OWNER&lt;/code&gt;, &lt;code&gt;EAS_PROJECT_ID&lt;/code&gt;, and &lt;code&gt;EAS_UPDATE_URL&lt;/code&gt; to empty strings, then run &lt;code&gt;eas init&lt;/code&gt; and &lt;code&gt;eas update:configure&lt;/code&gt; to get the new values for your username (never used EAS before? &lt;a href=&#34;https://docs.expo.dev/build/setup/&#34;&gt;look at this guide&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create a development build. When it&#39;s completed, you will be prompted to install it&#xA;eas build --platform android --profile localdev&#xA;# Create a preview build. This is like a production build, but intended to be&#xA;# installed directly to your device&#xA;eas build --platform android --profile preview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create a development build. When it&#39;s completed, you will be prompted to install it&#xA;eas build --platform ios --profile localdev&#xA;# Create a preview build. This is like a production build, but intended to be&#xA;# installed directly to your device&#xA;eas build --platform ios --profile preview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.expo.dev/get-started/introduction/&#34;&gt;Get started with Expo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://docs.expo.dev/tutorial/introduction/&#34;&gt;Expo &#34;Getting Started&#34; tutorial&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check out the &lt;a href=&#34;https://docs.expo.dev/tutorial/eas/introduction/&#34;&gt;EAS Tutorial&lt;/a&gt; or the &lt;a href=&#34;https://egghead.io/courses/build-and-deploy-react-native-apps-with-expo-eas-85ab521e&#34;&gt;EggHead course&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>visgl/react-google-maps</title>
    <updated>2024-05-19T01:36:15Z</updated>
    <id>tag:github.com,2024-05-19:/visgl/react-google-maps</id>
    <link href="https://github.com/visgl/react-google-maps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React components and hooks for the Google Maps JavaScript API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Components for the Google Maps JavaScript API&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/visgl/react-google-maps/tree/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a TypeScript / JavaScript library to integrate the Maps JavaScript API into your React application. It comes with a collection of React components to create maps, markers and infowindows, and a set of hooks to use some of the Maps JavaScript API &lt;a href=&#34;https://developers.google.com/maps/documentation/javascript#services&#34;&gt;Services&lt;/a&gt; and &lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/libraries&#34;&gt;Libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This library is available on npm as &lt;a href=&#34;https://www.npmjs.com/package/@vis.gl/react-google-maps&#34;&gt;&lt;code&gt;@vis.gl/react-google-maps&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @vis.gl/react-google-maps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @vis.gl/react-google-maps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;(PowerShell users: since &lt;code&gt;@&lt;/code&gt; has a special meaning in PowerShell, the package name has to be quoted)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import the &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/components/api-provider&#34;&gt;&lt;code&gt;APIProvider&lt;/code&gt;&lt;/a&gt; and wrap it around all components that should have access to the Maps JavaScript API. Any component within the context of the &lt;code&gt;APIProvider&lt;/code&gt; can use the hooks and components provided by this library.&lt;/p&gt; &#xA;&lt;p&gt;To render a simple map, add a &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/components/map&#34;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; component inside the &lt;code&gt;APIProvider&lt;/code&gt;. Within the &lt;code&gt;Map&lt;/code&gt; component, you can then add further components like &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/components/marker&#34;&gt;&lt;code&gt;Marker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/components/advanced-marker&#34;&gt;&lt;code&gt;AdvancedMarker&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/components/info-window&#34;&gt;&lt;code&gt;InfoWindow&lt;/code&gt;&lt;/a&gt; to render content on the map.&lt;/p&gt; &#xA;&lt;p&gt;For more advanced use-cases you can even add your own components to the map that make use of &lt;code&gt;google.maps.OverlayView&lt;/code&gt; or &lt;code&gt;google.maps.WebGlOverlayView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import {APIProvider, Map, Marker} from &#39;@vis.gl/react-google-maps&#39;;&#xA;&#xA;function App() {&#xA;  const position = {lat: 53.54992, lng: 10.00678};&#xA;&#xA;  return (&#xA;    &amp;lt;APIProvider apiKey={&#39;YOUR API KEY HERE&#39;}&amp;gt;&#xA;      &amp;lt;Map defaultCenter={position} defaultZoom={10}&amp;gt;&#xA;        &amp;lt;Marker position={position} /&amp;gt;&#xA;      &amp;lt;/Map&amp;gt;&#xA;    &amp;lt;/APIProvider&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/&#34;&gt;documentation&lt;/a&gt; or &lt;a href=&#34;https://visgl.github.io/react-google-maps/examples&#34;&gt;examples&lt;/a&gt; for more in-depth information about this library.&lt;/p&gt; &#xA;&lt;h3&gt;Using other libraries of the Maps JavaScript API&lt;/h3&gt; &#xA;&lt;p&gt;Besides rendering maps, the Maps JavaScript API has a lot of &lt;a href=&#34;https://developers.google.com/maps/documentation/javascript/libraries&#34;&gt;additional libraries&lt;/a&gt; for things like geocoding, routing, the Places API, Street View, and a lot more.&lt;/p&gt; &#xA;&lt;p&gt;These libraries are not loaded by default, which is why this module provides the &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/api-reference/hooks/use-maps-library&#34;&gt;&lt;code&gt;useMapsLibrary()&lt;/code&gt;&lt;/a&gt; hook to handle dynamic loading of additional libraries.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you just want to use the &lt;code&gt;google.maps.geocoding.Geocoder&lt;/code&gt; class in a component and you don&#39;t even need a map, it can be implemented like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import {useMap, useMapsLibrary} from &#39;@vis.gl/react-google-maps&#39;;&#xA;&#xA;const MyComponent = () =&amp;gt; {&#xA;  // useMapsLibrary loads the geocoding library, it might initially return `null`&#xA;  // if the library hasn&#39;t been loaded. Once loaded, it will return the library&#xA;  // object as it would be returned by `await google.maps.importLibrary()`&#xA;  const geocodingLib = useMapsLibrary(&#39;geocoding&#39;);&#xA;  const geocoder = useMemo(&#xA;    () =&amp;gt; geocodingLib &amp;amp;&amp;amp; new geocodingLib.Geocoder(),&#xA;    [geocodingLib],&#xA;  );&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    if (!geocoder) return;&#xA;&#xA;    // now you can use `geocoder.geocode(...)` here&#xA;  }, [geocoder]);&#xA;&#xA;  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;;&#xA;};&#xA;&#xA;const App = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;APIProvider apiKey={&#39;YOUR API KEY HERE&#39;}&amp;gt;&#xA;      &amp;lt;MyComponent /&amp;gt;&#xA;    &amp;lt;/APIProvider&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Explore our &lt;a href=&#34;https://raw.githubusercontent.com/visgl/react-google-maps/main/examples&#34;&gt;examples directory on GitHub&lt;/a&gt; or the &lt;a href=&#34;https://visgl.github.io/react-google-maps/examples&#34;&gt;examples on our website&lt;/a&gt; for full implementation examples.&lt;/p&gt; &#xA;&lt;h2&gt;Terms of Service&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;@vis.gl/react-google-maps&lt;/code&gt; uses Google Maps Platform services. Use of Google Maps Platform services through this library is subject to the &lt;a href=&#34;https://cloud.google.com/maps-platform/terms&#34;&gt;Google Maps Platform Terms of Service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library is not a Google Maps Platform Core Service. Therefore, the Google Maps Platform Terms of Service (e.g., Technical Support Services, Service Level Agreements, and Deprecation Policy) do not apply to this library.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;This library is offered via an open source license. It is not governed by the Google Maps Platform &lt;a href=&#34;https://cloud.google.com/maps-platform/terms/tssg&#34;&gt;Support Technical Support Services Guidelines&lt;/a&gt;, the &lt;a href=&#34;https://cloud.google.com/maps-platform/terms/sla&#34;&gt;SLA&lt;/a&gt;, or the &lt;a href=&#34;https://cloud.google.com/maps-platform/terms/other/deprecation-policy&#34;&gt;Deprecation Policy&lt;/a&gt; (however, any Google Maps Platform services used by this library remain subject to the Google Maps Platform Terms of Service).&lt;/p&gt; &#xA;&lt;p&gt;If you find a bug, or have a feature request, please &lt;a href=&#34;https://github.com/visgl/react-google-maps/issues&#34;&gt;file an issue&lt;/a&gt; on GitHub. If you would like to get answers to technical questions from other Google Maps Platform developers, feel free to open a thread in the &lt;a href=&#34;https://github.com/visgl/react-google-maps/discussions&#34;&gt;discussions section on GitHub&lt;/a&gt; or ask a question through one of our &lt;a href=&#34;https://developers.google.com/maps/developer-community&#34;&gt;developer community channels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute, please check the &lt;a href=&#34;https://visgl.github.io/react-google-maps/docs/contributing&#34;&gt;Contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also discuss this library on &lt;a href=&#34;https://discord.gg/f4hvx8Rp2q&#34;&gt;our Discord server&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>