<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-02T01:57:57Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stream-labs/desktop</title>
    <updated>2022-08-02T01:57:57Z</updated>
    <id>tag:github.com,2022-08-02:/stream-labs/desktop</id>
    <link href="https://github.com/stream-labs/desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and open source streaming software built on OBS and Electron.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Streamlabs Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/streamlabs/Streamlabs%20OBS/_build/latest?definitionId=1&amp;amp;branchName=staging&#34;&gt;&lt;img src=&#34;https://dev.azure.com/streamlabs/Streamlabs%20OBS/_apis/build/status/stream-labs.streamlabs-obs?branchName=staging&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simple, powerful, and efficient live streaming software built on Electron and OBS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://slobs-cdn.streamlabs.com/media/streamlabs-desktop_1920x1050.png&#34; alt=&#34;Streamlabs Desktop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This application currently only supports OSX 10.14+ and 64-bit Windows.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Node.js&lt;/h3&gt; &#xA;&lt;p&gt;Node is required for installing npm packages and for running various scripts. We recommend the latest LTS release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;https://nodejs.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Yarn&lt;/h3&gt; &#xA;&lt;p&gt;We use Yarn as our package manager. We use yarn modern (berry) with the yarn version checked in to version control. To get the yarn CLI, we currently recommend installing it with npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bash&lt;/h3&gt; &#xA;&lt;p&gt;Some of our scripts assume a bash-like environment. On Windows, we recommend using Git Bash, which is included with Git for Windows. On macOS, the default shell should work fine.&lt;/p&gt; &#xA;&lt;h3&gt;Native Modules&lt;/h3&gt; &#xA;&lt;p&gt;Streamlabs Desktop uses several native C++ modules. These are NPM modules that live in separate repositories, and are automatically installed as prebuilt binaries by Yarn. If you are not doing any development on these native modules, no additional action is required to install native modules.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install all node modules via yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, compile assets with webpack:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can watch for changes to app files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Starting&lt;/h2&gt; &#xA;&lt;p&gt;You can start the app by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;These variables can be used in development to force certain behavior.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_FORCE_AUTO_UPDATE&lt;/code&gt;: Force the auto-updater to run in development. Normally this would only run in production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_CACHE_DIR&lt;/code&gt;: Force a different location for the user data cache directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_DISABLE_MAIN_LOGGING&lt;/code&gt;: Disable javascript logging in the main process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_REPORT_TO_SENTRY&lt;/code&gt;: Report errors to sentry in the dev environment&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_PRODUCTION_DEBUG&lt;/code&gt;: Forces dev tools to open when the app starts&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;You can open dev tools by clicking the &lt;code&gt;&amp;lt;/&amp;gt;&lt;/code&gt; button on the sidebar. In the development environment, the titlebar of the main window will light up red when an exception occurs in any window.&lt;/p&gt; &#xA;&lt;p&gt;Our app is comprised of several windows, which are essential separate copies of the same Javascript app, which are running different pieces of the code and communicating via Electron IPC.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;worker&lt;/code&gt; - This is a persistent invisible window that runs our entire services layer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;main&lt;/code&gt; - This is the main window of the application. It communicates with the worker window to perform actions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;child&lt;/code&gt; - This window is always running in the background, and appears to show windows like Source Properties. It stays always running because Electron windows can take several seconds to initialize, so we keep it ready in the background.&lt;/p&gt; &#xA;&lt;p&gt;There are potentially many other JS runtime processes that can be running depending on use, for features like Apps, embedded webviews, one-off windows like projectors, pop-outs etc.&lt;/p&gt; &#xA;&lt;h3&gt;Sync / Async&lt;/h3&gt; &#xA;&lt;p&gt;Given the heavy reliance on interprocess communication in our application, we strongly recommend using asynchronous IPC whenever possible. When accessing a service, calling it as an action will call it asynchronously.&lt;/p&gt; &#xA;&lt;p&gt;For example the following (synchronous):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;StreamingService.toggleStreaming()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Can be rewritten as (asynchronous):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;StreamingService.actions.toggleStreaming()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The return type of the latter will automatically be &lt;code&gt;void&lt;/code&gt; as actions are unable to return values. In general, receiving information from services is best done via &lt;code&gt;views&lt;/code&gt;. &lt;code&gt;views&lt;/code&gt; are executed in-window, and backed by our &lt;code&gt;vuex&lt;/code&gt; data store, which is replicated across windows.&lt;/p&gt; &#xA;&lt;h3&gt;Vue / React&lt;/h3&gt; &#xA;&lt;p&gt;We are in the process of migrating from Vue to React. There are many components of both frameworks in our codebase currently. All new components should be written in React, and major non-trivial changes to existing Vue components should be accompanied with a rewrite to React.&lt;/p&gt; &#xA;&lt;p&gt;We exclusively use functional components in React, relying on the hooks API for things like component state and lifecycle.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We accept outside contributions, and do our best to respond to Pull Requests. We ask that all contributors sign a Contributor License Agreement before merging code. We do not guarantee that all external Pull Requests will be merged, but we deeply appreciate any and all changes submitted. Thank you for your interest and contribution.&lt;/p&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;At this time, we are not able to accept translations submitted to GitHub, as we use a professional translation team that manages translations elsewhere.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging/Distribution&lt;/h2&gt; &#xA;&lt;p&gt;For Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For macOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn package:mac&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that both of these commands require code signing certificates to be present in the environment, and in the case of macOS, a valid Apple developer account for notarization of the app package.&lt;/p&gt; &#xA;&lt;p&gt;There are some environment variables that can be passed to skip these steps:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_NO_SIGN&lt;/code&gt; Do not attempt to codesign the app package&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SLOBS_NO_NOTARIZE&lt;/code&gt; Do not attempt to notarize the macOS package&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§ OBS Developers&lt;/h2&gt; &#xA;&lt;p&gt;At its core, Streamlabs Desktop is powered by the &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS&lt;/a&gt; project. We want to thank all of the developers over at the OBS project for their years of tireless hard work, without which Streamlabs Desktop wouldn&#39;t exist today.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vercel/nextjs-subscription-payments</title>
    <updated>2022-08-02T01:57:57Z</updated>
    <id>tag:github.com,2022-08-02:/vercel/nextjs-subscription-payments</id>
    <link href="https://github.com/vercel/nextjs-subscription-payments" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Clone, deploy, and fully customize a SaaS subscription application with Next.js.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js Subscription Payments Starter&lt;/h1&gt; &#xA;&lt;p&gt;The all-in-one starter kit for high-performance SaaS applications.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Secure user management and authentication with &lt;a href=&#34;https://supabase.io/docs/guides/auth&#34;&gt;Supabase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Powerful data access &amp;amp; management tooling on top of PostgreSQL with &lt;a href=&#34;https://supabase.io/docs/guides/database&#34;&gt;Supabase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://stripe.com/docs/payments/checkout&#34;&gt;Stripe Checkout&lt;/a&gt; and the &lt;a href=&#34;https://stripe.com/docs/billing/subscriptions/customer-portal&#34;&gt;Stripe customer portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic syncing of pricing plans and subscription statuses via &lt;a href=&#34;https://stripe.com/docs/webhooks&#34;&gt;Stripe webhooks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://subscription-payments.vercel.app/&#34;&gt;https://subscription-payments.vercel.app/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://subscription-payments.vercel.app/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vercel/nextjs-subscription-payments/main/public/demo.png&#34; alt=&#34;Screenshot of demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vercel/nextjs-subscription-payments/main/public/architecture_diagram.svg?sanitize=true&#34; alt=&#34;Architecture diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Deploy with Vercel&lt;/h2&gt; &#xA;&lt;p&gt;The Vercel deployment will guide you through creating a Supabase account and project. After installing the Supabase integration, you&#39;ll need to configure Stripe with a few simple steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We&#39;re working on our Stripe integration. We&#39;ve documented the required steps below under &#34;Configure Stripe&#34; until the integration is ready.&lt;/p&gt; &#xA;&lt;p&gt;To get started, click the &#34;Deploy with Vercel&#34; button below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnextjs-subscription-payments&amp;amp;project-name=nextjs-subscription-payments&amp;amp;repo-name=nextjs-subscription-payments&amp;amp;demo-title=Next.js%20Subscription%20Payments%20Starter&amp;amp;demo-description=Demo%20project%20on%20Vercel&amp;amp;demo-url=https%3A%2F%2Fsubscription-payments.vercel.app&amp;amp;demo-image=https%3A%2F%2Fsubscription-payments.vercel.app%2Fdemo.png&amp;amp;integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-subscription-payments&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnextjs-subscription-payments&amp;amp;project-name=nextjs-subscription-payments&amp;amp;repo-name=nextjs-subscription-payments&amp;amp;demo-title=Next.js%20Subscription%20Payments%20Starter&amp;amp;demo-description=Demo%20project%20on%20Vercel&amp;amp;demo-url=https%3A%2F%2Fsubscription-payments.vercel.app&amp;amp;demo-image=https%3A%2F%2Fsubscription-payments.vercel.app%2Fdemo.png&amp;amp;integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv&amp;amp;external-id=nextjs-subscription-payments&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vercel/nextjs-subscription-payments/main/public/vercel-deploy.png&#34; alt=&#34;Screenshot of Vercel deployment&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once the project has deployed, continue with the configuration steps below.&lt;/p&gt; &#xA;&lt;p&gt;The initial build will fail due to missing Stripe environment variables. After configuring Stripe, redeploy the application.&lt;/p&gt; &#xA;&lt;h2&gt;Configure Supabase Auth&lt;/h2&gt; &#xA;&lt;h4&gt;[Optional] - Set up OAuth providers&lt;/h4&gt; &#xA;&lt;p&gt;You can use third-party login providers like GitHub or Google. Refer to the &lt;a href=&#34;https://supabase.io/docs/guides/auth#third-party-logins&#34;&gt;docs&lt;/a&gt; to learn how to configure these.&lt;/p&gt; &#xA;&lt;h2&gt;Configure Stripe&lt;/h2&gt; &#xA;&lt;p&gt;To start developing your SaaS application, we&#39;ll need to configure Stripe to handle test payments. For the following steps, make sure you have the &#34;viewing test data&#34; toggle switched to &#34;on.&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Configure webhook&lt;/h3&gt; &#xA;&lt;p&gt;We need to configure the webhook pictured in the architecture diagram above. This webhook is the piece that connects Stripe to your Vercel serverless functions.&lt;/p&gt; &#xA;&lt;p&gt;First, click the &#34;Add endpoint&#34; button on the &lt;a href=&#34;https://dashboard.stripe.com/test/webhooks&#34;&gt;test Endpoints page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, set the endpoint URL to &lt;code&gt;https://your-deployment-url.vercel.app/api/webhooks&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Next, click the &lt;code&gt;receive all events&lt;/code&gt; link in the &lt;code&gt;Events to send&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Finally, copy the &lt;code&gt;Signing secret&lt;/code&gt; as we&#39;ll need that in the next step.&lt;/p&gt; &#xA;&lt;h3&gt;Set environment variables&lt;/h3&gt; &#xA;&lt;p&gt;To securely interact with Stripe, we need to add a few environment variables in the Vercel dashboard.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_SECRET_KEY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_WEBHOOK_SECRET_LIVE&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find the first two keys on the &lt;a href=&#34;https://dashboard.stripe.com/test/apikeys&#34;&gt;API keys tab&lt;/a&gt; in Stripe. The &lt;code&gt;STRIPE_WEBHOOK_SECRET_LIVE&lt;/code&gt; is the &lt;code&gt;Signing secret&lt;/code&gt; copied in the previous webhook configuration step.&lt;/p&gt; &#xA;&lt;h3&gt;Redeploy and Test&lt;/h3&gt; &#xA;&lt;p&gt;We need to redeploy the application so that the latest environment variables are present.&lt;/p&gt; &#xA;&lt;p&gt;Redeploy your application by going to the deployments tab, finding your deployment, and clicking &#34;redeploy.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Finally, click the &lt;code&gt;Send test webhook&lt;/code&gt; button and send a &lt;code&gt;product.created&lt;/code&gt; event. If everything works, you should see a test product in your Supabase database.&lt;/p&gt; &#xA;&lt;p&gt;After verifying that the configuration is working, delete the test products created via the webhook in Supabase.&lt;/p&gt; &#xA;&lt;h3&gt;Create product and pricing information&lt;/h3&gt; &#xA;&lt;p&gt;For Stripe to automatically bill your users for recurring payments, you need to create your product and pricing information in the &lt;a href=&#34;https://dashboard.stripe.com/test/products&#34;&gt;Stripe Dashboard&lt;/a&gt;. When you create or update your product and price information, the changes automatically sync with your Supabase database.&lt;/p&gt; &#xA;&lt;p&gt;Stripe Checkout currently supports pricing that bills a predefined amount at a specific interval. More complex plans (e.g., different pricing tiers or seats) are not yet supported.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can create business models with different pricing tiers, e.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Product 1: Hobby &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Price 1: 10 USD per month&lt;/li&gt; &#xA;   &lt;li&gt;Price 2: 100 USD per year&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Product 2: Freelancer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Price 1: 20 USD per month&lt;/li&gt; &#xA;   &lt;li&gt;Price 2: 200 USD per year&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Generate test data with the Stripe CLI&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://stripe.com/docs/stripe-cli#install&#34;&gt;Stripe CLI&lt;/a&gt; &lt;code&gt;fixtures&lt;/code&gt; command executes a series of API requests defined in a JSON file. To speed up the setup, we have added a &lt;a href=&#34;https://raw.githubusercontent.com/vercel/nextjs-subscription-payments/main/fixtures/stripe-fixtures.json&#34;&gt;fixtures file&lt;/a&gt; to bootstrap test product and pricing data in your Stripe account. Simply run &lt;code&gt;stripe fixtures fixtures/stripe-fixtures.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Be sure to start the webhook forwarding (see below) so that the products created by the fixtures command above are imported into your database.&lt;/p&gt; &#xA;&lt;h3&gt;Configure the Stripe customer portal&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set your custom branding in the &lt;a href=&#34;https://dashboard.stripe.com/settings/branding&#34;&gt;settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure the Customer Portal &lt;a href=&#34;https://dashboard.stripe.com/test/settings/billing/portal&#34;&gt;settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Toggle on &#34;Allow customers to update their payment methods&#34;&lt;/li&gt; &#xA; &lt;li&gt;Toggle on &#34;Allow customers to update subscriptions&#34;&lt;/li&gt; &#xA; &lt;li&gt;Toggle on &#34;Allow customers to cancel subscriptions&#34;&lt;/li&gt; &#xA; &lt;li&gt;Add the products and prices that you want&lt;/li&gt; &#xA; &lt;li&gt;Set up the required business information and links&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;That&#39;s it&lt;/h3&gt; &#xA;&lt;p&gt;That&#39;s it. Now you&#39;re ready to earn recurring revenue from your customers ü•≥&lt;/p&gt; &#xA;&lt;h2&gt;Going live&lt;/h2&gt; &#xA;&lt;h3&gt;Archive testing products&lt;/h3&gt; &#xA;&lt;p&gt;Archive all test mode Stripe products before going live. Before creating your live mode products, make sure to follow the steps below to set up your live mode env vars and webhooks.&lt;/p&gt; &#xA;&lt;h3&gt;Configure production environment variables&lt;/h3&gt; &#xA;&lt;p&gt;To run the project in live mode and process payments with Stripe, modify the environment variables from Stripe &#34;test mode&#34; to &#34;production mode.&#34; After switching the variables, be sure to redeploy the application.&lt;/p&gt; &#xA;&lt;p&gt;To verify you are running in production mode, test checking out with the &lt;a href=&#34;https://stripe.com/docs/testing&#34;&gt;Stripe test card&lt;/a&gt;. The test card should not work.&lt;/p&gt; &#xA;&lt;h3&gt;Redeploy&lt;/h3&gt; &#xA;&lt;p&gt;Afterward, you will need to rebuild your production deployment for the changes to take effect. Within your project Dashboard, navigate to the &#34;Deployments&#34; tab, select the most recent deployment, click the overflow menu button (next to the &#34;Visit&#34; button) and select &#34;Redeploy.&#34;&lt;/p&gt; &#xA;&lt;h2&gt;Develop locally&lt;/h2&gt; &#xA;&lt;p&gt;Deploying with Vercel will create a repository for you, which you can clone to your local machine.&lt;/p&gt; &#xA;&lt;p&gt;Next, use the &lt;a href=&#34;https://vercel.com/download&#34;&gt;Vercel CLI&lt;/a&gt; to link your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vercel login&#xA;vercel link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up the env vars locally&lt;/h3&gt; &#xA;&lt;p&gt;Use the Vercel CLI to download the development env vars:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vercel env pull .env.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running this command will create a new &lt;code&gt;.env.local&lt;/code&gt; file in your project folder. For security purposes, you will need to set the &lt;code&gt;SUPABASE_SERVICE_ROLE_KEY&lt;/code&gt; manually from your &lt;a href=&#34;https://app.supabase.io/&#34;&gt;Supabase dashboard&lt;/a&gt; (Settings &amp;gt; API). Lastly, the webhook secret differs for local testing vs. when deployed to Vercel. Follow the instructions below to get the corresponding webhook secret.&lt;/p&gt; &#xA;&lt;h3&gt;Use the Stripe CLI to test webhooks&lt;/h3&gt; &#xA;&lt;p&gt;First &lt;a href=&#34;https://stripe.com/docs/stripe-cli&#34;&gt;install the CLI&lt;/a&gt; and &lt;a href=&#34;https://stripe.com/docs/stripe-cli#login-account&#34;&gt;link your Stripe account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Next, start the webhook forwarding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stripe listen --forward-to=localhost:3000/api/webhooks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running this Stripe command will print a webhook secret (such as, &lt;code&gt;whsec_***&lt;/code&gt;) to the console. Set &lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt; to this value in your &lt;code&gt;.env.local&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Install dependencies and run the Next.js client&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;npm run dev&#xA;# or&#xA;yarn&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>johannesjo/super-productivity</title>
    <updated>2022-08-02T01:57:57Z</updated>
    <id>tag:github.com,2022-08-02:/johannesjo/super-productivity</id>
    <link href="https://github.com/johannesjo/super-productivity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Super Productivity is an advanced todo list app with integrated Timeboxing and time tracking capabilities. It also comes with integrations for Jira, Gitlab, GitHub and Open Project.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://vshymanskyy.github.io/StandWithUkraine&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg?sanitize=true&#34; alt=&#34;Stand With Ukraine&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://super-productivity.com/&#34;&gt; &lt;img align=&#34;center&#34; alt=&#34;Banner&#34; src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/banner-bw.png&#34;&gt; &lt;/a&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;text-align: center;&#34;&gt; &lt;a href=&#34;https://lbesson.mit-license.org&#34;&gt; &lt;img alt=&#34;MIT license&#34; src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square&#34; align=&#34;center&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/johannesjo/super-productivity/releases&#34;&gt; &lt;img alt=&#34;GitHub All Releases&#34; src=&#34;https://img.shields.io/github/downloads/johannesjo/super-productivity/total&#34; align=&#34;center&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.producthunt.com/posts/super-productivity&#34;&gt; &lt;img alt=&#34;On product hunt&#34; src=&#34;https://img.shields.io/badge/on-product%20hunt-blue.svg?style=flat-square&#34; align=&#34;center&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com&#34;&gt; &lt;img alt=&#34;tweet&#34; src=&#34;https://img.shields.io/twitter/url/https/github.com/ArmynC/ArminC-AutoExec.svg?style=flat-square&amp;amp;logo=twitter&#34; target=&#34;_blank&#34; align=&#34;center&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://snapcraft.io/superproductivity&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Get it from the Snap Store&#34; src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34; align=&#34;center&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/www.microsoft.com/store/apps/9NHFVG8361TW?cid=storebadge&amp;amp;ocid=badge&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#34; align=&#34;center&#34; alt=&#34;English badge&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;amp;mt=12&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/app-store-badge.svg?sanitize=true&#34; align=&#34;center&#34; alt=&#34;App Store Badge&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/google-play-badge.png&#34; align=&#34;center&#34; alt=&#34;Play Store Badge&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;Super Productivity is an advanced todo list app with integrated &lt;a href=&#34;https://en.wikipedia.org/wiki/Timeboxing&#34;&gt;Timeboxing&lt;/a&gt; and time tracking capabilities.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://app.super-productivity.com&#34;&gt;&lt;span&gt;üåê&lt;/span&gt; Open Web App&lt;/a&gt; or &lt;a href=&#34;https://github.com/johannesjo/super-productivity/releases&#34;&gt;&lt;span&gt;üíª&lt;/span&gt; Download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚úî&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Keep organized and focused!&lt;/strong&gt; Plan and categorize your tasks using sub tasks, projects and tags and color code them as needed.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;timeboxing&lt;/strong&gt; and &lt;strong&gt;track your time&lt;/strong&gt;. Create time sheets and work summaries in a breeze to easily export them to your company&#39;s time tracking system.&lt;/li&gt; &#xA; &lt;li&gt;Helps you to &lt;strong&gt;establish healthy &amp;amp; productive habits&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A &lt;strong&gt;break reminder&lt;/strong&gt; reminds to you, when it&#39;s time to step away.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;strong&gt;anti-procrastination feature&lt;/strong&gt; helps you gain perspective, when you really need to.&lt;/li&gt; &#xA;   &lt;li&gt;Need some extra focus? A &lt;strong&gt;pomodoro timer&lt;/strong&gt; is also always at hand.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Collect personal metrics&lt;/strong&gt; to see, which of your work routines need adjustments.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Integrate with &lt;strong&gt;Jira&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, &lt;strong&gt;GitLab&lt;/strong&gt; and &lt;strong&gt;OpenProject&lt;/strong&gt;. Auto import tasks assigned to you, plan the details locally, automatically create worklogs and get notified right away, when something changes.&lt;/li&gt; &#xA; &lt;li&gt;Attach context information to tasks and projects. Create &lt;strong&gt;notes&lt;/strong&gt;, attach &lt;strong&gt;files&lt;/strong&gt; or create &lt;strong&gt;project level bookmarks&lt;/strong&gt; for links, files and even commands.&lt;/li&gt; &#xA; &lt;li&gt;Super Productivity &lt;strong&gt;respects your privacy&lt;/strong&gt; and &lt;strong&gt;does NOT collect any data&lt;/strong&gt; and there are no user accounts or registration. &lt;strong&gt;You decide where you store your data!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt; and always will be.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And much more!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/_mvMXWLsL-8&#34;&gt;&lt;img alt=&#34;Work View with global links&#34; src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/screen_standard.png&#34; width=&#34;100%&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ùì&lt;/span&gt; How to use it&lt;/h2&gt; &#xA;&lt;p&gt;If you need some help, &lt;a href=&#34;https://dev.to/johannesjo/getting-started-with-super-productivity-2791&#34;&gt;the best place to start is this article on dev.to&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer there is also a (long) &lt;a href=&#34;https://www.youtube.com/watch?v=VoF2_RSdNXA&#34;&gt;youtube video available&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is another &lt;a href=&#34;https://dev.to/johannesjo/super-productivity-how-to-grow-fond-of-time-tracking-and-task-management-22ee&#34;&gt;article&lt;/a&gt; on how I personally might use the app - and still &lt;a href=&#34;https://dev.to/johannesjo/the-prioritising-scheme-how-to-eat-the-frog-with-super-productivity-mlk&#34;&gt;another one&lt;/a&gt; on how I implement the &#39;eat the frog&#39; prioritizing scheme in the app .&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/discussions&#34;&gt;If you have further questions, please refer to the discussions page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;‚å® Keyboard shortcuts and short-syntax&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h3&gt;Keyboard shortcuts (most importan)&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;A&lt;/code&gt;: Open add task bar&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt;: Edit currently focussed task title&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Arrow keys&lt;/code&gt;: Navigate around task list&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;D&lt;/code&gt;: Mark currently focused task as done&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;A&lt;/code&gt;: Add subtask to currently focused task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Y&lt;/code&gt;: Toggle tracking time to currently focused task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;S&lt;/code&gt;: Open schedule dialog for currently focused task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Backspace&lt;/code&gt;: Delete currently focused task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ArrowRight&lt;/code&gt;: Open additional info panel for currently focused task&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;ArrowUp&lt;/code&gt;: Move currently focused task up in list&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;ArrowDown&lt;/code&gt;: Move currently focused task down in list&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h3&gt;Short-Syntax&lt;/h3&gt; &#xA; &lt;p&gt;Can be used when adding a task.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;# &amp;lt;tag-name&amp;gt;&lt;/code&gt;: add a tag to the task&lt;br&gt; (&lt;code&gt;&#34;task-description #tag1&#34;&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;&amp;lt;number&amp;gt;m&lt;/code&gt; or &lt;code&gt;&amp;lt;number&amp;gt;h&lt;/code&gt;: set time-estimate for the task&lt;br&gt; (&lt;code&gt;&#34;task-description 10m&#34;&lt;/code&gt; or &lt;code&gt;&#34;task-description 5h&#34;&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;+ &amp;lt;project-name&amp;gt;&lt;/code&gt;: add the task to an existing project&lt;br&gt; (&lt;code&gt;&#34;task-description +Important Project&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;span&gt;üåê&lt;/span&gt; Web Version&lt;/h2&gt; &#xA;&lt;p&gt;Check out the web version eventhough it is a bit limited: Time tracking only works if the app is open and for idle time tracking to work, the chrome extension has to be installed.&lt;/p&gt; &#xA;&lt;p&gt;If you want the Jira integration and idle time tracking to work, you have to also download and install the &lt;a href=&#34;https://chrome.google.com/webstore/detail/super-productivity/ljkbjodfmekklcoibdnhahlaalhihmlb&#34;&gt;Super Productivity Chrome Extension&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíª&lt;/span&gt; Downloads &amp;amp; Install&lt;/h2&gt; &#xA;&lt;h3&gt;All Platforms&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/releases&#34;&gt;Install from the releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Due to certification issues it&#39;s recommended to download the app from the Microsoft Store:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/www.microsoft.com/store/apps/9nhfvg8361tw?cid=storebadge&amp;amp;ocid=badge&#34;&gt;&lt;img src=&#34;https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png&#34; alt=&#34;English badge&#34; width=&#34;127&#34; height=&#34;52&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Snap - Most distributions&lt;/h4&gt; &#xA;&lt;p&gt;Install via command-line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# stable&#xA;sudo snap install superproductivity&#xA;&#xA;# edge channel releases&#xA;sudo snap install --channel=edge superproductivity&#xA;&#xA;# it is also recommended to disable updates to the app while it is running:&#xA;sudo snap set core experimental.refresh-app-awareness=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;a href=&#34;https://snapcraft.io/superproductivity&#34;&gt; &lt;img alt=&#34;Get it from the Snap Store&#34; src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h4&gt;Aur - Arch Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://aur.archlinux.org/superproductivity-bin.git&#xA;cd superproductivity-bin&#xA;makepkg -si&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;Install via &lt;a href=&#34;https://github.com/caskroom/homebrew-cask&#34;&gt;homebrew cask&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --cask superproductivity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/apps.apple.com/de/app/super-productivity/id1482572463?l=en&amp;amp;mt=12&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/app-store-badge.svg?sanitize=true&#34; alt=&#34;App Store Badge&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.superproductivity.superproductivity&amp;amp;hl=gsw&#34;&gt;very early(!) Android version available&lt;/a&gt;. The sources can be &lt;a href=&#34;https://github.com/johannesjo/super-productivity-android&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://raw.githubusercontent.com/play.google.com/store/apps/details?id=com.superproductivity.superproductivity&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/screens/google-play-badge.png&#34; align=&#34;center&#34; alt=&#34;App Store Badge&#34; height=&#34;50&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ô•&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are several ways to help.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Spread the word:&lt;/strong&gt; More users means more people testing and contributing to the app which in turn means better stability and possibly more and better features. You can vote for Super Productivity on &lt;a href=&#34;https://www.slant.co/topics/14021/viewpoints/7/~productivity-tools-for-linux~super-productivity&#34;&gt;Slant&lt;/a&gt;, &lt;a href=&#34;https://www.producthunt.com/posts/super-productivity&#34;&gt;Product Hunt&lt;/a&gt;, &lt;a href=&#34;https://www.softpedia.com/get/Office-tools/Diary-Organizers-Calendar/Super-Productivity.shtml&#34;&gt;Softpedia&lt;/a&gt; or on &lt;a href=&#34;https://alternativeto.net/software/super-productivity/&#34;&gt;AlternativeTo&lt;/a&gt;, you can &lt;a href=&#34;https://twitter.com/intent/tweet?text=I%20like%20Super%20Productivity%20%20https%3A%2F%2Fsuper-productivity.com&#34;&gt;tweet about it&lt;/a&gt;, share it on &lt;a href=&#34;http://www.linkedin.com/shareArticle?mini=true&amp;amp;url=https://super-productivity.com&amp;amp;title=I%20like%20Super%20Productivity&amp;amp;&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;http://www.reddit.com/submit?url=https%3A%2F%2Fsuper-productivity.com&amp;amp;title=I%20like%20Super%20Productivity&#34;&gt;reddit&lt;/a&gt; or any of your favorite social media platforms. Every little bit helps!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Provide a Pull Request:&lt;/strong&gt; Here is a list of &lt;a href=&#34;https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc&#34;&gt;the most popular community requests&lt;/a&gt; and here some info on &lt;a href=&#34;https://github.com/johannesjo/super-productivity#running-the-development-server&#34;&gt;how to run the development build&lt;/a&gt;. Please make sure that you&#39;re following the &lt;a href=&#34;https://github.com/angular/angular.js/raw/master/DEVELOPERS.md#commits&#34;&gt;angular commit guidelines&lt;/a&gt; and to also include the issue number in your commit message, if you&#39;re fixing a particular issue (e.g.: &lt;code&gt;feat: add nice feature with the number #31&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/discussions&#34;&gt;Answer questions&lt;/a&gt;&lt;/strong&gt;: You know the answer to another user&#39;s problem? Share your knowledge!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22community+feedback+wanted%22&#34;&gt;Provide your opinion&lt;/a&gt;:&lt;/strong&gt; Some community suggestions are controversial. Your input might be helpful and if it is just an up- or down-vote.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/issues?q=is%3Aissue+is%3Aopen+label%3A%22needs+concept+and%2For+ui+spec%22&#34;&gt;Provide a more refined ui spec for existing feature requests&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/issues/new&#34;&gt;Report bugs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/issues/new&#34;&gt;Make a feature or improvement request&lt;/a&gt;&lt;/strong&gt;: Something can be be done better? Something essential missing? Let us know!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/johannesjo/super-productivity/tree/master/src/assets/i18n&#34;&gt;Translations&lt;/a&gt;, Icons, etc.&lt;/strong&gt;: You don&#39;t have to be programmer to help. Some of the icons really need improvement and many of the translations could use some love.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sponsors/johannesjo&#34;&gt;Sponsor the project&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running the development server&lt;/h3&gt; &#xA;&lt;p&gt;To run the development server you need to have node installed at least in the version 14. Go to &lt;a href=&#34;https://nodejs.org&#34;&gt;https://nodejs.org&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Clone repo&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/johannesjo/super-productivity.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd super-productivity&#xA;npm i -g @angular/cli&#xA;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the dev server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ng serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards you can open &lt;a href=&#34;http://localhost:4200&#34;&gt;http://localhost:4200&lt;/a&gt; in your browser. For most adjustments this should be enough and also enables you to use the &lt;a href=&#34;https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=de&#34;&gt;redux dev tools&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run the app standalone do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ng serve&#xA;&#xA;# in a new console tab&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packaging the app&lt;/h3&gt; &#xA;&lt;p&gt;Packaging the app is done via &lt;a href=&#34;https://github.com/electron-userland/electron-builder&#34;&gt;electron-builder&lt;/a&gt;. To start packaging run &lt;code&gt;npm run dist&lt;/code&gt;. If you want to add new platforms and experiment with the build options the easiest way to do so is manipulating the &lt;code&gt;build&lt;/code&gt; property in the &lt;a href=&#34;https://github.com/johannesjo/super-productivity/raw/develop/package.json&#34;&gt;package.json&lt;/a&gt;, but you can also use the &lt;a href=&#34;https://www.electron.build/cli&#34;&gt;command line interface of electron builder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run as Docker Container&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -p 80:80 johannesjo/super-productivity:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom themes (desktop only)&lt;/h2&gt; &#xA;&lt;p&gt;In addition to color coding your projects and tags and to the dark and light theme you can also load completely custom css to restyle everything. To load a custom theme you simply need put them into a new file named &lt;code&gt;styles.css&lt;/code&gt; directly in the &lt;a href=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/#user-data-folder&#34;&gt;user data folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There is a great set of &lt;a href=&#34;https://github.com/johannesjo/super-productivity-themes/tree/main/dist&#34;&gt;themes available for download in this repository&lt;/a&gt; as well as some &lt;a href=&#34;https://github.com/johannesjo/super-productivity-themes&#34;&gt;info on how to role out your own custom themes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Custom WebDAV Syncing&lt;/h2&gt; &#xA;&lt;p&gt;If using the integrated WebDAV Syncing is not working out for you, you can also try to sync all app files, which are located in the &lt;a href=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/#user-data-folder&#34;&gt;user data folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Automatic Backups&lt;/h2&gt; &#xA;&lt;p&gt;For the desktop version automatic backups are stored per default in the &lt;code&gt;backup&lt;/code&gt; sub folder of the &lt;a href=&#34;https://raw.githubusercontent.com/johannesjo/super-productivity/master/#user-data-folder&#34;&gt;user data folder&lt;/a&gt;. Once you located a backup you can restore it on the settings page under &lt;code&gt;Sync &amp;amp; Export/Import/Export/Import from file&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;User Data Folder&lt;/h2&gt; &#xA;&lt;p&gt;Where user data is stored differs from os to os. The most common locations are: Mac OS: &lt;code&gt;~/Library/Application Support/superProductivity/&lt;/code&gt; Windows: &lt;code&gt;C:\Users\&amp;lt;YOUR_USER_NAME&amp;gt;\AppData\Roaming\superProductivity/&lt;/code&gt; or &lt;code&gt;%APPDATA%\superProductivity&lt;/code&gt; Linux: &lt;code&gt;~/.config/superProductivity/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The path should be shown when you go to the &#34;Automatic Backups` section on the configuration page (minus the &#34;backup&#34; sub folder). You can also see it printed out when you start the app from the command line.&lt;/p&gt; &#xA;&lt;p&gt;For web browsers data is simply stored for the current user inside the browser storage.&lt;/p&gt; &#xA;&lt;h3&gt;Using a custom folder to save user data&lt;/h3&gt; &#xA;&lt;p&gt;You can specify a custom folder for saving your data by starting the application with the &lt;code&gt;--user-data-dir&lt;/code&gt; parameter like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;superproductivity --user-data-dir=/path/to/my/data&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>