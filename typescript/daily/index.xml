<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-16T01:40:04Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Molunerfinn/PicGo</title>
    <updated>2022-11-16T01:40:04Z</updated>
    <id>tag:github.com,2022-11-16:/Molunerfinn/PicGo</id>
    <link href="https://github.com/Molunerfinn/PicGo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Molunerfinn/test/master/picgo/New%20LOGO-150.png&#34; alt=&#34;&#34;&gt; &#xA; &lt;h1&gt;PicGo&lt;/h1&gt; &#xA; &lt;blockquote&gt;&#xA;  图片上传+管理新体验 &#xA; &lt;/blockquote&gt; &#xA; &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/code%20style-standard-green.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/actions&#34;&gt; &lt;img src=&#34;https://github.com/Molunerfinn/PicGo/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Molunerfinn/PicGo/total.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/Molunerfinn/PicGo.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/PicGo/bump-version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/picgo-convention-blue.svg?style=flat-square&#34; alt=&#34;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;应用概述&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;PicGo 本体支持如下图床：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;七牛图床&lt;/code&gt; v1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;腾讯云 COS v4\v5 版本&lt;/code&gt; v1.1 &amp;amp; v1.5.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;又拍云&lt;/code&gt; v1.2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GitHub&lt;/code&gt; v1.5.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SM.MS V2&lt;/code&gt; v2.3.0-beta.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;阿里云 OSS&lt;/code&gt; v1.6.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Imgur&lt;/code&gt; v1.6.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;本体不再增加默认的图床支持。你可以自行开发第三方图床插件。详见 &lt;a href=&#34;https://picgo.github.io/PicGo-Core-Doc/&#34;&gt;PicGo-Core&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;特色功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持拖拽图片上传&lt;/li&gt; &#xA; &lt;li&gt;支持快捷键上传剪贴板里第一张图片&lt;/li&gt; &#xA; &lt;li&gt;Windows 和 macOS 支持右键图片文件通过菜单上传 (v2.1.0+)&lt;/li&gt; &#xA; &lt;li&gt;上传图片后自动复制链接到剪贴板&lt;/li&gt; &#xA; &lt;li&gt;支持自定义复制到剪贴板的链接格式&lt;/li&gt; &#xA; &lt;li&gt;支持修改快捷键，默认快速上传快捷键：&lt;code&gt;command+shift+p&lt;/code&gt;（macOS）| &lt;code&gt;control+shift+p&lt;/code&gt;（Windows\Linux)&lt;/li&gt; &#xA; &lt;li&gt;支持插件系统，已有插件支持 Gitee、青云等第三方图床 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;更多第三方插件以及使用了 PicGo 底层的应用可以在 &lt;a href=&#34;https://github.com/PicGo/Awesome-PicGo&#34;&gt;Awesome-PicGo&lt;/a&gt; 找到。欢迎贡献！&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;支持通过发送 HTTP 请求调用 PicGo 上传（v2.2.0+)&lt;/li&gt; &#xA; &lt;li&gt;更多功能等你自己去发现，同时也会不断开发新功能 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;开发进度可以查看 &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/projects&#34;&gt;Projects&lt;/a&gt;，会同步更新开发进度&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;!-- - 欢迎加入 [官方讨论区](https://github.com/Molunerfinn/PicGo/discussions) 与我交流 --&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;如果第一次使用，请参考应用 &lt;a href=&#34;https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html&#34;&gt;使用文档&lt;/a&gt;。遇到问题了还可以看看 &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/raw/dev/FAQ.md&#34;&gt;FAQ&lt;/a&gt; 以及被关闭的 &lt;a href=&#34;https://github.com/Molunerfinn/PicGo/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;issues&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载安装&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;下载源&lt;/th&gt; &#xA;   &lt;th&gt;地址/安装方式&lt;/th&gt; &#xA;   &lt;th&gt;平台&lt;/th&gt; &#xA;   &lt;th&gt;备注&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub Release&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases&#34;&gt;https://github.com/Molunerfinn/PicGo/releases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;国内下载速度可能会慢&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cloud.tencent.com/product/cos&#34;&gt;腾讯云COS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases&#34;&gt;https://github.com/Molunerfinn/PicGo/releases&lt;/a&gt; 附在更新日志结尾&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;感谢 &lt;a href=&#34;https://cloud.tencent.com/product/cos&#34;&gt;腾讯云COS&lt;/a&gt; 提供的赞助支持&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mirrors.sdu.edu.cn/&#34;&gt;山东大学镜像站&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo&#34;&gt;https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;感谢 &lt;a href=&#34;https://mirrors.sdu.edu.cn/&#34;&gt;山东大学镜像站&lt;/a&gt; 提供的镜像支持&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop bucket add helbing https://github.com/helbing/scoop-bucket&lt;/code&gt; &amp;amp; &lt;code&gt;scoop install picgo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;感谢 @helbing 的贡献&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;choco install picgo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;感谢 @iYato 的贡献&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install picgo --cask&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;感谢 @womeimingzi11 的贡献&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/yay&#34;&gt;AUR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;yay -S picgo-appimage&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Arch-Linux&lt;/td&gt; &#xA;   &lt;td&gt;感谢 @houbaron 的贡献&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;应用截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Molunerfinn/test/master/picgo/picgo-2.0.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12621342/34242310-b5056510-e655-11e7-8568-60ffd4f71910.gif&#34; alt=&#34;picgo-menubar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发说明&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;目前仅针对 Mac、Windows。Linux 平台并未测试。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;如果你想要学习、开发、修改或自行构建 PicGo，可以依照下面的指示：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果想学习 Electron-vue 的开发，可以查看我写的系列教程——&lt;a href=&#34;https://molunerfinn.com/tags/Electron-vue/&#34;&gt;Electron-vue 开发实战&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;你需要有 Node、Git 环境，了解 npm 的相关知识。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/Molunerfinn/PicGo.git&lt;/code&gt; 并进入项目。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt; 下载依赖。注意如果你没有 &lt;code&gt;yarn&lt;/code&gt;，请去 &lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install&#34;&gt;官网&lt;/a&gt; 下载安装后再使用。 &lt;strong&gt;用 &lt;code&gt;npm install&lt;/code&gt; 将导致未知错误！&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac 需要有 Xcode 环境，Windows 需要有 VS 环境。&lt;/li&gt; &#xA; &lt;li&gt;如果需要贡献代码，可以参考&lt;a href=&#34;https://raw.githubusercontent.com/Molunerfinn/PicGo/dev/CONTRIBUTING.md&#34;&gt;贡献指南&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;开发模式&lt;/h3&gt; &#xA;&lt;p&gt;输入 &lt;code&gt;npm run electron:serve&lt;/code&gt; 进入开发模式，开发模式具有热重载特性。不过需要注意的是，开发模式不稳定，会有进程崩溃的情况。此时需要：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ctrl+c # 退出开发模式&#xA;npm run electron:serve # 重新进入开发模式&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;注：Windows 开发模式运行之后会在底部任务栏的右下角应用区出现 PicGo 的应用图标。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;生产模式&lt;/h3&gt; &#xA;&lt;p&gt;如果你需要自行构建，可以 &lt;code&gt;npm run electron:build&lt;/code&gt; 开始进行构建。构建成功后，会在 &lt;code&gt;dist_electron&lt;/code&gt; 目录里出现构建成功的相应安装文件。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果你的网络环境不太好，可能会出现 &lt;code&gt;electron-builder&lt;/code&gt; 下载 &lt;code&gt;electron&lt;/code&gt; 二进制文件失败的情况。这个时候需要在 &lt;code&gt;npm run electron:build&lt;/code&gt; 之前指定一下 &lt;code&gt;electron&lt;/code&gt; 的源为国内源：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export ELECTRON_MIRROR=&#34;https://npmmirror.com/mirrors/electron/&#34;&#xA;# 在 Windows 上，则可以使用 set ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/ （无需引号）&#xA;npm run electron:build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;只需第一次构建的时候指定一下国内源即可。后续构建不需要特地指定。二进制文件下载在 &lt;code&gt;~/.electron/&lt;/code&gt; 目录下。如果想要更新 &lt;code&gt;electron&lt;/code&gt; 构建版本，可以删除 &lt;code&gt;~/.electron/&lt;/code&gt; 目录，然后重新运行上一步，让 &lt;code&gt;electron-builder &lt;/code&gt;去下载最新的 &lt;code&gt;electron&lt;/code&gt; 二进制文件。&lt;/p&gt; &#xA;&lt;h2&gt;其他相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PicGo/vs-picgo&#34;&gt;vs-picgo&lt;/a&gt;：PicGo 的 VS Code 版。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PicGo/flutter-picgo&#34;&gt;flutter-picgo&lt;/a&gt;：PicGo 的手机版 App（支持 Android 和 iOS ）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kuingsmile/PicHoro&#34;&gt;PicHoro&lt;/a&gt;：另一款支持 PicGo 配置的手机版 App（暂时只支持 Android）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;p&gt;如果你喜欢 PicGo 并且它对你确实有帮助，欢迎给我打赏一杯咖啡哈~&lt;/p&gt; &#xA;&lt;p&gt;支付宝：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12621342/34188165-e7cdf372-e56f-11e7-8732-1338c88b9bb7.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;微信：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/12621342/34188201-212cda84-e570-11e7-9b7a-abb298699d85.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2017 - Now Molunerfinn&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>arco-design/arco-design</title>
    <updated>2022-11-16T01:40:04Z</updated>
    <id>tag:github.com,2022-11-16:/arco-design/arco-design</id>
    <link href="https://github.com/arco-design/arco-design" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive React UI components library based on Arco Design&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://arco.design&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Arco Design Logo&#34; width=&#34;200&#34; src=&#34;https://avatars.githubusercontent.com/u/64576149?s=200&amp;amp;v=4&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Arco Design&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;A comprehensive React UI components library based on the &lt;a href=&#34;https://arco.design/&#34;&gt;Arco Design&lt;/a&gt; system.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/arco-design/arco-design/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arco-design/awesome-arco&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/arco-design/arco-design/main/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/19399269/141435899-e453cf75-d50f-4549-b8d0-37daebe46c36.mp4&#34;&gt;https://user-images.githubusercontent.com/19399269/141435899-e453cf75-d50f-4549-b8d0-37daebe46c36.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Comprehensive&lt;/h2&gt; &#xA;&lt;p&gt;With more than 60 crafted components that you can use out of the box.&lt;/p&gt; &#xA;&lt;h2&gt;Customizable theme&lt;/h2&gt; &#xA;&lt;p&gt;Extensive design tokens can be customized to build your own theme. Two ways of customization are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/react/docs/theme&#34;&gt;With less-loader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/themes&#34;&gt;Design Lab&lt;/a&gt; - Recommended!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reusable custom materials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arco.design/material/&#34;&gt;Material market&lt;/a&gt; provides a one-stop solution for materials management. Reuse customized modules to make a breakthrough in efficiency.&lt;/p&gt; &#xA;&lt;h2&gt;TypeScript friendly&lt;/h2&gt; &#xA;&lt;p&gt;All components are written in TypeScript so it&#39;s type friendly.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Available as an &lt;a href=&#34;https://www.npmjs.com/package/@arco-design/web-react&#34;&gt;npm package&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;// with npm&#xA;npm install @arco-design/web-react&#xA;&#xA;// with yarn&#xA;yarn add @arco-design/web-react&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import React from &#39;react&#39;;&#xA;import ReactDOM from &#39;react-dom&#39;;&#xA;import { Button } from &#39;@arco-design/web-react&#39;;&#xA;import &#39;@arco-design/web-react/dist/css/arco.css&#39;;&#xA;&#xA;function App() {&#xA;  return (&#xA;    &amp;lt;Button type=&#39;secondary&#39;&amp;gt;&#xA;      Hello World&#xA;    &amp;lt;/Button&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Useful Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/&#34;&gt;Documentation website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/react/components/overview&#34;&gt;Components documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/react/docs/dark&#34;&gt;Dark mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arco.design/react/docs/theme&#34;&gt;Theme customization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/file/M66cTiLXHa4SVyZIlfY5Pb/arco-Design-System?node-id=7945%3A44563&#34;&gt;Figma component library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arco-design/awesome-arco&#34;&gt;Awesome Arco&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Ecosystems&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arco.design/vue/docs/start&#34;&gt;Vue Component Library&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A comprehensive Vue UI components library based on the Arco Design system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arco.design/themes&#34;&gt;Design Lab&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A platform to create and manage your themes with ease.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arco.design/material&#34;&gt;Material Market&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A platform that provides massive high-quality customized materials to greatly boost development efficiency.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arco.design/iconbox&#34;&gt;Icon Box&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;One-stop platform to manage your icons.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://arco.design/pro/&#34;&gt;Arco Pro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A solution to quickly building applications from scratch.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Browser Support&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/08095282566ac4e0fd98f89aed934b65.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;IE / Edge&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;IE / Edge&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/40ad73571879dd8d9fd3fd524e0e45a4.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;Firefox&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Firefox&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/4f59d35f6d6837b042c8badd95871b1d.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;Chrome&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Chrome&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/eee2667f837a9c2ed531805850bf43ec.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;Safari&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Safari&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/3240334d3967dd263c8f4cdd2d93c525.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;Opera&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Opera&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/f2454685df95a1a557a61861c5bec256.png~tplv-uwbnlip3yd-png.png&#34; alt=&#34;Electron&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Electron&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge 16&lt;/td&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;49&lt;/td&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;last 2 versions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Developers interested in contributing should read the &lt;a href=&#34;https://raw.githubusercontent.com/arco-design/arco-design/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/arco-design/arco-design/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to ArcoDesign!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arco-design/arco-design/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=arco-design/arco-design&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is &lt;a href=&#34;https://raw.githubusercontent.com/arco-design/arco-design/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>redis/node-redis</title>
    <updated>2022-11-16T01:40:04Z</updated>
    <id>tag:github.com,2022-11-16:/redis/node-redis</id>
    <link href="https://github.com/redis/node-redis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance Node.js Redis client.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node-Redis&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/redis/node-redis/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/redis/node-redis/Tests/master.svg?label=tests&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/redis/node-redis&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/redis/node-redis/branch/master/graph/badge.svg?token=xcfqHhJC37&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/redis/node-redis/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/redis/node-redis.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/redis/node-redis/alerts&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/redis/node-redis.svg?logo=LGTM&#34; alt=&#34;LGTM alerts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/redis&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/697882427875393627.svg?style=social&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.twitch.tv/redisinc&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitch/status/redisinc?style=social&#34; alt=&#34;Twitch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/redisinc&#34;&gt;&lt;img src=&#34;https://img.shields.io/youtube/channel/views/UCD78lHSwYqMlyetR0_P4Vig?style=social&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/redisinc&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/redisinc?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;node-redis is a modern, high performance &lt;a href=&#34;https://redis.io&#34;&gt;Redis&lt;/a&gt; client for Node.js.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/&#34;&gt;redis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/redis&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/redis.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/redis&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/redis.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/client&#34;&gt;@redis/client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/client.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/client&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/client.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/client/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/bloom&#34;&gt;@redis/bloom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/bloom&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/bloom.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/bloom&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/bloom.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/bloom/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.redis.com/redisbloom/&#34;&gt;Redis Bloom&lt;/a&gt; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/graph&#34;&gt;@redis/graph&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/graph&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/graph.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/graph&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/graph.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/graph/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.redis.com/redisgraph/&#34;&gt;Redis Graph&lt;/a&gt; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/json&#34;&gt;@redis/json&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/json&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/json.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/json&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/json.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/json/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.redis.com/redisjson/&#34;&gt;Redis JSON&lt;/a&gt; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/search&#34;&gt;@redis/search&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/search&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/search.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/search&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/search.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/search/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.redis.com/redisearch/&#34;&gt;RediSearch&lt;/a&gt; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/packages/time-series&#34;&gt;@redis/time-series&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@redis/time-series&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@redis/time-series.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@redis/time-series&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@redis/time-series.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://redis.js.org/documentation/time-series/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-documentation-dc382c&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.redis.com/redistimeseries/&#34;&gt;Redis Time-Series&lt;/a&gt; commands&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; In version 4.1.0 we moved our subpackages from &lt;code&gt;@node-redis&lt;/code&gt; to &lt;code&gt;@redis&lt;/code&gt;. If you&#39;re just using &lt;code&gt;npm install redis&lt;/code&gt;, you don&#39;t need to do anything—it&#39;ll upgrade automatically. If you&#39;re using the subpackages directly, you&#39;ll need to point to the new scope (e.g. &lt;code&gt;@redis/client&lt;/code&gt; instead of &lt;code&gt;@node-redis/client&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; The new interface is clean and cool, but if you have an existing codebase, you&#39;ll want to read the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/v3-to-v4.md&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Looking for a high-level library to handle object mapping? See &lt;a href=&#34;https://github.com/redis/redis-om-node&#34;&gt;redis-om-node&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { createClient } from &#39;redis&#39;;&#xA;&#xA;const client = createClient();&#xA;&#xA;client.on(&#39;error&#39;, (err) =&amp;gt; console.log(&#39;Redis Client Error&#39;, err));&#xA;&#xA;await client.connect();&#xA;&#xA;await client.set(&#39;key&#39;, &#39;value&#39;);&#xA;const value = await client.get(&#39;key&#39;);&#xA;await client.disconnect();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above code connects to localhost on port 6379. To connect to a different host or port, use a connection string in the format &lt;code&gt;redis[s]://[[username][:password]@][host][:port][/db-number]&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;createClient({&#xA;  url: &#39;redis://alice:foobared@awesome.redis.server:6380&#39;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use discrete parameters, UNIX sockets, and even TLS to connect. Details can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/client-configuration.md&#34;&gt;client configuration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Redis Commands&lt;/h3&gt; &#xA;&lt;p&gt;There is built-in support for all of the &lt;a href=&#34;https://redis.io/commands&#34;&gt;out-of-the-box Redis commands&lt;/a&gt;. They are exposed using the raw Redis command names (&lt;code&gt;HSET&lt;/code&gt;, &lt;code&gt;HGETALL&lt;/code&gt;, etc.) and a friendlier camel-cased version (&lt;code&gt;hSet&lt;/code&gt;, &lt;code&gt;hGetAll&lt;/code&gt;, etc.):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;// raw Redis commands&#xA;await client.HSET(&#39;key&#39;, &#39;field&#39;, &#39;value&#39;);&#xA;await client.HGETALL(&#39;key&#39;);&#xA;&#xA;// friendly JavaScript commands&#xA;await client.hSet(&#39;key&#39;, &#39;field&#39;, &#39;value&#39;);&#xA;await client.hGetAll(&#39;key&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Modifiers to commands are specified using a JavaScript object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.set(&#39;key&#39;, &#39;value&#39;, {&#xA;  EX: 10,&#xA;  NX: true&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replies will be transformed into useful data structures:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.hGetAll(&#39;key&#39;); // { field1: &#39;value1&#39;, field2: &#39;value2&#39; }&#xA;await client.hVals(&#39;key&#39;); // [&#39;value1&#39;, &#39;value2&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Buffer&lt;/code&gt;s are supported as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.hSet(&#39;key&#39;, &#39;field&#39;, Buffer.from(&#39;value&#39;)); // &#39;OK&#39;&#xA;await client.hGetAll(&#xA;  commandOptions({ returnBuffers: true }),&#xA;  &#39;key&#39;&#xA;); // { field: &amp;lt;Buffer 76 61 6c 75 65&amp;gt; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Unsupported Redis Commands&lt;/h3&gt; &#xA;&lt;p&gt;If you want to run commands and/or use arguments that Node Redis doesn&#39;t know about (yet!) use &lt;code&gt;.sendCommand()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.sendCommand([&#39;SET&#39;, &#39;key&#39;, &#39;value&#39;, &#39;NX&#39;]); // &#39;OK&#39;&#xA;&#xA;await client.sendCommand([&#39;HGETALL&#39;, &#39;key&#39;]); // [&#39;key1&#39;, &#39;field1&#39;, &#39;key2&#39;, &#39;field2&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Transactions (Multi/Exec)&lt;/h3&gt; &#xA;&lt;p&gt;Start a &lt;a href=&#34;https://redis.io/topics/transactions&#34;&gt;transaction&lt;/a&gt; by calling &lt;code&gt;.multi()&lt;/code&gt;, then chaining your commands. When you&#39;re done, call &lt;code&gt;.exec()&lt;/code&gt; and you&#39;ll get an array back with your results:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.set(&#39;another-key&#39;, &#39;another-value&#39;);&#xA;&#xA;const [setKeyReply, otherKeyValue] = await client&#xA;  .multi()&#xA;  .set(&#39;key&#39;, &#39;value&#39;)&#xA;  .get(&#39;another-key&#39;)&#xA;  .exec(); // [&#39;OK&#39;, &#39;another-value&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://redis.io/topics/transactions#optimistic-locking-using-check-and-set&#34;&gt;watch&lt;/a&gt; keys by calling &lt;code&gt;.watch()&lt;/code&gt;. Your transaction will abort if any of the watched keys change.&lt;/p&gt; &#xA;&lt;p&gt;To dig deeper into transactions, check out the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/isolated-execution.md&#34;&gt;Isolated Execution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Blocking Commands&lt;/h3&gt; &#xA;&lt;p&gt;Any command can be run on a new connection by specifying the &lt;code&gt;isolated&lt;/code&gt; option. The newly created connection is closed when the command&#39;s &lt;code&gt;Promise&lt;/code&gt; is fulfilled.&lt;/p&gt; &#xA;&lt;p&gt;This pattern works especially well for blocking commands—such as &lt;code&gt;BLPOP&lt;/code&gt; and &lt;code&gt;BLMOVE&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { commandOptions } from &#39;redis&#39;;&#xA;&#xA;const blPopPromise = client.blPop(&#xA;  commandOptions({ isolated: true }),&#xA;  &#39;key&#39;,&#xA;  0&#xA;);&#xA;&#xA;await client.lPush(&#39;key&#39;, [&#39;1&#39;, &#39;2&#39;]);&#xA;&#xA;await blPopPromise; // &#39;2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To learn more about isolated execution, check out the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/isolated-execution.md&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Pub/Sub&lt;/h3&gt; &#xA;&lt;p&gt;Subscribing to a channel requires a dedicated stand-alone connection. You can easily get one by &lt;code&gt;.duplicate()&lt;/code&gt;ing an existing Redis connection.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const subscriber = client.duplicate();&#xA;&#xA;await subscriber.connect();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have one, simply subscribe and unsubscribe as needed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await subscriber.subscribe(&#39;channel&#39;, (message) =&amp;gt; {&#xA;  console.log(message); // &#39;message&#39;&#xA;});&#xA;&#xA;await subscriber.pSubscribe(&#39;channe*&#39;, (message, channel) =&amp;gt; {&#xA;  console.log(message, channel); // &#39;message&#39;, &#39;channel&#39;&#xA;});&#xA;&#xA;await subscriber.unsubscribe(&#39;channel&#39;);&#xA;&#xA;await subscriber.pUnsubscribe(&#39;channe*&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Publish a message on a channel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await publisher.publish(&#39;channel&#39;, &#39;message&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is support for buffers as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await subscriber.subscribe(&#39;channel&#39;, (message) =&amp;gt; {&#xA;  console.log(message); // &amp;lt;Buffer 6d 65 73 73 61 67 65&amp;gt;&#xA;}, true);&#xA;&#xA;await subscriber.pSubscribe(&#39;channe*&#39;, (message, channel) =&amp;gt; {&#xA;  console.log(message, channel); // &amp;lt;Buffer 6d 65 73 73 61 67 65&amp;gt;, &amp;lt;Buffer 63 68 61 6e 6e 65 6c&amp;gt;&#xA;}, true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scan Iterator&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://redis.io/commands/scan&#34;&gt;&lt;code&gt;SCAN&lt;/code&gt;&lt;/a&gt; results can be looped over using &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator&#34;&gt;async iterators&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;for await (const key of client.scanIterator()) {&#xA;  // use the key!&#xA;  await client.get(key);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This works with &lt;code&gt;HSCAN&lt;/code&gt;, &lt;code&gt;SSCAN&lt;/code&gt;, and &lt;code&gt;ZSCAN&lt;/code&gt; too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;for await (const { field, value } of client.hScanIterator(&#39;hash&#39;)) {}&#xA;for await (const member of client.sScanIterator(&#39;set&#39;)) {}&#xA;for await (const { score, value } of client.zScanIterator(&#39;sorted-set&#39;)) {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the default options by providing a configuration object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;client.scanIterator({&#xA;  TYPE: &#39;string&#39;, // `SCAN` only&#xA;  MATCH: &#39;patter*&#39;,&#xA;  COUNT: 100&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://redis.io/docs/manual/programmability/&#34;&gt;Programmability&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Redis provides a programming interface allowing code execution on the redis server.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://redis.io/docs/manual/programmability/functions-intro/&#34;&gt;Functions&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The following example retrieves a key in redis, returning the value of the key, incremented by an integer. For example, if your key &lt;em&gt;foo&lt;/em&gt; has the value &lt;em&gt;17&lt;/em&gt; and we run &lt;code&gt;add(&#39;foo&#39;, 25)&lt;/code&gt;, it returns the answer to Life, the Universe and Everything.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;#!lua name=library&#xA;&#xA;redis.register_function {&#xA;  function_name = &#39;add&#39;,&#xA;  callback = function(keys, args) return redis.call(&#39;GET&#39;, keys[1]) + args[1] end,&#xA;  flags = { &#39;no-writes&#39; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is the same example, but in a format that can be pasted into the &lt;code&gt;redis-cli&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FUNCTION LOAD &#34;#!lua name=library\nredis.register_function{function_name=\&#34;add\&#34;, callback=function(keys, args) return redis.call(&#39;GET&#39;, keys[1])+args[1] end, flags={\&#34;no-writes\&#34;}}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load the prior redis function on the &lt;em&gt;redis server&lt;/em&gt; before running the example below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { createClient } from &#39;redis&#39;;&#xA;&#xA;const client = createClient({&#xA;  functions: {&#xA;    library: {&#xA;      add: {&#xA;        NUMBER_OF_KEYS: 1,&#xA;        transformArguments(key: string, toAdd: number): Array&amp;lt;string&amp;gt; {&#xA;          return [key, toAdd.toString()];&#xA;        },&#xA;        transformReply(reply: number): number {&#xA;          return reply;&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;await client.connect();&#xA;&#xA;await client.set(&#39;key&#39;, &#39;1&#39;);&#xA;await client.library.add(&#39;key&#39;, 2); // 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://redis.io/docs/manual/programmability/eval-intro/&#34;&gt;Lua Scripts&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The following is an end-to-end example of the prior concept.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { createClient, defineScript } from &#39;redis&#39;;&#xA;&#xA;const client = createClient({&#xA;  scripts: {&#xA;    add: defineScript({&#xA;      NUMBER_OF_KEYS: 1,&#xA;      SCRIPT:&#xA;        &#39;return redis.call(&#34;GET&#34;, KEYS[1]) + ARGV[1];&#39;,&#xA;      transformArguments(key: string, toAdd: number): Array&amp;lt;string&amp;gt; {&#xA;        return [key, toAdd.toString()];&#xA;      },&#xA;      transformReply(reply: number): number {&#xA;        return reply;&#xA;      }&#xA;    })&#xA;  }&#xA;});&#xA;&#xA;await client.connect();&#xA;&#xA;await client.set(&#39;key&#39;, &#39;1&#39;);&#xA;await client.add(&#39;key&#39;, 2); // 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disconnecting&lt;/h3&gt; &#xA;&lt;p&gt;There are two functions that disconnect a client from the Redis server. In most scenarios you should use &lt;code&gt;.quit()&lt;/code&gt; to ensure that pending commands are sent to Redis before closing a connection.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;.QUIT()&lt;/code&gt;/&lt;code&gt;.quit()&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Gracefully close a client&#39;s connection to Redis, by sending the &lt;a href=&#34;https://redis.io/commands/quit&#34;&gt;&lt;code&gt;QUIT&lt;/code&gt;&lt;/a&gt; command to the server. Before quitting, the client executes any remaining commands in its queue, and will receive replies from Redis for each of them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const [ping, get, quit] = await Promise.all([&#xA;  client.ping(),&#xA;  client.get(&#39;key&#39;),&#xA;  client.quit()&#xA;]); // [&#39;PONG&#39;, null, &#39;OK&#39;]&#xA;&#xA;try {&#xA;  await client.get(&#39;key&#39;);&#xA;} catch (err) {&#xA;  // ClosedClient Error&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;.disconnect()&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Forcibly close a client&#39;s connection to Redis immediately. Calling &lt;code&gt;disconnect&lt;/code&gt; will not send further pending commands to the Redis server, or wait for or parse outstanding responses.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await client.disconnect();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Auto-Pipelining&lt;/h3&gt; &#xA;&lt;p&gt;Node Redis will automatically pipeline requests that are made during the same &#34;tick&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;client.set(&#39;Tm9kZSBSZWRpcw==&#39;, &#39;users:1&#39;);&#xA;client.sAdd(&#39;users:1:tokens&#39;, &#39;Tm9kZSBSZWRpcw==&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, if you don&#39;t do something with your Promises you&#39;re certain to get &lt;a href=&#34;https://nodejs.org/api/process.html#process_event_unhandledrejection&#34;&gt;unhandled Promise exceptions&lt;/a&gt;. To take advantage of auto-pipelining and handle your Promises, use &lt;code&gt;Promise.all()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;await Promise.all([&#xA;  client.set(&#39;Tm9kZSBSZWRpcw==&#39;, &#39;users:1&#39;),&#xA;  client.sAdd(&#39;users:1:tokens&#39;, &#39;Tm9kZSBSZWRpcw==&#39;)&#xA;]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clustering&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/clustering.md&#34;&gt;Clustering Guide&lt;/a&gt; when using Node Redis to connect to a Redis Cluster.&lt;/p&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;p&gt;The Node Redis client class is an Nodejs EventEmitter and it emits an event each time the network status changes:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Event name&lt;/th&gt; &#xA;   &lt;th&gt;Scenes&lt;/th&gt; &#xA;   &lt;th&gt;Arguments to be passed to the listener&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client is initiating a connection to the server.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;No argument&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ready&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client successfully initiated the connection to the server.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;No argument&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client disconnected the connection to the server via &lt;code&gt;.quit()&lt;/code&gt; or &lt;code&gt;.disconnect()&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;No argument&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;error&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When a network error has occurred, such as unable to connect to the server or the connection closed unexpectedly.&lt;/td&gt; &#xA;   &lt;td&gt;1 argument: The error object, such as &lt;code&gt;SocketClosedUnexpectedlyError: Socket closed unexpectedly&lt;/code&gt; or &lt;code&gt;Error: connect ECONNREFUSED [IP]:[PORT]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;reconnecting&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The client is trying to reconnect to the server.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;No argument&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The client will not emit &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/docs/v3-to-v4.md#all-the-removed-events&#34;&gt;any other events&lt;/a&gt; beyond those listed above.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Redis versions&lt;/h2&gt; &#xA;&lt;p&gt;Node Redis is supported with the following versions of Redis:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Supported&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7.0.z&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6.2.z&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6.0.z&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.0.z&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;lt; 5.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Node Redis should work with older versions of Redis, but it is not fully tested and we cannot offer support.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute, check out the &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to Node Redis!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/redis/node-redis/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=redis/node-redis&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under the &#34;MIT&#34; license. See &lt;a href=&#34;https://raw.githubusercontent.com/redis/node-redis/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>