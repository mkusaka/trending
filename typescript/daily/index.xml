<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-14T01:42:26Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>elsoul/skeet-cli</title>
    <updated>2023-10-14T01:42:26Z</updated>
    <id>tag:github.com,2023-10-14:/elsoul/skeet-cli</id>
    <link href="https://github.com/elsoul/skeet-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 Open-Source Serverless Framework for full-stack apps on Firebase and Google Cloud.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://skeet.dev/en/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/20677823/221215449-93a7b5a8-5f33-4da8-9dd4-d0713db0a280.png&#34; alt=&#34;Skeet&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ELSOUL_LABO2&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/ELSOUL_LABO2.svg?label=Follow%20@ELSOUL_LABO2&#34; alt=&#34;Follow @ELSOUL_LABO2&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a aria-label=&#34;npm version&#34; href=&#34;https://www.npmjs.com/package/@skeet-framework/cli&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/npm/v/@skeet-framework/cli&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Downloads Number&#34; href=&#34;https://www.npmjs.com/package/@skeet-framework/cli&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/npm/dt/@skeet-framework/cli&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;License&#34; href=&#34;https://github.com/elsoul/skeet-cli/raw/master/LICENSE.txt&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/badge/license/Apache/blue&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Code of Conduct&#34; href=&#34;https://github.com/elsoul/skeet-cli/raw/master/CODE_OF_CONDUCT.md&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;📗 Doc: &lt;a href=&#34;https://skeet.dev/&#34;&gt;https://skeet.dev/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📱 Demo App: &lt;a href=&#34;https://skeeter.dev/&#34;&gt;https://skeeter.dev/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💃 What&#39;s Skeet? 🕺&lt;/h2&gt; &#xA;&lt;p&gt;⚡️ AI Auto-code Development ⚡️&lt;/p&gt; &#xA;&lt;p&gt;Skeet is an open-source app development solution capable of AI auto-code development.&lt;/p&gt; &#xA;&lt;p&gt;It allows for rapid development of Web/iOS/Android apps and supports a wide range of developments, including AI-powered chatbot apps, Web3 apps utilizing blockchain, and dApps.&lt;/p&gt; &#xA;&lt;p&gt;AI is also used in the development flow, overcoming the learning curve that is a challenge in software frameworks.&lt;/p&gt; &#xA;&lt;p&gt;Developers can quickly start building functional apps and publish them in the cloud.&lt;/p&gt; &#xA;&lt;h2&gt;Enabling Google Cloud VertexAI/OpenAI&lt;/h2&gt; &#xA;&lt;p&gt;Create a new project in Google Cloud Platform and enable VertexAI. You will need OpenAI API Key to use OpenAI.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command to enable VertexAI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet iam ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet ai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can choose AI engine by passing options&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet ai --openai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You need to set CHAT_GPT_ORG/CHAT_GPT_KEY in your .env&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then you can ask Skeet AI Assistant to create a new function, method, typedoc and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=e7J5HDhtpE4&#34;&gt;&lt;img src=&#34;https://storage.googleapis.com/skeet-assets/animation/skeet-ai-short.gif&#34; alt=&#34;SkeetAI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;YouTube Video Link: &lt;a href=&#34;https://www.youtube.com/watch?v=e7J5HDhtpE4&#34;&gt;https://www.youtube.com/watch?v=e7J5HDhtpE4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🧪 Dependency 🧪&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; ^5.0.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/ja/&#34;&gt;Node.js&lt;/a&gt; ^18.16.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/&#34;&gt;Yarn&lt;/a&gt; ^1.22.19&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cli.github.com/&#34;&gt;GitHub CLI&lt;/a&gt; ^2.29.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For Firebase Template&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/sdk/docs/install&#34;&gt;Google Cloud SDK&lt;/a&gt; ^430.0.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/cli&#34;&gt;Firebase CLI&lt;/a&gt; ^12.0.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.java.com/en/download/&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📗 Usage 📗&lt;/h2&gt; &#xA;&lt;h3&gt;① Install Skeet/Firebase CLI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm i -g @skeet-framework/cli&#xA;$ npm install -g firebase-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;② Create Skeet App&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet create &amp;lt;appName&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can choose a template for the frontend and backend.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-graphql&#34;&gt;Next.js (React) with GraphQL template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-next&#34;&gt;Next.js (React) with Firestore template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-app&#34;&gt;Expo (React Native) with Firestore template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-solana-mobile-stack&#34;&gt;Solana Mobile Stack (Expo) + Web (Next.js) with Firestore template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.googleapis.com/skeet-assets/animation/SkeetSolanaMobileStack.gif&#34; alt=&#34;Solana Mobile Stack&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;Create Skeet App with only backend&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet create &amp;lt;appName&amp;gt; --backend&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can choose a template for the backend.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-graphql-only&#34;&gt;Backend - GraphQL template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elsoul/skeet-functions-only&#34;&gt;Backend - Firestore template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.googleapis.com/skeet-assets/animation/skeet-chat-latest.gif&#34; alt=&#34;Chatbot&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;③ Run Skeet App&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd &amp;lt;appName&amp;gt;&#xA;$ skeet s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;put options to run only backend, frontend, or GraphQL server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage: skeet server|s [options]&#xA;&#xA;Run Skeet App&#xA;&#xA;Options:&#xA;  -b, --backend    Run Backend only&#xA;  -f, --functions  Run Firebase Functions only&#xA;  -w, --web        Run Web App only&#xA;  -g, --graphql    Run GraphQL Server only&#xA;  -h, --help       display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you have both frontend and backend running locally ⭐️&lt;/p&gt; &#xA;&lt;p&gt;📲 Frontend(Next.js) - &lt;a href=&#34;http://localhost:4200/&#34;&gt;http://localhost:4200/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📲 Frontend(Expo) - &lt;a href=&#34;http://localhost:19006/&#34;&gt;http://localhost:19006/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;💻 Firebase Emulator - &lt;a href=&#34;http://localhost:4000/&#34;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you choose GraphQL template, you can use GraphQL Playground&lt;/p&gt; &#xA;&lt;p&gt;📊 GraphQL Playground - &lt;a href=&#34;http://localhost:3000/graphql&#34;&gt;http://localhost:3000/graphql&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Launching Skeet AI Assistant&lt;/h2&gt; &#xA;&lt;p&gt;The Skeet AI Assistant is an interactive tool designed to handle various queries.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet ai --help&#xA;AI Playground&#xA;&#xA;Options:&#xA;  -v, --vertex                   Vertex AI&#xA;  -o, --openai                   OpenAI&#xA;  -m, --model &amp;lt;string&amp;gt;           Model&#xA;  -token, --token &amp;lt;number&amp;gt;       Max Tokens&#xA;  -temp, --temperature &amp;lt;number&amp;gt;  Temperature&#xA;  -h, --help                     display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon launching, you&#39;ll see a prompt like the one below. Try asking it something:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;skeet ai --openai&#xA;╔═════════════╤════════╗&#xA;│ Option      │ Value  │&#xA;╟─────────────┼────────╢&#xA;│ AI Type     │ OpenAI │&#xA;╟─────────────┼────────╢&#xA;│ Model       │ gpt-4  │&#xA;╟─────────────┼────────╢&#xA;│ Max Token   │ 1000   │&#xA;╟─────────────┼────────╢&#xA;│ Temperature │ 0      │&#xA;╚═════════════╧════════╝&#xA;&#xA;🤖 Skeet AI Mode&#xA; `$ &amp;lt;mode&amp;gt;` to change AI mode 🤖&#xA;&#xA;$ prisma&#xA;$ typedoc&#xA;$ translate&#xA;$ firestore&#xA;$ function&#xA;$ method&#xA;$ help&#xA;$ q&#xA;&#xA;OpenAI is selected 🤖 (type &#39;q&#39; to quit)&#xA;? What can I do for you?&#xA;&#xA;You:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Skeet Docment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skeet.dev/&#34;&gt;https://skeet.dev/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Skeet CLI&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ skeet --help&#xA;Usage: skeet [options] [command]&#xA;&#xA;CLI for Skeet - Full-stack TypeScript Serverless framework&#xA;&#xA;Options:&#xA;  -V, --version                output the version number&#xA;  -h, --help                   display help for command&#xA;&#xA;Commands:&#xA;  create &amp;lt;appName&amp;gt;             Create Skeet Framework App&#xA;  server|s                     Run Skeet App&#xA;  deploy                       Deploy Skeet APP to Firebase&#xA;  init [options]               Initialize Google Cloud Setups for Skeet APP&#xA;  yarn [options] &amp;lt;yarnCmd&amp;gt;     Skeet Yarn Comannd to run yarn command for multiple functions&#xA;  login                        Skeet Login Command - Create Firebase Login Token&#xA;  curl [options] &amp;lt;methodName&amp;gt;  Skeet Curl Command - Call Firebase Functions Endpoint&#xA;  g|generate                   Skeet Generate Comannd&#xA;  docker                       Docker commands&#xA;  db                           Database commands&#xA;  iam                          Skeet IAM Comannd to setup Google Cloud Platform&#xA;  add                          Skeet Add Comannd to add new functions&#xA;  sync                         Skeet Sync Comannd to sync backend and frontend&#xA;  delete|d                     Skeet Delete Command&#xA;  get                          Get Skeet App List&#xA;  help [command]               display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Powered by&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase - Serverless Platform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/firestore&#34;&gt;Firestore - NoSQL Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/functions&#34;&gt;Firebase Cloud Functions 2nd Gen - FaaS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/storage&#34;&gt;Firebase Storage - Cloud Storage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/auth&#34;&gt;Firebase Authentication - Auth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/sql&#34;&gt;Cloud SQL - Relational Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/load-balancing&#34;&gt;Cloud Load Balancing - Routing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/&#34;&gt;Prisma - ORM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL - Query Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/&#34;&gt;Apollo - GraphQL Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript - TypeCheck&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/&#34;&gt;Jest - Test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint - Linter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier - Formatter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js (React) - Web Frontend(SSG)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://expo.dev/&#34;&gt;Expo (React Native) - Mobile App&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports and pull requests are welcome on GitHub at &lt;a href=&#34;https://github.com/elsoul/skeet-cli&#34;&gt;https://github.com/elsoul/skeet-cli&lt;/a&gt; This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the &lt;a href=&#34;http://contributor-covenant.org&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The package is available as open source under the terms of the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Everyone interacting in the SKEET project’s codebases, issue trackers, chat rooms and mailing lists is expected to follow the &lt;a href=&#34;https://github.com/elsoul/skeet-cli/raw/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dorny/paths-filter</title>
    <updated>2023-10-14T01:42:26Z</updated>
    <id>tag:github.com,2023-10-14:/dorny/paths-filter</id>
    <link href="https://github.com/dorny/paths-filter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Conditionally run actions based on files modified by PR, feature branch or pushed commits&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paths Changes Filter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Action&lt;/a&gt; that enables conditional execution of workflow steps and jobs, based on the files modified by pull request, on a feature branch, or by the recently pushed commits.&lt;/p&gt; &#xA;&lt;p&gt;Run slow tasks like integration tests or deployments only for changed components. It saves time and resources, especially in monorepo setups. GitHub workflows built-in &lt;a href=&#34;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths&#34;&gt;path filters&lt;/a&gt; don&#39;t allow this because they don&#39;t work on a level of individual jobs or steps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Real world usage examples:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sentry.io/&#34;&gt;sentry.io&lt;/a&gt; - &lt;a href=&#34;https://github.com/getsentry/sentry/raw/2ebe01feab863d89aa7564e6d243b6d80c230ddc/.github/workflows/backend.yml#L36&#34;&gt;backend.yml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.dev/&#34;&gt;GoogleChrome/web.dev&lt;/a&gt; - &lt;a href=&#34;https://github.com/GoogleChrome/web.dev/raw/3a57b721e7df6fc52172f676ca68d16153bda6a3/.github/workflows/lint-workflow.yml#L26&#34;&gt;lint-workflow.yml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/freshbooks/configuring-python-linting-to-be-part-of-cicd-using-github-actions-1731#what-files-does-it-run-against&#34;&gt;blog post Configuring python linting to be part of CI/CD using GitHub actions&lt;/a&gt; - &lt;a href=&#34;https://github.com/iamtodor/demo-github-actions-python-linter-configuration/raw/main/.github/workflows/py_linter.yml#L31&#34;&gt;py_linter.yml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported workflows&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pull requests:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Workflow triggered by &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request&#34;&gt;pull_request&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target&#34;&gt;pull_request_target&lt;/a&gt;&lt;/strong&gt; event&lt;/li&gt; &#xA;   &lt;li&gt;Changes are detected against the pull request base branch&lt;/li&gt; &#xA;   &lt;li&gt;Uses GitHub REST API to fetch a list of modified files&lt;/li&gt; &#xA;   &lt;li&gt;Requires &lt;a href=&#34;https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs&#34;&gt;pull-requests: read&lt;/a&gt; permission&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feature branches:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Workflow triggered by &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#push&#34;&gt;push&lt;/a&gt;&lt;/strong&gt; or any other &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows&#34;&gt;event&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;code&gt;base&lt;/code&gt; input parameter must not be the same as the branch that triggered the workflow&lt;/li&gt; &#xA;   &lt;li&gt;Changes are detected against the merge-base with the configured base branch or the default branch&lt;/li&gt; &#xA;   &lt;li&gt;Uses git commands to detect changes - repository must be already &lt;a href=&#34;https://github.com/actions/checkout&#34;&gt;checked out&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Master, Release, or other long-lived branches:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Workflow triggered by &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/actions/reference/events-that-trigger-workflows#push&#34;&gt;push&lt;/a&gt;&lt;/strong&gt; event when &lt;code&gt;base&lt;/code&gt; input parameter is the same as the branch that triggered the workflow: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Changes are detected against the most recent commit on the same branch before the push&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Workflow triggered by any other &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows&#34;&gt;event&lt;/a&gt;&lt;/strong&gt; when &lt;code&gt;base&lt;/code&gt; input parameter is commit SHA: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Changes are detected against the provided &lt;code&gt;base&lt;/code&gt; commit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Workflow triggered by any other &lt;strong&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows&#34;&gt;event&lt;/a&gt;&lt;/strong&gt; when &lt;code&gt;base&lt;/code&gt; input parameter is the same as the branch that triggered the workflow: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Changes are detected from the last commit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Uses git commands to detect changes - repository must be already &lt;a href=&#34;https://github.com/actions/checkout&#34;&gt;checked out&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local changes&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Workflow triggered by any event when &lt;code&gt;base&lt;/code&gt; input parameter is set to &lt;code&gt;HEAD&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Changes are detected against the current HEAD&lt;/li&gt; &#xA;   &lt;li&gt;Untracked files are ignored&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;  id: changes&#xA;  with:&#xA;    filters: |&#xA;      src:&#xA;        - &#39;src/**&#39;&#xA;&#xA;  # run only if some file in &#39;src&#39; folder was changed&#xA;- if: steps.changes.outputs.src == &#39;true&#39;&#xA;  run: ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more scenarios see &lt;a href=&#34;https://raw.githubusercontent.com/dorny/paths-filter/master/#examples&#34;&gt;examples&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Paths expressions are evaluated using &lt;a href=&#34;https://github.com/micromatch/picomatch&#34;&gt;picomatch&lt;/a&gt; library. Documentation for path expression format can be found on the project GitHub page.&lt;/li&gt; &#xA; &lt;li&gt;Picomatch &lt;a href=&#34;https://github.com/micromatch/picomatch#options&#34;&gt;dot&lt;/a&gt; option is set to true. Globbing will also match paths where file or folder name starts with a dot.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s recommended to quote your path expressions with &lt;code&gt;&#39;&lt;/code&gt; or &lt;code&gt;&#34;&lt;/code&gt;. Otherwise, you will get an error if it starts with &lt;code&gt;*&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Local execution with &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;act&lt;/a&gt; works only with alternative runner image. Default runner doesn&#39;t have &lt;code&gt;git&lt;/code&gt; binary. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use: &lt;code&gt;act -P ubuntu-latest=nektos/act-environments-ubuntu:18.04&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What&#39;s New&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;ref&lt;/code&gt; input parameter&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;list-files: csv&lt;/code&gt; format&lt;/li&gt; &#xA; &lt;li&gt;Configure matrix job to run for each folder with changes using &lt;code&gt;changes&lt;/code&gt; output&lt;/li&gt; &#xA; &lt;li&gt;Improved listing of matching files with &lt;code&gt;list-files: shell&lt;/code&gt; and &lt;code&gt;list-files: escape&lt;/code&gt; options&lt;/li&gt; &#xA; &lt;li&gt;Paths expressions are now evaluated using &lt;a href=&#34;https://github.com/micromatch/picomatch&#34;&gt;picomatch&lt;/a&gt; library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://github.com/dorny/paths-filter/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;  with:&#xA;    # Defines filters applied to detected changed files.&#xA;    # Each filter has a name and a list of rules.&#xA;    # Rule is a glob expression - paths of all changed&#xA;    # files are matched against it.&#xA;    # Rule can optionally specify if the file&#xA;    # should be added, modified, or deleted.&#xA;    # For each filter, there will be a corresponding output variable to&#xA;    # indicate if there&#39;s a changed file matching any of the rules.&#xA;    # Optionally, there can be a second output variable&#xA;    # set to list of all files matching the filter.&#xA;    # Filters can be provided inline as a string (containing valid YAML document),&#xA;    # or as a relative path to a file (e.g.: .github/filters.yaml).&#xA;    # Filters syntax is documented by example - see examples section.&#xA;    filters: &#39;&#39;&#xA;&#xA;    # Branch, tag, or commit SHA against which the changes will be detected.&#xA;    # If it references the same branch it was pushed to,&#xA;    # changes are detected against the most recent commit before the push.&#xA;    # Otherwise, it uses git merge-base to find the best common ancestor between&#xA;    # current branch (HEAD) and base.&#xA;    # When merge-base is found, it&#39;s used for change detection - only changes&#xA;    # introduced by the current branch are considered.&#xA;    # All files are considered as added if there is no common ancestor with&#xA;    # base branch or no previous commit.&#xA;    # This option is ignored if action is triggered by pull_request event.&#xA;    # Default: repository default branch (e.g. master)&#xA;    base: &#39;&#39;&#xA;&#xA;    # Git reference (e.g. branch name) from which the changes will be detected.&#xA;    # Useful when workflow can be triggered only on the default branch (e.g. repository_dispatch event)&#xA;    # but you want to get changes on a different branch.&#xA;    # This option is ignored if action is triggered by pull_request event.&#xA;    # default: ${{ github.ref }}&#xA;    ref:&#xA;&#xA;    # How many commits are initially fetched from the base branch.&#xA;    # If needed, each subsequent fetch doubles the&#xA;    # previously requested number of commits until the merge-base&#xA;    # is found, or there are no more commits in the history.&#xA;    # This option takes effect only when changes are detected&#xA;    # using git against base branch (feature branch workflow).&#xA;    # Default: 100&#xA;    initial-fetch-depth: &#39;&#39;&#xA;&#xA;    # Enables listing of files matching the filter:&#xA;    #   &#39;none&#39;  - Disables listing of matching files (default).&#xA;    #   &#39;csv&#39;   - Coma separated list of filenames.&#xA;    #             If needed, it uses double quotes to wrap filename with unsafe characters.&#xA;    #   &#39;json&#39;  - File paths are formatted as JSON array.&#xA;    #   &#39;shell&#39; - Space delimited list usable as command-line argument list in Linux shell.&#xA;    #             If needed, it uses single or double quotes to wrap filename with unsafe characters.&#xA;    #   &#39;escape&#39;- Space delimited list usable as command-line argument list in Linux shell.&#xA;    #             Backslash escapes every potentially unsafe character.&#xA;    # Default: none&#xA;    list-files: &#39;&#39;&#xA;&#xA;    # Relative path under $GITHUB_WORKSPACE where the repository was checked out.&#xA;    working-directory: &#39;&#39;&#xA;&#xA;    # Personal access token used to fetch a list of changed files&#xA;    # from GitHub REST API.&#xA;    # It&#39;s only used if action is triggered by a pull request event.&#xA;    # GitHub token from workflow context is used as default value.&#xA;    # If an empty string is provided, the action falls back to detect&#xA;    # changes using git commands.&#xA;    # Default: ${{ github.token }}&#xA;    token: &#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Outputs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For each filter, it sets output variable named by the filter to the text: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#39;true&#39;&lt;/code&gt; - if &lt;strong&gt;any&lt;/strong&gt; of changed files matches any of filter rules&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&#39;false&#39;&lt;/code&gt; - if &lt;strong&gt;none&lt;/strong&gt; of changed files matches any of filter rules&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For each filter, it sets an output variable with the name &lt;code&gt;${FILTER_NAME}_count&lt;/code&gt; to the count of matching files.&lt;/li&gt; &#xA; &lt;li&gt;If enabled, for each filter it sets an output variable with the name &lt;code&gt;${FILTER_NAME}_files&lt;/code&gt;. It will contain a list of all files matching the filter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;changes&lt;/code&gt; - JSON array with names of all filters matching any of the changed files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Conditional execution&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Execute &lt;b&gt;step&lt;/b&gt; in a workflow job only if some file in a subfolder is changed&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  tests:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        filters: |&#xA;          backend:&#xA;            - &#39;backend/**&#39;&#xA;          frontend:&#xA;            - &#39;frontend/**&#39;&#xA;&#xA;    # run only if &#39;backend&#39; files were changed&#xA;    - name: backend tests&#xA;      if: steps.filter.outputs.backend == &#39;true&#39;&#xA;      run: ...&#xA;&#xA;    # run only if &#39;frontend&#39; files were changed&#xA;    - name: frontend tests&#xA;      if: steps.filter.outputs.frontend == &#39;true&#39;&#xA;      run: ...&#xA;&#xA;    # run if &#39;backend&#39; or &#39;frontend&#39; files were changed&#xA;    - name: e2e tests&#xA;      if: steps.filter.outputs.backend == &#39;true&#39; || steps.filter.outputs.frontend == &#39;true&#39;&#xA;      run: ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Execute &lt;b&gt;job&lt;/b&gt; in a workflow only if some file in a subfolder is changed&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;jobs:&#xA;  # JOB to run change detection&#xA;  changes:&#xA;    runs-on: ubuntu-latest&#xA;    # Required permissions&#xA;    permissions:&#xA;      pull-requests: read&#xA;    # Set job outputs to values from filter step&#xA;    outputs:&#xA;      backend: ${{ steps.filter.outputs.backend }}&#xA;      frontend: ${{ steps.filter.outputs.frontend }}&#xA;    steps:&#xA;    # For pull requests it&#39;s not necessary to checkout the code&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        filters: |&#xA;          backend:&#xA;            - &#39;backend/**&#39;&#xA;          frontend:&#xA;            - &#39;frontend/**&#39;&#xA;&#xA;  # JOB to build and test backend code&#xA;  backend:&#xA;    needs: changes&#xA;    if: ${{ needs.changes.outputs.backend == &#39;true&#39; }}&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - ...&#xA;&#xA;  # JOB to build and test frontend code&#xA;  frontend:&#xA;    needs: changes&#xA;    if: ${{ needs.changes.outputs.frontend == &#39;true&#39; }}&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Use change detection to configure matrix job&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  # JOB to run change detection&#xA;  changes:&#xA;    runs-on: ubuntu-latest&#xA;    # Required permissions&#xA;    permissions:&#xA;      pull-requests: read&#xA;    outputs:&#xA;      # Expose matched filters as job &#39;packages&#39; output variable&#xA;      packages: ${{ steps.filter.outputs.changes }}&#xA;    steps:&#xA;    # For pull requests it&#39;s not necessary to checkout the code&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        filters: |&#xA;          package1: src/package1&#xA;          package2: src/package2&#xA;&#xA;  # JOB to build and test each of modified packages&#xA;  build:&#xA;    needs: changes&#xA;    strategy:&#xA;      matrix:&#xA;        # Parse JSON array containing names of all filters matching any of changed files&#xA;        # e.g. [&#39;package1&#39;, &#39;package2&#39;] if both package folders contains changes&#xA;        package: ${{ fromJSON(needs.changes.outputs.packages) }}&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Change detection workflows&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Pull requests:&lt;/b&gt; Detect changes against PR base branch&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  pull_request:&#xA;    branches: # PRs to the following branches will trigger the workflow&#xA;      - master&#xA;      - develop&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    # Required permissions&#xA;    permissions:&#xA;      pull-requests: read&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        filters: ... # Configure your filters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Feature branch:&lt;/b&gt; Detect changes against configured base branch&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches: # Push to following branches will trigger the workflow&#xA;      - feature/**&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;      with:&#xA;        # This may save additional git fetch roundtrip if&#xA;        # merge-base is found within latest 20 commits&#xA;        fetch-depth: 20&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        base: develop # Change detection against merge-base with this branch&#xA;        filters: ... # Configure your filters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Long lived branches:&lt;/b&gt; Detect changes against the most recent commit on the same branch before the push&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches: # Push to the following branches will trigger the workflow&#xA;      - master&#xA;      - develop&#xA;      - release/**&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        # Use context to get the branch where commits were pushed.&#xA;        # If there is only one long-lived branch (e.g. master),&#xA;        # you can specify it directly.&#xA;        # If it&#39;s not configured, the repository default branch is used.&#xA;        base: ${{ github.ref }}&#xA;        filters: ... # Configure your filters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Local changes:&lt;/b&gt; Detect staged and unstaged local changes&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  push:&#xA;    branches: # Push to following branches will trigger the workflow&#xA;      - master&#xA;      - develop&#xA;      - release/**&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - uses: actions/checkout@v3&#xA;&#xA;      # Some action that modifies files tracked by git (e.g. code linter)&#xA;    - uses: johndoe/some-action@v1&#xA;&#xA;      # Filter to detect which files were modified&#xA;      # Changes could be, for example, automatically committed&#xA;    - uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        base: HEAD&#xA;        filters: ... # Configure your filters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Advanced options&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Define filter rules in own file&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        # Path to file where filters are defined&#xA;        filters: .github/filters.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Use YAML anchors to reuse path expression(s) inside another rule&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        # &amp;amp;shared is YAML anchor,&#xA;        # *shared references previously defined anchor&#xA;        # src filter will match any path under common, config and src folders&#xA;        filters: |&#xA;          shared: &amp;amp;shared&#xA;            - common/**&#xA;            - config/**&#xA;          src:&#xA;            - *shared&#xA;            - src/**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Consider if file was added, modified or deleted&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;      id: filter&#xA;      with:&#xA;        # Changed file can be &#39;added&#39;, &#39;modified&#39;, or &#39;deleted&#39;.&#xA;        # By default, the type of change is not considered.&#xA;        # Optionally, it&#39;s possible to specify it using nested&#xA;        # dictionary, where the type of change composes the key.&#xA;        # Multiple change types can be specified using `|` as the delimiter.&#xA;        filters: |&#xA;          shared: &amp;amp;shared&#xA;            - common/**&#xA;            - config/**&#xA;          addedOrModified:&#xA;            - added|modified: &#39;**&#39;&#xA;          allChanges:&#xA;            - added|deleted|modified: &#39;**&#39;&#xA;          addedOrModifiedAnchors:&#xA;            - added|modified: *shared&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Custom processing of changed files&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Passing list of modified files as command line args in Linux shell&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;  id: filter&#xA;  with:&#xA;    # Enable listing of files matching each filter.&#xA;    # Paths to files will be available in `${FILTER_NAME}_files` output variable.&#xA;    # Paths will be escaped and space-delimited.&#xA;    # Output is usable as command-line argument list in Linux shell&#xA;    list-files: shell&#xA;&#xA;    # In this example changed files will be checked by linter.&#xA;    # It doesn&#39;t make sense to lint deleted files.&#xA;    # Therefore we specify we are only interested in added or modified files.&#xA;    filters: |&#xA;      markdown:&#xA;        - added|modified: &#39;*.md&#39;&#xA;- name: Lint Markdown&#xA;  if: ${{ steps.filter.outputs.markdown == &#39;true&#39; }}&#xA;  run: npx textlint ${{ steps.filter.outputs.markdown_files }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Passing list of modified files as JSON array to another action&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: dorny/paths-filter@v2&#xA;  id: filter&#xA;  with:&#xA;    # Enable listing of files matching each filter.&#xA;    # Paths to files will be available in `${FILTER_NAME}_files` output variable.&#xA;    # Paths will be formatted as JSON array&#xA;    list-files: json&#xA;&#xA;    # In this example all changed files are passed to the following action to do&#xA;    # some custom processing.&#xA;    filters: |&#xA;      changed:&#xA;        - &#39;**&#39;&#xA;- name: Lint Markdown&#xA;  uses: johndoe/some-action@v1&#xA;  with:&#xA;    files: ${{ steps.filter.outputs.changed_files }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dorny/test-reporter&#34;&gt;test-reporter&lt;/a&gt; - Displays test results from popular testing frameworks directly in GitHub&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://github.com/dorny/paths-filter/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kriasoft/react-starter-kit</title>
    <updated>2023-10-14T01:42:26Z</updated>
    <id>tag:github.com,2023-10-14:/kriasoft/react-starter-kit</id>
    <link href="https://github.com/kriasoft/react-starter-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The web&#39;s most popular Jamstack front-end template (boilerplate) for building web applications with React&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Starter Kit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kriasoft/react-starter-kit?sponsor=1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-GitHub-%23555.svg?logo=github-sponsors&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://patreon.com/koistya&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=%23ff424d&amp;amp;label=Patreon&amp;amp;&amp;amp;query=data.attributes.patron_count&amp;amp;suffix=%20patrons&amp;amp;url=https%3A%2F%2Fwww.patreon.com%2Fapi%2Fcampaigns%2F233228&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/2nKEnKq&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/643523529131950086?label=Chat&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/kriasoft/react-starter-kit.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=3600&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/koistya&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/koistya.svg?style=social&amp;amp;label=Follow&amp;amp;maxAge=3600&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web&#39;s most popular Jamstack front-end template for building web applications with &lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized for serverless deployment to CDN edge locations (Cloudflare Workers)&lt;/li&gt; &#xA; &lt;li&gt;HTML page rendering (SSR) at CDN edge locations, all ~100 points on Lighthouse&lt;/li&gt; &#xA; &lt;li&gt;Hot module replacement during local development using React Refetch&lt;/li&gt; &#xA; &lt;li&gt;Pre-configured with CSS-in-JS styling using Emotion.js&lt;/li&gt; &#xA; &lt;li&gt;Pre-configured with code quality tools: ESLint, Prettier, TypeScript, Vitest, etc.&lt;/li&gt; &#xA; &lt;li&gt;Pre-configured with VSCode code snippets and other VSCode settings&lt;/li&gt; &#xA; &lt;li&gt;The ongoing design and development is supported by these wonderful companies:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactstarter.com/s/1&#34;&gt;&lt;img src=&#34;https://reactstarter.com/s/1.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/s/2&#34;&gt;&lt;img src=&#34;https://reactstarter.com/s/2.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/s/3&#34;&gt;&lt;img src=&#34;https://reactstarter.com/s/3.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This project was bootstrapped with &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit&#34;&gt;React Starter Kit&lt;/a&gt;. Be sure to join our &lt;a href=&#34;https://discord.com/invite/2nKEnKq&#34;&gt;Discord channel&lt;/a&gt; for assistance.&lt;/p&gt; &#xA;&lt;h2&gt;Directory Structure&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/.github&#34;&gt;&lt;code&gt;.github&lt;/code&gt;&lt;/a&gt; — GitHub configuration including CI/CD workflows&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/.vscode&#34;&gt;&lt;code&gt;.vscode&lt;/code&gt;&lt;/a&gt; — VSCode settings including code snippets, recommended extensions etc.&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/app&#34;&gt;&lt;code&gt;app&lt;/code&gt;&lt;/a&gt; — Web application front-end built with &lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt; and &lt;a href=&#34;https://mui.com/core/&#34;&gt;Material UI&lt;/a&gt;&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/edge&#34;&gt;&lt;code&gt;edge&lt;/code&gt;&lt;/a&gt; — Cloudflare Workers (CDN) edge endpoint&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/env&#34;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt; — Application settings, API keys, etc.&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/scripts&#34;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt; — Automation scripts such as &lt;code&gt;yarn deploy&lt;/code&gt;&lt;br&gt; &lt;code&gt;├──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/tsconfig.base.json&#34;&gt;&lt;code&gt;tsconfig.base.json&lt;/code&gt;&lt;/a&gt; — The common/shared TypeScript configuration&lt;br&gt; &lt;code&gt;└──&lt;/code&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/tsconfig.json&#34;&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/a&gt; — The root TypeScript configuration&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.dev/&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://reactrouter.com/&#34;&gt;React Router&lt;/a&gt;, &lt;a href=&#34;https://recoiljs.org/&#34;&gt;Recoil&lt;/a&gt;, &lt;a href=&#34;https://emotion.sh/&#34;&gt;Emotion&lt;/a&gt;, &lt;a href=&#34;https://next.material-ui.com/&#34;&gt;Material UI&lt;/a&gt;, &lt;a href=&#34;https://firebase.google.com/docs/auth&#34;&gt;Firebase Authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://workers.cloudflare.com/&#34;&gt;Cloudflare Workers&lt;/a&gt;, &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt;, &lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vitest&lt;/a&gt;, &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;, &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt;, &lt;a href=&#34;https://prettier.io/&#34;&gt;Prettier&lt;/a&gt;, &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;Yarn&lt;/a&gt; with PnP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; v18+ with &lt;a href=&#34;https://nodejs.org/api/corepack.html&#34;&gt;Corepack&lt;/a&gt; (&lt;code&gt;$ corepack enable&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt; editor with &lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/.vscode/extensions.json&#34;&gt;recommended extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optionally &lt;a href=&#34;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en&#34;&gt;React Developer Tools&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/reactime/cgibknllccemdnfhfpmjhffpjfeidjga?hl=en&#34;&gt;Reactime&lt;/a&gt; browser extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/generate&#34;&gt;Generate&lt;/a&gt; a new project from this template, clone it, install project dependencies, update the environment variables found in &lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/env/&#34;&gt;&lt;code&gt;env/*.env&lt;/code&gt;&lt;/a&gt;, and start hacking:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/kriasoft/react-starter-kit.git example&#xA;$ cd ./example&#xA;$ yarn install&#xA;$ yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app will become available at &lt;a href=&#34;http://localhost:5173/&#34;&gt;http://localhost:5173/&lt;/a&gt; (press &lt;code&gt;q&lt;/code&gt; key to exit).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Ensure that VSCode is using the workspace &lt;a href=&#34;https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions&#34;&gt;version of TypeScript&lt;/a&gt; and ESLint.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://files.tarkus.me/typescript-workspace.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt; — Launches the app in development mode on &lt;a href=&#34;http://localhost:5173/&#34;&gt;&lt;code&gt;http://localhost:5173/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn build&lt;/code&gt; — Compiles and bundles the app for deployment&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn lint&lt;/code&gt; — Validate the code using ESLint&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn tsc&lt;/code&gt; — Validate the code using TypeScript compiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn test&lt;/code&gt; — Run unit tests with Vitest, Supertest&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn edge deploy&lt;/code&gt; — Deploys the app to Cloudflare&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Deploy&lt;/h2&gt; &#xA;&lt;p&gt;Ensure that all the environment variables for the target deployment environment (&lt;code&gt;test&lt;/code&gt;, &lt;code&gt;prod&lt;/code&gt;) found in &lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/env/&#34;&gt;&lt;code&gt;/env/*.env&lt;/code&gt;&lt;/a&gt; files are up-to-date.&lt;/p&gt; &#xA;&lt;p&gt;If you haven&#39;t done it already, push any secret values you may need to CF Workers environment by running &lt;code&gt;yarn workspace edge wrangler secret put &amp;lt;NAME&amp;gt; [--env #0]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally build and deploy the app by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ yarn build&#xA;$ yarn deploy [--env #0] [--version #0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;--env&lt;/code&gt; argument is the target deployment area, e.g. &lt;code&gt;yarn deploy --env=prod&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Update&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn set version latest&lt;/code&gt; — Bump Yarn to the latest version&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn upgrade-interactive&lt;/code&gt; — Update Node.js modules (dependencies)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn dlx @yarnpkg/sdks vscode&lt;/code&gt; — Update TypeScript, ESLint, and Prettier settings in VSCode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors 👨‍💻&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactstarter.com/c/1&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/1.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/2&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/2.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/3&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/3.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/4&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/4.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/5&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/5.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/6&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/6.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/7&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/7.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/c/8&#34;&gt;&lt;img src=&#34;https://reactstarter.com/c/8.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers 💰&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactstarter.com/b/1&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/1.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/2&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/2.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/3&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/3.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/4&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/4.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/5&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/5.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/6&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/6.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/7&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/7.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://reactstarter.com/b/8&#34;&gt;&lt;img src=&#34;https://reactstarter.com/b/8.png&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kriasoft/graphql-starter&#34;&gt;GraphQL API and Relay Starter Kit&lt;/a&gt; — monorepo template, pre-configured with GraphQL API, React, and Relay&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kriasoft/cloudflare-starter-kit&#34;&gt;Cloudflare Workers Starter Kit&lt;/a&gt; — TypeScript project template for Cloudflare Workers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kriasoft/node-starter-kit&#34;&gt;Node.js API Starter Kit&lt;/a&gt; — project template, pre-configured with Node.js, GraphQL, and PostgreSQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Anyone and everyone is welcome to &lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/.github/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt;. Start by checking out the list of &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/issues&#34;&gt;open issues&lt;/a&gt; marked &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/issues?q=label:%22help+wanted%22&#34;&gt;help wanted&lt;/a&gt;. However, if you decide to get involved, please take a moment to review the &lt;a href=&#34;https://raw.githubusercontent.com/kriasoft/react-starter-kit/main/.github/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2014-present Kriasoft. This source code is licensed under the MIT license found in the &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;sup&gt;Made with ♥ by Konstantin Tarkus (&lt;a href=&#34;https://twitter.com/koistya&#34;&gt;@koistya&lt;/a&gt;, &lt;a href=&#34;https://medium.com/@koistya&#34;&gt;blog&lt;/a&gt;) and &lt;a href=&#34;https://github.com/kriasoft/react-starter-kit/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/sup&gt;&lt;/p&gt;</summary>
  </entry>
</feed>