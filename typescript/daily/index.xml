<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-02T01:35:31Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/genaiscript</title>
    <updated>2024-11-02T01:35:31Z</updated>
    <id>tag:github.com,2024-11-02:/microsoft/genaiscript</id>
    <link href="https://github.com/microsoft/genaiscript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatable GenAI Scripting&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/genaiscript/main/docs/public/images/favicon.png&#34; alt=&#34;A yellow square with the word &amp;quot;gen&amp;quot; in lowercase black letters above the uppercase black letters &amp;quot;AI.&amp;quot;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GenAIScript&lt;/h1&gt; &#xA;&lt;p&gt;üöÄ &lt;strong&gt;JavaScript-ish environment with convenient tooling for file ingestion, prompt development, and structured data extraction.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìÑ &lt;strong&gt;Read the ONLINE DOCUMENTATION at &lt;a href=&#34;https://microsoft.github.io/genaiscript/&#34;&gt;microsoft.github.io/genaiscript&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üéôÔ∏è &lt;strong&gt;Listen to the podcast&lt;/strong&gt; (generated by NotebookLM).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/ce181cc0-47d5-41cd-bc03-f220407d4dd0&#34;&gt;https://github.com/user-attachments/assets/ce181cc0-47d5-41cd-bc03-f220407d4dd0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üåü Introduction&lt;/h2&gt; &#xA;&lt;h2&gt;Prompting is Coding&lt;/h2&gt; &#xA;&lt;p&gt;Programmatically assemble prompts for LLMs using JavaScript. Orchestrate LLMs, tools, and data in a single script.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JavaScript toolbox to work with prompts&lt;/li&gt; &#xA; &lt;li&gt;Abstraction to make it easy and productive&lt;/li&gt; &#xA; &lt;li&gt;Seamless Visual Studio Code integration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hello world&lt;/h2&gt; &#xA;&lt;p&gt;Say to you want to create an LLM script that generates a &#39;hello world&#39; poem. You can write the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$`Write a &#39;hello world&#39; poem.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;$&lt;/code&gt; function is a template tag that creates a prompt. The prompt is then sent to the LLM (you configured), which generates the poem.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s make it more interresting by adding files, data and structured output. Say you want to include a file in the prompt, and then save the output in a file. You can write the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// read files&#xA;const file = await workspace.readText(&#34;data.txt&#34;)&#xA;// include the file content in the prompt in a context-friendly way&#xA;def(&#34;DATA&#34;, file)&#xA;// the task&#xA;$`Analyze DATA and extract data in JSON in data.json.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;def&lt;/code&gt; function includes the content of the file, and optimizes it if necessary for the target LLM. GenAIScript script also parses the LLM output and will extract the &lt;code&gt;data.json&lt;/code&gt; file automatically.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üöÄ Quickstart Guide&lt;/h2&gt; &#xA;&lt;p&gt;Get started quickly by installing the &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/installation/&#34;&gt;Visual Studio Code Extension&lt;/a&gt; or using the &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/installation&#34;&gt;command line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;h3&gt;üé® Stylized JavaScript &amp;amp; TypeScript&lt;/h3&gt; &#xA;&lt;p&gt;Build prompts programmatically using &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/&#34;&gt;JavaScript&lt;/a&gt; or &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/typescript&#34;&gt;TypeScript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;def(&#34;FILE&#34;, env.files, { endsWith: &#34;.pdf&#34; })&#xA;$`Summarize FILE. Today is ${new Date()}.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üöÄ Fast Development Loop&lt;/h3&gt; &#xA;&lt;p&gt;Edit, &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/debugging-scripts/&#34;&gt;Debug&lt;/a&gt;, &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/running-scripts/&#34;&gt;Run&lt;/a&gt;, and &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/testing-scripts/&#34;&gt;Test&lt;/a&gt; your scripts in &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/installation&#34;&gt;Visual Studio Code&lt;/a&gt; or with the &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/installation&#34;&gt;command line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üîó Reuse and Share Scripts&lt;/h3&gt; &#xA;&lt;p&gt;Scripts are &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/&#34;&gt;files&lt;/a&gt;! They can be versioned, shared, and forked.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// define the context&#xA;def(&#34;FILE&#34;, env.files, { endsWith: &#34;.pdf&#34; })&#xA;// structure the data&#xA;const schema = defSchema(&#34;DATA&#34;, { type: &#34;array&#34;, items: { type: &#34;string&#34; } })&#xA;// assign the task&#xA;$`Analyze FILE and extract data to JSON using the ${schema} schema.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üìã Data Schemas&lt;/h3&gt; &#xA;&lt;p&gt;Define, validate, and repair data using &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/schemas&#34;&gt;schemas&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const data = defSchema(&#34;MY_DATA&#34;, { type: &#34;array&#34;, items: { ... } })&#xA;$`Extract data from files using ${data} schema.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üìÑ Ingest Text from PDFs, DOCX, ...&lt;/h3&gt; &#xA;&lt;p&gt;Manipulate &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/pdf&#34;&gt;PDFs&lt;/a&gt;, &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/docx&#34;&gt;DOCX&lt;/a&gt;, ...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;def(&#34;PDF&#34;, env.files, { endsWith: &#34;.pdf&#34; })&#xA;const { pages } = await parsers.PDF(env.files[0])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üìä Ingest Tables from CSV, XLSX, ...&lt;/h3&gt; &#xA;&lt;p&gt;Manipulate tabular data from &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/csv&#34;&gt;CSV&lt;/a&gt;, &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/xlsx&#34;&gt;XLSX&lt;/a&gt;, ...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;def(&#34;DATA&#34;, env.files, { endsWith: &#34;.csv&#34;, sliceHead: 100 })&#xA;const rows = await parsers.CSV(env.files[0])&#xA;defData(&#34;ROWS&#34;, rows, { sliceHead: 100 })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üìù Generate Files&lt;/h3&gt; &#xA;&lt;p&gt;Extract files and diff from the LLM output. Preview changes in Refactoring UI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$`Save the result in poem.txt.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;FILE ./poem.txt&#xA;The quick brown fox jumps over the lazy dog.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üîç File Search&lt;/h3&gt; &#xA;&lt;p&gt;Grep or fuzz search &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/files&#34;&gt;files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { files } = await workspace.grep(/[a-z][a-z0-9]+/, { globs: &#34;*.md&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;LLM Tools&lt;/h3&gt; &#xA;&lt;p&gt;Register JavaScript functions as &lt;strong&gt;tools&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;defTool(&#xA;    &#34;weather&#34;,&#xA;    &#34;query a weather web api&#34;,&#xA;    { location: &#34;string&#34; },&#xA;    async (args) =&amp;gt;&#xA;        await fetch(`https://weather.api.api/?location=${args.location}`)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;LLM Agents&lt;/h3&gt; &#xA;&lt;p&gt;Register JavaScript functions as &lt;strong&gt;tools&lt;/strong&gt; and combine tools + prompt into agents.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;defAgent(&#xA;    &#34;git&#34;,&#xA;    &#34;Query a repository using Git to accomplish tasks.&#34;,&#xA;    `Your are a helpful LLM agent that can use the git tools to query the current repository.&#xA;    Answer the question in QUERY.&#xA;    - The current repository is the same as github repository.`,&#xA;    { model, system: [&#34;system.github_info&#34;], tools: [&#34;git&#34;] }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then use it as a tool&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ tools: &#34;agent&#34; })&#xA;&#xA;$`Do a statistical analysis of the last commits`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üîç RAG Built-in&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/vector-search/&#34;&gt;Vector search&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { files } = await retrieval.vectorSearch(&#34;cats&#34;, &#34;**/*.md&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üêô GitHub Models and GitHub Copilot&lt;/h3&gt; &#xA;&lt;p&gt;Run models through &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/configuration/#github-models&#34;&gt;GitHub Models&lt;/a&gt; or &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/configuration/#github-copilot-in-visual-studio-code&#34;&gt;GitHub Copilot&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ ..., model: &#34;github:gpt-4o&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üíª Local Models&lt;/h3&gt; &#xA;&lt;p&gt;Run your scripts with &lt;a href=&#34;https://microsoft.github.io/genaiscript/getting-started/configuration/#local-models&#34;&gt;Open Source models&lt;/a&gt;, like &lt;a href=&#34;https://azure.microsoft.com/en-us/blog/introducing-phi-3-redefining-whats-possible-with-slms/&#34;&gt;Phi-3&lt;/a&gt;, using &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt;, &lt;a href=&#34;https://localai.io/&#34;&gt;LocalAI&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ ..., model: &#34;ollama:phi3&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üêç Code Interpreter&lt;/h3&gt; &#xA;&lt;p&gt;Let the LLM run code in a sandboxed execution environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ tools: [&#34;python_code_interpreter&#34;] })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üê≥ Containers&lt;/h3&gt; &#xA;&lt;p&gt;Run code in Docker &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/containers&#34;&gt;containers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const c = await host.container({ image: &#34;python:alpine&#34; })&#xA;const res = await c.exec(&#34;python --version&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üß© LLM Composition&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/inline-prompts/&#34;&gt;Run LLMs&lt;/a&gt; to build your LLM prompts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;for (const file of env.files) {&#xA;    const { text } = await runPrompt((_) =&amp;gt; {&#xA;        _.def(&#34;FILE&#34;, file)&#xA;        _.$`Summarize the FILE.`&#xA;    })&#xA;    def(&#34;SUMMARY&#34;, text)&#xA;}&#xA;$`Summarize all the summaries.`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üÖøÔ∏è Prompty support&lt;/h3&gt; &#xA;&lt;p&gt;Run your &lt;a href=&#34;https://prompty.ai&#34;&gt;Prompty&lt;/a&gt; files as well!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---&#xA;name: poem&#xA;---&#xA;&#xA;Write me a poem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;‚öô Automate with CLI&lt;/h3&gt; &#xA;&lt;p&gt;Automate using the &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/cli&#34;&gt;CLI&lt;/a&gt;, integrate reports in your CI/CD pipeline.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx genaiscript run tlaplus-linter &#34;*.tla&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Safety First!&lt;/h3&gt; &#xA;&lt;p&gt;GenAIScript provides built-in Responsible AI system prompts and Azure Content Safety supports to validate &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/content-safety&#34;&gt;content safety&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ ...,&#xA;    system: [&#34;system.safety_harmful_content&#34;, ...],&#xA;})&#xA;&#xA;const res = contentSafety.detectPromptInjection(env.vars.input)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;üí¨ Pull Request Reviews&lt;/h3&gt; &#xA;&lt;p&gt;Integrate into your &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/cli/run/#pull-requests&#34;&gt;Pull Requests checks&lt;/a&gt; through comments, reviews, or description updates. Supports GitHub Actions and Azure DevOps pipelines.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx genaiscript ... --pull-request-reviews&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;‚≠ê Tests and Evals&lt;/h3&gt; &#xA;&lt;p&gt;Build reliable prompts using &lt;a href=&#34;https://microsoft.github.io/genaiscript/reference/scripts/tests&#34;&gt;tests and evals&lt;/a&gt; powered by &lt;a href=&#34;https://promptfoo.dev/&#34;&gt;promptfoo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;script({ ..., tests: {&#xA;  files: &#34;penguins.csv&#34;,&#xA;  rubric: &#34;is a data analysis report&#34;,&#xA;  facts: &#34;The data refers about penguin population in Antarctica.&#34;,&#xA;}})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;LLM friendly docs&lt;/h3&gt; &#xA;&lt;p&gt;If you are an LLM crawler, fetch &lt;a href=&#34;https://microsoft.github.io/genaiscript/.well-known/llms.txt&#34;&gt;https://microsoft.github.io/genaiscript/.well-known/llms.txt&lt;/a&gt; for an documentation map or add the &lt;code&gt;.md&lt;/code&gt; suffix to any documentation URLs to get a raw markdown content.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;a href=&#34;https://microsoft.github.io/genaiscript/guides/prompt-as-code.md&#34;&gt;https://microsoft.github.io/genaiscript/guides/prompt-as-code.md&lt;/a&gt; (note the .md extension)&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We accept contributions! Checkout the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/genaiscript/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; page for details and developer setup.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getmaxun/maxun</title>
    <updated>2024-11-02T01:35:31Z</updated>
    <id>tag:github.com,2024-11-02:/getmaxun/maxun</id>
    <link href="https://github.com/getmaxun/maxun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free, open-source no-code web data extraction platform. Build custom robots to automate data scraping [In Beta]&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://maxun-website.vercel.app/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getmaxun/maxun/master/public/img/maxunlogo.png&#34; width=&#34;50&#34;&gt; &lt;br&gt; Maxun &lt;/a&gt; &#xA; &lt;/div&gt; Open-Source No-Code Web Data Extraction Platform &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Maxun lets you train a robot in 2 minutes and scrape the web on auto-pilot. Web data extraction doesn&#39;t get easier than this! &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://maxun-website.vercel.app/&#34;&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://discord.com/invite/NFhWDCdb&#34;&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://x.com/maxun_io&#34;&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt; | &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSdbD2uhqC4sbg4eLZ9qrFbyrfkXZ2XsI6dQ0USRCQNZNn5pzg/viewform&#34;&gt;&lt;b&gt;Join Maxun Cloud&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/a61ba670-e56a-4ae1-9681-0b4bd6ba9cdc&#34; alt=&#34;maxun_demo&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://static.scarf.sh/a.png?x-pxid=c12a77cc-855e-4602-8a0f-614b2d0da56a&#34;&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Work In Progress. Will be available by EOD.&lt;/p&gt; &#xA;&lt;h3&gt;Local Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ensure you have Node.js, PostgreSQL, MinIO and Redis installed on your system.&lt;/li&gt; &#xA; &lt;li&gt;Run the commands below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/getmaxun/maxun&#xA;&#xA;# change directory to the project root&#xA;cd maxun&#xA;&#xA;# install dependencies&#xA;npm install&#xA;&#xA;# change directory to maxun-core to install dependencies&#xA;cd maxun-core &#xA;npm install&#xA;&#xA;# start frontend and backend together&#xA;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can access the frontend at &lt;a href=&#34;http://localhost:5173/&#34;&gt;http://localhost:5173/&lt;/a&gt; and backend at &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Envirnoment Variables&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Mandatory&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;If Not Set&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;NODE_ENV&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Defines the app environment (&lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td&gt;Defaults to &lt;code&gt;development&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;JWT_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Secret key used to sign and verify JSON Web Tokens (JWTs) for authentication.&lt;/td&gt; &#xA;   &lt;td&gt;JWT authentication will not work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Name of the Postgres database to connect to.&lt;/td&gt; &#xA;   &lt;td&gt;Database connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_USER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Username for Postgres database authentication.&lt;/td&gt; &#xA;   &lt;td&gt;Database connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Password for Postgres database authentication.&lt;/td&gt; &#xA;   &lt;td&gt;Database connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Host address where the Postgres database server is running.&lt;/td&gt; &#xA;   &lt;td&gt;Database connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;DB_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Port number used to connect to the Postgres database server.&lt;/td&gt; &#xA;   &lt;td&gt;Database connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ENCRYPTION_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Key used for encrypting sensitive data (proxies, passwords).&lt;/td&gt; &#xA;   &lt;td&gt;Encryption functionality will not work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MINIO_ENDPOINT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Endpoint URL for MinIO, to store Robot Run Screenshots.&lt;/td&gt; &#xA;   &lt;td&gt;Connection to MinIO storage will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MINIO_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Port number for MinIO service.&lt;/td&gt; &#xA;   &lt;td&gt;Connection to MinIO storage will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MINIO_ACCESS_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Access key for authenticating with MinIO.&lt;/td&gt; &#xA;   &lt;td&gt;MinIO authentication will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GOOGLE_CLIENT_ID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Client ID for Google OAuth, used for Google Sheet integration authentication.&lt;/td&gt; &#xA;   &lt;td&gt;Google login will not work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GOOGLE_CLIENT_SECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Client Secret for Google OAuth.&lt;/td&gt; &#xA;   &lt;td&gt;Google login will not work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;GOOGLE_REDIRECT_URI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Redirect URI for handling Google OAuth responses.&lt;/td&gt; &#xA;   &lt;td&gt;Google login will not work.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;REDIS_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Host address of the Redis server, used by BullMQ for scheduling robots.&lt;/td&gt; &#xA;   &lt;td&gt;Redis connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;REDIS_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Port number for the Redis server.&lt;/td&gt; &#xA;   &lt;td&gt;Redis connection will fail.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;MAXUN_TELEMETRY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Disables telemetry to stop sending anonymous usage data. Keeping it enabled helps us understand how the product is used and assess the impact of any new changes. Please keep it enabled.&lt;/td&gt; &#xA;   &lt;td&gt;Telemetry data will not be collected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;How Does It Work?&lt;/h1&gt; &#xA;&lt;p&gt;Maxun lets you create custom robots which emulate user actions and extract data. A robot can perform any of the actions: &lt;b&gt;Capture List, Capture Text or Capture Screenshot. Once a robot is created, it will keep extracting data for you without manual intervention&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/53573c98-769e-490d-829e-ada9fac0764f&#34; alt=&#34;Screenshot 2024-10-23 222138&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. Robot Actions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Capture List: Useful to extract structured and bulk items from the website. Example: Scrape products from Amazon etc.&lt;/li&gt; &#xA; &lt;li&gt;Capture Text: Useful to extract individual text content from the website.&lt;/li&gt; &#xA; &lt;li&gt;Capture Screenshot: Get fullpage or visible section screenshots of the website.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2. BYOP&lt;/h2&gt; &#xA;&lt;p&gt;BYOP (Bring Your Own Proxy) lets you connect external proxies to bypass anti-bot protection. Currently, the proxies are per user. Soon you&#39;ll be able to configure proxy per robot.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ú® Extract Data With No-Code&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Handle Pagination &amp;amp; Scrolling&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Run Robots On A Specific Schedule&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Turn Websites to APIs&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Turn Websites to Spreadsheets&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Adapt To Website Layout Changes (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Extract Behind Login, With Two-Factor Authentication Support (coming soon)&lt;/li&gt; &#xA; &lt;li&gt;‚ú® Integrations (currently Google Sheet)&lt;/li&gt; &#xA; &lt;li&gt;+++ A lot of amazing things soon!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Cloud&lt;/h1&gt; &#xA;&lt;p&gt;We offer a managed cloud version to run Maxun without having to manage the infrastructure and extract data at scale. Maxun cloud also deals with anti-bot detection, huge proxy network with automatic proxy rotation, and CAPTCHA solving. If this interests you, &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSdbD2uhqC4sbg4eLZ9qrFbyrfkXZ2XsI6dQ0USRCQNZNn5pzg/viewform&#34;&gt;join the cloud waitlist&lt;/a&gt; as we launch soon.&lt;/p&gt; &#xA;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;p&gt;This project is in early stages of development. Your feedback is very important for us - we&#39;re actively working to improve the product. &lt;a href=&#34;https://forms.gle/E8vRMVB7bUbsSktPA&#34;&gt;Drop anonymous feedback here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt; This project is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/getmaxun/maxun/master/LICENSE&#34;&gt;AGPLv3&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Thank you to the combined efforts of everyone who contributes!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/getmaxun/maxun/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=getmaxun/maxun&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>