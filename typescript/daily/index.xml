<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-01T01:58:08Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>starkoora/wanted-pre-onboarding-challenge-fe-1-api</title>
    <updated>2022-08-01T01:58:08Z</updated>
    <id>tag:github.com,2022-08-01:/starkoora/wanted-pre-onboarding-challenge-fe-1-api</id>
    <link href="https://github.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;:: 원티드 프리온보딩 챌린지 프론트엔드 코스 사전과제 안내 &amp;amp; API&lt;/h1&gt; &#xA;&lt;h1&gt;1-1) 사전과제 진행 가이드&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;제공해드리는 API Repository를 활용하여 가이드에 따라 &lt;code&gt;Todo App&lt;/code&gt;을 작성, 본인의 github에 &lt;code&gt;Public&lt;/code&gt;으로 올려주세요. (주의: Public이 아닐 경우 과제를 확인할 수 없습니다)&lt;/li&gt; &#xA; &lt;li&gt;완성한 과제는 모집 마감 후 설문 조사를 통해 제출해주세요. (개강 시 설문 조사 링크 전달 예정)&lt;/li&gt; &#xA; &lt;li&gt;제출 레파지토리 명은 &lt;code&gt;wanted-pre-onboarding-challenge-fe-1&lt;/code&gt;로 생성해 주세요.&lt;/li&gt; &#xA; &lt;li&gt;과제 수행 개수에 따라 기본적인 평가가 이루어지며, 커리큘럼 운영 과정에서 최소한의 수준을 파악하기 위한 용도입니다.&lt;/li&gt; &#xA; &lt;li&gt;코드의 일관성, 가독성, 함수 분리, 컴포넌트 설계, 코드 퀄리티 등을 기준으로 세부적인 평가가 이루어집니다.&lt;/li&gt; &#xA; &lt;li&gt;해당 과제에 대한 해설은 개강 후 진행될 예정입니다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;를 꼭 작성해 주세요. 본인에 대한 소개나 프로젝트 소개 등 자유롭게 작성해주시면 됩니다.&lt;/li&gt; &#xA; &lt;li&gt;반드시 함수 컴포넌트로 개발해주세요. (React Hooks)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* 문의 사항은 사전 과제 Repository의 Issue로 등록해 주세요.&lt;/p&gt; &#xA;&lt;h1&gt;1-2) 클라이언트 구현 과제 안내&lt;/h1&gt; &#xA;&lt;h2&gt;Assignment 1 - Login / SignUp&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/auth 경로에 로그인 / 회원가입 기능을 개발합니다 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;로그인, 회원가입을 별도의 경로로 분리해도 무방합니다&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 최소한 이메일, 비밀번호 input, 제출 button을 갖도록 구성해주세요&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;이메일과 비밀번호의 유효성을 확인합니다 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 이메일 조건 : 최소 &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; 포함&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 비밀번호 조건 : 8자 이상 입력&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 이메일과 비밀번호가 모두 입력되어 있고, 조건을 만족해야 제출 버튼이 활성화 되도록 해주세요&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;로그인 API를 호출하고, 올바른 응답을 받았을 때 루트 경로로 이동시켜주세요 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 응답으로 받은 토큰은 로컬 스토리지에 저장해주세요&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 다음 번에 로그인 시 토큰이 존재한다면 루트 경로로 리다이렉트 시켜주세요&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 어떤 경우든 토큰이 유효하지 않다면 사용자에게 알리고 로그인 페이지로 리다이렉트 시켜주세요&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Assignment 2 - Todo List&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Todo List API를 호출하여 Todo List CRUD 기능을 구현해주세요&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 목록 / 상세 영역으로 나누어 구현해주세요&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Todo 목록을 볼 수 있습니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Todo 추가 버튼을 클릭하면 할 일이 추가 됩니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Todo 수정 버튼을 클릭하면 수정 모드를 활성화하고, 수정 내용을 제출하거나 취소할 수 있습니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Todo 삭제 버튼을 클릭하면 해당 Todo를 삭제할 수 있습니다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;한 화면 내에서 Todo List와 개별 Todo의 상세를 확인할 수 있도록 해주세요.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 새로고침을 했을 때 현재 상태가 유지되어야 합니다.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 개별 Todo를 조회 순서에 따라 페이지 뒤로가기를 통하여 조회할 수 있도록 해주세요.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;한 페이지 내에서 새로고침 없이 데이터가 정합성을 갖추도록 구현해주세요&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 수정되는 Todo의 내용이 목록에서도 실시간으로 반영되어야 합니다&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;과제 참고 사항&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;로컬 서버를 실행했을 때 생성되는 &lt;code&gt;db/db.json&lt;/code&gt;이 DB 역할을 하게 됩니다. 해당 파일을 삭제하면 DB는 초기화 됩니다.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;로그인 / 회원 가입 기능은 유저를 DB에 추가하고 JWT 토큰을 응답으로 돌려줄 뿐, 실제 유저별로 Todo 목록을 관계 지어 관리하지는 않습니다. (모든 유저가 하나의 Todo를 가짐)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;로그아웃은 클라이언트 단에서 localStorage에 저장된 token을 삭제하는 방식으로 간단히 구현해주세요.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;2-1) API 실행&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; yarn&#xA;&#xA;&amp;gt; yarn start # http://localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;2-2) API 스펙&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#todos&#34;&gt;Todos&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#getTodos&#34;&gt;getTodos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#getTodoById&#34;&gt;getTodoById&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#createTodo&#34;&gt;createTodo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#updateTodo&#34;&gt;updateTodo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#deleteTodo&#34;&gt;deleteTodo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#auth&#34;&gt;Auth&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#login&#34;&gt;login&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/starkoora/wanted-pre-onboarding-challenge-fe-1-api/master/#signUp&#34;&gt;signUp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;span id=&#34;todos&#34;&gt;1-3) Todos&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;getTodos&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GET &lt;code&gt;/todos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Headers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization: login token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: [&#xA;    {&#xA;      &#34;title&#34;: &#34;hi&#34;,&#xA;      &#34;content&#34;: &#34;hello&#34;,&#xA;      &#34;id&#34;: &#34;z3FGrcRL55qDCFnP4KRtn&#34;,&#xA;      &#34;createdAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;,&#xA;      &#34;updatedAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;&#xA;    },&#xA;    {&#xA;      &#34;title&#34;: &#34;hi&#34;,&#xA;      &#34;content&#34;: &#34;hello&#34;,&#xA;      &#34;id&#34;: &#34;z3FGrcRL55qDCFnP4KRtn&#34;,&#xA;      &#34;createdAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;,&#xA;      &#34;updatedAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;getTodoById&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GET &lt;code&gt;/todos/:id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Headers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization: login token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;title&#34;: &#34;hi&#34;,&#xA;    &#34;content&#34;: &#34;hello&#34;,&#xA;    &#34;id&#34;: &#34;z3FGrcRL55qDCFnP4KRtn&#34;,&#xA;    &#34;createdAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;,&#xA;    &#34;updatedAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;createTodo&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;POST &lt;code&gt;/todos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parameter &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;title: string&lt;/li&gt; &#xA;   &lt;li&gt;content: string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Headers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization: login token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;title&#34;: &#34;hi&#34;,&#xA;    &#34;content&#34;: &#34;hello&#34;,&#xA;    &#34;id&#34;: &#34;z3FGrcRL55qDCFnP4KRtn&#34;,&#xA;    &#34;createdAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;,&#xA;    &#34;updatedAt&#34;: &#34;2022-07-24T14:15:55.537Z&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;updateTodo&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PUT &lt;code&gt;/todos/:id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parameter &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;title: string&lt;/li&gt; &#xA;   &lt;li&gt;content: string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Headers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization: login token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: {&#xA;    &#34;title&#34;: &#34;제목 변경&#34;,&#xA;    &#34;content&#34;: &#34;내용 변경&#34;,&#xA;    &#34;id&#34;: &#34;RMfi3XyOKoI5zd0A_bsPL&#34;,&#xA;    &#34;createdAt&#34;: &#34;2022-07-24T14:25:48.627Z&#34;,&#xA;    &#34;updatedAt&#34;: &#34;2022-07-24T14:25:48.627Z&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;deleteTodo&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DELETE &lt;code&gt;/todos/:id&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Headers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Authorization: login token&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;data&#34;: null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;span id=&#34;auth&#34;&gt;1-4) Auth&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;login&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;POST &lt;code&gt;/users/login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parameter &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;email: string&lt;/li&gt; &#xA;   &lt;li&gt;password: string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;message&#34;: &#34;성공적으로 로그인 했습니다&#34;,&#xA;  &#34;token&#34;: &#34;eyJhbGciOiJIUzI1NiJ9.YXNkZkBhc2RmYXNkZi5jb20.h-oLZnV0pCeNKa_AM3ilQzerD2Uj7bKUn1xDft5DzOk&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;signUp&lt;/h2&gt; &#xA;&lt;h3&gt;URL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;POST &lt;code&gt;/users/create&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parameter &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;email: string&lt;/li&gt; &#xA;   &lt;li&gt;password: string&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;응답 예시&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;message&#34;: &#34;계정이 성공적으로 생성되었습니다&#34;,&#xA;  &#34;token&#34;: &#34;eyJhbGciOiJIUzI1NiJ9.YXNkZkBhc2RmYXNkZi5jb20.h-oLZnV0pCeNKa_AM3ilQzerD2Uj7bKUn1xDft5DzOk&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>raycast/extensions</title>
    <updated>2022-08-01T01:58:08Z</updated>
    <id>tag:github.com,2022-08-01:/raycast/extensions</id>
    <link href="https://github.com/raycast/extensions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Everything you need to extend Raycast.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/raycast/extensions/main/images/store-logo.png&#34; height=&#34;128&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Raycast Extensions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a aria-label=&#34;Follow Raycast on Twitter&#34; href=&#34;https://twitter.com/raycastapp&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Follow%20@raycastapp-black.svg?style=for-the-badge&amp;amp;logo=Twitter&#34;&gt; &lt;/a&gt; &lt;a aria-label=&#34;Join the community on Slack&#34; href=&#34;https://raycast.com/community&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Join%20the%20community-black.svg?style=for-the-badge&amp;amp;logo=Slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raycast.com/&#34;&gt;Raycast&lt;/a&gt; lets you control your tools with a few keystrokes. This repository contains all extensions that are available in the &lt;a href=&#34;https://raycast.com/store&#34;&gt;Raycast Store&lt;/a&gt;. It also includes documentation and examples of how to extend Raycast using React.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/raycast/extensions/main/images/header.png&#34; alt=&#34;Header&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://developers.raycast.com&#34;&gt;https://developers.raycast.com&lt;/a&gt; to get started with our API. If you want to discover and install extensions, check out &lt;a href=&#34;https://raycast.com/store&#34;&gt;our Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Raycast wouldn&#39;t be where it is without the feedback from our community, so we would be happy to hear what you think of the API / DevX and how we can improve. Please use GitHub issues for everything API related (bugs, improvements suggestions, developer experience, docs, etc). We have a few &lt;a href=&#34;https://github.com/raycast/extensions/issues/new/choose&#34;&gt;templates&lt;/a&gt; that should help you get started.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://raycast.com/community&#34;&gt;Slack community&lt;/a&gt; to share your extension, debug nasty bugs or simply get to know like-minded folks.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pyscript/pyscript</title>
    <updated>2022-08-01T01:58:08Z</updated>
    <id>tag:github.com,2022-08-01:/pyscript/pyscript</id>
    <link href="https://github.com/pyscript/pyscript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Home Page: https://pyscript.net Examples: https://pyscript.net/examples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PyScript&lt;/h1&gt; &#xA;&lt;h2&gt;What is PyScript&lt;/h2&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;p&gt;PyScript is a Pythonic alternative to Scratch, JSFiddle, and other &#34;easy to use&#34; programming frameworks, with the goal of making the web a friendly, hackable place where anyone can author interesting and interactive applications.&lt;/p&gt; &#xA;&lt;p&gt;To get started see the &lt;a href=&#34;https://raw.githubusercontent.com/pyscript/pyscript/main/docs/tutorials/getting-started.md&#34;&gt;getting started tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For examples see &lt;a href=&#34;https://raw.githubusercontent.com/pyscript/pyscript/main/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Longer Version&lt;/h3&gt; &#xA;&lt;p&gt;PyScript is a meta project that aims to combine multiple open technologies into a framework that allows users to create sophisticated browser applications with Python. It integrates seamlessly with the way the DOM works in the browser and allows users to add Python logic in a way that feels natural both to web and Python developers.&lt;/p&gt; &#xA;&lt;h2&gt;Try PyScript&lt;/h2&gt; &#xA;&lt;p&gt;To try PyScript, import the appropriate pyscript files to your html page with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://pyscript.net/alpha/pyscript.css&#34; /&amp;gt;&#xA;&amp;lt;script defer src=&#34;https://pyscript.net/alpha/pyscript.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then use PyScript components in your html page. PyScript currently implements the following elements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;py-script&amp;gt;&lt;/code&gt;: can be used to define python code that is executable within the web page. The element itself is not rendered to the page and is only used to add logic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;py-repl&amp;gt;&lt;/code&gt;: creates a REPL component that is rendered to the page as a code editor and allows users to write executable code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/pyscript/pyscript/main/examples&#34;&gt;the examples directory&lt;/a&gt; folder for more examples on how to use it, all you need to do is open them in Chrome.&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/pyscript/pyscript/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, reporting bugs and improvements, creating issues and asking questions.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.anaconda.cloud/c/tech-topics/pyscript&#34;&gt;Discussion board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pyscript.net/&#34;&gt;Home Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.anaconda.com/2022/04/welcome-pyscript.html&#34;&gt;Blog Post&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This is an extremely experimental project, so expect things to break!&lt;/li&gt; &#xA; &lt;li&gt;PyScript has been only tested on Chrome at the moment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Governance&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/pyscript/governance&#34;&gt;PyScript organization governance&lt;/a&gt; is documented in a separate repository.&lt;/p&gt;</summary>
  </entry>
</feed>