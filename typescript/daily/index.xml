<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:44:30Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WisdomShell/codeshell-vscode</title>
    <updated>2023-10-22T01:44:30Z</updated>
    <id>tag:github.com,2023-10-22:/WisdomShell/codeshell-vscode</id>
    <link href="https://github.com/WisdomShell/codeshell-vscode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An intelligent coding assistant plugin for Visual Studio Code, developed based on CodeShell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeShell VSCode Extension&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;codeshell-vscode&lt;/code&gt;项目是基于&lt;a href=&#34;https://github.com/WisdomShell/codeshell&#34;&gt;CodeShell大模型&lt;/a&gt;开发的支持&lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;Visual Studio Code&lt;/a&gt;的智能编码助手插件，支持python、java、c++/c、javascript、go等多种编程语言，为开发者提供代码补全、代码解释、代码优化、注释生成、对话问答等功能，旨在通过智能化的方式帮助开发者提高编程效率。&lt;/p&gt; &#xA;&lt;h2&gt;环境要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;node&lt;/a&gt;版本要要v18及以上&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio Code版本要求 1.68 及以上&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WisdomShell/llama_cpp_for_codeshell&#34;&gt;CodeShell 模型服务&lt;/a&gt;已启动&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;编译插件&lt;/h2&gt; &#xA;&lt;p&gt;如果要从源码进行打包，需要安装 &lt;code&gt;node&lt;/code&gt; v18 以上版本，并执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/WisdomShell/codeshell-vscode.git&#xA;cd codeshell-vscode&#xA;npm install&#xA;npm exec vsce package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后会得到一个名为&lt;code&gt;codeshell-vscode-${VERSION_NAME}.vsix&lt;/code&gt;的文件。&lt;/p&gt; &#xA;&lt;h2&gt;模型服务&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WisdomShell/llama_cpp_for_codeshell&#34;&gt;&lt;code&gt;llama_cpp_for_codeshell&lt;/code&gt;&lt;/a&gt;项目提供&lt;a href=&#34;https://github.com/WisdomShell/codeshell&#34;&gt;CodeShell大模型&lt;/a&gt; 4bits量化后的模型，模型名称为&lt;code&gt;codeshell-chat-q4_0.gguf&lt;/code&gt;。以下为部署模型服务步骤：&lt;/p&gt; &#xA;&lt;h3&gt;编译代码&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux / Mac(Apple Silicon设备)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/WisdomShell/llama_cpp_for_codeshell.git&#xA;cd llama_cpp_for_codeshell&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;在 macOS 上，默认情况下启用了Metal，启用Metal可以将模型加载到 GPU 上运行，从而显著提升性能。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac(非Apple Silicon设备)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/WisdomShell/llama_cpp_for_codeshell.git&#xA;cd llama_cpp_for_codeshell&#xA;LLAMA_NO_METAL=1 make&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;对于非 Apple Silicon 芯片的 Mac 用户，在编译时可以使用 &lt;code&gt;LLAMA_NO_METAL=1&lt;/code&gt; 或 &lt;code&gt;LLAMA_METAL=OFF&lt;/code&gt; 的 CMake 选项来禁用Metal构建，从而使模型正常运行。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows&lt;/p&gt; &lt;p&gt;您可以选择在&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/about&#34;&gt;Windows Subsystem for Linux&lt;/a&gt;中按照Linux的方法编译代码，也可以选择参考&lt;a href=&#34;https://github.com/ggerganov/llama.cpp#build&#34;&gt;llama.cpp仓库&lt;/a&gt;中的方法，配置好&lt;a href=&#34;https://github.com/skeeto/w64devkit/releases&#34;&gt;w64devkit&lt;/a&gt;后再按照Linux的方法编译。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;下载模型&lt;/h3&gt; &#xA;&lt;p&gt;在&lt;a href=&#34;https://huggingface.co/WisdomShell&#34;&gt;Hugging Face Hub&lt;/a&gt;上，我们提供了三种不同的模型，分别是&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B&#34;&gt;CodeShell-7B&lt;/a&gt;、&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#34;&gt;CodeShell-7B-Chat&lt;/a&gt;和&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat-int4&#34;&gt;CodeShell-7B-Chat-int4&lt;/a&gt;。以下是下载模型的步骤。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat-int4&#34;&gt;CodeShell-7B-Chat-int4&lt;/a&gt;模型推理，将模型下载到本地后并放置在以上代码中的 &lt;code&gt;llama_cpp_for_codeshell/models&lt;/code&gt; 文件夹的路径&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://huggingface.co/WisdomShell/CodeShell-7B-Chat-int4/blob/main/codeshell-chat-q4_0.gguf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B&#34;&gt;CodeShell-7B&lt;/a&gt;、&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#34;&gt;CodeShell-7B-Chat&lt;/a&gt;推理，将模型放置在本地文件夹后，使用&lt;a href=&#34;https://github.com/WisdomShell/text-generation-inference.git&#34;&gt;TGI&lt;/a&gt;加载本地模型，启动模型服务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#xA;git clone https://huggingface.co/WisdomShell/CodeShell-7B&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;加载模型&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CodeShell-7B-Chat-int4&lt;/code&gt;模型使用&lt;code&gt;llama_cpp_for_codeshell&lt;/code&gt;项目中的&lt;code&gt;server&lt;/code&gt;命令即可提供API服务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./server -m ./models/codeshell-chat-q4_0.gguf --host 127.0.0.1 --port 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意：对于编译时启用了 Metal 的情况下，若运行时出现异常，您也可以在命令行添加参数 &lt;code&gt;-ngl 0 &lt;/code&gt;显式地禁用Metal GPU推理，从而使模型正常运行。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B&#34;&gt;CodeShell-7B&lt;/a&gt;和&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#34;&gt;CodeShell-7B-Chat&lt;/a&gt;模型，使用&lt;a href=&#34;https://github.com/WisdomShell/text-generation-inference.git&#34;&gt;TGI&lt;/a&gt;加载本地模型，启动模型服务&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;模型服务[NVIDIA GPU]&lt;/h2&gt; &#xA;&lt;p&gt;对于希望使用NVIDIA GPU进行推理的用户，可以使用&lt;a href=&#34;https://github.com/huggingface/text-generation-inference&#34;&gt;&lt;code&gt;text-generation-inference&lt;/code&gt;&lt;/a&gt;项目部署&lt;a href=&#34;https://github.com/WisdomShell/codeshell&#34;&gt;CodeShell大模型&lt;/a&gt;。以下为部署模型服务步骤：&lt;/p&gt; &#xA;&lt;h3&gt;下载模型&lt;/h3&gt; &#xA;&lt;p&gt;在 &lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#34;&gt;Hugging Face Hub&lt;/a&gt;将模型下载到本地后，将模型放置在 &lt;code&gt;$HOME/models&lt;/code&gt; 文件夹的路径下，即可从本地加载模型。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;部署模型&lt;/h3&gt; &#xA;&lt;p&gt;使用以下命令即可用text-generation-inference进行GPU加速推理部署：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --gpus &#39;all&#39; --shm-size 1g -p 9090:80 -v $HOME/models:/data \&#xA;        --env LOG_LEVEL=&#34;info,text_generation_router=debug&#34; \&#xA;        ghcr.nju.edu.cn/huggingface/text-generation-inference:1.0.3 \&#xA;        --model-id /data/CodeShell-7B-Chat --num-shard 1 \&#xA;        --max-total-tokens 5000 --max-input-length 4096 \&#xA;        --max-stop-sequences 12 --trust-remote-code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;更详细的参数说明请参考&lt;a href=&#34;https://github.com/huggingface/text-generation-inference&#34;&gt;text-generation-inference项目文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;配置插件&lt;/h2&gt; &#xA;&lt;p&gt;VSCode中执行&lt;code&gt;Install from VSIX...&lt;/code&gt;命令，选择&lt;code&gt;codeshell-vscode-${VERSION_NAME}.vsix&lt;/code&gt;，完成插件安装。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置CodeShell大模型服务地址&lt;/li&gt; &#xA; &lt;li&gt;配置是否自动触发代码补全建议&lt;/li&gt; &#xA; &lt;li&gt;配置自动触发代码补全建议的时间延迟&lt;/li&gt; &#xA; &lt;li&gt;配置补全的最大tokens数量&lt;/li&gt; &#xA; &lt;li&gt;配置问答的最大tokens数量&lt;/li&gt; &#xA; &lt;li&gt;配置模型运行环境&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;注意：不同的模型运行环境可以在插件中进行配置。对于&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat-int4&#34;&gt;CodeShell-7B-Chat-int4&lt;/a&gt;模型，您可以在&lt;code&gt;Code Shell: Run Env For LLMs&lt;/code&gt;选项中选择&lt;code&gt;CPU with llama.cpp&lt;/code&gt;选项。而对于&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B&#34;&gt;CodeShell-7B&lt;/a&gt;和&lt;a href=&#34;https://huggingface.co/WisdomShell/CodeShell-7B-Chat&#34;&gt;CodeShell-7B-Chat&lt;/a&gt;模型，应选择&lt;code&gt;GPU with TGI toolkit&lt;/code&gt;选项。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://resource.zsmarter.cn/appdata/codeshell-vscode/screenshots/docs_settings.png&#34; alt=&#34;插件配置截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能特性&lt;/h2&gt; &#xA;&lt;h3&gt;1. 代码补全&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;自动触发代码建议&lt;/li&gt; &#xA; &lt;li&gt;热键触发代码建议&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在编码过程中，当停止输入时，代码补全建议可自动触发（在配置选项&lt;code&gt;Auto Completion Delay&lt;/code&gt;中可设置为1~3秒），或者您也可以主动触发代码补全建议，使用快捷键&lt;code&gt;Alt+\&lt;/code&gt;（对于&lt;code&gt;Windows&lt;/code&gt;电脑）或&lt;code&gt;option+\&lt;/code&gt;（对于&lt;code&gt;Mac&lt;/code&gt;电脑）。&lt;/p&gt; &#xA;&lt;p&gt;当插件提供代码建议时，建议内容以灰色显示在编辑器光标位置，您可以按下Tab键来接受该建议，或者继续输入以忽略该建议。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://resource.zsmarter.cn/appdata/codeshell-vscode/screenshots/docs_completion.png&#34; alt=&#34;代码建议截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. 代码辅助&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对一段代码进行解释/优化/清理&lt;/li&gt; &#xA; &lt;li&gt;为一段代码生成注释/单元测试&lt;/li&gt; &#xA; &lt;li&gt;检查一段代码是否存在性能/安全性问题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在vscode侧边栏中打开插件问答界面，在编辑器中选中一段代码，在鼠标右键CodeShell菜单中选择对应的功能项，插件将在问答界面中给出相应的答复。&lt;/p&gt; &#xA;&lt;p&gt;在问答界面的代码块中，可以点击复制按钮复制该代码块，也可点击插入按钮将该代码块内容插入到编辑器光标处。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://resource.zsmarter.cn/appdata/codeshell-vscode/screenshots/docs_assistants.png&#34; alt=&#34;代码辅助截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. 智能问答&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持多轮对话&lt;/li&gt; &#xA; &lt;li&gt;支持会话历史&lt;/li&gt; &#xA; &lt;li&gt;基于历史会话（做为上文）进行多轮对话&lt;/li&gt; &#xA; &lt;li&gt;可编辑问题，重新提问&lt;/li&gt; &#xA; &lt;li&gt;对任一问题，可重新获取回答&lt;/li&gt; &#xA; &lt;li&gt;在回答过程中，可以打断&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://resource.zsmarter.cn/appdata/codeshell-vscode/screenshots/docs_chat.png&#34; alt=&#34;智能问答截图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开源协议&lt;/h2&gt; &#xA;&lt;p&gt;Apache 2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devfullcycle/imersao15</title>
    <updated>2023-10-22T01:44:30Z</updated>
    <id>tag:github.com,2023-10-22:/devfullcycle/imersao15</id>
    <link href="https://github.com/devfullcycle/imersao15" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Imersão Fullcycle 15 - Codepix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://events-fullcycle.s3.amazonaws.com/events-fullcycle/static/site/img/grupo_4417.png&#34; alt=&#34;Imersão Full Stack &amp;amp;&amp;amp; Full Cycle&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Participe gratuitamente: &lt;a href=&#34;https://imersao.fullcycle.com.br/&#34;&gt;https://imersao.fullcycle.com.br/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sobre o repositório&lt;/h2&gt; &#xA;&lt;p&gt;Esse repositório contém todo código utilizado durante as aulas para referência.&lt;/p&gt; &#xA;&lt;p&gt;Faça seu fork e também nos dê uma estrelinha para nos ajudar a divulgar o projeto.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Alterações no &lt;code&gt;Dockerfile - Go&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;Vamos atualizar a versão do &lt;code&gt;Go&lt;/code&gt; para a &lt;code&gt;golang:1.19&lt;/code&gt;, desta forma os pacotes instalados serão compatíveis entre eles.&lt;/p&gt; &#xA;&lt;p&gt;Durante a aula 01 o Wesley configura o &lt;code&gt;Dockerfile&lt;/code&gt; com a instalação do &lt;code&gt;cobra&lt;/code&gt; que vamos utilizar mais a frente no curso, mas há uma alteração a ser feita na instalação desta ferramenta como abaixo:&lt;/p&gt; &#xA;&lt;p&gt;Precisamos substituir e incluir o comando de instalação do &lt;code&gt;cobra-cli&lt;/code&gt;: &lt;code&gt;go get github.com/spf13/cobra-cli@v1.3.0 &amp;amp;&amp;amp; \&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Após realizar as alterações acima o &lt;code&gt;Dockerfile&lt;/code&gt; ficará da seguinte forma:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-docker&#34;&gt;FROM golang:1.19&#xA;&#xA;WORKDIR /go/src&#xA;ENV PATH=&#34;/go/bin:${PATH}&#34;&#xA;ENV GO111MODULE=on&#xA;ENV CGO_ENABLED=1&#xA;&#xA;RUN apt-get update &amp;amp;&amp;amp; \&#xA;    apt-get install build-essential protobuf-compiler librdkafka-dev -y &amp;amp;&amp;amp; \&#xA;    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0 &amp;amp;&amp;amp; \&#xA;    go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0 &amp;amp;&amp;amp; \&#xA;    go install github.com/spf13/cobra-cli@v1.3.0 &amp;amp;&amp;amp; \&#xA;    wget https://github.com/ktr0731/evans/releases/download/0.9.1/evans_linux_amd64.tar.gz &amp;amp;&amp;amp; \&#xA;    tar -xzvf evans_linux_amd64.tar.gz &amp;amp;&amp;amp; \&#xA;    mv evans ../bin &amp;amp;&amp;amp; rm -f evans_linux_amd64.tar.gz&#xA;&#xA;CMD [&#34;tail&#34;, &#34;-f&#34;, &#34;/dev/null&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dentro do arquivo &lt;code&gt;go.mod&lt;/code&gt; apague todo o conteúdo de &lt;code&gt;require&lt;/code&gt; e no terminal rode o comando abaixo para instalar todas as depêndencias:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;go mod init&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Com isso a aplicação deve funcionar corretamente.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Alteração de comando - Aula 02 - Imersão - gRPC e o abismo entre devs e empresas&lt;/h3&gt; &#xA;&lt;p&gt;Como explicado acima, precisamos incluir o &lt;code&gt;cobra-cli&lt;/code&gt; nas instalações internas do &lt;code&gt;container&lt;/code&gt;, por isso o comando para iniciar o &lt;code&gt;cobra&lt;/code&gt; será: &lt;code&gt;cobra-cli init&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>learnhouse/learnhouse</title>
    <updated>2023-10-22T01:44:30Z</updated>
    <id>tag:github.com,2023-10-22:/learnhouse/learnhouse</id>
    <link href="https://github.com/learnhouse/learnhouse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Next-Gen Open Source learning platform ✨&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://learnhouse.app&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/learnhouse/learnhouse/dev/.github/images/readme.png&#34; height=&#34;300&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;LearnHouse is an open source platform that makes it easy for anyone to provide world-class educational content and it offers a variety of content types : Dynamic Pages, Videos, Documents &amp;amp; more..&lt;/p&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;p&gt;🚧 LearnHouse is still on early development (alpha) and should not be used (yet) on production, as we reach stability we will release a stable version and add more features.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://docs.learnhouse.app/img/pages/features.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📄✨Dynamic notion-like pages&lt;/li&gt; &#xA; &lt;li&gt;👨‍🎓 Easy to use&lt;/li&gt; &#xA; &lt;li&gt;👥 Multi-Organization&lt;/li&gt; &#xA; &lt;li&gt;📹 Supports Uploadable Videos and external videos like YouTube&lt;/li&gt; &#xA; &lt;li&gt;📄 Supports documents like PDF&lt;/li&gt; &#xA; &lt;li&gt;🍱 Course Collections&lt;/li&gt; &#xA; &lt;li&gt;🙋 Quizzes&lt;/li&gt; &#xA; &lt;li&gt;👟 Course progress&lt;/li&gt; &#xA; &lt;li&gt;⚡ (Incoming) Live Collaboration&lt;/li&gt; &#xA; &lt;li&gt;More to come&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://discord.gg/CMyZjjYZ6x&#34;&gt;Discord&lt;/a&gt; community 👋&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for you interest 💖, here is how you can help :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/learnhouse/learnhouse/dev/CONTRIBUTING.md&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.learnhouse.app/setup-dev-environment&#34;&gt;Developers Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/learnhouse/learnhouse/issues/new?assignees=&amp;amp;labels=bug%2Ctriage&amp;amp;projects=&amp;amp;template=bug.yml&amp;amp;title=%5BBug%5D%3A+&#34;&gt;Submit a bug report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/learnhouse/learnhouse/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22+label%3A%22help+wanted%22&#34;&gt;Check good first issues &amp;amp; Help Wanted&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Spread the word and share the project with your friends&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.learnhouse.app&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.learnhouse.app/setup-dev-environment&#34;&gt;Developers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech&lt;/h2&gt; &#xA;&lt;p&gt;LearnHouse uses a number of open source projects to work properly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Next.js&lt;/strong&gt; (13 with the App Directory) - The React Framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TailwindCSS&lt;/strong&gt; - Styling&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Radix UI&lt;/strong&gt; - Accessible UI Components&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tiptap&lt;/strong&gt; - An editor framework and headless wrapper around ProseMirror&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FastAPI&lt;/strong&gt; - A high performance, async API framework for Python&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;YJS&lt;/strong&gt; - Shared data types for building collaborative software&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - NoSQL Database&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React&lt;/strong&gt; - duh&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A word&lt;/h2&gt; &#xA;&lt;p&gt;Learnhouse is made with 💜, from the UI to the features it is carefully designed to make students and teachers lives easier and make education software more enjoyable.&lt;/p&gt; &#xA;&lt;p&gt;Thank you and have fun using/developing/testing LearnHouse !&lt;/p&gt;</summary>
  </entry>
</feed>