<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-20T01:44:20Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Trendyol/baklava</title>
    <updated>2023-04-20T01:44:20Z</updated>
    <id>tag:github.com,2023-04-20:/Trendyol/baklava</id>
    <link href="https://github.com/Trendyol/baklava" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Design System with Web Components&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/127687/233114483-c5b0a8e7-c072-4ced-a7b5-76bce1be4b21.svg?sanitize=true&#34; width=&#34;200&#34; alt=&#34;Baklava Design System Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Baklava Design System&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@trendyol/baklava&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@trendyol/baklava.svg?sanitize=true&#34; alt=&#34;npm package stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@trendyol/baklava/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@trendyol/baklava/beta.svg?sanitize=true&#34; alt=&#34;npm package beta&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Trendyol/baklava/raw/next/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/trendyol/baklava&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/@trendyol/baklava&#34;&gt;&lt;img src=&#34;https://img.shields.io/jsdelivr/npm/hm/@trendyol/baklava&#34; alt=&#34;jsDelivr hits (npm scoped)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release&#34; alt=&#34;semantic-release: angular&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Baklava is a design system provided by &lt;a href=&#34;https://github.com/trendyol&#34;&gt;Trendyol&lt;/a&gt; to create a consistent UI/UX for app users.&lt;/p&gt; &#xA;&lt;p&gt;Web implementation of the design system is created as native web components so it can be used within every type of web frameworks including Vue, React or Angular. Our target is providing a UI library that has neatly designed and developed for providing best possible user experience for the users of applications that uses Baklava DS.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Preferred way of using Baklava is using it via CDN. Just import library JS and CSS files to your main document like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/@trendyol/baklava@2.0.0/dist/themes/default.css&#34; /&amp;gt;&#xA;&amp;lt;script type=&#34;module&#34; src=&#34;https://cdn.jsdelivr.net/npm/@trendyol/baklava@2.0.0/dist/baklava.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This way library will be served from a very high performant CDN and all of the Baklava web components will be ready to use inside your web project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;bl-button&amp;gt;Baklava works!&amp;lt;/bl-button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Baklava Design System is always open for direct contributions. Contributions can be in the form of design suggestions, documentation improvements, new component suggestions, code improvements, adding new features or fixing problems. For more information please check our &lt;a href=&#34;https://raw.githubusercontent.com/Trendyol/baklava/next/CONTRIBUTING.md&#34;&gt;Contribution Guideline document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://baklava.design/&#34;&gt;Storybook Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/file/RrcLH0mWpIUy4vwuTlDeKN/Baklava-Design-Guide&#34;&gt;Figma Design Document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/Trendyol/projects/4&#34;&gt;Project Board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Trendyol/baklava/discussions&#34;&gt;Discussion Board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Trendyol/baklava-react-native&#34;&gt;Mobile (React-Native) Implementation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>yoavbls/pretty-ts-errors</title>
    <updated>2023-04-20T01:44:20Z</updated>
    <id>tag:github.com,2023-04-20:/yoavbls/pretty-ts-errors</id>
    <link href="https://github.com/yoavbls/pretty-ts-errors" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔵 Make TypeScript errors prettier and human-readable in VSCode 🎀&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yoavbls.pretty-ts-errors&#34; style=&#34;display: none;&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/icon.png&#34; width=&#34;140&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/icon.png&#34; width=&#34;140&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/empty.png&#34; alt=&#34;Logo&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Pretty &lt;code&gt;TypeScript&lt;/code&gt; Errors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;Make TypeScript errors prettier and human-readable in VSCode.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yoavbls.pretty-ts-errors&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--007ACC?logo=visual%20studio%20code&amp;amp;logoColor=ffffff&#34; alt=&#34;Visual Studio Code&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;a href=&#34;https://github.com/yoavbls/pretty-ts-errors/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/yoavbls/pretty-ts-errors&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&amp;nbsp;&lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=pretty-ts-errors&#34; alt=&#34;visitor badge&#34;&gt; &lt;a href=&#34;https://GitHub.com/yoavbls/pretty-ts-errors/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/yoavbls/pretty-ts-errors.svg?style=social&amp;amp;label=Star&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TypeScript errors become messier as the complexity of types increases. At some point, TypeScript will throw on you a shitty heap of parentheses and &lt;code&gt;&#34;...&#34;&lt;/code&gt;.&lt;br&gt; This extension will help you understand what&#39;s going on. For example, in this relatively simple error:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/this.png&#34; style=&#34;max-height: 350px&#34; height=&#34;350px&#34;&gt;&amp;nbsp; &amp;nbsp; &lt;img src=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/instead-of-that.png&#34; height=&#34;350px&#34; width=&#34;350px&#34; style=&#34;max-height: 350px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Syntax highlighting with your theme colors for types in error messages, supporting both light and dark themes&lt;/li&gt; &#xA; &lt;li&gt;A button that leads you to the relevant type declaration next to the type in the error message&lt;/li&gt; &#xA; &lt;li&gt;A button that navigates you to the error at &lt;a href=&#34;http://typescript.tv&#34;&gt;typescript.tv&lt;/a&gt;, where you can find a detailed explanation, sometimes with a video&lt;/li&gt; &#xA; &lt;li&gt;A button that navigates you to &lt;a href=&#34;https://ts-error-translator.vercel.app/&#34;&gt;ts-error-translator&lt;/a&gt;, where you can read the error in plain English&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node and Deno TypeScript error reporters (in &lt;code&gt;.ts&lt;/code&gt; files)&lt;/li&gt; &#xA; &lt;li&gt;JSDoc type errors (in &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.jsx&lt;/code&gt; files)&lt;/li&gt; &#xA; &lt;li&gt;React, Solid and Qwik errors (in &lt;code&gt;.tsx&lt;/code&gt; and &lt;code&gt;.mdx&lt;/code&gt; files)&lt;/li&gt; &#xA; &lt;li&gt;Astro, Svelte and Vue files when TypeScript is enabled (in &lt;code&gt;.astro&lt;/code&gt;, &lt;code&gt;.svelte&lt;/code&gt; and &lt;code&gt;.vue&lt;/code&gt; files)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Watch it&lt;/h2&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=9RM2aErJs-s&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;http://img.youtube.com/vi/9RM2aErJs-s/0.jpg&#34; alt=&#34;Watch the video&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Why isn&#39;t it trivial&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;TypeScript errors contain types that are not valid in TypeScript.&lt;br&gt; Yes, these types include things like &lt;code&gt;... more ...&lt;/code&gt;, &lt;code&gt;{ ... }&lt;/code&gt;, etc in an inconsistent manner. Some are also cutting in the middle because they&#39;re too long.&lt;/li&gt; &#xA; &lt;li&gt;Types can&#39;t be syntax highlighted in code blocks because the part of &lt;code&gt;type X = ...&lt;/code&gt; is missing, so I needed to create a new TextMate grammar, a superset of TypeScript grammar called &lt;code&gt;type&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;VSCode markdown blocks all styling options, so I had to find hacks to style the error messages. e.g., there isn&#39;t an inlined code block on VSCode markdown, so I used a code block inside a codicon icon, which is the only thing that can be inlined. That&#39;s why it can&#39;t be copied. but it isn&#39;t a problem because you can still hover on the error and copy things from the original error pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/yoavbls/pretty-ts-errors/main/assets/errors-hover.png&#34; width=&#34;600&#34;&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Every contribution is welcome.&lt;br&gt; Feel free to ask anything and open any issue / PR you desire.&lt;/p&gt; &#xA;&lt;h2&gt;WTF&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#yoavbls/pretty-ts-errors&amp;amp;Date&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://api.star-history.com/svg?repos=yoavbls/pretty-ts-errors&amp;amp;type=Date&#34; width=&#34;500px&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Thanks to these amazing folks and anyone else that help it reach so many people 💙&lt;/p&gt; &#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&#xA; &lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;That&#39;s great! &lt;a href=&#34;https://t.co/gGX2TNKFqO&#34;&gt;https://t.co/gGX2TNKFqO&lt;/a&gt; &lt;a href=&#34;https://t.co/xu3i5GjC7H&#34;&gt;pic.twitter.com/xu3i5GjC7H&lt;/a&gt;&lt;/p&gt;— Johnson Chu (@johnsoncodehk) &#xA; &lt;a href=&#34;https://twitter.com/johnsoncodehk/status/1646214711204286465?ref_src=twsrc%5Etfw&#34;&gt;April 12, 2023&lt;/a&gt;&#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&#xA; &lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;s/o &lt;a href=&#34;https://twitter.com/yoavbls?ref_src=twsrc%5Etfw&#34;&gt;@yoavbls&lt;/a&gt; - this is dope &lt;a href=&#34;https://t.co/wsI7gOxqC4&#34;&gt;https://t.co/wsI7gOxqC4&lt;/a&gt;&lt;/p&gt;— Theo - t3.gg (@t3dotgg) &#xA; &lt;a href=&#34;https://twitter.com/t3dotgg/status/1647752075969974272?ref_src=twsrc%5Etfw&#34;&gt;April 17, 2023&lt;/a&gt;&#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&#xA; &lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Typescript just got way better &lt;a href=&#34;https://t.co/y8BQERWz7h&#34;&gt;https://t.co/y8BQERWz7h&lt;/a&gt;&lt;/p&gt;— Tanner Linsley (@tannerlinsley) &#xA; &lt;a href=&#34;https://twitter.com/tannerlinsley/status/1647982562026090496?ref_src=twsrc%5Etfw&#34;&gt;April 17, 2023&lt;/a&gt;&#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>liou666/polyglot</title>
    <updated>2023-04-20T01:44:20Z</updated>
    <id>tag:github.com,2023-04-20:/liou666/polyglot</id>
    <link href="https://github.com/liou666/polyglot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖️ 桌面端AI语言练习应用&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liou666/polyglot/main/public/favicon.ico&#34; width=&#34;60px&#34; align=&#34;center&#34; alt=&#34;Polyglot icon&#34;&gt; Polyglot&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AI语言练习应用&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Polyglot是一款桌面端应用程序。基于ChatGPT和Azure人工智能语言模型作为底层服务，使用Vue3+TS技术栈构建，旨在提供一个易于使用的语言练习平台，方便进行多语种的口语练习。 &lt;a href=&#34;https://www.bilibili.com/video/BV1sM411L7cU/?share_source=copy_web&amp;amp;vd_source=da2f1bfceb26ae614cbaa8d4453a6c80&#34;&gt;（📺B站链接）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;&#34; alt=&#34;Screenshot: Polyglot App running&#34; src=&#34;https://raw.githubusercontent.com/liou666/polyglot/main/screenshot/0.1.0.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &lt;a href=&#34;https://github.com/liou666/polyglot/releases/download/v0.1.1/Polyglot_0.1.1.dmg&#34;&gt;点击下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://github.com/liou666/polyglot/releases/download/v0.1.1/Polyglot_0.1.1.exe&#34;&gt;点击下载&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多国语言口语练习 （&lt;del&gt;目前内置四个不同国家的AI人物，分别来自美国、日本、韩国和法国。后续将考虑增加更多的语种。&lt;/del&gt;）（内置了英语，其他语言现在支持自定义）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 智能语音合成（基于Azure TTS服务）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 智能对话功能（基于chatGPT服务）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持暗黑模式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 接入文字翻译功能&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持用户自定义语种和AI人物&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持用户配置自定义对话场景&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持Azure openai api服务&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 用户自定义配置Azure key&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置OpenAI Key&lt;/li&gt; &#xA; &lt;li&gt;设置代理（非必须）&lt;/li&gt; &#xA; &lt;li&gt;选择喜欢的AI人物进行对话；&lt;/li&gt; &#xA; &lt;li&gt;与AI人物进行对话练习口语。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;本地启动&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 1.克隆本仓库；&#xA;git clone https://github.com/liou666/polyglot.git&#xA;&#xA;# 2.安装依赖；&#xA;cd polyglot&#xA;pnpm install &#xA;# 安装 electron 失败时尝试使用淘宝镜像源安装👇：&#xA;# export ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ &amp;amp;&amp;amp; pnpm i&#xA;&#xA;# 3. 根据注释提示配置相关的环境变量&#xA;mv .env.example .env&#xA;&#xA;# 4. 启动服务&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;p&gt;如果您有任何建议或意见，欢迎提出 &lt;a href=&#34;https://github.com/liou666/polyglot/issues&#34;&gt;Issues&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/liou666/polyglot/pulls&#34;&gt; Pull Request&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;协议&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/liou666/polyglot/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;1. 我所在的地区有网络限制，怎么正常使用？&lt;/summary&gt; &#xA; &lt;p&gt;应用支持使用代理，具体代理搭建过程google一下&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;2. MacOS 提示无法打开“Polyglot”，因为Apple无法检查其是否包含恶意软件。&lt;/summary&gt; &#xA; &lt;p&gt;这个错误因为 macOS 操作系统中的 Gatekeeper 安全功能阻止了应用程序的运行。 要解决此问题，请按照以下步骤操作：&lt;/p&gt; &#xA; &lt;p&gt;打开“系统偏好设置”并点击“安全性与隐私”。 在“通用”选项卡中，您将看到一个消息：“Polyglot”已被阻止。单击“仍要打开”。 或者，你可以单击“打开任何方式”以打开你的应用程序。 （可能需要使用管理员权限来打开应用程序。）&lt;/p&gt; &#xA; &lt;p&gt;如果不想在每次打开应用程序时都执行这些步骤，则可以的应用程序添加到白名单中，以便在不受阻止的情况下运行。要将您的应用程序添加到白名单中，请执行以下操作：&lt;/p&gt; &#xA; &lt;p&gt;打开终端并输入以下命令：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;xattr -rd com.apple.quarantine /path/to/Polyglot.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;其中，/path/to/Polyglot.app 是你的应用程序的完整路径。&lt;/p&gt; &#xA; &lt;p&gt;运行命令后，应用程序将被添加到白名单中，Gatekeeper 将不再阻止其运行。&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;讨论与交流&lt;/h2&gt; &#xA;&lt;img width=&#34;200&#34; alt=&#34;Screenshot: Polyglot App running&#34; src=&#34;https://raw.githubusercontent.com/liou666/polyglot/main/screenshot/chat.JPG&#34;&gt;</summary>
  </entry>
</feed>