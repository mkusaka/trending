<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-14T01:47:56Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reworkd/AgentGPT</title>
    <updated>2023-04-14T01:47:56Z</updated>
    <id>tag:github.com,2023-04-14:/reworkd/AgentGPT</id>
    <link href="https://github.com/reworkd/AgentGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 Assemble, configure, and deploy autonomous AI Agents in your browser.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/reworkd/AgentGPT/main/public/banner.png?token=GHSAT0AAAAAAB7JND3U3VGGF3UYYHGYO4RAZBSDJAQ&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;🤖 Assemble, configure, and deploy autonomous AI Agents in your browser. 🤖 &lt;/em&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Node version&#34; src=&#34;https://img.shields.io/static/v1?label=node&amp;amp;message=%20%3E=16.0.0&amp;amp;logo=node.js&amp;amp;color=2334D058&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://agentgpt.reworkd.ai&#34;&gt;🔗 Short link&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/reworkd/AgentGPT/main/#-getting-started&#34;&gt;🤝 Contribute&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;https://twitter.com/asimdotshrestha/status/1644883727707959296&#34;&gt;🐦 Twitter&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href=&#34;https://discord.gg/3PccggEG&#34;&gt;📢 Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; 💝 Support the Advancement of AgentGPT!! 💝 &lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Join us in fueling the development of AgentGPT, an open-source project pushing the boundaries of AI autonomy! We&#39;re facing challenges in covering the operational costs 💸, including in-house API and other infrastructure expenses, which is projected to grow to around $150 USD per day 💳🤕 Your sponsorship would drive progress by helping us scale up resources, enhance features and functionality, and continue to iterate on this exciting project! 🚀 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; By sponsoring this free, open-source project, you not only have the opportunity to have your avatar/logo featured below, but also get the exclusive chance to chat with the founders!🗣️ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/reworkd-admin&#34;&gt;👉 Click here&lt;/a&gt; to support the project &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;AgentGPT allows you to configure and deploy Autonomous AI agents. Name your own custom AI and have it embark on any goal imaginable. It will attempt to reach the goal by thinking of tasks to do, executing them, and learning from the results 🚀.&lt;/p&gt; &#xA;&lt;h2&gt;🎉 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;This platform is currently in beta, we are currently working on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Long term memory via a vector DB 🧠&lt;/li&gt; &#xA; &lt;li&gt;Web browsing capabilities via langchain 🌐&lt;/li&gt; &#xA; &lt;li&gt;Interaction with websites and people 👨‍👩‍👦&lt;/li&gt; &#xA; &lt;li&gt;Writing capabilities via a document API 📄&lt;/li&gt; &#xA; &lt;li&gt;Saving agent runs 💾&lt;/li&gt; &#xA; &lt;li&gt;Users and authentication 🔐&lt;/li&gt; &#xA; &lt;li&gt;Stripe integration for a lower limit paid version (So we can stop worrying about infra costs) 💵&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More Coming soon...&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Bootstrapping&lt;/strong&gt;: &lt;a href=&#34;https://create.t3.gg&#34;&gt;create-t3-app&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Framework&lt;/strong&gt;: &lt;a href=&#34;https://nextjs.org/&#34;&gt;Nextjs 13 + Typescript&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Auth&lt;/strong&gt;: &lt;a href=&#34;https://next-auth.js.org&#34;&gt;Next-Auth.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;ORM&lt;/strong&gt;: &lt;a href=&#34;https://prisma.io&#34;&gt;Prisma&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Database&lt;/strong&gt;: &lt;a href=&#34;https://supabase.com/&#34;&gt;Supabase&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Styling&lt;/strong&gt;: &lt;a href=&#34;https://tailwindcss.com&#34;&gt;TailwindCSS + HeadlessUI&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Typescript Schema Validation&lt;/strong&gt;: &lt;a href=&#34;https://github.com/colinhacks/zod&#34;&gt;Zod&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;End-to-end typesafe API&lt;/strong&gt;: &lt;a href=&#34;https://trpc.io/&#34;&gt;tRPC&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👨‍🚀 Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Node Version &amp;gt;= 16.8.0&lt;/p&gt; &#xA;&lt;h3&gt;🐳 Docker Setup&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to run AgentGPT locally is by using docker. A convenient setup script is provided to help you get started.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh --docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;👷 Local Development Setup&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to develop AgentGPT locally, the easiest way is to use the provided setup script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./setup.sh --local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🛠️ Manual Setup&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🚧 You will need &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Nodejs +18 (LTS recommended)&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reworkd/AgentGPT/fork&#34;&gt;Click here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:YOU_USER/AgentGPT.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd AgentGPT&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create a &lt;strong&gt;.env&lt;/strong&gt; file with the following content:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🚧 The environment variables must match the following &lt;a href=&#34;https://github.com/reworkd/AgentGPT/raw/main/src/env/schema.mjs&#34;&gt;schema&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Deployment Environment:&#xA;NODE_ENV=development&#xA;&#xA;# Next Auth config:&#xA;# Generate a secret with `openssl rand -base64 32`&#xA;NEXTAUTH_SECRET=changeme&#xA;NEXTAUTH_URL=http://localhost:3000&#xA;DATABASE_URL=file:./db.sqlite&#xA;&#xA;# Your open api key&#xA;OPENAI_API_KEY=changeme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Modify prisma schema to use sqlite:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./prisma/use_sqlite.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only needs to be done if you wish to use sqlite.&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Ready 🥳, now run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create database migrations&#xA;npx prisma db push&#xA;&#xA;# Run the project:&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>eumemic/ai-legion</title>
    <updated>2023-04-14T01:47:56Z</updated>
    <id>tag:github.com,2023-04-14:/eumemic/ai-legion</id>
    <link href="https://github.com/eumemic/ai-legion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An LLM-powered autonomous agent platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI Legion: an LLM-powered autonomous agent platform&lt;/h1&gt; &#xA;&lt;p&gt;A framework for autonomous agents who can work together to accomplish tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/X9MkUEsEUC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1095770840173383802?label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You will need at least Node 10.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rename the &lt;code&gt;.env.template&lt;/code&gt; file at the root of the project to &lt;code&gt;.env&lt;/code&gt; and add your secrets to it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=... # obtain from https://platform.openai.com/account/api-keys&#xA;# the following are needed for the agent to be able to search the web:&#xA;GOOGLE_SEARCH_ENGINE_ID=... # create a custom search engine at https://cse.google.com/cse/all&#xA;GOOGLE_API_KEY=... # obtain from https://console.cloud.google.com/apis/credentials&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll also need to enable the Google Custom Search API for your Google Cloud account, e.g. &lt;a href=&#34;https://console.cloud.google.com/apis/library/customsearch.googleapis.com&#34;&gt;https://console.cloud.google.com/apis/library/customsearch.googleapis.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Start the program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run start [# of agents] [gpt-3.5-turbo|gpt-4]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Interact with the agents through the console. Anything you type will be sent as a message to all agents currently.&lt;/p&gt; &#xA;&lt;h2&gt;Action errors&lt;/h2&gt; &#xA;&lt;p&gt;After spinning up a new agent, you will often see them make some mistakes which generate errors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Trying to use an action before they&#39;ve asked for &lt;code&gt;help&lt;/code&gt; on it to know what its parameters are&lt;/li&gt; &#xA; &lt;li&gt;Trying to just use a raw text response instead of a correctly-formatted action (or raw text wrapping a code block which contains a valid action)&lt;/li&gt; &#xA; &lt;li&gt;Trying to use a multi-line parameter value without wrapping it in the multiline delimiter (&lt;code&gt;% ff9d7713-0bb0-40d4-823c-5a66de48761b&lt;/code&gt;) This is a normal period of adjustment as they learn to operate themselves. They generally will learn from these mistakes and recover, although &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; agents sometimes devolve into endless error loops and can&#39;t figure out what the problem is. It&#39;s highly advised never to leave an agent unattended, since such infinite loops can eat through your tokens quickly (especially if they&#39;re stuck on a high-token-count action such as &lt;code&gt;writeFile&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Agent state&lt;/h2&gt; &#xA;&lt;p&gt;Each agent stores its state under the &lt;code&gt;.store&lt;/code&gt; directory. Agent 1, for example, has&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.store/1/memory&#xA;.store/1/goals&#xA;.store/1/notes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can simply delete any of these things, or the whole agent folder (or the whole &lt;code&gt;.store&lt;/code&gt;) to selectively wipe whatever state you want between runs. Otherwise, agents will pick up where you left off on restart.&lt;/p&gt; &#xA;&lt;p&gt;A nice aspect of this is that when you want to debug a problem you ran into with a particular agent, you can delete the events in their memory subsequent to the point where the problem occurred, make changes to the code, and restart them to effectively replay that moment until you&#39;ve fixed the bug. You can also ask an agent to implement a feature, and once they&#39;ve done so you can restart, tell them that you&#39;ve loaded the feature, and ask them to try it out.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lgrammel/gptagent.js</title>
    <updated>2023-04-14T01:47:56Z</updated>
    <id>tag:github.com,2023-04-14:/lgrammel/gptagent.js</id>
    <link href="https://github.com/lgrammel/gptagent.js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build AI Agents with TS/JS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPTAgent.js: Automatic AI Agents with TS/JS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/lgrammel?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;GPTAgent.js is a composable and extensible framework for creating AI agents with TypeScript/JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;Creating AI agents requires considerable experimentation to achieve good results. GPTAgent.js makes the agent configuration explicit, so you can easily understand and adjust what the agent.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lgrammel/gptagent.js/tree/main/examples/babyagi&#34;&gt;BabyAGI&lt;/a&gt;&lt;/strong&gt;: A TypeScript / GPTAgent.js implementation of &lt;a href=&#34;https://github.com/yoheinakajima/babyagi&#34;&gt;BabyAGI&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/yoheinakajima&#34;&gt;@yoheinakajima&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lgrammel/gptagent.js/tree/main/examples/javascript-developer&#34;&gt;JavaScript/TypeScript developer&lt;/a&gt;&lt;/strong&gt;: An automated developer agent that works in a docker container. It can read files, write files and execute commands. You can use it to document code, write tests, update tests and features, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lgrammel/gptagent.js/tree/main/examples/wikipedia-qa&#34;&gt;Wikipedia Question-Answering&lt;/a&gt;&lt;/strong&gt;: An agent that has access to a wikipedia search engine and can read wikipedia articles. You can use it to answer questions about wikipedia content.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @gptagent/agent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See examples for details on how to implement and run an agent.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GPTAgent.js is currently in its initial experimental phase. Prior to reaching version 0.1, there may breaking changes in each release.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;agent&lt;/strong&gt;: agent that can identify steps and take actions (based on a role and your instructions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tools&lt;/strong&gt;: read file, write file, run command, use programmable search engine, summarize website according to topic&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;agent/executor separation (optional)&lt;/strong&gt;: Run the executor in a safe environment (e.g. Docker container) where it can use the command line, install libraries, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cost tracking&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GPT-4 vs GPT-3.5-turbo&lt;/h2&gt; &#xA;&lt;p&gt;For agents, it is recommended to use GPT-4. GPT-3.5-Turbo has trouble following instructions, accurately extracting information from text, and tends to hallucinate answers. However, GPT-4 can be expensive and is not fully available yet.&lt;/p&gt; &#xA;&lt;h2&gt;Example Agent Definition&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import * as $ from &#34;@gptagent/agent&#34;;&#xA;import { ActionRegistry, Agent, runCLIAgent } from &#34;@gptagent/agent&#34;;&#xA;&#xA;const textGenerator = new $.ai.openai.OpenAiChatTextGenerator({&#xA;  apiKey: process.env.OPENAI_API_KEY ?? &#34;&#34;,&#xA;  model: &#34;gpt-3.5-turbo&#34;,&#xA;});&#xA;&#xA;const searchWikipediaAction =&#xA;  new $.action.tool.ProgrammableGoogleSearchEngineAction({&#xA;    type: &#34;tool.search-wikipedia&#34;,&#xA;    description:&#xA;      &#34;Search wikipedia using a search term. Returns a list of pages.&#34;,&#xA;    executor: new $.action.tool.ProgrammableGoogleSearchEngineExecutor({&#xA;      key: process.env.WIKIPEDIA_SEARCH_KEY ?? &#34;&#34;,&#xA;      cx: process.env.WIKIPEDIA_SEARCH_CX ?? &#34;&#34;,&#xA;    }),&#xA;  });&#xA;&#xA;const summarizeWebpageAction = new $.action.tool.SummarizeWebpageAction({&#xA;  type: &#34;tool.read-wikipedia-article&#34;,&#xA;  description:&#xA;    &#34;Read a wikipedia article and summarize it considering the query.&#34;,&#xA;  inputExample: {&#xA;    url: &#34;https://en.wikipedia.org/wiki/Artificial_intelligence&#34;,&#xA;    topic: &#34;{query that you are answering}&#34;,&#xA;  },&#xA;  executor: new $.action.tool.SummarizeWebpageExecutor({&#xA;    webpageTextExtractor:&#xA;      new $.component.webpageTextExtractor.BasicWebpageTextExtractor(),&#xA;    summarizer: new $.component.textSummarizer.RecursiveSplitSummarizer({&#xA;      splitter: new $.component.splitter.RecursiveCharacterSplitter({&#xA;        // note: maxCharactersPerChunk can be increased to 4096 * 4 when you use gpt-4&#xA;        maxCharactersPerChunk: 2048 * 4,&#xA;      }),&#xA;      summarizer: new $.component.textSummarizer.ChatTextSummarizer({&#xA;        chatTextGenerator: textGenerator,&#xA;      }),&#xA;    }),&#xA;  }),&#xA;});&#xA;&#xA;runCLIAgent({&#xA;  agent: new Agent({&#xA;    name: &#34;Wikipedia QA&#34;,&#xA;    execute: $.step.createDynamicCompositeStep({&#xA;      prompt: new $.prompt.CompositePrompt(&#xA;        new $.prompt.FixedSectionsPrompt({&#xA;          sections: [&#xA;            {&#xA;              title: &#34;Role&#34;,&#xA;              // Note: &#34;You speak perfect JSON&#34; helps getting gpt-3.5-turbo to provide structured json at the end&#xA;              content: `You are an knowledge worker that answers questions using Wikipedia content.&#xA;You speak perfect JSON.`,&#xA;            },&#xA;            {&#xA;              title: &#34;Constraints&#34;,&#xA;              content: `Make sure all facts for your answer are from Wikipedia articles that you have read.`,&#xA;            },&#xA;          ],&#xA;        }),&#xA;        new $.prompt.AvailableActionsSectionPrompt(),&#xA;        new $.prompt.TaskSectionPrompt(),&#xA;        new $.prompt.RecentStepsPrompt({ maxSteps: 10 })&#xA;      ),&#xA;      actionRegistry: new ActionRegistry({&#xA;        actions: [searchWikipediaAction, summarizeWebpageAction],&#xA;        format: new $.action.format.JsonActionFormat(),&#xA;      }),&#xA;      textGenerator,&#xA;    }),&#xA;  }),&#xA;  observer: new $.agent.ConsoleAgentRunObserver(),&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Output&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lgrammel/gptagent.js/raw/main/examples/wikipedia-qa/screenshot/wikipedia-qa-001.png&#34; alt=&#34;wikipedia-qa&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;node 18&lt;/li&gt; &#xA; &lt;li&gt;pnpm&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>