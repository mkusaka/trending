<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-15T01:43:55Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ajaxy/telegram-tt</title>
    <updated>2024-01-15T01:43:55Z</updated>
    <id>tag:github.com,2024-01-15:/Ajaxy/telegram-tt</id>
    <link href="https://github.com/Ajaxy/telegram-tt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Telegram Web A, GPL v3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Telegram Web A&lt;/h1&gt; &#xA;&lt;p&gt;This project won the first prize 🥇 at &lt;a href=&#34;https://contest.com/javascript-web-3&#34;&gt;Telegram Lightweight Client Contest&lt;/a&gt; and now is an official Telegram client available to anyone at &lt;a href=&#34;https://web.telegram.org/a&#34;&gt;web.telegram.org/a&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;According to the original contest rules, it has nearly zero dependencies and is fully based on its own &lt;a href=&#34;https://github.com/Ajaxy/teact&#34;&gt;Teact&lt;/a&gt; framework (which re-implements React paradigm). It also uses a custom version of &lt;a href=&#34;https://github.com/gram-js/gramjs&#34;&gt;GramJS&lt;/a&gt; as an MTProto implementation.&lt;/p&gt; &#xA;&lt;p&gt;The project incorporates lots of technologically advanced features, modern Web APIs and techniques: WebSockets, Web Workers and WebAssembly, multi-level caching and PWA, voice recording and media streaming, cryptography and raw binary data operations, optimistic and progressive interfaces, complicated CSS/Canvas/SVG animations, reactive data streams, and so much more.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to explore, provide feedback and contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Local setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mv .env.example .env&#xA;&#xA;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obtain API ID and API hash on &lt;a href=&#34;https://my.telegram.org&#34;&gt;my.telegram.org&lt;/a&gt; and populate the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Dev mode&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Invoking API from console&lt;/h3&gt; &#xA;&lt;p&gt;Start your dev server and locate GramJS worker in console context.&lt;/p&gt; &#xA;&lt;p&gt;All constructors and functions available in global &lt;code&gt;GramJs&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;npm run gramjs:tl full&lt;/code&gt; to get access to all available Telegram requests.&lt;/p&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;await invoke(new GramJs.help.GetAppConfig())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Electron&lt;/h2&gt; &#xA;&lt;p&gt;Electron allows building a native application that can be installed on Windows, macOS, and Linux.&lt;/p&gt; &#xA;&lt;h4&gt;NPM scripts&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run dev:electron&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run Electron in development mode, concurrently starts 3 processes with watch for changes: main (main Electron process), renderer (FE code) and Webpack for Electron (compiles main Electron process from TypeScript).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run electron:webpack&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The main process code for Electron, which includes preload functionality, is written in TypeScript and is compiled using the &lt;code&gt;webpack-electron.config.js&lt;/code&gt; configuration to generate JavaScript code.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run electron:build&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prepare renderer (FE code) build, compile Electron main process code, install and build native dependencies, is used before packaging or publishing.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run electron:staging&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Create packages for macOS, Windows and Linux in &lt;code&gt;dist-electron&lt;/code&gt; folders with &lt;code&gt;APP_ENV&lt;/code&gt; as &lt;code&gt;staging&lt;/code&gt; (allows to open DevTools, includes sourcemaps and does not minify built JavaScript code), can be used for manual distribution and testing packaged application.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run electron:production&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Create packages for macOS, Windows and Linux in &lt;code&gt;dist-electron&lt;/code&gt; folders with &lt;code&gt;APP_ENV&lt;/code&gt; as &lt;code&gt;production&lt;/code&gt; (disabled DevTools, minified built JavaScript code), can be used for manual distribution and testing packaged application.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run deploy:electron&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Create packages for macOS, Windows and Linux in &lt;code&gt;dist-electron&lt;/code&gt; folder and publish release to GitHub, which allows supporting autoupdates. See &lt;a href=&#34;https://raw.githubusercontent.com/Ajaxy/telegram-tt/master/#github-release&#34;&gt;GitHub release workflow&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h4&gt;Code signing on MacOS&lt;/h4&gt; &#xA;&lt;p&gt;To sign the code of your application, follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install certificates from &lt;code&gt;/certs&lt;/code&gt; folder to &lt;code&gt;login&lt;/code&gt; folder of your Keychain.&lt;/li&gt; &#xA; &lt;li&gt;Download and install &lt;code&gt;Developer ID - G2&lt;/code&gt; certificate from the &lt;a href=&#34;https://www.apple.com/certificateauthority/&#34;&gt;Apple PKI&lt;/a&gt; page.&lt;/li&gt; &#xA; &lt;li&gt;Under the Keychain application, go to the private key associated with your developer certificate. Then do &lt;code&gt;key &amp;gt; Get Info &amp;gt; Access Control&lt;/code&gt;. Down there, make sure your application (Xcode) is in the list &lt;code&gt;Always allow access by these applications&lt;/code&gt; and make sure &lt;code&gt;Confirm before allowing access&lt;/code&gt; is turned on.&lt;/li&gt; &#xA; &lt;li&gt;A valid and appropriate identity from your keychain will be automatically used when you publish your application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More info in the &lt;a href=&#34;https://www.electronjs.org/docs/latest/tutorial/code-signing&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Notarize on MacOS&lt;/h4&gt; &#xA;&lt;p&gt;Application notarization is done automatically in &lt;a href=&#34;https://github.com/electron-userland/electron-builder/&#34;&gt;electron-builder&lt;/a&gt; module, which requires &lt;code&gt;APPLE_ID&lt;/code&gt; and &lt;code&gt;APPLE_APP_SPECIFIC_PASSWORD&lt;/code&gt; environment variables to be passed.&lt;/p&gt; &#xA;&lt;p&gt;How to obtain app-specific password:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign in to &lt;a href=&#34;https://raw.githubusercontent.com/Ajaxy/telegram-tt/master/appleid.apple.com&#34;&gt;appleid.apple.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the &#34;Sign-In and Security&#34; section, select &#34;App-Specific Passwords&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Generate an app-specific password&#34; or select the Add button, then follow the steps on your screen.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;GitHub release&lt;/h4&gt; &#xA;&lt;h5&gt;GitHub access token&lt;/h5&gt; &#xA;&lt;p&gt;In order to publish new release, you need to add GitHub access token to &lt;code&gt;.env&lt;/code&gt;. Generate a GitHub access token by going to &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;https://github.com/settings/tokens/new&lt;/a&gt;. The access token should have the repo scope/permission. Once you have the token, assign it to an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# .env&#xA;GH_TOKEN=&#34;{YOUR_TOKEN_HERE}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Publish settings&lt;/h5&gt; &#xA;&lt;p&gt;Publish configuration in &lt;code&gt;src/electron/config.yml&lt;/code&gt; config file allows to set GitHub repository owner/name.&lt;/p&gt; &#xA;&lt;h5&gt;Release workflow&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run electron:publish&lt;/code&gt;, which will create new draft release and upload build artefacts to newly reated release. Version of created release will be the same as in &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Once you are done, publish the release. GitHub will tag the latest commit.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gram-js/gramjs&#34;&gt;GramJS&lt;/a&gt; (&lt;a href=&#34;https://github.com/gram-js/gramjs/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nodeca/pako&#34;&gt;pako&lt;/a&gt; (&lt;a href=&#34;https://github.com/nodeca/pako/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spalt08/cryptography&#34;&gt;cryptography&lt;/a&gt; (&lt;a href=&#34;https://github.com/spalt08/cryptography/raw/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iamcal/emoji-data&#34;&gt;emoji-data&lt;/a&gt; (&lt;a href=&#34;https://github.com/iamcal/emoji-data/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/twemoji-parser&#34;&gt;twemoji-parser&lt;/a&gt; (&lt;a href=&#34;https://github.com/twitter/twemoji-parser/raw/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Samsung/rlottie&#34;&gt;rlottie&lt;/a&gt; (&lt;a href=&#34;https://github.com/Samsung/rlottie/raw/master/COPYING&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chris-rudmin/opus-recorder&#34;&gt;opus-recorder&lt;/a&gt; (&lt;a href=&#34;https://github.com/chris-rudmin/opus-recorder/raw/master/LICENSE.md&#34;&gt;Various Licenses&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kozakdenys/qr-code-styling&#34;&gt;qr-code-styling&lt;/a&gt; (&lt;a href=&#34;https://github.com/kozakdenys/qr-code-styling/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Foliotek/Croppie&#34;&gt;croppie&lt;/a&gt; (&lt;a href=&#34;https://github.com/Foliotek/Croppie/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gpac/mp4box.js&#34;&gt;mp4box&lt;/a&gt; (&lt;a href=&#34;https://github.com/gpac/mp4box.js/raw/master/LICENSE&#34;&gt;BSD-3-Clause license&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Borewit/music-metadata-browser&#34;&gt;music-metadata-browser&lt;/a&gt; (&lt;a href=&#34;https://github.com/Borewit/music-metadata-browser/raw/master/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wooorm/lowlight&#34;&gt;lowlight&lt;/a&gt; (&lt;a href=&#34;https://github.com/wooorm/lowlight/raw/main/license&#34;&gt;MIT License&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jakearchibald/idb-keyval&#34;&gt;idb-keyval&lt;/a&gt; (&lt;a href=&#34;https://github.com/jakearchibald/idb-keyval/raw/main/LICENCE&#34;&gt;Apache License 2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/karmdesai/fastTextWeb&#34;&gt;fasttextweb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;webp-wasm&lt;/li&gt; &#xA; &lt;li&gt;fastblur&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bug reports and Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;If you find an issue with this app, let Telegram know using the &lt;a href=&#34;https://bugs.telegram.org/c/4002&#34;&gt;Suggestions Platform&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>marimo-team/marimo</title>
    <updated>2024-01-15T01:43:55Z</updated>
    <id>tag:github.com,2024-01-15:/marimo-team/marimo</id>
    <link href="https://github.com/marimo-team/marimo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reactive notebook for Python — run reproducible experiments, execute as a script, deploy as an app, and version with git.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/marimo-team/marimo/raw/main/docs/_static/marimo-logotype-thick.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;A reactive Python notebook that&#39;s reproducible, git-friendly, and deployable as scripts or apps.&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.marimo.io&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://github.com/marimo-team/marimo/tree/main/examples&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pypi.org/project/marimo/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/marimo?color=%2334D058&amp;amp;label=pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/marimo&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/marimo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/marimo-team/marimo/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/marimo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;marimo is a reactive notebook for Python. It allows you to rapidly experiment with data and models, code with confidence in your notebook&#39;s correctness, and productionize notebooks as pipelines or interactive web apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;reactive&lt;/strong&gt;: run a cell, and marimo automatically updates all affected cells and outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;interactive&lt;/strong&gt;: bind sliders, tables, plots, and more to Python — no callbacks required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reproducible&lt;/strong&gt;: no hidden state, deterministic execution order&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;executable&lt;/strong&gt;: execute as a Python script&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shareable&lt;/strong&gt;: deploy as an app&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;git-friendly&lt;/strong&gt;: stored as &lt;code&gt;.py&lt;/code&gt; files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install marimo &amp;amp;&amp;amp; marimo tutorial intro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Jump to the &lt;a href=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/#quickstart&#34;&gt;quickstart&lt;/a&gt; for a primer on our CLI.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;A reactive programming environment&lt;/h2&gt; &#xA;&lt;p&gt;marimo guarantees your notebook code, outputs, and program state are consistent. This &lt;a href=&#34;https://docs.marimo.io/faq.html#faq-problems&#34;&gt;solves many problems&lt;/a&gt; associated with traditional notebooks like Jupyter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A reactive programming environment.&lt;/strong&gt; Run a cell and marimo &lt;em&gt;reacts&lt;/em&gt; by automatically running the cells that reference its variables, eliminating the error-prone task of manually re-running cells. Delete a cell and marimo scrubs its variables from program memory, eliminating hidden state.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/reactive.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deterministic execution order.&lt;/strong&gt; Notebooks are executed in a deterministic order, based on variable references instead of cells&#39; positions on the page. Organize your notebooks to best fit the stories you&#39;d like to tell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Synchronized UI elements.&lt;/strong&gt; Interact with UI elements like sliders, dropdowns, and dataframe transformers, and the cells that use them are automatically re-run with their latest values.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/readme-ui.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Performant runtime.&lt;/strong&gt; marimo runs only those cells that need to be run by statically analyzing your code. You can optionally disable expensive cells to prevent them from automatically running.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Batteries-included.&lt;/strong&gt; marimo comes with GitHub Copilot, Black code formatting, HTML export, fast code completion, a &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=marimo-team.vscode-marimo&#34;&gt;VS Code extension&lt;/a&gt;, and many more quality-of-life features.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation.&lt;/strong&gt; In a terminal, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install marimo  # or conda install -c conda-forge marimo&#xA;marimo tutorial intro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create notebooks.&lt;/strong&gt; Create an empty notebook with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo edit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or create/edit a notebook with a given name with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo edit your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run apps.&lt;/strong&gt; Run your notebook as a web app, with Python code hidden and uneditable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo run your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/docs-model-comparison.gif&#34; style=&#34;border-radius: 8px&#34; width=&#34;450px&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;This app is deployed on &lt;a href=&#34;https://marimo.io/cloud&#34;&gt;marimo cloud&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Execute as scripts.&lt;/strong&gt; marimo notebooks can be executed as scripts at the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatically convert Jupyter notebooks.&lt;/strong&gt; Automatically convert Jupyter notebooks to marimo notebooks with the CLI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo convert your_notebook.ipynb &amp;gt; your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use our &lt;a href=&#34;https://marimo.io/convert&#34;&gt;web interface&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tutorials.&lt;/strong&gt; List all tutorials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo tutorial --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.marimo.io/faq.html&#34;&gt;FAQ&lt;/a&gt; at our docs.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;marimo is easy to get started with, with lots of room for power users. For example, here&#39;s an embedding visualizer made in marimo (&lt;a href=&#34;https://marimo.io/videos/landing/full.mp4&#34;&gt;video&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/embedding.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.marimo.io&#34;&gt;docs&lt;/a&gt;, the &lt;code&gt;examples/&lt;/code&gt; folder, and our &lt;a href=&#34;https://marimo.io/@public&#34;&gt;gallery&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;table border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/overview.html&#34;&gt; &lt;img src=&#34;https://docs.marimo.io/_static/reactive.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/inputs/index.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/readme-ui.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/plotting.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/docs-intro.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/layouts/index.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/outputs.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/overview.html&#34;&gt; Tutorial &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/inputs/index.html&#34;&gt; Inputs &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/plotting.html&#34;&gt; Plots &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/layouts/index.html&#34;&gt; Layout &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions! You don&#39;t need to be an expert to help out. Please see &lt;a href=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details on how to get started.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Questions? Reach out to us &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34;&gt;on Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re building a community. Come hang out with us!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌟 &lt;a href=&#34;https://github.com/marimo-team/marimo&#34;&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34;&gt;Chat with us on Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📧 &lt;a href=&#34;https://marimo.io/newsletter&#34;&gt;Subscribe to our Newsletter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;☁️ &lt;a href=&#34;https://marimo.io/cloud&#34;&gt;Join our Cloud Waitlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✏️ &lt;a href=&#34;https://github.com/marimo-team/marimo/discussions&#34;&gt;Start a GitHub Discussion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐦 &lt;a href=&#34;https://twitter.com/marimo_io&#34;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕴️ &lt;a href=&#34;https://www.linkedin.com/company/marimo-io&#34;&gt;Follow us on LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspiration ✨&lt;/h2&gt; &#xA;&lt;p&gt;marimo is a &lt;strong&gt;reinvention&lt;/strong&gt; of the Python notebook as a reproducible, interactive, and shareable Python program, instead of an error-prone JSON scratchpad.&lt;/p&gt; &#xA;&lt;p&gt;We believe that the tools we use shape the way we think — better tools, for better minds. With marimo, we hope to provide the Python community with a better programming environment to do research and communicate it; to experiment with code and share it; to learn computational science and teach it.&lt;/p&gt; &#xA;&lt;p&gt;Our inspiration comes from many places and projects, especially &lt;a href=&#34;https://github.com/fonsp/Pluto.jl&#34;&gt;Pluto.jl&lt;/a&gt;, &lt;a href=&#34;https://observablehq.com/tutorials&#34;&gt;ObservableHQ&lt;/a&gt;, and &lt;a href=&#34;http://worrydream.com/&#34;&gt;Bret Victor&#39;s essays&lt;/a&gt;. marimo is part of a greater movement toward reactive dataflow programming. From &lt;a href=&#34;https://github.com/ipyflow/ipyflow&#34;&gt;IPyflow&lt;/a&gt;, &lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;streamlit&lt;/a&gt;, &lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&#34;https://github.com/pytorch/pytorch/tree/main&#34;&gt;PyTorch&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/jax&#34;&gt;JAX&lt;/a&gt;, and &lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React&lt;/a&gt;, the ideas of functional, declarative, and reactive programming are transforming a broad range of tools for the better.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/marimo-logotype-horizontal.png&#34; height=&#34;200px&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firecamp-dev/firecamp</title>
    <updated>2024-01-15T01:43:55Z</updated>
    <id>tag:github.com,2024-01-15:/firecamp-dev/firecamp</id>
    <link href="https://github.com/firecamp-dev/firecamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Developer-first OpenSource API DevTool, Postman/Insomnia alternative.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firecamp.dev&#34;&gt; &lt;img src=&#34;https://github.com/firecamp-dev/firecamp/raw/main/.github/logo.svg?sanitize=true&#34; alt=&#34;Firecamp Logo&#34; width=&#34;70&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;b&gt;Firecamp&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;dx-first open-source API devtool&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/8hRaqhK&#34;&gt;&lt;img alt=&#34;Discord online members&#34; src=&#34;https://badgen.net/discord/members/8hRaqhK?color=5865F2&amp;amp;label=Discord&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/firecamp-dev/firecamp/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/firecamp-dev/firecamp&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/firecamp-dev/firecamp/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/firecamp-dev/firecamp&#34; alt=&#34;Commits-per-month&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;🚧 We&#39;re currently working on the desktop application which can be found on the &lt;a href=&#34;https://github.com/firecamp-dev/firecamp/tree/feat/62-desktop&#34;&gt;feat/62-desktop&lt;/a&gt; branch.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/firecamp-dev/firecamp/issues/62&#34;&gt;Read more 👀&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://firecamp.dev&#34;&gt; &lt;img alt=&#34;firecamp-cover&#34; src=&#34;https://github.com/firecamp-dev/firecamp/assets/5078921/1ef25fd3-bf97-4bd0-b440-7c1f4ef3eb22&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Firecamp&lt;/h1&gt; &#xA;&lt;p&gt;Firecamp is a dx-first API development platform that helps developers design, develop, test, and document their APIs effortlessly. With a user-friendly interface and a range of powerful features, it streamlines the API development workflow and enhances collaboration among team members.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌈 best-in-class developer experience inspired by vscode dx. &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;📡 multi-protocol testing capabilities with Rest, GraphQL, Websocket, and SocketIO APIs. &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;👐 collaborate on API collections across the workspace and team &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;⛺ build APIs faster without switching between tools and apps. documentation, cli, ci/cd under one roof &lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;👉 live at &lt;a href=&#34;https://firecamp.dev&#34;&gt;https://firecamp.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting started with Firecamp&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Firecamp, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Sign in to Firecamp at &lt;a href=&#34;https://firecamp.dev&#34;&gt;https://firecamp.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://firecamp.io/docs&#34;&gt;Getting Started&lt;/a&gt; guide from the documentation.&lt;/li&gt; &#xA; &lt;li&gt;Start developing, and testing your APIs using Firecamp.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Read the Firecamp doc for in-depth walk-throughs on functionality to understand the various features and capabilities of Firecamp.&lt;/p&gt; &#xA;&lt;h2&gt;🔬 Features&lt;/h2&gt; &#xA;&lt;p&gt;Firecamp offers you a broad range of features that will help you build APIs faster than ever.&lt;/p&gt; &#xA;&lt;p&gt;📂 &lt;a href=&#34;https://firecamp.io/docs/platform/collection&#34;&gt;Collection&lt;/a&gt;: Manage Collection of APIs to collaborate within the team &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;⛳ &lt;a href=&#34;https://firecamp.io/docs/rest/introduction&#34;&gt;API Playgrounds&lt;/a&gt;: Get instant playgrounds for your APIs. Rest, GraphQL, and more &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;♻️ &lt;a href=&#34;https://firecamp.io/docs/collaboration/getting-started&#34;&gt;Team Collaboration&lt;/a&gt;: Collaborate with your team at a centralized shared workspace &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔐 &lt;a href=&#34;https://firecamp.io/docs/platform/authentication&#34;&gt;Authentication&lt;/a&gt;: Test and Debug your auth endpoints with a range of supported auths &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📠 &lt;a href=&#34;https://firecamp.io/docs/platform/scripts&#34;&gt;Scripts&lt;/a&gt;: Interpret the API with pre-request and tests scripts &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔩 &lt;a href=&#34;https://firecamp.io/docs/platform/environment&#34;&gt;Dynamic Variables&lt;/a&gt;: Set values in variables to reuse in the whole platform dynamically &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📡 &lt;a href=&#34;https://firecamp.dev&#34;&gt;Firecamp Web&lt;/a&gt;: Get quick access to the web platform &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏕️ API Playgrounds&lt;/h2&gt; &#xA;&lt;p&gt;There is a dedicated GUI playground for each API protocol you would be using for your stack.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://firecamp.io/docs/rest/introduction&#34;&gt;&lt;strong&gt;Rest Playground&lt;/strong&gt;&lt;/a&gt; It&#39;s the lightweight, IntelliSense, and next-generation testing client to give the most delightful collaborative experience while building APIs in a team.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://firecamp.io/docs/graphql/introduction&#34;&gt;&lt;strong&gt;GraphQL Playground&lt;/strong&gt;&lt;/a&gt; Perform GraphQL operations with a seamless experience. Prepare, Share, and Export your Query Collection collaboratively with your team.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://firecamp.io/docs/websocket/introduction&#34;&gt;&lt;strong&gt;WebSocket Playground&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; Debug bidirectional connection visually with WebSocket GUI client more precisely now. The only GUI client to test, debug, and visualize real-time or event-driven messages collaboratively.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://firecamp.io/docs/socket-io/introduction&#34;&gt;&lt;strong&gt;Socket.io Playground&lt;/strong&gt;&lt;/a&gt; Monitor each emitter’s and listener’s events visually over a bi-directional SocketIO connection. It enables you to collaborate with the team over a SocketIO event-driven API build.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🛣️ Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;💻 Desktop Apps: Get the Desktop app for your preferred OS/platform &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;🛰️ Self-hosted: Host Firecamp on your own server&lt;/p&gt; &#xA;&lt;p&gt;🔁 CLI &amp;amp; CI/CD: Run API Collection Tests in the terminal or set in CI/CD pipeline &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;➿ API Test Runner: Run the API Collection visually within the platform &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📄 API Documentation: Publish beautiful API documentation for your team and community &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚛️ Artificial Intelligence: Cutting-edge AI-powered capabilities &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚓ SSL: Use custom SSL certificates to test out the SSL-secured API endpoints &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📝 Proxy: Setup proxy while running requests from Firecamp &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;ℹ️ History: Seamless history tracking&lt;/p&gt; &#xA;&lt;h2&gt;🏆 Community and Support&lt;/h2&gt; &#xA;&lt;p&gt;For community support, you can join the Firecamp community on &lt;a href=&#34;https://discord.gg/8hRaqhK&#34;&gt;Discord&lt;/a&gt;. You can also check out the &lt;a href=&#34;https://firecamp.io/blog&#34;&gt;Firecamp Blog&lt;/a&gt; for the latest updates, tutorials, and articles.&lt;/p&gt; &#xA;&lt;p&gt;Here are helpful links for Firecamp&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firecamp.io/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/8hRaqhK&#34;&gt;Discord community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/FirecampDev&#34;&gt;Twitter updates&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you encounter any bugs, or issues, or have suggestions, please open an issue on the &lt;a href=&#34;https://github.com/firecamp-dev/Firecamp&#34;&gt;Firecamp GitHub repository&lt;/a&gt;. We appreciate your contributions to making Firecamp even better.&lt;/p&gt; &#xA;&lt;h2&gt;💭 Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;The decentralization of tools, processes, and people creates friction in API development workflow and frustration across the team. Developers are constantly switching between tools, searching for information, and wasting time due to inefficient tools. We believe that the existing solution lacks both world-class experience and the simplicity needed to build APIs faster. This leads to a decrease in developer productivity, slow release times, and poor team collaboration. We are bringing the VS code philosophy to Firecamp to solve this critical problem. Our mission is to build the most extensible, minimal, and best developer experience API platform where developers feel most productive while building APIs.&lt;/p&gt; &#xA;&lt;h2&gt;🏄 What&#39;s cool about this?&lt;/h2&gt; &#xA;&lt;p&gt;Firecamp is a Multi-protocol API platform, which offers end-to-end testing and development of Rest, GraphQL, WebSocket, and many other APIs. We support major API specifications and protocols, which allows for seamless API testing, API documentation, and smoother collaboration between backend, frontend, and mobile teams.&lt;/p&gt; &#xA;&lt;h2&gt;✍️ Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Here is the &lt;a href=&#34;https://github.com/firecamp-dev/firecamp/raw/main/CONTRIBUTING.md&#34;&gt;guide for contributions&lt;/a&gt; to help you begin your journey in contributing and our &lt;a href=&#34;https://github.com/firecamp-dev/firecamp/issues&#34;&gt;list of open issues&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;We appreciate all your contributions to Firecamp 🤗&lt;/p&gt; &#xA;&lt;p&gt;Here are a few ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Star this repo.&lt;/li&gt; &#xA; &lt;li&gt;Create issues every time you feel something is missing or goes wrong.&lt;/li&gt; &#xA; &lt;li&gt;Upvote issues with 👍 reaction so we know what the demand for a particular issue is to prioritize it within the roadmap.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💎 All Thanks To Our Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/firecamp-dev/firecamp/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=firecamp-dev/firecamp&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>