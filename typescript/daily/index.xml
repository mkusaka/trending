<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-21T01:48:17Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>srikanth235/privy</title>
    <updated>2024-01-21T01:48:17Z</updated>
    <id>tag:github.com,2024-01-21:/srikanth235/privy</id>
    <link href="https://github.com/srikanth235/privy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Your private coding assistant&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;b&gt;💬 Privy&lt;/b&gt;&lt;/h1&gt; &#xA; &lt;p&gt; &lt;strong&gt;A privacy-first coding assistant.&lt;/strong&gt; &lt;/p&gt; &#xA; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt; &#xA; &lt;a href=&#34;https://twitter.com/getprivydev&#34; style=&#34;text-decoration: none; outline: none&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/getprivydev.svg?style=social&amp;amp;label=%20%40getprivydev&#34; alt=&#34;Twitter: @getprivydev&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/wykDxGyUHA&#34; style=&#34;text-decoration: none; outline: none&#34;&gt; &lt;img src=&#34;https://dcbadge.vercel.app/api/server/vAcVQ7XhR2?style=flat&amp;amp;compact=true&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Pre-requisites&lt;/h2&gt; &#xA;&lt;p&gt;If you haven&#39;t done already, please pick one of the following platforms to run LLM of your choice on your system &lt;strong&gt;locally&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jmorganca/ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mozilla-Ocho/llamafile&#34;&gt;llamafile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of the popular LLMs that we recommend are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mistral.ai/&#34;&gt;Mistral&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookresearch/codellama&#34;&gt;CodeLLama&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Install&lt;/h2&gt; &#xA;&lt;p&gt;You can install Privy extension from the Visual Studio Code Marketplace or from the Open VSX Registry.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=privy.privy-vscode&#34;&gt;Visual Studio Code Marketplace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://open-vsx.org/extension/Privy/privy-vscode&#34;&gt;Open VSX Registry&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration Options&lt;/h2&gt; &#xA;&lt;p&gt;Please set the following options in the &lt;strong&gt;settings&lt;/strong&gt; for Privy extension.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;privy.model&lt;/strong&gt;: Select the LLM that you want to use. Supports Mistral and CodeLLama. Experimental support for GPT-3.5-Turbo and GPT-4.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;privy.provider&lt;/strong&gt;: Pick the platform that is being used for running LLMs locally. There is support for using OpenAI, but this will affect the privacy aspects of the solution. The default is &lt;code&gt;Ollama&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;privy.providerUrl&lt;/strong&gt;: The URL of the platform that is being used for running LLMs locally. The default is &lt;code&gt;http://localhost:11434&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ai-chat&#34;&gt;AI Chat&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#explain-code&#34;&gt;Explain Code&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#generate-tests&#34;&gt;Generate Tests&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#find-bugs&#34;&gt;Find Bugs&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#diagnose-errors&#34;&gt;Diagnose Errors&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AI Chat&lt;/h2&gt; &#xA;&lt;p&gt;Chat with Privy about your code and software development topics. Privy knows the editor selection at the time of conversation start.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can start a chat using one of the following options: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;Privy: Start Chat 💬&lt;/code&gt; command from the command palette.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;code&gt;Privy &amp;gt; Start Chat 💬&lt;/code&gt; entry in the editor context menu (right-click, requires selection).&lt;/li&gt; &#xA;   &lt;li&gt;Use the &#34;Start new chat&#34; button in the side panel.&lt;/li&gt; &#xA;   &lt;li&gt;Use the keyboard shortcut: &lt;code&gt;Ctrl + Cmd + C&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl + Alt + C&lt;/code&gt; (Windows / Linux).&lt;/li&gt; &#xA;   &lt;li&gt;Press 💬 on the MacOS touch bar (if available).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ask a question in the new conversation thread in the Privy sidebar panel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Explain Code&lt;/h2&gt; &#xA;&lt;p&gt;Ask Privy to explain the selected code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select the code that you want to have explained in the editor.&lt;/li&gt; &#xA; &lt;li&gt;Invoke the &#34;Explain Code&#34; command using one of the following options: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;Privy: Explain Code 💬&lt;/code&gt; command from the command palette.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;code&gt;Privy &amp;gt; Explain Code 💬&lt;/code&gt; entry in the editor context menu (right-click).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;The explanations shows up in the Privy sidebar panel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Generate Unit Test&lt;/h2&gt; &#xA;&lt;p&gt;Generate a unit test for the selected code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select a piece of code in the editor for which you want to generate a test case.&lt;/li&gt; &#xA; &lt;li&gt;Invoke the &#34;Generate Unit Test&#34; command using one of the following options: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;Privy: Generate Unit Test 💬&lt;/code&gt; command from the command palette.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;code&gt;Privy &amp;gt; Generate Unit Test 💬&lt;/code&gt; entry in the editor context menu (right-click).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;The test case shows up in a new editor tab. You can refine it in the conversation panel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Find Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Identify potential defects in your code.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select a piece of code that you want to check for bugs.&lt;/li&gt; &#xA; &lt;li&gt;Invoke the &#34;Find Bugs&#34; command using one of the following options: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;Privy: Find Bugs 💬&lt;/code&gt; command from the command palette.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;code&gt;Privy &amp;gt; Find Bugs 💬&lt;/code&gt; entry in the editor context menu (right-click).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Privy will show you a list of potential bugs in the chat window. You can refine it in the conversation panel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Diagnose Errors&lt;/h2&gt; &#xA;&lt;p&gt;Let Privy identify error causes and suggest fixes to fix compiler and linter errors faster.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Select a piece of code in the editor that contains errors.&lt;/li&gt; &#xA; &lt;li&gt;Invoke the &#34;Diagnose Errors&#34; command using one of the following options: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the &lt;code&gt;Privy: Diagnose Errors 💬&lt;/code&gt; command from the command palette.&lt;/li&gt; &#xA;   &lt;li&gt;Select the &lt;code&gt;Privy &amp;gt; Diagnose Errors 💬&lt;/code&gt; entry in the editor context menu (right-click).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;A potential solution will be shown in the chat window. You can refine it in the conversation panel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Tips and Tricks&lt;/h1&gt; &#xA;&lt;p&gt;Understanding these concepts will help you get the most out of Privy.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Be specific&lt;/strong&gt;. When you ask for, e.g., code changes, include concrete names and describe the desired outcome. Avoid vague references.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Provide context&lt;/strong&gt;. You can include the programming language (&#34;in Rust&#34;) or other relevant contexts for basic questions. You can select a meaningful code snippet for code explanations and error diagnosis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do not trust answers blindly&lt;/strong&gt;. It&#39;s a big step for Privy to be able to respond to your questions. It might respond with inaccurate answers, especially when talking about less well-known topics or when the conversation gets too detailed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use different chat threads for different topics&lt;/strong&gt;. Shorter threads with specific topics will help Privy respond more accurately.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode&#34;&gt;RubberDuck AI&lt;/a&gt; - This project is heavily inspired by RubberDuck AI&#39;s work, and we&#39;re indebted to them for building on top of it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;http://larsgrammel.de&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/205036?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lars Grammel&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lars Grammel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-lgrammel&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=lgrammel&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=lgrammel&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/pulls?q=is%3Apr+reviewed-by%3Algrammel&#34; title=&#34;Reviewed Pull Requests&#34;&gt;👀&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#question-lgrammel&#34; title=&#34;Answering Questions&#34;&gt;💬&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3Algrammel&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;http://iainvm.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2806167?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Iain Majer&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Iain Majer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3Aiainvm&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=iainvm&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://nicoespeon.com&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1094774?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nicolas Carlo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nicolas Carlo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=nicoespeon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=nicoespeon&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3Anicoespeon&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/RatoGBM&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/80184495?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;RatoGBM&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RatoGBM&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3ARatoGBM&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://www.lionelokpeicha.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60504466?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lionel Okpeicha&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lionel Okpeicha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3Alohnsonok&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/MercerK&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13123338?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;MercerK&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;MercerK&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3AMercerK&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/lundeen-bryan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13512507?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lundeen.Bryan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lundeen.Bryan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-lundeen-bryan&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/DucoG&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/67788719?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;DucoG&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DucoG&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-DucoG&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/sbstn87&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37237675?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;sbstn87&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sbstn87&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-sbstn87&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://dev.page/tennox&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2084639?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Manuel&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manuel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-tennox&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/alessandro-newzoo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/47320294?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;alessandro-newzoo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;alessandro-newzoo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-alessandro-newzoo&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/Void-n-Null&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70048414?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Void&amp;amp;Null&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Void&amp;amp;Null&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-Void-n-Null&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/WittyDingo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/63050074?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;WittyDingo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;WittyDingo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-WittyDingo&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/eva-lam&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/29745387?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Eva&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-eva-lam&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/AlexeyLavrentev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/105936590?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;AlexeyLavrentev&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AlexeyLavrentev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/srikanth235/privy/master/#ideas-AlexeyLavrentev&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/linshu123&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2569559?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;linshu123&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;linshu123&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=linshu123&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://unquietwiki.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1007551?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Michael Adams&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Adams&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=unquietwiki&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/issues?q=author%3Aunquietwiki&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;25%&#34;&gt;&lt;a href=&#34;https://github.com/restlessronin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/88921269?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;restlessronin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;restlessronin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/rubberduck-ai/rubberduck-vscode/commits?author=restlessronin&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Code Contributions&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/srikanth235/privy/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://github.com/srikanth235/privy/raw/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/srikanth235/privy/labels/good%20first%20issue&#34;&gt;Good First Issues&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To help you get your feet wet and become familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/srikanth235/privy/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contains things with a relatively limited scope. This is a great place to get started!&lt;/p&gt; &#xA;&lt;!-- Links --&gt;</summary>
  </entry>
  <entry>
    <title>gluestack/gluestack-ui</title>
    <updated>2024-01-21T01:48:17Z</updated>
    <id>tag:github.com,2024-01-21:/gluestack/gluestack-ui</id>
    <link href="https://github.com/gluestack/gluestack-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Universal Themed &amp; Unstyled Components For React Native, Next.js, Expo &amp; React&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gluestack-ui&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/gluestack/gluestack-ui&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gluestack/gluestack-ui/main/img/gluestack-ui-banner.svg?sanitize=true&#34; alt=&#34;gluestack-ui logo&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;/h3&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;gluestack-ui&lt;/strong&gt; is a universal UI library that provides optionally styled and accessible components. These components are designed for easy integration into applications developed with React and React Native.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find detailed documentation for each component, including a list of props and examples, in &lt;a href=&#34;https://gluestack.io/ui/docs&#34;&gt;https://gluestack.io/ui/docs&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic styles:&lt;/strong&gt; Using JavaScript expressions, you can create dynamic styles that change based on the state of your components.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Server-side rendering (SSR) support:&lt;/strong&gt; This allows you to use the same styles on the server and the client, making it easy to implement SSR for your React applications..&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Responsive styling::&lt;/strong&gt; This allows you to easily create responsive styles that adapt to different screen sizes and resolutions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Theme support:&lt;/strong&gt; You can easily define and switch between different themes for your application, allowing for a consistent design across all pages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Frequent updates:&lt;/strong&gt; We are constantly working on improving the library and adding new components. Follow us on GitHub to stay up-to-date on the latest releases and features.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Community support:&lt;/strong&gt; Need help using the library or have a suggestion for a new feature? Join our &lt;a href=&#34;https://discord.com/invite/95qQ84nf6f&#34;&gt;Discord&lt;/a&gt; channel to connect with the community and get support.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing &lt;strong&gt;gluestack-ui&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;To use gluestack-ui components, all you need to install &lt;code&gt;@gluestack-ui/themed&lt;/code&gt; and its dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i @gluestack-ui/themed @gluestack-style/react react-native-svg@13.4.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;p&gt;JavaScript, React, React Native, Styled System&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use the &lt;code&gt;gluestack-ui&lt;/code&gt; in your project, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Wrap your application with the &lt;code&gt;GluestackUIProvider&lt;/code&gt; provided by &lt;strong&gt;@gluestack-ui/themed&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { GluestackUIProvider } from &#39;@gluestack-ui/themed&#39;;&#xA;import { config } from &#39;@gluestack-ui/config&#39;;&#xA;&#xA;// Write this code snippet at the root of your application&#xA;function App({ children }) {&#xA;  return &amp;lt;GluestackUIProvider config={config}&amp;gt;{children}&amp;lt;/GluestackUIProvider&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Now you can use &lt;code&gt;@gluestack-style/react&lt;/code&gt; to style your components by using the &lt;code&gt;styled&lt;/code&gt; function provided by the library. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Button, ButtonText } from &#39;@gluestack-ui/themed&#39;;&#xA;&#xA;const StyledButton = styled(&#xA;  Pressable,&#xA;  {&#xA;    bg: &#39;$red500&#39;,&#xA;    p: &#39;$3&#39;,&#xA;  },&#xA;  {}&#xA;);&#xA;&#xA;const StyledButtonText = styled(Text, {}, {});&#xA;&#xA;export const App = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;Button&amp;gt;&#xA;      &amp;lt;ButtonText&amp;gt;Awesome Button!&amp;lt;/ButtonText&amp;gt;&#xA;    &amp;lt;/Button&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More guides on how to get started are available &lt;a href=&#34;https://gluestack.io/ui/docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the &lt;code&gt;gluestack-ui&lt;/code&gt;. If you have an idea for a new component or a bug fix, please read our &lt;a href=&#34;https://raw.githubusercontent.com/gluestack/gluestack-ui/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; instructions on how to submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License, Copyright © 2023 GeekyAnts. See &lt;a href=&#34;https://github.com/gluestack/gluestack-ui/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>penrose/penrose</title>
    <updated>2024-01-21T01:48:17Z</updated>
    <id>tag:github.com,2024-01-21:/penrose/penrose</id>
    <link href="https://github.com/penrose/penrose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create beautiful diagrams just by typing notation in plain text.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Penrose &lt;a href=&#34;https://www.npmjs.com/package/@penrose/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@penrose/core&#34; alt=&#34;npm (scoped)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/penrose/penrose/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/penrose/penrose&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/penrose/penrose/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/penrose/penrose/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/a7VXJU4dfR&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/a7VXJU4dfR?style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/UsePenrose&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/follow-%40UsePenrose-1DA1F2?logo=twitter&amp;amp;style=social&#34; alt=&#34;Twitter: @UsePenrose&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://penrose.cs.cmu.edu/&#34;&gt;Penrose&lt;/a&gt; is a platform that enables people to &lt;strong&gt;create beautiful diagrams just by typing notation in plain text.&lt;/strong&gt; The goal is to make it easy for non-experts to create and explore high-quality diagrams and provide deeper insight into challenging technical concepts. We aim to democratize the process of creating visual intuition.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://penrose.cs.cmu.edu/try/index.html&#34;&gt;try Penrose in your browser&lt;/a&gt; without any installation. For a more detailed step-by-step introduction, check out our &lt;a href=&#34;https://penrose.cs.cmu.edu/docs/tutorial/welcome&#34;&gt;tutorials&lt;/a&gt;. Or, for more reference-style information, take a look at our &lt;a href=&#34;https://penrose.cs.cmu.edu/docs/ref&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a simple Penrose visualization in the domain of set theory.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/penrose/penrose/main/docs/assets/output.svg?sanitize=true&#34; width=&#34;500&#34;&gt; &#xA;&lt;p&gt;It&#39;s specified by the following trio of Domain, Substance, and Style programs (with variation &lt;code&gt;MonsoonCaterpillar95943&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;setTheory.domain&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;type Set&#xA;&#xA;predicate NotIntersecting(Set s1, Set s2)&#xA;predicate Intersecting(Set s1, Set s2)&#xA;predicate IsSubset(Set s1, Set s2)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;tree.substance&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Set A, B, C, D, E, F, G&#xA;&#xA;IsSubset(B, A)&#xA;IsSubset(C, A)&#xA;IsSubset(D, B)&#xA;IsSubset(E, B)&#xA;IsSubset(F, C)&#xA;IsSubset(G, C)&#xA;&#xA;NotIntersecting(E, D)&#xA;NotIntersecting(F, G)&#xA;NotIntersecting(B, C)&#xA;&#xA;AutoLabel All&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;venn.style&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;canvas {&#xA;  width = 800&#xA;  height = 700&#xA;}&#xA;&#xA;forall Set x {&#xA;  shape x.icon = Circle { }&#xA;  shape x.text = Equation {&#xA;    string : x.label&#xA;    fontSize : &#34;32px&#34;&#xA;  }&#xA;  ensure contains(x.icon, x.text)&#xA;  encourage norm(x.text.center - x.icon.center) == 0&#xA;  layer x.text above x.icon&#xA;}&#xA;&#xA;forall Set x; Set y&#xA;where IsSubset(x, y) {&#xA;  ensure disjoint(y.text, x.icon, 10)&#xA;  ensure contains(y.icon, x.icon, 5)&#xA;  layer x.icon above y.icon&#xA;}&#xA;&#xA;forall Set x; Set y&#xA;where NotIntersecting(x, y) {&#xA;  ensure disjoint(x.icon, y.icon)&#xA;}&#xA;&#xA;forall Set x; Set y&#xA;where Intersecting(x, y) {&#xA;  ensure overlapping(x.icon, y.icon)&#xA;  ensure disjoint(y.text, x.icon)&#xA;  ensure disjoint(x.text, y.icon)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/penrose/penrose/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/penrose/penrose/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>