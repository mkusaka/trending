<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-23T01:45:27Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>resend/react-email</title>
    <updated>2024-01-23T01:45:27Z</updated>
    <id>tag:github.com,2024-01-23:/resend/react-email</id>
    <link href="https://github.com/resend/react-email" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💌 Build and send emails using React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://react.email/static/covers/react-email.png&#34; alt=&#34;React email cover&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;strong&gt;React Email&lt;/strong&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; The next generation of writing emails.&#xA; &lt;br&gt;High-quality, unstyled components for creating emails.&#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://react.email&#34;&gt;Website&lt;/a&gt; &#xA; &lt;span&gt; · &lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/resend/react-email&#34;&gt;GitHub&lt;/a&gt; &#xA; &lt;span&gt; · &lt;/span&gt; &#xA; &lt;a href=&#34;https://react.email/discord&#34;&gt;Discord&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;A collection of high-quality, unstyled components for creating beautiful emails using React and TypeScript. It reduces the pain of coding responsive emails with dark mode support. It also takes care of inconsistencies between Gmail, Outlook, and other email clients for you.&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;We believe that email is an extremely important medium for people to communicate. However, we need to stop developing emails like 2010, and rethink how email can be done in 2022 and beyond. Email development needs a revamp. A renovation. Modernized for the way we build web apps today.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install one of the components from your command line.&lt;/p&gt; &#xA;&lt;h4&gt;With yarn&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @react-email/components -E&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With npm&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @react-email/components -E&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With pnpm&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install @react-email/components -E&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Add the component to your email template. Include styles where needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Button } from &#34;@react-email/components&#34;;&#xA;&#xA;const Email = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;Button href=&#34;https://example.com&#34; style={{ color: &#34;#61dafb&#34; }}&amp;gt;&#xA;      Click me&#xA;    &amp;lt;/Button&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;A set of standard components to help you build amazing emails without having to deal with the mess of creating table-based layouts and maintaining archaic markup.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/html&#34;&gt;Html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/head&#34;&gt;Head&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/heading&#34;&gt;Heading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/button&#34;&gt;Button&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/link&#34;&gt;Link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/img&#34;&gt;Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/hr&#34;&gt;Divider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/text&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/preview&#34;&gt;Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/body&#34;&gt;Body&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/column&#34;&gt;Column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/section&#34;&gt;Section&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/packages/font&#34;&gt;Font&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Emails built with React Email can be converted into HTML and sent using any email service provider. Here are some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/examples/resend&#34;&gt;Resend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/examples/nodemailer&#34;&gt;Nodemailer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/examples/sendgrid&#34;&gt;SendGrid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/examples/postmark&#34;&gt;Postmark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resend/react-email/tree/main/examples/aws-ses&#34;&gt;AWS SES&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;All components were tested using the most popular email clients.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/gmail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Gmail logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/apple-mail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Apple Mail&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/outlook.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Outlook logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/yahoo-mail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Yahoo! Mail logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/hey.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;HEY logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/superhuman.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Superhuman logo&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gmail ✔&lt;/td&gt; &#xA;   &lt;td&gt;Apple Mail ✔&lt;/td&gt; &#xA;   &lt;td&gt;Outlook ✔&lt;/td&gt; &#xA;   &lt;td&gt;Yahoo! Mail ✔&lt;/td&gt; &#xA;   &lt;td&gt;HEY ✔&lt;/td&gt; &#xA;   &lt;td&gt;Superhuman ✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h4&gt;Install dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build and run packages&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will initialize all packages in parallel and watch for changes, including the website which will be available at &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react.email/docs/contributing&#34;&gt;Contribution Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bu Kinoshita (&lt;a href=&#34;https://twitter.com/bukinoshita&#34;&gt;@bukinoshita&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Zeno Rocha (&lt;a href=&#34;https://twitter.com/zenorocha&#34;&gt;@zenorocha&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FuelLabs/swayswap</title>
    <updated>2024-01-23T01:45:27Z</updated>
    <id>tag:github.com,2024-01-23:/FuelLabs/swayswap</id>
    <link href="https://github.com/FuelLabs/swayswap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SwaySwap is a blazingly fast DEX built on the fastest modular execution layer: Fuel.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/FuelLabs/swayswap/actions/workflows/gh-pages.yml&#34;&gt;&lt;img src=&#34;https://github.com/FuelLabs/swayswap/actions/workflows/gh-pages.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xfpK4Pe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on-discord-orange?&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/SwayLang?style=social&#34; alt=&#34;twitter&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;⚠️ Support Notice ⚠️&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;SwaySwap is no longer supported&lt;/strong&gt; and will not function for beta-4 and later versions of fuel-core (&amp;gt;0.17.1). If you would like to contribute updating it, a PR will be welcome.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🌴💰 SwaySwap 💰🌴&lt;/h2&gt; &#xA;&lt;p&gt;SwaySwap is a blazingly fast DEX built on the fastest modular execution layer: &lt;a href=&#34;https://fuel.network/&#34;&gt;Fuel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Built with an entirely new language (&lt;a href=&#34;https://github.com/FuelLabs/sway&#34;&gt;Sway&lt;/a&gt;), virtual machine (&lt;a href=&#34;https://github.com/FuelLabs/fuel-specs&#34;&gt;FuelVM&lt;/a&gt;), and UTXO-based smart contract blockchain (&lt;a href=&#34;https://fuel-labs.ghost.io/introducing-fuel-the-fastest-modular-execution-layer/&#34;&gt;Fuel&lt;/a&gt;), you can now experience a demonstration of the next generation of scaling beyond layer-2s and monolithic blockchain design.&lt;/p&gt; &#xA;&lt;!--&#xA;[![launch app button](docs/assets/launch-button.png)](https://fuellabs.github.io/swayswap)&#xA;&#xA;The above button launches the latest stable version of SwaySwap. To launch the latest unstable version that includes all current changes from the master branch, click [here](https://swayswap.vercel.app/). --&gt; &#xA;&lt;h2&gt;📗 Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/#-swayswap-features&#34;&gt;SwaySwap Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#running-project-locally&#34;&gt;Running Project Locally&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#---getting-the-repository&#34;&gt;📚 - Getting the Repository&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#---install-dependencies&#34;&gt;📦 - Install Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#---run-local-node&#34;&gt;📒 - Run Local Node&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#---run-web-app&#34;&gt;💻 - Run Web App&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#-project-overview&#34;&gt;📗 Project Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#-useful-scripts&#34;&gt;🧰 Useful Scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#running-tests&#34;&gt;Running Tests&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#run-tests-in-development-mode&#34;&gt;Run Tests in Development Mode&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/GETTING_STARTED.md#run-tests-on-a-local-test-environment&#34;&gt;Run Tests on a Local Test Environment&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/CONTRIBUTING.md#finding-something-to-work-on&#34;&gt;Finding Something to Work On&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/CONTRIBUTING.md#contribution-flow&#34;&gt;Contribution Flow&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧰 SwaySwap Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Faucet coins; use the faucet API to send test ETH to your wallet&lt;/li&gt; &#xA; &lt;li&gt;Mint tokens; Use the token contract to mint test DAI to your wallet&lt;/li&gt; &#xA; &lt;li&gt;Create a liquidity pool&lt;/li&gt; &#xA; &lt;li&gt;Swap tokens&lt;/li&gt; &#xA; &lt;li&gt;View current pool positions&lt;/li&gt; &#xA; &lt;li&gt;Add and remove liquidity from a liquidity pool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Add some more space on the top of the gif --&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;preview pages&#34; width=&#34;800&#34; src=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/docs/assets/preview-pages.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The primary license for this repo is &lt;code&gt;Apache-2.0&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/swayswap/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VaalaCat/frp-panel</title>
    <updated>2024-01-23T01:45:27Z</updated>
    <id>tag:github.com,2024-01-23:/VaalaCat/frp-panel</id>
    <link href="https://github.com/VaalaCat/frp-panel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a multi node frp webui and for [frp](https://github.com/fatedier/frp) server and client management, which makes this project a Cloudflare Tunnel or Tailscale Funnel open source alternative&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;详细博客地址: &lt;a href=&#34;https://vaala.cat/2024/01/14/frp-panel-doc/&#34;&gt;https://vaala.cat/2024/01/14/frp-panel-doc/&lt;/a&gt; 使用说明可以看博客，也可以直接滑到最后&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;FRP-Panel&lt;/h1&gt; &#xA;&lt;p&gt;我们的目标就是做一个：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;客户端配置可中心化管理&lt;/li&gt; &#xA; &lt;li&gt;多服务端配置管理&lt;/li&gt; &#xA; &lt;li&gt;可视化配置界面&lt;/li&gt; &#xA; &lt;li&gt;简化运行所需要的配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;的更强更完善的frp！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;demo Video: &lt;a href=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/frp-panel-demo.mp4&#34;&gt;demo Video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/frp-panel-demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目开发指南&lt;/h2&gt; &#xA;&lt;h3&gt;平台架构设计&lt;/h3&gt; &#xA;&lt;p&gt;技术栈选好了，下一步就是要设计程序的架构。在刚刚背景里说的那样，frp本身有frpc和frps（客户端和服务端），这两个角色肯定是必不可少了。然后我们还要新增一个东西去管理它们，所以frp-panel新增了一个master角色。master会负责管理各种frpc和frps，中心化的存储配置文件和连接信息。&lt;/p&gt; &#xA;&lt;p&gt;然后是frpc和frps。原版是需要在两边分别写配置文件的。那么既然原版已经支持了，就不用在走原版的路子，我们直接不支持配置文件，所有的配置都必须从master获取。&lt;/p&gt; &#xA;&lt;p&gt;其次还要考虑到与原版的兼容问题，frp-panel的客户端/服务端都必须要能连上官方frpc/frps服务。这样的话就可以做到配置文件/不要配置文件都能完美工作了。&lt;br&gt; 总的说来架构还是很简单的。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/arch.png&#34; alt=&#34;arch&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;开发&lt;/h3&gt; &#xA;&lt;p&gt;项目包含三个角色&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Master: 控制节点，接受来自前端的请求并负责管理Client和Server&lt;/li&gt; &#xA; &lt;li&gt;Server: 服务端，受控制节点控制，负责对客户端提供服务，包含frps和rpc(用于连接Master)服务&lt;/li&gt; &#xA; &lt;li&gt;Client: 客户端，受控制节点控制，包含frpc和rpc(用于连接Master)服务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;接下来给出一个项目中各个包的功能&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;|-- biz                 # 主要业务逻辑&#xA;|   |-- client          # 客户端逻辑（这里指的是frp-panel的客户端）&#xA;|   |-- master          # frp-panel 控制平面，负责处理前端请求，并且使用rpc管理frp-panel的server和client&#xA;|   |   |-- auth        # 认证模块，包含用户认证和客户端认证&#xA;|   |   |-- client      # 客户端模块，包含前端管理客户端的各种API&#xA;|   |   |-- server      # 服务端模块，包含前端管理服务端的各种API&#xA;|   |   `-- user        # 用户模块，包含用户管理、用户信息获取等&#xA;|   `-- server          # 服务端逻辑（这里指的是frp-panel的服务端）&#xA;|-- cache               # 缓存，用于存储frps的认证token&#xA;|-- cmd                 # 命令行入口，main函数的所在地，负责按需启动各个模块&#xA;|-- common&#xA;|-- conf&#xA;|-- dao                 # data access object，任何和数据库相关的操作会调用这个库&#xA;|-- doc                 # 文档&#xA;|-- idl                 # idl定义&#xA;|-- middleware          # api的中间件，包含JWT和context相关，用于处理api请求，鉴权通过后会把用户信息注入到context，可以通过common包获取&#xA;|-- models              # 数据库模型，用于定义数据库表。同时包含实体定义&#xA;|-- pb                  # protobuf生成的pb文件&#xA;|-- rpc                 # 各种rpc的所在地，包含Client/Server调用Master的逻辑，也包含Master使用Stream调用Client和Server的逻辑&#xA;|-- services            # 各种需要在内存中持久运行的模块，这个包可以管理各个服务的运行/停止&#xA;|   |-- api             # api服务，运行需要外部传入一个ginRouter&#xA;|   |-- client          # frp的客户端，即frpc，可以控制frpc的各种配置/开始与停止&#xA;|   |-- master          # master服务，包含rpc的服务端定义，接收到rpc请求后会调用biz包处理逻辑&#xA;|   |-- rpcclient       # 有状态的rpc客户端，因为rpc的client都没有公网ip，因此在rpc client启动时会调用master的stream长连接rpc，建立连接后Master和Client通过这个包通信&#xA;|   `-- server          # frp的服务端，即frps，可以控制frps的各种配置/开始与停止&#xA;|-- tunnel              # tunnel模块，用于管理tunnel，也就是管理frpc和frps服务&#xA;|-- utils&#xA;|-- watcher             # 定时运行的任务，比如每30秒更新一次配置文件&#xA;`-- www&#xA;    |-- api&#xA;    |-- components # 这里面有一个apitest组件用于测试&#xA;    |   `-- ui&#xA;    |-- lib&#xA;    |   `-- pb&#xA;    |-- pages&#xA;    |-- public&#xA;    |-- store&#xA;    |-- styles&#xA;    `-- types&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;调试启动方式：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master: &lt;code&gt;go run cmd/*.go master&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;client 和 server 的具体参数请复制 master webui 中的内容&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;client: &lt;code&gt;go run cmd/*.go client -i &amp;lt;clientID&amp;gt; -s &amp;lt;clientSecret&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;server: &lt;code&gt;go run cmd/*.go server -i &amp;lt;serverID&amp;gt; -s &amp;lt;serverSecret&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;项目配置文件会默认读取当前文件夹下的.env文件，项目内置了样例配置文件，可以按照自己的需求进行修改&lt;/p&gt; &#xA;&lt;p&gt;详细架构调用图&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/callvis.svg?sanitize=true&#34; alt=&#34;structure&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目使用说明&lt;/h2&gt; &#xA;&lt;p&gt;frp-panel可选docker和直接运行模式部署，直接部署请到release下载文件：&lt;a href=&#34;https://github.com/VaalaCat/frp-panel/releases&#34;&gt;release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;启动过后默认访问地址为 &lt;a href=&#34;http://IP:9000&#34;&gt;http://IP:9000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;docker&lt;/h3&gt; &#xA;&lt;p&gt;注意⚠️：client 和 server 的启动指令可能会随着项目更新而改变，虽然在项目迭代时会注意前后兼容，但仍难以完全适配，因此 client 和 server 的启动指令以 master 生成为准&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 9000:9000 \&#xA;&#x9;-p 9001:9001 \&#xA;    --restart=unless-stopped \&#xA;&#x9;-v /opt/frp-panel:/data \&#xA;&#x9;-e APP_GLOBAL_SECRET=your_secret \ # Master的secret注意不要泄漏，客户端和服务端的是通过Master生成的&#xA;&#x9;-e MASTER_RPC_HOST=0.0.0.0 \&#xA;&#x9;vaalacat/frp-panel&#xA;# 或者&#xA;docker run -d \&#xA;&#x9;--network=host \&#xA;    --restart=unless-stopped \&#xA;&#x9;-v /opt/frp-panel:/data \&#xA;&#x9;-e APP_GLOBAL_SECRET=your_secret \ # Master的secret注意不要泄漏，客户端和服务端的是通过Master生成的&#xA;&#x9;-e MASTER_RPC_HOST=0.0.0.0 \&#xA;&#x9;vaalacat/frp-panel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;&#x9;--network=host \&#xA;    --restart=unless-stopped \&#xA;&#x9;vaalacat/frp-panel client -s xxx -i xxx # 在master WebUI复制的参数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;&#x9;--network=host \&#xA;    --restart=unless-stopped \&#xA;&#x9;vaalacat/frp-panel server -s xxx -i xxx # 在master WebUI复制的参数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;直接运行(Linux)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;APP_GLOBAL_SECRET=your_secret MASTER_RPC_HOST=0.0.0.0 frp-panel master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;frp-panel client -s xxx -i xxx # 在master WebUI复制的参数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;frp-panel server -s xxx -i xxx # 在master WebUI复制的参数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;直接运行(Windows)&lt;/h3&gt; &#xA;&lt;p&gt;在下载的可执行文件同名文件夹下创建一个 &lt;code&gt;.env&lt;/code&gt; 文件(注意不要有后缀名)，然后输入以下内容保存后运行对应命令，注意，client和server的对应参数需要在web页面复制&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;master: &lt;code&gt;frp-panel-amd64.exe master&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;APP_GLOBAL_SECRET=your_secret&#xA;MASTER_RPC_HOST=IP&#xA;DB_DSN=data.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;client 和 server 要使用在 master WebUI复制的参数&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;client: &lt;code&gt;frp-panel-amd64.exe client -s xxx -i xxx&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;server: &lt;code&gt;frp-panel-amd64.exe server -s xxx -i xxx&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置说明&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/conf/settings.go&#34;&gt;settings.go&lt;/a&gt; 这里有详细的配置参数解释，需要进一步修改配置请参考该文件&lt;/p&gt; &#xA;&lt;h3&gt;一些图片&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/platform_info.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/login.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/register.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/clients_menu.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/server_menu.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/create_client.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/create_server.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/edit_client.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/edit_client_adv.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/edit_server.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/VaalaCat/frp-panel/main/doc/edit_server_adv.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>