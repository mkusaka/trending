<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-08T01:43:34Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>leerob/nextjs-postgres-email-client</title>
    <updated>2023-11-08T01:43:34Z</updated>
    <id>tag:github.com,2023-11-08:/leerob/nextjs-postgres-email-client</id>
    <link href="https://github.com/leerob/nextjs-postgres-email-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An email client built with the Next.js App Router and Postgres as the database.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js Email Client&lt;/h1&gt; &#xA;&lt;p&gt;This is a simple email client built with Next.js and Postgres. It&#39;s built to show off some of the features of the App Router, which enable you to build products that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate between routes in a column layout while maintaining scroll position (layouts support)&lt;/li&gt; &#xA; &lt;li&gt;Submit forms without JavaScript enabled (progressive enhancement)&lt;/li&gt; &#xA; &lt;li&gt;Navigate between routes extremely fast (prefetching and caching)&lt;/li&gt; &#xA; &lt;li&gt;Retain your UI position on reload (URL state)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The first version of the UI was built with &lt;a href=&#34;https://v0.dev/t/RPsRRQilTDp&#34;&gt;v0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img width=&#34;1343&#34; alt=&#34;CleanShot 2023-11-04 at 21 09 49@2x&#34; src=&#34;https://github.com/leerob/leerob.io/assets/9113740/1e33ad53-832f-410e-a4d6-7bd40f666aa8&#34;&gt; &#xA;&lt;h2&gt;Tech&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/docs/storage/vercel-postgres&#34;&gt;Vercel Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-spectrum.adobe.com/react-aria/index.html&#34;&gt;React Aria Components&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Forward / reply / search aren&#39;t hooked up yet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Need to add a way to manage folders&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Need to add a way to manage users&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix to/from to pull sender/recipient everywhere&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Error handling for form submissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add search&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Schema&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;CREATE TABLE users (&#xA;    id SERIAL PRIMARY KEY,&#xA;    first_name VARCHAR(50),&#xA;    last_name VARCHAR(50),&#xA;    email VARCHAR(255) UNIQUE NOT NULL&#xA;);&#xA;&#xA;CREATE TABLE emails (&#xA;    id SERIAL PRIMARY KEY,&#xA;    sender_id INTEGER REFERENCES users(id),&#xA;    recipient_id INTEGER REFERENCES users(id),&#xA;    subject VARCHAR(255),&#xA;    body TEXT,&#xA;    sent_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP&#xA;);&#xA;&#xA;CREATE TABLE folders (&#xA;    id SERIAL PRIMARY KEY,&#xA;    name VARCHAR(50) NOT NULL&#xA;);&#xA;&#xA;CREATE TABLE user_folders (&#xA;    id SERIAL PRIMARY KEY,&#xA;    user_id INTEGER REFERENCES users(id),&#xA;    folder_id INTEGER REFERENCES folders(id)&#xA;);&#xA;&#xA;CREATE TABLE email_folders (&#xA;    id SERIAL PRIMARY KEY,&#xA;    email_id INTEGER REFERENCES emails(id),&#xA;    folder_id INTEGER REFERENCES folders(id)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Data&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;INSERT INTO users (first_name, last_name, email)&#xA;VALUES (&#39;John&#39;, &#39;Doe&#39;, &#39;john.doe@example.com&#39;),&#xA;       (&#39;Jane&#39;, &#39;Doe&#39;, &#39;jane.doe@example.com&#39;),&#xA;       (&#39;Alice&#39;, &#39;Smith&#39;, &#39;alice.smith@example.com&#39;),&#xA;       (&#39;Bob&#39;, &#39;Johnson&#39;, &#39;bob.johnson@example.com&#39;);&#xA;&#xA;INSERT INTO emails (sender_id, recipient_id, subject, body, sent_date)&#xA;VALUES (1, 2, &#39;Meeting Reminder&#39;, &#39;Don&#39;&#39;t forget about our meeting tomorrow at 10am.&#39;, &#39;2022-01-10 09:00:00&#39;),&#xA;       (1, 3, &#39;Hello&#39;, &#39;Just wanted to say hello.&#39;, &#39;2022-01-09 08:00:00&#39;),&#xA;       (2, 1, &#39;Re: Meeting Reminder&#39;, &#39;I won&#39;&#39;t be able to make it.&#39;, &#39;2022-01-10 10:00:00&#39;),&#xA;       (3, 1, &#39;Re: Hello&#39;, &#39;Hello to you too!&#39;, &#39;2022-01-09 09:00:00&#39;),&#xA;       (4, 1, &#39;Invitation&#39;, &#39;You are invited to my party.&#39;, &#39;2022-01-11 07:00:00&#39;),&#xA;       (1, 2, &#39;Work Project&#39;, &#39;Let&#39;&#39;s discuss the new work project.&#39;, &#39;2022-01-12 07:00:00&#39;),&#xA;       (1, 4, &#39;Expenses Report&#39;, &#39;Please find the expenses report attached.&#39;, &#39;2022-01-13 07:00:00&#39;),&#xA;       (4, 1, &#39;Personal Note&#39;, &#39;Let&#39;&#39;s catch up sometime.&#39;, &#39;2022-01-14 07:00:00&#39;);&#xA;&#xA;INSERT INTO folders (name)&#xA;VALUES (&#39;Inbox&#39;),&#xA;       (&#39;Flagged&#39;),&#xA;       (&#39;Sent&#39;),&#xA;       (&#39;Work&#39;),&#xA;       (&#39;Expenses&#39;),&#xA;       (&#39;Personal&#39;);&#xA;&#xA;INSERT INTO user_folders (user_id, folder_id)&#xA;VALUES (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6),&#xA;       (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6),&#xA;       (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6),&#xA;       (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6);&#xA;&#xA;INSERT INTO email_folders (email_id, folder_id)&#xA;VALUES (1, 1),&#xA;       (2, 1),&#xA;       (3, 3),&#xA;       (4, 1),&#xA;       (5, 1),&#xA;       (6, 4),&#xA;       (7, 5),&#xA;       (8, 6);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Database Relationships&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Users can send and receive emails (users.id -&amp;gt; emails.sender_id and emails.recipient_id)&lt;/li&gt; &#xA; &lt;li&gt;Users can have multiple folders (users.id -&amp;gt; user_folders.user_id)&lt;/li&gt; &#xA; &lt;li&gt;Folders can contain multiple emails (folders.id -&amp;gt; email_folders.folder_id)&lt;/li&gt; &#xA; &lt;li&gt;An email can be in multiple folders (emails.id -&amp;gt; email_folders.email_id)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>