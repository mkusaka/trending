<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-19T01:37:00Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>marp-team/marp-cli</title>
    <updated>2025-06-19T01:37:00Z</updated>
    <id>tag:github.com,2025-06-19:/marp-team/marp-cli</id>
    <link href="https://github.com/marp-team/marp-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A CLI interface for Marp and Marpit based converters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@marp-team/marp-cli&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/marp-team/marp-cli/&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/marp-team/marp-cli/main.svg?style=flat-square&amp;amp;logo=circleci&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/marp-team/marp-cli/actions?query=workflow%3A%22Test+for+Windows%22+branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/marp-team/marp-cli/test-win.yml?branch=main&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/marp-team/marp-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/marp-team/marp-cli/main.svg?style=flat-square&amp;amp;logo=codecov&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@marp-team/marp-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@marp-team/marp-cli.svg?style=flat-square&amp;amp;logo=npm&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/marpteam/marp-cli/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/marpteam/marp-cli.svg?logo=docker&amp;amp;style=flat-square&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/marp-team/marp-cli.svg?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A CLI interface, for &lt;a href=&#34;https://github.com/marp-team/marp&#34;&gt;Marp&lt;/a&gt;&lt;/strong&gt; (using &lt;a href=&#34;https://github.com/marp-team/marp-core&#34;&gt;@marp-team/marp-core&lt;/a&gt;) and any slide deck converter based on &lt;a href=&#34;https://marpit.marp.app/&#34;&gt;Marpit&lt;/a&gt; framework.&lt;/p&gt; &#xA;&lt;p&gt;It can convert Marp / Marpit Markdown files into static HTML / CSS, PDF, PowerPoint document, and image(s) easily.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/images/marp-cli.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Try it now!&lt;/h2&gt; &#xA;&lt;h3&gt;npx&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.npmjs.com/cli/commands/npx&#34;&gt;npx (&lt;code&gt;npm exec&lt;/code&gt;)&lt;/a&gt; is the best way to use the latest Marp CLI if you wanted one-shot Markdown conversion &lt;em&gt;without install&lt;/em&gt;. Just run below if you have installed &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; v18 and later.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Convert slide deck into HTML&#xA;npx @marp-team/marp-cli@latest slide-deck.md&#xA;npx @marp-team/marp-cli@latest slide-deck.md -o output.html&#xA;&#xA;# Convert slide deck into PDF&#xA;npx @marp-team/marp-cli@latest slide-deck.md --pdf&#xA;npx @marp-team/marp-cli@latest slide-deck.md -o output.pdf&#xA;&#xA;# Convert slide deck into PowerPoint document (PPTX)&#xA;npx @marp-team/marp-cli@latest slide-deck.md --pptx&#xA;npx @marp-team/marp-cli@latest slide-deck.md -o output.pptx&#xA;&#xA;# Watch mode&#xA;npx @marp-team/marp-cli@latest -w slide-deck.md&#xA;&#xA;# Server mode (Pass directory to serve)&#xA;npx @marp-team/marp-cli@latest -s ./slides&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] You have to install any one of &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/edge&#34;&gt;Microsoft Edge&lt;/a&gt;, or &lt;a href=&#34;https://www.mozilla.org/firefox/new/&#34;&gt;Mozilla Firefox&lt;/a&gt; to convert slide deck into PDF, PPTX, and image(s).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Container image&lt;/h3&gt; &#xA;&lt;p&gt;Don&#39;t you like installing Node.js and Chrome to local? We have an official container image that is ready to use CLI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/marpteam/marp-cli/&#34;&gt;&lt;strong&gt;‚è© Please refer how to use at Docker Hub.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://hub.docker.com/r/marpteam/marp-cli/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull marpteam/marp-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/marp-team/marp-cli/pkgs/container/marp-cli&#34;&gt;GitHub Container Registry&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull ghcr.io/marp-team/marp-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Use package manager&lt;/h3&gt; &#xA;&lt;p&gt;You can use the package manager to install and update Marp CLI easily.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer: Package manifests are maintained by the community, not Marp team.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;!-- For contributors: This section describes only package managers that Marp manifest has been actively maintained. Each tools are following update within a few days of the latest CLI update. --&gt; &#xA;&lt;h4&gt;macOS: &lt;strong&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install marp-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- https://github.com/Homebrew/homebrew-core/blob/master/Formula/m/marp-cli.rb --&gt; &#xA;&lt;h4&gt;Windows: &lt;strong&gt;&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;scoop install marp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- https://github.com/ScoopInstaller/Main/blob/master/bucket/marp.json --&gt; &#xA;&lt;h3&gt;Local installation&lt;/h3&gt; &#xA;&lt;p&gt;We recommend to install Marp CLI into your Node.js project. You may control the CLI version (and engine if you want) exactly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev @marp-team/marp-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installed &lt;code&gt;marp&lt;/code&gt; command is available in &lt;a href=&#34;https://docs.npmjs.com/misc/scripts&#34;&gt;npm-scripts&lt;/a&gt; or &lt;code&gt;npx marp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Marp CLI is working only with &lt;a href=&#34;https://endoflife.date/nodejs&#34;&gt;actively supported Node.js versions&lt;/a&gt;, so Node.js v18 and later is required when installing into your Node.js project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Global installation&lt;/h4&gt; &#xA;&lt;p&gt;You can install with &lt;code&gt;-g&lt;/code&gt; option if you want to use &lt;code&gt;marp&lt;/code&gt; command globally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @marp-team/marp-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/marp-team/marp-cli/releases&#34;&gt;Standalone binary&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We also provide standalone binaries for Linux, macOS (Apple Silicon), and Windows. These have bundled Marp CLI with Node.js binary, so no need to install Node.js separately.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/marp-team/marp-cli/releases&#34;&gt;‚è© Download the latest standalone binary from release page.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] Several kind of conversions with üåê icon require to install any of compatible browsers, &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;Google Chrome&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/edge&#34;&gt;Microsoft Edge&lt;/a&gt;, or &lt;a href=&#34;https://www.mozilla.org/firefox/new/&#34;&gt;Mozilla Firefox&lt;/a&gt;. When an unexpected problem has occurred while converting, please update your browser to the latest version. Check out &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#browser-options&#34;&gt;browser options&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Convert to HTML&lt;/h3&gt; &#xA;&lt;p&gt;The passed markdown will be converted to HTML file by default. In the below example, a converted &lt;code&gt;slide-deck.html&lt;/code&gt; will output to the same directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can change the output path by &lt;code&gt;--output&lt;/code&gt; (&lt;code&gt;-o&lt;/code&gt;) option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp slide-deck.md -o output.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Marp CLI supports converting multiple files by passing multiple paths, directories, and glob patterns. In this case, &lt;code&gt;--output&lt;/code&gt; option cannot use.&lt;/p&gt; &#xA;&lt;p&gt;When you want to output the converted result to another directory with keeping the origin directory structure, you can use &lt;code&gt;--input-dir&lt;/code&gt; (&lt;code&gt;-I&lt;/code&gt;) option. &lt;code&gt;--output&lt;/code&gt; option would be available for specify the output directory.&lt;/p&gt; &#xA;&lt;h3&gt;Convert to PDF (&lt;code&gt;--pdf&lt;/code&gt;) üåê&lt;/h3&gt; &#xA;&lt;p&gt;If you passed &lt;code&gt;--pdf&lt;/code&gt; option or the output filename specified by &lt;code&gt;--output&lt;/code&gt; (&lt;code&gt;-o&lt;/code&gt;) option ends with &lt;code&gt;.pdf&lt;/code&gt;, Marp CLI will try to convert Markdown into PDF file through the browser.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --pdf slide-deck.md&#xA;marp slide-deck.md -o converted.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;PDF output options&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;--pdf-notes&lt;/code&gt;&lt;/strong&gt;: Add PDF note annotations to the lower left when the slide page has &lt;a href=&#34;https://marpit.marp.app/usage?id=presenter-notes&#34;&gt;Marpit presenter notes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;--pdf-outlines&lt;/code&gt;&lt;/strong&gt;: Add PDF outlines/bookmarks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;--pdf-outlines&lt;/code&gt; will make outlines based on slide pages and Markdown headings by default. If necessary, you may prevent making outlines from one of them, by setting &lt;code&gt;--pdf-outlines.pages=false&lt;/code&gt; or &lt;code&gt;--pdf-outlines.headings=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/images/pdf-output-options.png&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Convert to PowerPoint document (&lt;code&gt;--pptx&lt;/code&gt;) üåê&lt;/h3&gt; &#xA;&lt;p&gt;Do you want more familiar way to present and share your deck? PPTX conversion to create PowerPoint document is available by passing &lt;code&gt;--pptx&lt;/code&gt; option or specify the output path with PPTX extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --pptx slide-deck.md&#xA;marp slide-deck.md -o converted.pptx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A created PPTX includes rendered Marp slide pages and the support of &lt;a href=&#34;https://marpit.marp.app/usage?id=presenter-notes&#34;&gt;Marpit presenter notes&lt;/a&gt;. It can open with PowerPoint, Keynote, Google Slides, LibreOffice Impress, and so on...&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/images/pptx.png&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;&lt;em&gt;[EXPERIMENTAL]&lt;/em&gt; Generate editable pptx (&lt;code&gt;--pptx-editable&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;A converted PPTX usually consists of pre-rendered background images, that is meaning &lt;strong&gt;contents cannot to modify or re-use&lt;/strong&gt; in PowerPoint. If you want to generate editable PPTX for modifying texts, shapes, and images in GUI, you can pass &lt;code&gt;--pptx-editable&lt;/code&gt; option together with &lt;code&gt;--pptx&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --pptx --pptx-editable slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;The experimental &lt;code&gt;--pptx-editable&lt;/code&gt; option requires installing both of the browser and &lt;a href=&#34;https://www.libreoffice.org/&#34;&gt;LibreOffice Impress&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;If the theme and inline styles are providing complex styles into the slide, &lt;strong&gt;&lt;code&gt;--pptx-editable&lt;/code&gt; may throw an error or output the incomplete result.&lt;/strong&gt; (e.g. &lt;code&gt;gaia&lt;/code&gt; theme in Marp Core)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;Conversion to the editable PPTX results in &lt;strong&gt;lower slide reproducibility compared to the conversion into regular PPTX and other formats.&lt;/strong&gt; Additionally, &lt;strong&gt;presenter notes are not supported.&lt;/strong&gt; &lt;em&gt;We do not recommend to export the editable PPTX if maintaining the slide&#39;s appearance is important.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Convert to PNG/JPEG image(s) üåê&lt;/h3&gt; &#xA;&lt;h4&gt;Multiple images (&lt;code&gt;--images&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;You can convert the slide deck into multiple images when specified &lt;code&gt;--images [png|jpeg]&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Convert into multiple PNG image files&#xA;marp --images png slide-deck.md&#xA;&#xA;# Convert into multiple JPEG image files&#xA;marp --images jpeg slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output files have a suffix of page number, like &lt;code&gt;slide-deck.001.png&lt;/code&gt;, &lt;code&gt;slide-deck.002.png&lt;/code&gt;, and so on.&lt;/p&gt; &#xA;&lt;h4&gt;Title slide (&lt;code&gt;--image&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;When you passed &lt;code&gt;--image&lt;/code&gt; option or specified the output path with PNG/JPEG extension, Marp CLI will convert &lt;em&gt;only the first page (title slide)&lt;/em&gt; of the targeted slide deck into an image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Convert the title slide into an image&#xA;marp --image png slide-deck.md&#xA;marp slide-deck.md -o output.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It would be useful for creating &lt;a href=&#34;http://ogp.me/&#34;&gt;Open Graph&lt;/a&gt; image that can specify with &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#metadata&#34;&gt;&lt;code&gt;image&lt;/code&gt; global directive and &lt;code&gt;--og-image&lt;/code&gt; option&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Scale factor&lt;/h4&gt; &#xA;&lt;p&gt;You can set the scale factor for rendered image(s) through &lt;code&gt;--image-scale&lt;/code&gt; option. It is useful for making high-resolution image from the slide.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Generate high-resolution image of the title slide&#xA;marp slide-deck.md -o title-slide@2x.png --image-scale 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;--image-scale&lt;/code&gt; is not affect to the actual size of presentation.&lt;/p&gt; &#xA; &lt;p&gt;The scale factor is also available for PPTX conversion. By default, Marp CLI will use &lt;code&gt;2&lt;/code&gt; as the default scale factor in PPTX, to suppress deterioration of slide rendering in full-screen presentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Export presenter notes (&lt;code&gt;--notes&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;You can export &lt;a href=&#34;https://marpit.marp.app/usage?id=presenter-notes&#34;&gt;presenter notes&lt;/a&gt; in Marp / Marpit Markdown as a text file by using &lt;code&gt;--notes&lt;/code&gt; option or specifying the output path with TXT extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Export presenter notes as a text&#xA;marp --notes slide-deck.md&#xA;marp slide-deck.md -o output.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Security about local files&lt;/h3&gt; &#xA;&lt;p&gt;Because of &lt;a href=&#34;https://github.com/marp-team/marp-cli/pull/10#user-content-security&#34;&gt;the security reason&lt;/a&gt;, &lt;strong&gt;conversion that is using the browser cannot use local files by default.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Marp CLI would output incomplete result with warning if the blocked local file accessing is detected. We recommend uploading your assets to online.&lt;/p&gt; &#xA;&lt;p&gt;If you really need to use local files in these conversion, &lt;code&gt;--allow-local-files&lt;/code&gt; option helps to find your local files. &lt;em&gt;Please use only to the trusted Markdown because there is a potential security risk.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --pdf --allow-local-files slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Conversion modes&lt;/h2&gt; &#xA;&lt;h3&gt;Parallelism&lt;/h3&gt; &#xA;&lt;p&gt;When converting multiple files, Marp CLI will process them in parallel with 5 concurrency by default. You can set the number of concurrency by &lt;code&gt;--parallel&lt;/code&gt; (&lt;code&gt;-P&lt;/code&gt;) option, or disable parallelism by &lt;code&gt;--no-parallel&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Watch mode (&lt;code&gt;--watch&lt;/code&gt; / &lt;code&gt;-w&lt;/code&gt;) &lt;a name=&#34;watch-mode&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Marp CLI will observe a change of Markdown and using theme CSS when passed with &lt;code&gt;--watch&lt;/code&gt; (&lt;code&gt;-w&lt;/code&gt;) option. The conversion will be triggered whenever the content of file is updated.&lt;/p&gt; &#xA;&lt;p&gt;While you are opening the converted HTML in browser, it would refresh the opened page automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Server mode (&lt;code&gt;--server&lt;/code&gt; / &lt;code&gt;-s&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Server mode supports on-demand conversion by HTTP request. We require to pass &lt;code&gt;--server&lt;/code&gt; (&lt;code&gt;-s&lt;/code&gt;) option and a directory to serve.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/images/server-mode.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;In this mode, the converted file outputs as the result of accessing to server, and not to disk.&lt;/p&gt; &#xA;&lt;p&gt;You would get the converted PDF, PPTX, PNG, JPEG, and TXT by adding corresponded query string when requesting. e.g. &lt;code&gt;http://localhost:8080/deck-a.md?pdf&lt;/code&gt; returns converted PDF.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;You can set the server port by setting the environment variable &lt;code&gt;PORT&lt;/code&gt;. For example, &lt;code&gt;PORT=5000 marp -s ./slides&lt;/code&gt; would listen on port number 5000.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;&lt;code&gt;index.md&lt;/code&gt; / &lt;code&gt;PITCHME.md&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Marp CLI server will provide the list of served files by default, but you can place the default Markdown deck like a common web server&#39;s &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Place Markdown named &lt;code&gt;index.md&lt;/code&gt; or &lt;code&gt;PITCHME.md&lt;/code&gt; (&lt;a href=&#34;https://gitpitch.github.io/gitpitch/#/conventions/pitchme-md&#34;&gt;GitPitch style&lt;/a&gt;) to served directory. It would be redirected just accessing to &lt;code&gt;http://localhost:8080/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Preview window (&lt;code&gt;--preview&lt;/code&gt; / &lt;code&gt;-p&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;When conversions were executed together with &lt;code&gt;--preview&lt;/code&gt; (&lt;code&gt;-p&lt;/code&gt;) option, Marp CLI will open preview window(s) to check the converted result immediately.&lt;/p&gt; &#xA;&lt;p&gt;Unlike opening with browser, you may present deck with the immersive window. &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#watch-mode&#34;&gt;Watch mode&lt;/a&gt; is automatically enabled while using preview window.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;--preview&lt;/code&gt; option cannot use when you are using Marp CLI through official Docker image.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Browser options&lt;/h2&gt; &#xA;&lt;h3&gt;Choose browser (&lt;code&gt;--browser&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;You can specify the kind of browser for conversion by &lt;code&gt;--browser&lt;/code&gt; option. Available browsers are &lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;edge&lt;/code&gt;, and &lt;code&gt;firefox&lt;/code&gt;. If set comma-separated browsers, Marp CLI will try to use the first available browser among them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Use Firefox for image conversion&#xA;marp --browser firefox ./slide.md -o slide.png&#xA;&#xA;# Prefer to use Firefox first, then Chrome&#xA;marp --browser firefox,chrome ./slide.md -o slide.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default is a special value &lt;code&gt;auto&lt;/code&gt;, which means to use the first available browser from &lt;code&gt;chrome,edge,firefox&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Firefox support is still early stage.&lt;/em&gt; The PDF output generated by Firefox may include some incompatible renderings compared to the PDF generated by Chrome.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Browser path (&lt;code&gt;--browser-path&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;If you have a browser binary that cannot find out by Marp CLI automatically, you can explicitly set the path to the browser executable through &lt;code&gt;--browser-path&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Use Chromium-flavored browser (Chromium, Brave, Vivaldi, etc...)&#xA;marp --browser-path /path/to/chromium-flavored-browser ./slide.md -o slide.pdf&#xA;&#xA;# Use Firefox with explicitly set path&#xA;marp --browser firefox --browser-path /path/to/firefox ./slide.md -o slide.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other browser options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;--browser-protocol&lt;/code&gt;&lt;/strong&gt;: Set the preferred protocol for connecting to the browser. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cdp&lt;/code&gt;: &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;Chrome DevTools Protocol&lt;/a&gt; (default)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;webdriver-bidi&lt;/code&gt;: &lt;a href=&#34;https://w3c.github.io/webdriver-bidi/&#34;&gt;WebDriver BiDi&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;--browser-timeout&lt;/code&gt;&lt;/strong&gt;: Set the timeout for each browser operation in seconds. (default: &lt;code&gt;30&lt;/code&gt; seconds)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Template&lt;/h2&gt; &#xA;&lt;p&gt;You can choose a built-in HTML templates by &lt;code&gt;--template&lt;/code&gt; option. Default template is &lt;code&gt;bespoke&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --template bespoke slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;bespoke&lt;/code&gt; template (default)&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;bespoke&lt;/code&gt; template is using &lt;a href=&#34;https://github.com/bespokejs/bespoke&#34;&gt;Bespoke.js&lt;/a&gt; as the name implies. It has several features to be useful in a real presentation. A few features may control by CLI options.&lt;/p&gt; &#xA;&lt;h4&gt;Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Navigation&lt;/strong&gt;: Navigate the deck through keyboard and swipe geasture.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fullscreen&lt;/strong&gt;: Toggle fullscreen by hitting &lt;kbd&gt;f&lt;/kbd&gt; / &lt;kbd&gt;F11&lt;/kbd&gt; key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;On-screen controller&lt;/strong&gt;: There is a touch-friendly OSC. You may also disable by &lt;code&gt;--bespoke.osc=false&lt;/code&gt; if unnecessary.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fragmented list&lt;/strong&gt;: Recognize &lt;a href=&#34;https://github.com/marp-team/marpit/issues/145&#34;&gt;Marpit&#39;s fragmented list&lt;/a&gt; and appear list one-by-one if used &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;1)&lt;/code&gt; as the bullet marker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Presenter view&lt;/strong&gt;: Open presenter view in external window by hitting &lt;kbd&gt;p&lt;/kbd&gt; key. (It may become disabled when not fulfilled requirements for working)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Progress bar&lt;/strong&gt; (optional): By setting &lt;code&gt;--bespoke.progress&lt;/code&gt; option, you can add a progress bar on the top of the deck.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/bespoke-transitions/README.md&#34;&gt;&lt;strong&gt;Slide transitions&lt;/strong&gt;&lt;/a&gt;: Support transitions (&lt;code&gt;transition&lt;/code&gt; local directive) powered by &lt;a href=&#34;https://www.w3.org/TR/css-view-transitions-1/&#34;&gt;View Transition API&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docs&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/bespoke-transitions/README.md&#34;&gt;Slide transitions in &lt;code&gt;bespoke&lt;/code&gt; template&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; Learn all about of slide transitions for &lt;code&gt;bespoke&lt;/code&gt; template: Built-in transitions, custom transitions, and morphing animations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/bespoke-transitions/README.md&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/bespoke-transitions/images/morphing-animation.gif&#34; width=&#34;320&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;bare&lt;/code&gt; template&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;bare&lt;/code&gt; template is a primitive template, and there is no extra features. It only has minimum assets to give your presentation with browser.&lt;/p&gt; &#xA;&lt;h4&gt;Zero-JS slide deck&lt;/h4&gt; &#xA;&lt;p&gt;When &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#use-marpit-framework&#34;&gt;the conversion engine is changed to Marpit framework by setting &lt;code&gt;engine&lt;/code&gt; option&lt;/a&gt;, &lt;em&gt;it would not use any scripts.&lt;/em&gt; Even then, it has enough to use for the browser-based presentation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --template bare --engine @marp-team/marpit slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Metadata&lt;/h2&gt; &#xA;&lt;p&gt;Through &lt;a href=&#34;https://marpit.marp.app/directives?id=global-directives-1&#34;&gt;global directives&lt;/a&gt; or CLI options, you can set metadata for a converted HTML, PDF, and PPTX slide deck.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://marpit.marp.app/directives?id=global-directives-1&#34;&gt;Global directives&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CLI option&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Available in&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define title of the slide deck&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML, PDF, PPTX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--description&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define description of the slide&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML, PDF, PPTX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;author&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--author&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define author of the slide deck&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML, PDF, PPTX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;keywords&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--keywords&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define comma-separated keywords&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML, PDF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define &lt;a href=&#34;https://en.wikipedia.org/wiki/Canonical_link_element&#34;&gt;canonical URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--og-image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define &lt;a href=&#34;http://ogp.me/&#34;&gt;Open Graph&lt;/a&gt; image URL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;HTML&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When a title was not defined, Marp CLI may assign the title from the first heading of Markdown automatically. If not wanted this detection, specify the title as empty string &lt;code&gt;&#34;&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;By &lt;a href=&#34;https://marpit.marp.app/directives?id=global-directives-1&#34;&gt;global directives&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Marp CLI supports &lt;em&gt;additional &lt;a href=&#34;https://marpit.marp.app/directives?id=global-directives-1&#34;&gt;global directives&lt;/a&gt;&lt;/em&gt; to specify metadata in Markdown. You can define meta values in Markdown front-matter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---&#xA;title: Marp slide deck&#xA;description: An example slide deck created by Marp CLI&#xA;author: Yuki Hattori&#xA;keywords: marp,marp-cli,slide&#xA;url: https://marp.app/&#xA;image: https://marp.app/og-image.jpg&#xA;---&#xA;&#xA;# Marp slide deck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;By CLI option&lt;/h3&gt; &#xA;&lt;p&gt;Marp CLI prefers CLI option to global directives. You can override metadata values by &lt;code&gt;--title&lt;/code&gt;, &lt;code&gt;--description&lt;/code&gt;, &lt;code&gt;--author&lt;/code&gt;, &lt;code&gt;--keywords&lt;/code&gt;, &lt;code&gt;--url&lt;/code&gt;, and &lt;code&gt;--og-image&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Theme&lt;/h2&gt; &#xA;&lt;h3&gt;Override theme&lt;/h3&gt; &#xA;&lt;p&gt;You can override theme you want to use by &lt;code&gt;--theme&lt;/code&gt; option. For example to use &lt;a href=&#34;https://github.com/marp-team/marp-core/tree/main/themes#gaia&#34;&gt;Gaia&lt;/a&gt; built-in theme in Marp Core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --theme gaia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use custom theme&lt;/h3&gt; &#xA;&lt;p&gt;A custom theme created by user also can use easily by passing the path of CSS file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marp --theme custom-theme.css&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://marpit.marp.app/theme-css?id=metadata&#34;&gt;Marpit theme CSS requires &lt;code&gt;@theme&lt;/code&gt; meta comment&lt;/a&gt; in regular use, but it&#39;s not required in this usage.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Theme set&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;--theme-set&lt;/code&gt; option has to specify theme set composed by multiple theme CSS files. The registered themes are usable in &lt;a href=&#34;https://marpit.marp.app/directives?id=theme&#34;&gt;Marpit&#39;s &lt;code&gt;theme&lt;/code&gt; directive&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Multiple theme CSS files&#xA;marp --theme-set theme-a.css theme-b.css theme-c.css -- deck-a.md deck-b.md&#xA;&#xA;# Theme directory&#xA;marp --theme-set ./themes -- deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Engine&lt;/h2&gt; &#xA;&lt;p&gt;Marp CLI is calling the &lt;a href=&#34;https://marpit.marp.app/&#34;&gt;Marpit framework&lt;/a&gt; based converter as &#34;Engine&#34;. Normally we use the bundled &lt;a href=&#34;https://github.com/marp-team/marp-core&#34;&gt;Marp Core&lt;/a&gt;, but you may swap the conversion engine to another Marpit based engine through &lt;code&gt;--engine&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;You can use Marp (and compatible markdown-it) plugins while converting, or completely swap the converter to the other Marpit-based engine which published to npm.&lt;/p&gt; &#xA;&lt;h3&gt;Use Marpit framework&lt;/h3&gt; &#xA;&lt;p&gt;For example, you can convert Markdown with using the pure Marpit framework.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Marpit framework&#xA;npm i @marp-team/marpit&#xA;&#xA;# Specify engine to use Marpit&#xA;marp --engine @marp-team/marpit marpit-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that Marpit has not provided theme. It would be good to include inline style in Markdown, or pass CSS file by &lt;code&gt;--theme&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;If you want to use the Marpit-based custom engine by the module name, the specified module must be exporting a class inherited from Marpit as the default export.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Functional engine&lt;/h3&gt; &#xA;&lt;p&gt;When you specified the path to JavaScript file (&lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.cjs&lt;/code&gt;, or &lt;code&gt;.mjs&lt;/code&gt;) in &lt;code&gt;--engine&lt;/code&gt; option, you may use more customized engine by a JavaScript function.&lt;/p&gt; &#xA;&lt;h4&gt;Spec&lt;/h4&gt; &#xA;&lt;p&gt;The functional engine should export a function as the default export, which should have a single argument representing &lt;a href=&#34;https://marpit-api.marp.app/marpit&#34;&gt;the constructor option of Marpit&lt;/a&gt;/&lt;a href=&#34;https://github.com/marp-team/marp-core#constructor-options&#34;&gt;Marp Core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The function must return a class inherited from Marpit, or an instance of Marpit-based engine made by the parameter passed by argument.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// engine.mjs (ES modules)&#xA;import { MarpitBasedEngine } from &#39;marpit-based-engine&#39;&#xA;&#xA;export default () =&amp;gt; MarpitBasedEngine // Return a class inherited from Marpit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// engine.cjs (CommonJS)&#xA;const { MarpitBasedEngine } = require(&#39;marpit-based-engine&#39;)&#xA;&#xA;module.exports = function (constructorOptions) {&#xA;  // Return an instance of Marpit initialized by passed constructor options&#xA;  return new MarpitBasedEngine(constructorOptions)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This function can return &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; object so you can use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&#34;&gt;async function&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default async (constructorOptions) =&amp;gt; {&#xA;  const { MarpitBasedEngine } = await import(&#39;marpit-based-engine&#39;)&#xA;  return new MarpitBasedEngine(constructorOptions)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;Currently ES Modules can resolve only when using Marp CLI via Node.js. &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#standalone-binary&#34;&gt;The standalone binary&lt;/a&gt; cannot resolve ESM. (&lt;a href=&#34;https://github.com/vercel/pkg/issues/1291&#34;&gt;vercel/pkg#1291&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;&lt;code&gt;marp&lt;/code&gt; getter property&lt;/h4&gt; &#xA;&lt;p&gt;Marp CLI also exposes &lt;code&gt;marp&lt;/code&gt; getter property to the parameter. It returns a prepared instance of the built-in Marp Core engine, so you can apply several customizations to Marp engine with simple declarations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const marpPlugin = require(&#39;marp-plugin-foo&#39;)&#xA;const andMorePlugin = require(&#39;marp-plugin-bar&#39;)&#xA;&#xA;module.exports = ({ marp }) =&amp;gt; marp.use(marpPlugin).use(andMorePlugin)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It allows converting Markdown with additional syntaxes that were provided by Marp (or compatible markdown-it) plugins.&lt;/p&gt; &#xA;&lt;h4&gt;Example: &lt;a href=&#34;https://github.com/markdown-it/markdown-it-mark&#34;&gt;markdown-it-mark&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// engine.mjs&#xA;import markdownItMark from &#39;markdown-it-mark&#39;&#xA;&#xA;export default ({ marp }) =&amp;gt; marp.use(markdownItMark)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install markdown-it-mark into your project&#xA;npm i markdown-it-mark --save&#xA;&#xA;# Specify the path to functional engine&#xA;marp --engine ./engine.mjs slide-deck.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The customized engine will convert &lt;code&gt;==marked==&lt;/code&gt; to &lt;code&gt;&amp;lt;mark&amp;gt;marked&amp;lt;/mark&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Confirm engine version&lt;/h3&gt; &#xA;&lt;p&gt;By using &lt;code&gt;--version&lt;/code&gt; (&lt;code&gt;-v&lt;/code&gt;) option, you may confirm the version of engine that is expected to use in current configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ marp --version&#xA;@marp-team/marp-cli v4.x.x (w/ @marp-team/marp-core v4.x.x)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use specific version of Marp Core&lt;/h3&gt; &#xA;&lt;p&gt;Marp CLI prefers to use &lt;em&gt;an installed core to local project by user&lt;/em&gt; than the bundled.&lt;/p&gt; &#xA;&lt;p&gt;If the current project has installed &lt;code&gt;@marp-team/marp-core&lt;/code&gt; individually, it would show its version and the annotation: &lt;code&gt;w/ user-installed @marp-team/marp-core vX.X.X&lt;/code&gt; or &lt;code&gt;w/ customized engine&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm i @marp-team/marp-cli @marp-team/marp-core@^4.0.0 --save-dev&#xA;$ npx marp --version&#xA;@marp-team/marp-cli v4.x.x (w/ user-installed @marp-team/marp-core v4.0.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration file&lt;/h2&gt; &#xA;&lt;p&gt;Marp CLI can be configured options with file, such as &lt;code&gt;marp.config.js&lt;/code&gt;, &lt;code&gt;marp.config.mjs&lt;/code&gt; (ES Modules), &lt;code&gt;marp.config.cjs&lt;/code&gt; (CommonJS), &lt;code&gt;.marprc&lt;/code&gt; (JSON / YAML), and &lt;code&gt;marp&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is useful to configure settings for the whole of project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// package.json&#xA;{&#xA;  &#34;marp&#34;: {&#xA;    &#34;inputDir&#34;: &#34;./slides&#34;,&#xA;    &#34;output&#34;: &#34;./public&#34;,&#xA;    &#34;themeSet&#34;: &#34;./themes&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# .marprc.yml&#xA;allowLocalFiles: true&#xA;options:&#xA;  looseYAML: false&#xA;  markdown:&#xA;    breaks: false&#xA;pdf: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// marp.config.mjs&#xA;import markdownItContainer from &#39;markdown-it-container&#39;&#xA;&#xA;export default {&#xA;  // Customize engine on configuration file directly&#xA;  engine: ({ marp }) =&amp;gt; marp.use(markdownItContainer, &#39;custom&#39;),&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default we use configuration file that is placed on current directory, but you may also specify the path for a configuration file by &lt;code&gt;--config-file&lt;/code&gt; (&lt;code&gt;--config&lt;/code&gt; / &lt;code&gt;-c&lt;/code&gt;) option.&lt;/p&gt; &#xA;&lt;p&gt;If you want to prevent looking up a configuration file, you can pass &lt;code&gt;--no-config-file&lt;/code&gt; (&lt;code&gt;--no-config&lt;/code&gt;) option.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;p&gt;Currently ES Modules can resolve only when using Marp CLI via Node.js. &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#standalone-binary&#34;&gt;The standalone binary&lt;/a&gt; cannot resolve ESM. (&lt;a href=&#34;https://github.com/vercel/pkg/issues/1291&#34;&gt;vercel/pkg#1291&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Key&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CLI option&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;allowLocalFiles&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--allow-local-files&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Allow to access local files from Markdown while converting PDF &lt;em&gt;(NOT SECURE)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;author&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--author&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define author of the slide deck&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;bespoke&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;object&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Setting options for &lt;code&gt;bespoke&lt;/code&gt; template&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚îó &lt;code&gt;osc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--bespoke.osc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[Bespoke] Use on-screen controller (&lt;code&gt;true&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚îó &lt;code&gt;progress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--bespoke.progress&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[Bespoke] Use progress bar (&lt;code&gt;false&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚îó &lt;code&gt;transition&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--bespoke.transition&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[Bespoke] Use &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/docs/bespoke-transitions/README.md&#34;&gt;transitions&lt;/a&gt; (Only in browsers supported &lt;a href=&#34;https://www.w3.org/TR/css-view-transitions-1/&#34;&gt;View Transition API&lt;/a&gt;: &lt;code&gt;true&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;browser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string | string[]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--browser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The kind of browser for conversion (&lt;code&gt;auto&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;browserPath&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--browser-path&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Path to the browser executable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;browserProtocol&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;cdp&lt;/code&gt; | &lt;code&gt;webdriver-bidi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--browser-protocol&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the preferred protocol for connecting to the browser (&lt;code&gt;cdp&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;browserTimeout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--browser-timeout&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the timeout for each browser operation in seconds (&lt;code&gt;30&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--description&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define description of the slide deck&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;engine&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string | Class | Function&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--engine&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Specify Marpit based engine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean | object&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--html&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable or disable HTML tags (Configuration file can pass &lt;a href=&#34;https://github.com/marp-team/marp-core#html-boolean--object&#34;&gt;the whitelist object&lt;/a&gt; if you are using Marp Core)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;png&lt;/code&gt; | &lt;code&gt;jpeg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Convert the first slide page into an image file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;images&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;png&lt;/code&gt; | &lt;code&gt;jpeg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--images&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Convert slide deck into multiple image files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;imageScale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--image-scale&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The scale factor for rendered images (&lt;code&gt;1&lt;/code&gt; by default, or &lt;code&gt;2&lt;/code&gt; for PPTX conversion)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;inputDir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--input-dir&lt;/code&gt; &lt;code&gt;-I&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The base directory to find markdown and theme CSS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;jpegQuality&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--jpeg-quality&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Setting JPEG image quality (&lt;code&gt;85&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;keywords&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string | string[]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--keywords&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define keywords for the slide deck (Accepts comma-separated string and array of string)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define the language of converted HTML&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;notes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--notes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Convert slide deck notes into a text file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;ogImage&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--og-image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define &lt;a href=&#34;http://ogp.me/&#34;&gt;Open Graph&lt;/a&gt; image URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;object&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;The base options for the constructor of engine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--output&lt;/code&gt; &lt;code&gt;-o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Output file path (or directory when input-dir is passed)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;parallel&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean | number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--parallel&lt;/code&gt; &lt;code&gt;-P&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set the number of concurrency for parallel conversion (&lt;code&gt;5&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;pdf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pdf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Convert slide deck into PDF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;pdfNotes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pdf-notes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Add &lt;a href=&#34;https://marpit.marp.app/usage?id=presenter-notes&#34;&gt;presenter notes&lt;/a&gt; to PDF as annotations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;pdfOutlines&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean | object&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pdf-outlines&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Add outlines (bookmarks) to PDF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚îó &lt;code&gt;pages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pdf-outlines.pages&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Make PDF outlines from slide pages (&lt;code&gt;true&lt;/code&gt; by default when &lt;code&gt;pdfOutlines&lt;/code&gt; is enabled)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚îó &lt;code&gt;headings&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pdf-outlines.headings&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Make PDF outlines from Markdown headings (&lt;code&gt;true&lt;/code&gt; by default when &lt;code&gt;pdfOutlines&lt;/code&gt; is enabled)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;pptx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pptx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Convert slide deck into PowerPoint document&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;pptxEditable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--pptx-editable&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;[EXPERIMENTAL]&lt;/em&gt; Generate editable PPTX when converting to PPTX&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;preview&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--preview&lt;/code&gt; &lt;code&gt;-p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Open preview window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;server&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--server&lt;/code&gt; &lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enable server mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;template&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bare&lt;/code&gt; | &lt;code&gt;bespoke&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--template&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Choose template (&lt;code&gt;bespoke&lt;/code&gt; by default)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--theme&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Override theme by name or CSS file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;themeSet&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string | string[]&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--theme-set&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Path to additional theme CSS files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--title&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define title of the slide deck&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;string&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Define &lt;a href=&#34;https://en.wikipedia.org/wiki/Canonical_link_element&#34;&gt;canonical URL&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;watch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;boolean&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--watch&lt;/code&gt; &lt;code&gt;-w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Watch input markdowns for changes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Some of options that cannot specify through CLI options can be configured by file. (e.g. &lt;code&gt;options&lt;/code&gt; field for the constructor option of used engine)&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Example: Customize engine&#39;s constructor option&lt;/summary&gt; &#xA; &lt;p&gt;You can fine-tune constructor options for the engine, &lt;a href=&#34;https://github.com/marp-team/marp-core#constructor-options&#34;&gt;Marp Core&lt;/a&gt; / &lt;a href=&#34;https://marpit-api.marp.app/marpit&#34;&gt;Marpit&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;options&#34;: {&#xA;    &#34;markdown&#34;: {&#xA;      &#34;breaks&#34;: false&#xA;    },&#xA;    &#34;minifyCSS&#34;: false&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;This configuration will set the constructor option for Marp Core as specified:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Disables &lt;a href=&#34;https://github.com/marp-team/marp-core#marp-markdown&#34;&gt;Marp Core&#39;s line breaks conversion&lt;/a&gt; (&lt;code&gt;\n&lt;/code&gt; to &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;) to match for CommonMark, by passing &lt;a href=&#34;https://markdown-it.github.io/markdown-it/#MarkdownIt.new&#34;&gt;markdown-it&#39;s &lt;code&gt;breaks&lt;/code&gt; option&lt;/a&gt; as &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Disable minification for rendered theme CSS to make debug your style easily, by passing &lt;a href=&#34;https://github.com/marp-team/marp-core#minifycss-boolean&#34;&gt;&lt;code&gt;minifyCSS&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA;  &lt;p&gt;Some options may be overridden by used template.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Auto completion&lt;/h3&gt; &#xA;&lt;p&gt;When Marp CLI has been installed into the local project, for getting the power of auto completion for the config, such as &lt;a href=&#34;https://code.visualstudio.com/docs/editor/intellisense&#34;&gt;IntelliSense&lt;/a&gt;, you can annotate the config object through JSDoc, with Marp CLI&#39;s &lt;code&gt;Config&lt;/code&gt; type.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;/** @type {import(&#39;@marp-team/marp-cli&#39;).Config} */&#xA;const config = {&#xA;  // ...&#xA;}&#xA;&#xA;export default config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can import Vite-like &lt;code&gt;defineConfig&lt;/code&gt; helper from Marp CLI instead.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { defineConfig } from &#39;@marp-team/marp-cli&#39;&#xA;&#xA;export default defineConfig({&#xA;  // ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;Config&lt;/code&gt; type with custom engine&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;ve swapped the engine into another Marpit based engine, you can provide better suggestion for &lt;code&gt;options&lt;/code&gt; field by passing the engine type to generics.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;/** @type {import(&#39;@marp-team/marp-cli&#39;).Config&amp;lt;typeof import(&#39;@marp-team/marpit&#39;).Marpit&amp;gt;} */&#xA;const config = {&#xA;  engine: &#39;@marp-team/marpit&#39;,&#xA;  options: {&#xA;    // Suggest only Marpit constructor options, not Marp Core&#xA;  },&#xA;}&#xA;&#xA;export default config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;TypeScript (&lt;code&gt;marp.config.ts&lt;/code&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;If you installed &lt;code&gt;typescript&lt;/code&gt; into your local project together with Marp CLI, you can write a config by TypeScript &lt;code&gt;marp.config.ts&lt;/code&gt;. Marp CLI will try to transpile &lt;code&gt;.ts&lt;/code&gt; with the project configuration &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In TypeScript configuration, you can specify the custom engine as the generics for &lt;code&gt;defineConfig&lt;/code&gt; helper, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;// marp.config.ts&#xA;import { Marpit } from &#39;@marp-team/marpit&#39;&#xA;import { defineConfig } from &#39;@marp-team/marp-cli&#39;&#xA;&#xA;export default defineConfig&amp;lt;typeof Marpit&amp;gt;({&#xA;  engine: Marpit,&#xA;  options: {&#xA;    // Suggest only Marpit constructor options&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API &lt;em&gt;(EXPERIMENTAL)&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You can use Marp CLI through Node.js &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/#local-installation&#34;&gt;if installed Marp CLI into your local project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { marpCli } = require(&#39;@marp-team/marp-cli&#39;)&#xA;&#xA;marpCli([&#39;test.md&#39;, &#39;--pdf&#39;])&#xA;  .then((exitStatus) =&amp;gt; {&#xA;    if (exitStatus &amp;gt; 0) {&#xA;      console.error(`Failure (Exit status: ${exitStatus})`)&#xA;    } else {&#xA;      console.log(&#39;Success&#39;)&#xA;    }&#xA;  })&#xA;  .catch(console.error)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;marpCli()&lt;/code&gt; accepts an argument of CLI options as array, and returns &lt;code&gt;Promise&lt;/code&gt; to resolve an expected exit status in CLI. It would be rejected with the instance of &lt;code&gt;Error&lt;/code&gt; if CLI met an error to suspend the conversion process.&lt;/p&gt; &#xA;&lt;h3&gt;Error handling&lt;/h3&gt; &#xA;&lt;p&gt;We have exported &lt;a href=&#34;https://github.com/marp-team/marp-cli/raw/main/src/error.ts&#34;&gt;&lt;code&gt;CLIError&lt;/code&gt; class and &lt;code&gt;CLIErrorCode&lt;/code&gt; enum&lt;/a&gt; from &lt;code&gt;@marp-team/marp-cli&lt;/code&gt;, to allow handling for specific errors that have already known by Marp CLI.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;CLIError&lt;/code&gt; instance was thrown, you can identify the reason why CLI threw error by checking &lt;code&gt;errorCode&lt;/code&gt; member.&lt;/p&gt; &#xA;&lt;h3&gt;Wait for observation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;marpCli()&lt;/code&gt; would not be resolved initiatively if started some observation: Watch mode, server mode, and preview window.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;waitForObservation()&lt;/code&gt; is helpful to handle them. It returns &lt;code&gt;Promise&lt;/code&gt; that would be resolved with helper object when ready to observe resources in &lt;code&gt;marpCli()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { marpCli, waitForObservation } = require(&#39;@marp-team/marp-cli&#39;)&#xA;&#xA;marpCli([&#39;--server&#39;, &#39;./slides/&#39;])&#xA;  .then((exitCode) =&amp;gt; console.log(`Done with exit code ${exitCode}`))&#xA;  .catch(console.error)&#xA;&#xA;waitForObservation().then(({ stop }) =&amp;gt; {&#xA;  console.log(&#39;Observed&#39;)&#xA;&#xA;  // Stop observations to resolve marpCli()&#39;s Promise&#xA;  stop()&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resolved helper has &lt;code&gt;stop()&lt;/code&gt; method for telling Marp CLI to stop observation and resolve &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Are you interested in contributing? Please see &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://github.com/marp-team/.github/raw/master/CONTRIBUTING.md&#34;&gt;the common contributing guideline for Marp team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Managed by &lt;a href=&#34;https://github.com/marp-team&#34;&gt;@marp-team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://github.com/yhatt.png&#34; width=&#34;16&#34; height=&#34;16&#34;&gt; Yuki Hattori (&lt;a href=&#34;https://github.com/yhatt&#34;&gt;@yhatt&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This tool releases under the &lt;a href=&#34;https://raw.githubusercontent.com/marp-team/marp-cli/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>