<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-21T01:40:47Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>subsquid-quests/lido-subgraph-migration</title>
    <updated>2023-12-21T01:40:47Z</updated>
    <id>tag:github.com,2023-12-21:/subsquid-quests/lido-subgraph-migration</id>
    <link href="https://github.com/subsquid-quests/lido-subgraph-migration" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source srcset=&#34;https://uploads-ssl.webflow.com/63b5a9958fccedcf67d716ac/64662df3a5a568fd99e3600c_Squid_Pose_1_White-transparent-slim%201.png&#34; media=&#34;(prefers-color-scheme: dark)&#34;&gt; &#xA;  &lt;img src=&#34;https://uploads-ssl.webflow.com/63b5a9958fccedcf67d716ac/64662df3a5a568fd99e3600c_Squid_Pose_1_White-transparent-slim%201.png&#34; alt=&#34;Subsquid Logo&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.subsquid.io/&#34;&gt;&lt;img src=&#34;https://docs.rs/leptos/badge.svg?sanitize=true&#34; alt=&#34;docs.rs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/subsquid&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1031524867910148188?color=%237289DA&amp;amp;label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://subsquid.io&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://docs.subsquid.io/&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/subsquid&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Lido Subgraph Migration&lt;/h1&gt; &#xA;&lt;p&gt;This quest is to migrate the &lt;a href=&#34;https://github.com/lidofinance/lido-subgraph/&#34;&gt;Lido Finance Subgraph&lt;/a&gt; to Squid SDK. The resulting squid should match the GraphQL API of the subgraph as close as possible, by migrating &lt;code&gt;schema.graphql&lt;/code&gt;. The judges reserve the right to request improvements afther the initial review of the submission. Reach out to the &lt;a href=&#34;https://discord.com/channels/857105545135390731/1155812879770058783&#34;&gt;Discord Channel&lt;/a&gt; for any tech questions regarding this quest. Use &lt;code&gt;template&lt;/code&gt; squid as a starter.&lt;/p&gt; &#xA;&lt;h1&gt;Quest Info&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Category&lt;/th&gt; &#xA;   &lt;th&gt;Skill Level&lt;/th&gt; &#xA;   &lt;th&gt;Time required (hours)&lt;/th&gt; &#xA;   &lt;th&gt;Max Participants&lt;/th&gt; &#xA;   &lt;th&gt;Reward&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;End date&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Squid Deployment&lt;/td&gt; &#xA;   &lt;td&gt;$\textcolor{orange}{\textsf{Medium}}$&lt;/td&gt; &#xA;   &lt;td&gt;~20&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;$\textcolor{red}{\textsf{3000tSQD}}$&lt;/td&gt; &#xA;   &lt;td&gt;open&lt;/td&gt; &#xA;   &lt;td&gt;20/12/2023&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Acceptance critera&lt;/h1&gt; &#xA;&lt;p&gt;Ultimately, the solutions are accepted at the discretion of judges following a manual review. This sections is a rough guide that is in no way binding on our side.&lt;/p&gt; &#xA;&lt;p&gt;Some of the reasons why the solution will not be accepted include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;squid does not start&lt;/li&gt; &#xA; &lt;li&gt;squid fails to sync fully due to internal errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.subsquid.io/evm-indexing/configuration/caveats/&#34;&gt;batch handler filters&lt;/a&gt; are not set up correctly (leads to a late sync failure in &lt;a href=&#34;https://docs.subsquid.io/evm-indexing/evm-processor/#rpc-ingestion&#34;&gt;RPC-ingesting&lt;/a&gt; squids)&lt;/li&gt; &#xA; &lt;li&gt;data returned for any query is not consistent with subgraph data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may find &lt;a href=&#34;https://github.com/abernatskiy/compareGraphQL&#34;&gt;this tool&lt;/a&gt; to be useful for squid to subgraph API comparisons.&lt;/p&gt; &#xA;&lt;p&gt;It is desirable that your solution:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;includes a suite of test GraphQL queries that touches every &lt;a href=&#34;https://docs.subsquid.io/store/postgres/schema-file/entities/&#34;&gt;schema entity&lt;/a&gt; and, if used, every &lt;a href=&#34;https://docs.subsquid.io/graphql-api/custom-resolvers/&#34;&gt;custom resolver&lt;/a&gt; at least once, with corresponding subgraph queries (listing in README is enough)&lt;/li&gt; &#xA; &lt;li&gt;has high code quality (readability, simplicity, comments where necessary)&lt;/li&gt; &#xA; &lt;li&gt;uses &lt;a href=&#34;https://docs.subsquid.io/basics/batch-processing/&#34;&gt;batch processing&lt;/a&gt; consistently&lt;/li&gt; &#xA; &lt;li&gt;avoids any &#34;sleeping bugs&#34;: logic errors that accidentally happen to not break the data&lt;/li&gt; &#xA; &lt;li&gt;follows the standard squid startup procedure: &lt;pre&gt;&lt;code&gt;git clone &amp;lt;repo_url&amp;gt;&#xA;cd &amp;lt;repo_url&amp;gt;&#xA;npm ci&#xA;sqd up&#xA;sqd process &amp;amp;&#xA;sqd serve&#xA;&lt;/code&gt;&lt;/pre&gt; If it does not, describe your startup procedure in the README.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please test your solutions before submitting. We do allow some corrections, but judges&#39; time is not limitless.&lt;/p&gt; &#xA;&lt;p&gt;To submit, invite the following github accounts to your private repo : &lt;a href=&#34;https://github.com/dariaag&#34;&gt;@dariaag&lt;/a&gt;, &lt;a href=&#34;https://github.com/belopash&#34;&gt;@belopash&lt;/a&gt;, &lt;a href=&#34;https://github.com/abernatskiy&#34;&gt;@abernatskiy&lt;/a&gt; and &lt;a href=&#34;https://github.com/dzhelezov&#34;&gt;@dzhelezov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Rewards&lt;/h1&gt; &#xA;&lt;p&gt;tSQD rewards will be delivered via the &lt;a href=&#34;https://app.subsquid.io/quests&#34;&gt;quests page&lt;/a&gt; of Subsquid Cloud. Make sure you use the same GitHub handle to make a submission and when linking to that page.&lt;/p&gt; &#xA;&lt;p&gt;Winners will be listed at the quest repository README. If you do not wish to be listed please tell us that in an issue in your submission repo.&lt;/p&gt; &#xA;&lt;h1&gt;Useful links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.subsquid.io/deploy-squid/quickstart/&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.subsquid.io/migrate/migrate-subgraph/&#34;&gt;TheGraph Migration guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/itsjerryokolo/CryptoPunks&#34;&gt;Cryptopunks Subgraph source code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setup and Common errors&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Node v16.x or newer &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;https://nodejs.org/en/download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Docker &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install git &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Squid CLI&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g @subsquid/cli@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run a squid:&lt;/h2&gt; &#xA;&lt;p&gt;Full startup procedure for newly developed squids:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependecies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Generate model&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd codegen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Generate types&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd typegen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build the squid&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Open docker and run:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Generate migrations:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd migration:generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Start processing:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd process&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Start a local GraphQL server in a separate terminal:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Types (&lt;code&gt;./src/abi&lt;/code&gt;), models (&lt;code&gt;./src/model&lt;/code&gt;) and migrations (&#39;./db&#39;) are typically kept within squid repos after they become stable. Then the startup procedure simplifies to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;sqd up&#xA;sqd process &amp;amp;&#xA;sqd serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Possible Errors:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Docker not installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;X db Error × query-gateway Error&#xA;Error response from daemon: Get &#34;https://registry-1.docker.jo/v2/&#34;: uri ting to 127.0.0.1:8888: dial cp 127.0.0.1:8888: connectex: No connection&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Git not installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Error: Error: spawn git ENOENT&#xA;at ChildProcess._handle.onexit (node: internal/child_process: 284:19)&#xA;at onErrorNT (node: internal/child_process:477:16)&#xA;at process.processTicksAndRejections (node: internal/process/task_queues:82:21)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Dependencies not installed. Run &lt;code&gt;npm ci&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqd typegen&#xA;TYPEGEN&#xA;    Error: spawn squid-evm-typegen ENOENT&#xA;    Code: ENOENT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Rate-limiting. Get a private RPC endpoint from &lt;a href=&#34;https://ethereumnodes.com&#34;&gt;any node provider&lt;/a&gt;, then change the &lt;code&gt;rpcUrl&lt;/code&gt; in &lt;code&gt;processor.ts&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;will pause new requests for 20000ms {&#34;rpcUrl&#34;:&#34;https://rpc.ankr.com/eth&#34;,&#xA;&#34;reason&#34; : &#34;HttpError: got 429 from https://rpc.ankr.com/eth&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If necessary, &lt;a href=&#34;https://docs.subsquid.io/evm-indexing/configuration/initialization/#set-data-source&#34;&gt;rate limit your RPC queries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Best practices:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Batch saving&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;let transfers: Transfers[] = [];&#xA;...&#xA;ctx.store.save(transfers);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Using map instead of array to avoid duplicate values&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;let transfers: Map&amp;lt;string, Transfer&amp;gt; = new Map();&#xA;...&#xA;ctx.store.upsert([...transfers.values()]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Verify log addresses, not only topics.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; if (log.topics[0] === erc721.events.Transfer.topic &amp;amp;&amp;amp; log.address === CONTRACT_ADDRESS) {&#xA;...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>anse-app/chatgpt-demo</title>
    <updated>2023-12-21T01:40:47Z</updated>
    <id>tag:github.com,2023-12-21:/anse-app/chatgpt-demo</id>
    <link href="https://github.com/anse-app/chatgpt-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal web UI for ChatGPT.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT-API Demo&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/anse-app/chatgpt-demo/main/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A demo repo based on &lt;a href=&#34;https://platform.openai.com/docs/guides/chat&#34;&gt;OpenAI GPT-3.5 Turbo API.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🍿 Live preview&lt;/strong&gt;: &lt;a href=&#34;https://chatgpt.ddiu.me&#34;&gt;https://chatgpt.ddiu.me&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ Notice: Our API Key limit has been exhausted. So the demo site is not available now.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/chat-logo.webp&#34; alt=&#34;chat-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introducing &lt;code&gt;Anse&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Looking for multi-chat, image-generation, and more powerful features? Take a look at our newly launched &lt;a href=&#34;https://github.com/anse-app/anse&#34;&gt;Anse&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More info on &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/discussions/247&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/discussions/247&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/anse-app/anse&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1998168/235048408-ca4015f5-4d3c-4c64-9a6c-9069a89cd23a.png&#34; alt=&#34;image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;h3&gt;Pre environment&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Node&lt;/strong&gt;: Check that both your development environment and deployment environment are using &lt;code&gt;Node v18&lt;/code&gt; or later. You can use &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; to manage multiple &lt;code&gt;node&lt;/code&gt; versions locally. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; node -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PNPM&lt;/strong&gt;: We recommend using &lt;a href=&#34;https://pnpm.io/&#34;&gt;pnpm&lt;/a&gt; to manage dependencies. If you have never installed pnpm, you can install it with the following command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; npm i -g pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OPENAI_API_KEY&lt;/strong&gt;: Before running this application, you need to obtain the API key from OpenAI. You can register the API key at &lt;a href=&#34;https://beta.openai.com/signup&#34;&gt;https://beta.openai.com/signup&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;.env.example&lt;/code&gt; file, then rename it to &lt;code&gt;.env&lt;/code&gt;, and add your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OpenAI API key&lt;/a&gt; to the &lt;code&gt;.env&lt;/code&gt; file. &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; OPENAI_API_KEY=sk-xxx...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the application, the local project runs on &lt;code&gt;http://localhost:3000/&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;Deploy With Vercel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fddiu8081%2Fchatgpt-demo&amp;amp;env=OPENAI_API_KEY&amp;amp;envDescription=OpenAI%20API%20Key&amp;amp;envLink=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;🔒 Need website password?&lt;/h4&gt; &#xA; &lt;p&gt;Deploy with the &lt;a href=&#34;https://raw.githubusercontent.com/anse-app/chatgpt-demo/main/#environment-variables&#34;&gt;&lt;code&gt;SITE_PASSWORD&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fddiu8081%2Fchatgpt-demo&amp;amp;env=OPENAI_API_KEY&amp;amp;env=SITE_PASSWORD&amp;amp;envDescription=OpenAI%20API%20Key&amp;amp;envLink=https%3A%2F%2Fplatform.openai.com%2Faccount%2Fapi-keys&#34; alt=&#34;Deploy with Vercel&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34; height=&#34;24&#34; style=&#34;vertical-align: middle; margin-right: 4px;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230310/image.4wzfb79qt7k0.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy With Netlify&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/ddiu8081/chatgpt-demo#OPENAI_API_KEY=&amp;amp;HTTPS_PROXY=&amp;amp;OPENAI_API_BASE_URL=&amp;amp;HEAD_SCRIPTS=&amp;amp;PUBLIC_SECRET_KEY=&amp;amp;OPENAI_API_MODEL=&amp;amp;SITE_PASSWORD=&#34;&gt;&lt;img src=&#34;https://www.netlify.com/img/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy with Netlify&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step-by-step deployment tutorial:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/fork&#34;&gt;Fork&lt;/a&gt; this project, Go to &lt;a href=&#34;https://app.netlify.com/start&#34;&gt;https://app.netlify.com/start&lt;/a&gt; new Site, select the project you &lt;code&gt;forked&lt;/code&gt; done, and connect it with your &lt;code&gt;GitHub&lt;/code&gt; account.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230310/image.3nlt4hgzb16o.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230310/image.5fhfouap270g.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Select the branch you want to deploy, then configure environment variables in the project settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230311/image.gfs9lx8c854.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Select the default build command and output directory, Click the &lt;code&gt;Deploy Site&lt;/code&gt; button to start deploying the site.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230311/image.4jky9e1wbojk.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy with Docker&lt;/h3&gt; &#xA;&lt;p&gt;Environment variables refer to the documentation below. &lt;a href=&#34;https://hub.docker.com/r/ddiu8081/chatgpt-demo&#34;&gt;Docker Hub address&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Direct run&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name=chatgpt-demo -e OPENAI_API_KEY=YOUR_OPEN_API_KEY -p 3000:3000 -d ddiu8081/chatgpt-demo:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;-e&lt;/code&gt; define environment variables in the container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker compose&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  chatgpt-demo:&#xA;    image: ddiu8081/chatgpt-demo:latest&#xA;    container_name: chatgpt-demo&#xA;    restart: always&#xA;    ports:&#xA;      - &#39;3000:3000&#39;&#xA;    environment:&#xA;      - OPENAI_API_KEY=YOUR_OPEN_API_KEY&#xA;      # - HTTPS_PROXY=YOUR_HTTPS_PROXY&#xA;      # - OPENAI_API_BASE_URL=YOUR_OPENAI_API_BASE_URL&#xA;      # - HEAD_SCRIPTS=YOUR_HEAD_SCRIPTS&#xA;      # - PUBLIC_SECRET_KEY=YOUR_SECRET_KEY&#xA;      # - SITE_PASSWORD=YOUR_SITE_PASSWORD&#xA;      # - OPENAI_API_MODEL=YOUR_OPENAI_API_MODEL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start&#xA;docker compose up -d&#xA;# down&#xA;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy with Sealos&lt;/h3&gt; &#xA;&lt;p&gt;1.Register a Sealos account for free &lt;a href=&#34;https://cloud.sealos.io&#34;&gt;sealos cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2.Click &lt;code&gt;App Launchpad&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-1.34i8gi80j268.webp&#34; alt=&#34;App Launchpad&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3.Click &lt;code&gt;Create Application&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-2.4t8q5px18eps.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;4.Just fill in according to the following figure, and click on it after filling out &lt;code&gt;Deploy Application&lt;/code&gt; button&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-3.5x5exqk0o8lc.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;App Name: chatgpt-demo&#xA;Image Name: ddiu8081/chatgpt-demo:latest&#xA;CPU: 0.5Core&#xA;Memory: 1G&#xA;Container Ports: 3000&#xA;Accessible to the Public: On&#xA;Environment: OPENAI_API_KEY=YOUR_OPEN_API_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5.Obtain the access link and click directly to access it. If you need to bind your own domain name, you can also fill in your own domain name in &lt;code&gt;Custom domain&lt;/code&gt; and follow the prompts to configure the domain name CNAME&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-4.4esqkqu70z9c.webp&#34; alt=&#34;Create Application&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;6.Wait for one to two minutes and open this link&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230609/install-on-sealos-5.5cgfpee3zeyo.webp&#34; alt=&#34;Open Link&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy on more servers&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to the official deployment documentation: &lt;a href=&#34;https://docs.astro.build/en/guides/deploy&#34;&gt;https://docs.astro.build/en/guides/deploy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;You can control the website through environment variables.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key for OpenAI.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HTTPS_PROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Provide proxy for OpenAI API. e.g. &lt;code&gt;http://127.0.0.1:7890&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_BASE_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Custom base url for OpenAI API.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.openai.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HEAD_SCRIPTS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Inject analytics or other scripts before &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; of the page&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PUBLIC_SECRET_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Secret string for the project. Use for generating signatures for API calls&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SITE_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set password for site, support multiple password separated by comma. If not set, site will be public&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OPENAI_API_MODEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ID of the model to use. &lt;a href=&#34;https://platform.openai.com/docs/api-reference/models/list&#34;&gt;List models&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Enable Automatic Updates&lt;/h2&gt; &#xA;&lt;p&gt;After forking the project, you need to manually enable Workflows and Upstream Sync Action on the Actions page of the forked project. Once enabled, automatic updates will be scheduled every day:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/yzh990918/static@master/20230518/image.2hhnrsrd2t1c.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;Q: TypeError: fetch failed (can&#39;t connect to OpenAI Api)&lt;/p&gt; &#xA;&lt;p&gt;A: Configure environment variables &lt;code&gt;HTTPS_PROXY&lt;/code&gt;，reference: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/issues/34&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/issues/34&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: throw new TypeError(${context} is not a ReadableStream.)&lt;/p&gt; &#xA;&lt;p&gt;A: The Node version needs to be &lt;code&gt;v18&lt;/code&gt; or later, reference: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/issues/65&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/issues/65&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: Accelerate domestic access without the need for proxy deployment tutorial?&lt;/p&gt; &#xA;&lt;p&gt;A: You can refer to this tutorial: &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/discussions/270&#34;&gt;https://github.com/ddiu8081/chatgpt-demo/discussions/270&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all those who contributed.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all our supporters!🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors.nn.ci/api?repo=ddiu8081/chatgpt-demo&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT © &lt;a href=&#34;https://github.com/ddiu8081/chatgpt-demo/raw/main/LICENSE&#34;&gt;ddiu8081&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jup-ag/token-list</title>
    <updated>2023-12-21T01:40:47Z</updated>
    <id>tag:github.com,2023-12-21:/jup-ag/token-list</id>
    <link href="https://github.com/jup-ag/token-list" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Token List API (BETA)&lt;/h1&gt; &#xA;&lt;p&gt;A key part of our JUP Promise (Best Price, Best Token Selection, Best UX) is the idea that users should be able to trade any token they want on Jupiter, while having the peace of mind that the token they are trading is the right one.&lt;/p&gt; &#xA;&lt;p&gt;To create a safer and more transparent trading experience while maintaining open access, we designed token lists with &#34;Strict&#34; and &#34;All&#34; options. The validated token list here is built up together with partners and community, feed Jupiter&#39;s &#34;Strict&#34; API, and is in use by ecosystem partners.&lt;/p&gt; &#xA;&lt;p&gt;Our design principles are: Safety, Openness, Unopinionated, Collaborative, Community-Driven.&lt;/p&gt; &#xA;&lt;p&gt;Learn more:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/JupiterExchange/status/1625877026866446337?s=20&#34;&gt;Tweet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.jup.ag/token-list-api/&#34;&gt;Blog post&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://station.jup.ag/docs/apis/token-list-api&#34;&gt;API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://station.jup.ag/docs/get-your-token-onto-jup#getting-on-the-strict-list&#34;&gt;Getting on the Strict list docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Address Validation into &#39;Strict&#39; List:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;If I&#39;m trying to trade this token from this project, am I looking at the right one?&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The true identity of a token is its mint address. Scammers often try to impersonate a token by imitating metadata such as its name and logo.&lt;/p&gt; &#xA;&lt;p&gt;To help users stay safe from fake tokens, we provide a &#39;Strict&#39; list with a trusted set of addresses and metadata from the original project team.&lt;/p&gt; &#xA;&lt;h2&gt;Community Discussion and Prioritization&lt;/h2&gt; &#xA;&lt;p&gt;We encourage discussion when new projects are trying to validate into the list. This gives new projects more visibility and the community a chance to get to know them. PRs are prioritized by the community -- the more you can show them that you are legit, the faster your PR would be approved.&lt;/p&gt; &#xA;&lt;p&gt;This could include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support from known accounts on your attestation tweet: &lt;a href=&#34;https://twitter.com/Cogent_Crypto/status/1630963084037869569?s=20&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Attestation from known developers on your validation PR: &lt;a href=&#34;https://github.com/jup-ag/token-list/pull/165&#34;&gt;Example1&lt;/a&gt;, &lt;a href=&#34;https://github.com/jup-ag/token-list/pull/76&#34;&gt;Example2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support from your community in Jupiter&#39;s &lt;a href=&#34;https://discord.gg/jup&#34;&gt;#community-validation discord channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reminder: Tokens that meet minimum liquidity criteria will always be available for trading on the &#39;All&#39; list even without immediate validation.&lt;/p&gt; &#xA;&lt;h2&gt;Projects -- Open a PR to Request Validation:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a PR like this &lt;a href=&#34;https://github.com/jup-ag/token-list/pull/76&#34;&gt;sample PR&lt;/a&gt; with your addition in the validated-tokens file.&lt;/li&gt; &#xA; &lt;li&gt;Fill up &lt;a href=&#34;https://github.com/jup-ag/token-list/raw/main/pull_request_template.md&#34;&gt;the markdown template&lt;/a&gt; in your PR description. It will be populated automatically in the draft description when you open the PR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;To allow time for community discovery and discussion, reviews are generally done on a weekly basis. Your PR will not be reviewed until there is some community support. Once there is, it will be reviewed within a week. ALL PRS WITHOUT YOUR TOKEN NAME IN THE TITLE, which just says &#34;Main&#34;, WILL BE CLOSED.&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community -- Support projects:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support the projects you want to see on the list by supporting their tweets and helping to review their PR.&lt;/li&gt; &#xA; &lt;li&gt;To validate, leave a comment on the PR like those in &lt;a href=&#34;https://github.com/jup-ag/token-list/pull/76&#34;&gt;this example&lt;/a&gt;. The approval process is held jointly by the team and moderators right now, but attestation from known accounts will show support and speed up the process. Over time, we would like to open it up to community members in a council.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers -- Contribute to this Repo:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feel free to contribute by opening a PR! We would like this to be community owned over time. Check out the &#34;Issues&#34; tab for some ideas on how to contribute!&lt;/li&gt; &#xA; &lt;li&gt;A technical walkthrough of how the inputs feed the Token List API can be found in &lt;code&gt;README-developers.md&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ideas? Feedback? Comment or talk to us in discord. ❤️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Validated Tokens List&lt;/h2&gt; &#xA;&lt;h3&gt;Example Fields:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Name&lt;/code&gt;: Genopets Ki&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Symbol&lt;/code&gt;: KI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Mint Address&lt;/code&gt;: kiGenopAScF8VF31Zbtx2Hg8qA5ArGqvnVtXb83sotc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Decimals&lt;/code&gt;: 9&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LogoURI&lt;/code&gt;: &lt;a href=&#34;https://arweave.net/WfPR8w5dEoerG_bI3S2o2_nuSfWY3p8M4YbQ6ijd1cQ?ext=png&#34;&gt;https://arweave.net/WfPR8w5dEoerG_bI3S2o2_nuSfWY3p8M4YbQ6ijd1cQ?ext=png&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Community Validated&lt;/code&gt;: true&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Banned Tokens List&lt;/h2&gt; &#xA;&lt;p&gt;Tokens here will not show up on the Jupiter UI, SDK and API.&lt;/p&gt; &#xA;&lt;p&gt;To propose a ban, please open a PR with the reason and related links in the description.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
</feed>