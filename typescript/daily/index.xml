<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-29T01:37:13Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>benborla/mcp-server-mysql</title>
    <updated>2025-05-29T01:37:13Z</updated>
    <id>tag:github.com,2025-05-29:/benborla/mcp-server-mysql</id>
    <link href="https://github.com/benborla/mcp-server-mysql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Model Context Protocol server that provides read-only access to MySQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Server for MySQL based on NodeJS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smithery.ai/server/@benborla29/mcp-server-mysql&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/@benborla29/mcp-server-mysql&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/assets/demo.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Model Context Protocol server that provides access to MySQL databases. This server enables LLMs to inspect database schemas and execute SQL queries.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#using-smithery&#34;&gt;Smithery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#running-from-local-repository&#34;&gt;Clone to Local Repository&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#components&#34;&gt;Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#multi-db-mode&#34;&gt;Multi-DB Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#schema-specific-permissions&#34;&gt;Schema-Specific Permissions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js v18 or higher&lt;/li&gt; &#xA; &lt;li&gt;MySQL 5.7 or higher (MySQL 8.0+ recommended)&lt;/li&gt; &#xA; &lt;li&gt;MySQL user with appropriate permissions for the operations you need&lt;/li&gt; &#xA; &lt;li&gt;For write operations: MySQL user with INSERT, UPDATE, and/or DELETE privileges&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are several ways to install and configure the MCP server but the most common would be checking this website &lt;a href=&#34;https://smithery.ai/server/@benborla29/mcp-server-mysql&#34;&gt;https://smithery.ai/server/@benborla29/mcp-server-mysql&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cursor&lt;/h3&gt; &#xA;&lt;p&gt;For Cursor IDE, you can install this MCP server with the following command in your project:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://smithery.ai/server/@benborla29/mcp-server-mysql&#34;&gt;https://smithery.ai/server/@benborla29/mcp-server-mysql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the instruction for Cursor&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;MCP Get provides a centralized registry of MCP servers and simplifies the installation process.&lt;/p&gt; &#xA;&lt;h3&gt;Using NPM/PNPM&lt;/h3&gt; &#xA;&lt;p&gt;For manual installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Using npm&#xA;npm install -g @benborla29/mcp-server-mysql&#xA;&#xA;# Using pnpm&#xA;pnpm add -g @benborla29/mcp-server-mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After manual installation, you&#39;ll need to configure your LLM application to use the MCP server (see Configuration section below).&lt;/p&gt; &#xA;&lt;h3&gt;Running from Local Repository&lt;/h3&gt; &#xA;&lt;p&gt;If you want to clone and run this MCP server directly from the source code, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/benborla/mcp-server-mysql.git&#xA;cd mcp-server-mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;# or&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the project&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;# or&#xA;pnpm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Claude Desktop&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Add the following to your Claude Desktop configuration file (&lt;code&gt;claude_desktop_config.json&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp_server_mysql&#34;: {&#xA;      &#34;command&#34;: &#34;/path/to/node&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;/full/path/to/mcp-server-mysql/dist/index.js&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;MYSQL_HOST&#34;: &#34;127.0.0.1&#34;,&#xA;        &#34;MYSQL_PORT&#34;: &#34;3306&#34;,&#xA;        &#34;MYSQL_USER&#34;: &#34;root&#34;,&#xA;        &#34;MYSQL_PASS&#34;: &#34;your_password&#34;,&#xA;        &#34;MYSQL_DB&#34;: &#34;your_database&#34;,&#xA;        &#34;ALLOW_INSERT_OPERATION&#34;: &#34;false&#34;,&#xA;        &#34;ALLOW_UPDATE_OPERATION&#34;: &#34;false&#34;,&#xA;        &#34;ALLOW_DELETE_OPERATION&#34;: &#34;false&#34;,&#xA;        &#34;PATH&#34;: &#34;/Users/atlasborla/Library/Application Support/Herd/config/nvm/versions/node/v22.9.0/bin:/usr/bin:/bin&#34;, // &amp;lt;--- Important to add the following, run in your terminal `echo &#34;$(which node)/../&#34;` to get the path&#xA;        &#34;NODE_PATH&#34;: &#34;/Users/atlasborla/Library/Application Support/Herd/config/nvm/versions/node/v22.9.0/lib/node_modules&#34; // &amp;lt;--- Important to add the following, run in your terminal `echo &#34;$(which node)/../../lib/node_modules&#34;`&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Replace:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;/path/to/node&lt;/code&gt; with the full path to your Node.js binary (find it with &lt;code&gt;which node&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;/full/path/to/mcp-server-mysql&lt;/code&gt; with the full path to where you cloned the repository&lt;/li&gt; &#xA;   &lt;li&gt;Set the MySQL credentials to match your environment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Test the server&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run the server directly to test&#xA;node dist/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If it connects to MySQL successfully, you&#39;re ready to use it with Claude Desktop.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;h3&gt;Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;mysql_query&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Execute SQL queries against the connected database&lt;/li&gt; &#xA;   &lt;li&gt;Input: &lt;code&gt;sql&lt;/code&gt; (string): The SQL query to execute&lt;/li&gt; &#xA;   &lt;li&gt;By default, limited to READ ONLY operations&lt;/li&gt; &#xA;   &lt;li&gt;Optional write operations (when enabled via configuration): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;INSERT: Add new data to tables (requires &lt;code&gt;ALLOW_INSERT_OPERATION=true&lt;/code&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;UPDATE: Modify existing data (requires &lt;code&gt;ALLOW_UPDATE_OPERATION=true&lt;/code&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;DELETE: Remove data (requires &lt;code&gt;ALLOW_DELETE_OPERATION=true&lt;/code&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;All operations are executed within a transaction with proper commit/rollback handling&lt;/li&gt; &#xA;   &lt;li&gt;Supports prepared statements for secure parameter handling&lt;/li&gt; &#xA;   &lt;li&gt;Configurable query timeouts and result pagination&lt;/li&gt; &#xA;   &lt;li&gt;Built-in query execution statistics&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;p&gt;The server provides comprehensive database information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Table Schemas&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON schema information for each table&lt;/li&gt; &#xA;   &lt;li&gt;Column names and data types&lt;/li&gt; &#xA;   &lt;li&gt;Index information and constraints&lt;/li&gt; &#xA;   &lt;li&gt;Foreign key relationships&lt;/li&gt; &#xA;   &lt;li&gt;Table statistics and metrics&lt;/li&gt; &#xA;   &lt;li&gt;Automatically discovered from database metadata&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SQL injection prevention through prepared statements&lt;/li&gt; &#xA; &lt;li&gt;Query whitelisting/blacklisting capabilities&lt;/li&gt; &#xA; &lt;li&gt;Rate limiting for query execution&lt;/li&gt; &#xA; &lt;li&gt;Query complexity analysis&lt;/li&gt; &#xA; &lt;li&gt;Configurable connection encryption&lt;/li&gt; &#xA; &lt;li&gt;Read-only transaction enforcement&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Optimizations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized connection pooling&lt;/li&gt; &#xA; &lt;li&gt;Query result caching&lt;/li&gt; &#xA; &lt;li&gt;Large result set streaming&lt;/li&gt; &#xA; &lt;li&gt;Query execution plan analysis&lt;/li&gt; &#xA; &lt;li&gt;Configurable query timeouts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring and Debugging&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comprehensive query logging&lt;/li&gt; &#xA; &lt;li&gt;Performance metrics collection&lt;/li&gt; &#xA; &lt;li&gt;Error tracking and reporting&lt;/li&gt; &#xA; &lt;li&gt;Health check endpoints&lt;/li&gt; &#xA; &lt;li&gt;Query execution statistics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Automatic Configuration with Smithery&lt;/h3&gt; &#xA;&lt;p&gt;If you installed using Smithery, your configuration is already set up. You can view or modify it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;smithery configure @benborla29/mcp-server-mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When reconfiguring, you can update any of the MySQL connection details as well as the write operation settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Basic connection settings&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MySQL Host, Port, User, Password, Database&lt;/li&gt; &#xA;   &lt;li&gt;SSL/TLS configuration (if your database requires secure connections)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Write operation permissions&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Allow INSERT Operations: Set to true if you want to allow adding new data&lt;/li&gt; &#xA;   &lt;li&gt;Allow UPDATE Operations: Set to true if you want to allow updating existing data&lt;/li&gt; &#xA;   &lt;li&gt;Allow DELETE Operations: Set to true if you want to allow deleting data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For security reasons, all write operations are disabled by default. Only enable these settings if you specifically need Claude to modify your database data.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Configuration Options&lt;/h3&gt; &#xA;&lt;p&gt;For more control over the MCP server&#39;s behavior, you can use these advanced configuration options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp_server_mysql&#34;: {&#xA;      &#34;command&#34;: &#34;/path/to/npx/binary/npx&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;-y&#34;,&#xA;        &#34;@benborla29/mcp-server-mysql&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        // Basic connection settings&#xA;        &#34;MYSQL_HOST&#34;: &#34;127.0.0.1&#34;,&#xA;        &#34;MYSQL_PORT&#34;: &#34;3306&#34;,&#xA;        &#34;MYSQL_USER&#34;: &#34;root&#34;,&#xA;        &#34;MYSQL_PASS&#34;: &#34;&#34;,&#xA;        &#34;MYSQL_DB&#34;: &#34;db_name&#34;,&#xA;        &#34;PATH&#34;: &#34;/path/to/node/bin:/usr/bin:/bin&#34;,&#xA;        &#xA;        // Performance settings&#xA;        &#34;MYSQL_POOL_SIZE&#34;: &#34;10&#34;,&#xA;        &#34;MYSQL_QUERY_TIMEOUT&#34;: &#34;30000&#34;,&#xA;        &#34;MYSQL_CACHE_TTL&#34;: &#34;60000&#34;,&#xA;        &#xA;        // Security settings&#xA;        &#34;MYSQL_RATE_LIMIT&#34;: &#34;100&#34;,&#xA;        &#34;MYSQL_MAX_QUERY_COMPLEXITY&#34;: &#34;1000&#34;,&#xA;        &#34;MYSQL_SSL&#34;: &#34;true&#34;,&#xA;        &#xA;        // Monitoring settings&#xA;        &#34;ENABLE_LOGGING&#34;: &#34;true&#34;,&#xA;        &#34;MYSQL_LOG_LEVEL&#34;: &#34;info&#34;,&#xA;        &#34;MYSQL_METRICS_ENABLED&#34;: &#34;true&#34;,&#xA;        &#xA;        // Write operation flags&#xA;        &#34;ALLOW_INSERT_OPERATION&#34;: &#34;false&#34;,&#xA;        &#34;ALLOW_UPDATE_OPERATION&#34;: &#34;false&#34;,&#xA;        &#34;ALLOW_DELETE_OPERATION&#34;: &#34;false&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;h3&gt;Basic Connection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_SOCKET_PATH&lt;/code&gt;: Unix socket path for local connections (e.g., &#34;/tmp/mysql.sock&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_HOST&lt;/code&gt;: MySQL server host (default: &#34;127.0.0.1&#34;) - ignored if MYSQL_SOCKET_PATH is set&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_PORT&lt;/code&gt;: MySQL server port (default: &#34;3306&#34;) - ignored if MYSQL_SOCKET_PATH is set&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_USER&lt;/code&gt;: MySQL username (default: &#34;root&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_PASS&lt;/code&gt;: MySQL password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_DB&lt;/code&gt;: Target database name (leave empty for multi-DB mode)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_POOL_SIZE&lt;/code&gt;: Connection pool size (default: &#34;10&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_QUERY_TIMEOUT&lt;/code&gt;: Query timeout in milliseconds (default: &#34;30000&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_CACHE_TTL&lt;/code&gt;: Cache time-to-live in milliseconds (default: &#34;60000&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_RATE_LIMIT&lt;/code&gt;: Maximum queries per minute (default: &#34;100&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_MAX_QUERY_COMPLEXITY&lt;/code&gt;: Maximum query complexity score (default: &#34;1000&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_SSL&lt;/code&gt;: Enable SSL/TLS encryption (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_INSERT_OPERATION&lt;/code&gt;: Enable INSERT operations (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_UPDATE_OPERATION&lt;/code&gt;: Enable UPDATE operations (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_DELETE_OPERATION&lt;/code&gt;: Enable DELETE operations (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ALLOW_DDL_OPERATION&lt;/code&gt;: Enable DDL operations (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCHEMA_INSERT_PERMISSIONS&lt;/code&gt;: Schema-specific INSERT permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCHEMA_UPDATE_PERMISSIONS&lt;/code&gt;: Schema-specific UPDATE permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCHEMA_DELETE_PERMISSIONS&lt;/code&gt;: Schema-specific DELETE permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SCHEMA_DDL_PERMISSIONS&lt;/code&gt;: Schema-specific DDL permissions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MULTI_DB_WRITE_MODE&lt;/code&gt;: Enable write operations in multi-DB mode (default: &#34;false&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Monitoring Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_ENABLE_LOGGING&lt;/code&gt;: Enable query logging (default: &#34;false&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_LOG_LEVEL&lt;/code&gt;: Logging level (default: &#34;info&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MYSQL_METRICS_ENABLED&lt;/code&gt;: Enable performance metrics (default: &#34;false&#34;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multi-DB Mode&lt;/h2&gt; &#xA;&lt;p&gt;MCP-Server-MySQL supports connecting to multiple databases when no specific database is set. This allows the LLM to query any database the MySQL user has access to. For full details, see &lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/README-MULTI-DB.md&#34;&gt;README-MULTI-DB.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Enabling Multi-DB Mode&lt;/h3&gt; &#xA;&lt;p&gt;To enable multi-DB mode, simply leave the &lt;code&gt;MYSQL_DB&lt;/code&gt; environment variable empty. In multi-DB mode, queries require schema qualification:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Use fully qualified table names&#xA;SELECT * FROM database_name.table_name;&#xA;&#xA;-- Or use USE statements to switch between databases&#xA;USE database_name;&#xA;SELECT * FROM table_name;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Schema-Specific Permissions&lt;/h2&gt; &#xA;&lt;p&gt;For fine-grained control over database operations, MCP-Server-MySQL now supports schema-specific permissions. This allows different databases to have different levels of access (read-only, read-write, etc.).&lt;/p&gt; &#xA;&lt;h3&gt;Configuration Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;SCHEMA_INSERT_PERMISSIONS=development:true,test:true,production:false&#xA;SCHEMA_UPDATE_PERMISSIONS=development:true,test:true,production:false&#xA;SCHEMA_DELETE_PERMISSIONS=development:false,test:true,production:false&#xA;SCHEMA_DDL_PERMISSIONS=development:false,test:true,production:false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For complete details and security recommendations, see &lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/README-MULTI-DB.md&#34;&gt;README-MULTI-DB.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;h3&gt;Database Setup&lt;/h3&gt; &#xA;&lt;p&gt;Before running tests, you need to set up the test database and seed it with test data:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Test Database and User&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Connect as root and create test database&#xA;CREATE DATABASE IF NOT EXISTS mcp_test;&#xA;&#xA;-- Create test user with appropriate permissions&#xA;CREATE USER IF NOT EXISTS &#39;mcp_test&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;mcp_test_password&#39;;&#xA;GRANT ALL PRIVILEGES ON mcp_test.* TO &#39;mcp_test&#39;@&#39;localhost&#39;;&#xA;FLUSH PRIVILEGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Database Setup Script&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run the database setup script&#xA;pnpm run setup:test:db&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will create the necessary tables and seed data. The script is located in &lt;code&gt;scripts/setup-test-db.ts&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Test Environment&lt;/strong&gt; Create a &lt;code&gt;.env.test&lt;/code&gt; file in the project root (if not existing):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;MYSQL_HOST=127.0.0.1&#xA;MYSQL_PORT=3306&#xA;MYSQL_USER=mcp_test&#xA;MYSQL_PASS=mcp_test_password&#xA;MYSQL_DB=mcp_test&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update package.json Scripts&lt;/strong&gt; Add these scripts to your package.json:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;setup:test:db&#34;: &#34;ts-node scripts/setup-test-db.ts&#34;,&#xA;    &#34;pretest&#34;: &#34;pnpm run setup:test:db&#34;,&#xA;    &#34;test&#34;: &#34;vitest run&#34;,&#xA;    &#34;test:watch&#34;: &#34;vitest&#34;,&#xA;    &#34;test:coverage&#34;: &#34;vitest run --coverage&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running Tests&lt;/h3&gt; &#xA;&lt;p&gt;The project includes a comprehensive test suite to ensure functionality and reliability:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# First-time setup&#xA;pnpm run setup:test:db&#xA;&#xA;# Run all tests&#xA;pnpm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running evals&lt;/h2&gt; &#xA;&lt;p&gt;The evals package loads an mcp client that then runs the index.ts file, so there is no need to rebuild between tests. You can load environment variables by prefixing the npx command. Full documentation can be found &lt;a href=&#34;https://www.mcpevals.io/docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=your-key  npx mcp-eval evals.ts index.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Common Issues&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connection Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Verify MySQL server is running and accessible&lt;/li&gt; &#xA;   &lt;li&gt;Check credentials and permissions&lt;/li&gt; &#xA;   &lt;li&gt;Ensure SSL/TLS configuration is correct if enabled&lt;/li&gt; &#xA;   &lt;li&gt;Try connecting with a MySQL client to confirm access&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adjust connection pool size&lt;/li&gt; &#xA;   &lt;li&gt;Configure query timeout values&lt;/li&gt; &#xA;   &lt;li&gt;Enable query caching if needed&lt;/li&gt; &#xA;   &lt;li&gt;Check query complexity settings&lt;/li&gt; &#xA;   &lt;li&gt;Monitor server resource usage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security Restrictions&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Review rate limiting configuration&lt;/li&gt; &#xA;   &lt;li&gt;Check query whitelist/blacklist settings&lt;/li&gt; &#xA;   &lt;li&gt;Verify SSL/TLS settings&lt;/li&gt; &#xA;   &lt;li&gt;Ensure the user has appropriate MySQL permissions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Path Resolution&lt;/strong&gt; If you encounter an error &#34;Could not connect to MCP server mcp-server-mysql&#34;, explicitly set the path of all required binaries:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;env&#34;: {&#xA;    &#34;PATH&#34;: &#34;/path/to/node/bin:/usr/bin:/bin&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Where can I find my &lt;code&gt;node&lt;/code&gt; bin path&lt;/em&gt; Run the following command to get it:&lt;/p&gt; &#xA;&lt;p&gt;For &lt;strong&gt;PATH&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;$(which node)/../&#34;    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For &lt;strong&gt;NODE_PATH&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;$(which node)/../../lib/node_modules&#34;    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Claude Desktop Specific Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you see &#34;Server disconnected&#34; logs in Claude Desktop, check the logs at &lt;code&gt;~/Library/Logs/Claude/mcp-server-mcp_server_mysql.log&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Ensure you&#39;re using the absolute path to both the Node binary and the server script&lt;/li&gt; &#xA;   &lt;li&gt;Check if your &lt;code&gt;.env&lt;/code&gt; file is being properly loaded; use explicit environment variables in the configuration&lt;/li&gt; &#xA;   &lt;li&gt;Try running the server directly from the command line to see if there are connection issues&lt;/li&gt; &#xA;   &lt;li&gt;If you need write operations (INSERT, UPDATE, DELETE), set the appropriate flags to &#34;true&#34; in your configuration: &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;env&#34;: {&#xA;  &#34;ALLOW_INSERT_OPERATION&#34;: &#34;true&#34;,  // Enable INSERT operations&#xA;  &#34;ALLOW_UPDATE_OPERATION&#34;: &#34;true&#34;,  // Enable UPDATE operations&#xA;  &#34;ALLOW_DELETE_OPERATION&#34;: &#34;true&#34;   // Enable DELETE operations&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Ensure your MySQL user has the appropriate permissions for the operations you&#39;re enabling&lt;/li&gt; &#xA;   &lt;li&gt;For direct execution configuration, use: &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;mcp_server_mysql&#34;: {&#xA;      &#34;command&#34;: &#34;/full/path/to/node&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;/full/path/to/mcp-server-mysql/dist/index.js&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;MYSQL_HOST&#34;: &#34;127.0.0.1&#34;,&#xA;        &#34;MYSQL_PORT&#34;: &#34;3306&#34;,&#xA;        &#34;MYSQL_USER&#34;: &#34;root&#34;,&#xA;        &#34;MYSQL_PASS&#34;: &#34;your_password&#34;,&#xA;        &#34;MYSQL_DB&#34;: &#34;your_database&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Authentication Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For MySQL 8.0+, ensure the server supports the &lt;code&gt;caching_sha2_password&lt;/code&gt; authentication plugin&lt;/li&gt; &#xA;   &lt;li&gt;Check if your MySQL user is configured with the correct authentication method&lt;/li&gt; &#xA;   &lt;li&gt;Try creating a user with legacy authentication if needed: &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE USER &#39;user&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; @lizhuangs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;I am encountering &lt;code&gt;Error [ERR_MODULE_NOT_FOUND]: Cannot find package &#39;dotenv&#39; imported from&lt;/code&gt; error try this workaround:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y -p @benborla29/mcp-server-mysql -p dotenv mcp-server-mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Thanks to @lizhuangs&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please feel free to submit a Pull Request to &lt;a href=&#34;https://github.com/benborla/mcp-server-mysql&#34;&gt;https://github.com/benborla/mcp-server-mysql&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Many Thanks to the following Contributors:&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/benborla/mcp-server-mysql/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=benborla/mcp-server-mysql&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Development Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the project: &lt;code&gt;pnpm run build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Project Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re actively working on enhancing this MCP server. Check our &lt;a href=&#34;https://raw.githubusercontent.com/benborla/mcp-server-mysql/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; for details on planned features, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enhanced query capabilities with prepared statements&lt;/li&gt; &#xA; &lt;li&gt;Advanced security features&lt;/li&gt; &#xA; &lt;li&gt;Performance optimizations&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive monitoring&lt;/li&gt; &#xA; &lt;li&gt;Expanded schema information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to any of these areas, please check the issues on GitHub or open a new one to discuss your ideas.&lt;/p&gt; &#xA;&lt;h3&gt;Submitting Changes&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create a feature branch: &lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes: &lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch: &lt;code&gt;git push origin feature/your-feature-name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This MCP server is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
</feed>