<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:45:19Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>drizzle-team/drizzle-orm</title>
    <updated>2023-03-12T01:45:19Z</updated>
    <id>tag:github.com,2023-03-12:/drizzle-team/drizzle-orm</id>
    <link href="https://github.com/drizzle-team/drizzle-orm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TypeScript ORM for SQL&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Drizzle ORM &lt;a href=&#34;&#34;&gt;&lt;img alt=&#34;npm&#34; src=&#34;https://img.shields.io/npm/v/drizzle-orm?label=&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA; &lt;img alt=&#34;npm&#34; src=&#34;https://img.shields.io/npm/dm/drizzle-orm&#34;&gt; &#xA; &lt;img alt=&#34;npm bundle size&#34; src=&#34;https://img.shields.io/bundlephobia/min/drizzle-orm&#34;&gt; &#xA; &lt;a href=&#34;https://discord.gg/yfjTbVXMW4&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1043890932593987624&#34;&gt;&lt;/a&gt; &#xA; &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/npm/l/drizzle-orm&#34;&gt; &#xA; &lt;h6&gt;&lt;i&gt;If you know SQL, you know Drizzle ORM&lt;/i&gt;&lt;/h6&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Drizzle ORM is a TypeScript ORM for SQL databases designed with maximum type safety in mind. It comes with a &lt;a href=&#34;https://github.com/drizzle-team/drizzle-kit-mirror&#34;&gt;drizzle-kit&lt;/a&gt; CLI companion for automatic SQL migrations generation. Drizzle ORM is meant to be a library, not a framework. It stays as an opt-in solution all the time at any levels.&lt;/p&gt; &#xA;&lt;p&gt;The ORM main philosophy is &#34;If you know SQL, you know Drizzle ORM&#34;. We follow the SQL-like syntax whenever possible, are strongly typed ground top and fail at compile time, not in runtime.&lt;/p&gt; &#xA;&lt;p&gt;Drizzle ORM is being battle-tested on production projects by multiple teams üöÄ Give it a try and let us know if you have any questions or feedback on &lt;a href=&#34;https://discord.gg/yfjTbVXMW4&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature list&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full type safety&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/drizzle-team/drizzle-kit-mirror&#34;&gt;Smart automated migrations generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;No ORM learning curve&lt;/li&gt; &#xA; &lt;li&gt;SQL-like syntax for table definitions and queries&lt;/li&gt; &#xA; &lt;li&gt;Best in class fully typed joins&lt;/li&gt; &#xA; &lt;li&gt;Fully typed partial and non-partial selects of any complexity&lt;/li&gt; &#xA; &lt;li&gt;Auto-inferring of TS types for DB models for selections and insertions separately&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-zod/README.md&#34;&gt;Zod schema generation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Zero dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Database&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/pg-core/README.md&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MySQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/mysql-core/README.md&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SQLite&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/sqlite-core/README.md&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DynamoDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚è≥&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MS SQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚è≥&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CockroachDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚è≥&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install drizzle-orm&#xA;npm install -D drizzle-kit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feature showcase (PostgreSQL)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: don&#39;t forget to install &lt;code&gt;pg&lt;/code&gt; and &lt;code&gt;@types/pg&lt;/code&gt; packages for this example to work.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { eq } from &#39;drizzle-orm/expressions&#39;;&#xA;import { drizzle } from &#39;drizzle-orm/node-postgres&#39;;&#xA;import { InferModel, integer, pgTable, serial, text, timestamp, varchar } from &#39;drizzle-orm/pg-core&#39;;&#xA;import { sql } from &#39;drizzle-orm/sql&#39;;&#xA;import { Pool } from &#39;pg&#39;;&#xA;&#xA;export const users = pgTable(&#39;users&#39;, {&#xA;  id: serial(&#39;id&#39;).primaryKey(),&#xA;  fullName: text(&#39;full_name&#39;).notNull(),&#xA;  phone: varchar(&#39;phone&#39;, { length: 20 }).notNull(),&#xA;  role: text&amp;lt;&#39;user&#39; | &#39;admin&#39;&amp;gt;(&#39;role&#39;).default(&#39;user&#39;).notNull(),&#xA;  cityId: integer(&#39;city_id&#39;).references(() =&amp;gt; cities.id),&#xA;  createdAt: timestamp(&#39;created_at&#39;).defaultNow().notNull(),&#xA;  updatedAt: timestamp(&#39;updated_at&#39;).defaultNow().notNull(),&#xA;});&#xA;&#xA;export type User = InferModel&amp;lt;typeof users&amp;gt;;&#xA;export type NewUser = InferModel&amp;lt;typeof users, &#39;insert&#39;&amp;gt;;&#xA;&#xA;export const cities = pgTable(&#39;cities&#39;, {&#xA;  id: serial(&#39;id&#39;).primaryKey(),&#xA;  name: text(&#39;name&#39;).notNull(),&#xA;});&#xA;&#xA;export type City = InferModel&amp;lt;typeof cities&amp;gt;;&#xA;export type NewCity = InferModel&amp;lt;typeof cities, &#39;insert&#39;&amp;gt;;&#xA;&#xA;const pool = new Pool({&#xA;  connectionString: &#39;postgres://user:password@host:port/db&#39;,&#xA;});&#xA;&#xA;const db = drizzle(pool);&#xA;&#xA;// Insert&#xA;const newUser: NewUser = {&#xA;  fullName: &#39;John Doe&#39;,&#xA;  phone: &#39;+123456789&#39;,&#xA;};&#xA;const insertedUsers /* : User[] */ = await db.insert(users).values(newUser).returning();&#xA;const insertedUser = insertedUsers[0]!;&#xA;&#xA;const newCity: NewCity = {&#xA;  name: &#39;New York&#39;,&#xA;};&#xA;const insertedCities /* : City[] */ = await db.insert(cities).values(newCity).returning();&#xA;const insertedCity = insertedCities[0]!;&#xA;&#xA;// Update&#xA;const updateResult /* : { updated: Date }[] */ = await db.update(users)&#xA;  .set({ cityId: insertedCity.id, updatedAt: new Date() })&#xA;  .where(eq(users.id, insertedUser.id))&#xA;  .returning({ updated: users.updatedAt });&#xA;&#xA;// Select&#xA;const allUsers /* : User[] */ = await db.select().from(users);&#xA;&#xA;// Select custom fields&#xA;const upperCaseNames /* : { id: number; name: string }[] */ = await db&#xA;  .select({&#xA;    id: users.id,&#xA;    name: sql&amp;lt;string&amp;gt;`upper(${users.fullName})`,&#xA;  })&#xA;  .from(users);&#xA;&#xA;// Joins&#xA;// You wouldn&#39;t BELIEVE how SMART the result type is! üò±&#xA;const allUsersWithCities = await db&#xA;  .select({&#xA;    id: users.id,&#xA;    name: users.fullName,&#xA;    city: {&#xA;      id: cities.id,&#xA;      name: cities.name,&#xA;    },&#xA;  })&#xA;  .from(users)&#xA;  .leftJoin(cities, eq(users.cityId, cities.id));&#xA;&#xA;// Delete&#xA;const deletedNames /* : { name: string }[] */ = await db.delete(users)&#xA;  .where(eq(users.id, insertedUser.id))&#xA;  .returning({ name: users.fullName });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;See full docs for further reference:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/pg-core/README.md&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/mysql-core/README.md&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drizzle-team/drizzle-orm/main/drizzle-orm/src/sqlite-core/README.md&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ZhUyU1997/open-pose-editor</title>
    <updated>2023-03-12T01:45:19Z</updated>
    <id>tag:github.com,2023-03-12:/ZhUyU1997/open-pose-editor</id>
    <link href="https://github.com/ZhUyU1997/open-pose-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;online 3d openpose editor for stable diffusion and controlnet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Online 3D Openpose Editor [&lt;a href=&#34;https://raw.githubusercontent.com/ZhUyU1997/open-pose-editor/main/README-zh.md&#34;&gt;‰∏≠ÊñáÁâà&lt;/a&gt;]&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://zhuyu1997.github.io/open-pose-editor/&#34;&gt;Click me to get editor&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;Preview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/18410894/224073965-c782a05f-0a20-41cf-863d-8de490021ed7.mp4&#34;&gt;https://user-images.githubusercontent.com/18410894/224073965-c782a05f-0a20-41cf-863d-8de490021ed7.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Feature&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pose Editing&lt;/strong&gt;: Edit the pose of the 3D model by selecting a joint and rotating it with the mouse.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hand Editing&lt;/strong&gt;: Fine-tune the position of the hands by selecting the hand bones and adjusting them with the colored circles.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Depth/Normal/Canny Maps&lt;/strong&gt;: Generate and visualize depth, normal, and canny maps to enhance your AI drawing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Save/Load/Restore Scene&lt;/strong&gt;: Save your progress and restore it later by using the built-in save and load functionality.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adjust Body Parameters&lt;/strong&gt;: Adjust various body parameters such as height, weight, and limb lengths to create a custom 3D model.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h3&gt;Scene Navigation:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rotate Scene&lt;/strong&gt;: Click and hold the blank space, then move the mouse while holding down the left mouse button.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Move Scene&lt;/strong&gt;: Click and hold the blank space, then move the mouse while holding down the right mouse button.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Body Manipulation:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rotate Body&lt;/strong&gt;: Click on any joint to select it, then hold down one of the colored circles and move the mouse to rotate the selected joint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hand Editing&lt;/strong&gt;: Click on the red dot to select the hand bones, then rotate them by holding down one of the red circles and moving the mouse.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adjust Body Parameters:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Select Body&lt;/strong&gt;: Click on the body to select it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open Body Parameters&lt;/strong&gt;: Click on &#34;Body Parameters&#34; in the menu to adjust the body&#39;s parameters.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Adjust Output Resolution:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adjust Output Resolution in Menu&lt;/strong&gt;: Change the &#34;Width&#34; or &#34;Height&#34; in the menu to control the output resolution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Functions:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Switch to Move Mode&lt;/strong&gt;: Press the X key to switch to move mode, allowing you to move the entire body.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Delete Body&lt;/strong&gt;: Press the D key to delete the entire body.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;Email: &lt;a href=&#34;mailto:891085309@qq.com&#34;&gt;891085309@qq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=N6j4nigd&#34;&gt;Tencent QQ Group&lt;/a&gt;Ôºö272950545&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chathub-dev/chathub</title>
    <updated>2023-03-12T01:45:19Z</updated>
    <id>tag:github.com,2023-03-12:/chathub-dev/chathub</id>
    <link href="https://github.com/chathub-dev/chathub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All-in-one chatbot client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatHub&lt;/h1&gt; &#xA;&lt;p&gt;ChatHub is an all-in-one chatbot client&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chathub.gg&#34;&gt;Install from Chrome Web Store&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chathub-dev/chathub/main/screenshots/extension.png?raw=true&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use different chatbots in one app, currently supporting ChatGPT and new Bing Chat, and will integrate Google Bard and more in the future.&lt;/li&gt; &#xA; &lt;li&gt;Chat with multiple chatbots at the same time, making it easy to compare their answers.&lt;/li&gt; &#xA; &lt;li&gt;Support ChatGPT API mode, which is faster and more cost-effective than ChatGPT Plus.&lt;/li&gt; &#xA; &lt;li&gt;Token usage stats when using ChatGPT API mode.&lt;/li&gt; &#xA; &lt;li&gt;Shortcut to quickly activate the app anywhere in the browser.&lt;/li&gt; &#xA; &lt;li&gt;Markdown and code highlight support.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>