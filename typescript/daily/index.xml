<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-13T01:40:10Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>David-patrick-chuks/Riona-AI-Agent</title>
    <updated>2025-08-13T01:40:10Z</updated>
    <id>tag:github.com,2025-08-13:/David-patrick-chuks/Riona-AI-Agent</id>
    <link href="https://github.com/David-patrick-chuks/Riona-AI-Agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Riona Ai Agent üå∏ is built using Node.js and TypeScript üõ†Ô∏è, designed for seamless job execution üì∏. It&#39;s lightweight, efficient, and still evolving üöß‚Äîexciting new features coming soon! üåü&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Support the Project üôå&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to support the development of Instagram-AI-Agent, please consider contributing to the following wallet addresses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bitcoin (BTC)&lt;/strong&gt;: 1GkWY6pjn7KoAkCnUab2MxnxeEQihknfUi&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ethereum (ETH-erc20)&lt;/strong&gt;: 0xabb45f4d85e7d9db5de684c35ccde7239a167cbb&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Solana (SOL)&lt;/strong&gt;: EQV7fQ57zKNMFXy53WBfo2sCxtkRQVQLqj8sqWGnoyR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your support helps keep this project running and growing! üöÄ&lt;/p&gt; &#xA;&lt;h2&gt;Instagram-AI-Agent üå∏&lt;/h2&gt; &#xA;&lt;p&gt;Instagram-AI-Agent is an AI-powered automation tool designed for &lt;strong&gt;Instagram&lt;/strong&gt; to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.&lt;/p&gt; &#xA;&lt;p&gt;Before using the automation features, you can personalize the agent by training with the following, including: &lt;a href=&#34;https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp&#34;&gt;https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;YouTube Video URL&lt;/strong&gt; üé•&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Audio File&lt;/strong&gt; üéôÔ∏è&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portfolio or Website Link&lt;/strong&gt; üåê&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Formats Supported&lt;/strong&gt;: PDF, DOC, DOCX, TXT üìÑ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instagram Automation&lt;/strong&gt;: Automatically log in, post photos, like posts, and leave thoughtful comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-Powered Content Generation&lt;/strong&gt;: Use Google Generative AI to create engaging captions and comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Use proxies to manage multiple accounts and avoid rate limits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cookie Management&lt;/strong&gt;: Save and load cookies to maintain sessions across restarts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Twitter Automation&lt;/strong&gt;: (Coming soon) Automatically tweet, retweet, and like tweets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Automation&lt;/strong&gt;: (Coming soon) Automatically manage repositories, issues, and pull requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git&#xA;cd Instagram-AI-Agent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up environment variables&lt;/strong&gt;: Rename the &lt;a href=&#34;http://_vscodecontentref_/1&#34;&gt;.env.example&lt;/a&gt; file to &lt;a href=&#34;http://_vscodecontentref_/1&#34;&gt;.env&lt;/a&gt; in the root directory and add your Instagram credentials. Refer to the &lt;a href=&#34;http://_vscodecontentref_/2&#34;&gt;.env.example&lt;/a&gt; file for the required variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dotenv&#34;&gt;IGusername=your_instagram_username&#xA;IGpassword=your_instagram_password &#xA;&#xA;Xusername= #Twitter username&#xA;Xpassword= #Twitter password&#xA;&#xA;MONGODB_URI= #MongoDB URI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;MongoDB Setup (Using Docker)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;: If you don&#39;t have Docker installed, download and install it from the &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run MongoDB using Docker Container&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Option 2: use this if you want to have like a permanent storage in you so your data won&#39;t be lost or remove if you stop or remove your Docker container)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify the MONGODB_URI in the .env file&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dotenv&#34;&gt;MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the connection&lt;/strong&gt;: Open a new terminal and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see the MongoDB container running.&lt;/p&gt; &lt;p&gt;Docker Commands (Additional Info):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To stop the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker stop instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To start the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker start instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To remove the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker rm instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To remove the MongoDB container and its data: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker rm -v instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run the Instagram agent&lt;/strong&gt;: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Twitter agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run start:twitter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the GitHub agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run start:github&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/client&lt;/strong&gt;: Contains the main logic for interacting with social media platforms like Instagram.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/config&lt;/strong&gt;: Configuration files, including the logger setup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/utils&lt;/strong&gt;: Utility functions for handling errors, cookies, data saving, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/Agent&lt;/strong&gt;: Contains the AI agent logic and training scripts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/Agent/training&lt;/strong&gt;: Training scripts for the AI agent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/schema&lt;/strong&gt;: Schema definitions for AI-generated content and database models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/test&lt;/strong&gt;: Contains test data and scripts, such as example tweets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;The project uses a custom logger to log information, warnings, and errors. Logs are saved in the &lt;a href=&#34;http://_vscodecontentref_/3&#34;&gt;logs&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Error Handling&lt;/h2&gt; &#xA;&lt;p&gt;Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please fork the repository and submit a pull request with your changes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.google/tools/&#34;&gt;Google Generative AI&lt;/a&gt; for providing the AI models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer&#34;&gt;Puppeteer&lt;/a&gt; for browser automation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berstend/puppeteer-extra&#34;&gt;puppeteer-extra&lt;/a&gt; for additional plugins and enhancements.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/poml</title>
    <updated>2025-08-13T01:40:10Z</updated>
    <id>tag:github.com,2025-08-13:/microsoft/poml</id>
    <link href="https://github.com/microsoft/poml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prompt Orchestration Markup Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;POML: Prompt Orchestration Markup Language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;POML (Prompt Orchestration Markup Language)&lt;/strong&gt; is a novel markup language designed to bring structure, maintainability, and versatility to advanced prompt engineering for Large Language Models (LLMs). It addresses common challenges in prompt development, such as lack of structure, complex data integration, format sensitivity, and inadequate tooling. POML provides a systematic way to organize prompt components, integrate diverse data types seamlessly, and manage presentation variations, empowering developers to create more sophisticated and reliable LLM applications.&lt;/p&gt; &#xA;&lt;h2&gt;Demo Video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/b9WDcFsKixo&#34;&gt;&lt;img src=&#34;https://i3.ytimg.com/vi/b9WDcFsKixo/maxresdefault.jpg&#34; alt=&#34;The 5-minute guide to POML&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Structured Prompting Markup&lt;/strong&gt;: Employs an HTML-like syntax with semantic components such as &lt;code&gt;&amp;lt;role&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;task&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;example&amp;gt;&lt;/code&gt; to encourage modular design, enhancing prompt readability, reusability, and maintainability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Data Handling&lt;/strong&gt;: Incorporates specialized data components (e.g., &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;) that seamlessly embed or reference external data sources like text files, spreadsheets, and images, with customizable formatting options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Decoupled Presentation Styling&lt;/strong&gt;: Features a CSS-like styling system that separates content from presentation. This allows developers to modify styling (e.g., verbosity, syntax format) via &lt;code&gt;&amp;lt;stylesheet&amp;gt;&lt;/code&gt; definitions or inline attributes without altering core prompt logic, mitigating LLM format sensitivity.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integrated Templating Engine&lt;/strong&gt;: Includes a built-in templating engine with support for variables (&lt;code&gt;{{ }}&lt;/code&gt;), loops (&lt;code&gt;for&lt;/code&gt;), conditionals (&lt;code&gt;if&lt;/code&gt;), and variable definitions (&lt;code&gt;&amp;lt;let&amp;gt;&lt;/code&gt;) for dynamically generating complex, data-driven prompts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rich Development Toolkit&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;IDE Extension (Visual Studio Code)&lt;/strong&gt;: Provides essential development aids like syntax highlighting, context-aware auto-completion, hover documentation, real-time previews, inline diagnostics for error checking, and integrated interactive testing.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Software Development Kits (SDKs)&lt;/strong&gt;: Offers SDKs for Node.js (JavaScript/TypeScript) and Python for seamless integration into various application workflows and popular LLM frameworks.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a very simple POML example. Please put it in a file named &lt;code&gt;example.poml&lt;/code&gt;. Make sure it resides in the same directory as the &lt;code&gt;photosynthesis_diagram.png&lt;/code&gt; image file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;poml&amp;gt;&#xA;  &amp;lt;role&amp;gt;You are a patient teacher explaining concepts to a 10-year-old.&amp;lt;/role&amp;gt;&#xA;  &amp;lt;task&amp;gt;Explain the concept of photosynthesis using the provided image as a reference.&amp;lt;/task&amp;gt;&#xA;&#xA;  &amp;lt;img src=&#34;photosynthesis_diagram.png&#34; alt=&#34;Diagram of photosynthesis&#34; /&amp;gt;&#xA;&#xA;  &amp;lt;output-format&amp;gt;&#xA;    Keep the explanation simple, engaging, and under 100 words.&#xA;    Start with &#34;Hey there, future scientist!&#34;.&#xA;  &amp;lt;/output-format&amp;gt;&#xA;&amp;lt;/poml&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example defines a role and task for the LLM, includes an image for context, and specifies the desired output format. With the POML toolkit, the prompt can be easily rendered with a flexible format, and tested with a vision LLM.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio Code Extension&lt;/h3&gt; &#xA;&lt;p&gt;Install from &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=poml-team.poml&#34;&gt;Visual Studio Code Marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also install the extension manually by downloading the &lt;code&gt;.vsix&lt;/code&gt; file from our &lt;a href=&#34;https://github.com/microsoft/poml/releases&#34;&gt;GitHub releases page&lt;/a&gt; and installing it in VS Code via the Extensions view.&lt;/p&gt; &#xA;&lt;p&gt;Before testing prompts with the POML toolkit, make sure you have configured your preferred LLM model, API key, and endpoint. If these are not set, prompt testing will not work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To configure in Visual Studio Code:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the extension settings (open &#34;Settings&#34; and search for &#34;POML&#34;).&lt;/li&gt; &#xA; &lt;li&gt;Set your model provider (e.g., OpenAI, Azure, Google), API key, and endpoint URL in the POML section.&lt;/li&gt; &#xA; &lt;li&gt;Alternatively, you can add these settings directly to your &lt;code&gt;settings.json&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Node.js (via npm)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install pomljs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python (via pip)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install poml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For development or local installation, you might use &lt;code&gt;pip install -e .&lt;/code&gt; from a cloned repository.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed information on POML syntax, components, styling, templating, SDKs, and the VS Code extension, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/poml/main/docs&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learn More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Watch our Demo Video on YouTube:&lt;/strong&gt; &lt;a href=&#34;https://youtu.be/b9WDcFsKixo&#34;&gt;POML Introduction &amp;amp; Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read the Research Paper (coming soon):&lt;/strong&gt; For an in-depth understanding of POML&#39;s design, implementation, and evaluation, check out our paper: &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/poml/main/TBD&#34;&gt;Paper link TBD&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Trademarks&lt;/h2&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;h2&gt;Responsible AI&lt;/h2&gt; &#xA;&lt;p&gt;This project has been evaluated and certified to comply with the Microsoft Responsible AI Standard. The team will continue to monitor and maintain the repository, addressing any severe issues, including potential harms, if they arise. For more details, refer to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/poml/main/RAI_README&#34;&gt;Responsible AI Readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/poml/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apple/embedding-atlas</title>
    <updated>2025-08-13T01:40:10Z</updated>
    <id>tag:github.com,2025-08-13:/apple/embedding-atlas</id>
    <link href="https://github.com/apple/embedding-atlas" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embedding Atlas&lt;/h1&gt; &#xA;&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;üè∑Ô∏è &lt;strong&gt;Automatic data clustering &amp;amp; labeling:&lt;/strong&gt; Interactively visualize and navigate overall data structure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ü´ß &lt;strong&gt;Kernel density estimation &amp;amp; density contours:&lt;/strong&gt; Easily explore and distinguish between dense regions of data and outliers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üßä &lt;strong&gt;Order-independent transparency:&lt;/strong&gt; Ensure clear, accurate rendering of overlapping points.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üîç &lt;strong&gt;Real-time search &amp;amp; nearest neighbors:&lt;/strong&gt; Find similar data to a given query or existing data point.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üöÄ &lt;strong&gt;WebGPU implementation (with WebGL 2 fallback):&lt;/strong&gt; Fast, smooth performance (up to few million points) with modern rendering stack.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üìä &lt;strong&gt;Multi-coordinated views for metadata exploration:&lt;/strong&gt; Interactively link and filter data across metadata columns.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://apple.github.io/embedding-atlas&#34;&gt;https://apple.github.io/embedding-atlas&lt;/a&gt; for a demo and documentation.&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./packages/docs/assets/embedding-atlas-dark.png&#34; /&gt; &#xA; &lt;img alt=&#34;screenshot of Embedding Atlas&#34; src=&#34;https://raw.githubusercontent.com/apple/embedding-atlas/main/packages/docs/assets/embedding-atlas-light.png&#34; /&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;To use Embedding Atlas with Python:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install embedding-atlas&#xA;&#xA;embedding-atlas &amp;lt;your-dataset.parquet&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to the command line tool, Embedding Atlas is also available as a Jupyter widget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from embedding_atlas.widget import EmbeddingAtlasWidget&#xA;&#xA;# Show the Embedding Atlas widget for your data frame:&#xA;EmbeddingAtlasWidget(df)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, components from Embedding Atlas are also available in an npm package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install embedding-atlas&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { EmbeddingAtlas, EmbeddingView, Table } from &#34;embedding-atlas&#34;;&#xA;&#xA;// or with React:&#xA;import { EmbeddingAtlas, EmbeddingView, Table } from &#34;embedding-atlas/react&#34;;&#xA;&#xA;// or Svelte:&#xA;import { EmbeddingAtlas, EmbeddingView, Table } from &#34;embedding-atlas/svelte&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, please visit &lt;a href=&#34;https://apple.github.io/embedding-atlas/overview.html&#34;&gt;https://apple.github.io/embedding-atlas/overview.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;BibTeX&lt;/h2&gt; &#xA;&lt;p&gt;For the Embedding Atlas tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{ren2025embedding,&#xA;  title={Embedding Atlas: Low-Friction, Interactive Embedding Visualization},&#xA;  author={Donghao Ren and Fred Hohman and Halden Lin and Dominik Moritz},&#xA;  year={2025},&#xA;  eprint={2505.06386},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.HC},&#xA;  url={https://arxiv.org/abs/2505.06386},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the algorithm that automatically produces clusters and labels in the embedding view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{ren2025scalable,&#xA;  title={A Scalable Approach to Clustering Embedding Projections},&#xA;  author={Donghao Ren and Fred Hohman and Dominik Moritz},&#xA;  year={2025},&#xA;  eprint={2504.07285},&#xA;  archivePrefix={arXiv},&#xA;  primaryClass={cs.HC},&#xA;  url={https://arxiv.org/abs/2504.07285},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains multiple sub-packages:&lt;/p&gt; &#xA;&lt;p&gt;Frontend:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/component&lt;/code&gt;: The &lt;code&gt;EmbeddingView&lt;/code&gt; and &lt;code&gt;EmbeddingViewMosaic&lt;/code&gt; components.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/table&lt;/code&gt;: The &lt;code&gt;Table&lt;/code&gt; component.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/viewer&lt;/code&gt;: The frontend application for visualizing embedding and other columns. It also provides the &lt;code&gt;EmbeddingAtlas&lt;/code&gt; component that can be embedded in other applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/density-clustering&lt;/code&gt;: The density clustering algorithm, written in Rust.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/umap-wasm&lt;/code&gt;: An implementation of UMAP algorithm in WebAssembly (with the &lt;a href=&#34;https://github.com/libscran/umappp&#34;&gt;umappp&lt;/a&gt; C++ library).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/embedding-atlas&lt;/code&gt;: The &lt;code&gt;embedding-atlas&lt;/code&gt; package that get published. It imports all of the above and exposes their API in a single package.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/backend&lt;/code&gt;: A Python package named &lt;code&gt;embedding-atlas&lt;/code&gt; that provides the &lt;code&gt;embedding-atlas&lt;/code&gt; command line tool.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/docs&lt;/code&gt;: The documentation website.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, please visit &lt;a href=&#34;https://apple.github.io/embedding-atlas/develop.html&#34;&gt;https://apple.github.io/embedding-atlas/develop.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is released under the &lt;a href=&#34;https://raw.githubusercontent.com/apple/embedding-atlas/main/LICENSE&#34;&gt;&lt;code&gt;MIT license&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>