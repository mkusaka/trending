<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-17T01:47:46Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BuilderIO/gpt-crawler</title>
    <updated>2023-11-17T01:47:46Z</updated>
    <id>tag:github.com,2023-11-17:/BuilderIO/gpt-crawler</id>
    <link href="https://github.com/BuilderIO/gpt-crawler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Crawl a site to generate knowledge files to create your own custom GPT from a URL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT Crawler&lt;/h1&gt; &#xA;&lt;p&gt;Crawl a site to generate knowledge files to create your own custom GPT from one or multiple URLs&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/feb8763a-152b-4708-9c92-013b5c70d2f2&#34; alt=&#34;Gif showing the crawl run&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/g/g-kywiqipmR-builder-io-assistant&#34;&gt;Here is a custom GPT&lt;/a&gt; that I quickly made to help answer questions about how to use and integrate &lt;a href=&#34;https://www.builder.io&#34;&gt;Builder.io&lt;/a&gt; by simply providing the URL to the Builder docs.&lt;/p&gt; &#xA;&lt;p&gt;This project crawled the docs and generated the file that I uploaded as the basis for the custom GPT.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/g/g-kywiqipmR-builder-io-assistant&#34;&gt;Try it out yourself&lt;/a&gt; by asking questions about how to integrate Builder.io into a site.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that you may need a paid ChatGPT plan to access this feature&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Be sure you have Node.js &amp;gt;= 16 installed&lt;/p&gt; &#xA;&lt;h3&gt;Clone the repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/builderio/gpt-crawler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install Dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not have Playwright installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configure the crawler&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/BuilderIO/gpt-crawler/main/config.ts&#34;&gt;config.ts&lt;/a&gt; and edit the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;selectors&lt;/code&gt; properties to match your needs.&lt;/p&gt; &#xA;&lt;p&gt;E.g. to crawl the Builder.io docs to make our custom GPT you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export const config: Config = {&#xA;  url: &#34;https://www.builder.io/c/docs/developers&#34;,&#xA;  match: &#34;https://www.builder.io/c/docs/**&#34;,&#xA;  selector: `.docs-builder-container`,&#xA;  maxPagesToCrawl: 50,&#xA;  outputFileName: &#34;output.json&#34;,&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the top of the file for the type definition for what you can configure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;type Config = {&#xA;  /** URL to start the crawl */&#xA;  url: string;&#xA;  /** Pattern to match against for links on a page to subsequently crawl */&#xA;  match: string;&#xA;  /** Selector to grab the inner text from */&#xA;  selector: string;&#xA;  /** Don&#39;t crawl more than this many pages */&#xA;  maxPagesToCrawl: number;&#xA;  /** File name for the finished data */&#xA;  outputFileName: string;&#xA;  /** Optional function to run for each page found */&#xA;  onVisitPage?: (options: {&#xA;    page: Page;&#xA;    pushData: (data: any) =&amp;gt; Promise&amp;lt;void&amp;gt;;&#xA;  }) =&amp;gt; Promise&amp;lt;void&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run your crawler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Upload your data to OpenAI&lt;/h3&gt; &#xA;&lt;p&gt;The crawl will generate a file called &lt;code&gt;output.json&lt;/code&gt; at the root of this project. Upload that &lt;a href=&#34;https://platform.openai.com/docs/assistants/overview&#34;&gt;to OpenAI&lt;/a&gt; to create your custom assistant or custom GPT.&lt;/p&gt; &#xA;&lt;h4&gt;Create a custom GPT&lt;/h4&gt; &#xA;&lt;p&gt;Use this option for UI access to your generated knowledge that you can easily share with others&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: you may need a paid ChatGPT plan to create and use custom GPTs right now&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/&#34;&gt;https://chat.openai.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click your name in the bottom left corner&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;My GPTs&#34; in the menu&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;Create a GPT&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;Configure&#34;&lt;/li&gt; &#xA; &lt;li&gt;Under &#34;Knowledge&#34; choose &#34;Upload a file&#34; and upload the file you generated&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/22f27fb5-6ca5-4748-9edd-6bcf00b408cf&#34; alt=&#34;Gif of how to upload a custom GPT&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Create a custom assistant&lt;/h4&gt; &#xA;&lt;p&gt;Use this option for API access to your generated knowledge that you can integrate into your product.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://platform.openai.com/assistants&#34;&gt;https://platform.openai.com/assistants&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;+ Create&#34;&lt;/li&gt; &#xA; &lt;li&gt;Choose &#34;upload&#34; and upload the file you generated&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/BuilderIO/gpt-crawler/assets/844291/06e6ad36-e2ba-4c6e-8d5a-bf329140de49&#34; alt=&#34;Gif of how to upload to an assistant&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Know how to make this project better? Send a PR!&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.builder.io/m/developers&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/844291/230786554-eb225eeb-2f6b-4286-b8c2-535b1131744a.png&#34;&gt; &#xA;   &lt;img width=&#34;250&#34; alt=&#34;Made with love by Builder.io&#34; src=&#34;https://user-images.githubusercontent.com/844291/230786555-a58479e4-75f3-4222-a6eb-74c5af953eac.png&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>all-in-aigc/gpts-works</title>
    <updated>2023-11-17T01:47:46Z</updated>
    <id>tag:github.com,2023-11-17:/all-in-aigc/gpts-works</id>
    <link href="https://github.com/all-in-aigc/gpts-works" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Third-party GPTs store&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPTs Works&lt;/h1&gt; &#xA;&lt;p&gt;GPTs Works is a Third-party GPTs store.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This project consists of the following three partsðŸ‘‡&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Website&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;code located in the &lt;code&gt;web&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;you can view a live demo at: &lt;a href=&#34;https://gpts.works&#34;&gt;https://gpts.works&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ph-files.imgix.net/45d5eb41-849f-415b-91da-079b6e32946e.png?auto=compress&amp;amp;codec=mozjpeg&amp;amp;cs=strip&amp;amp;auto=format&amp;amp;fit=max&amp;amp;dpr=2&#34; alt=&#34;Website&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Index System&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;code located in the &lt;code&gt;index&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;index system is used for searching GPTs with vector.&lt;/p&gt; &#xA;&lt;p&gt;there is a GPTs built with index system: &lt;a href=&#34;https://chat.openai.com/g/g-EBKM6RsBl-gpts-works&#34;&gt;https://chat.openai.com/g/g-EBKM6RsBl-gpts-works&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ph-files.imgix.net/f12174a9-085c-42d0-8f0d-06013cd17c7b.png?auto=compress&amp;amp;codec=mozjpeg&amp;amp;cs=strip&amp;amp;auto=format&amp;amp;fit=max&amp;amp;dpr=2&#34; alt=&#34;GPTs&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Browser Extension&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;code located in the &lt;code&gt;extension&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;browser extension is used to show Third-party GPTs beside ChatGPT Explore page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ph-files.imgix.net/e43df90d-f55f-4dee-b121-5051710397bd.png?auto=compress&amp;amp;codec=mozjpeg&amp;amp;cs=strip&amp;amp;auto=format&amp;amp;fit=max&amp;amp;dpr=2&#34; alt=&#34;Extension&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;: used for deploying website&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vercel.com/docs/storage/vercel-postgres&#34;&gt;Vercel Storage Postgres&lt;/a&gt;: used for storing data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.zilliz.com/&#34;&gt;Zilliz Cloud&lt;/a&gt;: used for vector storing and searching&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;h3&gt;Clone project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/all-in-aigc/gpts-works.git path-to-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Prepare data&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;create table in your postgres database with sql:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE gpts (&#xA;    id SERIAL PRIMARY KEY,&#xA;    uuid VARCHAR(255) UNIQUE NOT NULL,&#xA;    org_id VARCHAR(255),&#xA;    name VARCHAR(255),&#xA;    description TEXT,&#xA;    avatar_url TEXT,&#xA;    short_url VARCHAR(255),&#xA;    author_id VARCHAR(255),&#xA;    author_name VARCHAR(255),&#xA;    created_at timestamptz,&#xA;    updated_at timestamptz,&#xA;    detail JSON,&#xA;    index_updated_at INT NOT NULL DEFAULT 0&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;insert your own GPTs data into your postgres database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Start with Website&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;locate a .env file in dir &lt;code&gt;path-to-project/web&lt;/code&gt; with content:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;POSTGRES_URL=&#34;postgres://default:xxx@xxx.postgres.vercel-storage.com/verceldb&#34;&#xA;&#xA;INDEX_API_BASE_URI=&#34;http://127.0.0.1:8068&#34;&#xA;INDEX_API_KEY=&#34;gsk-xxx&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;start web server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;make dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;preview website&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;open &lt;code&gt;http://localhost:8067&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Start with Index System&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;locate a .env file in &lt;code&gt;path-to-project/index&lt;/code&gt; with content&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;DATABASE_URL=postgres://default:xxx@xxx.postgres.vercel-storage.com:5432/verceldb&#xA;&#xA;AZURE_API_KEY=xxx  &#xA;AZURE_API_BASE=https://xxx.openai.azure.com/&#xA;AZURE_API_VERSION=2023-07-01-preview&#xA;AZURE_LLM_MODEL=gpt-35-turbo-16k&#xA;AZURE_EMBED_MODEL=text-embedding-ada-002&#xA;&#xA;STORE_TYPE=zilliz&#xA;STORE_URI=https://xxx.zillizcloud.com&#xA;STORE_TOKEN=xxx&#xA;STORE_DIM=1536&#xA;STORE_COLLECTION=gpts&#xA;&#xA;INDEX_API_KEY=gsk-xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;start api server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;make dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;build index for gpts data&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -X POST -H &#34;Authorization: Bearer gsk-xxx&#34; http://127.0.0.1:8068/gpts/index &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;search gpts from index&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -X POST -H &#34;Authorization: Bearer gsk-xxx&#34; -H &#34;Content-Type: application/json&#34; -d &#39;{&#34;question&#34;: &#34;What GPTs are used for coding?&#34;}&#39; http://127.0.0.1:8068/gpts/index &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start with Extension&lt;/h3&gt; &#xA;&lt;p&gt;goto &lt;code&gt;path-to-project/extension&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;install dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;start server&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;make dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;debug extension&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;open &lt;code&gt;chrome://extensions/&lt;/code&gt;, click &lt;code&gt;Load unpacked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gptshunter.com&#34;&gt;GPTs Hunter&lt;/a&gt; for sharing gpts-data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vercel/next.js&#34;&gt;next.js&lt;/a&gt; for web deployment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;fastapi&lt;/a&gt; for building index system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlasmoHQ/plasmo&#34;&gt;plasmo&lt;/a&gt; for browser extension development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;if this project is helpful to you, buy me a coffeeðŸ˜„&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/idoubi&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AntonioErdeljac/next13-trello</title>
    <updated>2023-11-17T01:47:46Z</updated>
    <id>tag:github.com,2023-11-17:/AntonioErdeljac/next13-trello</id>
    <link href="https://github.com/AntonioErdeljac/next13-trello" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fullstack Trello Clone: Next.js 14, Server Actions, React, Prisma, Stripe, Tailwind, MySQL&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/AntonioErdeljac/next13-trello/assets/23248726/fd260249-82fa-4588-a67a-69bb4eb09067&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a repository for Fullstack Trello Clone: Next.js 14, Server Actions, React, Prisma, Stripe, Tailwind, MySQL&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pRybm9lXW2c&#34;&gt;VIDEO TUTORIAL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Key Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auth&lt;/li&gt; &#xA; &lt;li&gt;Organizations / Workspaces&lt;/li&gt; &#xA; &lt;li&gt;Board creation&lt;/li&gt; &#xA; &lt;li&gt;Unsplash API for random beautiful cover images&lt;/li&gt; &#xA; &lt;li&gt;Activity log for entire organization&lt;/li&gt; &#xA; &lt;li&gt;Board rename and delete&lt;/li&gt; &#xA; &lt;li&gt;List creation&lt;/li&gt; &#xA; &lt;li&gt;List rename, delete, drag &amp;amp; drop reorder and copy&lt;/li&gt; &#xA; &lt;li&gt;Card creation&lt;/li&gt; &#xA; &lt;li&gt;Card description, rename, delete, drag &amp;amp; drop reorder and copy&lt;/li&gt; &#xA; &lt;li&gt;Card activity log&lt;/li&gt; &#xA; &lt;li&gt;Board limit for every organization&lt;/li&gt; &#xA; &lt;li&gt;Stripe subscription for each organization to unlock unlimited boards&lt;/li&gt; &#xA; &lt;li&gt;Landing page&lt;/li&gt; &#xA; &lt;li&gt;MySQL DB&lt;/li&gt; &#xA; &lt;li&gt;Prisma ORM&lt;/li&gt; &#xA; &lt;li&gt;shadcnUI &amp;amp; TailwindCSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Node version 18.x.x&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cloning the repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/AntonioErdeljac/next13-trello.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install packages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup .env file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=&#xA;CLERK_SECRET_KEY=&#xA;NEXT_PUBLIC_CLERK_SIGN_IN_URL=&#xA;NEXT_PUBLIC_CLERK_SIGN_UP_URL=&#xA;NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=&#xA;NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=&#xA;&#xA;DATABASE_URL=&#xA;&#xA;NEXT_PUBLIC_UNSPLASH_ACCESS_KEY=&#xA;&#xA;STRIPE_API_KEY=&#xA;&#xA;NEXT_PUBLIC_APP_URL=&#xA;&#xA;STRIPE_WEBHOOK_SECRET=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setup Prisma&lt;/h3&gt; &#xA;&lt;p&gt;Add MySQL Database (I used PlanetScale)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx prisma generate&#xA;npx prisma db push&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start the app&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available commands&lt;/h2&gt; &#xA;&lt;p&gt;Running commands with npm &lt;code&gt;npm run [command]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;command&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Starts a development instance of the app&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>