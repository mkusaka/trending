<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-12T01:56:27Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>software-mansion/react-native-reanimated</title>
    <updated>2022-08-12T01:56:27Z</updated>
    <id>tag:github.com,2022-08-12:/software-mansion/react-native-reanimated</id>
    <link href="https://github.com/software-mansion/react-native-reanimated" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React Native&#39;s Animated library reimplemented&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16062886/117443145-ff868480-af37-11eb-8680-648bccf0d0ce.png&#34; alt=&#34;React Native Reanimated by Software Mansion&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h3&gt;React Native&#39;s Animated library reimplemented&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Reanimated 2 is here! Check out our &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/&#34;&gt;documentation page&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;React Native Reanimated provides a more comprehensive, low level abstraction for the Animated library API to be built on top of and hence allow for much greater flexibility especially when it comes to gesture based interactions.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation&#34;&gt;installation&lt;/a&gt; section of our docs for the detailed installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Fabric&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to use &lt;code&gt;react-native-reanimated&lt;/code&gt; with Fabric architecture, head over to &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/README-Fabric.md&#34;&gt;Fabric README&lt;/a&gt;. Instructions on how to run Fabric Example within this repo can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/FabricExample/README.md&#34;&gt;FabricExample README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our dedicated documentation page for info about this library, API reference and more: &lt;a href=&#34;https://docs.swmansion.com/react-native-reanimated/docs/&#34;&gt;https://docs.swmansion.com/react-native-reanimated/docs/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The source code for the example (showcase) app is under the &lt;a href=&#34;https://github.com/software-mansion/react-native-reanimated/raw/main/Example/&#34;&gt;&lt;code&gt;Example/&lt;/code&gt;&lt;/a&gt; directory. If you want to play with the API but don&#39;t feel like trying it on a real app, you can run the example project. Check Example/ directory README for installation instructions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reanimated library is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/software-mansion/react-native-reanimated/main/LICENSE&#34;&gt;The MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project has been built and is maintained thanks to the support from &lt;a href=&#34;https://shopify.com&#34;&gt;Shopify&lt;/a&gt;, &lt;a href=&#34;https://expo.io&#34;&gt;Expo.io&lt;/a&gt; and &lt;a href=&#34;https://swmansion.com&#34;&gt;Software Mansion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shopify.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/8085?v=3&amp;amp;s=100&#34; alt=&#34;shopify&#34; title=&#34;Shopify.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://expo.io&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/12504344?v=3&amp;amp;s=100&#34; alt=&#34;expo&#34; title=&#34;Expo.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://swmansion.com&#34;&gt;&lt;img src=&#34;https://logo.swmansion.com/logo?color=white&amp;amp;variant=desktop&amp;amp;width=150&amp;amp;tag=react-native-reanimated-github&#34; alt=&#34;swm&#34; title=&#34;Software Mansion&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Uniswap/web3-react</title>
    <updated>2022-08-12T01:56:27Z</updated>
    <id>tag:github.com,2022-08-12:/Uniswap/web3-react</id>
    <link href="https://github.com/Uniswap/web3-react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, maximally extensible, dependency minimized framework for building modern Ethereum dApps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;web3-react (beta)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Uniswap/web3-react/actions/workflows/CI.yml&#34;&gt;&lt;img src=&#34;https://github.com/Uniswap/web3-react/actions/workflows/CI.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Looking for the prior version of this library? It&#39;s available on the &lt;a href=&#34;https://github.com/Uniswap/web3-react/tree/v6&#34;&gt;v6 branch&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://web3-react-mu.vercel.app/&#34;&gt;Example&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is a hosted version of &lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/example-next&#34;&gt;packages/example-next&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Size&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/types&#34;&gt;&lt;code&gt;@web3-react/types&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/types/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/types/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/types@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/types/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/store&#34;&gt;&lt;code&gt;@web3-react/store&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/store/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/store/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/store@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/store/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/core&#34;&gt;&lt;code&gt;@web3-react/core&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/core/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/core/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/core@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/core/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Connectors&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/eip1193&#34;&gt;&lt;code&gt;@web3-react/eip1193&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/eip1193/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/eip1193/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/eip1193@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/eip1193/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ethereum/EIPs/raw/master/EIPS/eip-1193.md&#34;&gt;EIP-1193&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/empty&#34;&gt;&lt;code&gt;@web3-react/empty&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/empty/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/empty/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/empty@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/empty/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/gnosis-safe&#34;&gt;&lt;code&gt;@web3-react/gnosis-safe&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/gnosis-safe/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/gnosis-safe/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/gnosis-safe@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/gnosis-safe/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gnosis-safe.io/&#34;&gt;Gnosis Safe&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/metamask&#34;&gt;&lt;code&gt;@web3-react/metamask&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/metamask/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/metamask/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/metamask@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/metamask/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://metamask.io/&#34;&gt;MetaMask&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/network&#34;&gt;&lt;code&gt;@web3-react/network&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/network/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/network/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/network@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/network/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/url&#34;&gt;&lt;code&gt;@web3-react/url&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/url/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/url/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/url@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/url/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/walletconnect&#34;&gt;&lt;code&gt;@web3-react/walletconnect&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/walletconnect/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/walletconnect/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/walletconnect@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/walletconnect/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://walletconnect.org/&#34;&gt;WalletConnect&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/coinbase-wallet&#34;&gt;&lt;code&gt;@web3-react/coinbase-wallet&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/@web3-react/coinbase-wallet/v/beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@web3-react/coinbase-wallet/beta.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bundlephobia.com/result?p=@web3-react/coinbase-wallet@beta&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/@web3-react/coinbase-wallet/beta.svg?sanitize=true&#34; alt=&#34;minzip&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.cloud.coinbase.com/wallet-sdk/docs&#34;&gt;Coinbase Wallet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn bootstrap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to compiling each package in watch mode, this will also spin up &lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/example-next&#34;&gt;packages/example-next&lt;/a&gt; on &lt;a href=&#34;http://localhost:3000/&#34;&gt;localhost:3000&lt;/a&gt;. (It will also spin up &lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/example-cra&#34;&gt;packages/example-cra&lt;/a&gt; on &lt;a href=&#34;http://localhost:3001/&#34;&gt;localhost:3001&lt;/a&gt;, but this is just a skeleton app for testing compatibility.)&lt;/p&gt; &#xA;&lt;h2&gt;Run Tests&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn test --watch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Add a Dependency&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn lerna add &amp;lt;DEPENDENCY&amp;gt; --scope &amp;lt;PACKAGE&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Remove a Dependency&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete the relevant &lt;code&gt;package.json&lt;/code&gt; entry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Because of a &lt;a href=&#34;https://github.com/lerna/lerna/issues/1883&#34;&gt;lerna bug&lt;/a&gt;, it&#39;s not possible to prune &lt;code&gt;yarn.lock&lt;/code&gt; programmatically, so regenerate it manually:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn lerna exec &#34;rm -f yarn.lock&#34; --scope &amp;lt;SUBPACKAGE&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn clean --scope &amp;lt;SUBPACKAGE&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn bootstrap&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Publish&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn lerna publish [--dist-tag]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;This version of web3-react is still in beta, so unfortunately documentation is pretty sparse at the moment. &lt;a href=&#34;https://raw.githubusercontent.com/Uniswap/web3-react/main/packages/example-next&#34;&gt;packages/example-next&lt;/a&gt;, TSDoc comments, and the source code itself are the best ways to get an idea of what&#39;s going on. More thorough documentation is a priority as development continues!&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading Connector Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Some connectors have one or more dependencies that are specific to the connection method in question. For example, the walletconnect connector relies on &lt;code&gt;@walletconnect/ethereum-provider&lt;/code&gt; package to handle a lot of the connection logic. Often, you may wish to upgrade to the latest version of a client package, to take advantage of the latest features. web3-react makes the process of upgrading client packages fairly painless by specifying them as &lt;a href=&#34;https://docs.npmjs.com/cli/v8/configuring-npm/package-json#peerdependencies&#34;&gt;&lt;code&gt;peerDependencies&lt;/code&gt;&lt;/a&gt;. This means that you have to explicitly install client packages, and therefore may transparently switch between any version that agrees with the semver specified in the connector (usually any matching major).&lt;/p&gt; &#xA;&lt;h2&gt;Third-Party Connectors&lt;/h2&gt; &#xA;&lt;p&gt;The decision to publish a connector under the @web3-react namespace is fully up to the discretion of the team. However, third-party connectors are always welcome! This library was designed to be highly modular, and you should be able to draw inspiration from the existing connectors to write your own. That connector can live inside your codebase, or even be published as a standalone package. A selection of third-party connectors that have widespread usage may be featured below, PRs modifying this list are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading from v6&lt;/h2&gt; &#xA;&lt;p&gt;While the internals of web3-react have changed fairly dramatically between v6 and v8, the hope is that usage don&#39;t have to change too much when upgrading. Once you&#39;ve migrated to the new connectors and state management patterns, you should be able to use the hooks defined in @web3-react/core, in particular &lt;code&gt;useWeb3React&lt;/code&gt; (or &lt;code&gt;usePriorityWeb3React&lt;/code&gt;), as more or less drop-in replacements for the v6 hooks. The big benefit in v8 is that hooks are now per-connector, as opposed to global, so no more juggling between connectors/multiple roots!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Zaarrg/TTVDropBot</title>
    <updated>2022-08-12T01:56:27Z</updated>
    <id>tag:github.com,2022-08-12:/Zaarrg/TTVDropBot</id>
    <link href="https://github.com/Zaarrg/TTVDropBot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twitch Drop Bot. Automaticlly Farms every Twitch Drop available like Rust for ya and now also your Custom Channel&#39;s&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a name=&#34;logo&#34; href=&#34;https://github.com/Zaarrg/TTVDropBot&#34;&gt;&lt;img src=&#34;https://i.imgur.com/2WtgNe4.png&#34; alt=&#34;Bear Stone Smart Home&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; TTVDropBot &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Farms automatically Twitch Drops for you!&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Zaarrg/TTVDropBot?color=333&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;@Zaarrg/TTVDropBot issues&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/y/Zaarrg/TTVDropBot?color=blue&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;@Zaarrg/TTVDropBot pull requests&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/pulls&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/Zaarrg/TTVDropBot?color=blue&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;Zaarrg/TTVDropBot requests&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://discord.gg/rV26FZ2upF&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/728708207907962900?color=7289DA&amp;amp;label=Support&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/Zaarrg/TTVDropBot/tree/main&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Deploy-Deploy?color=7056BF&amp;amp;label=Heroku&amp;amp;logo=Heroku&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/9icOyNB.png&#34; alt=&#34;TTVDropBot&#34; title=&#34;TTVDropBot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤔 &lt;strong&gt;What is this Twitch Bot all about?&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Makes your twitch drop experience as easy as possible.&lt;/li&gt; &#xA; &lt;li&gt;No need to watch the stream in a browser, fully uses twitch inner gql.&lt;/li&gt; &#xA; &lt;li&gt;No need to care about who is online and when.&lt;/li&gt; &#xA; &lt;li&gt;Saves your twitch session providing you autologin.&lt;/li&gt; &#xA; &lt;li&gt;Can watch every Twitch Drop / Campaign available.&lt;/li&gt; &#xA; &lt;li&gt;Automatically claims your Drops.&lt;/li&gt; &#xA; &lt;li&gt;Switches automatically to other games or drops if drop is claimed/claimable or offline.&lt;/li&gt; &#xA; &lt;li&gt;Send Discord Webhooks to your server.&lt;/li&gt; &#xA; &lt;li&gt;Host 24/7 on heroku.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;⚡ &lt;strong&gt;Installation&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the windows executable from the &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/tree/build&#34;&gt;build branch&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/releases&#34;&gt;release page&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Move the executable to a folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Execute&lt;/strong&gt; the &lt;code&gt;TTVDropBot.exe&lt;/code&gt;. The &lt;strong&gt;settings&lt;/strong&gt; and &lt;strong&gt;twitch-session&lt;/strong&gt; will be generated right beside the executable.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Linux&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the linux executable from the &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/tree/build&#34;&gt;build branch&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/releases&#34;&gt;release page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Move the executable to a folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Give the &lt;code&gt;TTVDropBot-linux-x64&lt;/code&gt; file permission to execute via chmod if needed.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x ./TTVDropBot-linux-x64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execute&lt;/strong&gt; the &lt;code&gt;TTVDropBot-linux-x64&lt;/code&gt;. The &lt;strong&gt;settings&lt;/strong&gt; and &lt;strong&gt;twitch-session&lt;/strong&gt; will be generated right beside the executable.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./TTVDropBot-linux-x64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;b&gt;Using Bot with No GUI - Only Command Line&lt;/b&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the linux executable from the &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/tree/build&#34;&gt;build branch&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/releases&#34;&gt;release page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Drag and Drop a &lt;code&gt;settings.json&lt;/code&gt; and &lt;code&gt;twitch-session.json&lt;/code&gt; file right beside the executable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you have set &lt;code&gt;displayless&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your settings.json&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execute&lt;/strong&gt; the &lt;code&gt;TTVDropBot-linux-x64&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./TTVDropBot-linux-x64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;⚠️ &lt;em&gt;If you want to specifiy wich games to watch use the &lt;strong&gt;Prioritylist&lt;/strong&gt; setting&lt;/em&gt; ⚠️&lt;/p&gt; &#xA;&lt;p&gt;⚠️ &lt;em&gt;If you want to watch Custom Channels drag and drop a &lt;code&gt;customchannels.json&lt;/code&gt; to your executable location and set &lt;code&gt;ForceCustomChannel&lt;/code&gt; in settings.json to &lt;code&gt;true&lt;/code&gt;&lt;/em&gt; ⚠️&lt;/p&gt; &#xA;&lt;p&gt;⚠️ &lt;em&gt;If you can&#39;t seem to get any progress on drops &#34;always stuck&#34; try loging in instead of copying twitch-session.json.&lt;/em&gt; ⚠️&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Npm&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot&#34;&gt;Repository&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Zaarrg/TTVDropBot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install NPM packages.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd TTVDropBot/&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the bot via npm scripts.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run start:production&#xA;OR&#xA;npm run start:dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Docker&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Get your auth token&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -it ghcr.io/zaarrg/ttvdropbot/ttvdropbot:latest node ./build/index.js --showtoken&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Login to Twitch, copy your auth token, and then exit the container with &lt;code&gt;Ctrl + C&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create the container&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name ttvdropbot \&#xA;-e ttvdropbot_displayless=true \&#xA;-e ttvdropbot_token=TokenFromStep1 \&#xA;-e ttvdropbot_games=&#34;Sea_of_Thieves Rust Lost_Ark No_Man&#39;s_Sky&#34; \&#xA;-e ttvdropbot_autoclaim=true \&#xA;ghcr.io/zaarrg/ttvdropbot/ttvdropbot:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📚 &lt;strong&gt;How to use the Bot?&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Step by Step Usage: Twitch Drops&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select the way you want to Log in into your twitch account.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ⚠️ If you cant login directly because of CAPTCHA use the browser method. ⚠️&lt;br&gt; ⚠️ Only Chromium Browsers are supported like Brave and Chrome . ⚠️ &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ra3zm1x.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select &lt;code&gt;Twitch Drops&lt;/code&gt; to watch a Twitch Campaign or &lt;code&gt;Custom Channels&lt;/code&gt; if you want to add your own channels. Refer to &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/#step-by-step-usage-custom-channels&#34;&gt;Step by Step Usage: Custom Channels&lt;/a&gt; for those.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/DRqIkpz.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select the campaign you want to start watching. If you want to only watch certain campaign and not all refer to &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/#prioritylist&#34;&gt;Settings: Priority list&lt;/a&gt;&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/CMuV729.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select the Drop you want to start watching.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/DzB5qjX.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;🎉 Enjoy! You are successfully watching your drop.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/iNmvIZc.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Step by Step Usage: Custom Channels&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select &lt;code&gt;Custom Channels&lt;/code&gt; to start watching them.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/DRqIkpz.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Fill in the needed information to add a Channel. They can always be modified in the &lt;code&gt;customchannel.json&lt;/code&gt;&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/kBabjJL.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Select the Channel you want to start. The bot will switch between the Custom Channels, if one goes offline.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/AZt3xpU.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;🎉 Enjoy! You are successfully watching your Custom Channel.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/k95h9Tu.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Step by Step Usage: Heroku&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ⚠️ Only Recommended for advanced users. ⚠️&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Click on the Deploy to Heroku Button at the top of the Readme&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/1ll6yjV.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Login if necessary, and choose any app name you want, select your region and click Deploy app&lt;/b&gt;&lt;br&gt; &lt;b&gt;After that let Heroku go through the build process and then click on Manage App&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/oIm3m52.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Go to the Resources tab and disable the web dyno and enable the worker instead&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/5XeKXRC.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Click on more in the top right corner and then on Run console.&lt;/b&gt;&lt;br&gt; &lt;b&gt;Type in bash and click Run.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Q7mArVd.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Now run the command &lt;code&gt;node ./build/index.js --showtoken&lt;/code&gt; in the Terminal.&lt;/b&gt;&lt;br&gt; &lt;b&gt;Login Directly via command Line, until you see your auth token and copy it.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/qfJV0OQ.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;6. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Close the Terminal and go to Settings then Reveal Config Vars&lt;/b&gt;&lt;br&gt; &lt;b&gt;Now type in as key &lt;code&gt;ttvdropbot_token&lt;/code&gt; and as value your copied token and click add&lt;/b&gt;&lt;br&gt; &lt;b&gt;You can find more environment variables&lt;/b&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot#%EF%B8%8F-environment-variables&#34;&gt;here&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EnB36ih.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;7. Step&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;🎉 Thats it Enjoy! You are successfully watching.&lt;/b&gt;&lt;br&gt; &lt;b&gt;To check if its working click on more in the top right corner then view logs.&lt;/b&gt;&lt;br&gt; &lt;b&gt;Give it some time to start up, and you should see the bot working.&lt;/b&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/7Jrsojx.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📝 &lt;strong&gt;Settings&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Down below you can find the settings Variables and what they do.&lt;/p&gt; &#xA;&lt;h3&gt;Chromeexe&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The path of your Browser: &lt;code&gt;Linux: google-chrome | Windows: C:\Program Files\Google\Chrome\Application\chrome.exe&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;UserDataPath&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Providing a userdatapath, will give the loginpage the option to use cookies out of your browser. Option not really needed anymore.&lt;/li&gt; &#xA; &lt;li&gt;You can find the UserdataPath under &lt;code&gt;chrome://version&lt;/code&gt; then under &lt;code&gt;Profile Path&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Webhook&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Discord Webhook URL: &lt;code&gt; &lt;a href=&#34;https://discord.com/api/webhooks/&#34;&gt;https://discord.com/api/webhooks/&lt;/a&gt;... &lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;WebHookEvents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set what events should be send via webhook.&lt;/li&gt; &#xA; &lt;li&gt;Defaults to: &lt;code&gt;[&#34;requestretry&#34;, &#34;claim&#34;, &#34;newdrop&#34;, &#34;offline&#34;, &#34;newgame&#34;, &#34;get&#34;, &#34;getresult&#34;, &#34;progress&#34;, &#34;start&#34;, &#34;error&#34;, &#34;warn&#34;, &#34;info&#34;]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will log important values to the console for debugging.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Displayless&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Give the ability to use the bot fully automated with no user input needed. Especially useful for gui-less systems. See &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/#ubuntu&#34;&gt;Ubuntu - No Gui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ForceCustomChannel&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Force the bot to watch Custom Channels, only useful for display-less mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ProgressCheckInterval&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The time in ms, in what interval the progress should be checked. Recommended is &lt;code&gt;60000 ms - 60 s&lt;/code&gt; anything under could cause twitch blocking your request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RetryDelay&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The time in ms, in what interval failed requests should be retried. Recommended is &lt;code&gt;60000 ms - 60 s&lt;/code&gt; anything under could cause twitch blocking your request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;WaitforChannels&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If set to false the Bot will no longer wait 5 Minutes for new Channels to come online. It will switch to another game instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prioritylist&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A list of Games the bot should watch / prioritize. Only Provide games with active Drop Campaigns in this Format: &lt;code&gt;[&#34;Rust&#34;,&#34;Fortnite&#34;, &#34;Elite: Dangerous&#34;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can get the valid name from: &lt;code&gt;https://www.twitch.tv/directory&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If provided the bot will only watch the games listed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AutoClaim&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow the bot to autoClaim or not&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LogToFile&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log the Console to a file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✏️ &lt;strong&gt;Start Arguments&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;All available start Arguments, basically everything which is also in the &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot#-settings&#34;&gt;settings.json&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./TTVDropBot.exe --help&#xA;&#xA;Usage: ./TTVDropBot or index.js --arg...&#xA;&#xA;Options:&#xA;--help                              Show help. [boolean]&#xA;--version                           Show version number. [boolean]&#xA;-c, --chrome                        The path to your Chrome executable. [string]&#xA;-u, --userdata                      The path to your userdata folder location. [string]&#xA;--webhook, --wh                     The Discord Webhook URL. [string]&#xA;--webhookevents                     Set what events should be send via webhook. [array]&#xA;-i, --interval                      The progress interval in ms. [number]&#xA;--retryinterval, --retry            The retry interval in ms. [number]&#xA;-g, --games                         The Games the bot should watch. [array]&#xA;--token                             Your twitch auth_token. [string]&#xA;-d, --debug                         Enable Debug logging. [boolean]&#xA;--displayless, --dl                 Enable Displayless mode. [boolean]&#xA;--forcecustomchannel                Force Custom Channels. Only useful for&#xA;                                    display-less mode. [boolean]&#xA;--waitforchannels, --waitonline     Disable waitforchannels, forcing the bot to not wait &#xA;                                    for other channels with drops instead switch the game. [boolean]&#xA;--autoclaim                         Enable autoclaim. [boolean]&#xA;--log                               Enable logging to file. [boolean]&#xA;--tray                              Start app in the tray. [boolean]&#xA;&#xA;Examples:&#xA;--chrome C:path:to:chrome.exe             Sets your chrome path.&#xA;--userdata C:path:to:userdata-folder      Sets your userdata path.&#xA;--webhook https:discord.com:api:webh....  Sets your webhook url.&#xA;--webhookevents requestretry claim        Defaults to the events in this&#xA;newdrop offline newgame get getresult     example provided.&#xA;progress start error warn info&#xA;--interval 30000                          Sets the progress interval to 30s.&#xA;--retryinterval 30000                     Sets the retry interval to 30s.&#xA;--games Rust Krunker &#39;Elite: Dangerous&#39;   Sets the Prioritylist to Rust,&#xA;Krunker and Elite: Dangerous.&#xA;--token yourkindalongtoken                Sets the your current twitch auth&#xA;                                          token, overwriting any in&#xA;                                          twitch-session.json.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;✏️ &lt;strong&gt;Environment variables&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;All these Start Arguments also work as environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ttvdropbot_chrome = YourPath&#xA;ttvdropbot_userdata = YourPath&#xA;ttvdropbot_webhook = DiscordWebhookURL&#xA;ttvdropbot_interval = 60000&#xA;ttvdropbot_games = Game1 Game2 Game3... ⚠️ Black Desert -&amp;gt; Black_Desert ⚠️&#xA;ttvdropbot_debug = true || false&#xA;ttvdropbot_displayless = true || false&#xA;ttvdropbot_forcecustomchannel = true || false&#xA;ttvdropbot_waitforchannels = true || false&#xA;ttvdropbot_autoclaim = true || false&#xA;ttvdropbot_log = true || false&#xA;ttvdropbot_retryinterval = 60000&#xA;ttvdropbot_webhookevents = Event1 Event2 Event3...&#xA;ttvdropbot_showtoken = true || false  Usefull for System were you cant access your twitch-session.json&#xA;ttvdropbot_token = YourToken&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📘 Adding Custom Channels&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/kBabjJL.png&#34; alt=&#34;Twitch Drops&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Name&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Name can be any String like &lt;code&gt;Rainbow Six, Best Ch ever etc...&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Twitch Url&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Url is very important, never use the same Url twice, it has to be a valid Channel link and has always to start with &lt;code&gt;https://www.twitch.tv/&lt;/code&gt;. Example for a Valid Url: &lt;code&gt;https://www.twitch.tv/rainbow6tw&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How the Channel should be Watched&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Watch until the time runs out:&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Watches the channel until the left time reaches 0 then switches to other custom channel.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;Watch indefinitely:&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Watches the channel until it goes offline, then switches.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Farm Points&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pretty simple, should the bot farm Points or not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Editing already Added Channel&#39;s&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can always edit Channel&#39;s which are already added in the &lt;a href=&#34;https://raw.githubusercontent.com/Zaarrg/TTVDropBot/main/&#39;https://github.com/Zaarrg/TTVDropBot/#example-customchannelsjson&#39;&#34;&gt;CustomChannels.json&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📄 Json Files Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Example Settings.json&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;   &#34;Chromeexe&#34;: &#34;&#34;,&#xA;   &#34;UserDataPath&#34;: &#34;&#34;,&#xA;   &#34;WebHookURL&#34;: &#34;&#34;,&#xA;   &#34;WebHookEvents&#34;: [],&#xA;   &#34;debug&#34;: false,&#xA;   &#34;displayless&#34;: false,&#xA;   &#34;ProgressCheckInterval&#34;: 60000,&#xA;   &#34;RetryDelay&#34;: 60000,&#xA;   &#34;WaitforChannels&#34;: true,&#xA;   &#34;Prioritylist&#34;: [],&#xA;   &#34;AutoClaim&#34;: true,&#xA;   &#34;LogToFile&#34;: true,&#xA;   &#34;ForceCustomChannel&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example CustomChannels.json&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;Name&#34;: &#34;tarik&#34;,&#xA;    &#34;TTVLink&#34;: &#34;https://www.twitch.tv/tarik&#34;,&#xA;    &#34;WatchType&#34;: &#34;Watch until time runs out&#34;,&#xA;    &#34;Time&#34;: &#34;50&#34;,&#xA;    &#34;Points&#34;: true&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example Twitch Session&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[&#xA;  {&#xA;    &#34;name&#34;: &#34;auth-token&#34;,&#xA;    &#34;value&#34;: &#34;yourtoken&#34;&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ &lt;em&gt;Never share your &lt;strong&gt;Token&lt;/strong&gt; with anyone, because it gives full access to your account&lt;/em&gt; ⚠️&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎉 Enjoy the bot and hopefully its helpful!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Zaarrg&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/Zaarrg.svg?style=social&#34; alt=&#34;GitHub&#39;s followers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Zaarrg/TTVDropBot.svg?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/Zaarrg/TTVDropBot.svg?style=social&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Zaarrg/TTVDropBot/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/Zaarrg/TTVDropBot.svg?style=social&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you like my work feel free to buy me a coffee. ☕&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/zaarrg&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Have fun and Enjoy! 😃&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🍰 Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Quickest Response:&lt;/em&gt;&lt;/strong&gt; &lt;br&gt; Discord Server: &lt;a href=&#34;https://discord.gg/rV26FZ2upF&#34;&gt;https://discord.gg/rV26FZ2upF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Slow Response:&lt;/em&gt;&lt;/strong&gt;&lt;br&gt; Discord: - Zarg#8467&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Distributed under the MIT License. See LICENSE for more information.⚠️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Made with a lot of ❤️❤️ by &lt;strong&gt;&lt;a href=&#34;https://github.com/Zaarrg&#34;&gt;@Zarg&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>