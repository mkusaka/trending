<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T01:58:03Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lklima/rive-animated-app</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/lklima/rive-animated-app</id>
    <link href="https://github.com/lklima/rive-animated-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/44346970/170905698-a5e2bf3b-8bfe-405e-b173-169017c5fe46.mp4&#34;&gt;https://user-images.githubusercontent.com/44346970/170905698-a5e2bf3b-8bfe-405e-b173-169017c5fe46.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RIVE-ANIMATED-APP&lt;/h1&gt; &#xA;&lt;p&gt;React Native animated app with reanimated + expo and &lt;a href=&#34;https://rive.app/&#34;&gt;Rive&lt;/a&gt; an amazing tool for interactive icons and shapes animation.&lt;/p&gt; &#xA;&lt;p&gt;Give me a ‚≠êÔ∏è if liked it and follow me&lt;/p&gt; &#xA;&lt;p&gt;Based on this Swift course: &lt;a href=&#34;https://designcode.io/swiftui-rive-animated-app&#34;&gt;https://designcode.io/swiftui-rive-animated-app&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>changesets/changesets</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/changesets/changesets</id>
    <link href="https://github.com/changesets/changesets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶ã A way to manage your versioning and changelogs with a focus on monorepos&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/changesets/changesets/main/assets/images/changesets-banner-light.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A tool to manage versioning and changelogs &lt;br&gt; with a focus on multi-package repositories &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://changelogs.xyz/@changesets/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/changelogs.xyz-Explore%20Changelog-brightgreen&#34; alt=&#34;View changelog&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;changesets&lt;/code&gt; workflow is designed to help when people are making changes, all the way through to publishing. It lets contributors declare how their changes should be released, then we automate updating package versions, and changelogs, and publishing new versions of packages based on the provided information.&lt;/p&gt; &#xA;&lt;p&gt;Changesets has a focus on solving these problems for multi-package repositories, and keeps packages that rely on each other within the multi-package repository up-to-date, as well as making it easy to make changes to groups of packages.&lt;/p&gt; &#xA;&lt;h2&gt;How do we do that?&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;changeset&lt;/code&gt; is an intent to release a set of packages at particular &lt;a href=&#34;https://semver.org/&#34;&gt;semver bump types&lt;/a&gt; with a summary of the changes made.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;@changesets/cli&lt;/strong&gt; package allows you to write &lt;code&gt;changeset&lt;/code&gt; files as you make changes, then combine any number of changesets into a release, that flattens the bump-types into a single release per package, handles internal dependencies in a multi-package-repository, and updates changelogs, as well as release all updated packages from a mono-repository with one command.&lt;/p&gt; &#xA;&lt;h2&gt;How do I get started?&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to jump in to using changesets, the &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/intro-to-using-changesets.md&#34;&gt;Intro to using changesets&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/packages/cli/README.md&#34;&gt;@changesets/cli&lt;/a&gt; docs are where you should head.&lt;/p&gt; &#xA;&lt;p&gt;If you want a detailed explanation of the the concepts behind changesets, or to understand how you would build on top of changesets, check out our &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/detailed-explanation.md&#34;&gt;detailed-explanation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/dictionary.md&#34;&gt;dictionary&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integrating with CI&lt;/h2&gt; &#xA;&lt;p&gt;While changesets can be an entirely manual process, we recommend integrating it with how your CI works.&lt;/p&gt; &#xA;&lt;p&gt;To check that PRs contain a changeset, we recommend using &lt;a href=&#34;https://github.com/apps/changeset-bot&#34;&gt;the changeset bot&lt;/a&gt;, or if you want to fail builds on a changesets failure, run &lt;code&gt;yarn changeset status&lt;/code&gt; in CI.&lt;/p&gt; &#xA;&lt;p&gt;To make releasing easier, you can use &lt;a href=&#34;https://github.com/changesets/action&#34;&gt;this changesets github action&lt;/a&gt; to automate creating versioning pull requests, and optionally publishing packages.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/intro-to-using-changesets.md&#34;&gt;Intro to using changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/detailed-explanation.md&#34;&gt;Detailed explanation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/common-questions.md&#34;&gt;Common questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/adding-a-changeset.md&#34;&gt;Adding a changeset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/automating-changesets.md&#34;&gt;Automating changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/checking-for-changesets.md&#34;&gt;Checking for changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/command-line-options.md&#34;&gt;Command line options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/config-file-options.md&#34;&gt;Config file options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/decisions.md&#34;&gt;Decisions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/dictionary.md&#34;&gt;Dictionary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/fixed-packages.md&#34;&gt;Fixed packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/linked-packages.md&#34;&gt;Linked packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/modifying-changelog-format.md&#34;&gt;Modifying changelog format&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/prereleases.md&#34;&gt;Prereleases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/problems-publishing-in-monorepos.md&#34;&gt;Problems publishing in monorepos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/snapshot-releases.md&#34;&gt;Snapshot releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool Projects already using Changesets for versioning and changelogs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atlaskit.atlassian.com/&#34;&gt;atlaskit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emotion.sh/docs/introduction&#34;&gt;emotion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v5.keystonejs.com/&#34;&gt;keystone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-select.com/home&#34;&gt;react-select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xstate.js.org/&#34;&gt;XState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.js.org/&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kuldeepkeshwar/filbert-js&#34;&gt;filbert-js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talentlessguy/tinyhttp&#34;&gt;tinyhttp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/firebase/firebase-js-sdk&#34;&gt;Firebase Javascript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/formium/formik&#34;&gt;Formik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobxjs/mobx&#34;&gt;MobX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verdaccio.org/&#34;&gt;verdaccio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://astro.build&#34;&gt;Astro&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thanks/Inspiration&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boltpkg/bolt&#34;&gt;bolt&lt;/a&gt; - Brought us a strong concept of how packages in a mono-repo should be able to interconnect, and provided the initial infrastructure to get inter-package information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/&#34;&gt;Atlassian&lt;/a&gt; - The original idea/sponsor of the changesets code, and where many of the ideas and processes were fermented. It was originally implemented by the team behind &lt;a href=&#34;https://atlaskit.atlassian.com&#34;&gt;atlaskit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atlassian/lerna-semantic-release&#34;&gt;lerna-semantic-release&lt;/a&gt; - put down many of the initial patterns around updating packages within a multi-package-repository, and started us thinking about how to manage dependent packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thinkmill.com.au&#34;&gt;Thinkmill&lt;/a&gt; - For sponsoring the focused open sourcing of this project, and the version two rearchitecture.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tinymce/tinymce</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/tinymce/tinymce</id>
    <link href="https://github.com/tinymce/tinymce" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The world&#39;s #1 JavaScript library for rich text editing. Available for React, Vue and Angular&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TinyMCE&lt;/h1&gt; &#xA;&lt;p&gt;The world&#39;s #1 open source rich text editor.&lt;/p&gt; &#xA;&lt;p&gt;Used and trusted by millions of developers, TinyMCE is the world‚Äôs most customizable, scalable, and flexible rich text editor. We‚Äôve helped launch the likes of Atlassian, Medium, Evernote (and lots more that we can‚Äôt tell you), by empowering them to create exceptional content and experiences for their users.&lt;/p&gt; &#xA;&lt;p&gt;With more than 350M+ downloads every year, we‚Äôre also one of the most trusted enterprise-grade open source HTML editors on the internet. There‚Äôs currently more than 100M+ products worldwide, powered by Tiny. As a high powered WYSIWYG editor, TinyMCE is built to scale, designed to innovate, and thrives on delivering results to difficult edge-cases.&lt;/p&gt; &#xA;&lt;p&gt;You can access a &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/premium-full-featured/&#34;&gt;full featured demo of TinyMCE&lt;/a&gt; in the docs on the TinyMCE website.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Screenshot of the TinyMCE Editor&#34; src=&#34;https://www.tiny.cloud/storage/github-readme-images/tinymce-editor.png&#34; \&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Get started with TinyMCE&lt;/h2&gt; &#xA;&lt;p&gt;Getting started with the TinyMCE rich text editor is easy, and for simple configurations can be done in less than 5 minutes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/cloud-quick-start/&#34;&gt;TinyMCE Cloud Deployment Quick Start Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/npm-projects/&#34;&gt;TinyMCE Self-hosted Deployment Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TinyMCE provides a range of configuration options that allow you to integrate it into your application. Start customizing with a &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/basic-setup/&#34;&gt;basic setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Configure it for one of three modes of editing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/use-tinymce-classic/&#34;&gt;TinyMCE classic editing mode&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/use-tinymce-inline/&#34;&gt;TinyMCE inline editing mode&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/use-tinymce-distraction-free/&#34;&gt;TinyMCE distraction-free editing mode&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Integration&lt;/h3&gt; &#xA;&lt;p&gt;TinyMCE is easily integrated into your projects with the help of components such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tinymce/tinymce-react&#34;&gt;tinymce-react&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tinymce/tinymce-vue&#34;&gt;tinymce-vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tinymce/tinymce-angular&#34;&gt;tinymce-angular&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With over 29 integrations, and 400+ APIs, see the TinyMCE docs for a full list of editor &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/integrations/&#34;&gt;integrations&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Customization&lt;/h3&gt; &#xA;&lt;p&gt;It is easy to &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/customize-ui/&#34;&gt;configure the UI&lt;/a&gt; of your rich text editor to match the design of your site, product or application. Due to its flexibility, you can &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/basic-setup/&#34;&gt;configure the editor&lt;/a&gt; with as much or as little functionality as you like, depending on your requirements.&lt;/p&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://www.tiny.cloud/tinymce/features/&#34;&gt;50+ powerful plugins available&lt;/a&gt;, and content editable as the basis of TinyMCE, adding additional functionality is as simple as including a single line of code.&lt;/p&gt; &#xA;&lt;p&gt;Realizing the full power of most plugins requires only a few lines more.&lt;/p&gt; &#xA;&lt;h3&gt;Extensibility&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes your editor requirements can be quite unique, and you need the freedom and flexibility to innovate. Thanks to TinyMCE being open source, you can view the source code and develop your own extensions for custom functionality to meet your own requirements.&lt;/p&gt; &#xA;&lt;p&gt;The TinyMCE &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.root/&#34;&gt;API&lt;/a&gt; is exposed to make it easier for you to write custom functionality that fits within the existing framework of TinyMCE &lt;a href=&#34;https://www.tiny.cloud/docs/tinymce/6/custom-ui-components/&#34;&gt;UI components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Extended Features and Support&lt;/h3&gt; &#xA;&lt;p&gt;For the professional software teams that require more in-depth efficiency, compliance or collaborative features built to enterprise-grade standards, please &lt;a href=&#34;https://www.tiny.cloud/contact/&#34;&gt;get in touch with our team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tiny also offers dedicated SLAs and support for professional development teams.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling and contributing&lt;/h2&gt; &#xA;&lt;p&gt;In 2019 the decision was made to transition our codebase to a monorepo. For information on compiling and contributing, see: &lt;a href=&#34;https://github.com/tinymce/tinymce/raw/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an open source product, we encourage and support the active development of our software.&lt;/p&gt; &#xA;&lt;h2&gt;Want more information?&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://tiny.cloud/&#34;&gt;TinyMCE website&lt;/a&gt; and check out the &lt;a href=&#34;https://www.tiny.cloud/docs/&#34;&gt;TinyMCE documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vuejs/vue</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/vuejs/vue</id>
    <link href="https://github.com/vuejs/vue" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://vuejs.org&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&lt;img width=&#34;100&#34; src=&#34;https://vuejs.org/images/logo.png&#34; alt=&#34;Vue logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/vuejs/vue/tree/dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/vuejs/vue?branch=dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmcharts.com/compare/vue?minimal=true&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/vue.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/vue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://chat.vuejs.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;This repo is for Vue 2&lt;/h2&gt; &#xA;&lt;p&gt;You are looking at the repository for Vue 2. The repo for Vue 3 is &lt;a href=&#34;https://github.com/vuejs/core&#34;&gt;vuejs/core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href=&#34;https://github.com/vuejs/core/raw/main/BACKERS.md&#34;&gt;backers&lt;/a&gt;. If you&#39;d like to join them, please consider &lt;a href=&#34;https://vuejs.org/sponsor/&#34;&gt; sponsor Vue&#39;s development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://vuejs.org/sponsor/&#34;&gt; &lt;img alt=&#34;sponsors&#34; src=&#34;https://sponsors.vuejs.org/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuÀê/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; &#xA;&lt;h4&gt;Browser Compatibility&lt;/h4&gt; &#xA;&lt;p&gt;Vue.js supports all browsers that are &lt;a href=&#34;https://kangax.github.io/compat-table/es5/&#34;&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-router&#34;&gt;vue-router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vue-router&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue-router.svg?sanitize=true&#34; alt=&#34;vue-router-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Single-page application routing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vuex&#34;&gt;vuex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vuex&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vuex.svg?sanitize=true&#34; alt=&#34;vuex-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Large-scale state management&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-cli&#34;&gt;vue-cli&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/@vue/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@vue/cli.svg?sanitize=true&#34; alt=&#34;vue-cli-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Project scaffolding&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-loader&#34;&gt;vue-loader&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vue-loader&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue-loader.svg?sanitize=true&#34; alt=&#34;vue-loader-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&#34;&gt;vue-server-renderer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vue-server-renderer&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue-server-renderer.svg?sanitize=true&#34; alt=&#34;vue-server-renderer-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server-side rendering support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-class-component&#34;&gt;vue-class-component&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vue-class-component&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue-class-component.svg?sanitize=true&#34; alt=&#34;vue-class-component-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TypeScript decorator for a class-based API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-rx&#34;&gt;vue-rx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://npmjs.com/package/vue-rx&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vue-rx.svg?sanitize=true&#34; alt=&#34;vue-rx-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;RxJS integration&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/vue-devtools&#34;&gt;vue-devtools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd&#34;&gt;&lt;img src=&#34;https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg?sanitize=true&#34; alt=&#34;vue-devtools-status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browser DevTools extension&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To check out &lt;a href=&#34;https://vuejs.org/v2/examples/&#34;&gt;live examples&lt;/a&gt; and docs, visit &lt;a href=&#34;https://vuejs.org&#34;&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions&lt;/h2&gt; &#xA;&lt;p&gt;For questions and support please use &lt;a href=&#34;https://forum.vuejs.org&#34;&gt;the official forum&lt;/a&gt; or &lt;a href=&#34;https://chat.vuejs.org/&#34;&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines&#34;&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&#34;https://github.com/vuejs/vue/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Stay In Touch&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/vuejs&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/the-vue-point&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuejobs.com/?ref=vuejs&#34;&gt;Job Board&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href=&#34;https://github.com/vuejs/awesome-vue&#34;&gt;this curated list&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vuejs/vue/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/vuejs/contributors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>grafana/grafana</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/grafana/grafana</id>
    <link href="https://github.com/grafana/grafana" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/grafana/grafana/main/docs/logo-horizontal.png&#34; alt=&#34;Grafana&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The open-source platform for monitoring and observability&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grafana/grafana/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/grafana/grafana&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://drone.grafana.net/grafana/grafana&#34;&gt;&lt;img src=&#34;https://drone.grafana.net/api/badges/grafana/grafana/status.svg?sanitize=true&#34; alt=&#34;Drone&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/grafana/grafana&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/grafana/grafana&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Grafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored. Create, explore, and share dashboards with your team and foster a data-driven culture:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visualizations:&lt;/strong&gt; Fast and flexible client side graphs with a multitude of options. Panel plugins offer many different ways to visualize metrics and logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Dashboards:&lt;/strong&gt; Create dynamic &amp;amp; reusable dashboards with template variables that appear as dropdowns at the top of the dashboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explore Metrics:&lt;/strong&gt; Explore your data through ad-hoc queries and dynamic drilldown. Split view and compare different time ranges, queries and data sources side by side.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explore Logs:&lt;/strong&gt; Experience the magic of switching from metrics to logs with preserved label filters. Quickly search through all your logs or streaming them live.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alerting:&lt;/strong&gt; Visually define alert rules for your most important metrics. Grafana will continuously evaluate and send notifications to systems like Slack, PagerDuty, VictorOps, OpsGenie.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mixed Data Sources:&lt;/strong&gt; Mix different data sources in the same graph! You can specify a data source on a per-query basis. This works for even custom datasources.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grafana.com/get&#34;&gt;Get Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.grafana.org/installation/&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unsure if Grafana is for you? Watch Grafana in action on &lt;a href=&#34;https://play.grafana.org/&#34;&gt;play.grafana.org&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The Grafana documentation is available at &lt;a href=&#34;https://grafana.com/docs/&#34;&gt;grafana.com/docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re interested in contributing to the Grafana project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Start by reading the &lt;a href=&#34;https://github.com/grafana/grafana/raw/HEAD/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Learn how to set up your local environment, in our &lt;a href=&#34;https://github.com/grafana/grafana/raw/HEAD/contribute/developer-guide.md&#34;&gt;Developer guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Explore our &lt;a href=&#34;https://github.com/grafana/grafana/issues?q=is%3Aopen+is%3Aissue+label%3A%22beginner+friendly%22&#34;&gt;beginner-friendly issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Look through our &lt;a href=&#34;https://developers.grafana.com/ui/latest/index.html&#34;&gt;style guide and Storybook&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/grafana/&#34;&gt;@grafana on Twitter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read and subscribe to the &lt;a href=&#34;https://grafana.com/blog/&#34;&gt;Grafana blog&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have a specific question, check out our &lt;a href=&#34;https://community.grafana.com/&#34;&gt;discussion forums&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For general discussions, join us on the &lt;a href=&#34;https://slack.grafana.com&#34;&gt;official Slack&lt;/a&gt; team.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Grafana is distributed under &lt;a href=&#34;https://raw.githubusercontent.com/grafana/grafana/main/LICENSE&#34;&gt;AGPL-3.0-only&lt;/a&gt;. For Apache-2.0 exceptions, see &lt;a href=&#34;https://github.com/grafana/grafana/raw/HEAD/LICENSING.md&#34;&gt;LICENSING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>supabase/supabase</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/supabase/supabase</id>
    <link href="https://github.com/supabase/supabase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open source Firebase alternative. Follow to stay updated about our public Beta.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/supabase-logo-wordmark--light.svg?sanitize=true#gh-light-mode-only&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/supabase-logo-wordmark--dark.svg?sanitize=true#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Supabase&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://supabase.com&#34;&gt;Supabase&lt;/a&gt; is an open source Firebase alternative. We&#39;re building the features of Firebase using enterprise-grade open source tools.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hosted Postgres Database. &lt;a href=&#34;https://supabase.com/docs/guides/database&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Authentication and Authorization. &lt;a href=&#34;https://supabase.com/docs/guides/auth&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto-generated APIs. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; REST. &lt;a href=&#34;https://supabase.com/docs/guides/api#rest-api&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Realtime subscriptions. &lt;a href=&#34;https://supabase.com/docs/guides/api#realtime-api&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; GraphQL (Beta). &lt;a href=&#34;https://supabase.com/docs/guides/api#graphql-api&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Functions. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Database Functions. &lt;a href=&#34;https://supabase.com/docs/guides/database/functions&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Edge Functions &lt;a href=&#34;https://supabase.com/docs/guides/functions&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; File Storage. &lt;a href=&#34;https://supabase.com/docs/guides/storage&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png&#34; alt=&#34;Supabase Dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://supabase.com/docs&#34;&gt;supabase.com/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see how to Contribute, visit &lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/DEVELOPERS.md&#34;&gt;Getting Started&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/supabase/discussions&#34;&gt;Community Forum&lt;/a&gt;. Best for: help with building, discussion about database best practices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/supabase/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Best for: bugs and errors you encounter using Supabase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://supabase.com/docs/support#business-support&#34;&gt;Email Support&lt;/a&gt;. Best for: problems with your database or infrastructure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.supabase.com&#34;&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Alpha: We are testing Supabase with a closed set of customers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Public Alpha: Anyone can sign up over at &lt;a href=&#34;https://app.supabase.com&#34;&gt;app.supabase.com&lt;/a&gt;. But go easy on us, there are a few kinks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Public Beta: Stable enough for most non-enterprise use-cases&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Public: Production-ready&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are currently in Public Beta. Watch &#34;releases&#34; of this repo to get notified of major updates.&lt;/p&gt; &#xA;&lt;p&gt;&lt;kbd&gt;&lt;img src=&#34;https://gitcdn.link/repo/supabase/supabase/master/web/static/watch-repo.gif&#34; alt=&#34;Watch this repo&#34;&gt;&lt;/kbd&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Supabase is a combination of open source tools. We‚Äôre building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn&#39;t exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supabase is a &lt;a href=&#34;https://app.supabase.com&#34;&gt;hosted platform&lt;/a&gt;. You can sign up and start using Supabase without installing anything. You can also &lt;a href=&#34;https://supabase.com/docs/guides/hosting/overview&#34;&gt;self-host&lt;/a&gt; and &lt;a href=&#34;https://supabase.com/docs/guides/local-development&#34;&gt;develop locally&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://supabase.com/docs/assets/images/supabase-architecture-9050a7317e9ec7efb7807f5194122e48.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/realtime&#34;&gt;Realtime&lt;/a&gt; is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres&#39; built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://postgrest.org/&#34;&gt;PostgREST&lt;/a&gt; is a web server that turns your PostgreSQL database directly into a RESTful API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/storage-api&#34;&gt;Storage&lt;/a&gt; provides a RESTful interface for managing Files stored in S3, using Postgres to manage permissions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/postgres-meta&#34;&gt;postgres-meta&lt;/a&gt; is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/netlify/gotrue&#34;&gt;GoTrue&lt;/a&gt; is an SWT based API for managing users and issuing SWT tokens.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kong/kong&#34;&gt;Kong&lt;/a&gt; is a cloud-native API gateway.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Client libraries&lt;/h4&gt; &#xA;&lt;p&gt;Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.&lt;/p&gt; &#xA;&lt;table style=&#34;table-layout:fixed; white-space: nowrap;&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Client&lt;/th&gt; &#xA;   &lt;th colspan=&#34;4&#34;&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Supabase&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/postgrest/postgrest&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;PostgREST&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/supabase/gotrue&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;GoTrue&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/supabase/realtime&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Realtime&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/supabase/storage-api&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Storage&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;!-- TEMPLATE FOR NEW ROW --&gt; &#xA;  &lt;!-- START ROW&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;lang&lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/supabase-lang&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-lang&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-lang&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/realtime-lang&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/storage-lang&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;storage-lang&lt;/a&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  END ROW --&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;th colspan=&#34;6&#34;&gt;‚ö°Ô∏è Official ‚ö°Ô∏è&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/supabase-js&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/postgrest-js&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/gotrue-js&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/realtime-js&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/storage-js&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;storage-js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;th colspan=&#34;6&#34;&gt;üíö Community üíö&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/supabase-csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/realtime-csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/storage-csharp&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;storage-csharp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart (Flutter)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/supabase-dart&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/postgrest-dart&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/gotrue-dart&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/realtime-dart&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase/storage-dart&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;storage-dart&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-go&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-go&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-java&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-kt&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-kt&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/supabase-py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/realtime-py&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/supabase-rb&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-rb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-rb&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-rs&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/supabase-swift&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;supabase-swift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/postgrest-swift&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/gotrue-swift&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;gotrue-swift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/realtime-swift&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;realtime-swift&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/supabase-community/storage-swift&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;storage-swift&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- Remove this list if you&#39;re translating to another language, it&#39;s hard to keep updated across multiple files--&gt; &#xA;&lt;!-- Keep only the link to the list of translation files--&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ar.md&#34;&gt;Arabic | ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sq.md&#34;&gt;Albanian / Shqip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bn.md&#34;&gt;Bangla / ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ca.md&#34;&gt;Catalan / Catal√†&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.da.md&#34;&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nl.md&#34;&gt;Dutch / Nederlands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase/supabase&#34;&gt;English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fr.md&#34;&gt;French / Fran√ßais&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.de.md&#34;&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.gr.md&#34;&gt;Greek / ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.he.md&#34;&gt;Hebrew / ◊¢◊ë◊®◊ô◊™&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hi.md&#34;&gt;Hindi / ‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hu.md&#34;&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ne.md&#34;&gt;Nepali / ‡§®‡•á‡§™‡§æ‡§≤‡•Ä&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.id.md&#34;&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.it.md&#34;&gt;Italian / Italiano&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.jp.md&#34;&gt;Japanese / Êó•Êú¨Ë™û&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ko.md&#34;&gt;Korean / ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ms.md&#34;&gt;Malay / Bahasa Malaysia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nb-no.md&#34;&gt;Norwegian (Bokm√•l) / Norsk (Bokm√•l)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fa.md&#34;&gt;Persian / ŸÅÿßÿ±ÿ≥€å&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pl.md&#34;&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt.md&#34;&gt;Portuguese / Portuguese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt-br.md&#34;&gt;Portuguese (Brazilian) / Portugu√™s Brasileiro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ro.md&#34;&gt;Romanian / Rom√¢nƒÉ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ru.md&#34;&gt;Russian / P—É—Å—Å–∫–∏–π&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.si.md&#34;&gt;Sinhala / ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.es.md&#34;&gt;Spanish / Espa√±ol&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-cn.md&#34;&gt;Simplified Chinese / ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sv.md&#34;&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.th.md&#34;&gt;Thai / ‡πÑ‡∏ó‡∏¢&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-tw.md&#34;&gt;Traditional Chinese / ÁπÅ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.tr.md&#34;&gt;Turkish / T√ºrk√ße&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.uk.md&#34;&gt;Ukrainian / –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.vi-vn.md&#34;&gt;Vietnamese / Ti·∫øng Vi·ªát&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/supabase/supabase/master/i18n/languages.md&#34;&gt;List of translations&lt;/a&gt; &#xA;  &lt;!-- Keep only this --&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/supabase&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/10214025/90518111-e74bbb00-e198-11ea-8f88-c9e3c1aa4b5b.png&#34; alt=&#34;New Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>actions/checkout</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/actions/checkout</id>
    <link href="https://github.com/actions/checkout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Action for checking out a repo&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/actions/checkout&#34;&gt;&lt;img alt=&#34;GitHub Actions status&#34; src=&#34;https://github.com/actions/checkout/workflows/test-local/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Checkout V3&lt;/h1&gt; &#xA;&lt;p&gt;This action checks-out your repository under &lt;code&gt;$GITHUB_WORKSPACE&lt;/code&gt;, so your workflow can access it.&lt;/p&gt; &#xA;&lt;p&gt;Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set &lt;code&gt;fetch-depth: 0&lt;/code&gt; to fetch all history for all branches and tags. Refer &lt;a href=&#34;https://help.github.com/en/articles/events-that-trigger-workflows&#34;&gt;here&lt;/a&gt; to learn which commit &lt;code&gt;$GITHUB_SHA&lt;/code&gt; points to for different events.&lt;/p&gt; &#xA;&lt;p&gt;The auth token is persisted in the local git config. This enables your scripts to run authenticated git commands. The token is removed during post-job cleanup. Set &lt;code&gt;persist-credentials: false&lt;/code&gt; to opt-out.&lt;/p&gt; &#xA;&lt;p&gt;When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.&lt;/p&gt; &#xA;&lt;h1&gt;What&#39;s new&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Updated to the node16 runtime by default &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This requires a minimum &lt;a href=&#34;https://github.com/actions/runner/releases/tag/v2.285.0&#34;&gt;Actions Runner&lt;/a&gt; version of v2.285.0 to run, which is by default available in GHES 3.4 or later.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;!-- start usage --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/checkout@v3&#xA;  with:&#xA;    # Repository name with owner. For example, actions/checkout&#xA;    # Default: ${{ github.repository }}&#xA;    repository: &#39;&#39;&#xA;&#xA;    # The branch, tag or SHA to checkout. When checking out the repository that&#xA;    # triggered a workflow, this defaults to the reference or SHA for that event.&#xA;    # Otherwise, uses the default branch.&#xA;    ref: &#39;&#39;&#xA;&#xA;    # Personal access token (PAT) used to fetch the repository. The PAT is configured&#xA;    # with the local git config, which enables your scripts to run authenticated git&#xA;    # commands. The post-job step removes the PAT.&#xA;    #&#xA;    # We recommend using a service account with the least permissions necessary. Also&#xA;    # when generating a new PAT, select the least scopes necessary.&#xA;    #&#xA;    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)&#xA;    #&#xA;    # Default: ${{ github.token }}&#xA;    token: &#39;&#39;&#xA;&#xA;    # SSH key used to fetch the repository. The SSH key is configured with the local&#xA;    # git config, which enables your scripts to run authenticated git commands. The&#xA;    # post-job step removes the SSH key.&#xA;    #&#xA;    # We recommend using a service account with the least permissions necessary.&#xA;    #&#xA;    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)&#xA;    ssh-key: &#39;&#39;&#xA;&#xA;    # Known hosts in addition to the user and global host key database. The public SSH&#xA;    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,&#xA;    # `ssh-keyscan github.com`. The public key for github.com is always implicitly&#xA;    # added.&#xA;    ssh-known-hosts: &#39;&#39;&#xA;&#xA;    # Whether to perform strict host key checking. When true, adds the options&#xA;    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use&#xA;    # the input `ssh-known-hosts` to configure additional hosts.&#xA;    # Default: true&#xA;    ssh-strict: &#39;&#39;&#xA;&#xA;    # Whether to configure the token or SSH key with the local git config&#xA;    # Default: true&#xA;    persist-credentials: &#39;&#39;&#xA;&#xA;    # Relative path under $GITHUB_WORKSPACE to place the repository&#xA;    path: &#39;&#39;&#xA;&#xA;    # Whether to execute `git clean -ffdx &amp;amp;&amp;amp; git reset --hard HEAD` before fetching&#xA;    # Default: true&#xA;    clean: &#39;&#39;&#xA;&#xA;    # Number of commits to fetch. 0 indicates all history for all branches and tags.&#xA;    # Default: 1&#xA;    fetch-depth: &#39;&#39;&#xA;&#xA;    # Whether to download Git-LFS files&#xA;    # Default: false&#xA;    lfs: &#39;&#39;&#xA;&#xA;    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to&#xA;    # recursively checkout submodules.&#xA;    #&#xA;    # When the `ssh-key` input is not provided, SSH URLs beginning with&#xA;    # `git@github.com:` are converted to HTTPS.&#xA;    #&#xA;    # Default: false&#xA;    submodules: &#39;&#39;&#xA;&#xA;    # Add repository path as safe.directory for Git global config by running `git&#xA;    # config --global --add safe.directory &amp;lt;path&amp;gt;`&#xA;    # Default: true&#xA;    set-safe-directory: &#39;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- end usage --&gt; &#xA;&lt;h1&gt;Scenarios&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Fetch-all-history-for-all-tags-and-branches&#34;&gt;Fetch all history for all tags and branches&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-a-different-branch&#34;&gt;Checkout a different branch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-HEAD&#34;&gt;Checkout HEAD^&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-side-by-side&#34;&gt;Checkout multiple repos (side by side)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-nested&#34;&gt;Checkout multiple repos (nested)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-private&#34;&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-pull-request-HEAD-commit-instead-of-merge-commit&#34;&gt;Checkout pull request HEAD commit instead of merge commit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Checkout-pull-request-on-closed-event&#34;&gt;Checkout pull request on closed event&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/#Push-a-commit-using-the-built-in-token&#34;&gt;Push a commit using the built-in token&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fetch all history for all tags and branches&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/checkout@v3&#xA;  with:&#xA;    fetch-depth: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout a different branch&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/checkout@v3&#xA;  with:&#xA;    ref: my-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout HEAD^&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/checkout@v3&#xA;  with:&#xA;    fetch-depth: 2&#xA;- run: git checkout HEAD^&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout multiple repos (side by side)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Checkout&#xA;  uses: actions/checkout@v3&#xA;  with:&#xA;    path: main&#xA;&#xA;- name: Checkout tools repo&#xA;  uses: actions/checkout@v3&#xA;  with:&#xA;    repository: my-org/my-tools&#xA;    path: my-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout multiple repos (nested)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Checkout&#xA;  uses: actions/checkout@v3&#xA;&#xA;- name: Checkout tools repo&#xA;  uses: actions/checkout@v3&#xA;  with:&#xA;    repository: my-org/my-tools&#xA;    path: my-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout multiple repos (private)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Checkout&#xA;  uses: actions/checkout@v3&#xA;  with:&#xA;    path: main&#xA;&#xA;- name: Checkout private tools&#xA;  uses: actions/checkout@v3&#xA;  with:&#xA;    repository: my-org/my-private-tools&#xA;    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT&#xA;    path: my-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;${{ github.token }}&lt;/code&gt; is scoped to the current repository, so if you want to checkout a different repository that is private you will need to provide your own &lt;a href=&#34;https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line&#34;&gt;PAT&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Checkout pull request HEAD commit instead of merge commit&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- uses: actions/checkout@v3&#xA;  with:&#xA;    ref: ${{ github.event.pull_request.head.sha }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Checkout pull request on closed event&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on:&#xA;  pull_request:&#xA;    branches: [main]&#xA;    types: [opened, synchronize, closed]&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Push a commit using the built-in token&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;on: push&#xA;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - run: |&#xA;          date &amp;gt; generated.txt&#xA;          git config user.name github-actions&#xA;          git config user.email github-actions@github.com&#xA;          git add .&#xA;          git commit -m &#34;generated&#34;&#xA;          git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/actions/checkout/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ethereum/remix-project</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/ethereum/remix-project</id>
    <link href="https://github.com/ethereum/remix-project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Remix is a browser-based compiler and IDE that enables users to build Ethereum contracts with Solidity language and to debug transactions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/ethereum/remix-project&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/ethereum/remix-project.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://remix-ide.readthedocs.io/en/latest/index.html&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/docs/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ethereum/remix-project/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;contributions welcome&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/ethereum/remix-project&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;a href=&#34;https://github.com/ethereum/awesome-remix&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome--Remix-resources-green&#34; alt=&#34;Awesome Remix&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/ethereum/remix-project&#34; alt=&#34;GitHub&#34;&gt; &lt;a href=&#34;https://gitter.im/ethereum/remix?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ethereum/remix.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/ethereum/remix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ethereumremix&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ethereumremix?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Remix Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remix Project&lt;/strong&gt; is a rich toolset including Remix IDE, a comprehensive smart contract development tool. The Remix Project also includes Remix Plugin Engine and Remix Libraries which are low-level tools for wider use.&lt;/p&gt; &#xA;&lt;h2&gt;Remix IDE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remix IDE&lt;/strong&gt; is used for the entire journey of contract development by users of any knowledge level. It fosters a fast development cycle and has a rich set of plugins with intuitive GUIs. The IDE comes in 2 flavors and a VSCode extension:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remix Online IDE&lt;/strong&gt;, see: &lt;a href=&#34;https://remix.ethereum.org&#34;&gt;https://remix.ethereum.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üëâ&lt;/span&gt; Supported browsers: Firefox v100.0.1 &amp;amp; Chrome v101.0.4951.64. No support for Remix&#39;s use on tablets or smartphones or telephones.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Remix Desktop IDE&lt;/strong&gt;, see releases: &lt;a href=&#34;https://github.com/ethereum/remix-desktop/releases&#34;&gt;https://github.com/ethereum/remix-desktop/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ethereum/remix-project/raw/master/apps/remix-ide/remix-screenshot-400h.png&#34; alt=&#34;Remix screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;VSCode extension&lt;/strong&gt;, see: &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=RemixProject.ethereum-remix&#34;&gt;Ethereum-Remix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Remix libraries&lt;/h2&gt; &#xA;&lt;p&gt;Remix libraries are essential for Remix IDE&#39;s native plugins. Read more about libraries &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/remix-project/master/libs/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Offline Usage&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;gh-pages&lt;/code&gt; branch of &lt;a href=&#34;https://github.com/ethereum/remix-live&#34;&gt;remix-live&lt;/a&gt; always has the latest stable build of Remix. It contains a ZIP file with the entire build. Download it to use offline.&lt;/p&gt; &#xA;&lt;p&gt;Note: It contains the latest supported version of Solidity available at the time of the packaging. Other compiler versions can be used online only.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;strong&gt;Yarn&lt;/strong&gt; and &lt;strong&gt;Node.js&lt;/strong&gt;. See &lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;Guide for NodeJs&lt;/a&gt; and &lt;a href=&#34;https://classic.yarnpkg.com/lang/en/docs/install&#34;&gt;Yarn install&lt;/a&gt;&lt;br&gt; &lt;em&gt;Supported versions:&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;engines&#34;: {&#xA;    &#34;node&#34;: &#34;^14.17.6&#34;,&#xA;    &#34;npm&#34;: &#34;^6.14.15&#34;&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nx.dev/react/cli/overview&#34;&gt;Nx CLI&lt;/a&gt; globally to enable running &lt;strong&gt;nx executable commands&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn global add @nrwl/cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the github repository (&lt;code&gt;wget&lt;/code&gt; need to be installed first):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ethereum/remix-project.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build &lt;code&gt;remix-project&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd remix-project&#xA;yarn install&#xA;yarn run build:libs // Build remix libs&#xA;nx build&#xA;nx serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; in your browser to load Remix IDE locally.&lt;/p&gt; &#xA;&lt;p&gt;Go to your &lt;code&gt;text editor&lt;/code&gt; and start developing. Browser will automatically refresh when files are saved.&lt;/p&gt; &#xA;&lt;h2&gt;Production Build&lt;/h2&gt; &#xA;&lt;p&gt;To generate react production builds for remix-project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn run build:production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build can be found in &lt;code&gt;remix-project/dist/apps/remix-ide&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn run serve:production&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Production build will be served by default to &lt;code&gt;http://localhost:8080/&lt;/code&gt; or &lt;code&gt;http://127.0.0.1:8080/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker:&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker (&lt;a href=&#34;https://docs.docker.com/desktop/&#34;&gt;https://docs.docker.com/desktop/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Docker Compose (&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run with docker&lt;/h3&gt; &#xA;&lt;p&gt;If you want to run latest changes that are merged into master branch then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull remixproject/remix-ide:latest&#xA;docker run -p 8080:80 remixproject/remix-ide:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run latest remix-live release run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull remixproject/remix-ide:remix_live&#xA;docker run -p 8080:80 remixproject/remix-ide:remix_live&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run with docker-compose:&lt;/h3&gt; &#xA;&lt;p&gt;To run locally without building you only need docker-compose.yaml file and you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose pull&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; and you can use you Remix instance.&lt;/p&gt; &#xA;&lt;p&gt;To fetch docker-compose file without cloning this repo run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/ethereum/remix-project/master/docker-compose.yaml &amp;gt; docker-compose.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;If you have trouble building the project, make sure that you have the correct version of &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;nvm&lt;/code&gt;. Also ensure &lt;a href=&#34;https://nx.dev/react/cli/overview&#34;&gt;Nx CLI&lt;/a&gt; is installed globally.&lt;/p&gt; &#xA;&lt;p&gt;Run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node --version&#xA;npm --version&#xA;nvm --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Debian based OS such as Ubuntu 14.04LTS you may need to run &lt;code&gt;apt-get install build-essential&lt;/code&gt;. After installing &lt;code&gt;build-essential&lt;/code&gt;, run &lt;code&gt;npm rebuild&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Unit Testing&lt;/h2&gt; &#xA;&lt;p&gt;Run the unit tests using library name like: &lt;code&gt;nx test &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, to run unit tests of &lt;code&gt;remix-analyzer&lt;/code&gt;, use &lt;code&gt;nx test remix-analyzer&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Browser Testing&lt;/h2&gt; &#xA;&lt;p&gt;To run the Selenium tests via Nightwatch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Selenium for first time: &lt;code&gt;yarn run selenium-install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run a selenium server: &lt;code&gt;yarn run selenium&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build &amp;amp; Serve Remix: &lt;code&gt;nx serve&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run all the end-to-end tests:&lt;/p&gt; &lt;p&gt;for Firefox: &lt;code&gt;yarn run nightwatch_local_firefox&lt;/code&gt;, or&lt;/p&gt; &lt;p&gt;for Google Chrome: &lt;code&gt;yarn run nightwatch_local_chrome&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run a specific test case instead, use a command like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; - yarn run nightwatch_local_ballot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The package.json file contains a list of all the tests you can run.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;ballot&lt;/code&gt; tests suite&lt;/strong&gt; requires to run &lt;code&gt;ganache-cli&lt;/code&gt; locally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;remixd&lt;/code&gt; tests suite&lt;/strong&gt; requires to run &lt;code&gt;remixd&lt;/code&gt; locally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;gist&lt;/code&gt; tests suite&lt;/strong&gt; requires specifying a github access token in &lt;strong&gt;.env file&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    gist_token = &amp;lt;token&amp;gt; // token should have permission to create a gist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &#39;select_test&#39; for locally running specific tests&lt;/h3&gt; &#xA;&lt;p&gt;There is a script to allow selecting the browser and a specific test to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn run select_test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to have&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;selenium running&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;the IDE running&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;optionally have remixd or ganache running&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Splitting tests with groups&lt;/h3&gt; &#xA;&lt;p&gt;Groups can be used to group tests in a test file together. The advantage is you can avoid running long test files when you want to focus on a specific set of tests within a test file.x&lt;/p&gt; &#xA;&lt;p&gt;These groups only apply to the test file, not across all test files. So for example group1 in the ballot is not related to group1 in another test file.&lt;/p&gt; &#xA;&lt;p&gt;Running a group only runs the tests marked as belonging to the group + all the tests in the test file that do not have a group tag. This way you can have tests that run for all groups, for example to peform common actions.&lt;/p&gt; &#xA;&lt;p&gt;There is no need to number the groups in a certain order. The number of the group is arbitrary.&lt;/p&gt; &#xA;&lt;p&gt;A test can have multiple group tags, this means that this test will run in different groups.&lt;/p&gt; &#xA;&lt;p&gt;You should write your tests so they can be executed in groups and not depend on other groups.&lt;/p&gt; &#xA;&lt;p&gt;To do this you need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a group to tag to a test, they are formatted as #group followed by a number: so it becomes #group1, #group220, #group4. Any number will do. You don&#39;t have to do it in specific order.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &#39;Should generate test file #group1&#39;: function (browser: NightwatchBrowser) {&#xA;    browser.waitForElementPresent(&#39;*[data-id=&#34;verticalIconsKindfilePanel&#34;]&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add &#39;@disable&#39;: true to the test file you want to split:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;module.exports = {&#xA;  &#39;@disabled&#39;: true,&#xA;  before: function (browser: NightwatchBrowser, done: VoidFunction) {&#xA;    init(browser, done) // , &#39;http://localhost:8080&#39;, false)&#xA;  },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;change package json to locally run all group tests:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &#34;nightwatch_local_debugger&#34;: &#34;yarn run build:e2e &amp;amp;&amp;amp; nightwatch --config dist/apps/remix-ide-e2e/nightwatch.js dist/apps/remix-ide-e2e/src/tests/debugger_*.spec.js --env=chrome&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run the build script to build the test files if you want to run the locally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn run build:e2e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Locally testing group tests&lt;/h3&gt; &#xA;&lt;p&gt;You can tag any test with a groupname, for example, #group10 and easily run the test locally.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;make sure you have nx installed globally&lt;/li&gt; &#xA; &lt;li&gt;group tests are run like any other test, just specify the correct group number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;method 1&lt;/h4&gt; &#xA;&lt;p&gt;This script will give you an option menu, just select the test you want&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn run select_test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;method 2&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn run group_test --test=debugger --group=10 --env=chromeDesktop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;specify chromeDesktop to see the browser action, use &#39;chrome&#39; to run it headless&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the same (flaky) test across all instances in CircleCI&lt;/h3&gt; &#xA;&lt;p&gt;In CircleCI all tests are divided across instances to run in paralel. You can also run 1 or more tests simultaneously across all instances. This way the pipeline can easily be restarted to check if a test is flaky.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  &#39;Static Analysis run with remixd #group3 #flaky&#39;: function (browser) {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now group3 of this test will be executed in firefox and chrome 80 times. If you mark more groups in other tests they will also be executed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CONFIGURATION&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s important to set a parameter in the .circleci/config.yml, set it to false then the normal tests will run. Set it to true to run only tests marked with flaky.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;parameters:&#xA;  run_flaky_tests:&#xA;    type: boolean&#xA;    default: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Official documentation: &lt;a href=&#34;https://remix-ide.readthedocs.io/en/latest/&#34;&gt;https://remix-ide.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Curated list of Remix resources, tutorials etc.: &lt;a href=&#34;https://github.com/ethereum/awesome-remix&#34;&gt;https://github.com/ethereum/awesome-remix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Medium: &lt;a href=&#34;https://medium.com/remix-ide&#34;&gt;https://medium.com/remix-ide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/ethereumremix&#34;&gt;https://twitter.com/ethereumremix&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>luin/ioredis</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/luin/ioredis</id>
    <link href="https://github.com/luin/ioredis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄ A robust, performance-focused, and full-featured Redis client for Node.js.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/luin/ioredis&#34;&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/luin/ioredis@b5e8c74/logo.svg?sanitize=true&#34; alt=&#34;ioredis&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luin/ioredis/actions/workflows/release.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/luin/ioredis/actions/workflows/release.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/luin/ioredis?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/luin/ioredis/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/luin/ioredis?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/luin/ioredis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://commitizen.github.io/cz-cli/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true&#34; alt=&#34;Commitizen friendly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34; alt=&#34;semantic-release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A robust, performance-focused and full-featured &lt;a href=&#34;http://redis.io&#34;&gt;Redis&lt;/a&gt; client for &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Supports Redis &amp;gt;= 2.6.12 and (Node.js &amp;gt;= 12.22.0). Completely compatible with Redis 7.x.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;ioredis is a robust, full-featured Redis client that is used in the world&#39;s biggest online commerce company &lt;a href=&#34;http://www.alibaba.com/&#34;&gt;Alibaba&lt;/a&gt; and many other awesome companies.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Full-featured. It supports &lt;a href=&#34;http://redis.io/topics/cluster-tutorial&#34;&gt;Cluster&lt;/a&gt;, &lt;a href=&#34;https://redis.io/docs/reference/sentinel-clients&#34;&gt;Sentinel&lt;/a&gt;, &lt;a href=&#34;https://redis.io/topics/streams-intro&#34;&gt;Streams&lt;/a&gt;, &lt;a href=&#34;http://redis.io/topics/pipelining&#34;&gt;Pipelining&lt;/a&gt;, and of course &lt;a href=&#34;http://redis.io/commands/eval&#34;&gt;Lua scripting&lt;/a&gt;, &lt;a href=&#34;https://redis.io/topics/functions-intro&#34;&gt;Redis Functions&lt;/a&gt;, &lt;a href=&#34;http://redis.io/topics/pubsub&#34;&gt;Pub/Sub&lt;/a&gt; (with the support of binary messages).&lt;/li&gt; &#xA; &lt;li&gt;High performance üöÄ.&lt;/li&gt; &#xA; &lt;li&gt;Delightful API üòÑ. It works with Node callbacks and Native promises.&lt;/li&gt; &#xA; &lt;li&gt;Transformation of command arguments and replies.&lt;/li&gt; &#xA; &lt;li&gt;Transparent key prefixing.&lt;/li&gt; &#xA; &lt;li&gt;Abstraction for Lua scripting, allowing you to &lt;a href=&#34;https://github.com/luin/ioredis#lua-scripting&#34;&gt;define custom commands&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://github.com/luin/ioredis#handle-binary-data&#34;&gt;binary data&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://github.com/luin/ioredis#tls-options&#34;&gt;TLS&lt;/a&gt; üîí.&lt;/li&gt; &#xA; &lt;li&gt;Supports offline queue and ready checking.&lt;/li&gt; &#xA; &lt;li&gt;Supports ES6 types, such as &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Supports GEO commands üìç.&lt;/li&gt; &#xA; &lt;li&gt;Supports Redis ACL.&lt;/li&gt; &#xA; &lt;li&gt;Sophisticated error handling strategy.&lt;/li&gt; &#xA; &lt;li&gt;Supports NAT mapping.&lt;/li&gt; &#xA; &lt;li&gt;Supports autopipelining.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;100% written in TypeScript and official declarations are provided:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;837&#34; src=&#34;https://raw.githubusercontent.com/luin/ioredis/main/resources/ts-screenshot.png&#34; alt=&#34;TypeScript Screenshot&#34;&gt; &#xA;&lt;h1&gt;Versions&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Node.js Version&lt;/th&gt; &#xA;   &lt;th&gt;Redis Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5.x.x (latest)&lt;/td&gt; &#xA;   &lt;td&gt;main&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 12&lt;/td&gt; &#xA;   &lt;td&gt;2.6.12 ~ latest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.x.x&lt;/td&gt; &#xA;   &lt;td&gt;v4&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 6&lt;/td&gt; &#xA;   &lt;td&gt;2.6.12 ~ 7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; for features and bug fixes introduced in v5.&lt;/p&gt; &#xA;&lt;p&gt;üöÄ &lt;a href=&#34;https://github.com/luin/ioredis/wiki/Upgrading-from-v4-to-v5&#34;&gt;Upgrading from v4 to v5&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://luin.github.io/ioredis/&#34;&gt;API Documentation&lt;/a&gt; (&lt;a href=&#34;https://luin.github.io/ioredis/classes/Redis.html&#34;&gt;Redis&lt;/a&gt;, &lt;a href=&#34;https://luin.github.io/ioredis/classes/Cluster.html&#34;&gt;Cluster&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luin/ioredis/wiki/Migrating-from-node_redis&#34;&gt;Migrating from node_redis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Sponsors&lt;/h1&gt; &#xA;&lt;h3&gt;Upstash: Serverless Database for Redis&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://upstash.com/?utm_source=ioredis&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/luin/ioredis/main/resources/upstash.png&#34; alt=&#34;Upstash&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Upstash is a Serverless Database with Redis/REST API and durable storage. It is the perfect database for your applications thanks to its per request pricing and low latency data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://upstash.com/?utm_source=ioredis&#34;&gt;Start for free in 30 seconds!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br clear=&#34;both&#34;&gt; &#xA;&lt;h3&gt;Redis Cloud: From the creators of Redis&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://redis.info/ioredis-tryfree&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;320&#34; src=&#34;https://raw.githubusercontent.com/luin/ioredis/main/resources/redis-tryfree.png&#34; alt=&#34;redis-tryfree&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Experience the best Redis. For a limited time, sign up to Redis Enterprise Cloud and use &lt;strong&gt;MATRIX200&lt;/strong&gt; to get $200 credits, and a chance to win a Tesla!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://redis.info/ioredis-tryfree&#34;&gt;Sign Up Now!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br clear=&#34;both&#34;&gt; &#xA;&lt;h3&gt;Medis: Redis GUI for macOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getmedis.com/&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;404&#34; src=&#34;https://raw.githubusercontent.com/luin/ioredis/main/resources/medis.png&#34; alt=&#34;Download on the App Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Looking for a Redis GUI for macOS, Windows and Linux? Here&#39;s &lt;a href=&#34;https://getmedis.com/&#34;&gt;Medis&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Medis is an open-sourced, beautiful, easy-to-use Redis GUI management application.&lt;/p&gt; &#xA;&lt;p&gt;Medis starts with all the basic features you need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keys viewing/editing&lt;/li&gt; &#xA; &lt;li&gt;SSH Tunnel for connecting with remote servers&lt;/li&gt; &#xA; &lt;li&gt;Terminal for executing custom commands&lt;/li&gt; &#xA; &lt;li&gt;And other awesome features...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luin/medis&#34;&gt;Medis 1 is open sourced on GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br clear=&#34;both&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install ioredis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a TypeScript project, you may want to add TypeScript declarations for Node.js:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install --save-dev @types/node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Import ioredis.&#xA;// You can also use `import Redis from &#34;ioredis&#34;`&#xA;// if your project is an ESM module or a TypeScript project.&#xA;const Redis = require(&#34;ioredis&#34;);&#xA;&#xA;// Create a Redis instance.&#xA;// By default, it will connect to localhost:6379.&#xA;// We are going to cover how to specify connection options soon.&#xA;const redis = new Redis();&#xA;&#xA;redis.set(&#34;mykey&#34;, &#34;value&#34;); // Returns a promise which resolves to &#34;OK&#34; when the command succeeds.&#xA;&#xA;// ioredis supports the node.js callback style&#xA;redis.get(&#34;mykey&#34;, (err, result) =&amp;gt; {&#xA;  if (err) {&#xA;    console.error(err);&#xA;  } else {&#xA;    console.log(result); // Prints &#34;value&#34;&#xA;  }&#xA;});&#xA;&#xA;// Or ioredis returns a promise if the last argument isn&#39;t a function&#xA;redis.get(&#34;mykey&#34;).then((result) =&amp;gt; {&#xA;  console.log(result); // Prints &#34;value&#34;&#xA;});&#xA;&#xA;redis.zadd(&#34;sortedSet&#34;, 1, &#34;one&#34;, 2, &#34;dos&#34;, 4, &#34;quatro&#34;, 3, &#34;three&#34;);&#xA;redis.zrange(&#34;sortedSet&#34;, 0, 2, &#34;WITHSCORES&#34;).then((elements) =&amp;gt; {&#xA;  // [&#34;one&#34;, &#34;1&#34;, &#34;dos&#34;, &#34;2&#34;, &#34;three&#34;, &#34;3&#34;] as if the command was `redis&amp;gt; ZRANGE sortedSet 0 2 WITHSCORES`&#xA;  console.log(elements);&#xA;});&#xA;&#xA;// All arguments are passed directly to the redis server,&#xA;// so technically ioredis supports all Redis commands.&#xA;// The format is: redis[SOME_REDIS_COMMAND_IN_LOWERCASE](ARGUMENTS_ARE_JOINED_INTO_COMMAND_STRING)&#xA;// so the following statement is equivalent to the CLI: `redis&amp;gt; SET mykey hello EX 10`&#xA;redis.set(&#34;mykey&#34;, &#34;hello&#34;, &#34;EX&#34;, 10);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;code&gt;examples/&lt;/code&gt; folder for more examples. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/ttl.js&#34;&gt;TTL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/string.js&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/hash.js&#34;&gt;Hashes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/list.js&#34;&gt;Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/set.js&#34;&gt;Sets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/zset.js&#34;&gt;Sorted Sets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/stream.js&#34;&gt;Streams&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/module.js&#34;&gt;Redis Modules&lt;/a&gt; e.g. RedisJSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All Redis commands are supported. See &lt;a href=&#34;https://luin.github.io/ioredis/classes/Redis.html&#34;&gt;the documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Connect to Redis&lt;/h2&gt; &#xA;&lt;p&gt;When a new &lt;code&gt;Redis&lt;/code&gt; instance is created, a connection to Redis will be created at the same time. You can specify which Redis to connect to by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;new Redis(); // Connect to 127.0.0.1:6379&#xA;new Redis(6380); // 127.0.0.1:6380&#xA;new Redis(6379, &#34;192.168.1.1&#34;); // 192.168.1.1:6379&#xA;new Redis(&#34;/tmp/redis.sock&#34;);&#xA;new Redis({&#xA;  port: 6379, // Redis port&#xA;  host: &#34;127.0.0.1&#34;, // Redis host&#xA;  username: &#34;default&#34;, // needs Redis &amp;gt;= 6&#xA;  password: &#34;my-top-secret&#34;,&#xA;  db: 0, // Defaults to 0&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify connection options as a &lt;a href=&#34;http://www.iana.org/assignments/uri-schemes/prov/redis&#34;&gt;&lt;code&gt;redis://&lt;/code&gt; URL&lt;/a&gt; or &lt;a href=&#34;https://www.iana.org/assignments/uri-schemes/prov/rediss&#34;&gt;&lt;code&gt;rediss://&lt;/code&gt; URL&lt;/a&gt; when using &lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/#tls-options&#34;&gt;TLS encryption&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Connect to 127.0.0.1:6380, db 4, using password &#34;authpassword&#34;:&#xA;new Redis(&#34;redis://:authpassword@127.0.0.1:6380/4&#34;);&#xA;&#xA;// Username can also be passed via URI.&#xA;new Redis(&#34;redis://username:authpassword@127.0.0.1:6380/4&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://luin.github.io/ioredis/index.html#RedisOptions&#34;&gt;API Documentation&lt;/a&gt; for all available options.&lt;/p&gt; &#xA;&lt;h2&gt;Pub/Sub&lt;/h2&gt; &#xA;&lt;p&gt;Redis provides several commands for developers to implement the &lt;a href=&#34;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&#34;&gt;Publish‚Äìsubscribe pattern&lt;/a&gt;. There are two roles in this pattern: publisher and subscriber. Publishers are not programmed to send their messages to specific subscribers. Rather, published messages are characterized into channels, without knowledge of what (if any) subscribers there may be.&lt;/p&gt; &#xA;&lt;p&gt;By leveraging Node.js&#39;s built-in events module, ioredis makes pub/sub very straightforward to use. Below is a simple example that consists of two files, one is publisher.js that publishes messages to a channel, the other is subscriber.js that listens for messages on specific channels.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// publisher.js&#xA;&#xA;const Redis = require(&#34;ioredis&#34;);&#xA;const redis = new Redis();&#xA;&#xA;setInterval(() =&amp;gt; {&#xA;  const message = { foo: Math.random() };&#xA;  // Publish to my-channel-1 or my-channel-2 randomly.&#xA;  const channel = `my-channel-${1 + Math.round(Math.random())}`;&#xA;&#xA;  // Message can be either a string or a buffer&#xA;  redis.publish(channel, JSON.stringify(message));&#xA;  console.log(&#34;Published %s to %s&#34;, message, channel);&#xA;}, 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// subscriber.js&#xA;&#xA;const Redis = require(&#34;ioredis&#34;);&#xA;const redis = new Redis();&#xA;&#xA;redis.subscribe(&#34;my-channel-1&#34;, &#34;my-channel-2&#34;, (err, count) =&amp;gt; {&#xA;  if (err) {&#xA;    // Just like other commands, subscribe() can fail for some reasons,&#xA;    // ex network issues.&#xA;    console.error(&#34;Failed to subscribe: %s&#34;, err.message);&#xA;  } else {&#xA;    // `count` represents the number of channels this client are currently subscribed to.&#xA;    console.log(&#xA;      `Subscribed successfully! This client is currently subscribed to ${count} channels.`&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;redis.on(&#34;message&#34;, (channel, message) =&amp;gt; {&#xA;  console.log(`Received ${message} from ${channel}`);&#xA;});&#xA;&#xA;// There&#39;s also an event called &#39;messageBuffer&#39;, which is the same as &#39;message&#39; except&#xA;// it returns buffers instead of strings.&#xA;// It&#39;s useful when the messages are binary data.&#xA;redis.on(&#34;messageBuffer&#34;, (channel, message) =&amp;gt; {&#xA;  // Both `channel` and `message` are buffers.&#xA;  console.log(channel, message);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s worth noticing that a connection (aka a &lt;code&gt;Redis&lt;/code&gt; instance) can&#39;t play both roles at the same time. More specifically, when a client issues &lt;code&gt;subscribe()&lt;/code&gt; or &lt;code&gt;psubscribe()&lt;/code&gt;, it enters the &#34;subscriber&#34; mode. From that point, only commands that modify the subscription set are valid. Namely, they are: &lt;code&gt;subscribe&lt;/code&gt;, &lt;code&gt;psubscribe&lt;/code&gt;, &lt;code&gt;unsubscribe&lt;/code&gt;, &lt;code&gt;punsubscribe&lt;/code&gt;, &lt;code&gt;ping&lt;/code&gt;, and &lt;code&gt;quit&lt;/code&gt;. When the subscription set is empty (via &lt;code&gt;unsubscribe&lt;/code&gt;/&lt;code&gt;punsubscribe&lt;/code&gt;), the connection is put back into the regular mode.&lt;/p&gt; &#xA;&lt;p&gt;If you want to do pub/sub in the same file/process, you should create a separate connection:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const sub = new Redis();&#xA;const pub = new Redis();&#xA;&#xA;sub.subscribe(/* ... */); // From now, `sub` enters the subscriber mode.&#xA;sub.on(&#34;message&#34; /* ... */);&#xA;&#xA;setInterval(() =&amp;gt; {&#xA;  // `pub` can be used to publish messages, or send other regular commands (e.g. `hgetall`)&#xA;  // because it&#39;s not in the subscriber mode.&#xA;  pub.publish(/* ... */);&#xA;}, 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;PSUBSCRIBE&lt;/code&gt; is also supported in a similar way when you want to subscribe all channels whose name matches a pattern:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.psubscribe(&#34;pat?ern&#34;, (err, count) =&amp;gt; {});&#xA;&#xA;// Event names are &#34;pmessage&#34;/&#34;pmessageBuffer&#34; instead of &#34;message/messageBuffer&#34;.&#xA;redis.on(&#34;pmessage&#34;, (pattern, channel, message) =&amp;gt; {});&#xA;redis.on(&#34;pmessageBuffer&#34;, (pattern, channel, message) =&amp;gt; {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Streams&lt;/h2&gt; &#xA;&lt;p&gt;Redis v5 introduces a new data type called streams. It doubles as a communication channel for building streaming architectures and as a log-like data structure for persisting data. With ioredis, the usage can be pretty straightforward. Say we have a producer publishes messages to a stream with &lt;code&gt;redis.xadd(&#34;mystream&#34;, &#34;*&#34;, &#34;randomValue&#34;, Math.random())&lt;/code&gt; (You may find the &lt;a href=&#34;https://redis.io/topics/streams-intro&#34;&gt;official documentation of Streams&lt;/a&gt; as a starter to understand the parameters used), to consume the messages, we&#39;ll have a consumer with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const redis = new Redis();&#xA;&#xA;const processMessage = (message) =&amp;gt; {&#xA;  console.log(&#34;Id: %s. Data: %O&#34;, message[0], message[1]);&#xA;};&#xA;&#xA;async function listenForMessage(lastId = &#34;$&#34;) {&#xA;  // `results` is an array, each element of which corresponds to a key.&#xA;  // Because we only listen to one key (mystream) here, `results` only contains&#xA;  // a single element. See more: https://redis.io/commands/xread#return-value&#xA;  const results = await redis.xread(&#34;block&#34;, 0, &#34;STREAMS&#34;, &#34;mystream&#34;, lastId);&#xA;  const [key, messages] = results[0]; // `key` equals to &#34;mystream&#34;&#xA;&#xA;  messages.forEach(processMessage);&#xA;&#xA;  // Pass the last id of the results to the next round.&#xA;  await listenForMessage(messages[messages.length - 1][0]);&#xA;}&#xA;&#xA;listenForMessage();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Handle Binary Data&lt;/h2&gt; &#xA;&lt;p&gt;Binary data support is out of the box. Pass buffers to send binary data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.set(&#34;foo&#34;, Buffer.from([0x62, 0x75, 0x66]));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every command that returns a &lt;a href=&#34;https://redis.io/docs/reference/protocol-spec/#resp-bulk-strings&#34;&gt;bulk string&lt;/a&gt; has a variant command with a &lt;code&gt;Buffer&lt;/code&gt; suffix. The variant command returns a buffer instead of a UTF-8 string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const result = await redis.getBuffer(&#34;foo&#34;);&#xA;// result is `&amp;lt;Buffer 62 75 66&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s worth noticing that you don&#39;t need the &lt;code&gt;Buffer&lt;/code&gt; suffix variant in order to &lt;strong&gt;send&lt;/strong&gt; binary data. That means in most case you should just use &lt;code&gt;redis.set()&lt;/code&gt; instead of &lt;code&gt;redis.setBuffer()&lt;/code&gt; unless you want to get the old value with the &lt;code&gt;GET&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const result = await redis.setBuffer(&#34;foo&#34;, &#34;new value&#34;, &#34;GET&#34;);&#xA;// result is `&amp;lt;Buffer 62 75 66&amp;gt;` as `GET` indicates returning the old value.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pipelining&lt;/h2&gt; &#xA;&lt;p&gt;If you want to send a batch of commands (e.g. &amp;gt; 5), you can use pipelining to queue the commands in memory and then send them to Redis all at once. This way the performance improves by 50%~300% (See &lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/#benchmarks&#34;&gt;benchmark section&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;redis.pipeline()&lt;/code&gt; creates a &lt;code&gt;Pipeline&lt;/code&gt; instance. You can call any Redis commands on it just like the &lt;code&gt;Redis&lt;/code&gt; instance. The commands are queued in memory and flushed to Redis by calling the &lt;code&gt;exec&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const pipeline = redis.pipeline();&#xA;pipeline.set(&#34;foo&#34;, &#34;bar&#34;);&#xA;pipeline.del(&#34;cc&#34;);&#xA;pipeline.exec((err, results) =&amp;gt; {&#xA;  // `err` is always null, and `results` is an array of responses&#xA;  // corresponding to the sequence of queued commands.&#xA;  // Each response follows the format `[err, result]`.&#xA;});&#xA;&#xA;// You can even chain the commands:&#xA;redis&#xA;  .pipeline()&#xA;  .set(&#34;foo&#34;, &#34;bar&#34;)&#xA;  .del(&#34;cc&#34;)&#xA;  .exec((err, results) =&amp;gt; {});&#xA;&#xA;// `exec` also returns a Promise:&#xA;const promise = redis.pipeline().set(&#34;foo&#34;, &#34;bar&#34;).get(&#34;foo&#34;).exec();&#xA;promise.then((result) =&amp;gt; {&#xA;  // result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each chained command can also have a callback, which will be invoked when the command gets a reply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .pipeline()&#xA;  .set(&#34;foo&#34;, &#34;bar&#34;)&#xA;  .get(&#34;foo&#34;, (err, result) =&amp;gt; {&#xA;    // result === &#39;bar&#39;&#xA;  })&#xA;  .exec((err, result) =&amp;gt; {&#xA;    // result[1][1] === &#39;bar&#39;&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to adding commands to the &lt;code&gt;pipeline&lt;/code&gt; queue individually, you can also pass an array of commands and arguments to the constructor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .pipeline([&#xA;    [&#34;set&#34;, &#34;foo&#34;, &#34;bar&#34;],&#xA;    [&#34;get&#34;, &#34;foo&#34;],&#xA;  ])&#xA;  .exec(() =&amp;gt; {&#xA;    /* ... */&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;#length&lt;/code&gt; property shows how many commands in the pipeline:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const length = redis.pipeline().set(&#34;foo&#34;, &#34;bar&#34;).get(&#34;foo&#34;).length;&#xA;// length === 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Transaction&lt;/h2&gt; &#xA;&lt;p&gt;Most of the time, the transaction commands &lt;code&gt;multi&lt;/code&gt; &amp;amp; &lt;code&gt;exec&lt;/code&gt; are used together with pipeline. Therefore, when &lt;code&gt;multi&lt;/code&gt; is called, a &lt;code&gt;Pipeline&lt;/code&gt; instance is created automatically by default, so you can use &lt;code&gt;multi&lt;/code&gt; just like &lt;code&gt;pipeline&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .multi()&#xA;  .set(&#34;foo&#34;, &#34;bar&#34;)&#xA;  .get(&#34;foo&#34;)&#xA;  .exec((err, results) =&amp;gt; {&#xA;    // results === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If there&#39;s a syntax error in the transaction&#39;s command chain (e.g. wrong number of arguments, wrong command name, etc), then none of the commands would be executed, and an error is returned:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .multi()&#xA;  .set(&#34;foo&#34;)&#xA;  .set(&#34;foo&#34;, &#34;new value&#34;)&#xA;  .exec((err, results) =&amp;gt; {&#xA;    // err:&#xA;    //  { [ReplyError: EXECABORT Transaction discarded because of previous errors.]&#xA;    //    name: &#39;ReplyError&#39;,&#xA;    //    message: &#39;EXECABORT Transaction discarded because of previous errors.&#39;,&#xA;    //    command: { name: &#39;exec&#39;, args: [] },&#xA;    //    previousErrors:&#xA;    //     [ { [ReplyError: ERR wrong number of arguments for &#39;set&#39; command]&#xA;    //         name: &#39;ReplyError&#39;,&#xA;    //         message: &#39;ERR wrong number of arguments for \&#39;set\&#39; command&#39;,&#xA;    //         command: [Object] } ] }&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In terms of the interface, &lt;code&gt;multi&lt;/code&gt; differs from &lt;code&gt;pipeline&lt;/code&gt; in that when specifying a callback to each chained command, the queueing state is passed to the callback instead of the result of the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .multi()&#xA;  .set(&#34;foo&#34;, &#34;bar&#34;, (err, result) =&amp;gt; {&#xA;    // result === &#39;QUEUED&#39;&#xA;  })&#xA;  .exec(/* ... */);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use transaction without pipeline, pass &lt;code&gt;{ pipeline: false }&lt;/code&gt; to &lt;code&gt;multi&lt;/code&gt;, and every command will be sent to Redis immediately without waiting for an &lt;code&gt;exec&lt;/code&gt; invocation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.multi({ pipeline: false });&#xA;redis.set(&#34;foo&#34;, &#34;bar&#34;);&#xA;redis.get(&#34;foo&#34;);&#xA;redis.exec((err, result) =&amp;gt; {&#xA;  // result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The constructor of &lt;code&gt;multi&lt;/code&gt; also accepts a batch of commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .multi([&#xA;    [&#34;set&#34;, &#34;foo&#34;, &#34;bar&#34;],&#xA;    [&#34;get&#34;, &#34;foo&#34;],&#xA;  ])&#xA;  .exec(() =&amp;gt; {&#xA;    /* ... */&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inline transactions are supported by pipeline, which means you can group a subset of commands in the pipeline into a transaction:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis&#xA;  .pipeline()&#xA;  .get(&#34;foo&#34;)&#xA;  .multi()&#xA;  .set(&#34;foo&#34;, &#34;bar&#34;)&#xA;  .get(&#34;foo&#34;)&#xA;  .exec()&#xA;  .get(&#34;foo&#34;)&#xA;  .exec();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Lua Scripting&lt;/h2&gt; &#xA;&lt;p&gt;ioredis supports all of the scripting commands such as &lt;code&gt;EVAL&lt;/code&gt;, &lt;code&gt;EVALSHA&lt;/code&gt; and &lt;code&gt;SCRIPT&lt;/code&gt;. However, it&#39;s tedious to use in real world scenarios since developers have to take care of script caching and to detect when to use &lt;code&gt;EVAL&lt;/code&gt; and when to use &lt;code&gt;EVALSHA&lt;/code&gt;. ioredis exposes a &lt;code&gt;defineCommand&lt;/code&gt; method to make scripting much easier to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis();&#xA;&#xA;// This will define a command myecho:&#xA;redis.defineCommand(&#34;myecho&#34;, {&#xA;  numberOfKeys: 2,&#xA;  lua: &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34;,&#xA;});&#xA;&#xA;// Now `myecho` can be used just like any other ordinary command,&#xA;// and ioredis will try to use `EVALSHA` internally when possible for better performance.&#xA;redis.myecho(&#34;k1&#34;, &#34;k2&#34;, &#34;a1&#34;, &#34;a2&#34;, (err, result) =&amp;gt; {&#xA;  // result === [&#39;k1&#39;, &#39;k2&#39;, &#39;a1&#39;, &#39;a2&#39;]&#xA;});&#xA;&#xA;// `myechoBuffer` is also defined automatically to return buffers instead of strings:&#xA;redis.myechoBuffer(&#34;k1&#34;, &#34;k2&#34;, &#34;a1&#34;, &#34;a2&#34;, (err, result) =&amp;gt; {&#xA;  // result[0] equals to Buffer.from(&#39;k1&#39;);&#xA;});&#xA;&#xA;// And of course it works with pipeline:&#xA;redis.pipeline().set(&#34;foo&#34;, &#34;bar&#34;).myecho(&#34;k1&#34;, &#34;k2&#34;, &#34;a1&#34;, &#34;a2&#34;).exec();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dynamic Keys&lt;/h3&gt; &#xA;&lt;p&gt;If the number of keys can&#39;t be determined when defining a command, you can omit the &lt;code&gt;numberOfKeys&lt;/code&gt; property and pass the number of keys as the first argument when you call the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.defineCommand(&#34;echoDynamicKeyNumber&#34;, {&#xA;  lua: &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34;,&#xA;});&#xA;&#xA;// Now you have to pass the number of keys as the first argument every time&#xA;// you invoke the `echoDynamicKeyNumber` command:&#xA;redis.echoDynamicKeyNumber(2, &#34;k1&#34;, &#34;k2&#34;, &#34;a1&#34;, &#34;a2&#34;, (err, result) =&amp;gt; {&#xA;  // result === [&#39;k1&#39;, &#39;k2&#39;, &#39;a1&#39;, &#39;a2&#39;]&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;As Constructor Options&lt;/h3&gt; &#xA;&lt;p&gt;Besides &lt;code&gt;defineCommand()&lt;/code&gt;, you can also define custom commands with the &lt;code&gt;scripts&lt;/code&gt; constructor option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  scripts: {&#xA;    myecho: {&#xA;      numberOfKeys: 2,&#xA;      lua: &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34;,&#xA;    },&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TypeScript Usages&lt;/h3&gt; &#xA;&lt;p&gt;You can refer to &lt;a href=&#34;https://raw.githubusercontent.com/luin/ioredis/main/examples/typescript/scripts.ts&#34;&gt;the example&lt;/a&gt; for how to declare your custom commands.&lt;/p&gt; &#xA;&lt;h2&gt;Transparent Key Prefixing&lt;/h2&gt; &#xA;&lt;p&gt;This feature allows you to specify a string that will automatically be prepended to all the keys in a command, which makes it easier to manage your key namespaces.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; This feature won&#39;t apply to commands like &lt;a href=&#34;http://redis.io/commands/KEYS&#34;&gt;KEYS&lt;/a&gt; and &lt;a href=&#34;http://redis.io/commands/scan&#34;&gt;SCAN&lt;/a&gt; that take patterns rather than actual keys(&lt;a href=&#34;https://github.com/luin/ioredis/issues/239&#34;&gt;#239&lt;/a&gt;), and this feature also won&#39;t apply to the replies of commands even if they are key names (&lt;a href=&#34;https://github.com/luin/ioredis/issues/325&#34;&gt;#325&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const fooRedis = new Redis({ keyPrefix: &#34;foo:&#34; });&#xA;fooRedis.set(&#34;bar&#34;, &#34;baz&#34;); // Actually sends SET foo:bar baz&#xA;&#xA;fooRedis.defineCommand(&#34;myecho&#34;, {&#xA;  numberOfKeys: 2,&#xA;  lua: &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34;,&#xA;});&#xA;&#xA;// Works well with pipelining/transaction&#xA;fooRedis&#xA;  .pipeline()&#xA;  // Sends SORT foo:list BY foo:weight_*-&amp;gt;fieldname&#xA;  .sort(&#34;list&#34;, &#34;BY&#34;, &#34;weight_*-&amp;gt;fieldname&#34;)&#xA;  // Supports custom commands&#xA;  // Sends EVALSHA xxx foo:k1 foo:k2 a1 a2&#xA;  .myecho(&#34;k1&#34;, &#34;k2&#34;, &#34;a1&#34;, &#34;a2&#34;)&#xA;  .exec();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Transforming Arguments &amp;amp; Replies&lt;/h2&gt; &#xA;&lt;p&gt;Most Redis commands take one or more Strings as arguments, and replies are sent back as a single String or an Array of Strings. However, sometimes you may want something different. For instance, it would be more convenient if the &lt;code&gt;HGETALL&lt;/code&gt; command returns a hash (e.g. &lt;code&gt;{ key: val1, key2: v2 }&lt;/code&gt;) rather than an array of key values (e.g. &lt;code&gt;[key1, val1, key2, val2]&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;ioredis has a flexible system for transforming arguments and replies. There are two types of transformers, argument transformer and reply transformer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;&#xA;// Here&#39;s the built-in argument transformer converting&#xA;// hmset(&#39;key&#39;, { k1: &#39;v1&#39;, k2: &#39;v2&#39; })&#xA;// or&#xA;// hmset(&#39;key&#39;, new Map([[&#39;k1&#39;, &#39;v1&#39;], [&#39;k2&#39;, &#39;v2&#39;]]))&#xA;// into&#xA;// hmset(&#39;key&#39;, &#39;k1&#39;, &#39;v1&#39;, &#39;k2&#39;, &#39;v2&#39;)&#xA;Redis.Command.setArgumentTransformer(&#34;hmset&#34;, (args) =&amp;gt; {&#xA;  if (args.length === 2) {&#xA;    if (args[1] instanceof Map) {&#xA;      // utils is a internal module of ioredis&#xA;      return [args[0], ...utils.convertMapToArray(args[1])];&#xA;    }&#xA;    if (typeof args[1] === &#34;object&#34; &amp;amp;&amp;amp; args[1] !== null) {&#xA;      return [args[0], ...utils.convertObjectToArray(args[1])];&#xA;    }&#xA;  }&#xA;  return args;&#xA;});&#xA;&#xA;// Here&#39;s the built-in reply transformer converting the HGETALL reply&#xA;// [&#39;k1&#39;, &#39;v1&#39;, &#39;k2&#39;, &#39;v2&#39;]&#xA;// into&#xA;// { k1: &#39;v1&#39;, &#39;k2&#39;: &#39;v2&#39; }&#xA;Redis.Command.setReplyTransformer(&#34;hgetall&#34;, (result) =&amp;gt; {&#xA;  if (Array.isArray(result)) {&#xA;    const obj = {};&#xA;    for (let i = 0; i &amp;lt; result.length; i += 2) {&#xA;      obj[result[i]] = result[i + 1];&#xA;    }&#xA;    return obj;&#xA;  }&#xA;  return result;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are three built-in transformers, two argument transformers for &lt;code&gt;hmset&lt;/code&gt; &amp;amp; &lt;code&gt;mset&lt;/code&gt; and a reply transformer for &lt;code&gt;hgetall&lt;/code&gt;. Transformers for &lt;code&gt;hmset&lt;/code&gt; and &lt;code&gt;hgetall&lt;/code&gt; were mentioned above, and the transformer for &lt;code&gt;mset&lt;/code&gt; is similar to the one for &lt;code&gt;hmset&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.mset({ k1: &#34;v1&#34;, k2: &#34;v2&#34; });&#xA;redis.get(&#34;k1&#34;, (err, result) =&amp;gt; {&#xA;  // result === &#39;v1&#39;;&#xA;});&#xA;&#xA;redis.mset(&#xA;  new Map([&#xA;    [&#34;k3&#34;, &#34;v3&#34;],&#xA;    [&#34;k4&#34;, &#34;v4&#34;],&#xA;  ])&#xA;);&#xA;redis.get(&#34;k3&#34;, (err, result) =&amp;gt; {&#xA;  // result === &#39;v3&#39;;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another useful example of a reply transformer is one that changes &lt;code&gt;hgetall&lt;/code&gt; to return array of arrays instead of objects which avoids an unwanted conversation of hash keys to strings when dealing with binary hash keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Redis.Command.setReplyTransformer(&#34;hgetall&#34;, (result) =&amp;gt; {&#xA;  const arr = [];&#xA;  for (let i = 0; i &amp;lt; result.length; i += 2) {&#xA;    arr.push([result[i], result[i + 1]]);&#xA;  }&#xA;  return arr;&#xA;});&#xA;redis.hset(&#34;h1&#34;, Buffer.from([0x01]), Buffer.from([0x02]));&#xA;redis.hset(&#34;h1&#34;, Buffer.from([0x03]), Buffer.from([0x04]));&#xA;redis.hgetallBuffer(&#34;h1&#34;, (err, result) =&amp;gt; {&#xA;  // result === [ [ &amp;lt;Buffer 01&amp;gt;, &amp;lt;Buffer 02&amp;gt; ], [ &amp;lt;Buffer 03&amp;gt;, &amp;lt;Buffer 04&amp;gt; ] ];&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitor&lt;/h2&gt; &#xA;&lt;p&gt;Redis supports the MONITOR command, which lets you see all commands received by the Redis server across all client connections, including from other client libraries and other computers.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;monitor&lt;/code&gt; method returns a monitor instance. After you send the MONITOR command, no other commands are valid on that connection. ioredis will emit a monitor event for every new monitor message that comes across. The callback for the monitor event takes a timestamp from the Redis server and an array of command arguments.&lt;/p&gt; &#xA;&lt;p&gt;Here is a simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;redis.monitor((err, monitor) =&amp;gt; {&#xA;  monitor.on(&#34;monitor&#34;, (time, args, source, database) =&amp;gt; {});&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is another example illustrating an &lt;code&gt;async&lt;/code&gt; function and &lt;code&gt;monitor.disconnect()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;async () =&amp;gt; {&#xA;  const monitor = await redis.monitor();&#xA;  monitor.on(&#34;monitor&#34;, console.log);&#xA;  // Any other tasks&#xA;  monitor.disconnect();&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Streamify Scanning&lt;/h2&gt; &#xA;&lt;p&gt;Redis 2.8 added the &lt;code&gt;SCAN&lt;/code&gt; command to incrementally iterate through the keys in the database. It&#39;s different from &lt;code&gt;KEYS&lt;/code&gt; in that &lt;code&gt;SCAN&lt;/code&gt; only returns a small number of elements each call, so it can be used in production without the downside of blocking the server for a long time. However, it requires recording the cursor on the client side each time the &lt;code&gt;SCAN&lt;/code&gt; command is called in order to iterate through all the keys correctly. Since it&#39;s a relatively common use case, ioredis provides a streaming interface for the &lt;code&gt;SCAN&lt;/code&gt; command to make things much easier. A readable stream can be created by calling &lt;code&gt;scanStream&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis();&#xA;// Create a readable stream (object mode)&#xA;const stream = redis.scanStream();&#xA;stream.on(&#34;data&#34;, (resultKeys) =&amp;gt; {&#xA;  // `resultKeys` is an array of strings representing key names.&#xA;  // Note that resultKeys may contain 0 keys, and that it will sometimes&#xA;  // contain duplicates due to SCAN&#39;s implementation in Redis.&#xA;  for (let i = 0; i &amp;lt; resultKeys.length; i++) {&#xA;    console.log(resultKeys[i]);&#xA;  }&#xA;});&#xA;stream.on(&#34;end&#34;, () =&amp;gt; {&#xA;  console.log(&#34;all keys have been visited&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;scanStream&lt;/code&gt; accepts an option, with which you can specify the &lt;code&gt;MATCH&lt;/code&gt; pattern, the &lt;code&gt;TYPE&lt;/code&gt; filter, and the &lt;code&gt;COUNT&lt;/code&gt; argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const stream = redis.scanStream({&#xA;  // only returns keys following the pattern of `user:*`&#xA;  match: &#34;user:*&#34;,&#xA;  // only return objects that match a given type,&#xA;  // (requires Redis &amp;gt;= 6.0)&#xA;  type: &#34;zset&#34;,&#xA;  // returns approximately 100 elements per call&#xA;  count: 100,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just like other commands, &lt;code&gt;scanStream&lt;/code&gt; has a binary version &lt;code&gt;scanBufferStream&lt;/code&gt;, which returns an array of buffers. It&#39;s useful when the key names are not utf8 strings.&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;code&gt;hscanStream&lt;/code&gt;, &lt;code&gt;zscanStream&lt;/code&gt; and &lt;code&gt;sscanStream&lt;/code&gt; to iterate through elements in a hash, zset and set. The interface of each is similar to &lt;code&gt;scanStream&lt;/code&gt; except the first argument is the key name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const stream = redis.hscanStream(&#34;myhash&#34;, {&#xA;  match: &#34;age:??&#34;,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can learn more from the &lt;a href=&#34;http://redis.io/commands/scan&#34;&gt;Redis documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Useful Tips&lt;/strong&gt; It&#39;s pretty common that doing an async task in the &lt;code&gt;data&lt;/code&gt; handler. We&#39;d like the scanning process to be paused until the async task to be finished. &lt;code&gt;Stream#pause()&lt;/code&gt; and &lt;code&gt;Stream#resume()&lt;/code&gt; do the trick. For example if we want to migrate data in Redis to MySQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const stream = redis.scanStream();&#xA;stream.on(&#34;data&#34;, (resultKeys) =&amp;gt; {&#xA;  // Pause the stream from scanning more keys until we&#39;ve migrated the current keys.&#xA;  stream.pause();&#xA;&#xA;  Promise.all(resultKeys.map(migrateKeyToMySQL)).then(() =&amp;gt; {&#xA;    // Resume the stream here.&#xA;    stream.resume();&#xA;  });&#xA;});&#xA;&#xA;stream.on(&#34;end&#34;, () =&amp;gt; {&#xA;  console.log(&#34;done migration&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Auto-reconnect&lt;/h2&gt; &#xA;&lt;p&gt;By default, ioredis will try to reconnect when the connection to Redis is lost except when the connection is closed manually by &lt;code&gt;redis.disconnect()&lt;/code&gt; or &lt;code&gt;redis.quit()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s very flexible to control how long to wait to reconnect after disconnection using the &lt;code&gt;retryStrategy&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  // This is the default value of `retryStrategy`&#xA;  retryStrategy(times) {&#xA;    const delay = Math.min(times * 50, 2000);&#xA;    return delay;&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;retryStrategy&lt;/code&gt; is a function that will be called when the connection is lost. The argument &lt;code&gt;times&lt;/code&gt; means this is the nth reconnection being made and the return value represents how long (in ms) to wait to reconnect. When the return value isn&#39;t a number, ioredis will stop trying to reconnect, and the connection will be lost forever if the user doesn&#39;t call &lt;code&gt;redis.connect()&lt;/code&gt; manually.&lt;/p&gt; &#xA;&lt;p&gt;When reconnected, the client will auto subscribe to channels that the previous connection subscribed to. This behavior can be disabled by setting the &lt;code&gt;autoResubscribe&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And if the previous connection has some unfulfilled commands (most likely blocking commands such as &lt;code&gt;brpop&lt;/code&gt; and &lt;code&gt;blpop&lt;/code&gt;), the client will resend them when reconnected. This behavior can be disabled by setting the &lt;code&gt;autoResendUnfulfilledCommands&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default, all pending commands will be flushed with an error every 20 retry attempts. That makes sure commands won&#39;t wait forever when the connection is down. You can change this behavior by setting &lt;code&gt;maxRetriesPerRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  maxRetriesPerRequest: 1,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set maxRetriesPerRequest to &lt;code&gt;null&lt;/code&gt; to disable this behavior, and every command will wait forever until the connection is alive again (which is the default behavior before ioredis v4).&lt;/p&gt; &#xA;&lt;h3&gt;Reconnect on Error&lt;/h3&gt; &#xA;&lt;p&gt;Besides auto-reconnect when the connection is closed, ioredis supports reconnecting on certain Redis errors using the &lt;code&gt;reconnectOnError&lt;/code&gt; option. Here&#39;s an example that will reconnect when receiving &lt;code&gt;READONLY&lt;/code&gt; error:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  reconnectOnError(err) {&#xA;    const targetError = &#34;READONLY&#34;;&#xA;    if (err.message.includes(targetError)) {&#xA;      // Only reconnect when the error contains &#34;READONLY&#34;&#xA;      return true; // or `return 1;`&#xA;    }&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This feature is useful when using Amazon ElastiCache instances with Auto-failover disabled. On these instances, test your &lt;code&gt;reconnectOnError&lt;/code&gt; handler by manually promoting the replica node to the primary role using the AWS console. The following writes fail with the error &lt;code&gt;READONLY&lt;/code&gt;. Using &lt;code&gt;reconnectOnError&lt;/code&gt;, we can force the connection to reconnect on this error in order to connect to the new master. Furthermore, if the &lt;code&gt;reconnectOnError&lt;/code&gt; returns &lt;code&gt;2&lt;/code&gt;, ioredis will resend the failed command after reconnecting.&lt;/p&gt; &#xA;&lt;p&gt;On ElastiCache instances with Auto-failover enabled, &lt;code&gt;reconnectOnError&lt;/code&gt; does not execute. Instead of returning a Redis error, AWS closes all connections to the master endpoint until the new primary node is ready. ioredis reconnects via &lt;code&gt;retryStrategy&lt;/code&gt; instead of &lt;code&gt;reconnectOnError&lt;/code&gt; after about a minute. On ElastiCache instances with Auto-failover enabled, test failover events with the &lt;code&gt;Failover primary&lt;/code&gt; option in the AWS console.&lt;/p&gt; &#xA;&lt;h2&gt;Connection Events&lt;/h2&gt; &#xA;&lt;p&gt;The Redis instance will emit some events about the state of the connection to the Redis server.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Event&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;connect&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when a connection is established to the Redis server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ready&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;If &lt;code&gt;enableReadyCheck&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, client will emit &lt;code&gt;ready&lt;/code&gt; when the server reports that it is ready to receive commands (e.g. finish loading data from disk).&lt;br&gt;Otherwise, &lt;code&gt;ready&lt;/code&gt; will be emitted immediately right after the &lt;code&gt;connect&lt;/code&gt; event.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;error&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when an error occurs while connecting.&lt;br&gt;However, ioredis emits all &lt;code&gt;error&lt;/code&gt; events silently (only emits when there&#39;s at least one listener) so that your application won&#39;t crash if you&#39;re not listening to the &lt;code&gt;error&lt;/code&gt; event.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;close&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when an established Redis server connection has closed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reconnecting&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits after &lt;code&gt;close&lt;/code&gt; when a reconnection will be made. The argument of the event is the time (in ms) before reconnecting.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;end&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits after &lt;code&gt;close&lt;/code&gt; when no more reconnections will be made, or the connection is failed to establish.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;wait&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when &lt;code&gt;lazyConnect&lt;/code&gt; is set and will wait for the first command to be called before connecting.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can also check out the &lt;code&gt;Redis#status&lt;/code&gt; property to get the current connection status.&lt;/p&gt; &#xA;&lt;p&gt;Besides the above connection events, there are several other custom events:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Event&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;select&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when the database changed. The argument is the new db number.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Offline Queue&lt;/h2&gt; &#xA;&lt;p&gt;When a command can&#39;t be processed by Redis (being sent before the &lt;code&gt;ready&lt;/code&gt; event), by default, it&#39;s added to the offline queue and will be executed when it can be processed. You can disable this feature by setting the &lt;code&gt;enableOfflineQueue&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({ enableOfflineQueue: false });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TLS Options&lt;/h2&gt; &#xA;&lt;p&gt;Redis doesn&#39;t support TLS natively, however if the redis server you want to connect to is hosted behind a TLS proxy (e.g. &lt;a href=&#34;https://www.stunnel.org/&#34;&gt;stunnel&lt;/a&gt;) or is offered by a PaaS service that supports TLS connection (e.g. &lt;a href=&#34;https://redis.com/&#34;&gt;Redis.com&lt;/a&gt;), you can set the &lt;code&gt;tls&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  host: &#34;localhost&#34;,&#xA;  tls: {&#xA;    // Refer to `tls.connect()` section in&#xA;    // https://nodejs.org/api/tls.html&#xA;    // for all supported options&#xA;    ca: fs.readFileSync(&#34;cert.pem&#34;),&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, specify the connection through a &lt;a href=&#34;https://www.iana.org/assignments/uri-schemes/prov/rediss&#34;&gt;&lt;code&gt;rediss://&lt;/code&gt; URL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis(&#34;rediss://redis.my-service.com&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;TLS Profiles&lt;/h3&gt; &#xA;&lt;p&gt;To make it easier to configure we provide a few pre-configured TLS profiles that can be specified by setting the &lt;code&gt;tls&lt;/code&gt; option to the profile&#39;s name or specifying a &lt;code&gt;tls.profile&lt;/code&gt; option in case you need to customize some values of the profile.&lt;/p&gt; &#xA;&lt;p&gt;Profiles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RedisCloudFixed&lt;/code&gt;: Contains the CA for &lt;a href=&#34;https://redis.com/&#34;&gt;Redis.com&lt;/a&gt; Cloud fixed subscriptions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RedisCloudFlexible&lt;/code&gt;: Contains the CA for &lt;a href=&#34;https://redis.com/&#34;&gt;Redis.com&lt;/a&gt; Cloud flexible subscriptions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  host: &#34;localhost&#34;,&#xA;  tls: &#34;RedisCloudFixed&#34;,&#xA;});&#xA;&#xA;const redisWithClientCertificate = new Redis({&#xA;  host: &#34;localhost&#34;,&#xA;  tls: {&#xA;    profile: &#34;RedisCloudFixed&#34;,&#xA;    key: &#34;123&#34;,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Sentinel&lt;/h2&gt; &#xA;&lt;p&gt;ioredis supports Sentinel out of the box. It works transparently as all features that work when you connect to a single node also work when you connect to a sentinel group. Make sure to run Redis &amp;gt;= 2.8.12 if you want to use this feature. Sentinels have a default port of 26379.&lt;/p&gt; &#xA;&lt;p&gt;To connect using Sentinel, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const redis = new Redis({&#xA;  sentinels: [&#xA;    { host: &#34;localhost&#34;, port: 26379 },&#xA;    { host: &#34;localhost&#34;, port: 26380 },&#xA;  ],&#xA;  name: &#34;mymaster&#34;,&#xA;});&#xA;&#xA;redis.set(&#34;foo&#34;, &#34;bar&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The arguments passed to the constructor are different from the ones you use to connect to a single node, where:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt; identifies a group of Redis instances composed of a master and one or more slaves (&lt;code&gt;mymaster&lt;/code&gt; in the example);&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sentinelPassword&lt;/code&gt; (optional) password for Sentinel instances.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sentinels&lt;/code&gt; are a list of sentinels to connect to. The list does not need to enumerate all your sentinel instances, but a few so that if one is down the client will try the next one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;role&lt;/code&gt; (optional) with a value of &lt;code&gt;slave&lt;/code&gt; will return a random slave from the Sentinel group.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;preferredSlaves&lt;/code&gt; (optional) can be used to prefer a particular slave or set of slaves based on priority. It accepts a function or array.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;enableTLSForSentinelMode&lt;/code&gt; (optional) set to true if connecting to sentinel instances that are encrypted&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;ioredis &lt;strong&gt;guarantees&lt;/strong&gt; that the node you connected to is always a master even after a failover. When a failover happens, instead of trying to reconnect to the failed node (which will be demoted to slave when it&#39;s available again), ioredis will ask sentinels for the new master node and connect to it. All commands sent during the failover are queued and will be executed when the new connection is established so that none of the commands will be lost.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to connect to a slave instead of a master by specifying the option &lt;code&gt;role&lt;/code&gt; with the value of &lt;code&gt;slave&lt;/code&gt; and ioredis will try to connect to a random slave of the specified master, with the guarantee that the connected node is always a slave. If the current node is promoted to master due to a failover, ioredis will disconnect from it and ask the sentinels for another slave node to connect to.&lt;/p&gt; &#xA;&lt;p&gt;If you specify the option &lt;code&gt;preferredSlaves&lt;/code&gt; along with &lt;code&gt;role: &#39;slave&#39;&lt;/code&gt; ioredis will attempt to use this value when selecting the slave from the pool of available slaves. The value of &lt;code&gt;preferredSlaves&lt;/code&gt; should either be a function that accepts an array of available slaves and returns a single result, or an array of slave values priorities by the lowest &lt;code&gt;prio&lt;/code&gt; value first with a default value of &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// available slaves format&#xA;const availableSlaves = [{ ip: &#34;127.0.0.1&#34;, port: &#34;31231&#34;, flags: &#34;slave&#34; }];&#xA;&#xA;// preferredSlaves array format&#xA;let preferredSlaves = [&#xA;  { ip: &#34;127.0.0.1&#34;, port: &#34;31231&#34;, prio: 1 },&#xA;  { ip: &#34;127.0.0.1&#34;, port: &#34;31232&#34;, prio: 2 },&#xA;];&#xA;&#xA;// preferredSlaves function format&#xA;preferredSlaves = function (availableSlaves) {&#xA;  for (let i = 0; i &amp;lt; availableSlaves.length; i++) {&#xA;    const slave = availableSlaves[i];&#xA;    if (slave.ip === &#34;127.0.0.1&#34;) {&#xA;      if (slave.port === &#34;31234&#34;) {&#xA;        return slave;&#xA;      }&#xA;    }&#xA;  }&#xA;  // if no preferred slaves are available a random one is used&#xA;  return false;&#xA;};&#xA;&#xA;const redis = new Redis({&#xA;  sentinels: [&#xA;    { host: &#34;127.0.0.1&#34;, port: 26379 },&#xA;    { host: &#34;127.0.0.1&#34;, port: 26380 },&#xA;  ],&#xA;  name: &#34;mymaster&#34;,&#xA;  role: &#34;slave&#34;,&#xA;  preferredSlaves: preferredSlaves,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Besides the &lt;code&gt;retryStrategy&lt;/code&gt; option, there&#39;s also a &lt;code&gt;sentinelRetryStrategy&lt;/code&gt; in Sentinel mode which will be invoked when all the sentinel nodes are unreachable during connecting. If &lt;code&gt;sentinelRetryStrategy&lt;/code&gt; returns a valid delay time, ioredis will try to reconnect from scratch. The default value of &lt;code&gt;sentinelRetryStrategy&lt;/code&gt; is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function (times) {&#xA;  const delay = Math.min(times * 10, 1000);&#xA;  return delay;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cluster&lt;/h2&gt; &#xA;&lt;p&gt;Redis Cluster provides a way to run a Redis installation where data is automatically sharded across multiple Redis nodes. You can connect to a Redis Cluster like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;&#xA;const cluster = new Redis.Cluster([&#xA;  {&#xA;    port: 6380,&#xA;    host: &#34;127.0.0.1&#34;,&#xA;  },&#xA;  {&#xA;    port: 6381,&#xA;    host: &#34;127.0.0.1&#34;,&#xA;  },&#xA;]);&#xA;&#xA;cluster.set(&#34;foo&#34;, &#34;bar&#34;);&#xA;cluster.get(&#34;foo&#34;, (err, res) =&amp;gt; {&#xA;  // res === &#39;bar&#39;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Cluster&lt;/code&gt; constructor accepts two arguments, where:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;The first argument is a list of nodes of the cluster you want to connect to. Just like Sentinel, the list does not need to enumerate all your cluster nodes, but a few so that if one is unreachable the client will try the next one, and the client will discover other nodes automatically when at least one node is connected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The second argument is the options, where:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;clusterRetryStrategy&lt;/code&gt;: When none of the startup nodes are reachable, &lt;code&gt;clusterRetryStrategy&lt;/code&gt; will be invoked. When a number is returned, ioredis will try to reconnect to the startup nodes from scratch after the specified delay (in ms). Otherwise, an error of &#34;None of startup nodes is available&#34; will be returned. The default value of this option is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function (times) {&#xA;  const delay = Math.min(100 + times * 2, 2000);&#xA;  return delay;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It&#39;s possible to modify the &lt;code&gt;startupNodes&lt;/code&gt; property in order to switch to another set of nodes here:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function (times) {&#xA;  this.startupNodes = [{ port: 6790, host: &#39;127.0.0.1&#39; }];&#xA;  return Math.min(100 + times * 2, 2000);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;dnsLookup&lt;/code&gt;: Alternative DNS lookup function (&lt;code&gt;dns.lookup()&lt;/code&gt; is used by default). It may be useful to override this in special cases, such as when AWS ElastiCache used with TLS enabled.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;enableOfflineQueue&lt;/code&gt;: Similar to the &lt;code&gt;enableOfflineQueue&lt;/code&gt; option of &lt;code&gt;Redis&lt;/code&gt; class.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;enableReadyCheck&lt;/code&gt;: When enabled, &#34;ready&#34; event will only be emitted when &lt;code&gt;CLUSTER INFO&lt;/code&gt; command reporting the cluster is ready for handling commands. Otherwise, it will be emitted immediately after &#34;connect&#34; is emitted.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;scaleReads&lt;/code&gt;: Config where to send the read queries. See below for more details.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;maxRedirections&lt;/code&gt;: When a cluster related error (e.g. &lt;code&gt;MOVED&lt;/code&gt;, &lt;code&gt;ASK&lt;/code&gt; and &lt;code&gt;CLUSTERDOWN&lt;/code&gt; etc.) is received, the client will redirect the command to another node. This option limits the max redirections allowed when sending a command. The default value is &lt;code&gt;16&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;retryDelayOnFailover&lt;/code&gt;: If the target node is disconnected when sending a command, ioredis will retry after the specified delay. The default value is &lt;code&gt;100&lt;/code&gt;. You should make sure &lt;code&gt;retryDelayOnFailover * maxRedirections &amp;gt; cluster-node-timeout&lt;/code&gt; to insure that no command will fail during a failover.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;retryDelayOnClusterDown&lt;/code&gt;: When a cluster is down, all commands will be rejected with the error of &lt;code&gt;CLUSTERDOWN&lt;/code&gt;. If this option is a number (by default, it is &lt;code&gt;100&lt;/code&gt;), the client will resend the commands after the specified time (in ms).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;retryDelayOnTryAgain&lt;/code&gt;: If this option is a number (by default, it is &lt;code&gt;100&lt;/code&gt;), the client will resend the commands rejected with &lt;code&gt;TRYAGAIN&lt;/code&gt; error after the specified time (in ms).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;retryDelayOnMoved&lt;/code&gt;: By default, this value is &lt;code&gt;0&lt;/code&gt; (in ms), which means when a &lt;code&gt;MOVED&lt;/code&gt; error is received, the client will resend the command instantly to the node returned together with the &lt;code&gt;MOVED&lt;/code&gt; error. However, sometimes it takes time for a cluster to become state stabilized after a failover, so adding a delay before resending can prevent a ping pong effect.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;redisOptions&lt;/code&gt;: Default options passed to the constructor of &lt;code&gt;Redis&lt;/code&gt; when connecting to a node.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;slotsRefreshTimeout&lt;/code&gt;: Milliseconds before a timeout occurs while refreshing slots from the cluster (default &lt;code&gt;1000&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;slotsRefreshInterval&lt;/code&gt;: Milliseconds between every automatic slots refresh (default &lt;code&gt;5000&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Read-Write Splitting&lt;/h3&gt; &#xA;&lt;p&gt;A typical redis cluster contains three or more masters and several slaves for each master. It&#39;s possible to scale out redis cluster by sending read queries to slaves and write queries to masters by setting the &lt;code&gt;scaleReads&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;scaleReads&lt;/code&gt; is &#34;master&#34; by default, which means ioredis will never send any queries to slaves. There are other three available options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&#34;all&#34;: Send write queries to masters and read queries to masters or slaves randomly.&lt;/li&gt; &#xA; &lt;li&gt;&#34;slave&#34;: Send write queries to masters and read queries to slaves.&lt;/li&gt; &#xA; &lt;li&gt;a custom &lt;code&gt;function(nodes, command): node&lt;/code&gt;: Will choose the custom function to select to which node to send read queries (write queries keep being sent to master). The first node in &lt;code&gt;nodes&lt;/code&gt; is always the master serving the relevant slots. If the function returns an array of nodes, a random node of that list will be selected.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const cluster = new Redis.Cluster(&#xA;  [&#xA;    /* nodes */&#xA;  ],&#xA;  {&#xA;    scaleReads: &#34;slave&#34;,&#xA;  }&#xA;);&#xA;cluster.set(&#34;foo&#34;, &#34;bar&#34;); // This query will be sent to one of the masters.&#xA;cluster.get(&#34;foo&#34;, (err, res) =&amp;gt; {&#xA;  // This query will be sent to one of the slaves.&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt; In the code snippet above, the &lt;code&gt;res&lt;/code&gt; may not be equal to &#34;bar&#34; because of the lag of replication between the master and slaves.&lt;/p&gt; &#xA;&lt;h3&gt;Running Commands to Multiple Nodes&lt;/h3&gt; &#xA;&lt;p&gt;Every command will be sent to exactly one node. For commands containing keys, (e.g. &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;SET&lt;/code&gt; and &lt;code&gt;HGETALL&lt;/code&gt;), ioredis sends them to the node that serving the keys, and for other commands not containing keys, (e.g. &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;KEYS&lt;/code&gt; and &lt;code&gt;FLUSHDB&lt;/code&gt;), ioredis sends them to a random node.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes you may want to send a command to multiple nodes (masters or slaves) of the cluster, you can get the nodes via &lt;code&gt;Cluster#nodes()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Cluster#nodes()&lt;/code&gt; accepts a parameter role, which can be &#34;master&#34;, &#34;slave&#34; and &#34;all&#34; (default), and returns an array of &lt;code&gt;Redis&lt;/code&gt; instance. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Send `FLUSHDB` command to all slaves:&#xA;const slaves = cluster.nodes(&#34;slave&#34;);&#xA;Promise.all(slaves.map((node) =&amp;gt; node.flushdb()));&#xA;&#xA;// Get keys of all the masters:&#xA;const masters = cluster.nodes(&#34;master&#34;);&#xA;Promise.all(&#xA;  masters&#xA;    .map((node) =&amp;gt; node.keys())&#xA;    .then((keys) =&amp;gt; {&#xA;      // keys: [[&#39;key1&#39;, &#39;key2&#39;], [&#39;key3&#39;, &#39;key4&#39;]]&#xA;    })&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NAT Mapping&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes the cluster is hosted within a internal network that can only be accessed via a NAT (Network Address Translation) instance. See &lt;a href=&#34;https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/accessing-elasticache.html&#34;&gt;Accessing ElastiCache from outside AWS&lt;/a&gt; as an example.&lt;/p&gt; &#xA;&lt;p&gt;You can specify nat mapping rules via &lt;code&gt;natMap&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const cluster = new Redis.Cluster(&#xA;  [&#xA;    {&#xA;      host: &#34;203.0.113.73&#34;,&#xA;      port: 30001,&#xA;    },&#xA;  ],&#xA;  {&#xA;    natMap: {&#xA;      &#34;10.0.1.230:30001&#34;: { host: &#34;203.0.113.73&#34;, port: 30001 },&#xA;      &#34;10.0.1.231:30001&#34;: { host: &#34;203.0.113.73&#34;, port: 30002 },&#xA;      &#34;10.0.1.232:30001&#34;: { host: &#34;203.0.113.73&#34;, port: 30003 },&#xA;    },&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This option is also useful when the cluster is running inside a Docker container.&lt;/p&gt; &#xA;&lt;h3&gt;Transaction and Pipeline in Cluster Mode&lt;/h3&gt; &#xA;&lt;p&gt;Almost all features that are supported by &lt;code&gt;Redis&lt;/code&gt; are also supported by &lt;code&gt;Redis.Cluster&lt;/code&gt;, e.g. custom commands, transaction and pipeline. However there are some differences when using transaction and pipeline in Cluster mode:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;All keys in a pipeline should belong to slots served by the same node, since ioredis sends all commands in a pipeline to the same node.&lt;/li&gt; &#xA; &lt;li&gt;You can&#39;t use &lt;code&gt;multi&lt;/code&gt; without pipeline (aka &lt;code&gt;cluster.multi({ pipeline: false })&lt;/code&gt;). This is because when you call &lt;code&gt;cluster.multi({ pipeline: false })&lt;/code&gt;, ioredis doesn&#39;t know which node the &lt;code&gt;multi&lt;/code&gt; command should be sent to.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When any commands in a pipeline receives a &lt;code&gt;MOVED&lt;/code&gt; or &lt;code&gt;ASK&lt;/code&gt; error, ioredis will resend the whole pipeline to the specified node automatically if all of the following conditions are satisfied:&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;All errors received in the pipeline are the same. For example, we won&#39;t resend the pipeline if we got two &lt;code&gt;MOVED&lt;/code&gt; errors pointing to different nodes.&lt;/li&gt; &#xA; &lt;li&gt;All commands executed successfully are readonly commands. This makes sure that resending the pipeline won&#39;t have side effects.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Pub/Sub&lt;/h3&gt; &#xA;&lt;p&gt;Pub/Sub in cluster mode works exactly as the same as in standalone mode. Internally, when a node of the cluster receives a message, it will broadcast the message to the other nodes. ioredis makes sure that each message will only be received once by strictly subscribing one node at the same time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const nodes = [&#xA;  /* nodes */&#xA;];&#xA;const pub = new Redis.Cluster(nodes);&#xA;const sub = new Redis.Cluster(nodes);&#xA;sub.on(&#34;message&#34;, (channel, message) =&amp;gt; {&#xA;  console.log(channel, message);&#xA;});&#xA;&#xA;sub.subscribe(&#34;news&#34;, () =&amp;gt; {&#xA;  pub.publish(&#34;news&#34;, &#34;highlights&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Events&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Event&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;connect&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when a connection is established to the Redis server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ready&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when &lt;code&gt;CLUSTER INFO&lt;/code&gt; reporting the cluster is able to receive commands (if &lt;code&gt;enableReadyCheck&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;) or immediately after &lt;code&gt;connect&lt;/code&gt; event (if &lt;code&gt;enableReadyCheck&lt;/code&gt; is false).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;error&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when an error occurs while connecting with a property of &lt;code&gt;lastNodeError&lt;/code&gt; representing the last node error received. This event is emitted silently (only emitting if there&#39;s at least one listener).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;close&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when an established Redis server connection has closed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reconnecting&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits after &lt;code&gt;close&lt;/code&gt; when a reconnection will be made. The argument of the event is the time (in ms) before reconnecting.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;end&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits after &lt;code&gt;close&lt;/code&gt; when no more reconnections will be made.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;+node&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when a new node is connected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-node&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when a node is disconnected.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;node error&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emits when an error occurs when connecting to a node. The second argument indicates the address of the node.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Password&lt;/h3&gt; &#xA;&lt;p&gt;Setting the &lt;code&gt;password&lt;/code&gt; option to access password-protected clusters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const cluster = new Redis.Cluster(nodes, {&#xA;  redisOptions: {&#xA;    password: &#34;your-cluster-password&#34;,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If some of nodes in the cluster using a different password, you should specify them in the first parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const cluster = new Redis.Cluster(&#xA;  [&#xA;    // Use password &#34;password-for-30001&#34; for 30001&#xA;    { port: 30001, password: &#34;password-for-30001&#34; },&#xA;    // Don&#39;t use password when accessing 30002&#xA;    { port: 30002, password: null },&#xA;    // Other nodes will use &#34;fallback-password&#34;&#xA;  ],&#xA;  {&#xA;    redisOptions: {&#xA;      password: &#34;fallback-password&#34;,&#xA;    },&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Special Note: Aws Elasticache Clusters with TLS&lt;/h3&gt; &#xA;&lt;p&gt;AWS ElastiCache for Redis (Clustered Mode) supports TLS encryption. If you use this, you may encounter errors with invalid certificates. To resolve this issue, construct the &lt;code&gt;Cluster&lt;/code&gt; with the &lt;code&gt;dnsLookup&lt;/code&gt; option as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const cluster = new Redis.Cluster(&#xA;  [&#xA;    {&#xA;      host: &#34;clustercfg.myCluster.abcdefg.xyz.cache.amazonaws.com&#34;,&#xA;      port: 6379,&#xA;    },&#xA;  ],&#xA;  {&#xA;    dnsLookup: (address, callback) =&amp;gt; callback(null, address),&#xA;    redisOptions: {&#xA;      tls: {},&#xA;    },&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Autopipelining&lt;/h2&gt; &#xA;&lt;p&gt;In standard mode, when you issue multiple commands, ioredis sends them to the server one by one. As described in Redis pipeline documentation, this is a suboptimal use of the network link, especially when such link is not very performant.&lt;/p&gt; &#xA;&lt;p&gt;The TCP and network overhead negatively affects performance. Commands are stuck in the send queue until the previous ones are correctly delivered to the server. This is a problem known as Head-Of-Line blocking (HOL).&lt;/p&gt; &#xA;&lt;p&gt;ioredis supports a feature called ‚Äúauto pipelining‚Äù. It can be enabled by setting the option &lt;code&gt;enableAutoPipelining&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. No other code change is necessary.&lt;/p&gt; &#xA;&lt;p&gt;In auto pipelining mode, all commands issued during an event loop are enqueued in a pipeline automatically managed by ioredis. At the end of the iteration, the pipeline is executed and thus all commands are sent to the server at the same time.&lt;/p&gt; &#xA;&lt;p&gt;This feature can dramatically improve throughput and avoids HOL blocking. In our benchmarks, the improvement was between 35% and 50%.&lt;/p&gt; &#xA;&lt;p&gt;While an automatic pipeline is executing, all new commands will be enqueued in a new pipeline which will be executed as soon as the previous finishes.&lt;/p&gt; &#xA;&lt;p&gt;When using Redis Cluster, one pipeline per node is created. Commands are assigned to pipelines according to which node serves the slot.&lt;/p&gt; &#xA;&lt;p&gt;A pipeline will thus contain commands using different slots but that ultimately are assigned to the same node.&lt;/p&gt; &#xA;&lt;p&gt;Note that the same slot limitation within a single command still holds, as it is a Redis limitation.&lt;/p&gt; &#xA;&lt;h3&gt;Example of Automatic Pipeline Enqueuing&lt;/h3&gt; &#xA;&lt;p&gt;This sample code uses ioredis with automatic pipeline enabled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;./built&#34;);&#xA;const http = require(&#34;http&#34;);&#xA;&#xA;const db = new Redis({ enableAutoPipelining: true });&#xA;&#xA;const server = http.createServer((request, response) =&amp;gt; {&#xA;  const key = new URL(request.url, &#34;https://localhost:3000/&#34;).searchParams.get(&#xA;    &#34;key&#34;&#xA;  );&#xA;&#xA;  db.get(key, (err, value) =&amp;gt; {&#xA;    response.writeHead(200, { &#34;Content-Type&#34;: &#34;text/plain&#34; });&#xA;    response.end(value);&#xA;  });&#xA;});&#xA;&#xA;server.listen(3000);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When Node receives requests, it schedules them to be processed in one or more iterations of the events loop.&lt;/p&gt; &#xA;&lt;p&gt;All commands issued by requests processing during one iteration of the loop will be wrapped in a pipeline automatically created by ioredis.&lt;/p&gt; &#xA;&lt;p&gt;In the example above, the pipeline will have the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GET key1&#xA;GET key2&#xA;GET key3&#xA;...&#xA;GET keyN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When all events in the current loop have been processed, the pipeline is executed and thus all commands are sent to the server at the same time.&lt;/p&gt; &#xA;&lt;p&gt;While waiting for pipeline response from Redis, Node will still be able to process requests. All commands issued by request handler will be enqueued in a new automatically created pipeline. This pipeline will not be sent to the server yet.&lt;/p&gt; &#xA;&lt;p&gt;As soon as a previous automatic pipeline has received all responses from the server, the new pipeline is immediately sent without waiting for the events loop iteration to finish.&lt;/p&gt; &#xA;&lt;p&gt;This approach increases the utilization of the network link, reduces the TCP overhead and idle times and therefore improves throughput.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s some of the results of our tests for a single node.&lt;/p&gt; &#xA;&lt;p&gt;Each iteration of the test runs 1000 random commands on the server.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Samples&lt;/th&gt; &#xA;   &lt;th&gt;Result&lt;/th&gt; &#xA;   &lt;th&gt;Tolerance&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;   &lt;td&gt;1000&lt;/td&gt; &#xA;   &lt;td&gt;174.62 op/sec&lt;/td&gt; &#xA;   &lt;td&gt;¬± 0.45 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enableAutoPipelining=true&lt;/td&gt; &#xA;   &lt;td&gt;1500&lt;/td&gt; &#xA;   &lt;td&gt;233.33 op/sec&lt;/td&gt; &#xA;   &lt;td&gt;¬± 0.88 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;And here&#39;s the same test for a cluster of 3 masters and 3 replicas:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Samples&lt;/th&gt; &#xA;   &lt;th&gt;Result&lt;/th&gt; &#xA;   &lt;th&gt;Tolerance&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;   &lt;td&gt;1000&lt;/td&gt; &#xA;   &lt;td&gt;164.05 op/sec&lt;/td&gt; &#xA;   &lt;td&gt;¬± 0.42 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enableAutoPipelining=true&lt;/td&gt; &#xA;   &lt;td&gt;3000&lt;/td&gt; &#xA;   &lt;td&gt;235.31 op/sec&lt;/td&gt; &#xA;   &lt;td&gt;¬± 0.94 %&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Error Handling&lt;/h1&gt; &#xA;&lt;p&gt;All the errors returned by the Redis server are instances of &lt;code&gt;ReplyError&lt;/code&gt;, which can be accessed via &lt;code&gt;Redis&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const redis = new Redis();&#xA;// This command causes a reply error since the SET command requires two arguments.&#xA;redis.set(&#34;foo&#34;, (err) =&amp;gt; {&#xA;  err instanceof Redis.ReplyError;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is the error stack of the &lt;code&gt;ReplyError&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ReplyError: ERR wrong number of arguments for &#39;set&#39; command&#xA;    at ReplyParser._parseResult (/app/node_modules/ioredis/lib/parsers/javascript.js:60:14)&#xA;    at ReplyParser.execute (/app/node_modules/ioredis/lib/parsers/javascript.js:178:20)&#xA;    at Socket.&amp;lt;anonymous&amp;gt; (/app/node_modules/ioredis/lib/redis/event_handler.js:99:22)&#xA;    at Socket.emit (events.js:97:17)&#xA;    at readableAddChunk (_stream_readable.js:143:16)&#xA;    at Socket.Readable.push (_stream_readable.js:106:10)&#xA;    at TCP.onread (net.js:509:20)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the error stack doesn&#39;t make any sense because the whole stack happens in the ioredis module itself, not in your code. So it&#39;s not easy to find out where the error happens in your code. ioredis provides an option &lt;code&gt;showFriendlyErrorStack&lt;/code&gt; to solve the problem. When you enable &lt;code&gt;showFriendlyErrorStack&lt;/code&gt;, ioredis will optimize the error stack for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Redis = require(&#34;ioredis&#34;);&#xA;const redis = new Redis({ showFriendlyErrorStack: true });&#xA;redis.set(&#34;foo&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the output will be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ReplyError: ERR wrong number of arguments for &#39;set&#39; command&#xA;    at Object.&amp;lt;anonymous&amp;gt; (/app/index.js:3:7)&#xA;    at Module._compile (module.js:446:26)&#xA;    at Object.Module._extensions..js (module.js:464:10)&#xA;    at Module.load (module.js:341:32)&#xA;    at Function.Module._load (module.js:296:12)&#xA;    at Function.Module.runMain (module.js:487:10)&#xA;    at startup (node.js:111:16)&#xA;    at node.js:799:3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This time the stack tells you that the error happens on the third line in your code. Pretty sweet! However, it would decrease the performance significantly to optimize the error stack. So by default, this option is disabled and can only be used for debugging purposes. You &lt;strong&gt;shouldn&#39;t&lt;/strong&gt; use this feature in a production environment.&lt;/p&gt; &#xA;&lt;h1&gt;Running tests&lt;/h1&gt; &#xA;&lt;p&gt;Start a Redis server on 127.0.0.1:6379, and then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;FLUSH ALL&lt;/code&gt; will be invoked after each test, so make sure there&#39;s no valuable data in it before running tests.&lt;/p&gt; &#xA;&lt;p&gt;If your testing environment does not let you spin up a Redis server &lt;a href=&#34;https://github.com/stipsan/ioredis-mock&#34;&gt;ioredis-mock&lt;/a&gt; is a drop-in replacement you can use in your tests. It aims to behave identically to ioredis connected to a Redis server so that your integration tests is easier to write and of better quality.&lt;/p&gt; &#xA;&lt;h1&gt;Debug&lt;/h1&gt; &#xA;&lt;p&gt;You can set the &lt;code&gt;DEBUG&lt;/code&gt; env to &lt;code&gt;ioredis:*&lt;/code&gt; to print debug info:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ DEBUG=ioredis:* node app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Join in!&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m happy to receive bug reports, fixes, documentation enhancements, and any other improvements.&lt;/p&gt; &#xA;&lt;p&gt;And since I&#39;m not a native English speaker, if you find any grammar mistakes in the documentation, please also let me know. :)&lt;/p&gt; &#xA;&lt;h1&gt;Become a Sponsor&lt;/h1&gt; &#xA;&lt;p&gt;Open source is hard and time-consuming. If you want to invest in ioredis&#39;s future you can become a sponsor and make us spend more time on this library&#39;s improvements and new features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ioredis&#34;&gt;&lt;img src=&#34;https://opencollective.com/ioredis/tiers/sponsor.svg?avatarHeight=36&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thank you for using ioredis :-)&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luin/ioredis/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/ioredis/contributors.svg?width=890&amp;amp;showBtn=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fluin%2Fioredis?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fluin%2Fioredis.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/tdesign-vue</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/Tencent/tdesign-vue</id>
    <link href="https://github.com/Tencent/tdesign-vue" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Vue.js UI components lib for TDesign.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://tdesign.tencent.com/&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;TDesign Logo&#34; width=&#34;200&#34; src=&#34;https://tdesign.gtimg.com/site/TDesign.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Tencent/tdesign-vue/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/l/tdesign-vue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/Tencent/tdesign-vue&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/Tencent/tdesign-vue/develop.svg?style=flat-square&#34; alt=&#34;codecov&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/tdesign-vue&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/tdesign-vue.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/tdesign-vue&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/tdesign-vue&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;TDesign ÈÄÇÈÖçÊ°åÈù¢Á´ØÁöÑÁªÑ‰ª∂Â∫ìÔºåÈÄÇÂêàÂú® vue 2.x ÊäÄÊúØÊ†àÈ°πÁõÆ‰∏≠‰ΩøÁî®„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;üéâ ÁâπÊÄß&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÈÄÇÈÖçÊ°åÈù¢Á´Ø‰∫§‰∫í&lt;/li&gt; &#xA; &lt;li&gt;Âü∫‰∫é Vue 2.0&lt;/li&gt; &#xA; &lt;li&gt;‰∏éÂÖ∂‰ªñÊ°ÜÊû∂ÂÆûÁé∞ÁâàÊú¨ÔºàReact/Angular Á≠âÔºâ API„ÄÅUI ‰øùÊåÅ‰∏ÄËá¥&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÊöóÈªëÊ®°ÂºèÂèäÂÖ∂‰ªñ‰∏ªÈ¢òÂÆöÂà∂&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÊåâÈúÄÂä†ËΩΩ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ÂÆâË£Ö&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm i tdesign-vue&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Âü∫Á°Ä‰ΩøÁî®&lt;/h1&gt; &#xA;&lt;p&gt;Êé®Ëçê‰ΩøÁî® Webpack Êàñ Rollup Á≠âÊîØÊåÅ tree-shaking ÁâπÊÄßÁöÑÊûÑÂª∫Â∑•ÂÖ∑ÔºåÊó†ÈúÄÈ¢ùÂ§ñÈÖçÁΩÆÂç≥ÂèØÂÆûÁé∞ÁªÑ‰ª∂ÊåâÈúÄÂºïÂÖ•Ôºö&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import Vue from &#39;vue&#39;;&#xA;import TDesign from &#39;tdesign-vue&#39;;&#xA;// ÂºïÂÖ•ÁªÑ‰ª∂Â∫ìÂÖ®Â±ÄÊ†∑ÂºèËµÑÊ∫ê&#xA;import &#39;tdesign-vue/es/style/index.css&#39;;&#xA;&#xA;Vue.use(TDesign);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;npm package ‰∏≠Êèê‰æõ‰∫ÜÂ§öÁßçÊûÑÂª∫‰∫ßÁâ©ÔºåÂèØ‰ª•ÈòÖËØª &lt;a href=&#34;https://github.com/Tencent/tdesign/raw/main/docs/develop-install.md&#34;&gt;ËøôÈáå&lt;/a&gt; ‰∫ÜËß£‰∏çÂêåÁõÆÂΩï‰∏ã‰∫ßÁâ©ÁöÑÂ∑ÆÂà´„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;Âø´ÈÄü‰ΩìÈ™å&lt;/h1&gt; &#xA;&lt;p&gt;ÂèØ‰ª•ËÆøÈóÆÂÆòÊñπÊèê‰æõÁöÑ &lt;a href=&#34;https://tdesign.tencent.com/starter/vue/&#34;&gt;TDesign Starter&lt;/a&gt; È°πÁõÆ‰ΩìÈ™å‰ΩøÁî® TDesign ÁªÑ‰ª∂Âø´ÈÄüÊê≠Âª∫‰∏öÂä°Á≥ªÁªü„ÄÇ&lt;/p&gt; &#xA;&lt;h1&gt;ÊµèËßàÂô®ÂÖºÂÆπÊÄß&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png&#34; alt=&#34;IE / Edge&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt; IE / Edge&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png&#34; alt=&#34;Firefox&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Firefox&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png&#34; alt=&#34;Chrome&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Chrome&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://godban.github.io/browsers-support-badges/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png&#34; alt=&#34;Safari&#34; width=&#34;24px&#34; height=&#34;24px&#34;&gt;&lt;/a&gt;&lt;br&gt;Safari&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge &amp;gt;=84&lt;/td&gt; &#xA;   &lt;td&gt;Firefox &amp;gt;=83&lt;/td&gt; &#xA;   &lt;td&gt;Chrome &amp;gt;=84&lt;/td&gt; &#xA;   &lt;td&gt;Safari &amp;gt;=14.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;ËØ¶ÊÉÖÂèÇËßÅ&lt;a href=&#34;https://github.com/Tencent/tdesign/wiki/Browser-Compatibility&#34;&gt;Ê°åÈù¢Á´ØÁªÑ‰ª∂Â∫ìÊµèËßàÂô®ÂÖºÂÆπÊÄßËØ¥Êòé&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ÂÖ∂‰ªñÊäÄÊúØÊ†àÂÆûÁé∞&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ê°åÈù¢Á´Ø Vue 3 ÂÆûÁé∞Ôºö&lt;a href=&#34;https://github.com/Tencent/tdesign-vue-next&#34;&gt;web-vue-next&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ê°åÈù¢Á´Ø React ÂÆûÁé∞Ôºö &lt;a href=&#34;https://github.com/Tencent/tdesign-react&#34;&gt;web-react&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ÁßªÂä®Á´ØÂ∞èÁ®ãÂ∫èÂÆûÁé∞Ôºö &lt;a href=&#34;https://github.com/Tencent/tdesign-miniprogram&#34;&gt;Â∞èÁ®ãÂ∫è&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ÂºÄÊ∫êÂçèËÆÆ&lt;/h1&gt; &#xA;&lt;p&gt;TDesign ÈÅµÂæ™ &lt;a href=&#34;https://github.com/Tencent/tdesign-vue/raw/main/LICENSE&#34;&gt;MIT ÂçèËÆÆ&lt;/a&gt;„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>siyuan-note/siyuan</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/siyuan-note/siyuan</id>
    <link href="https://github.com/siyuan-note/siyuan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìï SiYuan is a local-first personal knowledge management system, supports fine-grained block-level reference, and Markdown WYSIWYG. ÊÄùÊ∫êÁ¨îËÆ∞ÊòØ‰∏ÄÊ¨æÊú¨Âú∞‰ºòÂÖàÁöÑ‰∏™‰∫∫Áü•ËØÜÁÆ°ÁêÜÁ≥ªÁªüÔºå ÊîØÊåÅÁªÜÁ≤íÂ∫¶ÂùóÁ∫ßÂºïÁî®Âíå Markdown ÊâÄËßÅÂç≥ÊâÄÂæó„ÄÇRoadmap https://github.com/orgs/siyuan-note/projects/1&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;SiYuan&#34; src=&#34;https://b3log.org/images/brand/siyuan-128.png&#34;&gt; &lt;br&gt; Build Your Eternal Digital Garden &lt;br&gt;&lt;br&gt; &lt;a title=&#34;Releases&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/siyuan-note/siyuan.svg?style=flat-square&amp;amp;color=FF9900&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Downloads&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/siyuan-note/siyuan/total.svg?style=flat-square&amp;amp;color=blueviolet&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Docker Pulls&#34; target=&#34;_blank&#34; href=&#34;https://hub.docker.com/r/b3log/siyuan&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/b3log/siyuan.svg?style=flat-square&amp;amp;color=99CCFF&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Hits&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;&lt;img src=&#34;https://hits.b3log.org/siyuan-note/siyuan.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/README_zh_CN.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üí° Introduction&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is a local-first personal knowledge management system, support fine-grained block-level reference and Markdown WYSIWYG.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://b3logfile.com/file/2022/05/feature0-a82bdd3f.png&#34; alt=&#34;feature0.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://b3logfile.com/file/2022/05/feature1-1-740d9a02.png&#34; alt=&#34;feature1-1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;h3&gt;Free&lt;/h3&gt; &#xA;&lt;p&gt;All local features are free.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Content block &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block-level reference and two-way links&lt;/li&gt; &#xA;   &lt;li&gt;Document relationship diagram, global relationship diagram&lt;/li&gt; &#xA;   &lt;li&gt;Custom attributes&lt;/li&gt; &#xA;   &lt;li&gt;SQL query embed&lt;/li&gt; &#xA;   &lt;li&gt;Protocol &lt;code&gt;siyuan://&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block-style&lt;/li&gt; &#xA;   &lt;li&gt;Markdown WYSIWYG&lt;/li&gt; &#xA;   &lt;li&gt;List outline&lt;/li&gt; &#xA;   &lt;li&gt;Block zoom-in&lt;/li&gt; &#xA;   &lt;li&gt;Block horizontal layout&lt;/li&gt; &#xA;   &lt;li&gt;Million-word large document editing&lt;/li&gt; &#xA;   &lt;li&gt;Mathematical formulas, charts, flowcharts, Gantt charts, timing charts, staffs, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Web clipping&lt;/li&gt; &#xA;   &lt;li&gt;PDF Annotation link&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block ref and embed&lt;/li&gt; &#xA;   &lt;li&gt;Standard Markdown with assets&lt;/li&gt; &#xA;   &lt;li&gt;PDF, Word and HTML&lt;/li&gt; &#xA;   &lt;li&gt;Copy to WeChat MP, Zhihu and Yuque&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Community bazaar &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Themes&lt;/li&gt; &#xA;   &lt;li&gt;Icons&lt;/li&gt; &#xA;   &lt;li&gt;Templates&lt;/li&gt; &#xA;   &lt;li&gt;Widgets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hierarchical tag&lt;/li&gt; &#xA; &lt;li&gt;Multi-tab, drag and drop to split screen&lt;/li&gt; &#xA; &lt;li&gt;Fulltext search&lt;/li&gt; &#xA; &lt;li&gt;Template snippet&lt;/li&gt; &#xA; &lt;li&gt;Keymap&lt;/li&gt; &#xA; &lt;li&gt;Themes and icons&lt;/li&gt; &#xA; &lt;li&gt;Android APP&lt;/li&gt; &#xA; &lt;li&gt;iOS APP&lt;/li&gt; &#xA; &lt;li&gt;Docker deployment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/API.md&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid subscription&lt;/h3&gt; &#xA;&lt;p&gt;Cloud services require a paid subscription.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VIP identity&lt;/li&gt; &#xA; &lt;li&gt;End-to-end encrypted data synchronization&lt;/li&gt; &#xA; &lt;li&gt;End-to-end encrypted data backup&lt;/li&gt; &#xA; &lt;li&gt;Cloud assets serving&lt;/li&gt; &#xA; &lt;li&gt;WeChat notification&lt;/li&gt; &#xA; &lt;li&gt;Cloud inbox&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üó∫Ô∏è Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/projects&#34;&gt;SiYuan development plan and progress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/CHANGE_LOGS.md&#34;&gt;SiYuan Change logs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Download Setup&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to give priority to installing through the application market on the desktop and mobile, so that you can upgrade the version with one click in the future.&lt;/p&gt; &#xA;&lt;h3&gt;App Market&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/siyuan/id1583226508&#34;&gt;App Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.b3log.siyuan&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/store/apps/9P7HPMXP73K4&#34;&gt;Microsoft Store&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Hosting&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Docker Deployment&lt;/summary&gt; &#xA; &lt;h4&gt;Overview&lt;/h4&gt; &#xA; &lt;p&gt;The easiest way to serve SiYuan on a server is to deploy it through Docker.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Image name &lt;code&gt;b3log/siyuan&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/b3log/siyuan&#34;&gt;Image URL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;File structure&lt;/h4&gt; &#xA; &lt;p&gt;The overall program is located under &lt;code&gt;/opt/siyuan/&lt;/code&gt;, which is basically the structure under the resources folder of the Electron installation package:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;appearance: icon, theme, languages&lt;/li&gt; &#xA;  &lt;li&gt;guide: user guide document&lt;/li&gt; &#xA;  &lt;li&gt;stage: interface and static resources&lt;/li&gt; &#xA;  &lt;li&gt;kernel: kernel program&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Entrypoint&lt;/h4&gt; &#xA; &lt;p&gt;The entry point is set when building the Docker image: &lt;code&gt;ENTRYPOINT [&#34;/opt/siyuan/kernel&#34; ]&lt;/code&gt;, use &lt;code&gt;docker run b3log/siyuan&lt;/code&gt; with parameters to start:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;--workspace&lt;/code&gt; specifies the workspace folder path, mounted to the container via &lt;code&gt;-v&lt;/code&gt; on the host&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;More parameters can refer to &lt;code&gt;--help&lt;/code&gt;. The following is an example of a startup command: &lt;code&gt;docker run -v workspace_dir_host:workspace_dir_container -p 6806:6806 b3log/siyuan --workspace=workspace_dir_container&lt;/code&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;workspace_dir_host&lt;/code&gt;: the workspace folder path on the host&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;workspace_dir_container&lt;/code&gt;: The path of the workspace folder in the container, which is the same as specified in &lt;code&gt;--workspace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;To simplify, it is recommended to configure the workspace folder path to be consistent on the host and container, such as: &lt;code&gt;workspace_dir_host&lt;/code&gt; and &lt;code&gt;workspace_dir_container&lt;/code&gt; are configured as &lt;code&gt;/siyuan/workspace&lt;/code&gt;, the corresponding startup commands is: &lt;code&gt;docker run -v /siyuan/workspace:/siyuan/workspace -p 6806:6806 -u 1000:1000 b3log/siyuan --workspace=/siyuan/workspace/&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;User permissions&lt;/h4&gt; &#xA; &lt;p&gt;In the image, the normal user &lt;code&gt;siyuan&lt;/code&gt; (uid 1000/gid 1000) created by default is used to start the kernel process. Therefore, when the host creates a workspace folder, please pay attention to setting the user group of the folder: &lt;code&gt;chown -R 1000:1000 /siyuan/workspace&lt;/code&gt;. The parameter &lt;code&gt;-u 1000:1000&lt;/code&gt; is required when starting the container.&lt;/p&gt; &#xA; &lt;h4&gt;Hidden port&lt;/h4&gt; &#xA; &lt;p&gt;Use NGINX reverse proxy to hide port 6806, please note:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Configure WebSocket reverse proxy &lt;code&gt;/ws&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Installation Package&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://b3log.org/siyuan/en/download.html&#34;&gt;B3log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Insider Preview&lt;/h3&gt; &#xA;&lt;p&gt;To get the latest Insider Preview, please send an email with your GitHub login name to &lt;a href=&#34;mailto:845765@qq.com&#34;&gt;845765@qq.com&lt;/a&gt;, and we will invite you to join the SiYuan Insider Preview team, thanks.&lt;/p&gt; &#xA;&lt;h2&gt;üèòÔ∏è Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How does SiYuan store data?&lt;/h3&gt; &#xA;&lt;p&gt;The data is saved in the workspace folder (the default is in the user&#39;s home directory Documents/SiYuan, which can be modified in &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt;), in the workspace data folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; are used to save all inserted asset files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;templates&lt;/code&gt; are used to save template snippets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;widgets&lt;/code&gt; are used to save widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;emojis&lt;/code&gt; are used to save emoji images&lt;/li&gt; &#xA; &lt;li&gt;The rest of the folders are the notebook folders created by the user, files with the suffix of &lt;code&gt;.sy&lt;/code&gt; in the notebook folder are used to save the document data, and the data format is JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Is SiYuan open source?&lt;/h3&gt; &#xA;&lt;p&gt;SiYuan is completely open source, and contributions are welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;User Interface and Kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/user-guide-en_US&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/appearance&#34;&gt;Appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;Data Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;Editor Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;End-to-end encryption&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-chrome&#34;&gt;Chrome Clipping Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details, please refer to &lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/DEV.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Is there any note for deleting docs?&lt;/h3&gt; &#xA;&lt;p&gt;After deletion, the doc will not appear in the operating system&#39;s recycle bin, but will be deleted directly. When deleted, SiYuan will generate edit history.&lt;/p&gt; &#xA;&lt;h3&gt;How can I just wrap and not start a new paragraph?&lt;/h3&gt; &#xA;&lt;p&gt;Please use &lt;kbd&gt;Shift+Enter&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to move the heading and blocks below it?&lt;/h3&gt; &#xA;&lt;p&gt;Fold the heading and move it later.&lt;/p&gt; &#xA;&lt;h3&gt;How to select multiple blocks across pages?&lt;/h3&gt; &#xA;&lt;p&gt;Click at the beginning, hold down &lt;kbd&gt;Shift&lt;/kbd&gt; and click at the end after scrolling the page.&lt;/p&gt; &#xA;&lt;h3&gt;How to adjust table rows and columns?&lt;/h3&gt; &#xA;&lt;p&gt;There is an operation entry in the block icon menu of the table block.&lt;/p&gt; &#xA;&lt;h3&gt;How to use a third-party sync disk for data synchronization?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please only synchronize the &lt;code&gt;workspace/data/&lt;/code&gt;, do not synchronize the entire workspace&lt;/li&gt; &#xA; &lt;li&gt;Please suspend third-party synchronization during the operation of SiYuan, otherwise data may be damaged. For details, please refer to &lt;a href=&#34;https://ld246.com/article/1626537583158&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The data folder path on the Android is &lt;code&gt;internal storage device/Android/data/org.b3log.siyuan/files/siyuan/data/&lt;/code&gt;, which is a private path of the application and cannot be read by other programs and can only be copied manually&lt;/li&gt; &#xA; &lt;li&gt;There is a conflict between third-party synchronization and SiYuan synchronization, please do not use at the same time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What should I do if I forget the end-to-end password?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the new workspace on the main device, manually copy the old workspace data folder to the new workspace&lt;/li&gt; &#xA; &lt;li&gt;New workspace can reset password&lt;/li&gt; &#xA; &lt;li&gt;The cloud uses the new cloud synchronization directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If it is a mobile-end, uninstall and reinstall it (note: When the mobile-enduninstalls the application, the local workspace data will be deleted together).&lt;/p&gt; &#xA;&lt;h3&gt;Do I need to pay for it?&lt;/h3&gt; &#xA;&lt;p&gt;Local functions are completely free to use, &lt;a href=&#34;https://b3log.org/siyuan/pricing.html&#34;&gt;Cloud services&lt;/a&gt; requires annual subscription, price is $72/year„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Users in non-Mainland China regions should not pay for subscriptions, because SiYuan Cloud Server cannot guarantee availability in non-Mainland China regions.&lt;/p&gt; &#xA;&lt;h2&gt;üíå Participate in contribution&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is completely open source, and contributions are welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;User Interface and Kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/user-guide-en_US&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/appearance&#34;&gt;Appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;Data Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;Editor Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;End-to-end encryption&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-chrome&#34;&gt;Chrome Clipping Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details, please refer to &lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/DEV.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üôè Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is made possible by the following open source projects.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/golang/go&#34;&gt;https://github.com/golang/go&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atotto/clipboard&#34;&gt;https://github.com/atotto/clipboard&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanng822/css&#34;&gt;https://github.com/vanng822/css&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofrs/flock&#34;&gt;https://github.com/gofrs/flock&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/gulu&#34;&gt;https://github.com/88250/gulu&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;https://github.com/88250/lute&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olahol/melody&#34;&gt;https://github.com/olahol/melody&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pdfcpu/pdfcpu&#34;&gt;https://github.com/pdfcpu/pdfcpu&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;https://github.com/88250/protyle&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blastrain/vitess-sqlparser&#34;&gt;https://github.com/blastrain/vitess-sqlparser&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ConradIrwin/font&#34;&gt;https://github.com/ConradIrwin/font&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Masterminds/sprig&#34;&gt;https://github.com/Masterminds/sprig&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PuerkitoBio/goquery&#34;&gt;https://github.com/PuerkitoBio/goquery&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/araddon/dateparse&#34;&gt;https://github.com/araddon/dateparse&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/common-nighthawk/go-figure&#34;&gt;https://github.com/common-nighthawk/go-figure&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/denisbrodbeck/machineid&#34;&gt;https://github.com/denisbrodbeck/machineid&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgraph-io/ristretto&#34;&gt;https://github.com/dgraph-io/ristretto&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dustin/go-humanize&#34;&gt;https://github.com/dustin/go-humanize&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emirpasic/gods&#34;&gt;https://github.com/emirpasic/gods&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facette/natsort&#34;&gt;https://github.com/facette/natsort&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flopp/go-findfont&#34;&gt;https://github.com/flopp/go-findfont&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fsnotify/fsnotify&#34;&gt;https://github.com/fsnotify/fsnotify&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabriel-vasile/mimetype&#34;&gt;https://github.com/gabriel-vasile/mimetype&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/cors&#34;&gt;https://github.com/gin-contrib/cors&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/gzip&#34;&gt;https://github.com/gin-contrib/gzip&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/sessions&#34;&gt;https://github.com/gin-contrib/sessions&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;https://github.com/gin-gonic/gin&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imroc/req&#34;&gt;https://github.com/imroc/req&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jinzhu/copier&#34;&gt;https://github.com/jinzhu/copier&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-sqlite3&#34;&gt;https://github.com/mattn/go-sqlite3&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-zglob&#34;&gt;https://github.com/mattn/go-zglob&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitchellh/go-ps&#34;&gt;https://github.com/mitchellh/go-ps&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mssola/user_agent&#34;&gt;https://github.com/mssola/user_agent&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/panjf2000/ants&#34;&gt;https://github.com/panjf2000/ants&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patrickmn/go-cache&#34;&gt;https://github.com/patrickmn/go-cache&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radovskyb/watcher&#34;&gt;https://github.com/radovskyb/watcher&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;https://github.com/siyuan-note/encryption&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmihailenco/msgpack&#34;&gt;https://github.com/vmihailenco/msgpack&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xrash/smetrics&#34;&gt;https://github.com/xrash/smetrics&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript&#34;&gt;https://github.com/microsoft/TypeScript&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/electron&#34;&gt;https://github.com/electron/electron&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vanessa219/vditor&#34;&gt;https://github.com/Vanessa219/vditor&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/visjs/vis-network&#34;&gt;https://github.com/visjs/vis-network&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/pdf.js&#34;&gt;https://github.com/mozilla/pdf.js&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blueimp/JavaScript-MD5&#34;&gt;https://github.com/blueimp/JavaScript-MD5&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>aws/aws-sdk-js-v3</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/aws/aws-sdk-js-v3</id>
    <link href="https://github.com/aws/aws-sdk-js-v3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modularized AWS SDK for JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS SDK for JavaScript v3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiMmtFajZWQmNUbEhidnBKN1VncjRrNVI3d0JUcFpGWUd3STh4T3N3Rnljc1BMaEIrYm9HU2t4YTV1RlE1YmlnUG9XM3luY0Ftc2tBc0xTeVFJMkVOa24wPSIsIml2UGFyYW1ldGVyU3BlYyI6IlBDMDl6UEROK1dlU1h1OWciLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&amp;amp;branch=main&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/aws/aws-sdk-js-v3&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/aws/aws-sdk-js-v3/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true&#34; alt=&#34;code style: prettier&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dependabot.com&#34;&gt;&lt;img src=&#34;https://api.dependabot.com/badges/status?host=github&amp;amp;repo=aws/aws-sdk-js-v3&#34; alt=&#34;Dependabot Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;AWS SDK for JavaScript v3&lt;/strong&gt; is a rewrite of v2 with some great new features. As with version 2, it enables you to easily work with &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Amazon Web Services&lt;/a&gt;, but has a &lt;a href=&#34;https://aws.amazon.com/blogs/developer/modular-packages-in-aws-sdk-for-javascript/&#34;&gt;modular architecture&lt;/a&gt; with a separate package for each service. It also includes many frequently requested features, such as a &lt;a href=&#34;https://aws.amazon.com/blogs/developer/first-class-typescript-support-in-modular-aws-sdk-for-javascript/&#34;&gt;first-class TypeScript support&lt;/a&gt; and a &lt;a href=&#34;https://aws.amazon.com/blogs/developer/middleware-stack-modular-aws-sdk-js/&#34;&gt;new middleware stack&lt;/a&gt;. For more details, visit blog post on &lt;a href=&#34;https://aws.amazon.com/blogs/developer/modular-aws-sdk-for-javascript-is-now-generally-available/&#34;&gt;general availability of Modular AWS SDK for JavaScript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started with JavaScript SDK version 3, visit our &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/welcome.html&#34;&gt;Developer Guide&lt;/a&gt; or &lt;a href=&#34;https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/&#34;&gt;API Reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are starting a new project with AWS SDK for JavaScript v3, then you can refer &lt;a href=&#34;https://github.com/aws-samples/aws-sdk-js-notes-app&#34;&gt;aws-sdk-js-notes-app&lt;/a&gt; which shows examples of calling multiple AWS Services in a note taking application. If you are migrating from v2 to v3, then you can visit our &lt;a href=&#34;https://github.com/aws-samples/aws-sdk-js-v3-workshop&#34;&gt;self-guided workshop&lt;/a&gt; which builds as basic version of note taking application using AWS SDK for JavaScript v2 and provides step-by-step migration instructions to v3.&lt;/p&gt; &#xA;&lt;p&gt;To test your universal JavaScript code in Node.js, browser and react-native environments, visit our &lt;a href=&#34;https://github.com/aws-samples/aws-sdk-js-tests&#34;&gt;code samples repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#new-features&#34;&gt;New Features&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#modularized-packages&#34;&gt;Modularized packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#api-changes&#34;&gt;API consistency changes&lt;/a&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#middleware&#34;&gt;Middleware Stack&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#other-changes&#34;&gt;How to upgrade&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#high-level-concepts&#34;&gt;High Level Concepts in V3&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#generated-code&#34;&gt;Generated Packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#paginators&#34;&gt;Paginators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#abort-controller&#34;&gt;Abort Controller&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#middleware-stack&#34;&gt;Middleware Stack&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#install-from-source&#34;&gt;Install from Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#giving-feedback-and-contributing&#34;&gt;Giving feedback and contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#known-issues&#34;&gt;Known Issues&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#functionality-requiring-aws-common-runtime-crt&#34;&gt;Functionality requiring AWS Common Runtime (CRT)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Let‚Äôs walk through setting up a project that depends on DynamoDB from the SDK and makes a simple service call. The following steps use yarn as an example. These steps assume you have Node.js and yarn already installed.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new Node.js project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Inside of the project, run: &lt;code&gt;yarn add @aws-sdk/client-dynamodb&lt;/code&gt;. Adding packages results in update in lock file, &lt;a href=&#34;https://yarnpkg.com/getting-started/qa/#should-lockfiles-be-committed-to-the-repository&#34;&gt;yarn.lock&lt;/a&gt; or &lt;a href=&#34;https://docs.npmjs.com/configuring-npm/package-lock-json&#34;&gt;package-lock.json&lt;/a&gt;. You &lt;strong&gt;should&lt;/strong&gt; commit your lock file along with your code to avoid potential breaking changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new file called index.js, create a DynamoDB service client and send a request.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { DynamoDBClient, ListTablesCommand } = require(&#34;@aws-sdk/client-dynamodb&#34;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const client = new DynamoDBClient({ region: &#34;us-west-2&#34; });&#xA;  const command = new ListTablesCommand({});&#xA;  try {&#xA;    const results = await client.send(command);&#xA;    console.log(results.TableNames.join(&#34;\n&#34;));&#xA;  } catch (err) {&#xA;    console.error(err);&#xA;  }&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use non-modular (v2-like) interfaces, you can import client with only the service name (e.g DynamoDB), and call the operation name directly from the client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { DynamoDB } = require(&#34;@aws-sdk/client-dynamodb&#34;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const client = new DynamoDB({ region: &#34;us-west-2&#34; });&#xA;  try {&#xA;    const results = await client.listTables({});&#xA;    console.log(results.TableNames.join(&#34;\n&#34;));&#xA;  } catch (err) {&#xA;    console.error(err);&#xA;  }&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use tree shaking to reduce bundle size, using non-modular interface will increase the bundle size as compared to using modular interface.&lt;/p&gt; &#xA;&lt;!-- Uncomment when numbers are available for gamma clients&#xA;In our workshop code, a lambda with DynamoDBClient and a command takes ~18kB while DynamoDB takes ~26 kB ([details](https://github.com/aws-samples/aws-sdk-js-v3-workshop/blob/dc3ad778b04dfe3f8f277dca67162da79c937eca/Exercise1/backend/README.md#reduce-bundle-size-by-just-importing-dynamodb)) --&gt; &#xA;&lt;p&gt;If you are consuming modular AWS SDK for JavaScript on react-native environments, you will need to add and import following polyfills in your react-native application:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-get-random-values&#34;&gt;react-native-get-random-values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-url-polyfill&#34;&gt;react-native-url-polyfill&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import &#34;react-native-get-random-values&#34;;&#xA;import &#34;react-native-url-polyfill/auto&#34;;&#xA;import { DynamoDB } from &#34;@aws-sdk/client-dynamodb&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;New features&lt;/h2&gt; &#xA;&lt;h3&gt;Modularized packages&lt;/h3&gt; &#xA;&lt;p&gt;The SDK is now split up across multiple packages. The 2.x version of the SDK contained support for every service. This made it very easy to use multiple services in a project. Due to the limitations around reducing the size of the SDK when only using a handful of services or operations, many customers requested having separate packages for each service client. We have also split up the core parts of the SDK so that service clients only pull in what they need. For example, a service sends responses in JSON will no longer need to also have an XML parser as a dependency.&lt;/p&gt; &#xA;&lt;p&gt;For those that were already importing services as sub-modules from the v2 SDK, the import statement doesn‚Äôt look too different. Here‚Äôs an example of importing the AWS Lambda service in v2 of the SDK, and the v3 SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// import the Lambda client constructor in v2 of the SDK&#xA;const Lambda = require(&#34;aws-sdk/clients/lambda&#34;);&#xA;&#xA;// import the Lambda client constructor in v3 SDK&#xA;const { Lambda } = require(&#34;@aws-sdk/client-lambda&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is also possible to import both versions of the Lambda client by changing the variable name the Lambda constructor is stored in.&lt;/p&gt; &#xA;&lt;h3&gt;API changes&lt;/h3&gt; &#xA;&lt;p&gt;We‚Äôve made several public API changes to improve consistency, make the SDK easier to use, and remove deprecated or confusing APIs. The following are some of the big changes included in the new AWS SDK for JavaScript v3.&lt;/p&gt; &#xA;&lt;h4&gt;Configuration&lt;/h4&gt; &#xA;&lt;p&gt;In version 2.x of the SDK, service configuration could be passed to individual client constructors. However, these configurations would first be merged automatically into a copy of the global SDK configuration: &lt;code&gt;AWS.config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, calling &lt;code&gt;AWS.config.update({/* params */})&lt;/code&gt; only updated configuration for service clients instantiated after the update call was made, not any existing clients.&lt;/p&gt; &#xA;&lt;p&gt;This behavior was a frequent source of confusion, and made it difficult to add configuration to the global object that only affects a subset of service clients in a forward-compatible way. In v3, there is no longer a global configuration managed by the SDK. Configuration must be passed to each service client that is instantiated. It is still possible to share the same configuration across multiple clients but that configuration will not be automatically merged with a global state.&lt;/p&gt; &#xA;&lt;h4&gt;Middleware&lt;/h4&gt; &#xA;&lt;p&gt;Version 2.x of the SDK allows modifying a request throughout multiple stages of a request‚Äôs lifecycle by attaching event listeners to a request. Some feedback we received frequently was that it can be difficult to debug what went wrong during a request‚Äôs lifecycle. We‚Äôve switched to using a middleware stack to control the lifecycle of an operation call now. This gives us a few benefits. Each middleware in the stack calls the next middleware after making any changes to the request object. This also makes debugging issues in the stack much easier since you can see exactly which middleware have been called leading up to an error. Here‚Äôs an example of adding a custom header using middleware:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const client = new DynamoDB({ region: &#34;us-west-2&#34; });&#xA;client.middlewareStack.add(&#xA;  (next, context) =&amp;gt; (args) =&amp;gt; {&#xA;    args.request.headers[&#34;Custom-Header&#34;] = &#34;value&#34;;&#xA;    console.log(&#34;\n -- printed from inside middleware -- \n&#34;);&#xA;    return next(args);&#xA;  },&#xA;  {&#xA;    step: &#34;build&#34;,&#xA;  }&#xA;);&#xA;await client.listTables({});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above example, we‚Äôre adding a middleware to our DynamoDB client‚Äôs middleware stack. The first argument is a function that accepts next, the next middleware in the stack to call, and context, an object that contains some information about the operation being called. It returns a function that accepts args, an object that contains the parameters passed to the operation and the request, and returns the result from calling the next middleware with args.&lt;/p&gt; &#xA;&lt;h4&gt;Other Changes&lt;/h4&gt; &#xA;&lt;p&gt;If you are looking for a breakdown of the API changes from AWS SDK for JavaScript v2 to v3, we have them listed in &lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/raw/main/UPGRADING.md&#34;&gt;UPGRADING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install from Source&lt;/h3&gt; &#xA;&lt;p&gt;All clients have been published to NPM and can be installed as described above. If you want to play with latest clients, you can build from source as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository to local by:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/aws/aws-sdk-js-v3.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Under the repository root directory, run following command to link and build the whole library, the process may take several minutes:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn &amp;amp;&amp;amp; yarn test:all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more information, please refer to &lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/raw/main/CONTRIBUTING.md#setup-and-testing&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After the repository is successfully built, change directory to the client that you want to install, for example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd clients/client-dynamodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pack the client:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn pack .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;yarn pack&lt;/code&gt; will create an archive file in the client package folder, e.g. &lt;code&gt;aws-sdk-client-dynamodb-v3.0.0.tgz&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to the project you are working on and move the archive to the location to store the vendor packages:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;mv path/to/aws-sdk-js-v3/clients/client-dynamodb/aws-sdk-client-dynamodb-v3.0.0.tgz ./path/to/vendors/folder&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the package to your project:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn add ./path/to/vendors/folder/aws-sdk-client-dynamodb-v3.0.0.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Giving feedback and contributing&lt;/h3&gt; &#xA;&lt;p&gt;You can provide feedback to us in several ways. Both positive and negative feedback is appreciated. If you do, please feel free to &lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/issues/new/choose&#34;&gt;open an issue&lt;/a&gt; on our GitHub repository. Our GitHub issues page also includes work we know still needs to be done to reach full feature parity with v2 SDK.&lt;/p&gt; &#xA;&lt;h4&gt;Feedback&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub issues&lt;/strong&gt;. Customers who are comfortable giving public feedback can open a GitHub issue in the new repository. This is the preferred mechanism to give feedback so that other customers can engage in the conversation, +1 issues, etc. Issues you open will be evaluated, and included in our roadmap for the GA launch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gitter channel&lt;/strong&gt;. For informal discussion or general feedback, you may join the &lt;a href=&#34;https://gitter.im/aws/aws-sdk-js-v3&#34;&gt;Gitter chat&lt;/a&gt;. The Gitter channel is also a great place to get help with v3 from other developers. JS SDK team doesn&#39;t track the discussion daily, so feel free to open a GitHub issue if your question is not answered there.&lt;/p&gt; &#xA;&lt;h4&gt;Contributing&lt;/h4&gt; &#xA;&lt;p&gt;You can open pull requests for fixes or additions to the new AWS SDK for JavaScript v3. All pull requests must be submitted under the Apache 2.0 license and will be reviewed by an SDK team member prior to merging. Accompanying unit tests are appreciated. See &lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;High Level Concepts&lt;/h2&gt; &#xA;&lt;p&gt;This is an introduction to some of the high level concepts behind AWS SDK for JavaScript (v3) which are shared between services and might make your life easier. Please consult the user guide and API reference for service specific details.&lt;/p&gt; &#xA;&lt;h4&gt;Terminology:&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bare-bones clients/commands&lt;/strong&gt;: This refers to a modular way of consuming individual operations on JS SDK clients. It results in less code being imported and thus more performant. It is otherwise equivalent to the aggregated clients/commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// this imports a bare-bones version of S3 that exposes the .send operation&#xA;import { S3Client } from &#34;@aws-sdk/client-s3&#34;&#xA;&#xA;// this imports just the getObject operation from S3&#xA;import { GetObjectCommand } from &#34;@aws-sdk/client-s3&#34;&#xA;&#xA;//usage&#xA;const bareBonesS3 = new S3Client({...});&#xA;await bareBonesS3.send(new GetObjectCommand({...}));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Aggregated clients/commands&lt;/strong&gt;: This refers to a way of consuming clients that contain all operations on them. Under the hood this calls the bare-bones commands. This imports all commands on a particular client and results in more code being imported and thus less performant. This is 1:1 with v2&#39;s style.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// this imports an aggregated version of S3 that exposes the .send operation&#xA;import { S3 } from &#34;@aws-sdk/client-s3&#34;&#xA;&#xA;// No need to import an operation as all operations are already on the S3 prototype&#xA;&#xA;//usage&#xA;const aggregatedS3 = new S3({...});&#xA;await aggregatedS3.getObject({...}));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generated Code&lt;/h3&gt; &#xA;&lt;p&gt;The v3 codebase is generated from internal AWS models that AWS services expose. We use &lt;a href=&#34;https://github.com/awslabs/smithy-typescript&#34;&gt;smithy-typescript&lt;/a&gt; to generate all code in the &lt;code&gt;/clients&lt;/code&gt; subdirectory. These packages always have a prefix of &lt;code&gt;@aws-sdk/client-XXXX&lt;/code&gt; and are one-to-one with AWS services and service operations. You should be importing &lt;code&gt;@aws-sdk/client-XXXX&lt;/code&gt; for most usage.&lt;/p&gt; &#xA;&lt;p&gt;Clients depend on common &#34;utility&#34; code in &lt;code&gt;/packages&lt;/code&gt;. The code in &lt;code&gt;/packages&lt;/code&gt; is manually written and outside of special cases (like credenitials or abort controller) is generally not very useful alone.&lt;/p&gt; &#xA;&lt;p&gt;Lastly we have higher level libraries in &lt;code&gt;/lib&lt;/code&gt;. These are javascript specific libraries that wrap client operations to make them easier to work with. Popular examples are &lt;code&gt;@aws-sdk/lib-dynamodb&lt;/code&gt; which &lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/raw/main/lib/lib-dynamodb/README.md&#34;&gt;simplifies working with items in Amazon DynamoDB&lt;/a&gt; or &lt;code&gt;@aws-sdk/lib-storage&lt;/code&gt; which exposes the &lt;code&gt;Upload&lt;/code&gt; function and &lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/raw/main/lib/lib-storage/README.md&#34;&gt;simplifies parallel uploads in S3&#39;s multipartUpload&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;/packages&lt;/code&gt;. This sub directory is where most manual code updates are done. These are published to NPM under &lt;code&gt;@aws-sdk/XXXX&lt;/code&gt; and have no special prefix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/clients&lt;/code&gt;. This sub directory is code generated and depends on code published from &lt;code&gt;/packages&lt;/code&gt; . It is 1:1 with AWS services and operations. Manual edits should generally not occur here. These are published to NPM under &lt;code&gt;@aws-sdk/client-XXXX&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/lib&lt;/code&gt;. This sub directory depends on generated code published from &lt;code&gt;/clients&lt;/code&gt;. It wraps existing AWS services and operations to make them easier to work with in Javascript. These are published to NPM under &lt;code&gt;@aws-sdk/lib-XXXX&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Paginators&lt;/h3&gt; &#xA;&lt;p&gt;Many AWS operations return paginated results when the response object is too large to return in a single response. In AWS SDK for JavaScript v2, the response contains a token you can use to retrieve the next page of results. You then need to write additional functions to process pages of results.&lt;/p&gt; &#xA;&lt;p&gt;In AWS SDK for JavaScript v3 we‚Äôve improved pagination using async generator functions, which are similar to generator functions, with the following differences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When called, async generator functions return an object, an async generator whose methods (&lt;code&gt;next&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, and &lt;code&gt;return&lt;/code&gt;) return promises for { &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt; }, instead of directly returning { &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt; }. This automatically makes the returned async generator objects async iterators.&lt;/li&gt; &#xA; &lt;li&gt;await expressions and &lt;code&gt;for await (x of y)&lt;/code&gt; statements are allowed.&lt;/li&gt; &#xA; &lt;li&gt;The behavior of &lt;code&gt;yield*&lt;/code&gt; is modified to support delegation to async iterables.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Async Iterators were added in the ES2018 iteration of JavaScript. They are supported by Node.js 10.x+ and by all modern browsers, including Chrome 63+, Firefox 57+, Safari 11.1+, and Edge 79+. If you‚Äôre using TypeScript v2.3+, you can compile Async Iterators to older versions of JavaScript.&lt;/p&gt; &#xA;&lt;p&gt;An async iterator is much like an iterator, except that its &lt;code&gt;next()&lt;/code&gt; method returns a promise for a { &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;done&lt;/code&gt; } pair. As an implicit aspect of the Async Iteration protocol, the next promise is not requested until the previous one resolves. This is a simple, yet a very powerful pattern.&lt;/p&gt; &#xA;&lt;h4&gt;Example Pagination Usage&lt;/h4&gt; &#xA;&lt;p&gt;In v3, the clients expose paginateOperationName APIs that are written using async generators, allowing you to use async iterators in a for await..of loop. You can perform the paginateListTables operation from &lt;code&gt;@aws-sdk/client-dynamodb&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const {&#xA;  DynamoDBClient,&#xA;  paginateListTables,&#xA;} = require(&#34;@aws-sdk/client-dynamodb&#34;);&#xA;&#xA;...&#xA;const paginatorConfig = {&#xA;  client: new DynamoDBClient({}),&#xA;  pageSize: 25&#xA;};&#xA;const commandParams = {};&#xA;const paginator = paginateListTables(paginatorConfig, commandParams);&#xA;&#xA;const tableNames = [];&#xA;for await (const page of paginator) {&#xA;  // page contains a single paginated output.&#xA;  tableNames.push(...page.TableNames);&#xA;}&#xA;...&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or simplified:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;...&#xA;const client = new DynamoDBClient({});&#xA;&#xA;const tableNames = [];&#xA;for await (const page of paginateListTables({ client }, {})) {&#xA;    // page contains a single paginated output.&#xA;    tableNames.push(...page.TableNames);&#xA;}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Abort Controller&lt;/h3&gt; &#xA;&lt;p&gt;In v3, we support the AbortController interface which allows you to abort requests as and when desired.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://dom.spec.whatwg.org/#interface-abortcontroller&#34;&gt;AbortController Interface&lt;/a&gt; provides an &lt;code&gt;abort()&lt;/code&gt; method that toggles the state of a corresponding AbortSignal object. Most APIs accept an AbortSignal object, and respond to &lt;code&gt;abort()&lt;/code&gt; by rejecting any unsettled promise with an ‚ÄúAbortError‚Äù.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Returns a new controller whose signal is set to a newly created AbortSignal object.&#xA;const controller = new AbortController();&#xA;&#xA;// Returns the AbortSignal object associated with controller.&#xA;const signal = controller.signal;&#xA;&#xA;// Invoking this method will set controller‚Äôs AbortSignal&#39;s aborted flag&#xA;// and signal to any observers that the associated activity is to be aborted.&#xA;controller.abort();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AbortController Usage&lt;/h4&gt; &#xA;&lt;p&gt;In JavaScript SDK v3, we added an implementation of WHATWG AbortController interface in &lt;code&gt;@aws-sdk/abort-controller&lt;/code&gt;. To use it, you need to send &lt;code&gt;AbortController.signal&lt;/code&gt; as &lt;code&gt;abortSignal&lt;/code&gt; in the httpOptions parameter when calling &lt;code&gt;.send()&lt;/code&gt; operation on the client as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { AbortController } = require(&#34;@aws-sdk/abort-controller&#34;);&#xA;const { S3Client, CreateBucketCommand } = require(&#34;@aws-sdk/client-s3&#34;);&#xA;&#xA;...&#xA;&#xA;const abortController = new AbortController();&#xA;const client = new S3Client(clientParams);&#xA;&#xA;const requestPromise = client.send(new CreateBucketCommand(commandParams), {&#xA;  abortSignal: abortController.signal,&#xA;});&#xA;&#xA;// The abortController can be aborted any time.&#xA;// The request will not be created if abortSignal is already aborted.&#xA;// The request will be destroyed if abortSignal is aborted before response is returned.&#xA;abortController.abort();&#xA;&#xA;// This will fail with &#34;AbortError&#34; as abortSignal is aborted.&#xA;await requestPromise;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full pagination deep dive please check out our &lt;a href=&#34;https://aws.amazon.com/blogs/developer/pagination-using-async-iterators-in-modular-aws-sdk-for-javascript/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;AbortController Example&lt;/h4&gt; &#xA;&lt;p&gt;The following code snippet shows how to upload a file using S3&#39;s putObject API in the browser with support to abort the upload. First, create a controller using the &lt;code&gt;AbortController()&lt;/code&gt; constructor, then grab a reference to its associated AbortSignal object using the AbortController.signal property. When the &lt;code&gt;PutObjectCommand&lt;/code&gt; is called with &lt;code&gt;.send()&lt;/code&gt; operation, pass in AbortController.signal as abortSignal in the httpOptions parameter. This will allow you to abort the PutObject operation by calling &lt;code&gt;abortController.abort()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const abortController = new AbortController();&#xA;const abortSignal = abortController.signal;&#xA;&#xA;const uploadBtn = document.querySelector(&#39;.upload&#39;);&#xA;const abortBtn = document.querySelector(&#39;.abort&#39;);&#xA;&#xA;uploadBtn.addEventListener(&#39;click&#39;, uploadObject);&#xA;&#xA;abortBtn.addEventListener(&#39;click&#39;, function() {&#xA;  abortController.abort();&#xA;  console.log(&#39;Upload aborted&#39;);&#xA;});&#xA;&#xA;const uploadObject = async (file) =&amp;gt; {&#xA;  ...&#xA;  const client = new S3Client(clientParams);&#xA;  try {&#xA;    await client.send(new PutObjectCommand(commandParams), { abortSignal });&#xA;  } catch(e) {&#xA;    if (e.name === &#34;AbortError&#34;) {&#xA;      uploadProgress.textContent = &#39;Upload aborted: &#39; + e.message;&#xA;    }&#xA;    ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full abort controller deep dive please check out our &lt;a href=&#34;https://aws.amazon.com/blogs/developer/abortcontroller-in-modular-aws-sdk-for-javascript/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Middleware Stack&lt;/h3&gt; &#xA;&lt;p&gt;The JavaScript SDK maintains a series of asynchronous actions. These series include actions that serialize input parameters into the data over the wire and deserialize response data into JavaScript objects. Such actions are implemented using functions called middleware and executed in a specific order. The object that hosts all the middleware including the ordering information is called a Middleware Stack. You can add your custom actions to the SDK and/or remove the default ones.&lt;/p&gt; &#xA;&lt;p&gt;When an API call is made, SDK sorts the middleware according to the step it belongs to and its priority within each step. The input parameters pass through each middleware. An HTTP request gets created and updated along the process. The HTTP Handler sends a request to the service, and receives a response. A response object is passed back through the same middleware stack in reverse, and is deserialized into a JavaScript object.&lt;/p&gt; &#xA;&lt;p&gt;A middleware is a higher-order function that transfers user input and/or HTTP request, then delegates to ‚Äúnext‚Äù middleware. It also transfers the result from ‚Äúnext‚Äù middleware. A middleware function also has access to context parameter, which optionally contains data to be shared across middleware.&lt;/p&gt; &#xA;&lt;p&gt;For example, you can use middleware to add a custom header like S3 object metadata:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const { S3 } = require(&#34;@aws-sdk/client-s3&#34;);&#xA;const client = new S3({ region: &#34;us-west-2&#34; });&#xA;// Middleware added to client, applies to all commands.&#xA;client.middlewareStack.add(&#xA;  (next, context) =&amp;gt; async (args) =&amp;gt; {&#xA;    args.request.headers[&#34;x-amz-meta-foo&#34;] = &#34;bar&#34;;&#xA;    const result = await next(args);&#xA;    // result.response contains data returned from next middleware.&#xA;    return result;&#xA;  },&#xA;  {&#xA;    step: &#34;build&#34;,&#xA;    name: &#34;addFooMetadataMiddleware&#34;,&#xA;    tags: [&#34;METADATA&#34;, &#34;FOO&#34;],&#xA;  }&#xA;);&#xA;&#xA;await client.putObject(params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specifying the absolute location of your middleware The example above adds middleware to &lt;code&gt;build&lt;/code&gt; step of middleware stack. The middleware stack contains five steps to manage a request‚Äôs lifecycle:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;strong&gt;initialize&lt;/strong&gt; lifecycle step initializes an API call. This step typically adds default input values to a command. The HTTP request has not yet been constructed.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;serialize&lt;/strong&gt; lifecycle step constructs an HTTP request for the API call. Example of typical serialization tasks include input validation and building an HTTP request from user input. The downstream middleware will have access to serialized HTTP request object in callback‚Äôs parameter &lt;code&gt;args.request&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;build&lt;/strong&gt; lifecycle step builds on top of serialized HTTP request. Examples of typical build tasks include injecting HTTP headers that describe a stable aspect of the request, such as &lt;code&gt;Content-Length&lt;/code&gt; or a body checksum. Any request alterations will be applied to all retries.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;finalizeRequest&lt;/strong&gt; lifecycle step prepares the request to be sent over the wire. The request in this stage is semantically complete and should therefore only be altered to match the recipient‚Äôs expectations. Examples of typical finalization tasks include request signing, performing retries and injecting hop-by-hop headers.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;strong&gt;deserialize&lt;/strong&gt; lifecycle step deserializes the raw response object to a structured response. The upstream middleware have access to deserialized data in next callbacks return value: &lt;code&gt;result.output&lt;/code&gt;. Each middleware must be added to a specific step. By default each middleware in the same step has undifferentiated order. In some cases, you might want to execute a middleware before or after another middleware in the same step. You can achieve it by specifying its &lt;code&gt;priority&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;client.middlewareStack.add(middleware, {&#xA;  step: &#34;initialize&#34;,&#xA;  priority: &#34;high&#34;, // or &#34;low&#34;.&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a full middleware stack deep dive please check out our &lt;a href=&#34;https://aws.amazon.com/blogs/developer/middleware-stack-modular-aws-sdk-js/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;h3&gt;Functionality requiring AWS Common Runtime (CRT)&lt;/h3&gt; &#xA;&lt;p&gt;This SDK has optional functionality that requires the &lt;a href=&#34;https://docs.aws.amazon.com/sdkref/latest/guide/common-runtime.html&#34;&gt;AWS Common Runtime (CRT)&lt;/a&gt; bindings to be included as a dependency with your application. This functionality includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPoints.html&#34;&gt;Amazon S3 Multi-Region Access Points&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html&#34;&gt;Amazon S3 Object Integrity&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the required AWS Common Runtime components are not installed you will receive an error like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Cannot find module &#39;@aws-sdk/signature-v4-crt&#39;&#xA;...&#xA;Please check if you have installed &#34;@aws-sdk/signature-v4-crt&#34; package explicitly.&#xA;For more information please go to https://github.com/aws/aws-sdk-js-v3#known-issues&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;indicating that the required dependency is missing to use the associated functionality. To install this dependency follow the provided &lt;a href=&#34;https://raw.githubusercontent.com/aws/aws-sdk-js-v3/main/#installing-the-aws-common-runtime-crt-dependency&#34;&gt;instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installing the AWS Common Runtime (CRT) Dependency&lt;/h4&gt; &#xA;&lt;p&gt;You can install the CRT dependency with different commands depending on the package management tool you are using. If you are using NPM:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm install @aws-sdk/signature-v4-crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using Yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;yarn add @aws-sdk/signature-v4-crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Related issues&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws/aws-sdk-js-v3/issues/2822&#34;&gt;S3 Multi-Region Access Point(MRAP) is not available unless with additional dependency&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>provectus/kafka-ui</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/provectus/kafka-ui</id>
    <link href="https://github.com/provectus/kafka-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-Source Web GUI for Apache Kafka Management&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/kafka-ui-logo.png&#34; alt=&#34;UI for Apache Kafka logo&#34;&gt; UI for Apache Kafka&amp;nbsp;&lt;/h2&gt; &#xA;&lt;h4&gt;Versatile, fast and lightweight web UI for managing Apache Kafka¬Æ clusters. Built by developers, for developers.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/provectus/kafka-ui/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/free-open-source.svg?sanitize=true&#34; alt=&#34;UI for Apache Kafka Price Free&#34;&gt; &lt;a href=&#34;https://github.com/provectus/kafka-ui/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/provectus/kafka-ui&#34; alt=&#34;Release version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/4DWzD7pGE5&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/897805035122077716&#34; alt=&#34;Chat with us&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DISCLAIMER&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;UI for Apache Kafka is a free, open-source tool that is curated by Provectus, and is built and supported by the open-source community. The tool will remain free and open-source in the future. Provectus does not plan to add any paid features or subscription plans so that everyone can have a better experience observing their data. UI for Apache Kafka is a part of the &lt;a href=&#34;https://provectus.com/nextgen-data-platform/&#34;&gt;Provectus NextGen Data Platform&lt;/a&gt;. Check it out for more details! &lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;UI for Apache Kafka is a free, open-source web UI to monitor and manage Apache Kafka clusters.&lt;/h4&gt; &#xA;&lt;p&gt;UI for Apache Kafka is a simple tool that makes your data flows observable, helps find and troubleshoot issues faster and deliver optimal performance. Its lightweight dashboard makes it easy to track key metrics of your Kafka clusters - Brokers, Topics, Partitions, Production, and Consumption.&lt;/p&gt; &#xA;&lt;p&gt;Set up UI for Apache Kafka with just a couple of easy commands to visualize your Kafka data in a comprehensible way. You can run the tool locally or in the cloud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Interface.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt; ‚Äî monitor and manage all your clusters in one place&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Monitoring with Metrics Dashboard&lt;/strong&gt; ‚Äî track key Kafka metrics with a lightweight dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Brokers&lt;/strong&gt; ‚Äî view topic and partition assignments, controller status&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Topics&lt;/strong&gt; ‚Äî view partition count, replication status, and custom configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Consumer Groups&lt;/strong&gt; ‚Äî view per-partition parked offsets, combined and per-partition lag&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browse Messages&lt;/strong&gt; ‚Äî browse messages with JSON, plain text, and Avro encoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Topic Configuration&lt;/strong&gt; ‚Äî create and configure new topics with dynamic configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable Authentification&lt;/strong&gt; ‚Äî secure your installation with optional Github/Gitlab/Google OAuth 2.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;The Interface&lt;/h1&gt; &#xA;&lt;p&gt;UI for Apache Kafka wraps major functions of Apache Kafka with an intuitive user interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Interface.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Topics&lt;/h2&gt; &#xA;&lt;p&gt;UI for Apache Kafka makes it easy for you to create topics in your browser by several clicks, pasting your own parameters, and viewing topics in the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_topic_kafka-ui.gif&#34; alt=&#34;Create Topic&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to jump from connectors view to corresponding topics and from a topic to consumers (back and forth) for more convenient navigation. connectors, overview topic settings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Connector_Topic_Consumer.gif&#34; alt=&#34;Connector_Topic_Consumer&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Messages&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s say we want to produce messages for our topic. With the UI for Apache Kafka we can send or write data/messages to the Kafka topics without effort by specifying parameters, and viewing messages in the list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_message_kafka-ui.gif&#34; alt=&#34;Produce Message&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Schema registry&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 supported types of schemas: Avro¬Æ, JSON Schema, and Protobuf schemas.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_schema.gif&#34; alt=&#34;Create Schema Registry&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before producing avro-encoded messages, you have to add an avro schema for the topic in Schema Registry. Now all these steps are easy to do with a few clicks in a user-friendly interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Schema_Topic.gif&#34; alt=&#34;Avro Schema Topic&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To run UI for Apache Kafka, you can use a pre-built Docker image or build it locally.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;We have plenty of &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/compose/DOCKER_COMPOSE.md&#34;&gt;docker-compose files&lt;/a&gt; as examples. They&#39;re built for various configuration stacks.&lt;/p&gt; &#xA;&lt;h1&gt;Guides&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/guides/SSO.md&#34;&gt;SSO configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/guides/AWS_IAM.md&#34;&gt;AWS IAM configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/compose/DOCKER_COMPOSE.md&#34;&gt;Docker-compose files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/compose/SECURE_BROKER.md&#34;&gt;Connection to a secure broker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration File&lt;/h3&gt; &#xA;&lt;p&gt;Example of how to configure clusters in the &lt;a href=&#34;https://github.com/provectus/kafka-ui/raw/master/kafka-ui-api/src/main/resources/application-local.yml&#34;&gt;application-local.yml&lt;/a&gt; configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kafka:&#xA;  clusters:&#xA;    -&#xA;      name: local&#xA;      bootstrapServers: localhost:29091&#xA;      schemaRegistry: http://localhost:8085&#xA;      schemaRegistryAuth:&#xA;        username: username&#xA;        password: password&#xA;#     schemaNameTemplate: &#34;%s-value&#34;&#xA;      jmxPort: 9997&#xA;    -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: cluster name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bootstrapServers&lt;/code&gt;: where to connect&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;schemaRegistry&lt;/code&gt;: schemaRegistry&#39;s address&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;schemaRegistryAuth.username&lt;/code&gt;: schemaRegistry&#39;s basic authentication username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;schemaRegistryAuth.password&lt;/code&gt;: schemaRegistry&#39;s basic authentication password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;schemaNameTemplate&lt;/code&gt;: how keys are saved to schemaRegistry&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jmxPort&lt;/code&gt;: open jmxPosrts of a broker&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;readOnly&lt;/code&gt;: enable read only mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Configure as many clusters as you need by adding their configs below separated with &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running a Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;The official Docker image for UI for Apache Kafka is hosted here: &lt;a href=&#34;https://hub.docker.com/r/provectuslabs/kafka-ui&#34;&gt;hub.docker.com/r/provectuslabs/kafka-ui&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Launch Docker container in the background:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;docker run -p 8080:8080 \&#xA;&#x9;-e KAFKA_CLUSTERS_0_NAME=local \&#xA;&#x9;-e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092 \&#xA;&#x9;-d provectuslabs/kafka-ui:latest &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then access the web UI at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.&lt;br&gt; Further configuration with environment variables - &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/#env_variables&#34;&gt;see environment variables&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use &lt;code&gt;docker-compose&lt;/code&gt; please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/docker-compose.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building With Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/project/contributing/software-required.md&#34;&gt;software-required.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/project/contributing/building.md&#34;&gt;building.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/project/contributing/running.md&#34;&gt;running.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Liveliness and readiness probes&lt;/h2&gt; &#xA;&lt;p&gt;Liveliness and readiness endpoint is at &lt;code&gt;/actuator/health&lt;/code&gt;. Info endpoint (build info) is located at &lt;code&gt;/actuator/info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;env_variables&#34;&gt;&lt;/a&gt; Environment Variables&lt;/h2&gt; &#xA;&lt;p&gt;Alternatively, each variable of the .yml file can be set with an environment variable. For example, if you want to use an environment variable to set the &lt;code&gt;name&lt;/code&gt; parameter, you can write it like this: &lt;code&gt;KAFKA_CLUSTERS_2_NAME&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SERVER_SERVLET_CONTEXT_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;URI basePath&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOGGING_LEVEL_ROOT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Setting log level (trace, debug, info, warn, error). Default: info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOGGING_LEVEL_COM_PROVECTUS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Setting log level (trace, debug, info, warn, error). Default: debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port for the embedded server. Default: &lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_ADMIN-CLIENT-TIMEOUT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kafka API timeout in ms. Default: &lt;code&gt;30000&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cluster name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Address where to connect&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_KSQLDBSERVER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;KSQL DB server address&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Security protocol to connect to the brokers. For SSL connection use &#34;SSL&#34;, for plaintext connection don&#39;t set this environment variable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_SCHEMAREGISTRY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SchemaRegistry&#39;s address&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_SCHEMAREGISTRYAUTH_USERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SchemaRegistry&#39;s basic authentication username&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_SCHEMAREGISTRYAUTH_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SchemaRegistry&#39;s basic authentication password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_SCHEMANAMETEMPLATE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How keys are saved to schemaRegistry&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_JMXPORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open jmxPosrts of a broker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_READONLY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable read-only mode. Default: false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_DISABLELOGDIRSCOLLECTION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Disable collecting segments information. It should be true for confluent cloud. Default: false&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Given name for the Kafka Connect cluster&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Address of the Kafka Connect service endpoint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_KAFKACONNECT_0_USERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kafka Connect cluster&#39;s basic authentication username&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_KAFKACONNECT_0_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kafka Connect cluster&#39;s basic authentication password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_JMXSSL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable SSL for JMX? &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. For advanced setup, see &lt;code&gt;kafka-ui-jmx-secured.yml&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_JMXUSERNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Username for JMX authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_CLUSTERS_0_JMXPASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Password for JMX authentication&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TOPIC_RECREATE_DELAY_SECONDS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Time delay between topic deletion and topic creation attempts for topic recreate functionality. Default: 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;TOPIC_RECREATE_MAXRETRIES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of attempts of topic creation after topic deletion for topic recreate functionality. Default: 15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>typeorm/typeorm</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/typeorm/typeorm</id>
    <link href="https://github.com/typeorm/typeorm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ORM for TypeScript and JavaScript (ES7, ES6, ES5). Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, SAP Hana, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;http://typeorm.io/&#34;&gt; &lt;img src=&#34;https://github.com/typeorm/typeorm/raw/master/resources/logo_big.png&#34; width=&#34;492&#34; height=&#34;228&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://app.circleci.com/pipelines/github/typeorm/typeorm&#34;&gt; &lt;img src=&#34;https://circleci.com/gh/typeorm/typeorm/tree/master.svg?style=shield&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://badge.fury.io/js/typeorm&#34;&gt; &lt;img src=&#34;https://badge.fury.io/js/typeorm.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://codecov.io/gh/typeorm/typeorm&#34;&gt; &lt;img alt=&#34;Codecov&#34; src=&#34;https://img.shields.io/codecov/c/github/typeorm/typeorm.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://join.slack.com/t/typeorm/shared_invite/zt-uu12ljeb-OH_0086I379fUDApYJHNuw&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;TypeORM is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-relational_mapping&#34;&gt;ORM&lt;/a&gt; that can run in NodeJS, Browser, Cordova, PhoneGap, Ionic, React Native, NativeScript, Expo, and Electron platforms and can be used with TypeScript and JavaScript (ES5, ES6, ES7, ES8). Its goal is to always support the latest JavaScript features and provide additional features that help you to develop any kind of application that uses databases - from small applications with a few tables to large scale enterprise applications with multiple databases.&lt;/p&gt; &#xA;&lt;p&gt;TypeORM supports both &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/active-record-data-mapper.md#what-is-the-active-record-pattern&#34;&gt;Active Record&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern&#34;&gt;Data Mapper&lt;/a&gt; patterns, unlike all other JavaScript ORMs currently in existence, which means you can write high quality, loosely coupled, scalable, maintainable applications the most productive way.&lt;/p&gt; &#xA;&lt;p&gt;TypeORM is highly influenced by other ORMs, such as &lt;a href=&#34;http://hibernate.org/orm/&#34;&gt;Hibernate&lt;/a&gt;, &lt;a href=&#34;http://www.doctrine-project.org/&#34;&gt;Doctrine&lt;/a&gt; and &lt;a href=&#34;https://www.asp.net/entity-framework&#34;&gt;Entity Framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports both &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/active-record-data-mapper.md#what-is-the-data-mapper-pattern&#34;&gt;DataMapper&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/active-record-data-mapper.md#what-is-the-active-record-pattern&#34;&gt;ActiveRecord&lt;/a&gt; (your choice).&lt;/li&gt; &#xA; &lt;li&gt;Entities and columns.&lt;/li&gt; &#xA; &lt;li&gt;Database-specific column types.&lt;/li&gt; &#xA; &lt;li&gt;Entity manager.&lt;/li&gt; &#xA; &lt;li&gt;Repositories and custom repositories.&lt;/li&gt; &#xA; &lt;li&gt;Clean object relational model.&lt;/li&gt; &#xA; &lt;li&gt;Associations (relations).&lt;/li&gt; &#xA; &lt;li&gt;Eager and lazy relations.&lt;/li&gt; &#xA; &lt;li&gt;Uni-directional, bi-directional and self-referenced relations.&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple inheritance patterns.&lt;/li&gt; &#xA; &lt;li&gt;Cascades.&lt;/li&gt; &#xA; &lt;li&gt;Indices.&lt;/li&gt; &#xA; &lt;li&gt;Transactions.&lt;/li&gt; &#xA; &lt;li&gt;Migrations and automatic migrations generation.&lt;/li&gt; &#xA; &lt;li&gt;Connection pooling.&lt;/li&gt; &#xA; &lt;li&gt;Replication.&lt;/li&gt; &#xA; &lt;li&gt;Using multiple database instances.&lt;/li&gt; &#xA; &lt;li&gt;Working with multiple databases types.&lt;/li&gt; &#xA; &lt;li&gt;Cross-database and cross-schema queries.&lt;/li&gt; &#xA; &lt;li&gt;Elegant-syntax, flexible and powerful QueryBuilder.&lt;/li&gt; &#xA; &lt;li&gt;Left and inner joins.&lt;/li&gt; &#xA; &lt;li&gt;Proper pagination for queries using joins.&lt;/li&gt; &#xA; &lt;li&gt;Query caching.&lt;/li&gt; &#xA; &lt;li&gt;Streaming raw results.&lt;/li&gt; &#xA; &lt;li&gt;Logging.&lt;/li&gt; &#xA; &lt;li&gt;Listeners and subscribers (hooks).&lt;/li&gt; &#xA; &lt;li&gt;Supports closure table pattern.&lt;/li&gt; &#xA; &lt;li&gt;Schema declaration in models or separate configuration files.&lt;/li&gt; &#xA; &lt;li&gt;Connection configuration in json / xml / yml / env formats.&lt;/li&gt; &#xA; &lt;li&gt;Supports MySQL / MariaDB / Postgres / CockroachDB / SQLite / Microsoft SQL Server / Oracle / SAP Hana / sql.js.&lt;/li&gt; &#xA; &lt;li&gt;Supports MongoDB NoSQL database.&lt;/li&gt; &#xA; &lt;li&gt;Works in NodeJS / Browser / Ionic / Cordova / React Native / NativeScript / Expo / Electron platforms.&lt;/li&gt; &#xA; &lt;li&gt;TypeScript and JavaScript support.&lt;/li&gt; &#xA; &lt;li&gt;ESM and CommonJS support.&lt;/li&gt; &#xA; &lt;li&gt;Produced code is performant, flexible, clean and maintainable.&lt;/li&gt; &#xA; &lt;li&gt;Follows all possible best practices.&lt;/li&gt; &#xA; &lt;li&gt;CLI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And more...&lt;/p&gt; &#xA;&lt;p&gt;With TypeORM your models look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, PrimaryGeneratedColumn, Column } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class User {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    firstName: string&#xA;&#xA;    @Column()&#xA;    lastName: string&#xA;&#xA;    @Column()&#xA;    age: number&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And your domain logic looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const userRepository = MyDataSource.getRepository(User)&#xA;&#xA;const user = new User()&#xA;user.firstName = &#34;Timber&#34;&#xA;user.lastName = &#34;Saw&#34;&#xA;user.age = 25&#xA;await userRepository.save(user)&#xA;&#xA;const allUsers = await userRepository.find()&#xA;const firstUser = await userRepository.findOneBy({&#xA;    id: 1,&#xA;}) // find by id&#xA;const timber = await userRepository.findOneBy({&#xA;    firstName: &#34;Timber&#34;,&#xA;    lastName: &#34;Saw&#34;,&#xA;}) // find by firstName and lastName&#xA;&#xA;await userRepository.remove(timber)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, if you prefer to use the &lt;code&gt;ActiveRecord&lt;/code&gt; implementation, you can use it as well:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, PrimaryGeneratedColumn, Column, BaseEntity } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class User extends BaseEntity {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    firstName: string&#xA;&#xA;    @Column()&#xA;    lastName: string&#xA;&#xA;    @Column()&#xA;    age: number&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And your domain logic will look this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const user = new User()&#xA;user.firstName = &#34;Timber&#34;&#xA;user.lastName = &#34;Saw&#34;&#xA;user.age = 25&#xA;await user.save()&#xA;&#xA;const allUsers = await User.find()&#xA;const firstUser = await User.findOneBy({&#xA;    id: 1,&#xA;})&#xA;const timber = await User.findOneBy({&#xA;    firstName: &#34;Timber&#34;,&#xA;    lastName: &#34;Saw&#34;&#xA;})&#xA;&#xA;await timber.remove()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the npm package:&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install typeorm --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You need to install &lt;code&gt;reflect-metadata&lt;/code&gt; shim:&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install reflect-metadata --save&lt;/code&gt;&lt;/p&gt; &lt;p&gt;and import it somewhere in the global place of your app (for example in &lt;code&gt;app.ts&lt;/code&gt;):&lt;/p&gt; &lt;p&gt;&lt;code&gt;import &#34;reflect-metadata&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You may need to install node typings:&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install @types/node --save-dev&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install a database driver:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;MySQL&lt;/strong&gt; or &lt;strong&gt;MariaDB&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install mysql --save&lt;/code&gt; (you can install &lt;code&gt;mysql2&lt;/code&gt; instead as well)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;PostgreSQL&lt;/strong&gt; or &lt;strong&gt;CockroachDB&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install pg --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;SQLite&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install sqlite3 --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;Microsoft SQL Server&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install mssql --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;sql.js&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install sql.js --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;Oracle&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install oracledb --save&lt;/code&gt;&lt;/p&gt; &lt;p&gt;To make the Oracle driver work, you need to follow the installation instructions from &lt;a href=&#34;https://github.com/oracle/node-oracledb&#34;&gt;their&lt;/a&gt; site.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;SAP Hana&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm install @sap/hana-client&#xA;npm install hdb-pool&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;SAP Hana support made possible by the sponsorship of &lt;a href=&#34;https://www.neptune-software.com/&#34;&gt;Neptune Software&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;Google Cloud Spanner&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npm install @google-cloud/spanner --save&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Provide authentication credentials to your application code by setting the environment variable &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Linux/macOS&#xA;export GOOGLE_APPLICATION_CREDENTIALS=&#34;KEY_PATH&#34;&#xA;&#xA;# Windows&#xA;set GOOGLE_APPLICATION_CREDENTIALS=KEY_PATH&#xA;&#xA;# Replace KEY_PATH with the path of the JSON file that contains your service account key.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To use Spanner with the emulator you should set &lt;code&gt;SPANNER_EMULATOR_HOST&lt;/code&gt; environment variable:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Linux/macOS&#xA;export SPANNER_EMULATOR_HOST=localhost:9010&#xA;&#xA;# Windows&#xA;set SPANNER_EMULATOR_HOST=localhost:9010&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;MongoDB&lt;/strong&gt; (experimental)&lt;/p&gt; &lt;p&gt;&lt;code&gt;npm install mongodb@^3.6.0 --save&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;for &lt;strong&gt;NativeScript&lt;/strong&gt;, &lt;strong&gt;react-native&lt;/strong&gt; and &lt;strong&gt;Cordova&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/supported-platforms.md&#34;&gt;documentation of supported platforms&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Install only &lt;em&gt;one&lt;/em&gt; of them, depending on which database you use.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;TypeScript configuration&lt;/h5&gt; &#xA;&lt;p&gt;Also, make sure you are using TypeScript version &lt;strong&gt;4.5&lt;/strong&gt; or higher, and you have enabled the following settings in &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;emitDecoratorMetadata&#34;: true,&#xA;&#34;experimentalDecorators&#34;: true,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to enable &lt;code&gt;es6&lt;/code&gt; in the &lt;code&gt;lib&lt;/code&gt; section of compiler options, or install &lt;code&gt;es6-shim&lt;/code&gt; from &lt;code&gt;@types&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get started with TypeORM is to use its CLI commands to generate a starter project. Quick start works only if you are using TypeORM in a NodeJS application. If you are using other platforms, proceed to the &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/#step-by-step-guide&#34;&gt;step-by-step guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To create a new project using CLI, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx typeorm init --name MyProject --database postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;name&lt;/code&gt; is the name of your project and &lt;code&gt;database&lt;/code&gt; is the database you&#39;ll use. Database can be one of the following values: &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;mariadb&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;cockroachdb&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;mssql&lt;/code&gt;, &lt;code&gt;sap&lt;/code&gt;, &lt;code&gt;spanner&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, &lt;code&gt;mongodb&lt;/code&gt;, &lt;code&gt;cordova&lt;/code&gt;, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;expo&lt;/code&gt;, &lt;code&gt;nativescript&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This command will generate a new project in the &lt;code&gt;MyProject&lt;/code&gt; directory with the following files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MyProject&#xA;‚îú‚îÄ‚îÄ src                   // place of your TypeScript code&#xA;‚îÇ   ‚îú‚îÄ‚îÄ entity            // place where your entities (database models) are stored&#xA;‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ User.ts       // sample entity&#xA;‚îÇ   ‚îú‚îÄ‚îÄ migration         // place where your migrations are stored&#xA;‚îÇ   ‚îú‚îÄ‚îÄ data-source.ts    // data source and all connection configuration&#xA;‚îÇ   ‚îî‚îÄ‚îÄ index.ts          // start point of your application&#xA;‚îú‚îÄ‚îÄ .gitignore            // standard gitignore file&#xA;‚îú‚îÄ‚îÄ package.json          // node module dependencies&#xA;‚îú‚îÄ‚îÄ README.md             // simple readme file&#xA;‚îî‚îÄ‚îÄ tsconfig.json         // TypeScript compiler options&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also run &lt;code&gt;typeorm init&lt;/code&gt; on an existing node project, but be careful - it may override some files you already have.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The next step is to install new project dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd MyProject&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you have all dependencies installed, edit the &lt;code&gt;data-source.ts&lt;/code&gt; file and put your own database connection configuration options in there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export const AppDataSource = new DataSource({&#xA;    type: &#34;postgres&#34;,&#xA;    host: &#34;localhost&#34;,&#xA;    port: 5432,&#xA;    username: &#34;test&#34;,&#xA;    password: &#34;test&#34;,&#xA;    database: &#34;test&#34;,&#xA;    synchronize: true,&#xA;    logging: true,&#xA;    entities: [Post, Category],&#xA;    subscribers: [],&#xA;    migrations: [],&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Particularly, most of the time you&#39;ll only need to configure &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt; and maybe &lt;code&gt;port&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;Once you finish with configuration and all node modules are installed, you can run your application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s it, your application should successfully run and insert a new user into the database. You can continue to work with this project and integrate other modules you need and start creating more entities.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can generate an ESM project by running &lt;code&gt;npx typeorm init --name MyProject --database postgres --module esm&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can generate an even more advanced project with express installed by running &lt;code&gt;npx typeorm init --name MyProject --database mysql --express&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can generate a docker-compose file by running &lt;code&gt;npx typeorm init --name MyProject --database postgres --docker&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Step-by-Step Guide&lt;/h2&gt; &#xA;&lt;p&gt;What are you expecting from ORM? First of all, you are expecting it will create database tables for you and find / insert / update / delete your data without the pain of having to write lots of hardly maintainable SQL queries. This guide will show you how to set up TypeORM from scratch and make it do what you are expecting from an ORM.&lt;/p&gt; &#xA;&lt;h3&gt;Create a model&lt;/h3&gt; &#xA;&lt;p&gt;Working with a database starts from creating tables. How do you tell TypeORM to create a database table? The answer is - through the models. Your models in your app are your database tables.&lt;/p&gt; &#xA;&lt;p&gt;For example, you have a &lt;code&gt;Photo&lt;/code&gt; model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;export class Photo {&#xA;    id: number&#xA;    name: string&#xA;    description: string&#xA;    filename: string&#xA;    views: number&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you want to store photos in your database. To store things in the database, first, you need a database table, and database tables are created from your models. Not all models, but only those you define as &lt;em&gt;entities&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Create an entity&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Entity&lt;/em&gt; is your model decorated by an &lt;code&gt;@Entity&lt;/code&gt; decorator. A database table will be created for such models. You work with entities everywhere in TypeORM. You can load/insert/update/remove and perform other operations with them.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s make our &lt;code&gt;Photo&lt;/code&gt; model an entity:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    id: number&#xA;    name: string&#xA;    description: string&#xA;    filename: string&#xA;    views: number&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, a database table will be created for the &lt;code&gt;Photo&lt;/code&gt; entity and we&#39;ll be able to work with it anywhere in our app. We have created a database table, however, what table can exist without columns? Let&#39;s create few columns in our database table.&lt;/p&gt; &#xA;&lt;h3&gt;Adding table columns&lt;/h3&gt; &#xA;&lt;p&gt;To add database columns, you simply need to decorate an entity&#39;s properties you want to make into a column with a &lt;code&gt;@Column&lt;/code&gt; decorator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    @Column()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    name: string&#xA;&#xA;    @Column()&#xA;    description: string&#xA;&#xA;    @Column()&#xA;    filename: string&#xA;&#xA;    @Column()&#xA;    views: number&#xA;&#xA;    @Column()&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;views&lt;/code&gt; and &lt;code&gt;isPublished&lt;/code&gt; columns will be added to the &lt;code&gt;photo&lt;/code&gt; table. Column types in the database are inferred from the property types you used, e.g. &lt;code&gt;number&lt;/code&gt; will be converted into &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; into &lt;code&gt;varchar&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt; into &lt;code&gt;bool&lt;/code&gt;, etc. But you can use any column type your database supports by explicitly specifying a column type into the &lt;code&gt;@Column&lt;/code&gt; decorator.&lt;/p&gt; &#xA;&lt;p&gt;We generated a database table with columns, but there is one thing left. Each database table must have a column with a primary key.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a primary column&lt;/h3&gt; &#xA;&lt;p&gt;Each entity &lt;strong&gt;must&lt;/strong&gt; have at least one primary key column. This is a requirement and you can&#39;t avoid it. To make a column a primary key, you need to use the &lt;code&gt;@PrimaryColumn&lt;/code&gt; decorator.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column, PrimaryColumn } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    @PrimaryColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    name: string&#xA;&#xA;    @Column()&#xA;    description: string&#xA;&#xA;    @Column()&#xA;    filename: string&#xA;&#xA;    @Column()&#xA;    views: number&#xA;&#xA;    @Column()&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating an auto-generated column&lt;/h3&gt; &#xA;&lt;p&gt;Now, let&#39;s say you want your id column to be auto-generated (this is known as auto-increment / sequence / serial / generated identity column). To do that, you need to change the &lt;code&gt;@PrimaryColumn&lt;/code&gt; decorator to a &lt;code&gt;@PrimaryGeneratedColumn&lt;/code&gt; decorator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column, PrimaryGeneratedColumn } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    name: string&#xA;&#xA;    @Column()&#xA;    description: string&#xA;&#xA;    @Column()&#xA;    filename: string&#xA;&#xA;    @Column()&#xA;    views: number&#xA;&#xA;    @Column()&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Column data types&lt;/h3&gt; &#xA;&lt;p&gt;Next, let&#39;s fix our data types. By default, the string is mapped to a varchar(255)-like type (depending on the database type). The number is mapped to an integer-like type (depending on the database type). We don&#39;t want all our columns to be limited varchars or integers. Let&#39;s setup correct data types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column, PrimaryGeneratedColumn } from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column({&#xA;        length: 100,&#xA;    })&#xA;    name: string&#xA;&#xA;    @Column(&#34;text&#34;)&#xA;    description: string&#xA;&#xA;    @Column()&#xA;    filename: string&#xA;&#xA;    @Column(&#34;double&#34;)&#xA;    views: number&#xA;&#xA;    @Column()&#xA;    isPublished: boolean&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Column types are database-specific. You can set any column type your database supports. More information on supported column types can be found &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/entities.md#column-types&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a new &lt;code&gt;DataSource&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Now, when our entity is created, let&#39;s create &lt;code&gt;index.ts&lt;/code&gt; file and set up our &lt;code&gt;DataSource&lt;/code&gt; there:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import &#34;reflect-metadata&#34;&#xA;import { DataSource } from &#34;typeorm&#34;&#xA;import { Photo } from &#34;./entity/Photo&#34;&#xA;&#xA;const AppDataSource = new DataSource({&#xA;    type: &#34;postgres&#34;,&#xA;    host: &#34;localhost&#34;,&#xA;    port: 5432,&#xA;    username: &#34;root&#34;,&#xA;    password: &#34;admin&#34;,&#xA;    database: &#34;test&#34;,&#xA;    entities: [Photo],&#xA;    synchronize: true,&#xA;    logging: false,&#xA;})&#xA;&#xA;// to initialize initial connection with the database, register all entities&#xA;// and &#34;synchronize&#34; database schema, call &#34;initialize()&#34; method of a newly created database&#xA;// once in your application bootstrap&#xA;AppDataSource.initialize()&#xA;    .then(() =&amp;gt; {&#xA;        // here you can start to work with your database&#xA;    })&#xA;    .catch((error) =&amp;gt; console.log(error))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We are using Postgres in this example, but you can use any other supported database. To use another database, simply change the &lt;code&gt;type&lt;/code&gt; in the options to the database type you are using: &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;mariadb&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;cockroachdb&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;mssql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, &lt;code&gt;sap&lt;/code&gt;, &lt;code&gt;spanner&lt;/code&gt;, &lt;code&gt;cordova&lt;/code&gt;, &lt;code&gt;nativescript&lt;/code&gt;, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;expo&lt;/code&gt;, or &lt;code&gt;mongodb&lt;/code&gt;. Also make sure to use your own host, port, username, password and database settings.&lt;/p&gt; &#xA;&lt;p&gt;We added our Photo entity to the list of entities for this data source. Each entity you are using in your connection must be listed there.&lt;/p&gt; &#xA;&lt;p&gt;Setting &lt;code&gt;synchronize&lt;/code&gt; makes sure your entities will be synced with the database, every time you run the application.&lt;/p&gt; &#xA;&lt;h3&gt;Running the application&lt;/h3&gt; &#xA;&lt;p&gt;Now if you run your &lt;code&gt;index.ts&lt;/code&gt;, a connection with the database will be initialized and a database table for your photos will be created.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;+-------------+--------------+----------------------------+&#xA;|                         photo                           |&#xA;+-------------+--------------+----------------------------+&#xA;| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |&#xA;| name        | varchar(100) |                            |&#xA;| description | text         |                            |&#xA;| filename    | varchar(255) |                            |&#xA;| views       | int(11)      |                            |&#xA;| isPublished | boolean      |                            |&#xA;+-------------+--------------+----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating and inserting a photo into the database&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s create a new photo to save it in the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photo = new Photo()&#xA;photo.name = &#34;Me and Bears&#34;&#xA;photo.description = &#34;I am near polar bears&#34;&#xA;photo.filename = &#34;photo-with-bears.jpg&#34;&#xA;photo.views = 1&#xA;photo.isPublished = true&#xA;&#xA;await AppDataSource.manager.save(photo)&#xA;console.log(&#34;Photo has been saved. Photo id is&#34;, photo.id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your entity is saved it will get a newly generated id. &lt;code&gt;save&lt;/code&gt; method returns an instance of the same object you pass to it. It&#39;s not a new copy of the object, it modifies its &#34;id&#34; and returns it.&lt;/p&gt; &#xA;&lt;h3&gt;Using Entity Manager&lt;/h3&gt; &#xA;&lt;p&gt;We just created a new photo and saved it in the database. We used &lt;code&gt;EntityManager&lt;/code&gt; to save it. Using entity manager you can manipulate any entity in your app. For example, let&#39;s load our saved entity:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const savedPhotos = await AppDataSource.manager.find(Photo)&#xA;console.log(&#34;All photos from the db: &#34;, savedPhotos)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;savedPhotos&lt;/code&gt; will be an array of Photo objects with the data loaded from the database.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about EntityManager &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/working-with-entity-manager.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Repositories&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s refactor our code and use &lt;code&gt;Repository&lt;/code&gt; instead of &lt;code&gt;EntityManager&lt;/code&gt;. Each entity has its own repository which handles all operations with its entity. When you deal with entities a lot, Repositories are more convenient to use than EntityManagers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photo = new Photo()&#xA;photo.name = &#34;Me and Bears&#34;&#xA;photo.description = &#34;I am near polar bears&#34;&#xA;photo.filename = &#34;photo-with-bears.jpg&#34;&#xA;photo.views = 1&#xA;photo.isPublished = true&#xA;&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;&#xA;await photoRepository.save(photo)&#xA;console.log(&#34;Photo has been saved&#34;)&#xA;&#xA;const savedPhotos = await photoRepository.find()&#xA;console.log(&#34;All photos from the db: &#34;, savedPhotos)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Learn more about Repository &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/working-with-repository.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Loading from the database&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s try more load operations using the Repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;const allPhotos = await photoRepository.find()&#xA;console.log(&#34;All photos from the db: &#34;, allPhotos)&#xA;&#xA;const firstPhoto = await photoRepository.findOneBy({&#xA;    id: 1,&#xA;})&#xA;console.log(&#34;First photo from the db: &#34;, firstPhoto)&#xA;&#xA;const meAndBearsPhoto = await photoRepository.findOneBy({&#xA;    name: &#34;Me and Bears&#34;,&#xA;})&#xA;console.log(&#34;Me and Bears photo from the db: &#34;, meAndBearsPhoto)&#xA;&#xA;const allViewedPhotos = await photoRepository.findBy({ views: 1 })&#xA;console.log(&#34;All viewed photos: &#34;, allViewedPhotos)&#xA;&#xA;const allPublishedPhotos = await photoRepository.findBy({ isPublished: true })&#xA;console.log(&#34;All published photos: &#34;, allPublishedPhotos)&#xA;&#xA;const [photos, photosCount] = await photoRepository.findAndCount()&#xA;console.log(&#34;All photos: &#34;, photos)&#xA;console.log(&#34;Photos count: &#34;, photosCount)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Updating in the database&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s load a single photo from the database, update it and save it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;const photoToUpdate = await photoRepository.findOneBy({&#xA;    id: 1,&#xA;})&#xA;photoToUpdate.name = &#34;Me, my friends and polar bears&#34;&#xA;await photoRepository.save(photoToUpdate)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now photo with &lt;code&gt;id = 1&lt;/code&gt; will be updated in the database.&lt;/p&gt; &#xA;&lt;h3&gt;Removing from the database&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s remove our photo from the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;const photoToRemove = await photoRepository.findOneBy({&#xA;    id: 1,&#xA;})&#xA;await photoRepository.remove(photoToRemove)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now photo with &lt;code&gt;id = 1&lt;/code&gt; will be removed from the database.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a one-to-one relation&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s create a one-to-one relationship with another class. Let&#39;s create a new class in &lt;code&gt;PhotoMetadata.ts&lt;/code&gt;. This PhotoMetadata class is supposed to contain our photo&#39;s additional meta-information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    Column,&#xA;    PrimaryGeneratedColumn,&#xA;    OneToOne,&#xA;    JoinColumn,&#xA;} from &#34;typeorm&#34;&#xA;import { Photo } from &#34;./Photo&#34;&#xA;&#xA;@Entity()&#xA;export class PhotoMetadata {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column(&#34;int&#34;)&#xA;    height: number&#xA;&#xA;    @Column(&#34;int&#34;)&#xA;    width: number&#xA;&#xA;    @Column()&#xA;    orientation: string&#xA;&#xA;    @Column()&#xA;    compressed: boolean&#xA;&#xA;    @Column()&#xA;    comment: string&#xA;&#xA;    @OneToOne(() =&amp;gt; Photo)&#xA;    @JoinColumn()&#xA;    photo: Photo&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here, we are using a new decorator called &lt;code&gt;@OneToOne&lt;/code&gt;. It allows us to create a one-to-one relationship between two entities. &lt;code&gt;type =&amp;gt; Photo&lt;/code&gt; is a function that returns the class of the entity with which we want to make our relationship. We are forced to use a function that returns a class, instead of using the class directly, because of the language specifics. We can also write it as &lt;code&gt;() =&amp;gt; Photo&lt;/code&gt;, but we use &lt;code&gt;type =&amp;gt; Photo&lt;/code&gt; as a convention to increase code readability. The type variable itself does not contain anything.&lt;/p&gt; &#xA;&lt;p&gt;We also add a &lt;code&gt;@JoinColumn&lt;/code&gt; decorator, which indicates that this side of the relationship will own the relationship. Relations can be unidirectional or bidirectional. Only one side of relational can be owning. Using &lt;code&gt;@JoinColumn&lt;/code&gt; decorator is required on the owner side of the relationship.&lt;/p&gt; &#xA;&lt;p&gt;If you run the app, you&#39;ll see a newly generated table, and it will contain a column with a foreign key for the photo relation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;+-------------+--------------+----------------------------+&#xA;|                     photo_metadata                      |&#xA;+-------------+--------------+----------------------------+&#xA;| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |&#xA;| height      | int(11)      |                            |&#xA;| width       | int(11)      |                            |&#xA;| comment     | varchar(255) |                            |&#xA;| compressed  | boolean      |                            |&#xA;| orientation | varchar(255) |                            |&#xA;| photoId     | int(11)      | FOREIGN KEY                |&#xA;+-------------+--------------+----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Save a one-to-one relation&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s save a photo, its metadata and attach them to each other.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { PhotoMetadata } from &#34;./entity/PhotoMetadata&#34;&#xA;&#xA;// create a photo&#xA;const photo = new Photo()&#xA;photo.name = &#34;Me and Bears&#34;&#xA;photo.description = &#34;I am near polar bears&#34;&#xA;photo.filename = &#34;photo-with-bears.jpg&#34;&#xA;photo.views = 1&#xA;photo.isPublished = true&#xA;&#xA;// create a photo metadata&#xA;const metadata = new PhotoMetadata()&#xA;metadata.height = 640&#xA;metadata.width = 480&#xA;metadata.compressed = true&#xA;metadata.comment = &#34;cybershoot&#34;&#xA;metadata.orientation = &#34;portrait&#34;&#xA;metadata.photo = photo // this way we connect them&#xA;&#xA;// get entity repositories&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;const metadataRepository = AppDataSource.getRepository(PhotoMetadata)&#xA;&#xA;// first we should save a photo&#xA;await photoRepository.save(photo)&#xA;&#xA;// photo is saved. Now we need to save a photo metadata&#xA;await metadataRepository.save(metadata)&#xA;&#xA;// done&#xA;console.log(&#xA;    &#34;Metadata is saved, and the relation between metadata and photo is created in the database too&#34;,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Inverse side of the relationship&lt;/h3&gt; &#xA;&lt;p&gt;Relations can be unidirectional or bidirectional. Currently, our relation between PhotoMetadata and Photo is unidirectional. The owner of the relation is PhotoMetadata, and Photo doesn&#39;t know anything about PhotoMetadata. This makes it complicated to access PhotoMetadata from the Photo side. To fix this issue we should add an inverse relation, and make relations between PhotoMetadata and Photo bidirectional. Let&#39;s modify our entities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    Column,&#xA;    PrimaryGeneratedColumn,&#xA;    OneToOne,&#xA;    JoinColumn,&#xA;} from &#34;typeorm&#34;&#xA;import { Photo } from &#34;./Photo&#34;&#xA;&#xA;@Entity()&#xA;export class PhotoMetadata {&#xA;    /* ... other columns */&#xA;&#xA;    @OneToOne(() =&amp;gt; Photo, (photo) =&amp;gt; photo.metadata)&#xA;    @JoinColumn()&#xA;    photo: Photo&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column, PrimaryGeneratedColumn, OneToOne } from &#34;typeorm&#34;&#xA;import { PhotoMetadata } from &#34;./PhotoMetadata&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    /* ... other columns */&#xA;&#xA;    @OneToOne(() =&amp;gt; PhotoMetadata, (photoMetadata) =&amp;gt; photoMetadata.photo)&#xA;    metadata: PhotoMetadata&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;photo =&amp;gt; photo.metadata&lt;/code&gt; is a function that returns the name of the inverse side of the relation. Here we show that the metadata property of the Photo class is where we store PhotoMetadata in the Photo class. Instead of passing a function that returns a property of the photo, you could alternatively simply pass a string to &lt;code&gt;@OneToOne&lt;/code&gt; decorator, like &lt;code&gt;&#34;metadata&#34;&lt;/code&gt;. But we used this function-typed approach to make our refactoring easier.&lt;/p&gt; &#xA;&lt;p&gt;Note that we should use the &lt;code&gt;@JoinColumn&lt;/code&gt; decorator only on one side of a relation. Whichever side you put this decorator on will be the owning side of the relationship. The owning side of a relationship contains a column with a foreign key in the database.&lt;/p&gt; &#xA;&lt;h3&gt;Relations in ESM projects&lt;/h3&gt; &#xA;&lt;p&gt;If you use ESM in your TypeScript project, you should use the &lt;code&gt;Relation&lt;/code&gt; wrapper type in relation properties to avoid circular dependency issues. Let&#39;s modify our entities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    Column,&#xA;    PrimaryGeneratedColumn,&#xA;    OneToOne,&#xA;    JoinColumn,&#xA;    Relation,&#xA;} from &#34;typeorm&#34;&#xA;import { Photo } from &#34;./Photo&#34;&#xA;&#xA;@Entity()&#xA;export class PhotoMetadata {&#xA;    /* ... other columns */&#xA;&#xA;    @OneToOne(() =&amp;gt; Photo, (photo) =&amp;gt; photo.metadata)&#xA;    @JoinColumn()&#xA;    photo: Relation&amp;lt;Photo&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    Column,&#xA;    PrimaryGeneratedColumn,&#xA;    OneToOne,&#xA;    Relation,&#xA;} from &#34;typeorm&#34;&#xA;import { PhotoMetadata } from &#34;./PhotoMetadata&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    /* ... other columns */&#xA;&#xA;    @OneToOne(() =&amp;gt; PhotoMetadata, (photoMetadata) =&amp;gt; photoMetadata.photo)&#xA;    metadata: Relation&amp;lt;PhotoMetadata&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Loading objects with their relations&lt;/h3&gt; &#xA;&lt;p&gt;Now let&#39;s load our photo and its photo metadata in a single query. There are two ways to do it - using &lt;code&gt;find*&lt;/code&gt; methods or using &lt;code&gt;QueryBuilder&lt;/code&gt; functionality. Let&#39;s use &lt;code&gt;find*&lt;/code&gt; methods first. &lt;code&gt;find*&lt;/code&gt; methods allow you to specify an object with the &lt;code&gt;FindOneOptions&lt;/code&gt; / &lt;code&gt;FindManyOptions&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { PhotoMetadata } from &#34;./entity/PhotoMetadata&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;const photos = await photoRepository.find({&#xA;    relations: {&#xA;        metadata: true,&#xA;    },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here, photos will contain an array of photos from the database, and each photo will contain its photo metadata. Learn more about Find Options in &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/find-options.md&#34;&gt;this documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using find options is good and dead simple, but if you need a more complex query, you should use &lt;code&gt;QueryBuilder&lt;/code&gt; instead. &lt;code&gt;QueryBuilder&lt;/code&gt; allows more complex queries to be used in an elegant way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Photo } from &#34;./entity/Photo&#34;&#xA;import { PhotoMetadata } from &#34;./entity/PhotoMetadata&#34;&#xA;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;const photos = await AppDataSource.getRepository(Photo)&#xA;    .createQueryBuilder(&#34;photo&#34;)&#xA;    .innerJoinAndSelect(&#34;photo.metadata&#34;, &#34;metadata&#34;)&#xA;    .getMany()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;QueryBuilder&lt;/code&gt; allows the creation and execution of SQL queries of almost any complexity. When you work with &lt;code&gt;QueryBuilder&lt;/code&gt;, think like you are creating an SQL query. In this example, &#34;photo&#34; and &#34;metadata&#34; are aliases applied to selected photos. You use aliases to access columns and properties of the selected data.&lt;/p&gt; &#xA;&lt;h3&gt;Using cascades to automatically save related objects&lt;/h3&gt; &#xA;&lt;p&gt;We can set up cascade options in our relations, in the cases when we want our related object to be saved whenever the other object is saved. Let&#39;s change our photo&#39;s &lt;code&gt;@OneToOne&lt;/code&gt; decorator a bit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;export class Photo {&#xA;    /// ... other columns&#xA;&#xA;    @OneToOne(() =&amp;gt; PhotoMetadata, (metadata) =&amp;gt; metadata.photo, {&#xA;        cascade: true,&#xA;    })&#xA;    metadata: PhotoMetadata&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;cascade&lt;/code&gt; allows us not to separately save photo and separately save metadata objects now. Now we can simply save a photo object, and the metadata object will be saved automatically because of cascade options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;// create photo object&#xA;const photo = new Photo()&#xA;photo.name = &#34;Me and Bears&#34;&#xA;photo.description = &#34;I am near polar bears&#34;&#xA;photo.filename = &#34;photo-with-bears.jpg&#34;&#xA;photo.isPublished = true&#xA;&#xA;// create photo metadata object&#xA;const metadata = new PhotoMetadata()&#xA;metadata.height = 640&#xA;metadata.width = 480&#xA;metadata.compressed = true&#xA;metadata.comment = &#34;cybershoot&#34;&#xA;metadata.orientation = &#34;portrait&#34;&#xA;&#xA;photo.metadata = metadata // this way we connect them&#xA;&#xA;// get repository&#xA;const photoRepository = AppDataSource.getRepository(Photo)&#xA;&#xA;// saving a photo also save the metadata&#xA;await photoRepository.save(photo)&#xA;&#xA;console.log(&#34;Photo is saved, photo metadata is saved too.&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that we now set the photo&#39;s &lt;code&gt;metadata&lt;/code&gt; property, instead of the metadata&#39;s &lt;code&gt;photo&lt;/code&gt; property as before. The &lt;code&gt;cascade&lt;/code&gt; feature only works if you connect the photo to its metadata from the photo&#39;s side. If you set the metadata&#39;s side, the metadata would not be saved automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Creating a many-to-one / one-to-many relation&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s create a many-to-one/one-to-many relation. Let&#39;s say a photo has one author, and each author can have many photos. First, let&#39;s create an &lt;code&gt;Author&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    Column,&#xA;    PrimaryGeneratedColumn,&#xA;    OneToMany,&#xA;    JoinColumn,&#xA;} from &#34;typeorm&#34;&#xA;import { Photo } from &#34;./Photo&#34;&#xA;&#xA;@Entity()&#xA;export class Author {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    name: string&#xA;&#xA;    @OneToMany(() =&amp;gt; Photo, (photo) =&amp;gt; photo.author) // note: we will create author property in the Photo class below&#xA;    photos: Photo[]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Author&lt;/code&gt; contains an inverse side of a relation. &lt;code&gt;OneToMany&lt;/code&gt; is always an inverse side of the relation, and it can&#39;t exist without &lt;code&gt;ManyToOne&lt;/code&gt; on the other side of the relation.&lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s add the owner side of the relation into the Photo entity:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from &#34;typeorm&#34;&#xA;import { PhotoMetadata } from &#34;./PhotoMetadata&#34;&#xA;import { Author } from &#34;./Author&#34;&#xA;&#xA;@Entity()&#xA;export class Photo {&#xA;    /* ... other columns */&#xA;&#xA;    @ManyToOne(() =&amp;gt; Author, (author) =&amp;gt; author.photos)&#xA;    author: Author&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In many-to-one / one-to-many relation, the owner side is always many-to-one. It means that the class that uses &lt;code&gt;@ManyToOne&lt;/code&gt; will store the id of the related object.&lt;/p&gt; &#xA;&lt;p&gt;After you run the application, the ORM will create the &lt;code&gt;author&lt;/code&gt; table:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;+-------------+--------------+----------------------------+&#xA;|                          author                         |&#xA;+-------------+--------------+----------------------------+&#xA;| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |&#xA;| name        | varchar(255) |                            |&#xA;+-------------+--------------+----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will also modify the &lt;code&gt;photo&lt;/code&gt; table, adding a new &lt;code&gt;author&lt;/code&gt; column and creating a foreign key for it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;+-------------+--------------+----------------------------+&#xA;|                         photo                           |&#xA;+-------------+--------------+----------------------------+&#xA;| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |&#xA;| name        | varchar(255) |                            |&#xA;| description | varchar(255) |                            |&#xA;| filename    | varchar(255) |                            |&#xA;| isPublished | boolean      |                            |&#xA;| authorId    | int(11)      | FOREIGN KEY                |&#xA;+-------------+--------------+----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating a many-to-many relation&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s create a many-to-many relation. Let&#39;s say a photo can be in many albums, and each album can contain many photos. Let&#39;s create an &lt;code&gt;Album&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import {&#xA;    Entity,&#xA;    PrimaryGeneratedColumn,&#xA;    Column,&#xA;    ManyToMany,&#xA;    JoinTable,&#xA;} from &#34;typeorm&#34;&#xA;&#xA;@Entity()&#xA;export class Album {&#xA;    @PrimaryGeneratedColumn()&#xA;    id: number&#xA;&#xA;    @Column()&#xA;    name: string&#xA;&#xA;    @ManyToMany(() =&amp;gt; Photo, (photo) =&amp;gt; photo.albums)&#xA;    @JoinTable()&#xA;    photos: Photo[]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;@JoinTable&lt;/code&gt; is required to specify that this is the owner side of the relationship.&lt;/p&gt; &#xA;&lt;p&gt;Now let&#39;s add the inverse side of our relation to the &lt;code&gt;Photo&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;export class Photo {&#xA;    /// ... other columns&#xA;&#xA;    @ManyToMany(() =&amp;gt; Album, (album) =&amp;gt; album.photos)&#xA;    albums: Album[]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After you run the application, the ORM will create a &lt;strong&gt;album_photos_photo_albums&lt;/strong&gt; &lt;em&gt;junction table&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;+-------------+--------------+----------------------------+&#xA;|                album_photos_photo_albums                |&#xA;+-------------+--------------+----------------------------+&#xA;| album_id    | int(11)      | PRIMARY KEY FOREIGN KEY    |&#xA;| photo_id    | int(11)      | PRIMARY KEY FOREIGN KEY    |&#xA;+-------------+--------------+----------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to register the &lt;code&gt;Album&lt;/code&gt; class with your connection in the ORM:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const options: DataSourceOptions = {&#xA;    // ... other options&#xA;    entities: [Photo, PhotoMetadata, Author, Album],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now let&#39;s insert albums and photos to our database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import { AppDataSource } from &#34;./index&#34;&#xA;&#xA;// create a few albums&#xA;const album1 = new Album()&#xA;album1.name = &#34;Bears&#34;&#xA;await AppDataSource.manager.save(album1)&#xA;&#xA;const album2 = new Album()&#xA;album2.name = &#34;Me&#34;&#xA;await AppDataSource.manager.save(album2)&#xA;&#xA;// create a few photos&#xA;const photo = new Photo()&#xA;photo.name = &#34;Me and Bears&#34;&#xA;photo.description = &#34;I am near polar bears&#34;&#xA;photo.filename = &#34;photo-with-bears.jpg&#34;&#xA;photo.views = 1&#xA;photo.isPublished = true&#xA;photo.albums = [album1, album2]&#xA;await AppDataSource.manager.save(photo)&#xA;&#xA;// now our photo is saved and albums are attached to it&#xA;// now lets load them:&#xA;const loadedPhoto = await AppDataSource.getRepository(Photo).findOne({&#xA;    where: {&#xA;        id: 1,&#xA;    },&#xA;    relations: {&#xA;        albums: true,&#xA;    },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;loadedPhoto&lt;/code&gt; will be equal to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;{&#xA;    id: 1,&#xA;    name: &#34;Me and Bears&#34;,&#xA;    description: &#34;I am near polar bears&#34;,&#xA;    filename: &#34;photo-with-bears.jpg&#34;,&#xA;    albums: [{&#xA;        id: 1,&#xA;        name: &#34;Bears&#34;&#xA;    }, {&#xA;        id: 2,&#xA;        name: &#34;Me&#34;&#xA;    }]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using QueryBuilder&lt;/h3&gt; &#xA;&lt;p&gt;You can use QueryBuilder to build SQL queries of almost any complexity. For example, you can do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;const photos = await AppDataSource.getRepository(Photo)&#xA;    .createQueryBuilder(&#34;photo&#34;) // first argument is an alias. Alias is what you are selecting - photos. You must specify it.&#xA;    .innerJoinAndSelect(&#34;photo.metadata&#34;, &#34;metadata&#34;)&#xA;    .leftJoinAndSelect(&#34;photo.albums&#34;, &#34;album&#34;)&#xA;    .where(&#34;photo.isPublished = true&#34;)&#xA;    .andWhere(&#34;(photo.name = :photoName OR photo.name = :bearName)&#34;)&#xA;    .orderBy(&#34;photo.id&#34;, &#34;DESC&#34;)&#xA;    .skip(5)&#xA;    .take(10)&#xA;    .setParameters({ photoName: &#34;My&#34;, bearName: &#34;Mishka&#34; })&#xA;    .getMany()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This query selects all published photos with &#34;My&#34; or &#34;Mishka&#34; names. It will select results from position 5 (pagination offset) and will select only 10 results (pagination limit). The selection result will be ordered by id in descending order. The photo&#39;s albums will be left joined and their metadata will be inner joined.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll use the query builder in your application a lot. Learn more about QueryBuilder &lt;a href=&#34;https://raw.githubusercontent.com/typeorm/typeorm/master/docs/select-query-builder.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at the samples in &lt;a href=&#34;https://github.com/typeorm/typeorm/tree/master/sample&#34;&gt;sample&lt;/a&gt; for examples of usage.&lt;/p&gt; &#xA;&lt;p&gt;There are a few repositories which you can clone and start with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/typescript-example&#34;&gt;Example how to use TypeORM with TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/javascript-example&#34;&gt;Example how to use TypeORM with JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/babel-example&#34;&gt;Example how to use TypeORM with JavaScript and Babel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/browser-example&#34;&gt;Example how to use TypeORM with TypeScript and SystemJS in Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ItayGarin/typeorm-react-swc&#34;&gt;Example how to use TypeORM with TypeScript and React in Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/typescript-express-example&#34;&gt;Example how to use Express and TypeORM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/typescript-koa-example&#34;&gt;Example how to use Koa and TypeORM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/mongo-typescript-example&#34;&gt;Example how to use TypeORM with MongoDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/cordova-example&#34;&gt;Example how to use TypeORM in a Cordova/PhoneGap app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/ionic-example&#34;&gt;Example how to use TypeORM with an Ionic app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/react-native-example&#34;&gt;Example how to use TypeORM with React Native&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/nativescript-vue-typeorm-sample&#34;&gt;Example how to use TypeORM with Nativescript-Vue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/betov18x/nativescript-angular-typeorm-example&#34;&gt;Example how to use TypeORM with Nativescript-Angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/electron-javascript-example&#34;&gt;Example how to use TypeORM with Electron using JavaScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/electron-typescript-example&#34;&gt;Example how to use TypeORM with Electron using TypeScript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;There are several extensions that simplify working with TypeORM and integrating it with other modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vesper-framework.com&#34;&gt;TypeORM + GraphQL framework&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/typeorm-typedi-extensions&#34;&gt;TypeORM integration&lt;/a&gt; with &lt;a href=&#34;https://github.com/pleerock/typedi&#34;&gt;TypeDI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typeorm/typeorm-routing-controllers-extensions&#34;&gt;TypeORM integration&lt;/a&gt; with &lt;a href=&#34;https://github.com/pleerock/routing-controllers&#34;&gt;routing-controllers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Models generation from existing database - &lt;a href=&#34;https://github.com/Kononnable/typeorm-model-generator&#34;&gt;typeorm-model-generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixtures loader - &lt;a href=&#34;https://github.com/RobinCK/typeorm-fixtures&#34;&gt;typeorm-fixtures-cli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ER Diagram generator - &lt;a href=&#34;https://github.com/eugene-manuilov/typeorm-uml/&#34;&gt;typeorm-uml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;another ER Diagram generator - &lt;a href=&#34;https://www.npmjs.com/package/erdia/&#34;&gt;erdia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create, drop &amp;amp; seed database - &lt;a href=&#34;https://github.com/tada5hi/typeorm-extension&#34;&gt;typeorm-extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatically update &lt;code&gt;data-source.ts&lt;/code&gt; after generating migrations/entities - &lt;a href=&#34;https://www.npmjs.com/package/typeorm-codebase-sync&#34;&gt;typeorm-codebase-sync&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Learn about contribution &lt;a href=&#34;https://github.com/typeorm/typeorm/raw/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt; and how to setup your development environment &lt;a href=&#34;https://github.com/typeorm/typeorm/raw/master/DEVELOPER.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/typeorm/typeorm/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/typeorm/contributors.svg?width=890&amp;amp;showBtn=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Open source is hard and time-consuming. If you want to invest in TypeORM&#39;s future you can become a sponsor and allow our core team to spend more time on TypeORM&#39;s improvements and new features. &lt;a href=&#34;https://opencollective.com/typeorm&#34;&gt;Become a sponsor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/typeorm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/typeorm/tiers/sponsor.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Gold Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Become a gold sponsor and get premium technical support from our core contributors. &lt;a href=&#34;https://opencollective.com/typeorm&#34;&gt;Become a gold sponsor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/typeorm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/typeorm/tiers/gold-sponsor.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vuetifyjs/vuetify</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/vuetifyjs/vuetify</id>
    <link href="https://github.com/vuetifyjs/vuetify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üêâ Material Component Framework for Vue&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://vuetifyjs.com&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Vuetify Logo&#34; width=&#34;100&#34; src=&#34;https://cdn.vuetifyjs.com/images/logos/logo.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/actions?query=workflow%3ACI&#34;&gt; &lt;img src=&#34;https://github.com/vuetifyjs/vuetify/workflows/CI/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;CI badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/vuetifyjs/vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/github/vuetifyjs/vuetify.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dt/vuetify.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/vuetify.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/raw/master/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/l/vuetify.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.zenhub.com/workspace/o/vuetifyjs/vuetify/boards&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Managed_with-ZenHub-5e60ba.svg?sanitize=true&#34; alt=&#34;zenhub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://community.vuetifyjs.com&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/340160225338195969/widget.png&#34; alt=&#34;Chat&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vuetify.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cdnjs.com/libraries/vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/cdnjs/v/vuetify.svg?sanitize=true&#34; alt=&#34;CDN&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;Supporting Vuetify&lt;/h2&gt; &#xA;&lt;p&gt;Vuetify is a MIT licensed project that is developed and maintained full-time by &lt;a href=&#34;https://github.com/johnleider&#34;&gt;John Leider&lt;/a&gt; and &lt;a href=&#34;https://github.com/heatherleider&#34;&gt;Heather Leider&lt;/a&gt;; with support from the entire &lt;a href=&#34;https://vuetifyjs.com/about/meet-the-team/&#34;&gt;Core Team&lt;/a&gt;. Sponsor Vuetify and receive some &lt;strong&gt;awesome perks&lt;/strong&gt; and support Open Source Software at the same time! üéâ&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://github.com/users/johnleider/sponsorship&#34;&gt;Become a backer or sponsor on GitHub&lt;/a&gt; or &lt;a href=&#34;https://www.patreon.com/vuetify&#34;&gt;Patreon&lt;/a&gt; &lt;small&gt;(supports John and Heather)&lt;/small&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://opencollective.com/vuetify&#34;&gt;Become a backer or sponsor on Open Collective&lt;/a&gt; &lt;strong&gt;&lt;small&gt;(supports the Dev team)&lt;/small&gt;&lt;/strong&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://github.com/sponsors/johnleider?frequency=one-time&amp;amp;sponsor=johnleider&#34;&gt;Make a one-time payment with GitHub&lt;/a&gt; or &lt;a href=&#34;https://paypal.me/vuetify&#34;&gt;Paypal&lt;/a&gt; &lt;small&gt;(supports John and Heather)&lt;/small&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;a href=&#34;https://tidelift.com/subscription/request-a-demo?utm_source=npm-vuetify&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&#34;&gt;Become a subscriber on Tidelift&lt;/a&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What&#39;s the difference between GitHub Sponsors, Patreon, and OpenCollective&lt;/h3&gt; &#xA;&lt;p&gt;Funds donated through GitHub Sponsors and Patreon go directly to support John and Heather&#39;s full-time work on Vuetify. Funds donated via Open Collective are managed with transparent expenses and will be used for compensating work and expenses for Core team members. Your name/logo will receive proper recognition and exposure by donating on either platform.&lt;/p&gt; &#xA;&lt;h3&gt;Special Sponsors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://appeggio.com/vuetify?ref=vuetify-github&#34;&gt; &lt;img height=&#34;50px&#34; src=&#34;https://imgix.cosmicjs.com/7658d8f0-9e71-11ec-b20b-ad2fdaf5e1bc-logo-word.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.qomplx.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;50px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/QOMPLX.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Palladium Sponsors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://vueschool.io/?utm_source=Vuetify&amp;amp;utm_medium=banner&amp;amp;utm_campaign=sponsorship&#34;&gt; &lt;img height=&#34;48px&#34; src=&#34;https://imgix.cosmicjs.com/d82532e0-9fbb-11ec-a634-2f1716dd45af-vue-school-light-lg.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Platinum Sponsors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://careers.lmax.com/?utm_source=vuetify&amp;amp;utm_medium=github-link&amp;amp;utm_campaign=lmax-careers&#34;&gt; &lt;img height=&#34;40px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/lmax-exchange.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://intygrate.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;40px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/intygrate.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://vuemastery.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;38px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/vuemastery.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;http://crossword-solver.io/&#34;&gt; &lt;img height=&#34;50px&#34; src=&#34;https://cdn.cosmicjs.com/098aa4e0-9749-11eb-bf6a-1ffd0f06b0f7-crossword-solver-logo-light.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://kintell.com/?utm_source=Vuetify&amp;amp;utm_medium=VuetifyReferral&amp;amp;utm_campaign=Vuetify-logo-click&#34;&gt; &lt;img height=&#34;40px&#34; src=&#34;https://imgix.cosmicjs.com/e13a39e0-ff78-11eb-a3f4-b70be1f3fd88-image.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Gold Sponsors&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://application.rategenius.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;30px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/rate-genius.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.digitalmaas.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;42px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/digital-maas.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://analytics.quantedsquare.com/&#34;&gt; &lt;img height=&#34;36px&#34; src=&#34;https://cdn.vuetifyjs.com/docs/images/sponsors/logos/quanted-square-light-sm.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.hypeinnovation.com/home?ref=vuetify-github&#34;&gt; &lt;img height=&#34;30px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/hype-logo-light.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.cosmicjs.com/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;30px&#34; src=&#34;https://cdn.vuetifyjs.com/images/backers/cosmic-logo-light.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://papersowl.com/write-my-essay-please&#34;&gt; &lt;img height=&#34;30px&#34; src=&#34;https://cdn.cosmicjs.com/ae13a830-974a-11eb-bf6a-1ffd0f06b0f7-papersowl-logo-light.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.dealerdesk.de/?ref=vuetify-github&#34;&gt; &lt;img height=&#34;42px&#34; src=&#34;https://imgix.cosmicjs.com/15326970-c482-11eb-9242-8105a76f57b3-dealerdesklogocmyk20210520-1515-3.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://writersperhour.com/buy-essay&#34;&gt; &lt;img height=&#34;51px&#34; src=&#34;https://cdn.vuetifyjs.com/docs/images/sponsors/logos/writers-per-hour.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://aussiecasinohex.com/&#34;&gt; &lt;img height=&#34;30px&#34; src=&#34;https://imgix.cosmicjs.com/5e118ca0-9748-11eb-bf6a-1ffd0f06b0f7-hex-light.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.sumcumo.com/&#34;&gt; &lt;img height=&#34;26px&#34; src=&#34;https://cdn.cosmicjs.com/cd0aa3a0-974b-11eb-bf6a-1ffd0f06b0f7-sun-light.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://goread.io/buy-instagram-followers&#34;&gt; &lt;img height=&#34;26px&#34; src=&#34;https://cdn.cosmicjs.com/3ab46070-9711-11eb-b593-972a7dbc1054-goread-light.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.casinoonlineaams.com/&#34;&gt; &lt;img height=&#34;48px&#34; src=&#34;https://imgix.cosmicjs.com/9d6390c0-c483-11eb-9242-8105a76f57b3-casinoonlineaams-light-md-1.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://medium.com/theymakedesign/best-web-design-companies-3ecc85b32071&#34;&gt; &lt;img height=&#34;55px&#34; src=&#34;https://imgix.cosmicjs.com/5a155730-c547-11eb-9242-8105a76f57b3-tm-logo-light-md.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.nongamstopwager.com/casinos-not-on-gamstop/&#34;&gt; &lt;img height=&#34;55px&#34; src=&#34;https://imgix.cosmicjs.com/1647b850-43ea-11ec-9580-ebf669758fed-nongamstopwager-com.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://cryptocasinos.com/&#34;&gt; &lt;img height=&#34;32px&#34; src=&#34;https://imgix.cosmicjs.com/f4b62cd0-4ca4-11ec-9940-53a088b36636-crypto-casinos.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.instafollowers.co/buy-instagram-likes&#34;&gt; &lt;img height=&#34;55px&#34; src=&#34;https://imgix.cosmicjs.com/8fa4e150-520e-11ec-9aff-3d50541531a0-buy-instagram-likes-png-1.png&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;p&gt;Vuetify is a Vue UI Library with beautifully handcrafted Components using the &lt;a href=&#34;https://material.io/guidelines/&#34;&gt;Material Design&lt;/a&gt; specification. No design skills required ‚Äî everything you need to create amazing applications is at your fingertips. Supercharge your development process with all of the tools that you need to succeed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WCAG &lt;strong&gt;Accessibility&lt;/strong&gt; (a11y) / WCAG / Section 508 / RTL support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30+&lt;/strong&gt; supported languages&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Smaller&lt;/em&gt; bundle sizes with &lt;strong&gt;automatic&lt;/strong&gt; tree-shaking&lt;/li&gt; &#xA; &lt;li&gt;A massive &lt;strong&gt;Discord&lt;/strong&gt; &lt;a href=&#34;https://community.vuetifyjs.com&#34;&gt;community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18 months&lt;/strong&gt; Long-term support for &lt;a href=&#34;https://vuetifyjs.com/introduction/long-term-support/&#34;&gt;Major releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IE11 / Safari 9&lt;/strong&gt; support with &lt;a href=&#34;https://vuetifyjs.com/getting-started/browser-support/&#34;&gt;polyfill&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extensive customization options with &lt;strong&gt;SASS/SCSS&lt;/strong&gt; and &lt;a href=&#34;https://vuetifyjs.com/features/presets/&#34;&gt;Presets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Responsive support down to &lt;em&gt;320px&lt;/em&gt; width&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vuetifyjs.com/introduction/support/&#34;&gt;Direct support&lt;/a&gt; support from Vuetify&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;Browser Support&lt;/h6&gt; &#xA;&lt;p&gt;Vuetify supports all &lt;strong&gt;modern browsers&lt;/strong&gt;, including IE11 and Safari 9+ (using &lt;a href=&#34;https://vuetifyjs.com/getting-started/quick-start#ie-11-amp-safari-9-support&#34;&gt;polyfills&lt;/a&gt;). Components are designed for a minimum width of &lt;em&gt;320px&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vuetify Ecosystem&lt;/h3&gt; &#xA;&lt;h4&gt;Plugins&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/cli-plugin-utils&#34;&gt;@vuetify/cli-plugin-utils&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/@vuetify/cli-plugin-utils&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@vuetify/cli-plugin-utils.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A collection of helper utilities for creating Vue CLI plugins &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/eslint-config-vuetify&#34;&gt;eslint-config-vuetify&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/eslint-config-vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/eslint-config-vuetify.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; An opinionated eslint-config for Vuetify &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/eslint-plugin-vuetify&#34;&gt;eslint-plugin-vuetify&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/eslint-plugin-vuetify.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; An opinionated eslint-plugin for Vuetify &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/vue-cli-plugin-vuetify&#34;&gt;vue-cli-plugin-vuetify&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A Vue CLI plugin for installing and configuring Vuetify &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/vue-cli-plugin-vuetify-cli&#34;&gt;vue-cli-plugin-vuetify-cli&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-cli&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-cli.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A Vue CLI plugin for scaffolding Vue applications &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/vue-cli-plugin-vuetify-essentials&#34;&gt;vue-cli-plugin-vuetify-essentials&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-essentials&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-essentials.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A supplementary Vue CLI plugin used by &lt;a href=&#34;https:/github.com/vuetifyjs/preset&#34;&gt;@vuetify/preset&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/vue-cli-plugin-vuetify-storybook&#34;&gt;vue-cli-plugin-vuetify-storybook&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-storybook&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-storybook.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A Vue CLI plugin for using Storybook w/ Vuetify &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/preset&#34;&gt;@vuetify/preset&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; n/a &lt;/td&gt; &#xA;   &lt;td&gt; A Vue CLI preset for Vuetify &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vuetify-loader&#34;&gt;vuetify-loader&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vuetify-loader&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vuetify-loader.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A webpack plugin for treeshaking and progressive image support &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vuex/tree/master/packages/cognito-module/&#34;&gt;vuex-cognito-module&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/@vuetify/vuex-cognito-module&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@vuetify/vuex-cognito-module.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; A &lt;a href=&#34;https://vuex.vuejs.org/&#34;&gt;Vuex&lt;/a&gt; module for &lt;a href=&#34;https://aws.amazon.com/cognito/&#34;&gt;AWS Cognito&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Presets&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Preset&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Study&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-basil&#34;&gt;vue-cli-plugin-vuetify-preset-basil&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-basil&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-basil.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/basil.html&#34;&gt;Basil Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-crane&#34;&gt;vue-cli-plugin-vuetify-preset-crane&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-crane&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-crane.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/crane.html&#34;&gt;Crane Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-fortnightly&#34;&gt;vue-cli-plugin-vuetify-preset-fortnightly&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-fortnightly&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-fortnightly.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/fortnightly.html&#34;&gt;Fortnightly Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-owl&#34;&gt;vue-cli-plugin-vuetify-preset-owl&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-owl&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-owl.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/owl.html&#34;&gt;Owl Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-rally&#34;&gt;vue-cli-plugin-vuetify-preset-rally&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-rally&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-rally.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/rally.html&#34;&gt;Rally Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-reply&#34;&gt;vue-cli-plugin-vuetify-preset-reply&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-reply&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-reply.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/reply.html&#34;&gt;Reply Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://github.com/vuetifyjs/vue-cli-plugins/tree/master/packages/%40vuetify/material-studies/templates/vue-cli-plugin-vuetify-preset-shrine&#34;&gt;vue-cli-plugin-vuetify-preset-shrine&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://www.npmjs.com/package/vue-cli-plugin-vuetify-preset-shrine&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/vue-cli-plugin-vuetify-preset-shrine.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://material.io/design/material-studies/shrine.html&#34;&gt;Shrine Material Study&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;To check out the docs, visit &lt;a href=&#34;https://vuetifyjs.com&#34;&gt;vuetifyjs.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/vuetifyjs/vuetify/workflows/Crowdin%20Uploads/badge.svg?branch=master&#34; alt=&#34;Crowdin Uploads&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Questions&lt;/h3&gt; &#xA;&lt;p&gt;For help and support questions, please use our &lt;a href=&#34;https://community.vuetifyjs.com&#34;&gt;community chat&lt;/a&gt;. This issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; &#xA;&lt;h3&gt;Issues&lt;/h3&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/raw/master/.github/CONTRIBUTING.md#important-information&#34;&gt;Important Information&lt;/a&gt; before opening an issue. Issues not confirming to the guidelines may be closed immediately.&lt;/p&gt; &#xA;&lt;h3&gt;Changelog&lt;/h3&gt; &#xA;&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/releases&#34;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Developers interested in contributing should read the &lt;a href=&#34;https://raw.githubusercontent.com/vuetifyjs/vuetify/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; and the &lt;a href=&#34;https://vuetifyjs.com/getting-started/contributing&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please do &lt;strong&gt;not&lt;/strong&gt; ask general questions in an issue. Issues are only to report bugs, suggest enhancements, or request new features. For general questions and discussions, ask in the &lt;a href=&#34;https://community.vuetifyjs.com/&#34;&gt;community chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To help you get you familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started. If you have any questions, please join us on the &lt;a href=&#34;https://community.vuetifyjs.com&#34;&gt;community chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also have a list of &lt;a href=&#34;https://github.com/vuetifyjs/vuetify/labels/help%20wanted&#34;&gt;help wanted&lt;/a&gt; issues that you might want to check.&lt;/p&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute üòç!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vuetifyjs/vuetify/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/vuetify/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Backers&lt;/h6&gt; &#xA;&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&#34;https://opencollective.com/vuetify#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/vuetify#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/vuetify/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Sponsors&lt;/h6&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/vuetify#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;a href=&#34;https://opencollective.com/vuetify/sponsor/0/website&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://opencollective.com/vuetify/sponsor/0/avatar.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://opencollective.com/vuetify/sponsor/1/website&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://opencollective.com/vuetify/sponsor/1/avatar.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;üìë License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2016-present Vuetify LLC&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Redocly/redoc</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/Redocly/redoc</id>
    <link href="https://github.com/Redocly/redoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìò OpenAPI/Swagger-generated API Reference Documentation&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Redoc logo&#34; src=&#34;https://raw.githubusercontent.com/Redocly/redoc/master//docs/images/redoc.png&#34; width=&#34;400px&#34;&gt; &#xA; &lt;h1&gt;Generate interactive API documentation from OpenAPI definitions&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://travis-ci.com/Redocly/redoc&#34;&gt;&lt;img src=&#34;https://travis-ci.com/Redocly/redoc.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/Redocly/redoc?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/Redocly/redoc/badge.svg?branch=master&amp;amp;service=github&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/redoc&#34;&gt;&lt;img src=&#34;http://img.shields.io/npm/v/redoc.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Redocly/redoc/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/redoc.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js&#34;&gt;&lt;img src=&#34;http://img.badgesize.io/https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js?compression=gzip&amp;amp;max=300000&#34; alt=&#34;bundle size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/redoc&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/redoc.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/redoc&#34;&gt;&lt;img src=&#34;https://data.jsdelivr.com/v1/package/npm/redoc/badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/redocly/redoc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/build/redocly/redoc.svg?sanitize=true&#34; alt=&#34;Docker Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is the README for the &lt;code&gt;2.x&lt;/code&gt; version of Redoc (React-based).&lt;/strong&gt; &lt;strong&gt;The README for the &lt;code&gt;1.x&lt;/code&gt; version is on the &lt;a href=&#34;https://github.com/Redocly/redoc/tree/v1.x&#34;&gt;v1.x&lt;/a&gt; branch&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About Redoc&lt;/h2&gt; &#xA;&lt;p&gt;Redoc is an open-source tool for generating documentation from OpenAPI (fka Swagger) definitions.&lt;/p&gt; &#xA;&lt;p&gt;By default Redoc offers a three-panel, responsive layout:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The left panel contains a search bar and navigation menu.&lt;/li&gt; &#xA; &lt;li&gt;The central panel contains the documentation.&lt;/li&gt; &#xA; &lt;li&gt;The right panel contains request and response examples.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/demo/redoc-demo.png&#34; alt=&#34;Redoc demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Live demo&lt;/h2&gt; &#xA;&lt;p&gt;If you want to see how Redoc will render your OpenAPI definition, you can try it out online at &lt;a href=&#34;https://redocly.github.io/redoc/&#34;&gt;https://redocly.github.io/redoc/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A version of the Swagger Petstore API is displayed by default. To test it with your own OpenAPI definition, enter the URL for your definition and select &lt;strong&gt;TRY IT&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Redoc vs. Reference vs. Portals&lt;/h2&gt; &#xA;&lt;p&gt;Redoc is Redocly&#39;s community-edition product. Looking for something more? Checkout the following feature comparison of Redocly&#39;s premium products versus Redoc:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Features&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Redoc&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reference&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Portals&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Specs&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swagger 2.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAPI 3.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAPI 3.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö (basic)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Theming&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fonts/colors&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Extra theme options&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pagination&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search (enhanced)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search (server-side)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Multiple APIs&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multiple versions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multiple APIs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;API catalog&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Additional features&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Try-it console&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Automated code samples&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deep links&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;More SEO control&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Contextual docs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Landing pages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React hooks for more control&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Personalization&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Analytics integrations&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚àö&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Feedback&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Coming Soon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Refer to the Redocly&#39;s documentation for more information on these products:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redoc.ly/docs/developer-portal/introduction/&#34;&gt;Portals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redoc.ly/docs/api-reference-docs/getting-started/&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redoc.ly/docs/redoc/quickstart/intro/&#34;&gt;Redoc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Responsive three-panel design with menu/scrolling synchronization&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://redoc.ly/docs/redoc/quickstart/intro/&#34;&gt;Multiple deployment options&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://redoc.ly/docs/redoc/quickstart/cli/#redoc-cli-commands&#34;&gt;Server-side rendering (SSR) ready&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ability to integrate your API introduction into the side menu&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://redoc.ly/docs/redoc/quickstart/react/&#34;&gt;Simple integration with &lt;code&gt;create-react-app&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/APIs-guru/create-react-app-redoc&#34;&gt;Example repo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://redoc.ly/docs/redoc/quickstart/cli/&#34;&gt;Command-line interface to bundle your docs into a &lt;strong&gt;zero-dependency&lt;/strong&gt; HTML file&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neat &lt;strong&gt;interactive&lt;/strong&gt; documentation for nested objects &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/images/nested-demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization options&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://redoc.ly/#services&#34;&gt;&lt;img alt=&#34;Customization services&#34; src=&#34;http://i.imgur.com/c4sUF7M.png&#34; height=&#34;60px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High-level grouping in side-menu with the &lt;a href=&#34;https://redoc.ly/docs/api-reference-docs/specification-extensions/x-tag-groups/&#34;&gt;&lt;code&gt;x-tagGroups&lt;/code&gt;&lt;/a&gt; specification extension&lt;/li&gt; &#xA; &lt;li&gt;Branding/customizations using the &lt;a href=&#34;https://redoc.ly/docs/api-reference-docs/configuration/theming/&#34;&gt;&lt;code&gt;theme&lt;/code&gt; option&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAPI v3.0 support&lt;/li&gt; &#xA; &lt;li&gt;Basic OpenAPI v3.1 support&lt;/li&gt; &#xA; &lt;li&gt;Broad OpenAPI v2.0 feature support (yes, it supports even &lt;code&gt;discriminator&lt;/code&gt;) &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/images/discriminator-demo.gif&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code samples support (via vendor extension) &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/images/code-samples-demo.gif&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; all the 2.x releases are deployed to npm and can be used with Redocly-cdn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;particular release, for example, &lt;code&gt;v2.0.0-rc.70&lt;/code&gt;: &lt;a href=&#34;https://cdn.redoc.ly/redoc/v2.0.0-rc.70/bundles/redoc.standalone.js&#34;&gt;https://cdn.redoc.ly/redoc/v2.0.0-rc.70/bundles/redoc.standalone.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; release: &lt;a href=&#34;https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js&#34;&gt;https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, all the 1.x releases are hosted on our GitHub Pages-based CDN &lt;strong&gt;(deprecated)&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;particular release, for example &lt;code&gt;v1.2.0&lt;/code&gt;: &lt;a href=&#34;https://rebilly.github.io/ReDoc/releases/v1.2.0/redoc.min.js&#34;&gt;https://rebilly.github.io/ReDoc/releases/v1.2.0/redoc.min.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v1.x.x&lt;/code&gt; release: &lt;a href=&#34;https://rebilly.github.io/ReDoc/releases/v1.x.x/redoc.min.js&#34;&gt;https://rebilly.github.io/ReDoc/releases/v1.x.x/redoc.min.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; release: &lt;a href=&#34;https://rebilly.github.io/ReDoc/releases/latest/redoc.min.js&#34;&gt;https://rebilly.github.io/ReDoc/releases/latest/redoc.min.js&lt;/a&gt; - it will point to latest 1.x.x release since 2.x releases are not hosted on this CDN but on unpkg.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version Guidance&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Redoc Release&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;OpenAPI Specification&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.0.0-alpha.54&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.1, 3.0.x, 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.0.0-alpha.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.0, 2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.19.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.18.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.17.x&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api-reference.rebilly.com/&#34;&gt;Rebilly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/api/v1.25/&#34;&gt;Docker Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zuora.com/developer/api-reference/&#34;&gt;Zuora&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.discourse.org&#34;&gt;Discourse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.commbox.io/api/&#34;&gt;Commbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apis.guru/api-doc/&#34;&gt;APIs.guru&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docs.boxknight.com/&#34;&gt;BoxKnight&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lint OpenAPI definitions&lt;/h2&gt; &#xA;&lt;p&gt;Redocly&#39;s CLI is an &lt;a href=&#34;https://github.com/Redocly/redocly-cli&#34;&gt;open source command-line tool&lt;/a&gt; that you can use to lint your OpenAPI definition. Linting helps you to catch errors and inconsistencies in your OpenAPI definition before publishing.&lt;/p&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://redocly.com/docs/cli/configuration/&#34;&gt;Redocly configuration&lt;/a&gt; in the OpenAPI documentation for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;h3&gt;TL;DR final code example&lt;/h3&gt; &#xA;&lt;p&gt;To render your OpenAPI definition using Redoc, use the following HTML code sample and replace the &lt;code&gt;spec-url&lt;/code&gt; attribute with the url or local file address to your definition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;Redoc&amp;lt;/title&amp;gt;&#xA;    &amp;lt;!-- needed for adaptive design --&amp;gt;&#xA;    &amp;lt;meta charset=&#34;utf-8&#34;/&amp;gt;&#xA;    &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&amp;gt;&#xA;    &amp;lt;link href=&#34;https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700&#34; rel=&#34;stylesheet&#34;&amp;gt;&#xA;&#xA;    &amp;lt;!--&#xA;    Redoc doesn&#39;t change outer page styles&#xA;    --&amp;gt;&#xA;    &amp;lt;style&amp;gt;&#xA;      body {&#xA;        margin: 0;&#xA;        padding: 0;&#xA;      }&#xA;    &amp;lt;/style&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;redoc spec-url=&#39;http://petstore.swagger.io/v2/swagger.json&#39;&amp;gt;&amp;lt;/redoc&amp;gt;&#xA;    &amp;lt;script src=&#34;https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js&#34;&amp;gt; &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For step-by-step instructions for how to get started using Redoc to render your OpenAPI definition, refer to the &lt;a href=&#34;https://redocly.com/docs/redoc/quickstart/&#34;&gt;&lt;strong&gt;Redoc quickstart guide&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://redocly.com/docs/redoc/deployment/html/&#34;&gt;&lt;strong&gt;How to use the HTML element&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Redoc CLI&lt;/h2&gt; &#xA;&lt;p&gt;For more information on Redoc&#39;s commmand-line interface, refer to &lt;a href=&#34;https://redocly.com/docs/redoc/deployment/cli/&#34;&gt;&lt;strong&gt;Using the Redoc CLI&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Security Definition location&lt;/h3&gt; &#xA;&lt;p&gt;You can inject the Security Definitions widget into any place in your definition &lt;code&gt;description&lt;/code&gt;. For more information, refer to &lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/security-definitions-injection.md&#34;&gt;Security definitions injection&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;OpenAPI specification extensions&lt;/h3&gt; &#xA;&lt;p&gt;Redoc uses the following &lt;a href=&#34;https://redocly.com/docs/api-reference-docs/spec-extensions/&#34;&gt;specification extensions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-logo&#34;&gt;&lt;code&gt;x-logo&lt;/code&gt;&lt;/a&gt; - is used to specify API logo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-traitTag&#34;&gt;&lt;code&gt;x-traitTag&lt;/code&gt;&lt;/a&gt; - useful for handling out common things like Pagination, Rate-Limits, etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-codeSamples&#34;&gt;&lt;code&gt;x-codeSamples&lt;/code&gt;&lt;/a&gt; - specify operation code samples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-examples&#34;&gt;&lt;code&gt;x-examples&lt;/code&gt;&lt;/a&gt; - specify JSON example for requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-nullable&#34;&gt;&lt;code&gt;x-nullable&lt;/code&gt;&lt;/a&gt; - mark schema param as a nullable&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-displayname&#34;&gt;&lt;code&gt;x-displayName&lt;/code&gt;&lt;/a&gt; - specify human-friendly names for the menu categories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-tagGroups&#34;&gt;&lt;code&gt;x-tagGroups&lt;/code&gt;&lt;/a&gt; - group tags by categories in the side menu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-servers&#34;&gt;&lt;code&gt;x-servers&lt;/code&gt;&lt;/a&gt; - ability to specify different servers for API (backported from OpenAPI 3.0)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-ignoredHeaderParameters&#34;&gt;&lt;code&gt;x-ignoredHeaderParameters&lt;/code&gt;&lt;/a&gt; - ability to specify header parameter names to ignore&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-additionalPropertiesName&#34;&gt;&lt;code&gt;x-additionalPropertiesName&lt;/code&gt;&lt;/a&gt; - ability to supply a descriptive name for the additional property keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-summary&#34;&gt;&lt;code&gt;x-summary&lt;/code&gt;&lt;/a&gt; - For Response object, use as the response button text, with description rendered under the button&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-extendedDiscriminator&#34;&gt;&lt;code&gt;x-extendedDiscriminator&lt;/code&gt;&lt;/a&gt; - In Schemas, uses this to solve name-clash issues with the standard discriminator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/docs/redoc-vendor-extensions.md#x-explicitMappingOnly&#34;&gt;&lt;code&gt;x-explicitMappingOnly&lt;/code&gt;&lt;/a&gt; - In Schemas, display a more descriptive property name in objects with additionalProperties when viewing the property list with an object&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;redoc&amp;gt;&lt;/code&gt; options object&lt;/h3&gt; &#xA;&lt;p&gt;You can use all of the following options with the standalone version of the &#xA; &lt;redoc&gt;&#xA;   tag by kebab-casing them. For example, &#xA;  &lt;code&gt;scrollYOffset&lt;/code&gt; becomes &#xA;  &lt;code&gt;scroll-y-offset&lt;/code&gt;, and &#xA;  &lt;code&gt;expandResponses&lt;/code&gt; becomes &#xA;  &lt;code&gt;expand-responses&lt;/code&gt;.&#xA; &lt;/redoc&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;disableSearch&lt;/code&gt; - disable search indexing and search box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;minCharacterLengthToInitSearch&lt;/code&gt; - set minimal characters length to init search, default &lt;code&gt;3&lt;/code&gt;, minimal &lt;code&gt;1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expandDefaultServerVariables&lt;/code&gt; - enable expanding default server variables, default &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expandResponses&lt;/code&gt; - specify which responses to expand by default by response codes. Values should be passed as comma-separated list without spaces e.g. &lt;code&gt;expandResponses=&#34;200,201&#34;&lt;/code&gt;. Special value &lt;code&gt;&#34;all&#34;&lt;/code&gt; expands all responses by default. Be careful: this option can slow-down documentation rendering time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;generatedPayloadSamplesMaxDepth&lt;/code&gt; - set the maximum render depth for JSON payload samples (responses and request body). The default value is &lt;code&gt;10&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;maxDisplayedEnumValues&lt;/code&gt; - display only specified number of enum values. hide rest values under spoiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideDownloadButton&lt;/code&gt; - do not show &#34;Download&#34; spec button. &lt;strong&gt;THIS DOESN&#39;T MAKE YOUR SPEC PRIVATE&lt;/strong&gt;, it just hides the button.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;downloadFileName&lt;/code&gt; - set a custom file name for the downloaded API definition file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;downloadDefinitionUrl&lt;/code&gt; - If the &#39;Download&#39; button is visible in the API reference documentation (hideDownloadButton=false), the URL configured here will open when that button is selected. Provide it as an absolute URL with the full URI scheme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideHostname&lt;/code&gt; - if set, the protocol and hostname is not shown in the operation definition.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideLoading&lt;/code&gt; - do not show loading animation. Useful for small docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideFab&lt;/code&gt; - do not show FAB in mobile view. Useful for implementing a custom floating action button.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideSchemaPattern&lt;/code&gt; - if set, the pattern is not shown in the schema.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideSingleRequestSampleTab&lt;/code&gt; - do not show the request sample tab for requests with only one sample.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;showObjectSchemaExamples&lt;/code&gt; - show object schema example in the properties, default &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;expandSingleSchemaField&lt;/code&gt; - automatically expand single field in a schema&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;schemaExpansionLevel&lt;/code&gt; - specifies whether to automatically expand schemas. Special value &lt;code&gt;&#34;all&#34;&lt;/code&gt; expands all levels. The default value is &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jsonSampleExpandLevel&lt;/code&gt; - set the default expand level for JSON payload samples (responses and request body). Special value &lt;code&gt;&#34;all&#34;&lt;/code&gt; expands all levels. The default value is &lt;code&gt;2&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hideSchemaTitles&lt;/code&gt; - do not display schema &lt;code&gt;title&lt;/code&gt; next to to the type&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;simpleOneOfTypeLabel&lt;/code&gt; - show only unique oneOf types in the label without titles&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sortEnumValuesAlphabetically&lt;/code&gt; - set to true, sorts all enum values in all schemas alphabetically&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sortOperationsAlphabetically&lt;/code&gt; - set to true, sorts operations in the navigation sidebar and in the middle panel alphabetically&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sortTagsAlphabetically&lt;/code&gt; - set to true, sorts tags in the navigation sidebar and in the middle panel alphabetically&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lazyRendering&lt;/code&gt; - &lt;em&gt;Not implemented yet&lt;/em&gt; &lt;del&gt;if set, enables lazy rendering mode in ReDoc. This mode is useful for APIs with big number of operations (e.g. &amp;gt; 50). In this mode ReDoc shows initial screen ASAP and then renders the rest operations asynchronously while showing progress bar on the top. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/%5Credocly.github.io/redoc&#34;&gt;demo&lt;/a&gt; for the example.&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;menuToggle&lt;/code&gt; - if true clicking second time on expanded menu item will collapse it, default &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nativeScrollbars&lt;/code&gt; - use native scrollbar for sidemenu instead of perfect-scroll (scrolling performance optimization for big specs).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onlyRequiredInSamples&lt;/code&gt; - shows only required fields in request samples.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pathInMiddlePanel&lt;/code&gt; - show path link and HTTP verb in the middle panel instead of the right one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;requiredPropsFirst&lt;/code&gt; - show required properties first ordered in the same order as in &lt;code&gt;required&lt;/code&gt; array.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scrollYOffset&lt;/code&gt; - If set, specifies a vertical scroll-offset. This is often useful when there are fixed positioned elements at the top of the page, such as navbars, headers etc; &lt;code&gt;scrollYOffset&lt;/code&gt; can be specified in various ways: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;number&lt;/strong&gt;: A fixed number of pixels to be used as offset.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;selector&lt;/strong&gt;: selector of the element to be used for specifying the offset. The distance from the top of the page to the element&#39;s bottom will be used as offset.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;function&lt;/strong&gt;: A getter function. Must return a number representing the offset (in pixels).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;showExtensions&lt;/code&gt; - show vendor extensions (&#34;x-&#34; fields). Extensions used by ReDoc are ignored. Can be boolean or an array of &lt;code&gt;string&lt;/code&gt; with names of extensions to display.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sortPropsAlphabetically&lt;/code&gt; - sort properties alphabetically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;payloadSampleIdx&lt;/code&gt; - if set, payload sample will be inserted at this index or last. Indexes start from 0.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theme&lt;/code&gt; - ReDoc theme. For details check &lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/#redoc-theme-object&#34;&gt;theme docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;untrustedSpec&lt;/code&gt; - if set, the spec is considered untrusted and all HTML/markdown is sanitized to prevent XSS. &lt;strong&gt;Disabled by default&lt;/strong&gt; for performance reasons. &lt;strong&gt;Enable this option if you work with untrusted user data!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nonce&lt;/code&gt; - if set, the provided value will be injected in every injected HTML element in the &lt;code&gt;nonce&lt;/code&gt; attribute. Useful when using CSP, see &lt;a href=&#34;https://webpack.js.org/guides/csp/&#34;&gt;https://webpack.js.org/guides/csp/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sideNavStyle&lt;/code&gt; - can be specified in various ways: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;summary-only&lt;/strong&gt;: displays a summary in the sidebar navigation item. (&lt;strong&gt;default&lt;/strong&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;path-only&lt;/strong&gt;: displays a path in the sidebar navigation item.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;id-only&lt;/strong&gt;: displays the operation id with a fallback to the path in the sidebar navigation item.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;showWebhookVerb&lt;/code&gt; - when set to &lt;code&gt;true&lt;/code&gt;, shows the HTTP request method for webhooks in operations and in the sidebar.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;&amp;lt;redoc&amp;gt;&lt;/code&gt; theme object&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;spacing&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;unit&lt;/code&gt;: 5 # main spacing unit used in autocomputed theme values later&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sectionHorizontal&lt;/code&gt;: 40 # Horizontal section padding. COMPUTED: spacing.unit * 8&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sectionVertical&lt;/code&gt;: 40 # Horizontal section padding. COMPUTED: spacing.unit * 8&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;breakpoints&lt;/code&gt; # breakpoints for switching three/two and mobile view layouts &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;small&lt;/code&gt;: &#39;50rem&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;medium&lt;/code&gt;: &#39;85rem&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;large&lt;/code&gt;: &#39;105rem&#39;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;colors&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;tonalOffset&lt;/code&gt;: 0.3 # default tonal offset used in computations&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;typography&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;fontSize&lt;/code&gt;: &#39;14px&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;lineHeight&lt;/code&gt;: &#39;1.5em&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fontWeightRegular&lt;/code&gt;: &#39;400&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fontWeightBold&lt;/code&gt;: &#39;600&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fontWeightLight&lt;/code&gt;: &#39;300&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fontFamily&lt;/code&gt;: &#39;Roboto, sans-serif&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;smoothing&lt;/code&gt;: &#39;antialiased&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;optimizeSpeed&lt;/code&gt;: true&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;headings&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;fontFamily&lt;/code&gt;: &#39;Montserrat, sans-serif&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;fontWeight&lt;/code&gt;: &#39;400&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lineHeight&lt;/code&gt;: &#39;1.6em&#39;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;code&lt;/code&gt; # inline code styling &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;fontSize&lt;/code&gt;: &#39;13px&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;fontFamily&lt;/code&gt;: &#39;Courier, monospace&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;lineHeight&lt;/code&gt;: # COMPUTED: typography.lineHeight&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;fontWeight&lt;/code&gt;: # COMPUTED: typography.fontWeightRegular&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;color&lt;/code&gt;: &#39;#e53935&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;rgba(38, 50, 56, 0.05)&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;wrap&lt;/code&gt;: false # whether to break word for inline blocks (otherwise they can overflow)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;links&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;color&lt;/code&gt;: # COMPUTED: colors.primary.main&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;visited&lt;/code&gt;: # COMPUTED: typography.links.color&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;hover&lt;/code&gt;: # COMPUTED: lighten(0.2 typography.links.color)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;textDecoration&lt;/code&gt;: &#39;auto&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;hoverTextDecoration&lt;/code&gt;: &#39;auto&#39;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sidebar&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: &#39;260px&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;#fafafa&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;textColor&lt;/code&gt;: &#39;#333333&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;activeTextColor&lt;/code&gt;: # COMPUTED: theme.sidebar.textColor (if set by user) or theme.colors.primary.main&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;groupItems&lt;/code&gt; # Group headings &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;activeBackgroundColor&lt;/code&gt;: # COMPUTED: theme.sidebar.backgroundColor&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;activeTextColor&lt;/code&gt;: # COMPUTED: theme.sidebar.activeTextColor&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;textTransform&lt;/code&gt;: &#39;uppercase&#39;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;level1Items&lt;/code&gt; # Level 1 items like tags or section 1st level items &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;activeBackgroundColor&lt;/code&gt;: # COMPUTED: theme.sidebar.backgroundColor&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;activeTextColor&lt;/code&gt;: # COMPUTED: theme.sidebar.activeTextColor&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;textTransform&lt;/code&gt;: &#39;none&#39;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;arrow&lt;/code&gt; # sidebar arrow &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;size&lt;/code&gt;: &#39;1.5em&#39;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;color&lt;/code&gt;: # COMPUTED: theme.sidebar.textColor&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;logo&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;maxHeight&lt;/code&gt;: # COMPUTED: sidebar.width&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;maxWidth&lt;/code&gt;: # COMPUTED: sidebar.width&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gutter&lt;/code&gt;: &#39;2px&#39; # logo image padding&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rightPanel&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;#263238&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: &#39;40%&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;textColor&lt;/code&gt;: &#39;#ffffff&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;servers&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;overlay&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;#fafafa&#39;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;textColor&lt;/code&gt;: &#39;#263238&#39;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;url&lt;/code&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;#fff&#39;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fab&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;backgroundColor&lt;/code&gt;: &#39;#263238&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;color&lt;/code&gt;: &#39;#ffffff&#39;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/Redocly/redoc/master/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>statelyai/xstate</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/statelyai/xstate</id>
    <link href="https://github.com/statelyai/xstate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;State machines and statecharts for the modern web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://xstate.js.org&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/101672561-06aa7480-3a24-11eb-89d1-787fa7112138.png&#34; alt=&#34;XState&#34; width=&#34;150&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;strong&gt;JavaScript state machines and statecharts&lt;/strong&gt;&lt;/sub&gt; &lt;br&gt; &lt;br&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/xstate&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/xstate.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://opencollective.com/xstate/tiers/backer/badge.svg?label=sponsors&amp;amp;color=brightgreen&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;JavaScript and TypeScript &lt;a href=&#34;https://en.wikipedia.org/wiki/Finite-state_machine&#34;&gt;finite state machines&lt;/a&gt; and &lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/0167642387900359/pdf&#34;&gt;statecharts&lt;/a&gt; for the modern web.&lt;/p&gt; &#xA;&lt;p&gt;üìñ &lt;a href=&#34;https://xstate.js.org/docs&#34;&gt;Read the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üíô &lt;a href=&#34;https://xstate-catalogue.com/&#34;&gt;Explore our catalogue of examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚û°Ô∏è &lt;a href=&#34;https://stately.ai/editor&#34;&gt;Create state machines with the Stately Editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üñ• &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=statelyai.stately-vscode&#34;&gt;Download our VS Code extension&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üìë Adheres to the &lt;a href=&#34;https://www.w3.org/TR/scxml/&#34;&gt;SCXML specification&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;üí¨ Chat on the &lt;a href=&#34;https://discord.gg/KCtSX7Cdjh&#34;&gt;Stately Discord Community&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü§ñ &lt;code&gt;xstate&lt;/code&gt; - Core finite state machine and statecharts library + interpreter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-fsm&#34;&gt;üî¨ &lt;code&gt;@xstate/fsm&lt;/code&gt;&lt;/a&gt; - Minimal finite state machine library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-graph&#34;&gt;üìâ &lt;code&gt;@xstate/graph&lt;/code&gt;&lt;/a&gt; - Graph traversal utilities for XState&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-react&#34;&gt;‚öõÔ∏è &lt;code&gt;@xstate/react&lt;/code&gt;&lt;/a&gt; - React hooks and utilities for using XState in React applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-vue&#34;&gt;üíö &lt;code&gt;@xstate/vue&lt;/code&gt;&lt;/a&gt; - Vue composition functions and utilities for using XState in Vue applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-svelte&#34;&gt;üé∑ &lt;code&gt;@xstate/svelte&lt;/code&gt;&lt;/a&gt; - Svelte utilities for using XState in Svelte applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-test&#34;&gt;‚úÖ &lt;code&gt;@xstate/test&lt;/code&gt;&lt;/a&gt; - Model-Based-Testing utilities (using XState) for testing any software&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/statelyai/xstate/tree/main/packages/xstate-inspect&#34;&gt;üîç &lt;code&gt;@xstate/inspect&lt;/code&gt;&lt;/a&gt; - Inspection utilities for XState&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Templates&lt;/h2&gt; &#xA;&lt;p&gt;Get started by forking one of these templates on CodeSandbox:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-example-template-m4ckv&#34;&gt;XState Template&lt;/a&gt; - no framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-typescript-template-s9kz8&#34;&gt;XState + TypeScript Template&lt;/a&gt; - no framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-react-template-3t2tg&#34;&gt;XState + React Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-react-typescript-template-wjdvn&#34;&gt;XState + React + TypeScript Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-vue-template-composition-api-1n23l&#34;&gt;XState + Vue Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-vue-3-template-vrkk9&#34;&gt;XState + Vue 3 Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codesandbox.io/s/xstate-svelte-template-jflv1&#34;&gt;XState + Svelte Template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Super quick start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install xstate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { createMachine, interpret } from &#39;xstate&#39;;&#xA;&#xA;// Stateless machine definition&#xA;// machine.transition(...) is a pure function used by the interpreter.&#xA;const toggleMachine = createMachine({&#xA;  id: &#39;toggle&#39;,&#xA;  initial: &#39;inactive&#39;,&#xA;  states: {&#xA;    inactive: { on: { TOGGLE: &#39;active&#39; } },&#xA;    active: { on: { TOGGLE: &#39;inactive&#39; } }&#xA;  }&#xA;});&#xA;&#xA;// Machine instance with internal state&#xA;const toggleService = interpret(toggleMachine)&#xA;  .onTransition((state) =&amp;gt; console.log(state.value))&#xA;  .start();&#xA;// =&amp;gt; &#39;inactive&#39;&#xA;&#xA;toggleService.send(&#39;TOGGLE&#39;);&#xA;// =&amp;gt; &#39;active&#39;&#xA;&#xA;toggleService.send(&#39;TOGGLE&#39;);&#xA;// =&amp;gt; &#39;inactive&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Promise example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stately.ai/viz?gist=bbcb4379b36edea0458f597e5eec2f91&#34;&gt;üìâ See the visualization on stately.ai/viz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;See the code&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { createMachine, interpret, assign } from &#39;xstate&#39;;&#xA;&#xA;const fetchMachine = createMachine({&#xA;  id: &#39;Dog API&#39;,&#xA;  initial: &#39;idle&#39;,&#xA;  context: {&#xA;    dog: null&#xA;  },&#xA;  states: {&#xA;    idle: {&#xA;      on: {&#xA;        FETCH: &#39;loading&#39;&#xA;      }&#xA;    },&#xA;    loading: {&#xA;      invoke: {&#xA;        id: &#39;fetchDog&#39;,&#xA;        src: (context, event) =&amp;gt;&#xA;          fetch(&#39;https://dog.ceo/api/breeds/image/random&#39;).then((data) =&amp;gt;&#xA;            data.json()&#xA;          ),&#xA;        onDone: {&#xA;          target: &#39;resolved&#39;,&#xA;          actions: assign({&#xA;            dog: (_, event) =&amp;gt; event.data&#xA;          })&#xA;        },&#xA;        onError: &#39;rejected&#39;&#xA;      },&#xA;      on: {&#xA;        CANCEL: &#39;idle&#39;&#xA;      }&#xA;    },&#xA;    resolved: {&#xA;      type: &#39;final&#39;&#xA;    },&#xA;    rejected: {&#xA;      on: {&#xA;        FETCH: &#39;loading&#39;&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const dogService = interpret(fetchMachine)&#xA;  .onTransition((state) =&amp;gt; console.log(state.value))&#xA;  .start();&#xA;&#xA;dogService.send(&#39;FETCH&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#visualizer&#34;&gt;Visualizer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#why&#34;&gt;Why?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#finite-state-machines&#34;&gt;Finite State Machines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#hierarchical-nested-state-machines&#34;&gt;Hierarchical (Nested) State Machines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#parallel-state-machines&#34;&gt;Parallel State Machines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/statelyai/xstate/main/#history-states&#34;&gt;History States&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Visualizer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://stately.ai/viz&#34;&gt;Visualize, simulate, inspect, and share your statecharts in XState Viz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://stately.ai/viz&#34; title=&#34;XState Viz&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/131729181-5db835fc-77e7-4740-b03f-46bd0093baa1.png&#34; alt=&#34;XState Viz&#34; width=&#34;400&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://stately.ai/viz&#34;&gt;stately.ai/viz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;Statecharts are a formalism for modeling stateful, reactive systems. This is useful for declaratively describing the &lt;em&gt;behavior&lt;/em&gt; of your application, from the individual components to the overall application logic.&lt;/p&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;http://slides.com/davidkhourshid/finite-state-machines&#34;&gt;üìΩ the slides&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=VU1NKX6Qkxc&#34;&gt;üé• video&lt;/a&gt;) or check out these resources for learning about the importance of finite state machines and statecharts in user interfaces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/0167642387900359/pdf&#34;&gt;Statecharts - A Visual Formalism for Complex Systems&lt;/a&gt; by David Harel&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://statecharts.github.io/&#34;&gt;The World of Statecharts&lt;/a&gt; by Erik Mogensen&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rauchg.com/2015/pure-ui&#34;&gt;Pure UI&lt;/a&gt; by Guillermo Rauch&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@asolove/pure-ui-control-ac8d1be97a8d&#34;&gt;Pure UI Control&lt;/a&gt; by Adam Solove&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spectrum.chat/statecharts&#34;&gt;Spectrum - Statecharts Community&lt;/a&gt; (For XState specific questions, please use the &lt;a href=&#34;https://github.com/statelyai/xstate/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Finite State Machines&lt;/h2&gt; &#xA;&lt;a href=&#34;https://stately.ai/viz/2ac5915f-789a-493f-86d3-a8ec079773f4&#34; title=&#34;Finite states&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/131727631-916d28a7-1a40-45ed-8636-c0c0fc1c3889.gif&#34; alt=&#34;Finite states&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;small&gt;Open in Stately Viz&lt;/small&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { createMachine } from &#39;xstate&#39;;&#xA;&#xA;const lightMachine = createMachine({&#xA;  id: &#39;light&#39;,&#xA;  initial: &#39;green&#39;,&#xA;  states: {&#xA;    green: {&#xA;      on: {&#xA;        TIMER: &#39;yellow&#39;&#xA;      }&#xA;    },&#xA;    yellow: {&#xA;      on: {&#xA;        TIMER: &#39;red&#39;&#xA;      }&#xA;    },&#xA;    red: {&#xA;      on: {&#xA;        TIMER: &#39;green&#39;&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const currentState = &#39;green&#39;;&#xA;&#xA;const nextState = lightMachine.transition(currentState, &#39;TIMER&#39;).value;&#xA;&#xA;// =&amp;gt; &#39;yellow&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hierarchical (Nested) State Machines&lt;/h2&gt; &#xA;&lt;a href=&#34;https://stately.ai/viz/d3aeda4f-7f8e-44df-bdf9-dd3cdafb3312&#34; title=&#34;Hierarchical states&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/131727794-86b63c76-5ee0-4d73-b84c-6992a1f0814e.gif&#34; alt=&#34;Hierarchical states&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;small&gt;Open in Stately Viz&lt;/small&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { createMachine } from &#39;xstate&#39;;&#xA;&#xA;const pedestrianStates = {&#xA;  initial: &#39;walk&#39;,&#xA;  states: {&#xA;    walk: {&#xA;      on: {&#xA;        PED_TIMER: &#39;wait&#39;&#xA;      }&#xA;    },&#xA;    wait: {&#xA;      on: {&#xA;        PED_TIMER: &#39;stop&#39;&#xA;      }&#xA;    },&#xA;    stop: {}&#xA;  }&#xA;};&#xA;&#xA;const lightMachine = createMachine({&#xA;  id: &#39;light&#39;,&#xA;  initial: &#39;green&#39;,&#xA;  states: {&#xA;    green: {&#xA;      on: {&#xA;        TIMER: &#39;yellow&#39;&#xA;      }&#xA;    },&#xA;    yellow: {&#xA;      on: {&#xA;        TIMER: &#39;red&#39;&#xA;      }&#xA;    },&#xA;    red: {&#xA;      on: {&#xA;        TIMER: &#39;green&#39;&#xA;      },&#xA;      ...pedestrianStates&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const currentState = &#39;yellow&#39;;&#xA;&#xA;const nextState = lightMachine.transition(currentState, &#39;TIMER&#39;).value;&#xA;// =&amp;gt; {&#xA;//   red: &#39;walk&#39;&#xA;// }&#xA;&#xA;lightMachine.transition(&#39;red.walk&#39;, &#39;PED_TIMER&#39;).value;&#xA;// =&amp;gt; {&#xA;//   red: &#39;wait&#39;&#xA;// }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Object notation for hierarchical states:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// ...&#xA;const waitState = lightMachine.transition({ red: &#39;walk&#39; }, &#39;PED_TIMER&#39;).value;&#xA;&#xA;// =&amp;gt; { red: &#39;wait&#39; }&#xA;&#xA;lightMachine.transition(waitState, &#39;PED_TIMER&#39;).value;&#xA;&#xA;// =&amp;gt; { red: &#39;stop&#39; }&#xA;&#xA;lightMachine.transition({ red: &#39;stop&#39; }, &#39;TIMER&#39;).value;&#xA;&#xA;// =&amp;gt; &#39;green&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parallel State Machines&lt;/h2&gt; &#xA;&lt;a href=&#34;https://stately.ai/viz/9eb9c189-254d-4c87-827a-fab0c2f71508&#34; title=&#34;Parallel states&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/131727915-23da4b4b-5e7e-46ea-9c56-5093e37e60e6.gif&#34; alt=&#34;Parallel states&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;small&gt;Open in Stately Viz&lt;/small&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const wordMachine = createMachine({&#xA;  id: &#39;word&#39;,&#xA;  type: &#39;parallel&#39;,&#xA;  states: {&#xA;    bold: {&#xA;      initial: &#39;off&#39;,&#xA;      states: {&#xA;        on: {&#xA;          on: { TOGGLE_BOLD: &#39;off&#39; }&#xA;        },&#xA;        off: {&#xA;          on: { TOGGLE_BOLD: &#39;on&#39; }&#xA;        }&#xA;      }&#xA;    },&#xA;    underline: {&#xA;      initial: &#39;off&#39;,&#xA;      states: {&#xA;        on: {&#xA;          on: { TOGGLE_UNDERLINE: &#39;off&#39; }&#xA;        },&#xA;        off: {&#xA;          on: { TOGGLE_UNDERLINE: &#39;on&#39; }&#xA;        }&#xA;      }&#xA;    },&#xA;    italics: {&#xA;      initial: &#39;off&#39;,&#xA;      states: {&#xA;        on: {&#xA;          on: { TOGGLE_ITALICS: &#39;off&#39; }&#xA;        },&#xA;        off: {&#xA;          on: { TOGGLE_ITALICS: &#39;on&#39; }&#xA;        }&#xA;      }&#xA;    },&#xA;    list: {&#xA;      initial: &#39;none&#39;,&#xA;      states: {&#xA;        none: {&#xA;          on: { BULLETS: &#39;bullets&#39;, NUMBERS: &#39;numbers&#39; }&#xA;        },&#xA;        bullets: {&#xA;          on: { NONE: &#39;none&#39;, NUMBERS: &#39;numbers&#39; }&#xA;        },&#xA;        numbers: {&#xA;          on: { BULLETS: &#39;bullets&#39;, NONE: &#39;none&#39; }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const boldState = wordMachine.transition(&#39;bold.off&#39;, &#39;TOGGLE_BOLD&#39;).value;&#xA;&#xA;// {&#xA;//   bold: &#39;on&#39;,&#xA;//   italics: &#39;off&#39;,&#xA;//   underline: &#39;off&#39;,&#xA;//   list: &#39;none&#39;&#xA;// }&#xA;&#xA;const nextState = wordMachine.transition(&#xA;  {&#xA;    bold: &#39;off&#39;,&#xA;    italics: &#39;off&#39;,&#xA;    underline: &#39;on&#39;,&#xA;    list: &#39;bullets&#39;&#xA;  },&#xA;  &#39;TOGGLE_ITALICS&#39;&#xA;).value;&#xA;&#xA;// {&#xA;//   bold: &#39;off&#39;,&#xA;//   italics: &#39;on&#39;,&#xA;//   underline: &#39;on&#39;,&#xA;//   list: &#39;bullets&#39;&#xA;// }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;History States&lt;/h2&gt; &#xA;&lt;a href=&#34;https://stately.ai/viz/33fd92e1-f9e6-49e6-bdeb-cef9e60195ec&#34; title=&#34;History states&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1093738/131728111-819cc824-9881-4ecf-948a-00c1162cd9e9.gif&#34; alt=&#34;History state&#34; width=&#34;400&#34;&gt; &lt;br&gt; &lt;small&gt;Open in Stately Viz&lt;/small&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const paymentMachine = createMachine({&#xA;  id: &#39;payment&#39;,&#xA;  initial: &#39;method&#39;,&#xA;  states: {&#xA;    method: {&#xA;      initial: &#39;cash&#39;,&#xA;      states: {&#xA;        cash: { on: { SWITCH_CHECK: &#39;check&#39; } },&#xA;        check: { on: { SWITCH_CASH: &#39;cash&#39; } },&#xA;        hist: { type: &#39;history&#39; }&#xA;      },&#xA;      on: { NEXT: &#39;review&#39; }&#xA;    },&#xA;    review: {&#xA;      on: { PREVIOUS: &#39;method.hist&#39; }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const checkState = paymentMachine.transition(&#39;method.cash&#39;, &#39;SWITCH_CHECK&#39;);&#xA;&#xA;// =&amp;gt; State {&#xA;//   value: { method: &#39;check&#39; },&#xA;//   history: State { ... }&#xA;// }&#xA;&#xA;const reviewState = paymentMachine.transition(checkState, &#39;NEXT&#39;);&#xA;&#xA;// =&amp;gt; State {&#xA;//   value: &#39;review&#39;,&#xA;//   history: State { ... }&#xA;// }&#xA;&#xA;const previousState = paymentMachine.transition(reviewState, &#39;PREVIOUS&#39;).value;&#xA;&#xA;// =&amp;gt; { method: &#39;check&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SemVer Policy&lt;/h2&gt; &#xA;&lt;p&gt;We understand the importance of the public contract and do not intend to release any breaking changes to the &lt;strong&gt;runtime&lt;/strong&gt; API in a minor or patch release. We consider this with any changes we make to the XState libraries and aim to minimize their effects on existing users.&lt;/p&gt; &#xA;&lt;h3&gt;Breaking changes&lt;/h3&gt; &#xA;&lt;p&gt;XState executes much of the user logic itself. Therefore, almost any change to its behavior might be considered a breaking change. We recognize this as a potential problem but believe that treating every change as a breaking change is not practical. We do our best to implement new features thoughtfully to enable our users to implement their logic in a better, safer way.&lt;/p&gt; &#xA;&lt;p&gt;Any change &lt;em&gt;could&lt;/em&gt; affect how existing XState machines behave if those machines are using particular configurations. We do not introduce behavior changes on a whim and aim to avoid making changes that affect most existing machines. But we reserve the right to make &lt;em&gt;some&lt;/em&gt; behavior changes in minor releases. Our best judgment of the situation will always dictate such changes. Please always read our release notes before deciding to upgrade.&lt;/p&gt; &#xA;&lt;h3&gt;TypeScript changes&lt;/h3&gt; &#xA;&lt;p&gt;We also reserve a similar right to adjust declared TypeScript definitions or drop support for older versions of TypeScript in a minor release. The TypeScript language itself evolves quickly and often introduces breaking changes in its minor releases. Our team is also continuously learning how to leverage TypeScript more effectively - and the types improve as a result.&lt;/p&gt; &#xA;&lt;p&gt;For these reasons, it is impractical for our team to be bound by decisions taken when an older version of TypeScript was its latest version or when we didn‚Äôt know how to declare our types in a better way. We won‚Äôt introduce declaration changes often - but we are more likely to do so than with runtime changes.&lt;/p&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;p&gt;Most of the packages in the XState family declare a peer dependency on XState itself. We‚Äôll be cautious about maintaining compatibility with already-released packages when releasing a new version of XState, &lt;strong&gt;but&lt;/strong&gt; each release of packages depending on XState will always adjust the declared peer dependency range to include the latest version of XState. For example, you should always be able to update &lt;code&gt;xstate&lt;/code&gt; without &lt;code&gt;@xstate/react&lt;/code&gt;. But when you update &lt;code&gt;@xstate/react&lt;/code&gt;, we highly recommend updating &lt;code&gt;xstate&lt;/code&gt; too.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prisma/prisma</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/prisma/prisma</id>
    <link href="https://github.com/prisma/prisma" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Next-generation ORM for Node.js &amp; TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB (Preview)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/h6UIYTu.png&#34; alt=&#34;Prisma&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Prisma&lt;/h1&gt; &#xA; &lt;a href=&#34;https://www.npmjs.com/package/prisma&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/prisma.svg?style=flat&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://slack.prisma.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20slack-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart&#34;&gt;Quickstart&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/&#34;&gt;Website&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/docs/&#34;&gt;Docs&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma-examples/&#34;&gt;Examples&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://www.prisma.io/blog&#34;&gt;Blog&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://slack.prisma.io/&#34;&gt;Slack&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://twitter.com/prisma&#34;&gt;Twitter&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/prisma/prisma1&#34;&gt;Prisma 1&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is Prisma?&lt;/h2&gt; &#xA;&lt;p&gt;Prisma is a &lt;strong&gt;next-generation ORM&lt;/strong&gt; that consists of these tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client&#34;&gt;&lt;strong&gt;Prisma Client&lt;/strong&gt;&lt;/a&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-migrate&#34;&gt;&lt;strong&gt;Prisma Migrate&lt;/strong&gt;&lt;/a&gt;: Declarative data modeling &amp;amp; migration system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prisma/studio&#34;&gt;&lt;strong&gt;Prisma Studio&lt;/strong&gt;&lt;/a&gt;: GUI to view and edit data in your database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Prisma Client can be used in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application (including serverless applications and microservices). This can be a &lt;a href=&#34;https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/rest&#34;&gt;REST API&lt;/a&gt;, a &lt;a href=&#34;https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/graphql&#34;&gt;GraphQL API&lt;/a&gt; a gRPC API, or anything else that needs a database.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Are you looking for Prisma 1? The Prisma 1 repository has been renamed to &lt;a href=&#34;https://github.com/prisma/prisma1&#34;&gt;&lt;code&gt;prisma/prisma1&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The fastest way to get started with Prisma is by following the &lt;a href=&#34;https://www.prisma.io/docs/getting-started/quickstart-typescript&#34;&gt;&lt;strong&gt;Quickstart (5 min)&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Quickstart is based on a preconfigured SQLite database. You can also get started with your own database (PostgreSQL and MySQL) by following one of these guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project-typescript-postgres&#34;&gt;Add Prisma to an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch-typescript-postgres&#34;&gt;Set up a new project with Prisma from scratch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How does Prisma work&lt;/h2&gt; &#xA;&lt;p&gt;This section provides a high-level overview of how Prisma works and its most important technical components. For a more thorough introduction, visit the &lt;a href=&#34;https://www.prisma.io/docs/&#34;&gt;Prisma documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;The Prisma schema&lt;/h3&gt; &#xA;&lt;p&gt;Every project that uses a tool from the Prisma toolkit starts with a &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-schema&#34;&gt;Prisma schema file&lt;/a&gt;. The Prisma schema allows developers to define their &lt;em&gt;application models&lt;/em&gt; in an intuitive data modeling language. It also contains the connection to a database and defines a &lt;em&gt;generator&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-prisma&#34;&gt;// Data source&#xA;datasource db {&#xA;  provider = &#34;postgresql&#34;&#xA;  url      = env(&#34;DATABASE_URL&#34;)&#xA;}&#xA;&#xA;// Generator&#xA;generator client {&#xA;  provider = &#34;prisma-client-js&#34;&#xA;}&#xA;&#xA;// Data model&#xA;model Post {&#xA;  id        Int     @id @default(autoincrement())&#xA;  title     String&#xA;  content   String?&#xA;  published Boolean @default(false)&#xA;  author    User?   @relation(fields:  [authorId], references: [id])&#xA;  authorId  Int?&#xA;}&#xA;&#xA;model User {&#xA;  id    Int     @id @default(autoincrement())&#xA;  email String  @unique&#xA;  name  String?&#xA;  posts Post[]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this schema, you configure three things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data source&lt;/strong&gt;: Specifies your database connection (via an environment variable)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generator&lt;/strong&gt;: Indicates that you want to generate Prisma Client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data model&lt;/strong&gt;: Defines your application models&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;The Prisma data model&lt;/h3&gt; &#xA;&lt;p&gt;On this page, the focus is on the data model. You can learn more about &lt;a href=&#34;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/data-sources&#34;&gt;Data sources&lt;/a&gt; and &lt;a href=&#34;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/generators&#34;&gt;Generators&lt;/a&gt; on the respective docs pages.&lt;/p&gt; &#xA;&lt;h4&gt;Functions of Prisma models&lt;/h4&gt; &#xA;&lt;p&gt;The data model is a collection of &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#defining-models&#34;&gt;models&lt;/a&gt;. A model has two major functions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Represent a table in the underlying database&lt;/li&gt; &#xA; &lt;li&gt;Provide the foundation for the queries in the Prisma Client API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Getting a data model&lt;/h4&gt; &#xA;&lt;p&gt;There are two major workflows for &#34;getting&#34; a data model into your Prisma schema:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate the data model from &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/introspection&#34;&gt;introspecting&lt;/a&gt; a database&lt;/li&gt; &#xA; &lt;li&gt;Manually writing the data model and mapping it to the database with &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-migrate&#34;&gt;Prisma Migrate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once the data model is defined, you can &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client&#34;&gt;generate Prisma Client&lt;/a&gt; which will expose CRUD and more queries for the defined models. If you&#39;re using TypeScript, you&#39;ll get full type-safety for all queries (even when only retrieving the subsets of a model&#39;s fields).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Accessing your database with Prisma Client&lt;/h3&gt; &#xA;&lt;h4&gt;Generating Prisma Client&lt;/h4&gt; &#xA;&lt;p&gt;The first step when using Prisma Client is installing its npm package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install @prisma/client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the installation of this package invokes the &lt;code&gt;prisma generate&lt;/code&gt; command which reads your Prisma schema and &lt;em&gt;generates&lt;/em&gt; the Prisma Client code. The code will be located in &lt;code&gt;node_modules/.prisma/client&lt;/code&gt;, which is exported by &lt;code&gt;node_modules/@prisma/client/index.d.ts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After you change your data model, you&#39;ll need to manually re-generate Prisma Client to ensure the code inside &lt;code&gt;node_modules/.prisma/client&lt;/code&gt; get updated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;prisma generate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the documentation for more information about &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client&#34;&gt;&#34;generating the Prisma client&#34;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Using Prisma Client to send queries to your database&lt;/h4&gt; &#xA;&lt;p&gt;Once the Prisma Client is generated, you can import it in your code and send queries to your database. This is what the setup code looks like.&lt;/p&gt; &#xA;&lt;h5&gt;Import and instantiate Prisma Client&lt;/h5&gt; &#xA;&lt;p&gt;You can import and instantiate Prisma Client as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { PrismaClient } from &#39;@prisma/client&#39;&#xA;&#xA;const prisma = new PrismaClient()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { PrismaClient } = require(&#39;@prisma/client&#39;)&#xA;&#xA;const prisma = new PrismaClient()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can start sending queries via the generated Prisma Client API, here are few sample queries. Note that all Prisma Client queries return &lt;em&gt;plain old JavaScript objects&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about the available operations in the &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client&#34;&gt;Prisma Client docs&lt;/a&gt; or watch this &lt;a href=&#34;https://www.youtube.com/watch?v=LggrE5kJ75I&amp;amp;list=PLn2e1F9Rfr6k9PnR_figWOcSHgc_erDr5&amp;amp;index=4&#34;&gt;demo video&lt;/a&gt; (2 min).&lt;/p&gt; &#xA;&lt;h5&gt;Retrieve all &lt;code&gt;User&lt;/code&gt; records from the database&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run inside `async` function&#xA;const allUsers = await prisma.user.findMany()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Include the &lt;code&gt;posts&lt;/code&gt; relation on each returned &lt;code&gt;User&lt;/code&gt; object&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run inside `async` function&#xA;const allUsers = await prisma.user.findMany({&#xA;  include: { posts: true },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Filter all &lt;code&gt;Post&lt;/code&gt; records that contain &lt;code&gt;&#34;prisma&#34;&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run inside `async` function&#xA;const filteredPosts = await prisma.post.findMany({&#xA;  where: {&#xA;    OR: [{ title: { contains: &#39;prisma&#39; } }, { content: { contains: &#39;prisma&#39; } }],&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Create a new &lt;code&gt;User&lt;/code&gt; and a new &lt;code&gt;Post&lt;/code&gt; record in the same query&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run inside `async` function&#xA;const user = await prisma.user.create({&#xA;  data: {&#xA;    name: &#39;Alice&#39;,&#xA;    email: &#39;alice@prisma.io&#39;,&#xA;    posts: {&#xA;      create: { title: &#39;Join us for Prisma Day 2021&#39; },&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Update an existing &lt;code&gt;Post&lt;/code&gt; record&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// Run inside `async` function&#xA;const post = await prisma.post.update({&#xA;  where: { id: 42 },&#xA;  data: { published: true },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage with TypeScript&lt;/h4&gt; &#xA;&lt;p&gt;Note that when using TypeScript, the result of this query will be &lt;em&gt;statically typed&lt;/em&gt; so that you can&#39;t accidentally access a property that doesn&#39;t exist (and any typos are caught at compile-time). Learn more about leveraging Prisma Client&#39;s generated types on the &lt;a href=&#34;https://www.prisma.io/docs/concepts/components/prisma-client/advanced-usage-of-generated-types&#34;&gt;Advanced usage of generated types&lt;/a&gt; page in the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Prisma has a large and supportive &lt;a href=&#34;https://www.prisma.io/community&#34;&gt;community&lt;/a&gt; of enthusiastic application developers. You can join us on &lt;a href=&#34;https://slack.prisma.io&#34;&gt;Slack&lt;/a&gt; and here on &lt;a href=&#34;https://github.com/prisma/prisma/discussions&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you have a security issue to report, please contact us at &lt;a href=&#34;mailto:security@prisma.io?subject=%5BGitHub%5D%20Prisma%202%20Security%20Report%20&#34;&gt;security@prisma.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;h3&gt;Ask a question about Prisma&lt;/h3&gt; &#xA;&lt;p&gt;You can ask questions and initiate &lt;a href=&#34;https://github.com/prisma/prisma/discussions/&#34;&gt;discussions&lt;/a&gt; about Prisma-related topics in the &lt;code&gt;prisma&lt;/code&gt; repository on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://github.com/prisma/prisma/discussions/new&#34;&gt;&lt;strong&gt;Ask a question&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Create a bug report for Prisma&lt;/h3&gt; &#xA;&lt;p&gt;If you see an error message or run into an issue, please make sure to create a bug report! You can find &lt;a href=&#34;https://www.prisma.io/docs/support/creating-bug-reports&#34;&gt;best practices for creating bug reports&lt;/a&gt; (like including additional debugging output) in the docs.&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://github.com/prisma/prisma/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;&lt;strong&gt;Create bug report&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Submit a feature request&lt;/h3&gt; &#xA;&lt;p&gt;If Prisma currently doesn&#39;t have a certain feature, be sure to check out the &lt;a href=&#34;https://www.prisma.io/docs/more/roadmap&#34;&gt;roadmap&lt;/a&gt; to see if this is already planned for the future.&lt;/p&gt; &#xA;&lt;p&gt;If the feature on the roadmap is linked to a GitHub issue, please make sure to leave a +1 on the issue and ideally a comment with your thoughts about the feature!&lt;/p&gt; &#xA;&lt;p&gt;üëâ &lt;a href=&#34;https://github.com/prisma/prisma/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;&lt;strong&gt;Submit feature request&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://github.com/prisma/prisma/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct for contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prisma Tests Status:&lt;br&gt; &lt;a href=&#34;https://buildkite.com/prisma/prisma2-test&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/590e1981074b70961362481ad8319a831b44a38c5d468d6408.svg?branch=main&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ecosystem Tests Status:&lt;br&gt; &lt;a href=&#34;https://github.com/prisma/ecosystem-tests/actions&#34;&gt;&lt;img src=&#34;https://github.com/prisma/ecosystem-tests/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/lowcode-engine</title>
    <updated>2022-06-02T01:58:03Z</updated>
    <id>tag:github.com,2022-06-02:/alibaba/lowcode-engine</id>
    <link href="https://github.com/alibaba/lowcode-engine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An enterprise-class low-code technology stack with scale-out design / ‰∏ÄÂ•óÈù¢ÂêëÊâ©Â±ïËÆæËÆ°ÁöÑ‰ºÅ‰∏öÁ∫ß‰Ωé‰ª£Á†ÅÊäÄÊúØ‰ΩìÁ≥ª&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://lowcode-engine.cn&#34;&gt; &lt;img width=&#34;200&#34; src=&#34;https://img.alicdn.com/imgextra/i3/O1CN01i8K9cD1d0HU7TjDtv_!!6000000003673-2-tps-500-591.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;LowCodeEngine&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;An enterprise-class low-code technology stack with scale-out design&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://npmjs.org/package/@alilc/lowcode-engine&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@alilc/lowcode-engine.svg?style=flat-square&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/@alilc/lowcode-engine&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@alilc/lowcode-engine.svg?style=flat-square&#34; alt=&#34;NPM downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/lowcode-engine/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discussions-on%20github-blue?style=flat-square&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions-cool/issues-helper&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/using-issues--helper-orange?style=flat-square&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/lowcode-engine/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://flat.badgen.net/github/label-issues/alibaba/lowcode-engine/help%20wanted/open&#34; alt=&#34;Issues need help&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://lowcode-engine.cn&#34;&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i2/O1CN01UhoS7C1sNNhySvfWi_!!6000000005754-2-tps-2878-1588.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/lowcode-engine/main/packages/engine/README-zh_CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üåà An extension-oriented kernel engine extracted from an enterprise-level low-code platform, pursuing the design concept of the smallest kernel and the strongest ecology&lt;/li&gt; &#xA; &lt;li&gt;üì¶ Out-of-the-box high-quality ecological elements, including material systems, setters, plugins, etc.&lt;/li&gt; &#xA; &lt;li&gt;‚öôÔ∏è A complete tool chain, supporting the full-link R&amp;amp;D cycle of ecological elements such as material systems, setters, and plug-ins&lt;/li&gt; &#xA; &lt;li&gt;üîå Powerful expansion capability, has supported nearly 100 various vertical low-code platforms&lt;/li&gt; &#xA; &lt;li&gt;üõ° Developed with TypeScript, providing complete type definition files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üéØ Compatible Environments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern browsers (Chrome &amp;gt;= 80, Edge &amp;gt;= 80, last 2 safari versions, last 2 firefox versions)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö Engine Protocol&lt;/h2&gt; &#xA;&lt;p&gt;The engine fully implements the &#34;LowCodeEngine Basic Construction Protocol Specification&#34; and &#34;LowCodeEngine Material Protocol Specification&#34;. The protocol stack is a key part of whether materials in the low-code field can be circulated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.alicdn.com/imgextra/i3/O1CN01IisBcy1dNBIg16QFM_!!6000000003723-2-tps-1916-1070.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üå∞ Usage example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @alilc/lowcode-engine --save-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIPS: Only cdn import is supported, npm package is used to provide code hinting capabilities such as typings&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { init, skeleton } from &#39;@alilc/lowcode-engine&#39;;&#xA;&#xA;skeleton.add({&#xA;  area: &#39;topArea&#39;,&#xA;  type: &#39;Widget&#39;,&#xA;  name: &#39;logo&#39;,&#xA;  content: YourFantaticLogo,&#xA;  contentProps: {&#xA;    logo:&#xA;      &#39;https://img.alicdn.com/tfs/TB1_SocGkT2gK0jSZFkXXcIQFXa-66-66.png&#39;,&#xA;    href: &#39;/&#39;,&#xA;  },&#xA;  props: {&#xA;    align: &#39;left&#39;,&#xA;    width: 100,&#xA;  },&#xA;});&#xA;&#xA;init(document.getElementById(&#39;lce&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Engineering configuration:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;externals&#34;: {&#xA;    &#34;@alilc/lowcode-engine&#34;: &#34;var window.AliLowCodeEngine&#34;,&#xA;    &#34;@alilc/lowcode-engine-ext&#34;: &#34;var window.AliLowCodeEngineExt&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cdn optional method:&lt;/h3&gt; &#xA;&lt;h4&gt;Method 1: alifd cdn&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;https://alifd.alicdn.com/npm/@alilc/lowcode-engine@1.0.0/dist/js/engine-core.js&#xA;&#xA;https://alifd.alicdn.com/npm/@alilc/lowcode-react-simulator-renderer@1.0.0/dist/js/react-simulator-renderer.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Method 2: unpkg&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;https://unpkg.com/@alilc/lowcode-engine@1.0.0/dist/js/engine-core.js&#xA;&#xA;https://unpkg.com/@alilc/lowcode-react-simulator-renderer@1.0.0/dist/js/react-simulator-renderer.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Method 3: jsdelivr&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;https://cdn.jsdelivr.net/npm/@alilc/lowcode-engine@1.0.0/dist/js/engine-core.js&#xA;&#xA;https://cdn.jsdelivr.net/npm/@alilc/lowcode-react-simulator-renderer@1.0.0/dist/js/react-simulator-renderer.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Method 4: Use your own cdn&lt;/h4&gt; &#xA;&lt;p&gt;Pass the files under packages/engine/dist and packages/(react|rax)-simulator-renderer/dist in the source code to your cdn provider&lt;/p&gt; &#xA;&lt;h2&gt;üîó Related Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lowcode-engine.cn/&#34;&gt;Official website home page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lowcode-engine.cn/demo&#34;&gt;Demo Play Now&lt;/a&gt; | &lt;a href=&#34;https://github.com/alibaba/lowcode-demo&#34;&gt;Engine Demo Repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/lowcode-materials&#34;&gt;Official Materials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/lowcode-engine-ext&#34;&gt;official setter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/lowcode-plugins&#34;&gt;Official plugin (plugin)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/lce/doc/ulvlkz&#34;&gt;Ecological elements (materials, setters, plugins) toolchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lowcode-engine.cn/docV2&#34;&gt;User Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lowcode-engine.cn/docV2/vlmeme&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª Local debugging&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:alibaba/lowcode-engine.git&#xA;$ cd lowcode-engine&#xA;$ npm install&#xA;$ npm run setup&#xA;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üì¢ npm access speed is slow, Alibaba employees can use tnpm, other students recommend using cnpm or specifying a mirror registry.&lt;/p&gt; &#xA; &lt;p&gt;üì¢ node version limited to 14&lt;/p&gt; &#xA; &lt;p&gt;üì¢ Windows environment must use &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;, other terminals are not guaranteed to work normally&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After lowcode-engine is started, several umd files are provided, which can be debugged in combination with the &lt;a href=&#34;https://github.com/alibaba/lowcode-demo&#34;&gt;lowcode-demo&lt;/a&gt; project. Refer to the file proxy rules &lt;a href=&#34;https://www.yuque.com/lce/doc/glz0fx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ü§ù Participation&lt;/h2&gt; &#xA;&lt;p&gt;Please read first:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/lce/doc/glz0fx&#34;&gt;How to configure the engine debugging environment? &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/lce/doc/contributing&#34;&gt;About the R&amp;amp;D collaboration process of the engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/lce/doc/gxwqg6&#34;&gt;Engineering Configuration of Engine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Strongly recommend reading &lt;a href=&#34;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way&#34;&gt;&#34;The Wisdom of Asking Questions&#34;&lt;/a&gt;, [&#34;How to Ask Questions to the Open Source Community&#34;](https: //github.com/seajs/seajs/issues/545) and &lt;a href=&#34;http://www.chiark.greenend.org.uk/%7Esgtatham/bugs-cn.html&#34;&gt;How to Report Bugs Effectively&lt;/a&gt;, &lt;a href=&#34;https://zhuanlan.zhihu.com/p/25795393&#34;&gt; &#34;How to Submit Unanswerable Questions to Open Source Projects&#34;&lt;/a&gt;, better questions are easier to get help. (This paragraph refers to &lt;a href=&#34;https://github.com/ant-design/ant-design&#34;&gt;antd&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;About Pull Request:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;set the target branch to &lt;strong&gt;develop&lt;/strong&gt; other than &lt;strong&gt;main&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>