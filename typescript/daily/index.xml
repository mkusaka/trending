<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-05T01:42:30Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adrianhajdin/figma_clone</title>
    <updated>2024-02-05T01:42:30Z</updated>
    <id>tag:github.com,2024-02-05:/adrianhajdin/figma_clone</id>
    <link href="https://github.com/adrianhajdin/figma_clone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Figma Clone using Next.js, Fabric.js and Liveblocks in TypeScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://youtu.be/oKIThIihv60&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/JavaScript-Mastery-Pro/figma-ts/assets/151519281/e03dc22d-0f45-464b-9dc3-f01f07906bee&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-TypeScript-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=typescript&amp;amp;color=3178C6&#34; alt=&#34;typescript&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Next_JS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=nextdotjs&amp;amp;color=000000&#34; alt=&#34;nextdotjs&#34;&gt; &#xA;  &lt;img src=&#34;https://img.shields.io/badge/-Tailwind_CSS-black?style=for-the-badge&amp;amp;logoColor=white&amp;amp;logo=tailwindcss&amp;amp;color=06B6D4&#34; alt=&#34;tailwindcss&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;h3 align=&#34;center&#34;&gt;Real Time Figma Clone&lt;/h3&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;   Build this project step by step with our detailed tutorial on &#xA;  &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt; YouTube. Join the JSM family! &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📋 &lt;a name=&#34;table&#34;&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🤖 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⚙️ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#tech-stack&#34;&gt;Tech Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔋 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🤸 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕸️ &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#snippets&#34;&gt;Snippets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://raw.githubusercontent.com/adrianhajdin/figma_clone/main/#more&#34;&gt;More&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🚨 Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the code corresponding to an in-depth tutorial available on our YouTube channel, &lt;a href=&#34;https://www.youtube.com/@javascriptmastery/videos&#34; target=&#34;_blank&#34;&gt;&lt;b&gt;JavaScript Mastery&lt;/b&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer visual learning, this is the perfect resource for you. Follow our tutorial to learn how to build projects like these step-by-step in a beginner-friendly manner!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/oKIThIihv60&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/1736fca5-a031-4854-8c09-bc110e3bc16d&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;introduction&#34;&gt;🤖 Introduction&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;A minimalistic Figma clone to show how to add real-world features like live collaboration with cursor chat, comments, reactions, and drawing designs (shapes, image upload) on the canvas using fabric.js.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re getting started and need assistance or face any bugs, join our active Discord community with over 27k+ members. It&#39;s a place where people help each other out.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.com/invite/n6EdbFJ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/618f4872-1e10-42da-8213-1d69e486d02e&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;tech-stack&#34;&gt;⚙️ Tech Stack&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js&lt;/li&gt; &#xA; &lt;li&gt;TypeScript&lt;/li&gt; &#xA; &lt;li&gt;Liveblocks&lt;/li&gt; &#xA; &lt;li&gt;Fabric.js&lt;/li&gt; &#xA; &lt;li&gt;Shadcn&lt;/li&gt; &#xA; &lt;li&gt;Tailwind CSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;features&#34;&gt;🔋 Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Multi Cursors, Cursor Chat, and Reactions&lt;/strong&gt;: Allows multiple users to collaborate simultaneously by showing individual cursors, enabling real-time chat, and reactions for interactive communication.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Active Users&lt;/strong&gt;: Displays a list of currently active users in the collaborative environment, providing visibility into who is currently engaged.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Comment Bubbles&lt;/strong&gt;: Enables users to attach comments to specific elements on the canvas, fostering communication and feedback on design components.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Creating Different Shapes&lt;/strong&gt;: Provides tools for users to generate a variety of shapes on the canvas, allowing for diverse design elements&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Uploading Images&lt;/strong&gt;: Import images onto the canvas, expanding the range of visual content in the design&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Customization&lt;/strong&gt;: Allows users to adjust the properties of design elements, offering flexibility in customizing and fine-tuning visual components&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Freeform Drawing&lt;/strong&gt;: Enables users to draw freely on the canvas, promoting artistic expression and creative design.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Undo/Redo&lt;/strong&gt;: Provides the ability to reverse (undo) or restore (redo) previous actions, offering flexibility in design decision-making&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Keyboard Actions&lt;/strong&gt;: Allows users to utilize keyboard shortcuts for various actions, including copying, pasting, deleting, and triggering shortcuts for features like opening cursor chat, reactions, and more, enhancing efficiency and accessibility.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;History&lt;/strong&gt;: Review the chronological history of actions and changes made on the canvas, aiding in project management and version control.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;strong&gt;Deleting, Scaling, Moving, Clearing, Exporting Canvas&lt;/strong&gt;: Offers a range of functions for managing design elements, including deletion, scaling, moving, clearing the canvas, and exporting the final design for external use.&lt;/p&gt; &#xA;&lt;p&gt;and many more, including code architecture, advanced react hooks, and reusability&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;quick-start&#34;&gt;🤸 Quick Start&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps to set up the project locally on your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have the following installed on your machine:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; (Node Package Manager)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cloning the Repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/JavaScript-Mastery-Pro/figma-ts.git&#xA;cd figma-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install the project dependencies using npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Set Up Environment Variables&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a new file named &lt;code&gt;.env.local&lt;/code&gt; in the root of your project and add the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;NEXT_PUBLIC_LIVEBLOCKS_PUBLIC_KEY=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace the placeholder values with your actual Liveblocks credentials. You can obtain these credentials by signing up on the &lt;a href=&#34;https://liveblocks.io&#34;&gt;Liveblocks website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Running the Project&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser to view the project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;snippets&#34;&gt;🕸️ Snippets&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Styles&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;tailwind.config.ts&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;import type { Config } from &#34;tailwindcss&#34;;&#xA;&#xA;const config = {&#xA;  darkMode: [&#34;class&#34;],&#xA;  content: [&#xA;    &#34;./pages/**/*.{ts,tsx}&#34;,&#xA;    &#34;./components/**/*.{ts,tsx}&#34;,&#xA;    &#34;./app/**/*.{ts,tsx}&#34;,&#xA;    &#34;./src/**/*.{ts,tsx}&#34;,&#xA;  ],&#xA;  prefix: &#34;&#34;,&#xA;  theme: {&#xA;    container: {&#xA;      center: true,&#xA;      padding: &#34;2rem&#34;,&#xA;      screens: {&#xA;        &#34;2xl&#34;: &#34;1400px&#34;,&#xA;      },&#xA;    },&#xA;    extend: {&#xA;      colors: {&#xA;        primary: {&#xA;          black: &#34;#14181F&#34;,&#xA;          green: &#34;#56FFA6&#34;,&#xA;          grey: {&#xA;            100: &#34;#2B303B&#34;,&#xA;            200: &#34;#202731&#34;,&#xA;            300: &#34;#C4D3ED&#34;,&#xA;          },&#xA;        },&#xA;      },&#xA;      keyframes: {&#xA;        &#34;accordion-down&#34;: {&#xA;          from: { height: &#34;0&#34; },&#xA;          to: { height: &#34;var(--radix-accordion-content-height)&#34; },&#xA;        },&#xA;        &#34;accordion-up&#34;: {&#xA;          from: { height: &#34;var(--radix-accordion-content-height)&#34; },&#xA;          to: { height: &#34;0&#34; },&#xA;        },&#xA;      },&#xA;      animation: {&#xA;        &#34;accordion-down&#34;: &#34;accordion-down 0.2s ease-out&#34;,&#xA;        &#34;accordion-up&#34;: &#34;accordion-up 0.2s ease-out&#34;,&#xA;      },&#xA;    },&#xA;  },&#xA;  plugins: [require(&#34;tailwindcss-animate&#34;)],&#xA;} satisfies Config;&#xA;&#xA;export default config;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;app/globals.css&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@tailwind base;&#xA;@tailwind components;&#xA;@tailwind utilities;&#xA;&#xA;@import &#34;@liveblocks/react-comments/styles.css&#34;;&#xA;&#xA;* {&#xA;  font-family:&#xA;    work sans,&#xA;    sans-serif;&#xA;}&#xA;&#xA;@layer utilities {&#xA;  .no-ring {&#xA;    @apply outline-none ring-0 ring-offset-0 focus:ring-0 focus:ring-offset-0 focus-visible:ring-offset-0 !important;&#xA;  }&#xA;&#xA;  .input-ring {&#xA;    @apply h-8 rounded-none border-none  bg-transparent outline-none ring-offset-0 focus:ring-1  focus:ring-primary-green focus:ring-offset-0 focus-visible:ring-offset-0 !important;&#xA;  }&#xA;&#xA;  .right-menu-content {&#xA;    @apply flex w-80 flex-col gap-y-1 border-none bg-primary-black py-4 text-white !important;&#xA;  }&#xA;&#xA;  .right-menu-item {&#xA;    @apply flex justify-between px-3 py-2 hover:bg-primary-grey-200 !important;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Overlay Comments&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;NewThread&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#34;use client&#34;;&#xA;&#xA;import {&#xA;  FormEvent,&#xA;  ReactNode,&#xA;  useCallback,&#xA;  useEffect,&#xA;  useRef,&#xA;  useState,&#xA;} from &#34;react&#34;;&#xA;import { Slot } from &#34;@radix-ui/react-slot&#34;;&#xA;import * as Portal from &#34;@radix-ui/react-portal&#34;;&#xA;import { ComposerSubmitComment } from &#34;@liveblocks/react-comments/primitives&#34;;&#xA;&#xA;import { useCreateThread } from &#34;@/liveblocks.config&#34;;&#xA;import { useMaxZIndex } from &#34;@/lib/useMaxZIndex&#34;;&#xA;&#xA;import PinnedComposer from &#34;./PinnedComposer&#34;;&#xA;import NewThreadCursor from &#34;./NewThreadCursor&#34;;&#xA;&#xA;type ComposerCoords = null | { x: number; y: number };&#xA;&#xA;type Props = {&#xA;  children: ReactNode;&#xA;};&#xA;&#xA;export const NewThread = ({ children }: Props) =&amp;gt; {&#xA;  // set state to track if we&#39;re placing a new comment or not&#xA;  const [creatingCommentState, setCreatingCommentState] = useState&amp;lt;&#xA;    &#34;placing&#34; | &#34;placed&#34; | &#34;complete&#34;&#xA;  &amp;gt;(&#34;complete&#34;);&#xA;&#xA;  /**&#xA;   * We&#39;re using the useCreateThread hook to create a new thread.&#xA;   *&#xA;   * useCreateThread: https://liveblocks.io/docs/api-reference/liveblocks-react#useCreateThread&#xA;   */&#xA;  const createThread = useCreateThread();&#xA;&#xA;  // get the max z-index of a thread&#xA;  const maxZIndex = useMaxZIndex();&#xA;&#xA;  // set state to track the coordinates of the composer (liveblocks comment editor)&#xA;  const [composerCoords, setComposerCoords] = useState&amp;lt;ComposerCoords&amp;gt;(null);&#xA;&#xA;  // set state to track the last pointer event&#xA;  const lastPointerEvent = useRef&amp;lt;PointerEvent&amp;gt;();&#xA;&#xA;  // set state to track if user is allowed to use the composer&#xA;  const [allowUseComposer, setAllowUseComposer] = useState(false);&#xA;  const allowComposerRef = useRef(allowUseComposer);&#xA;  allowComposerRef.current = allowUseComposer;&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    // If composer is already placed, don&#39;t do anything&#xA;    if (creatingCommentState === &#34;complete&#34;) {&#xA;      return;&#xA;    }&#xA;&#xA;    // Place a composer on the screen&#xA;    const newComment = (e: MouseEvent) =&amp;gt; {&#xA;      e.preventDefault();&#xA;&#xA;      // If already placed, click outside to close composer&#xA;      if (creatingCommentState === &#34;placed&#34;) {&#xA;        // check if the click event is on/inside the composer&#xA;        const isClickOnComposer = ((e as any)._savedComposedPath = e&#xA;          .composedPath()&#xA;          .some((el: any) =&amp;gt; {&#xA;            return el.classList?.contains(&#34;lb-composer-editor-actions&#34;);&#xA;          }));&#xA;&#xA;        // if click is inisde/on composer, don&#39;t do anything&#xA;        if (isClickOnComposer) {&#xA;          return;&#xA;        }&#xA;&#xA;        // if click is outside composer, close composer&#xA;        if (!isClickOnComposer) {&#xA;          setCreatingCommentState(&#34;complete&#34;);&#xA;          return;&#xA;        }&#xA;      }&#xA;&#xA;      // First click sets composer down&#xA;      setCreatingCommentState(&#34;placed&#34;);&#xA;      setComposerCoords({&#xA;        x: e.clientX,&#xA;        y: e.clientY,&#xA;      });&#xA;    };&#xA;&#xA;    document.documentElement.addEventListener(&#34;click&#34;, newComment);&#xA;&#xA;    return () =&amp;gt; {&#xA;      document.documentElement.removeEventListener(&#34;click&#34;, newComment);&#xA;    };&#xA;  }, [creatingCommentState]);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    // If dragging composer, update position&#xA;    const handlePointerMove = (e: PointerEvent) =&amp;gt; {&#xA;      // Prevents issue with composedPath getting removed&#xA;      (e as any)._savedComposedPath = e.composedPath();&#xA;      lastPointerEvent.current = e;&#xA;    };&#xA;&#xA;    document.documentElement.addEventListener(&#34;pointermove&#34;, handlePointerMove);&#xA;&#xA;    return () =&amp;gt; {&#xA;      document.documentElement.removeEventListener(&#xA;        &#34;pointermove&#34;,&#xA;        handlePointerMove&#xA;      );&#xA;    };&#xA;  }, []);&#xA;&#xA;  // Set pointer event from last click on body for use later&#xA;  useEffect(() =&amp;gt; {&#xA;    if (creatingCommentState !== &#34;placing&#34;) {&#xA;      return;&#xA;    }&#xA;&#xA;    const handlePointerDown = (e: PointerEvent) =&amp;gt; {&#xA;      // if composer is already placed, don&#39;t do anything&#xA;      if (allowComposerRef.current) {&#xA;        return;&#xA;      }&#xA;&#xA;      // Prevents issue with composedPath getting removed&#xA;      (e as any)._savedComposedPath = e.composedPath();&#xA;      lastPointerEvent.current = e;&#xA;      setAllowUseComposer(true);&#xA;    };&#xA;&#xA;    // Right click to cancel placing&#xA;    const handleContextMenu = (e: Event) =&amp;gt; {&#xA;      if (creatingCommentState === &#34;placing&#34;) {&#xA;        e.preventDefault();&#xA;        setCreatingCommentState(&#34;complete&#34;);&#xA;      }&#xA;    };&#xA;&#xA;    document.documentElement.addEventListener(&#34;pointerdown&#34;, handlePointerDown);&#xA;    document.documentElement.addEventListener(&#34;contextmenu&#34;, handleContextMenu);&#xA;&#xA;    return () =&amp;gt; {&#xA;      document.documentElement.removeEventListener(&#xA;        &#34;pointerdown&#34;,&#xA;        handlePointerDown&#xA;      );&#xA;      document.documentElement.removeEventListener(&#xA;        &#34;contextmenu&#34;,&#xA;        handleContextMenu&#xA;      );&#xA;    };&#xA;  }, [creatingCommentState]);&#xA;&#xA;  // On composer submit, create thread and reset state&#xA;  const handleComposerSubmit = useCallback(&#xA;    ({ body }: ComposerSubmitComment, event: FormEvent&amp;lt;HTMLFormElement&amp;gt;) =&amp;gt; {&#xA;      event.preventDefault();&#xA;      event.stopPropagation();&#xA;&#xA;      // Get your canvas element&#xA;      const overlayPanel = document.querySelector(&#34;#canvas&#34;);&#xA;&#xA;      // if there&#39;s no composer coords or last pointer event, meaning the user hasn&#39;t clicked yet, don&#39;t do anything&#xA;      if (!composerCoords || !lastPointerEvent.current || !overlayPanel) {&#xA;        return;&#xA;      }&#xA;&#xA;      // Set coords relative to the top left of your canvas&#xA;      const { top, left } = overlayPanel.getBoundingClientRect();&#xA;      const x = composerCoords.x - left;&#xA;      const y = composerCoords.y - top;&#xA;&#xA;      // create a new thread with the composer coords and cursor selectors&#xA;      createThread({&#xA;        body,&#xA;        metadata: {&#xA;          x,&#xA;          y,&#xA;          resolved: false,&#xA;          zIndex: maxZIndex + 1,&#xA;        },&#xA;      });&#xA;&#xA;      setComposerCoords(null);&#xA;      setCreatingCommentState(&#34;complete&#34;);&#xA;      setAllowUseComposer(false);&#xA;    },&#xA;    [createThread, composerCoords, maxZIndex]&#xA;  );&#xA;&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      {/**&#xA;       * Slot is used to wrap the children of the NewThread component&#xA;       * to allow us to add a click event listener to the children&#xA;       *&#xA;       * Slot: https://www.radix-ui.com/primitives/docs/utilities/slot&#xA;       *&#xA;       * Disclaimer: We don&#39;t have to download this package specifically,&#xA;       * it&#39;s already included when we install Shadcn&#xA;       */}&#xA;      &amp;lt;Slot&#xA;        onClick={() =&amp;gt;&#xA;          setCreatingCommentState(&#xA;            creatingCommentState !== &#34;complete&#34; ? &#34;complete&#34; : &#34;placing&#34;&#xA;          )&#xA;        }&#xA;        style={{ opacity: creatingCommentState !== &#34;complete&#34; ? 0.7 : 1 }}&#xA;      &amp;gt;&#xA;        {children}&#xA;      &amp;lt;/Slot&amp;gt;&#xA;&#xA;      {/* if composer coords exist and we&#39;re placing a comment, render the composer */}&#xA;      {composerCoords &amp;amp;&amp;amp; creatingCommentState === &#34;placed&#34; ? (&#xA;        /**&#xA;         * Portal.Root is used to render the composer outside of the NewThread component to avoid z-index issuess&#xA;         *&#xA;         * Portal.Root: https://www.radix-ui.com/primitives/docs/utilities/portal&#xA;         */&#xA;        &amp;lt;Portal.Root&#xA;          className=&#39;absolute left-0 top-0&#39;&#xA;          style={{&#xA;            pointerEvents: allowUseComposer ? &#34;initial&#34; : &#34;none&#34;,&#xA;            transform: `translate(${composerCoords.x}px, ${composerCoords.y}px)`,&#xA;          }}&#xA;          data-hide-cursors&#xA;        &amp;gt;&#xA;          &amp;lt;PinnedComposer onComposerSubmit={handleComposerSubmit} /&amp;gt;&#xA;        &amp;lt;/Portal.Root&amp;gt;&#xA;      ) : null}&#xA;&#xA;      {/* Show the customizing cursor when placing a comment. The one with comment shape */}&#xA;      &amp;lt;NewThreadCursor display={creatingCommentState === &#34;placing&#34;} /&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;PinnedComposer&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#34;use client&#34;;&#xA;&#xA;import Image from &#34;next/image&#34;;&#xA;import { Composer, ComposerProps } from &#34;@liveblocks/react-comments&#34;;&#xA;&#xA;type Props = {&#xA;  onComposerSubmit: ComposerProps[&#34;onComposerSubmit&#34;];&#xA;};&#xA;&#xA;const PinnedComposer = ({ onComposerSubmit, ...props }: Props) =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;div className=&#34;absolute flex gap-4&#34; {...props}&amp;gt;&#xA;      &amp;lt;div className=&#34;select-none relative w-9 h-9 shadow rounded-tl-md rounded-tr-full rounded-br-full rounded-bl-full bg-white flex justify-center items-center&#34;&amp;gt;&#xA;        &amp;lt;Image&#xA;          src={`https://liveblocks.io/avatars/avatar-${Math.floor(Math.random() * 30)}.png`}&#xA;          alt=&#34;someone&#34;&#xA;          width={28}&#xA;          height={28}&#xA;          className=&#34;rounded-full&#34;&#xA;        /&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;      &amp;lt;div className=&#34;shadow bg-white rounded-lg flex flex-col text-sm min-w-96 overflow-hidden p-2&#34;&amp;gt;&#xA;        {/**&#xA;         * We&#39;re using the Composer component to create a new comment.&#xA;         * Liveblocks provides a Composer component that allows to&#xA;         * create/edit/delete comments.&#xA;         *&#xA;         * Composer: https://liveblocks.io/docs/api-reference/liveblocks-react-comments#Composer&#xA;         */}&#xA;        &amp;lt;Composer&#xA;          onComposerSubmit={onComposerSubmit}&#xA;          autoFocus={true}&#xA;          onKeyUp={(e) =&amp;gt; {&#xA;            e.stopPropagation()&#xA;          }}&#xA;        /&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;export default PinnedComposer;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;NewThreadCursor&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#34;use client&#34;;&#xA;&#xA;import { useEffect, useState } from &#34;react&#34;;&#xA;import * as Portal from &#34;@radix-ui/react-portal&#34;;&#xA;&#xA;const DEFAULT_CURSOR_POSITION = -10000;&#xA;&#xA;// display a custom cursor when placing a new thread&#xA;const NewThreadCursor = ({ display }: { display: boolean }) =&amp;gt; {&#xA;  const [coords, setCoords] = useState({&#xA;    x: DEFAULT_CURSOR_POSITION,&#xA;    y: DEFAULT_CURSOR_POSITION,&#xA;  });&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    const updatePosition = (e: MouseEvent) =&amp;gt; {&#xA;      // get canvas element&#xA;      const canvas = document.getElementById(&#34;canvas&#34;);&#xA;&#xA;      if (canvas) {&#xA;        /**&#xA;         * getBoundingClientRect returns the size of an element and its position relative to the viewport&#xA;         *&#xA;         * getBoundingClientRect: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect&#xA;         */&#xA;        const canvasRect = canvas.getBoundingClientRect();&#xA;&#xA;        // check if the mouse is outside the canvas&#xA;        // if so, hide the custom comment cursor&#xA;        if (&#xA;          e.clientX &amp;lt; canvasRect.left ||&#xA;          e.clientX &amp;gt; canvasRect.right ||&#xA;          e.clientY &amp;lt; canvasRect.top ||&#xA;          e.clientY &amp;gt; canvasRect.bottom&#xA;        ) {&#xA;          setCoords({&#xA;            x: DEFAULT_CURSOR_POSITION,&#xA;            y: DEFAULT_CURSOR_POSITION,&#xA;          });&#xA;          return;&#xA;        }&#xA;      }&#xA;&#xA;      // set the coordinates of the cursor&#xA;      setCoords({&#xA;        x: e.clientX,&#xA;        y: e.clientY,&#xA;      });&#xA;    };&#xA;&#xA;    document.addEventListener(&#34;mousemove&#34;, updatePosition, false);&#xA;    document.addEventListener(&#34;mouseenter&#34;, updatePosition, false);&#xA;&#xA;    return () =&amp;gt; {&#xA;      document.removeEventListener(&#34;mousemove&#34;, updatePosition);&#xA;      document.removeEventListener(&#34;mouseenter&#34;, updatePosition);&#xA;    };&#xA;  }, []);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    if (display) {&#xA;      document.documentElement.classList.add(&#34;hide-cursor&#34;);&#xA;    } else {&#xA;      document.documentElement.classList.remove(&#34;hide-cursor&#34;);&#xA;    }&#xA;  }, [display]);&#xA;&#xA;  if (!display) {&#xA;    return null;&#xA;  }&#xA;&#xA;  return (&#xA;    // Portal.Root is used to render a component outside of its parent component&#xA;    &amp;lt;Portal.Root&amp;gt;&#xA;      &amp;lt;div&#xA;        className=&#34;pointer-events-none fixed left-0 top-0 h-9 w-9 cursor-grab select-none rounded-bl-full rounded-br-full rounded-tl-md rounded-tr-full bg-white shadow-2xl&#34;&#xA;        style={{&#xA;          transform: `translate(${coords.x}px, ${coords.y}px)`,&#xA;        }}&#xA;      /&amp;gt;&#xA;    &amp;lt;/Portal.Root&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;export default NewThreadCursor;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;CommentsOverlay&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#34;use client&#34;;&#xA;&#xA;import { useCallback, useRef } from &#34;react&#34;;&#xA;import { ThreadData } from &#34;@liveblocks/client&#34;;&#xA;&#xA;import { ThreadMetadata, useEditThreadMetadata, useThreads, useUser } from &#34;@/liveblocks.config&#34;;&#xA;import { useMaxZIndex } from &#34;@/lib/useMaxZIndex&#34;;&#xA;&#xA;import { PinnedThread } from &#34;./PinnedThread&#34;;&#xA;&#xA;type OverlayThreadProps = {&#xA;  thread: ThreadData&amp;lt;ThreadMetadata&amp;gt;;&#xA;  maxZIndex: number;&#xA;};&#xA;&#xA;export const CommentsOverlay = () =&amp;gt; {&#xA;  /**&#xA;   * We&#39;re using the useThreads hook to get the list of threads&#xA;   * in the room.&#xA;   *&#xA;   * useThreads: https://liveblocks.io/docs/api-reference/liveblocks-react#useThreads&#xA;   */&#xA;  const { threads } = useThreads();&#xA;&#xA;  // get the max z-index of a thread&#xA;  const maxZIndex = useMaxZIndex();&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      {threads&#xA;        .filter((thread) =&amp;gt; !thread.metadata.resolved)&#xA;        .map((thread) =&amp;gt; (&#xA;          &amp;lt;OverlayThread key={thread.id} thread={thread} maxZIndex={maxZIndex} /&amp;gt;&#xA;        ))}&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;const OverlayThread = ({ thread, maxZIndex }: OverlayThreadProps) =&amp;gt; {&#xA;  /**&#xA;   * We&#39;re using the useEditThreadMetadata hook to edit the metadata&#xA;   * of a thread.&#xA;   *&#xA;   * useEditThreadMetadata: https://liveblocks.io/docs/api-reference/liveblocks-react#useEditThreadMetadata&#xA;   */&#xA;  const editThreadMetadata = useEditThreadMetadata();&#xA;&#xA;  /**&#xA;   * We&#39;re using the useUser hook to get the user of the thread.&#xA;   *&#xA;   * useUser: https://liveblocks.io/docs/api-reference/liveblocks-react#useUser&#xA;   */&#xA;  const { isLoading } = useUser(thread.comments[0].userId);&#xA;&#xA;  // We&#39;re using a ref to get the thread element to position it&#xA;  const threadRef = useRef&amp;lt;HTMLDivElement&amp;gt;(null);&#xA;&#xA;  // If other thread(s) above, increase z-index on last element updated&#xA;  const handleIncreaseZIndex = useCallback(() =&amp;gt; {&#xA;    if (maxZIndex === thread.metadata.zIndex) {&#xA;      return;&#xA;    }&#xA;&#xA;    // Update the z-index of the thread in the room&#xA;    editThreadMetadata({&#xA;      threadId: thread.id,&#xA;      metadata: {&#xA;        zIndex: maxZIndex + 1,&#xA;      },&#xA;    });&#xA;  }, [thread, editThreadMetadata, maxZIndex]);&#xA;&#xA;  if (isLoading) {&#xA;    return null;&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;div&#xA;      ref={threadRef}&#xA;      id={`thread-${thread.id}`}&#xA;      className=&#34;absolute left-0 top-0 flex gap-5&#34;&#xA;      style={{&#xA;        transform: `translate(${thread.metadata.x}px, ${thread.metadata.y}px)`,&#xA;      }}&#xA;    &amp;gt;&#xA;      {/* render the thread */}&#xA;      &amp;lt;PinnedThread thread={thread} onFocus={handleIncreaseZIndex} /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;PinnedThread&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;&#34;use client&#34;;&#xA;&#xA;import Image from &#34;next/image&#34;;&#xA;import { useMemo, useState } from &#34;react&#34;;&#xA;import { ThreadData } from &#34;@liveblocks/client&#34;;&#xA;import { Thread } from &#34;@liveblocks/react-comments&#34;;&#xA;&#xA;import { ThreadMetadata } from &#34;@/liveblocks.config&#34;;&#xA;&#xA;type Props = {&#xA;  thread: ThreadData&amp;lt;ThreadMetadata&amp;gt;;&#xA;  onFocus: (threadId: string) =&amp;gt; void;&#xA;};&#xA;&#xA;export const PinnedThread = ({ thread, onFocus, ...props }: Props) =&amp;gt; {&#xA;  // Open pinned threads that have just been created&#xA;  const startMinimized = useMemo(&#xA;    () =&amp;gt; Number(new Date()) - Number(new Date(thread.createdAt)) &amp;gt; 100,&#xA;    [thread]&#xA;  );&#xA;&#xA;  const [minimized, setMinimized] = useState(startMinimized);&#xA;&#xA;  /**&#xA;   * memoize the result of this function so that it doesn&#39;t change on every render but only when the thread changes&#xA;   * Memo is used to optimize performance and avoid unnecessary re-renders.&#xA;   *&#xA;   * useMemo: https://react.dev/reference/react/useMemo&#xA;   */&#xA;&#xA;  const memoizedContent = useMemo(&#xA;    () =&amp;gt; (&#xA;      &amp;lt;div&#xA;        className=&#39;absolute flex cursor-pointer gap-4&#39;&#xA;        {...props}&#xA;        onClick={(e: any) =&amp;gt; {&#xA;          onFocus(thread.id);&#xA;&#xA;          // check if click is on/in the composer&#xA;          if (&#xA;            e.target &amp;amp;&amp;amp;&#xA;            e.target.classList.contains(&#34;lb-icon&#34;) &amp;amp;&amp;amp;&#xA;            e.target.classList.contains(&#34;lb-button-icon&#34;)&#xA;          ) {&#xA;            return;&#xA;          }&#xA;&#xA;          setMinimized(!minimized);&#xA;        }}&#xA;      &amp;gt;&#xA;        &amp;lt;div&#xA;          className=&#39;relative flex h-9 w-9 select-none items-center justify-center rounded-bl-full rounded-br-full rounded-tl-md rounded-tr-full bg-white shadow&#39;&#xA;          data-draggable={true}&#xA;        &amp;gt;&#xA;          &amp;lt;Image&#xA;            src={`https://liveblocks.io/avatars/avatar-${Math.floor(Math.random() * 30)}.png`}&#xA;            alt=&#39;Dummy Name&#39;&#xA;            width={28}&#xA;            height={28}&#xA;            draggable={false}&#xA;            className=&#39;rounded-full&#39;&#xA;          /&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;        {!minimized ? (&#xA;          &amp;lt;div className=&#39;flex min-w-60 flex-col overflow-hidden rounded-lg bg-white text-sm shadow&#39;&amp;gt;&#xA;            &amp;lt;Thread&#xA;              thread={thread}&#xA;              indentCommentContent={false}&#xA;              onKeyUp={(e) =&amp;gt; {&#xA;                e.stopPropagation();&#xA;              }}&#xA;            /&amp;gt;&#xA;          &amp;lt;/div&amp;gt;&#xA;        ) : null}&#xA;      &amp;lt;/div&amp;gt;&#xA;    ),&#xA;    [thread.comments.length, minimized]&#xA;  );&#xA;&#xA;  return &amp;lt;&amp;gt;{memoizedContent}&amp;lt;/&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;links&#34;&gt;🔗 Links&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/17tRs0sEiIsCeTYEXhWEdHMrTshuz2oYf/view?usp=sharing&#34;&gt;Assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1bha-40vlGMIPW9bTRUgHD_SEmT9ZA38S/view?usp=sharing&#34;&gt;Components&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;more&#34;&gt;🚀 More&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advance your skills with Next.js 14 Pro Course&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoyed creating this project? Dive deeper into our PRO courses for a richer learning adventure. They&#39;re packed with detailed explanations, cool features, and exercises to boost your skills. Give it a go!&lt;/p&gt; &#xA;&lt;a href=&#34;https://jsmastery.pro/next14&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/557837ce-f612-4530-ab24-189e75133c71&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Accelerate your professional journey with the Expert Training program&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;And if you&#39;re hungry for more than just a course and want to understand how we learn and tackle tech challenges, hop into our personalized masterclass. We cover best practices, different web skills, and offer mentorship to boost your confidence. Let&#39;s learn and grow together!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.jsmastery.pro/masterclass&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/sujatagunale/EasyRead/assets/151519281/fed352ad-f27b-400d-9b8f-c7fe628acb84&#34; alt=&#34;Project Banner&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>youniaogu/MangaReader</title>
    <updated>2024-02-05T01:42:30Z</updated>
    <id>tag:github.com,2024-02-05:/youniaogu/MangaReader</id>
    <link href="https://github.com/youniaogu/MangaReader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个漫画 APP📱，基于 react-native 构建，兼容 Android、Ios 平台&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MangaReader&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-android%20%7C%20ios-brightgreen&#34; alt=&#34;platform&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/youniaogu/MangaReader/master&#34; alt=&#34;last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/youniaogu/MangaReader&#34; alt=&#34;license&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-raw/youniaogu/MangaReader&#34; alt=&#34;issues&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个漫画 APP📱，基于 react-native 构建，兼容 Android、Ios，尽可能适配平板&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;插件式设计、近十个可用&lt;a href=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/#%E6%8F%92%E4%BB%B6&#34;&gt;插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;收藏、搜索、批量更新、下载、导出&lt;/li&gt; &#xA; &lt;li&gt;翻页/条漫/平叛双页模式、无限翻页、保存图片&lt;/li&gt; &#xA; &lt;li&gt;数据全本地离线化、支持备份和恢复&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/demo.gif&#34; alt=&#34;demo&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;插件&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;&lt;a href=&#34;https://www.mhgui.com/&#34;&gt;漫画柜&lt;/a&gt;（大陆版，访问 403，已失效）&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://m.manhuagui.com/&#34;&gt;漫画柜 mobile&lt;/a&gt;（需要代理）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.copymanga.org/&#34;&gt;拷贝漫画&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://www.manhuadb.com/&#34;&gt;漫画 db&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://18comic.vip&#34;&gt;禁漫天堂&lt;/a&gt;（需要代理，日本 ip 无法访问，疑似开启了 cloudflare，如果无法使用，请参考&lt;a href=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/#cloudflare-%E6%A0%A1%E9%AA%8C&#34;&gt;cf 校验&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://m.dmzj.com/&#34;&gt;动漫之家 mobile&lt;/a&gt;（现在需要登录才能看了，使用前请在 webview 里登录）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;&lt;a href=&#34;https://www.maofly.com/&#34;&gt;漫画猫&lt;/a&gt;（网站挂了，已失效）&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://klmanga.net/&#34;&gt;kl 漫画&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://nhentai.net/&#34;&gt;nhentai&lt;/a&gt;（需要代理和&lt;a href=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/#cloudflare-%E6%A0%A1%E9%AA%8C&#34;&gt;cf 校验&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://manhuabika.com/&#34;&gt;哔咔漫画&lt;/a&gt;（需要代理和&lt;a href=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/#%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%E7%9B%B8%E5%85%B3&#34;&gt;登录&lt;/a&gt;）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://mangabz.com/&#34;&gt;漫画 bz&lt;/a&gt;（需要代理）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://cn.baozimh.com/&#34;&gt;包子漫画&lt;/a&gt;（不需要代理但海外 ip 会走 cloudflare，需要在 webview 里通过校验）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用指南&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/usage1.jpeg&#34; alt=&#34;usage1&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/usage2.jpeg&#34; alt=&#34;usage2&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/usage3.jpeg&#34; alt=&#34;usage3&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/usage4.jpeg&#34; alt=&#34;usage4&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/usage5.jpeg&#34; alt=&#34;usage5&#34; width=&#34;250&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p&gt;Android：&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.youniaogu.mangareader&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img width=&#34;120&#34; alt=&#34;下载应用，请到 Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/zh-cn_badge_web_generic.png&#34;&gt;&lt;/a&gt; / &lt;a href=&#34;https://github.com/youniaogu/MangaReader/releases&#34;&gt;下载 apk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ios：&lt;a href=&#34;https://github.com/youniaogu/MangaReader/releases&#34;&gt;未签名 ipa&lt;/a&gt;（可能会有 webp 格式的图片，需要 ios14 及以上，否则图片会&lt;a href=&#34;https://github.com/youniaogu/MangaReader/issues/92&#34;&gt;什么都不显示&lt;/a&gt;）&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://faq.altstore.io/&#34;&gt;使用 Altstore 安装 ipa 文件&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;cloudflare 校验&lt;/h2&gt; &#xA;&lt;p&gt;下面以 nhentai 为例：&lt;/p&gt; &#xA;&lt;p&gt;nhentai 开启了 cloudflare 的 ddos 保护，在使用此插件前，请遵循下面流程在 webview 里通过 cloudflare 校验并获得 cookies&lt;/p&gt; &#xA;&lt;p&gt;webview 存在 bug，需要安卓版本 9 及以上&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/cloudflare_step1.jpeg&#34; alt=&#34;cloudflare_step1&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/cloudflare_step2.jpeg&#34; alt=&#34;cloudflare_step2&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/cloudflare_step3.jpeg&#34; alt=&#34;cloudflare_step3&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/cloudflare_step4.jpeg&#34; alt=&#34;cloudflare_step4&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/cloudflare_step5.jpeg&#34; alt=&#34;cloudflare_step5&#34; width=&#34;250&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;登录认证相关&lt;/h2&gt; &#xA;&lt;p&gt;下面以哔咔漫画为例：&lt;/p&gt; &#xA;&lt;p&gt;哔咔漫画需要登录后才能访问，所以请按下面图示流程在 webview 里登录并获取 token&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/pica_step1.jpeg&#34; alt=&#34;pica_step1&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/pica_step2.jpeg&#34; alt=&#34;pica_step2&#34; width=&#34;250&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/pica_step3.jpeg&#34; alt=&#34;pica_step3&#34; width=&#34;250&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;关于 App&lt;/h2&gt; &#xA;&lt;p&gt;很喜欢看漫画，能在一个 APP 里看完所有的漫画，是我一直以来的想法&lt;/p&gt; &#xA;&lt;p&gt;这个项目是在工作之余开发的，时间有限，如果遇到问题，欢迎 Issues 和 PR&lt;/p&gt; &#xA;&lt;p&gt;最后如果你觉得本项目对你有所帮助，可以帮忙点个 Star 或者请我喝杯咖啡 ☕️，非常感谢！&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/alipay.png&#34; alt=&#34;alipay&#34; width=&#34;120&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/youniaogu/MangaReader/master/static/wechatpay.jpg&#34; alt=&#34;wechatpay&#34; width=&#34;120&#34;&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>adamcohenhillel/ADeus</title>
    <updated>2024-02-05T01:42:30Z</updated>
    <id>tag:github.com,2024-02-05:/adamcohenhillel/ADeus</id>
    <link href="https://github.com/adamcohenhillel/ADeus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-Source AI wearable device and software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADeus: Open-Source AI Wearable Device&lt;/h1&gt; &#xA;&lt;p&gt;In the upcoming world of AI devices like &lt;a href=&#34;https://mytab.ai/&#34;&gt;Tab&lt;/a&gt;, &lt;a href=&#34;https://hu.ma.ne/aipin&#34;&gt;Pin&lt;/a&gt;, &lt;a href=&#34;https://www.rewind.ai/pendant&#34;&gt;Rewind&lt;/a&gt;, that are with us all the time, &lt;strong&gt;literally&lt;/strong&gt; listening to everything we say, and know much about us as our closest friends - it is crucial to be able to own this setup, to own our data, to have this completely open source, managed by the user itself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is Adeus, the Open Source AI Wearble device -&lt;/strong&gt; and in this repo, you will be guided on how to set up your own! From buying the hardware (~$100, and will be cheaper once we finish the Raspberry PI Zero version) to setting up the backend, the software, and start using your wearable!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#prerequisite-110&#34;&gt;Prerequisite&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup-supabase&#34;&gt;Supabase&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup-app-web&#34;&gt;Web / Mobile App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup-hardware---coral-ai-device&#34;&gt;Hardware (Coral AI)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup-hardware---rasberry-pi-zero-w&#34;&gt;Hardware (Rasberry Pi Zero)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#setup-run-with-ollama&#34;&gt;Run with Ollama&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#areas-to-contribute&#34;&gt;Areas to Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/#cta-for-the-community&#34;&gt;CTA for the Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/adeus_01.jpeg&#34; alt=&#34;ADeus v0.1&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;p.s. any contribution would be amazing, whether you know how to code, and want to jump straight in to the codebase, a hardware person who can help out, or just looking to support this project financially (can literally be $10) - please reach out to me on X/Twitter &lt;a href=&#34;https://twitter.com/adamcohenhillel&#34;&gt;@adamcohenhillel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Introduction:&lt;/h3&gt; &#xA;&lt;p&gt;Adeus consists of 3 parts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;A mobile / web app:&lt;/strong&gt; an interface that lets the user to interact with their assistant and data via chat.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hardware device (Currently Coral AI, but soon a Rasberry-Pi Zero W worth $15):&lt;/strong&gt; this will be the wearable that will record everything, and send it to the backend to be processed&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Supabase :&lt;/strong&gt; Our backend, and datavase, where we will process and store data, and interact with LLMs. Supabase is an open source Firebase alternative, a &#34;backend-as-a-service&#34; - which allows you to setup a Postgres database, Authentication, Edge Functions, Vector embeddings, and more - for free (at first) and at extreme ease!&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[!!] But more importantly - &lt;strong&gt;it is open source, and you can choose to deploy and manage your own Supabase instance&lt;/strong&gt; - which us crucial for our mission: A truly open-source, personal AI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will look something like: &lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/adeus_diagram.png&#34; alt=&#34;ADeus diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: I&#39;m working on an easy setup.sh file that will do everything here more or less automatically, but it is still in the making&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;A&#39;ight, let&#39;s get this working for you!&lt;/p&gt; &#xA;&lt;h4&gt;Prerequisite: ($110)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coral.ai/products/dev-board-micro/&#34;&gt;Dev Board Micro&lt;/a&gt; ($80)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coral.ai/products/wireless-add-on/&#34;&gt;Wireless/Bluetooth Add-on&lt;/a&gt; ($20)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coral.ai/products/dev-board-micro-case/&#34;&gt;A case&lt;/a&gt; (Optional, 10$)&lt;/li&gt; &#xA; &lt;li&gt;Either an OpenAI key, or a Ollama server running somewhere you can reach via internet&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: We are working on a version of this working with Raspberry PI Zero W, which will cost ~$20, stay tuned&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First - cloning the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/adamcohenhillel/ADeus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Setup: Supabase&lt;/h4&gt; &#xA;&lt;p&gt;We will use Supabase as our database (with vector search, pgvector), authentication, and cloud functions for processing information.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://supabase.co&#34;&gt;supabase.co&lt;/a&gt;, create your account if you don&#39;t have one already&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &#34;New Project&#34;, give it a name, and make sure to note the database password you are given&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_new_prpject.png&#34; width=&#34;100&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once the project is created, you should get the &lt;code&gt;anon public&lt;/code&gt; API Key, and the &lt;code&gt;Project URL&lt;/code&gt;, copy them both, as we will need them in a bit.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_creds.png&#34; width=&#34;200&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, go to the authentication tab on the right navbar (&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_auth.png&#34; width=&#34;100&#34;&gt;), note that it can take a few moments for Supabase to finish setup the project&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There, you will see the &#34;user management&#34; UI. Click &#34;Add User&#34; -&amp;gt; &#34;Add new user&#34;, fill an email and password, and make sure to check the &#34;auto-confirm&#34; option.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_new_user.png&#34; width=&#34;200&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From there, go to the SQL Editor tab (&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_sql_editor.png&#34; width=&#34;100&#34;&gt;) and paste the &lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/supabase/schema.sql&#34;&gt;schema.sql&lt;/a&gt; from this repo, and execute. This will enable all the relevant extensions (pgvector) and create the two tables:&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/supabase_tables.png&#34; width=&#34;150&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;By now, you should have 4 things: &lt;code&gt;email&lt;/code&gt; &amp;amp; &lt;code&gt;password&lt;/code&gt; for your supabase user, and the &lt;code&gt;Supabase URL&lt;/code&gt; and &lt;code&gt;API Anon Key&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If so, go to your terminal, and cd to the supabase folder: &lt;code&gt;cd ./supabase&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Supabase and set up the CLI. You should follow thier &lt;a href=&#34;https://supabase.com/docs/guides/cli/getting-started?platform=macos#installing-the-supabase-cli&#34;&gt;guide here&lt;/a&gt;, but in short:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;run &lt;code&gt;brew install supabase/tap/supabase&lt;/code&gt; to install the CLI (or &lt;a href=&#34;https://supabase.com/docs/guides/cli/getting-started&#34;&gt;check other options&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Install &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt; on your computer (we won&#39;t use it, we just need docker dameon to run in the background for deploying supabase functions)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now when we have the CLI, we need to login with oour Supabase account, running &lt;code&gt;supabase login&lt;/code&gt; - this should pop up a browser window, which should prompt you through the auth&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And link our Supabase CLI to a specific project, our newly created one, by running &lt;code&gt;supabase link --project-ref &amp;lt;your-project-id&amp;gt;&lt;/code&gt; (you can check what the project id is from the Supabase web UI, or by running &lt;code&gt;supabase projects list&lt;/code&gt;, and it will be under &#34;reference id&#34;) - you can skip (enter) the database password, it&#39;s not needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now let&#39;s deploy our functions! (&lt;a href=&#34;https://supabase.com/docs/guides/functions/deploy&#34;&gt;see guide for more details&lt;/a&gt;) &lt;code&gt;supabase functions deploy --no-verify-jwt&lt;/code&gt; (see &lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/3&#34;&gt;issue re:security&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lasly - if you&#39;re planning to first use OpenAI as your Foundation model provider, then you&#39;d need to also run the following command, to make sure the functions have everything they need to run properly: &lt;code&gt;supabase secrets set OPENAI_API_KEY=&amp;lt;your-openai-api-key&amp;gt;&lt;/code&gt; (Ollama setup guide is coming out soon)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If everything worked, we should now be able to start chatting with our personal AI via the app - so let&#39;s set that up!&lt;/p&gt; &#xA;&lt;h4&gt;Setup: App (Web)&lt;/h4&gt; &#xA;&lt;p&gt;Now that you have a Supabase instance that is up and running, you can technically start chatting with your assistant, it just won&#39;t have any personal data it.&lt;/p&gt; &#xA;&lt;p&gt;To try it out, you can either use the deployed version of the web app here: &lt;a href=&#34;https://adeusai.com&#34;&gt;adeusai.com&lt;/a&gt; - which will ask you to connect to your own Supabase instance (it is only a frontend client).&lt;/p&gt; &#xA;&lt;p&gt;Or you can deploy the app yourself somewhere - the easiest is Vercel, or locally:&lt;/p&gt; &#xA;&lt;p&gt;from the root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;npm install and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have an app instance up and running, head to its address &lt;code&gt;your-app-address.com/&lt;/code&gt;, and you should see the screen:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/login_screenshot.png&#34; width=&#34;150&#34;&gt; &#xA;&lt;p&gt;Enter the four required details, which you should&#39;ve obtained in the Supabase setup: &lt;code&gt;Supabase URL&lt;/code&gt;, &lt;code&gt;Supabase Anon API Key&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And you should be able to start chatting!&lt;/p&gt; &#xA;&lt;p&gt;Now - let&#39;s configure our hardware device, so we could start provide crucial context to our personal AI!&lt;/p&gt; &#xA;&lt;h3&gt;Setup: Hardware - Coral AI device&lt;/h3&gt; &#xA;&lt;p&gt;First, to learn more about the device, it is good to check out the &lt;a href=&#34;https://coral.ai/docs/dev-board-micro/get-started/&#34;&gt;official docs&lt;/a&gt;. Our project is using &lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/official&#34;&gt;out-of-tree setup&lt;/a&gt; with a &lt;a href=&#34;https://coral.ai/docs/dev-board-micro/wireless-addon/&#34;&gt;Wireless Add-on&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is quick video showing how to &#34;connect&#34; the hardware pieces together, and install the software:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/_2KRSlpnXrA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/thumbnail_2.png&#34; alt=&#34;set up device video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the root folder of this repository, run the following commands, (which will download the Coral AI Micro Dev dependencies to your computer - note that it might take a few minutes):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add  https://github.com/google-coral/coralmicro devices/coralai/coralmicro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, when it is finished, CD to the &lt;code&gt;devices/coralai&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd devices/coralai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run the setup script, which will make sure your computer can compile the code and pass it on to the device:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that if you&#39;re using Apple Silicon Mac, you might need to change the &lt;code&gt;coralmicro/scripts/requirements.txt&lt;/code&gt; file, making the version of the package &lt;code&gt;hidapi==0.14.0&lt;/code&gt; (see &lt;a href=&#34;https://github.com/google-coral/coralmicro/pull/98&#34;&gt;issue&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash coralmicro/setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export SUPABASE_URL&#34;&amp;lt;YOUR_SUPABASE_URL&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Security RLS best practices is still WOP! (see &lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/3&#34;&gt;ticket #3&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once the setup has finished running, you can connect your device via a USB-C, and run the following to create a build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -B out -S .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make -C out -j4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then, flash it to your device with WIFI_NAME and WIFI_PASSWORD: (Bluetooth pairing is coming soon, see [ticket][https://github.com/adamcohenhillel/AdDeus/issues/8])&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 coralmicro/scripts/flashtool.py --build_dir out --elf_path out/coralmicro-app --wifi_ssid &#34;&amp;lt;WIFI_NAME&amp;gt;&#34; --wifi_psk &#34;&amp;lt;WIFI_PASSWORD&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To debug the device, you can connect to it serial-y via the USB-C.&lt;/p&gt; &#xA;&lt;p&gt;First, find the serial id On Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /dev/ttyACM*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Mac:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /dev/cu.usbmodem*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the &lt;a href=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/devices/coralai/checkOutput.py&#34;&gt;checkOutput.py&lt;/a&gt; script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python3 checkOutput.py --device &#34;/dev/cu.usbmodem101&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(replace the &lt;code&gt;/dev/cu.usbmodem*&lt;/code&gt; with whatever you got in the &lt;code&gt;ls&lt;/code&gt; command)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: It might fail for the first few CURL requests, until it resolves the DNS&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Setup: Hardware - Rasberry Pi Zero W&lt;/h3&gt; &#xA;&lt;p&gt;SOON! (cost $15, but need to solder a microphone)&lt;/p&gt; &#xA;&lt;h3&gt;Setup: Run with Ollama&lt;/h3&gt; &#xA;&lt;p&gt;How-to-Guide will be written here soon, but it should be fairly simple with &lt;a href=&#34;https://ollama.ai/&#34;&gt;Ollama&lt;/a&gt; serve and &lt;code&gt;ngrok http 11434&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install ngrok/ngrok/ngrok&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Areas to Contribute:&lt;/h2&gt; &#xA;&lt;p&gt;As people will soon notice, my C++ skills are limited, as well as my React and hardware skills :P - any help would be amazing! Contributions are more than welcomed. This should be maintained by us, for us.&lt;/p&gt; &#xA;&lt;p&gt;Build it for yourself, and build it for others. This can become the Linux of the OS, the Android of the mobile. It is raw, but we need to start from somewhere!&lt;/p&gt; &#xA;&lt;h3&gt;Known Bugs:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Whisper tends to generate YouTube-like text when the audio is unclear, so you can get noise data in the database like &#34;Thank you for watching&#34;, and &#34;See you in the next video,&#34; even though it has nothing to do with the audio (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/7&#34;&gt;ticket #7&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Currently it is using Wi-Fi, which makes it not-so mobile. An alternative approach would either be: (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/8&#34;&gt;ticket #8&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Bluetooth, pairing with the mobile device&lt;/li&gt; &#xA;   &lt;li&gt;Sdd a 4G card that will allow it to be completly independent&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Sometimes when loading from scratch, it takes some time (2-3 curl requests) until it resolves the DNS of the Supabase instance (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/12&#34;&gt;ticket #8&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Backend:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The RAG (Retrieval-Augmented Generation) can be extremely improved: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Need to process the audio not only into &#34;embeddings&#34; but also run an LLM on it to generate some context (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/1&#34;&gt;ticket #1&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Need to query the RAG more efficiently, maybe with timestamp as well, etc. - not only embeddings (relates to the processing part) (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/2&#34;&gt;ticket #2&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve security - currently I didn&#39;t spent too much time making the Supabase RLS really work (for writing data) (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/3&#34;&gt;ticket #3&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Hardware / On-device:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Run on a Rasberry Pi Pico / Zero, as it is much much cheaper, and should do the work too (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/4&#34;&gt;ticket #4&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Currently the setup is without battery, need to find the easiest way to add this as part of the setup (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/5&#34;&gt;ticket #5&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Mobile:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve user setup?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;UX and Onboarding&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; An easy setup script / deploy my own Ollama server to replace OpenAI &lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/6&#34;&gt;ticket #6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add How-to for Ollama setup (&lt;a href=&#34;https://github.com/adamcohenhillel/AdDeus/issues/9&#34;&gt;ticket #9&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CTA for the Community:&lt;/h2&gt; &#xA;&lt;p&gt;A lot of companies and organizations are now after building the &#34;Personal AI&#34; - the one that will be a companion for individuals. This will be a paradigm shift of the way we all experince the digital (and physical) realms. Interacting with our AI that knows a lot about us, and help us navigate the world.&lt;/p&gt; &#xA;&lt;p&gt;The problem with all these initiatives, is that they don&#39;t really provide you with your own personal AI. It’s not private, you don’t own it. As long as you don’t have a way to opt out, and take your so-called personal AI elsewhere, it’s not yours, you merely renting it from somewhere.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Personal AI should be like a personal computer, connected to the internet.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The pioneers of the personal computers, the internet, they all knew it - and that what made it great, a period of possibilities. But since, as we all know, things had drifted. You don’t own things, merely renting them. You can’t take it elsewhere - and therefore the free-market forces of capitalism can’t be easily integrated into the digital realm.&lt;/p&gt; &#xA;&lt;p&gt;Check out the Intro video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/4CqEC2yLGQU&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adamcohenhillel/ADeus/main/docs/images/thumbnail_1.png&#34; alt=&#34;set up device video&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>