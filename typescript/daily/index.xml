<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-02T01:42:12Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>glideapps/quicktype</title>
    <updated>2023-12-02T01:42:12Z</updated>
    <id>tag:github.com,2023-12-02:/glideapps/quicktype</id>
    <link href="https://github.com/glideapps/quicktype" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate types and converters from JSON, Schema, and GraphQL&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quicktype/quicktype/master/media/quicktype-logo.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/quicktype&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/quicktype.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/quicktype/quicktype/actions/workflows/master.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;quicktype&lt;/code&gt; generates strongly-typed models and serializers from JSON, JSON Schema, TypeScript, and &lt;a href=&#34;https://blog.quicktype.io/graphql-with-quicktype/&#34;&gt;GraphQL queries&lt;/a&gt;, making it a breeze to work with JSON type-safely in many programming languages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://app.quicktype.io&#34;&gt;Try &lt;code&gt;quicktype&lt;/code&gt; in your browser&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;http://blog.quicktype.io/first-look/&#34;&gt;&#39;A first look at quicktype&#39;&lt;/a&gt; for more introduction.&lt;/li&gt; &#xA; &lt;li&gt;If you have any questions, check out the &lt;a href=&#34;https://raw.githubusercontent.com/glideapps/quicktype/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt; first.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported Inputs&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;JSON&lt;/th&gt; &#xA;   &lt;th&gt;JSON API URLs&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#s=coordinate&#34;&gt;JSON Schema&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;TypeScript&lt;/th&gt; &#xA;   &lt;th&gt;GraphQL queries&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Target Languages&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=ruby&#34;&gt;Ruby&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=js&#34;&gt;JavaScript&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=flow&#34;&gt;Flow&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=rust&#34;&gt;Rust&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=kotlin&#34;&gt;Kotlin&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=dart&#34;&gt;Dart&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=python&#34;&gt;Python&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=cs&#34;&gt;C#&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=go&#34;&gt;Go&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=cpp&#34;&gt;C++&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=java&#34;&gt;Java&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=scala3&#34;&gt;Scala&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=ts&#34;&gt;TypeScript&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=swift&#34;&gt;Swift&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=objc&#34;&gt;Objective-C&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=elm&#34;&gt;Elm&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=schema&#34;&gt;JSON Schema&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=pike&#34;&gt;Pike&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=javascript-prop-types&#34;&gt;Prop-Types&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=haskell&#34;&gt;Haskell&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://app.quicktype.io/#l=php&#34;&gt;PHP&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Missing your favorite language? Please implement it!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways to use &lt;code&gt;quicktype&lt;/code&gt;. &lt;a href=&#34;https://app.quicktype.io&#34;&gt;app.quicktype.io&lt;/a&gt; is the most powerful and complete UI. The web app also works offline and doesn&#39;t send your sample data over the Internet, so paste away!&lt;/p&gt; &#xA;&lt;p&gt;For the best CLI, we recommend installing &lt;code&gt;quicktype&lt;/code&gt; globally via &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g quicktype&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://formulae.brew.sh/formula/quicktype&#34;&gt;Homebrew&lt;/a&gt; &lt;em&gt;(infrequently updated)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/paste-json-as-code-quicktype/id1330801220?mt=12&#34;&gt;Xcode extension&lt;/a&gt;*&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items/quicktype.quicktype&#34;&gt;VSCode extension&lt;/a&gt;*&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=typeguard.quicktype-vs&#34;&gt;Visual Studio extension&lt;/a&gt;*&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;small&gt;* limited functionality&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using &lt;code&gt;quicktype&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run quicktype without arguments for help and options&#xA;quicktype&#xA;&#xA;# quicktype a simple JSON object in C#&#xA;echo &#39;{ &#34;name&#34;: &#34;David&#34; }&#39; | quicktype -l csharp&#xA;&#xA;# quicktype a top-level array and save as Go source&#xA;echo &#39;[1, 2, 3]&#39; | quicktype -o ints.go&#xA;&#xA;# quicktype a sample JSON file in Swift&#xA;quicktype person.json -o Person.swift&#xA;&#xA;# A verbose way to do the same thing&#xA;quicktype \&#xA;  --src person.json \&#xA;  --src-lang json \&#xA;  --lang swift \&#xA;  --top-level Person \&#xA;  --out Person.swift&#xA;&#xA;# quicktype a directory of samples as a C++ program&#xA;# Suppose ./blockchain is a directory with files:&#xA;#   latest-block.json transactions.json marketcap.json&#xA;quicktype ./blockchain -o blockchain-api.cpp&#xA;&#xA;# quicktype a live JSON API as a Java program&#xA;quicktype https://api.somewhere.com/data -o Data.java&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating code from JSON schema&lt;/h3&gt; &#xA;&lt;p&gt;The recommended way to use &lt;code&gt;quicktype&lt;/code&gt; is to generate a JSON schema from sample data, review and edit the schema, commit the schema to your project repo, then generate code from the schema as part of your build process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# First, infer a JSON schema from a sample.&#xA;quicktype pokedex.json -l schema -o schema.json&#xA;&#xA;# Review the schema, make changes,&#xA;# and commit it to your project repo.&#xA;&#xA;# Finally, generate model code from schema in your&#xA;# build process for whatever languages you need:&#xA;quicktype -s schema schema.json -o src/ios/models.swift&#xA;quicktype -s schema schema.json -o src/android/Models.java&#xA;quicktype -s schema schema.json -o src/nodejs/Models.ts&#xA;&#xA;# All of these models will serialize to and from the same&#xA;# JSON, so different programs in your stack can communicate&#xA;# seamlessly.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating code from TypeScript (Experimental)&lt;/h3&gt; &#xA;&lt;p&gt;You can achieve a similar result by writing or generating a &lt;a href=&#34;http://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; file, then quicktyping it. TypeScript is a typed superset of JavaScript with simple, succinct syntax for defining types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;interface Person {&#xA;    name: string;&#xA;    nickname?: string; // an optional property&#xA;    luckyNumber: number;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use TypeScript just like JSON schema was used in the last example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# First, infer a TypeScript file from a sample (or just write one!)&#xA;quicktype pokedex.json -o pokedex.ts --just-types&#xA;# Review the TypeScript, make changes, etc.&#xA;quicktype pokedex.ts -o src/ios/models.swift&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Calling &lt;code&gt;quicktype&lt;/code&gt; from JavaScript&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;quicktype&lt;/code&gt; as a JavaScript function within &lt;code&gt;node&lt;/code&gt; or browsers. First add the &lt;code&gt;quicktype-core&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm install quicktype-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In general, first you create an &lt;code&gt;InputData&lt;/code&gt; value with one or more JSON samples, JSON schemas, TypeScript sources, or other supported input types. Then you call &lt;code&gt;quicktype&lt;/code&gt;, passing that &lt;code&gt;InputData&lt;/code&gt; value and any options you want.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import {&#xA;    quicktype,&#xA;    InputData,&#xA;    jsonInputForTargetLanguage,&#xA;    JSONSchemaInput,&#xA;    FetchingJSONSchemaStore&#xA;} from &#34;quicktype-core&#34;;&#xA;&#xA;async function quicktypeJSON(targetLanguage, typeName, jsonString) {&#xA;    const jsonInput = jsonInputForTargetLanguage(targetLanguage);&#xA;&#xA;    // We could add multiple samples for the same desired&#xA;    // type, or many sources for other types. Here we&#39;re&#xA;    // just making one type from one piece of sample JSON.&#xA;    await jsonInput.addSource({&#xA;        name: typeName,&#xA;        samples: [jsonString]&#xA;    });&#xA;&#xA;    const inputData = new InputData();&#xA;    inputData.addInput(jsonInput);&#xA;&#xA;    return await quicktype({&#xA;        inputData,&#xA;        lang: targetLanguage&#xA;    });&#xA;}&#xA;&#xA;async function quicktypeJSONSchema(targetLanguage, typeName, jsonSchemaString) {&#xA;    const schemaInput = new JSONSchemaInput(new FetchingJSONSchemaStore());&#xA;&#xA;    // We could add multiple schemas for multiple types,&#xA;    // but here we&#39;re just making one type from JSON schema.&#xA;    await schemaInput.addSource({ name: typeName, schema: jsonSchemaString });&#xA;&#xA;    const inputData = new InputData();&#xA;    inputData.addInput(schemaInput);&#xA;&#xA;    return await quicktype({&#xA;        inputData,&#xA;        lang: targetLanguage&#xA;    });&#xA;}&#xA;&#xA;async function main() {&#xA;    const { lines: swiftPerson } = await quicktypeJSON(&#34;swift&#34;, &#34;Person&#34;, jsonString);&#xA;    console.log(swiftPerson.join(&#34;\n&#34;));&#xA;&#xA;    const { lines: pythonPerson } = await quicktypeJSONSchema(&#34;python&#34;, &#34;Person&#34;, jsonSchemaString);&#xA;    console.log(pythonPerson.join(&#34;\n&#34;));&#xA;}&#xA;&#xA;main();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The argument to &lt;code&gt;quicktype&lt;/code&gt; is a complex object with many optional properties. &lt;a href=&#34;https://github.com/quicktype/quicktype/raw/master/packages/quicktype-core/src/Run.ts#L637&#34;&gt;Explore its definition&lt;/a&gt; to understand what options are allowed.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;quicktype&lt;/code&gt; is &lt;a href=&#34;https://raw.githubusercontent.com/glideapps/quicktype/master/LICENSE&#34;&gt;Open Source&lt;/a&gt; and we love contributors! In fact, we have a &lt;a href=&#34;https://github.com/quicktype/quicktype/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Ahelp-wanted&#34;&gt;list of issues&lt;/a&gt; that are low-priority for us, but for which we&#39;d happily accept contributions. Support for new target languages is also strongly desired. If you&#39;d like to contribute, need help with anything at all, or would just like to talk things over, come &lt;a href=&#34;http://slack.quicktype.io/&#34;&gt;join us on Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Setup, Build, Run&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;quicktype&lt;/code&gt; is implemented in TypeScript and requires &lt;code&gt;nodejs&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; to build and run.&lt;/p&gt; &#xA;&lt;p&gt;First, install &lt;code&gt;typescript&lt;/code&gt; globally via &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Clone this repo and do:&lt;/p&gt; &#xA;&lt;h4&gt;macOS / Linux&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvm use&#xA;npm install&#xA;script/quicktype # rebuild (slow) and run (fast)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --ignore-scripts # Install dependencies&#xA;npm install -g typescript # Install typescript globally&#xA;tsc --project src/cli # Rebuild&#xA;node dist\cli\index.js # Run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Edit&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;, open this workspace, and install the recommended extensions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;code . # opens in VS Code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Live-reloading for quick feedback&lt;/h3&gt; &#xA;&lt;p&gt;When working on an output language, you&#39;ll want to view generated output as you edit. Use &lt;code&gt;npm start&lt;/code&gt; to watch for changes and recompile and rerun &lt;code&gt;quicktype&lt;/code&gt; for live feedback. For example, if you&#39;re developing a new renderer for &lt;code&gt;fortran&lt;/code&gt;, you could use the following command to rebuild and reinvoke &lt;code&gt;quicktype&lt;/code&gt; as you implement your renderer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm start -- &#34;--lang fortran pokedex.json&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command in quotes is passed to &lt;code&gt;quicktype&lt;/code&gt;, so you can render local &lt;code&gt;.json&lt;/code&gt; files, URLs, or add other options.&lt;/p&gt; &#xA;&lt;h3&gt;Test&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run full test suite&#xA;npm run test&#xA;&#xA;# Test a specific language (see test/languages.ts)&#xA;FIXTURE=golang npm test&#xA;&#xA;# Test a single sample or directory&#xA;FIXTURE=swift npm test -- pokedex.json&#xA;FIXTURE=swift npm test -- test/inputs/json/samples&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>strapi/strapi</title>
    <updated>2023-12-02T01:42:12Z</updated>
    <id>tag:github.com,2023-12-02:/strapi/strapi</id>
    <link href="https://github.com/strapi/strapi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚀 Strapi is the leading open-source headless CMS. It’s 100% JavaScript/TypeScript, fully customizable and developer-first.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://strapi.io/#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://strapi.io/assets/strapi-logo-dark.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Strapi logo&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://strapi.io/#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://strapi.io/assets/strapi-logo-light.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Strapi logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Open-source headless CMS, self-hosted or Cloud you’re in control.&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt;The leading open-source headless CMS, 100% JavaScript/TypeScript, flexible and fully customizable.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://cloud.strapi.io/signups?source=github1&#34;&gt;Cloud&lt;/a&gt; · &lt;a href=&#34;https://strapi.io/demo&#34;&gt;Try live demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.org/package/@strapi/strapi&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@strapi/strapi/latest.svg?sanitize=true&#34; alt=&#34;NPM Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/strapi/strapi/actions/workflows/tests.yml&#34;&gt; &lt;img src=&#34;https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main&#34; alt=&#34;Tests&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.strapi.io&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/811989166782021633?label=Discord&#34; alt=&#34;Strapi on Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/strapi/strapi/actions/workflows/nightly.yml&#34;&gt; &lt;img src=&#34;https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Strapi Nightly Release Build Status&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://strapi.io&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/strapi/strapi/main/public/assets/admin-demo.gif&#34; alt=&#34;Administration panel&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Strapi Community Edition is a free and open-source headless CMS enabling you to manage any content, anywhere.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-hosted or Cloud&lt;/strong&gt;: You can host and scale Strapi projects the way you want. You can save time by deploying to &lt;a href=&#34;https://cloud.strapi.io/signups?source=github1&#34;&gt;Strapi Cloud&lt;/a&gt; or deploy to the hosting platform you want**: AWS, Azure, Google Cloud, DigitalOcean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Admin Pane&lt;/strong&gt;: Elegant, entirely customizable and a fully extensible admin panel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-database support&lt;/strong&gt;: You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;: You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blazing Fast and Robust&lt;/strong&gt;: Built on top of Node.js and TypeScript, Strapi delivers reliable and solid performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Front-end Agnostic&lt;/strong&gt;: Use any front-end framework (React, Next.js, Vue, Angular, etc.), mobile apps or even IoT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure by default&lt;/strong&gt;: Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful CLI&lt;/strong&gt;: Scaffold projects and APIs on the fly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html&#34; target=&#34;_blank&#34;&gt;Read the Getting Started tutorial&lt;/a&gt; or follow the steps below:&lt;/p&gt; &#xA;&lt;h3&gt;⏳ Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install Strapi with this &lt;strong&gt;Quickstart&lt;/strong&gt; command to create a Strapi project instantly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Use &lt;strong&gt;yarn&lt;/strong&gt; to install the Strapi project (recommended). &lt;a href=&#34;https://yarnpkg.com/lang/en/docs/install/&#34;&gt;Install yarn with these docs&lt;/a&gt;.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn create strapi-app my-project --quickstart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(Use npm/npx to install the Strapi project.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-strapi-app my-project --quickstart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command generates a brand new project with the default features (authentication, permissions, content management, content type builder &amp;amp; file upload). The &lt;strong&gt;Quickstart&lt;/strong&gt; command installs Strapi using a &lt;strong&gt;SQLite&lt;/strong&gt; database which is used for prototyping in development.&lt;/p&gt; &#xA;&lt;p&gt;Enjoy 🎉&lt;/p&gt; &#xA;&lt;h3&gt;🖐 Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Complete installation requirements can be found in the documentation under &lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html&#34;&gt;Installation Requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu LTS/Debian 9.x&lt;/li&gt; &#xA; &lt;li&gt;CentOS/RHEL 8&lt;/li&gt; &#xA; &lt;li&gt;macOS Mojave&lt;/li&gt; &#xA; &lt;li&gt;Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Node:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Strapi only supports maintenance and LTS versions of Node.js. Please refer to the &lt;a href=&#34;https://nodejs.org/en/about/releases/&#34;&gt;Node.js release schedule&lt;/a&gt; for more information. NPM versions installed by default with Node.js are supported. Generally it&#39;s recommended to use yarn over npm where possible.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Strapi Version&lt;/th&gt; &#xA;   &lt;th&gt;Recommended&lt;/th&gt; &#xA;   &lt;th&gt;Minimum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.14.5 and up&lt;/td&gt; &#xA;   &lt;td&gt;20.x&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.11.0 and up&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;   &lt;td&gt;16.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.3.9 to 4.10.x&lt;/td&gt; &#xA;   &lt;td&gt;18.x&lt;/td&gt; &#xA;   &lt;td&gt;14.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4.0.x to 4.3.8&lt;/td&gt; &#xA;   &lt;td&gt;16.x&lt;/td&gt; &#xA;   &lt;td&gt;14.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Database:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Database&lt;/th&gt; &#xA;   &lt;th&gt;Recommended&lt;/th&gt; &#xA;   &lt;th&gt;Minimum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;8.0&lt;/td&gt; &#xA;   &lt;td&gt;5.7.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MariaDB&lt;/td&gt; &#xA;   &lt;td&gt;10.6&lt;/td&gt; &#xA;   &lt;td&gt;10.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;14.0&lt;/td&gt; &#xA;   &lt;td&gt;11.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;We recommend always using the latest version of Strapi stable to start your new projects&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Content Types Builder&lt;/strong&gt;: Build the most flexible publishing experience for your content managers, by giving them the freedom to create any page on the go with &lt;a href=&#34;https://docs.strapi.io/user-docs/content-manager/writing-content#filling-up-fields&#34;&gt;fields&lt;/a&gt;, components and &lt;a href=&#34;https://docs.strapi.io/user-docs/content-manager/writing-content#dynamic-zones&#34;&gt;Dynamic Zones&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Media Library&lt;/strong&gt;: Upload your images, videos, audio or documents to the media library. Easily find the right asset, edit and reuse it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Internationalization&lt;/strong&gt;: The Internationalization (i18n) plugin allows Strapi users to create, manage and distribute localized content in different languages, called &#34;locales&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role Based Access Control&lt;/strong&gt;: Create an unlimited number of custom roles and permissions for admin and end users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GraphQL or REST&lt;/strong&gt;: Consume the API using REST or GraphQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can unlock additional features such as SSO, Audit Logs, Review Workflows in &lt;a href=&#34;https://cloud.strapi.io/login?source=github1&#34;&gt;Strapi Cloud&lt;/a&gt; or &lt;a href=&#34;https://strapi.io/enterprise?source=github1&#34;&gt;Strapi Enterprise&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://strapi.io/overview&#34;&gt;See more on our website&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/strapi/strapi/develop/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; before submitting a Pull Request to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Community support&lt;/h2&gt; &#xA;&lt;p&gt;For general help using Strapi, please refer to &lt;a href=&#34;https://docs.strapi.io&#34;&gt;the official Strapi documentation&lt;/a&gt;. For additional help, you can use one of these channels to ask a question:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.strapi.io&#34;&gt;Discord&lt;/a&gt; (For live discussion with the Community and Strapi team)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/strapi/strapi&#34;&gt;GitHub&lt;/a&gt; (Bug reports, Contributions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.strapi.io&#34;&gt;Community Forum&lt;/a&gt; (Questions and Discussions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://feedback.strapi.io&#34;&gt;Feedback section&lt;/a&gt; (Roadmap, Feature requests)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/strapijs&#34;&gt;Twitter&lt;/a&gt; (Get the news fast)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/Strapi-616063331867161&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/strapi&#34;&gt;YouTube Channel&lt;/a&gt; (Learn from Video Tutorials)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration&lt;/h2&gt; &#xA;&lt;p&gt;Follow our &lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html&#34;&gt;migration guides&lt;/a&gt; on the documentation to keep your projects up-to-date.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://feedback.strapi.io&#34;&gt;roadmap&lt;/a&gt; to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our dedicated &lt;a href=&#34;https://github.com/strapi/documentation&#34;&gt;repository&lt;/a&gt; for the Strapi documentation, or view our documentation live:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html&#34;&gt;Developer docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.strapi.io/user-docs/latest/getting-started/introduction.html&#34;&gt;User guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Try live demo&lt;/h2&gt; &#xA;&lt;p&gt;See for yourself what&#39;s under the hood by getting access to a &lt;a href=&#34;https://strapi.io/demo&#34;&gt;hosted Strapi project&lt;/a&gt; with sample data.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/strapi/strapi/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for licensing information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>electron/forge</title>
    <updated>2023-12-02T01:42:12Z</updated>
    <id>tag:github.com,2023-12-02:/electron/forge</id>
    <link href="https://github.com/electron/forge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A complete tool for building and publishing Electron applications&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Electron Forge&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dl.circleci.com/status-badge/redirect/gh/electron/forge/tree/main&#34;&gt;&lt;img src=&#34;https://dl.circleci.com/status-badge/img/gh/electron/forge/tree/main.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/APGC3k5yaH&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/745037351163527189?color=blueviolet&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npm.im/@electron-forge/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@electron-forge/cli&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/electron/forge/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/electron/forge.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Status-%20Ready%20for%20Awesome-red.svg?sanitize=true&#34; alt=&#34;status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A complete tool for building modern Electron applications.&lt;/p&gt; &#xA;&lt;p&gt;Electron Forge unifies the existing (and well maintained) build tools for Electron development into a simple, easy to use package so that anyone can jump right in to Electron development.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.electronforge.io&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/electron/forge/main/#project-goals&#34;&gt;Goals&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/electron/forge/main/#docs-and-usage&#34;&gt;Docs and Usage&lt;/a&gt; | &lt;a href=&#34;https://www.electronforge.io/configuration&#34;&gt;Configuration&lt;/a&gt; | &lt;a href=&#34;https://github.com/electron/forge/raw/main/SUPPORT.md&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://github.com/electron/forge/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; | &lt;a href=&#34;https://github.com/electron/forge/raw/main/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node 16.4.0 or higher&lt;/li&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have a more recent version of &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;, you can use &lt;a href=&#34;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&#34;&gt;&lt;code&gt;npx&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&#34;https://yarnpkg.com/blog/2017/05/12/introducing-yarn/&#34;&gt;&lt;code&gt;yarn create&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-electron-app my-new-app&#xA;# or&#xA;yarn create electron-app my-new-app&#xA;&#xA;# then&#xA;cd my-new-app&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on creating a new project from a template, &lt;a href=&#34;https://www.electronforge.io/cli&#34;&gt;see our CLI documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Docs and Usage&lt;/h1&gt; &#xA;&lt;p&gt;For Electron Forge documentation and usage you should check out our website: &lt;a href=&#34;https://www.electronforge.io&#34;&gt;electronforge.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Project Goals&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Starting with Electron should be as simple as a single command.&lt;/li&gt; &#xA; &lt;li&gt;Developers shouldn&#39;t have to worry about setting up build tooling, native module rebuilding, etc. Everything should &#34;just work&#34; for them out of the box.&lt;/li&gt; &#xA; &lt;li&gt;Everything from creating the project to packaging the project for release should be handled by one core dependency in a standard way while still offering users maximum choice and freedom.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;With these goals in mind, under the hood this project uses, among others:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/rebuild&#34;&gt;&lt;code&gt;@electron/rebuild&lt;/code&gt;&lt;/a&gt;: Automatically recompiles native Node.js modules against the correct Electron version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/packager&#34;&gt;&lt;code&gt;@electron/packager&lt;/code&gt;&lt;/a&gt;: Customizes and bundles your Electron app to get it ready for distribution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in reporting/fixing issues and contributing directly to the code base, please see &lt;a href=&#34;https://github.com/electron/forge/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we&#39;re looking for and how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Please report bugs or feature requests in our &lt;a href=&#34;https://github.com/electron/forge/issues&#34;&gt;issue tracker&lt;/a&gt;. You can find help for debugging your Electron Forge on the &lt;a href=&#34;https://github.com/electron/forge/raw/main/SUPPORT.md&#34;&gt;Support page&lt;/a&gt;, and ask questions in the &lt;a href=&#34;https://discord.gg/invite/APGC3k5yaH&#34;&gt;official Electron Discord server&lt;/a&gt;, where there is a dedicated channel for Electron Forge.&lt;/p&gt;</summary>
  </entry>
</feed>