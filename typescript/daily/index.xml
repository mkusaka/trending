<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-21T01:47:50Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BloopAI/bloop</title>
    <updated>2023-03-21T01:47:50Z</updated>
    <id>tag:github.com,2023-03-21:/BloopAI/bloop</id>
    <link href="https://github.com/BloopAI/bloop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;bloop is a fast code search engine written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://assets.bloop.ai/bloop_github_logo_dark.png&#34;&gt; &#xA; &lt;img alt=&#34;bloop logo&#34; src=&#34;https://assets.bloop.ai/bloop_github_logo_light.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;bloop is a code-search engine that uses GPT-4 to answer questions about your code. Search both your local and remote repositories with natural language, regex and filtered queries.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GPT-4 based conversational search&lt;/li&gt; &#xA; &lt;li&gt;Blazing fast regex search&lt;/li&gt; &#xA; &lt;li&gt;Sync your local and GitHub repositories (support for more code hosts coming soon!)&lt;/li&gt; &#xA; &lt;li&gt;Sophisticated query filters so you can narrow down your results&lt;/li&gt; &#xA; &lt;li&gt;Find functions, variables or traits with symbol search&lt;/li&gt; &#xA; &lt;li&gt;Precise code navigation (go-to-reference and go-to-definition) for 10+ of the most popular languages built with &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter/&#34;&gt;Tree-sitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;bloop stands on the shoulders of the Rust ecosystem. Our search indexes are powered by &lt;a href=&#34;https://github.com/quickwit-oss/tantivy&#34;&gt;Tantivy&lt;/a&gt; and &lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;Qdrant&lt;/a&gt;, and our multi-platform app is built with &lt;a href=&#34;https://github.com/tauri-apps/tauri&#34;&gt;Tauri&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://assets.bloop.ai/bloop_gpt4_short.gif&#34; alt=&#34;code search demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to get started with bloop is to &lt;a href=&#34;https://github.com/BloopAI/bloop/releases&#34;&gt;download the app&lt;/a&gt; and follow the onboarding steps. Checkout our &lt;a href=&#34;https://bloop.ai/docs/getting-started&#34;&gt;getting started guide&lt;/a&gt; and our references for &lt;a href=&#34;https://bloop.ai/docs/natural-language-queries&#34;&gt;conversational&lt;/a&gt; and &lt;a href=&#34;https://bloop.ai/docs/regex-queries&#34;&gt;regex&lt;/a&gt; search.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on how to build from source or run bloop from the command line, check out these pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BloopAI/bloop/main/apps/desktop/README.md&#34;&gt;Build bloop app from source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BloopAI/bloop/main/server/README.md&#34;&gt;Run bloop from the command line&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that it is currently &lt;em&gt;not&lt;/em&gt; possible to run conversational GPT-4 search where bloop has been built from source (we&#39;re working on this). You can run regex searches and use code-navigation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions big and small! Before jumping in please read &lt;a href=&#34;https://raw.githubusercontent.com/BloopAI/bloop/main/CONTRIBUTING.md&#34;&gt;our contributors guide&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/BloopAI/bloop/main/CODE_OF_CONDUCT.md&#34;&gt;our code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to find your way around the repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;apps/desktop&lt;/code&gt;: The Tauri app&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server/bleep&lt;/code&gt;: The Rust backend which contains the core search and navigation logic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: The React frontend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We make extensive use of Git LFS for dependencies that are expensive to build.&lt;/p&gt; &#xA;&lt;p&gt;To make sure you have everything you need to start building, you&#39;ll need to install the &lt;code&gt;git-lfs&lt;/code&gt; package for your favourite operating system, then run the following commands in this repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git lfs install&#xA;git lfs pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you find a bug or have a feature request, &lt;a href=&#34;https://github.com/BloopAI/bloop/issues&#34;&gt;open an issue&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;We store as little data as possible. Opting in now to send telemetry to bloop helps us identify bugs and make data-driven product decisions. This option sends us crash reports, logs and high level information about feature usage (so we can tell that a search was made, but we wouldn&#39;t be able to see the query or results). If you change your mind, you can always disable this later in Settings!&lt;/p&gt; &#xA;&lt;p&gt;You can read our full privacy policy &lt;a href=&#34;https://bloop.ai/privacy&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mayooear/gpt4-pdf-chatbot-langchain</title>
    <updated>2023-03-21T01:47:50Z</updated>
    <id>tag:github.com,2023-03-21:/mayooear/gpt4-pdf-chatbot-langchain</id>
    <link href="https://github.com/mayooear/gpt4-pdf-chatbot-langchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GPT4 &amp; LangChain Chatbot for large PDF docs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT-4 &amp;amp; LangChain - Create a ChatGPT Chatbot for Your PDF Docs&lt;/h1&gt; &#xA;&lt;p&gt;Use the new GPT-4 api to build a chatGPT chatbot for Large PDF docs (56 pages used in this example).&lt;/p&gt; &#xA;&lt;p&gt;Tech stack used includes LangChain, Pinecone, Typescript, Openai, and Next.js. LangChain is a framework that makes it easier to build scalable AI/LLM apps and chatbots. Pinecone is a vectorstore for storing embeddings and your PDF in text to later retrieve similar docs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ih9PBGVVOO4&#34;&gt;Tutorial video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/mayowaoshin&#34;&gt;Get in touch via twitter if you have questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The visual guide of this repo and tutorial is in the &lt;code&gt;visual guide&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone [github https url]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install packages&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set up your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; into &lt;code&gt;.env&lt;/code&gt; Your &lt;code&gt;.env&lt;/code&gt; file should look like this:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=&#xA;&#xA;PINECONE_API_KEY=&#xA;PINECONE_ENVIRONMENT=&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://help.openai.com/en/articles/4936850-where-do-i-find-my-secret-api-key&#34;&gt;openai&lt;/a&gt; to retrieve API keys and insert into your &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://pinecone.io/&#34;&gt;pinecone&lt;/a&gt; to create and retrieve your API keys.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &lt;code&gt;config&lt;/code&gt; folder, replace the &lt;code&gt;PINECONE_INDEX_NAME&lt;/code&gt; and &lt;code&gt;PINECONE_NAME_SPACE&lt;/code&gt; with your own details from your pinecone dashboard.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;utils/makechain.ts&lt;/code&gt; chain change the &lt;code&gt;QA_PROMPT&lt;/code&gt; for your own usecase. Change &lt;code&gt;modelName&lt;/code&gt; in &lt;code&gt;new OpenAIChat&lt;/code&gt; to a different api model if you don&#39;t have access to &lt;code&gt;gpt-4&lt;/code&gt;. See &lt;a href=&#34;https://platform.openai.com/docs/models/model-endpoint-compatibility&#34;&gt;the OpenAI docs&lt;/a&gt; for a list of supported &lt;code&gt;modelName&lt;/code&gt;s. For example you could use &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; if you do not have access to &lt;code&gt;gpt-4&lt;/code&gt;, yet.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Convert your PDF to embeddings&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;docs&lt;/code&gt; folder replace the pdf with your own pdf doc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;code&gt;scripts/ingest-data.ts&lt;/code&gt; replace &lt;code&gt;filePath&lt;/code&gt; with &lt;code&gt;docs/{yourdocname}.pdf&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the script &lt;code&gt;npm run ingest&lt;/code&gt; to &#39;ingest&#39; and embed your docs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check Pinecone dashboard to verify your namespace and vectors have been added.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Run the app&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve verified that the embeddings and content have been successfully added to your Pinecone, you can run the app &lt;code&gt;npm run dev&lt;/code&gt; to launch the local dev environment and then type a question in the chat interface.&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;Frontend of this repo is inspired by &lt;a href=&#34;https://github.com/zahidkhawaja/langchain-chat-nextjs&#34;&gt;langchain-chat-nextjs&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hop-protocol/hop-airdrop</title>
    <updated>2023-03-21T01:47:50Z</updated>
    <id>tag:github.com,2023-03-21:/hop-protocol/hop-airdrop</id>
    <link href="https://github.com/hop-protocol/hop-airdrop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hop Airdrop distribution 🐰&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hop Airdrop&lt;/h1&gt; &#xA;&lt;p&gt;This repo produces the final Hop Airdrop distribution for bridge users and liquidity providers after removing groups of sybil attacker addresses.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting a group of Sybil attacker addresses&lt;/h2&gt; &#xA;&lt;p&gt;To report a group of Sybil attacker addresses, create an issue on this repo and use the &#34;Sybil Attacker Report&#34; template.&lt;/p&gt; &#xA;&lt;p&gt;Rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reports will be reviewed on a first-come, first serve basis.&lt;/li&gt; &#xA; &lt;li&gt;Reports must contain at least 10 address still in &lt;code&gt;/src/data/eligibleAddresses.txt&lt;/code&gt; at the time of review&lt;/li&gt; &#xA; &lt;li&gt;Reports related to the Hop liquidity provider airdrop will not be considered since the liquidity provider airdrop was based on the amount and time liquidity was provided and does not need Sybil resistance.&lt;/li&gt; &#xA; &lt;li&gt;The methodology must be well explained and easy to understand. Self-reports can provide a list of signatures of &#34;HOP_SYBIL_REPORT&#34; to prove ownership of all reported addresses.&lt;/li&gt; &#xA; &lt;li&gt;Methodology that has a non-negligible chance of eliminating legitimate users will not be considered&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Happy hunting 🏹&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To rerun the final distribution, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The final distribution can be found at &lt;code&gt;/src/data/finalDistribution.json&lt;/code&gt; or &lt;code&gt;/src/data/finalDistribution.csv&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The calculated final distribution will continue to be updated as sybil attacker groups are added.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>