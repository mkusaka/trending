<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-04T01:47:49Z</updated>
  <subtitle>Daily Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>miurla/babyagi-ui</title>
    <updated>2023-05-04T01:47:49Z</updated>
    <id>tag:github.com,2023-05-04:/miurla/babyagi-ui</id>
    <link href="https://github.com/miurla/babyagi-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BabyAGI UI is designed to make it easier to run and develop with babyagi in a web app, like a ChatGPT.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;👶🤖🖥️ BabyAGI UI&lt;/h1&gt; &#xA;&lt;p&gt;BabyAGI UI is designed to make it easier to run and develop with &lt;a href=&#34;https://github.com/yoheinakajima/babyagi&#34;&gt;babyagi&lt;/a&gt; in a web app, like a ChatGPT. This is a port of &lt;a href=&#34;https://github.com/yoheinakajima/babyagi&#34;&gt;babyagi&lt;/a&gt; with &lt;a href=&#34;https://github.com/hwchase17/langchainjs&#34;&gt;Langchain.js&lt;/a&gt; and build a user interface.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/miurla/babyagi-ui/main/public/screenshot-230425.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚗 Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Display the current task and task list&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; User feedback&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Other LLM models support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; i18n support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Execution history&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Exporting Execution Results&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and more ...&lt;/p&gt; &#xA;&lt;h2&gt;🧰 Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pinecone.io/&#34;&gt;Pinecone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hwchase17/langchainjs&#34;&gt;LangChain.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.radix-ui.com/&#34;&gt;Radix UI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👉 Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/miurla/babyagi-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Go to the project holder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd babyagi-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install packages with npm&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Setup your .env file. And set the variables. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You need to create an index in advance with &lt;a href=&#34;https://www.pinecone.io/&#34;&gt;Pinecone&lt;/a&gt;. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/miurla/babyagi-ui/main/public/pinecone-setup.png&#34;&gt;Reference setting&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp .env.example .env.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Run the project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;Vercel&lt;/h3&gt; &#xA;&lt;p&gt;Host your own live version of BabyAGI UI with Vercel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fmiurla%2Fbabyagi-ui&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚠️ Warning&lt;/h2&gt; &#xA;&lt;p&gt;This script is designed to be run continuously as part of a task management system. Running this script continuously can result in high API usage, so please use it responsibly. Additionally, the script requires the OpenAI API to be set up correctly, so make sure you have set up the API before running the script.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yoheinakajima/babyagi#warning&#34;&gt;original&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jestjs/jest</title>
    <updated>2023-05-04T01:47:49Z</updated>
    <id>tag:github.com,2023-05-04:/jestjs/jest</id>
    <link href="https://github.com/jestjs/jest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Delightful JavaScript Testing.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://badge.fury.io/js/jest&#34;&gt; &lt;img src=&#34;https://badge.fury.io/js/jest.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/jest/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;Jest is released under the MIT license.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=fbjest&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/fbjest.svg?style=social&amp;amp;label=Follow%20@fbjest&#34; alt=&#34;Follow on Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/facebook/jest/actions/workflows/nodejs.yml&#34;&gt;&lt;img alt=&#34;GitHub CI Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/facebook/jest/nodejs.yml?label=CI&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/facebook/jest&#34;&gt;&lt;img alt=&#34;Coverage Status&#34; src=&#34;https://img.shields.io/codecov/c/github/facebook/jest/main.svg?maxAge=43200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/facebook/jest&#34;&gt;&lt;img alt=&#34;Gitpod ready-to-code&#34; src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;!-- A spacer --&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jestjs/jest/main/website/static/img/jest-readme-headline.png&#34; width=&#34;80%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;🃏 Delightful JavaScript Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;👩🏻‍💻 Developer Ready&lt;/strong&gt;: A comprehensive JavaScript testing solution. Works out of the box for most JavaScript projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;🏃🏽 Instant Feedback&lt;/strong&gt;: Fast, interactive watch mode only runs test files related to changed files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;📸 Snapshot Testing&lt;/strong&gt;: Capture snapshots of large objects to simplify testing and to analyze how they change over time.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;em&gt;See more on &lt;a href=&#34;https://jestjs.io&#34;&gt;jestjs.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#running-from-command-line&#34;&gt;Running from command line&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#additional-configuration&#34;&gt;Additional Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#generate-a-basic-configuration-file&#34;&gt;Generate a basic configuration file&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-babel&#34;&gt;Using Babel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-webpack&#34;&gt;Using webpack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-vite&#34;&gt;Using Vite&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-parcel&#34;&gt;Using Parcel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-typescript&#34;&gt;Using Typescript&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#badge&#34;&gt;Badge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#contributing-guide&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#good-first-issues&#34;&gt;Good First Issues&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#credits&#34;&gt;Credits&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#backers&#34;&gt;Backers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;!-- copied from Getting Started docs, links updated to point to Jest website --&gt; &#xA;&lt;p&gt;Install Jest using &lt;a href=&#34;https://yarnpkg.com/en/package/jest&#34;&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev jest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or &lt;a href=&#34;https://www.npmjs.com/package/jest&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev jest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Jest documentation uses &lt;code&gt;yarn&lt;/code&gt; commands, but &lt;code&gt;npm&lt;/code&gt; will also work. You can compare &lt;code&gt;yarn&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; commands in the &lt;a href=&#34;https://yarnpkg.com/en/docs/migrating-from-npm#toc-cli-commands-comparison&#34;&gt;yarn docs, here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s get started by writing a test for a hypothetical function that adds two numbers. First, create a &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function sum(a, b) {&#xA;  return a + b;&#xA;}&#xA;module.exports = sum;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create a file named &lt;code&gt;sum.test.js&lt;/code&gt;. This will contain our actual test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const sum = require(&#39;./sum&#39;);&#xA;&#xA;test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {&#xA;  expect(sum(1, 2)).toBe(3);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;test&#34;: &#34;jest&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print this message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PASS  ./sum.test.js&#xA;✓ adds 1 + 2 to equal 3 (5ms)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;You just successfully wrote your first test using Jest!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This test used &lt;code&gt;expect&lt;/code&gt; and &lt;code&gt;toBe&lt;/code&gt; to test that two values were exactly identical. To learn about the other things that Jest can test, see &lt;a href=&#34;https://jestjs.io/docs/using-matchers&#34;&gt;Using Matchers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running from command line&lt;/h2&gt; &#xA;&lt;p&gt;You can run Jest directly from the CLI (if it&#39;s globally available in your &lt;code&gt;PATH&lt;/code&gt;, e.g. by &lt;code&gt;yarn global add jest&lt;/code&gt; or &lt;code&gt;npm install jest --global&lt;/code&gt;) with a variety of useful options.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to run Jest on files matching &lt;code&gt;my-test&lt;/code&gt;, using &lt;code&gt;config.json&lt;/code&gt; as a configuration file and display a native OS notification after the run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jest my-test --notify --config=config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to learn more about running &lt;code&gt;jest&lt;/code&gt; through the command line, take a look at the &lt;a href=&#34;https://jestjs.io/docs/cli&#34;&gt;Jest CLI Options&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Generate a basic configuration file&lt;/h3&gt; &#xA;&lt;p&gt;Based on your project, Jest will ask you a few questions and will create a basic configuration file with a short description for each option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jest --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Babel&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;a href=&#34;https://babeljs.io/&#34;&gt;Babel&lt;/a&gt;, install required dependencies via &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev babel-jest @babel/core @babel/preset-env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configure Babel to target your current version of Node by creating a &lt;code&gt;babel.config.js&lt;/code&gt; file in the root of your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// babel.config.js&#xA;module.exports = {&#xA;  presets: [[&#39;@babel/preset-env&#39;, {targets: {node: &#39;current&#39;}}]],&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ideal configuration for Babel will depend on your project. See &lt;a href=&#34;https://babeljs.io/docs/en/&#34;&gt;Babel&#39;s docs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary markdown=&#34;span&#34;&gt;&lt;strong&gt;Making your Babel config jest-aware&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;Jest will set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to &lt;code&gt;&#39;test&#39;&lt;/code&gt; if it&#39;s not set to something else. You can use that in your configuration to conditionally setup only the compilation needed for Jest, e.g.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// babel.config.js&#xA;module.exports = api =&amp;gt; {&#xA;  const isTest = api.env(&#39;test&#39;);&#xA;  // You can use isTest to determine what presets and plugins to use.&#xA;&#xA;  return {&#xA;    // ...&#xA;  };&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Note: &lt;code&gt;babel-jest&lt;/code&gt; is automatically installed when installing Jest and will automatically transform files if a babel configuration exists in your project. To avoid this behavior, you can explicitly reset the &lt;code&gt;transform&lt;/code&gt; configuration option:&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// jest.config.js&#xA;module.exports = {&#xA;  transform: {},&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- Note that the Babel 6 section in the Getting Started was removed --&gt; &#xA;&lt;h3&gt;Using webpack&lt;/h3&gt; &#xA;&lt;p&gt;Jest can be used in projects that use &lt;a href=&#34;https://webpack.js.org/&#34;&gt;webpack&lt;/a&gt; to manage assets, styles, and compilation. webpack does offer some unique challenges over other tools. Refer to the &lt;a href=&#34;https://jestjs.io/docs/webpack&#34;&gt;webpack guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Using Vite&lt;/h3&gt; &#xA;&lt;p&gt;Jest can be used in projects that use &lt;a href=&#34;https://vitejs.dev/&#34;&gt;vite&lt;/a&gt; to serves source code over native ESM to provide some frontend tooling, vite is an opinionated tool and does offer some out-of-the box workflows. Jest is not fully supported by vite due to how the &lt;a href=&#34;https://github.com/vitejs/vite/issues/1955#issuecomment-776009094&#34;&gt;plugin system&lt;/a&gt; from vite works, but there is some working examples for first-class jest integration using the &lt;code&gt;vite-jest&lt;/code&gt;, since this is not fully supported, you might as well read the &lt;a href=&#34;https://github.com/sodatea/vite-jest/tree/main/packages/vite-jest#limitations-and-differences-with-commonjs-tests&#34;&gt;limitation of the &lt;code&gt;vite-jest&lt;/code&gt;&lt;/a&gt;. Refer to the &lt;a href=&#34;https://vitejs.dev/guide/&#34;&gt;vite guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Using Parcel&lt;/h3&gt; &#xA;&lt;p&gt;Jest can be used in projects that use &lt;a href=&#34;https://parceljs.org/&#34;&gt;parcel-bundler&lt;/a&gt; to manage assets, styles, and compilation similar to webpack. Parcel requires zero configuration. Refer to the official &lt;a href=&#34;https://parceljs.org/docs/&#34;&gt;docs&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Using TypeScript&lt;/h3&gt; &#xA;&lt;p&gt;Jest supports TypeScript, via Babel. First, make sure you followed the instructions on &lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/#using-babel&#34;&gt;using Babel&lt;/a&gt; above. Next, install the &lt;code&gt;@babel/preset-typescript&lt;/code&gt; via &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add --dev @babel/preset-typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add &lt;code&gt;@babel/preset-typescript&lt;/code&gt; to the list of presets in your &lt;code&gt;babel.config.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;// babel.config.js&#xA;module.exports = {&#xA;  presets: [&#xA;    [&#39;@babel/preset-env&#39;, {targets: {node: &#39;current&#39;}}],&#xA;+    &#39;@babel/preset-typescript&#39;,&#xA;  ],&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, there are some &lt;a href=&#34;https://babeljs.io/docs/en/babel-plugin-transform-typescript#caveats&#34;&gt;caveats&lt;/a&gt; to using TypeScript with Babel. Because TypeScript support in Babel is purely transpilation, Jest will not type-check your tests as they are run. If you want that, you can use &lt;a href=&#34;https://github.com/kulshekhar/ts-jest&#34;&gt;ts-jest&lt;/a&gt; instead, or just run the TypeScript compiler &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/compiler-options.html&#34;&gt;tsc&lt;/a&gt; separately (or as part of your build process).&lt;/p&gt; &#xA;&lt;!-- end copied --&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about using &lt;a href=&#34;https://jestjs.io&#34;&gt;Jest on the official site!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/docs/getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/docs/snapshot-testing&#34;&gt;Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/docs/api&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jestjs.io/docs/configuration&#34;&gt;Configuring Jest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Badge&lt;/h2&gt; &#xA;&lt;p&gt;Show the world you&#39;re using &lt;em&gt;Jest&lt;/em&gt; &lt;code&gt;→&lt;/code&gt; &lt;a href=&#34;https://github.com/facebook/jest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/tested_with-jest-99424f.svg?sanitize=true&#34; alt=&#34;tested with jest&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/jest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;amp;labelColor=99424f&#34; alt=&#34;jest tested&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facebook/jest&#34;&gt;&lt;img src=&#34;https://jestjs.io/img/jest-badge.svg?sanitize=true&#34; alt=&#34;jest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![tested with jest](https://img.shields.io/badge/tested_with-jest-99424f.svg?logo=jest)](https://github.com/facebook/jest)&#xA;[![jest tested](https://img.shields.io/badge/Jest-tested-eee.svg?logo=jest&amp;amp;labelColor=99424f)](https://github.com/facebook/jest)&#xA;[![jest](https://jestjs.io/img/jest-badge.svg)](https://github.com/facebook/jest)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Development of Jest happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving Jest.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://code.facebook.com/codeofconduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&#34;https://code.facebook.com/codeofconduct&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Jest.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/facebook/jest/labels/good%20first%20issue&#34;&gt;Good First Issues&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/facebook/jest/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs which have a relatively limited scope. This is a great place to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who &lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebook/jest/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/jest#backer&#34;&gt;Backers&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/jest#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/jest#sponsor&#34;&gt;Sponsors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/jest/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/jest/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/jest/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Jest is &lt;a href=&#34;https://raw.githubusercontent.com/jestjs/jest/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bitcoinjs/bitcoinjs-lib</title>
    <updated>2023-05-04T01:47:49Z</updated>
    <id>tag:github.com,2023-05-04:/bitcoinjs/bitcoinjs-lib</id>
    <link href="https://github.com/bitcoinjs/bitcoinjs-lib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A javascript Bitcoin library for node.js and browsers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BitcoinJS (bitcoinjs-lib)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/actions/workflows/main_ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/actions/workflows/main_ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Github CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/bitcoinjs-lib&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/bitcoinjs-lib.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square&#34; alt=&#34;code style: prettier&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A javascript Bitcoin library for node.js and browsers. Written in TypeScript, but committing the JS files to verify.&lt;/p&gt; &#xA;&lt;p&gt;Released under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoinjs/bitcoinjs-lib/master/LICENSE&#34;&gt;MIT LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Should I use this in production?&lt;/h2&gt; &#xA;&lt;p&gt;If you are thinking of using the &lt;em&gt;master&lt;/em&gt; branch of this library in production, &lt;strong&gt;stop&lt;/strong&gt;. Master is not stable; it is our development branch, and &lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/tags&#34;&gt;only tagged releases may be classified as stable&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Can I trust this code?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Don&#39;t trust. Verify.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We recommend every user of this library and the &lt;a href=&#34;https://github.com/bitcoinjs&#34;&gt;bitcoinjs&lt;/a&gt; ecosystem audit and verify any underlying code for its validity and suitability, including reviewing any and all of your project&#39;s dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Mistakes and bugs happen, but with your help in resolving and reporting &lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/issues&#34;&gt;issues&lt;/a&gt;, together we can produce open source software that is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to audit and verify,&lt;/li&gt; &#xA; &lt;li&gt;Tested, with test coverage &amp;gt;95%,&lt;/li&gt; &#xA; &lt;li&gt;Advanced and feature rich,&lt;/li&gt; &#xA; &lt;li&gt;Standardized, using &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;prettier&lt;/a&gt; and Node &lt;code&gt;Buffer&lt;/code&gt;&#39;s throughout, and&lt;/li&gt; &#xA; &lt;li&gt;Friendly, with a strong and helpful community, ready to answer questions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Presently, we do not have any formal documentation other than our &lt;a href=&#34;https://raw.githubusercontent.com/bitcoinjs/bitcoinjs-lib/master/#examples&#34;&gt;examples&lt;/a&gt;, please &lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/issues/new&#34;&gt;ask for help&lt;/a&gt; if our examples aren&#39;t enough to guide you.&lt;/p&gt; &#xA;&lt;p&gt;You can find a &lt;a href=&#34;https://bitcoincore.tech/apps/bitcoinjs-ui/index.html&#34;&gt;Web UI&lt;/a&gt; that covers most of the &lt;code&gt;psbt.ts&lt;/code&gt;, &lt;code&gt;transaction.ts&lt;/code&gt; and &lt;code&gt;p2*.ts&lt;/code&gt; APIs &lt;a href=&#34;https://bitcoincore.tech/apps/bitcoinjs-ui/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install bitcoinjs-lib&#xA;# optionally, install a key derivation library as well&#xA;npm install ecpair bip32&#xA;# ecpair is the ECPair class for single keys&#xA;# bip32 is for generating HD keys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Previous versions of the library included classes for key management (ECPair, HDNode(-&amp;gt;&#34;bip32&#34;)) but now these have been separated into different libraries. This lowers the bundle size significantly if you don&#39;t need to perform any crypto functions (converting private to public keys and deriving HD keys).&lt;/p&gt; &#xA;&lt;p&gt;Typically we support the &lt;a href=&#34;https://github.com/nodejs/Release&#34;&gt;Node Maintenance LTS version&lt;/a&gt;. TypeScript target will be set to the ECMAScript version in which all features are fully supported by current Active Node LTS. However, depending on adoption among other environments (browsers etc.) we may keep the target back a year or two. If in doubt, see the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoinjs/bitcoinjs-lib/master/.github/workflows/main_ci.yml&#34;&gt;main_ci.yml&lt;/a&gt; for what versions are used by our continuous integration tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: We presently don&#39;t provide any tooling to verify that the release on &lt;code&gt;npm&lt;/code&gt; matches GitHub. As such, you should verify anything downloaded by &lt;code&gt;npm&lt;/code&gt; against your own verified copy.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Crypto is hard.&lt;/p&gt; &#xA;&lt;p&gt;When working with private keys, the random number generator is fundamentally one of the most important parts of any software you write. For random number generation, we &lt;em&gt;default&lt;/em&gt; to the &lt;a href=&#34;https://github.com/crypto-browserify/randombytes&#34;&gt;&lt;code&gt;randombytes&lt;/code&gt;&lt;/a&gt; module, which uses &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues&#34;&gt;&lt;code&gt;window.crypto.getRandomValues&lt;/code&gt;&lt;/a&gt; in the browser, or Node js&#39; &lt;a href=&#34;https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback&#34;&gt;&lt;code&gt;crypto.randomBytes&lt;/code&gt;&lt;/a&gt;, depending on your build system. Although this default is ~OK, there is no simple way to detect if the underlying RNG provided is good enough, or if it is &lt;strong&gt;catastrophically bad&lt;/strong&gt;. You should always verify this yourself to your own standards.&lt;/p&gt; &#xA;&lt;p&gt;This library uses &lt;a href=&#34;https://github.com/bitcoinjs/tiny-secp256k1&#34;&gt;tiny-secp256k1&lt;/a&gt;, which uses &lt;a href=&#34;https://tools.ietf.org/html/rfc6979&#34;&gt;RFC6979&lt;/a&gt; to help prevent &lt;code&gt;k&lt;/code&gt; re-use and exploitation. Unfortunately, this isn&#39;t a silver bullet. Often, Javascript itself is working against us by bypassing these counter-measures.&lt;/p&gt; &#xA;&lt;p&gt;Problems in &lt;a href=&#34;https://github.com/feross/buffer&#34;&gt;&lt;code&gt;Buffer (UInt8Array)&lt;/code&gt;&lt;/a&gt;, for example, can trivially result in &lt;strong&gt;catastrophic fund loss&lt;/strong&gt; without any warning. It can do this through undermining your random number generation, accidentally producing a &lt;a href=&#34;https://www.nilsschneider.net/2013/01/28/recovering-bitcoin-private-keys.html&#34;&gt;duplicate &lt;code&gt;k&lt;/code&gt; value&lt;/a&gt;, sending Bitcoin to a malformed output script, or any of a million different ways. Running tests in your target environment is important and a recommended step to verify continuously.&lt;/p&gt; &#xA;&lt;p&gt;Finally, &lt;strong&gt;adhere to best practice&lt;/strong&gt;. We are not an authoritative source of best practice, but, at the very least:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.bitcoin.it/wiki/Address_reuse&#34;&gt;Don&#39;t reuse addresses&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t share BIP32 extended public keys (&#39;xpubs&#39;). &lt;a href=&#34;https://bitcoin.stackexchange.com/questions/56916/derivation-of-parent-private-key-from-non-hardened-child&#34;&gt;They are a liability&lt;/a&gt;, and it only takes 1 misplaced private key (or a buggy implementation!) and you are vulnerable to &lt;strong&gt;catastrophic fund loss&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.stackexchange.com/questions/181580/why-is-math-random-not-designed-to-be-cryptographically-secure&#34;&gt;Don&#39;t use &lt;code&gt;Math.random&lt;/code&gt;&lt;/a&gt; - in any way - don&#39;t.&lt;/li&gt; &#xA; &lt;li&gt;Enforce that users always verify (manually) a freshly-decoded human-readable version of their intended transaction before broadcast.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.bitcoin.it/wiki/Brainwallet#cite_note-1&#34;&gt;Don&#39;t &lt;em&gt;ask&lt;/em&gt; users to generate mnemonics&lt;/a&gt;, or &#39;brain wallets&#39;, humans are terrible random number generators.&lt;/li&gt; &#xA; &lt;li&gt;Lastly, if you can, use &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt; or similar.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Browser&lt;/h3&gt; &#xA;&lt;p&gt;The recommended method of using &lt;code&gt;bitcoinjs-lib&lt;/code&gt; in your browser is through &lt;a href=&#34;http://browserify.org/&#34;&gt;browserify&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to use a different (more modern) build tool than &lt;code&gt;browserify&lt;/code&gt;, you can compile just this library and its dependencies into a single JavaScript file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install bitcoinjs-lib browserify&#xA;$ npx browserify --standalone bitcoin - -o bitcoinjs-lib.js &amp;lt;&amp;lt;&amp;lt;&#34;module.exports = require(&#39;bitcoinjs-lib&#39;);&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which you can then import as an ESM module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script type=&#34;module&#34;&amp;gt;import &#34;/scripts/bitcoinjs-lib.js&#34;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: We use Node Maintenance LTS features, if you need strict ES5, use &lt;a href=&#34;https://github.com/babel/babelify&#34;&gt;&lt;code&gt;--transform babelify&lt;/code&gt;&lt;/a&gt; in conjunction with your &lt;code&gt;browserify&lt;/code&gt; step (using an &lt;a href=&#34;https://babeljs.io/docs/plugins/preset-es2015/&#34;&gt;&lt;code&gt;es2015&lt;/code&gt;&lt;/a&gt; preset).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: iOS devices have &lt;a href=&#34;https://github.com/feross/buffer/issues/136&#34;&gt;problems&lt;/a&gt;, use at least &lt;a href=&#34;https://github.com/feross/buffer/pull/155&#34;&gt;buffer@5.0.5&lt;/a&gt; or greater, and enforce the test suites (for &lt;code&gt;Buffer&lt;/code&gt;, and any other dependency) pass before use.&lt;/p&gt; &#xA;&lt;h3&gt;Typescript or VSCode users&lt;/h3&gt; &#xA;&lt;p&gt;Type declarations for Typescript are included in this library. Normal installation should include all the needed type information.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The below examples are implemented as integration tests, they should be very easy to understand. Otherwise, pull requests are appreciated. Some examples interact (via HTTPS) with a 3rd Party Blockchain Provider (3PBP).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/taproot.spec.ts&#34;&gt;Taproot Key Spend&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a random address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Import an address via WIF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a 2-of-3 P2SH multisig address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a SegWit address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a SegWit P2SH address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a SegWit 3-of-4 multisig address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a SegWit 2-of-2 P2SH multisig address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Support the retrieval of transactions for an address (3rd party blockchain)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a Testnet address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/addresses.spec.ts&#34;&gt;Generate a Litecoin address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create a 1-to-1 Transaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a typical Transaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with an OP_RETURN output&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with a 2-of-4 P2SH(multisig) input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with a SegWit P2SH(P2WPKH) input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with a SegWit P2WPKH input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with a SegWit P2PK input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction with a SegWit 3-of-4 P2SH(P2WSH(multisig)) input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/transactions.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction and sign with an HDSigner interface (bip32)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Import a BIP32 testnet xpriv and export to WIF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Export a BIP32 xpriv, then import it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Export a BIP32 xpub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Create a BIP32, bitcoin, account 0, external address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Create a BIP44, bitcoin, account 0, external address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Create a BIP49, bitcoin testnet, account 0, external address&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/bip32.spec.ts&#34;&gt;Use BIP39 to generate BIP32 addresses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/cltv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice can redeem the output after the expiry (in the past)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/cltv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice can redeem the output after the expiry (in the future)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/cltv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice and Bob can redeem the output at any time&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/cltv.spec.ts&#34;&gt;Create (but fail to broadcast via 3PBP) a Transaction where Alice attempts to redeem before the expiry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/csv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice can redeem the output after the expiry (in the future) (simple CHECKSEQUENCEVERIFY)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/csv.spec.ts&#34;&gt;Create (but fail to broadcast via 3PBP) a Transaction where Alice attempts to redeem before the expiry (simple CHECKSEQUENCEVERIFY)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/csv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Bob and Charles can send (complex CHECKSEQUENCEVERIFY)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/csv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice (mediator) and Bob can send after 2 blocks (complex CHECKSEQUENCEVERIFY)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/raw/master/test/integration/csv.spec.ts&#34;&gt;Create (and broadcast via 3PBP) a Transaction where Alice (mediator) can send after 5 blocks (complex CHECKSEQUENCEVERIFY)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have a use case that you feel could be listed here, please &lt;a href=&#34;https://github.com/bitcoinjs/bitcoinjs-lib/issues/new&#34;&gt;ask for it&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/bitcoinjs/bitcoinjs-lib/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running the test suite&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm test&#xA;npm run-script coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Complementing Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip21&#34;&gt;BIP21&lt;/a&gt; - A BIP21 compatible URL encoding library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip38&#34;&gt;BIP38&lt;/a&gt; - Passphrase-protected private keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip39&#34;&gt;BIP39&lt;/a&gt; - Mnemonic generation for deterministic keys&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip32-utils&#34;&gt;BIP32-Utils&lt;/a&gt; - A set of utilities for working with BIP32&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip66&#34;&gt;BIP66&lt;/a&gt; - Strict DER signature decoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip68&#34;&gt;BIP68&lt;/a&gt; - Relative lock-time encoding library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bip69&#34;&gt;BIP69&lt;/a&gt; - Lexicographical Indexing of Transaction Inputs and Outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cryptocoinjs/bs58&#34;&gt;Base58&lt;/a&gt; - Base58 encoding/decoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bs58check&#34;&gt;Base58 Check&lt;/a&gt; - Base58 check encoding/decoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/bech32&#34;&gt;Bech32&lt;/a&gt; - A BIP173/BIP350 compliant Bech32/Bech32m encoding library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/coinselect&#34;&gt;coinselect&lt;/a&gt; - A fee-optimizing, transaction input selection module for bitcoinjs-lib.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/merkle-lib&#34;&gt;merkle-lib&lt;/a&gt; - A performance conscious library for merkle root and tree calculations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoinjs/minimaldata&#34;&gt;minimaldata&lt;/a&gt; - A module to check bitcoin policy: SCRIPT_VERIFY_MINIMALDATA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/indutny/bcoin&#34;&gt;BCoin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitpay/bitcore&#34;&gt;Bitcore&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cryptocoinjs/cryptocoin&#34;&gt;Cryptocoin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LICENSE &lt;a href=&#34;https://raw.githubusercontent.com/bitcoinjs/bitcoinjs-lib/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
</feed>