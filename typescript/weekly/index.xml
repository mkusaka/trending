<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-13T01:51:48Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nuxt/framework</title>
    <updated>2022-11-13T01:51:48Z</updated>
    <id>tag:github.com,2022-11-13:/nuxt/framework</id>
    <link href="https://github.com/nuxt/framework" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Intuitive Web Framework, based on Vue 3.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nuxt/framework/main/.github/logo-light.svg#gh-dark-mode-only&#34; alt=&#34;NuxtJS-Logo-Dark&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nuxt/framework/main/.github/logo.svg#gh-light-mode-only&#34; alt=&#34;NuxtJS-Logo-Light&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.npmjs.com/package/nuxt/v/rc&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/nuxt/rc.svg?style=flat&amp;amp;colorA=002438&amp;amp;colorB=28CF8D&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/nuxt/v/rc&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/nuxt.svg?style=flat&amp;amp;colorA=002438&amp;amp;colorB=28CF8D&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nuxt/framework/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/nuxt/framework.svg?style=flat&amp;amp;colorA=002438&amp;amp;colorB=28CF8D&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.nuxtjs.org/&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/Discord/join-us/7289DA&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Welcome to Nuxt 3 repository: &lt;strong&gt;The Intuitive Web Framework&lt;/strong&gt; ‚ú®&lt;/p&gt; &#xA;&lt;p&gt;Nuxt&#39;s goal is to make web development intuitive and performant with a great developer experience in mind, learn more in the &lt;a href=&#34;https://v3.nuxtjs.org/guide/concepts/introduction&#34;&gt;&#34;What is Nuxt?&#34;&lt;/a&gt; section of our documentation.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;üìñ Documentation&lt;/h2&gt; &lt;p&gt; Read &lt;a href=&#34;https://v3.nuxtjs.org&#34;&gt;Online Docs&lt;/a&gt;. &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;h2&gt;üêû Reporting bugs&lt;/h2&gt; &lt;p&gt; Check out &lt;a href=&#34;https://v3.nuxtjs.org/community/reporting-bugs&#34;&gt;Reporting Bugs&lt;/a&gt; page.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;üí° Suggestions &lt;/h2&gt; &lt;p&gt; Check out &lt;a href=&#34;https://v3.nuxtjs.org/community/contribution&#34;&gt;Contribution&lt;/a&gt; page. &lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;h2&gt;‚ùî Questions&lt;/h2&gt; &lt;p&gt; Check out &lt;a href=&#34;https://v3.nuxtjs.org/community/getting-help&#34;&gt;Getting Help&lt;/a&gt; page. &lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;Follow the docs to &lt;a href=&#34;https://v3.nuxtjs.org/community/framework-contribution#set-up-your-local-development-environment&#34;&gt;Set Up Your Local Development Environment&lt;/a&gt; to contribute to the framework and documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nuxt/framework/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>containers/podman-desktop</title>
    <updated>2022-11-13T01:51:48Z</updated>
    <id>tag:github.com,2022-11-13:/containers/podman-desktop</id>
    <link href="https://github.com/containers/podman-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Podman Desktop - A graphical tool for developing on containers and Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Podman Desktop - A graphical tool for developing on containers and Kubernetes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Podman Desktop&#34; src=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/website/static/img/features/manage-containers.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#overview&#34;&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#download&#34;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#download&#34;&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#join-our-early-adopter-program-optional&#34;&gt;&lt;strong&gt;Join Our Early Adopter Program (Optional)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#roadmap&#34;&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#contributing&#34;&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#communication&#34;&gt;&lt;strong&gt;Communication&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#code-of-conduct&#34;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#license&#34;&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Podman Desktop is a graphical interface that enables application developers to seamlessly work with containers and Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;Podman Desktop installs, configures and keeps Podman up to date on your local environment. It provides a system tray, to check status and interact with your container engine without losing focus from other tasks. The desktop application provides a dashboard to interact with containers, images, pods and volumes but also configures your environment with your OCI registries and network settings. Podman Desktop also provides capabilities to connect and deploy pods to Kubernetes environments.&lt;/p&gt; &#xA;&lt;p&gt;Podman Desktop also supports &lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/#multiple-container-engine-support&#34;&gt;multiple container engines&lt;/a&gt;, pick your favourite one and use the tool!&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Check the downloads page on &lt;a href=&#34;https://podman-desktop.io/downloads&#34;&gt;podman-desktop.io/downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h4&gt;Containers and pods dashboard&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build, run, manage, and debug both containers and pods&lt;/li&gt; &#xA; &lt;li&gt;Run Pods on your container engine or with Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Convert your Pods to be running on Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Manage multiple container engines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Multiple container engine support&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containers/podman&#34;&gt;Podman container engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/code-ready/crc&#34;&gt;crc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lima-vm/lima&#34;&gt;Podman Lima machines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moby/moby&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Podman engine update support&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keep &lt;code&gt;podman&lt;/code&gt; up-to-date on your PC by having Podman Desktop automatically install the newest version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;System tray support&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Manage your Container engine&lt;/li&gt; &#xA; &lt;li&gt;Define your Kubernetes context&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Enterprise capabilities&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Proxy Support&lt;/li&gt; &#xA; &lt;li&gt;OCI Image registries management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Bridge between local and remote environments&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect and deploy to both local or remote Kubernetes environments&lt;/li&gt; &#xA; &lt;li&gt;Change your Kubernetes context and pick your deployment environment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Join our early adopter program! (optional)&lt;/h2&gt; &#xA;&lt;p&gt;We are seeking developers who are interested in improving Podman Desktop!&lt;/p&gt; &#xA;&lt;p&gt;Register your interest to join our Early Adopter Program by filling &lt;a href=&#34;https://forms.gle/ow73dV7Ce3YLzoXH7&#34; target=&#34;_blank&#34;&gt;this form&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is totally &lt;em&gt;optional&lt;/em&gt; and does not change any Podman Desktop features.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;All upcoming features are tracked with GitHub milestones.&lt;/p&gt; &#xA;&lt;p&gt;Check out all our &lt;a href=&#34;https://github.com/containers/podman-desktop/milestones&#34;&gt;future features!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Interested in fixing issues or contributing to Podman Desktop?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üêõ&lt;/span&gt; &lt;a href=&#34;https://github.com/containers/podman-desktop/issues/new/choose&#34;&gt;File bugs or feature requests on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üèÅ&lt;/span&gt; &lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/CONTRIBUTING.md&#34;&gt;Read our contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üëå&lt;/span&gt; &lt;a href=&#34;https://github.com/containers/podman-desktop/pulls&#34;&gt;Review or contribute a pull request&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p&gt;For all bug and feature requests please &lt;a href=&#34;https://github.com/containers/podman-desktop/issues/new/choose&#34;&gt;file a GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Discussions are done using &lt;a href=&#34;https://github.com/containers/podman-desktop/discussions/&#34;&gt;Github Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://app.slack.com/client/T09NY5SBT/C04A0L7LUFM&#34;&gt;#podman-desktop&lt;/a&gt; on the &lt;a href=&#34;https://slack.k8s.io/&#34;&gt;Kubernetes Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Hangout with us on &lt;a href=&#34;https://discordapp.com/invite/TCTB38RWpf&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://github.com/containers/common/raw/main/CODE-OF-CONDUCT.md&#34;&gt;Containers Community Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/containers/podman-desktop/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>solidjs/solid-start</title>
    <updated>2022-11-13T01:51:48Z</updated>
    <id>tag:github.com,2022-11-13:/solidjs/solid-start</id>
    <link href="https://github.com/solidjs/solid-start" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SolidStart, the Solid app framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;img width=&#34;100%&#34; src=&#34;https://assets.solidjs.com/banner?project=Start&amp;amp;type=core&#34; alt=&#34;Solid Docs&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;SolidStart&lt;/h1&gt; &#xA;&lt;p&gt;This is the home of the Solid app framework. This is still a &lt;strong&gt;work in progress&lt;/strong&gt;. Many features are missing or incomplete. Experimental status does not even mean beta status. Patch releases will break everything.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File-system based routing&lt;/li&gt; &#xA; &lt;li&gt;Supports all rendering modes: Server-side rendering (SSR), Client-side rendering (CSR), Static Site Generation (SSG)&lt;/li&gt; &#xA; &lt;li&gt;Streaming&lt;/li&gt; &#xA; &lt;li&gt;Build optimizations with Code splitting, tree shaking and dead code elimination&lt;/li&gt; &#xA; &lt;li&gt;API Routes&lt;/li&gt; &#xA; &lt;li&gt;Built on Web standards: Fetch, Streams, WebCrypto&lt;/li&gt; &#xA; &lt;li&gt;Adapters for deployment to all popular platforms&lt;/li&gt; &#xA; &lt;li&gt;CSS Modules, SASS/SCSS Support&lt;/li&gt; &#xA; &lt;li&gt;Typescript-first&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir my-app&#xA;cd my-app&#xA;npm init solid&#xA;npm install&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;The monorepo uses &lt;code&gt;pnpm&lt;/code&gt; as the package manager. To install &lt;code&gt;pnpm&lt;/code&gt;, run the following command in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g pnpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;pnpm install&lt;/code&gt; to install all the dependencies for the packages and examples in your monorepo.&lt;/p&gt; &#xA;&lt;!-- &lt;details&gt; --&gt; &#xA;&lt;!-- &lt;summary&gt; --&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;h4&gt;Monorepo &amp;amp; &lt;code&gt;project.json&lt;/code&gt; &lt;code&gt;&#34;workspace&#34;&lt;/code&gt; support&lt;/h4&gt; &lt;/summary&gt; &#xA; &lt;p&gt;If you are using Solid Start within a monorepo that takes advantage of the &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;&#34;workspaces&#34;&lt;/code&gt; property (e.g. &lt;a href=&#34;https://classic.yarnpkg.com/en/docs/workspaces/&#34;&gt;yarn workspaces&lt;/a&gt;) with hoisted dependencies (the default for yarn), you must include &lt;code&gt;solid-start&lt;/code&gt; within the optional &lt;code&gt;&#34;nohoist&#34;&lt;/code&gt; (for yarn v2 or higher, see further down for instructions) workspaces property.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;em&gt;In the following, &#34;workspace root&#34; refers to the root of your repository while &#34;project root&#34; refers to the root of a child package within your repository&lt;/em&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;For example, if specifying &lt;code&gt;&#34;nohoist&#34;&lt;/code&gt; options from the workspace root (i.e. for all packages):&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;// in workspace root&#xA;{&#xA;  &#34;workspaces&#34;: {&#xA;    &#34;packages&#34;: [&#xA;      /* ... */&#xA;    ],&#xA;    &#34;nohoist&#34;: [&#34;**/solid-start&#34;]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If specifying &lt;code&gt;&#34;nohoist&#34;&lt;/code&gt; options for a specific package using &lt;code&gt;solid-start&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;// in project root of a workspace child&#xA;{&#xA;  &#34;workspaces&#34;: {&#xA;    &#34;nohoist&#34;: [&#34;solid-start&#34;]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Regardless of where you specify the nohoist option, you also need to include &lt;code&gt;solid-start&lt;/code&gt; as a devDependency in the child &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;The reason why this is necessary is because &lt;code&gt;solid-start&lt;/code&gt; creates an &lt;code&gt;index.html&lt;/code&gt; file within your project which expects to load a script located in &lt;code&gt;/node_modules/solid-start/runtime/entry.jsx&lt;/code&gt; (where &lt;code&gt;/&lt;/code&gt; is the path of your project root). By default, if you hoist the &lt;code&gt;solid-start&lt;/code&gt; dependency into the workspace root then that script will not be available within the package&#39;s &lt;code&gt;node_modules&lt;/code&gt; folder.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Yarn v2 or higher&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;The &lt;code&gt;nohoist&lt;/code&gt; option is no longer available in Yarn v2+. In this case, we can use the &lt;code&gt;installConfig&lt;/code&gt; property in the &lt;code&gt;package.json&lt;/code&gt; (either workspace package or a specific project package) to make sure our deps are not hoisted.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;// in project root of a workspace child&#xA;{&#xA;  &#34;installConfig&#34;: {&#xA;    &#34;hoistingLimits&#34;: &#34;dependencies&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;[0.1.6]&lt;/h3&gt; &#xA;&lt;p&gt;Renamed API Routes exports from lower case to upper case method names to match closely how people see those functions in the spec and in usage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;&#xA;- export function get() {&#xA;+ export function GET() {&#xA;  return new Response();&#xA;}&#xA;&#xA;- export function post() {&#xA;+ export function POST() {&#xA;&#xA;  return new Response();&#xA;}&#xA;&#xA;- export function patch() {&#xA;+ export function PATCH() {&#xA;  return new Response();&#xA;}&#xA;&#xA;- export function del() {&#xA;+ export function DELETE() {&#xA;  return new Response();&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;[0.1.0-alpha.104]&lt;/h3&gt; &#xA;&lt;p&gt;Changed grouped routes from &lt;code&gt;__name&lt;/code&gt; syntax to &lt;code&gt;(name)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;[0.1.0-alpha.103]&lt;/h3&gt; &#xA;&lt;p&gt;Changed special compiled functions like &lt;code&gt;server&lt;/code&gt;, &lt;code&gt;createServerData&lt;/code&gt;, &lt;code&gt;createServerAction$&lt;/code&gt;, &lt;code&gt;createServerMultiAction$&lt;/code&gt;. to have a postfix &lt;code&gt;$&lt;/code&gt; to indicate their special compiled (hoisted behavior).&lt;/p&gt; &#xA;&lt;p&gt;Also moved the optional first argument of &lt;code&gt;createServerData$&lt;/code&gt; under &lt;code&gt;key&lt;/code&gt; option. While this hides a very important option it makes the signatures more similar, so it is clear it is the main (first) function that is running on the server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const data = createServerData$(&#xA;  async pathname =&amp;gt; {&#xA;    let mod = mods[`./docs${pathname}.mdx`] ?? mods[`./docs${pathname}.md`];&#xA;    return mod.getHeadings().filter(h =&amp;gt; h.depth &amp;gt; 1 &amp;amp;&amp;amp; h.depth &amp;lt;= 3);&#xA;  },&#xA;  {&#xA;    key: () =&amp;gt; path.pathname&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- &lt;/summary&gt; --&gt; &#xA;&lt;h3&gt;[0.1.0-alpha.??] - Moving towards beta&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;&#xA;   &lt;mono&gt;&#xA;    vite.config.ts&#xA;   &lt;/mono&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- import solid from &#39;solid-start&#39;;&#xA;+ import solid from &#39;solid-start/vite&#39;;&#xA;import { defineConfig } from &#39;vite&#39;;&#xA;export default defineConfig({&#xA;  plugins: [solid()]&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Why?&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;We wanted to use the main entry point of &lt;code&gt;solid-start&lt;/code&gt; for use within the app where you are spending most of your time. And for the &lt;code&gt;vite&lt;/code&gt; config, we use the &lt;code&gt;solid-start/vite&lt;/code&gt; entrypoint.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;&#xA;   &lt;mono&gt;&#xA;    entry-server.tsx&#xA;   &lt;/mono&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;import { createHandler, renderAsync, StartServer } from &#34;solid-start/entry-server&#34;;&#xA;&#xA;- export default createHandler(renderAsync(context =&amp;gt; &amp;lt;StartServer context={context} /&amp;gt;));&#xA;+ export default createHandler(renderAsync(event =&amp;gt; &amp;lt;StartServer event={event} /&amp;gt;));&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Why?&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;The prop received by &lt;code&gt;StartServer&lt;/code&gt;, and given to you by &lt;code&gt;createHandler&lt;/code&gt; is called &lt;code&gt;event&lt;/code&gt; instead of &lt;code&gt;context&lt;/code&gt;. It represents a &lt;code&gt;PageEvent&lt;/code&gt; which is a &lt;code&gt;FetchEvent&lt;/code&gt; that the server decided should be rendered by our components as a &lt;code&gt;Page&lt;/code&gt;. We adopted the &lt;code&gt;event&lt;/code&gt; terminology to represent the input that our server handlers received. For example, the input to our top-level server handler is a &lt;code&gt;FetchEvent&lt;/code&gt;. It can then be routed to a server function and be passed as a &lt;code&gt;ServerFunctionEvent&lt;/code&gt; or to an API Endpoint as an &lt;code&gt;ApiEvent&lt;/code&gt;. This terminology is adopted from the ServiceWorker API and Cloudflare Workers API.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;&#xA;   &lt;mono&gt;&#xA;    entry-client.tsx&#xA;   &lt;/mono&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;p&gt;If you were using SSR:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- import { hydrate } from &#34;solid-js&#34;;&#xA;- import { StartClient } from &#34;solid-start/entry-client&#34;;&#xA;+ import { mount, StartClient } from &#34;solid-start/entry-client&#34;;&#xA;&#xA;- hydrate(() =&amp;gt; &amp;lt;StartClient /&amp;gt;, document);&#xA;+ mount(() =&amp;gt; &amp;lt;StartClient /&amp;gt;, document);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you were not using SSR and rendering your app client-side:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- import { render } from &#34;solid-js&#34;;&#xA;- import { StartClient } from &#34;solid-start/entry-client&#34;;&#xA;+ import { mount, StartClient } from &#34;solid-start/entry-client&#34;;&#xA;&#xA;- render(() =&amp;gt; &amp;lt;StartClient /&amp;gt;, document.body);&#xA;+ mount(() =&amp;gt; &amp;lt;StartClient /&amp;gt;, document);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Why?&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Earlier, you called &lt;code&gt;hydrate(document)&lt;/code&gt; or &lt;code&gt;render(document.body)&lt;/code&gt; here based on what kind of rendering mode you had selected and whether you had SSR turned on. We felt this was slightly annoying to change if you wanted to switch between the modes and error prone if you are not careful and end up passing &lt;code&gt;document&lt;/code&gt; to &lt;code&gt;render&lt;/code&gt; instead.&lt;/p&gt; &lt;p&gt;We still wanted to expose &lt;code&gt;entry-client.tsx&lt;/code&gt; to the user so that they can take over and do their own thing here if they want. We made a helper function called &lt;code&gt;mount&lt;/code&gt; that embeds the logic for deciding how to interact with the app we get from the server, be it &lt;code&gt;hydrate&lt;/code&gt; or &lt;code&gt;render&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;&#xA;   &lt;mono&gt;&#xA;    root.tsx&#xA;   &lt;/mono&gt;&lt;/h3&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;// @refresh reload&#xA;import { Suspense } from &#34;solid-js&#34;;&#xA;- import { Meta, Link, Routes, Scripts } from &#34;solid-start/root&#34;;&#xA;+ import { FileRoutes, Scripts, Html, Head, Body, Routes, Meta, ErrorBoundary, A } from &#34;solid-start&#34;;&#xA;&#xA;export default function Root() {&#xA;  return (&#xA;-    &amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;+    &amp;lt;Html lang=&#34;en&#34;&amp;gt;&#xA;-      &amp;lt;head&amp;gt;&#xA;+      &amp;lt;Head&amp;gt;&#xA;&#xA;-        &amp;lt;meta charset=&#34;utf-8&#34; /&amp;gt;&#xA;+        &amp;lt;Meta charset=&#34;utf-8&#34; /&amp;gt;&#xA;-        &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34; /&amp;gt;&#xA;+        &amp;lt;Meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34; /&amp;gt;&#xA;&#xA;-        &amp;lt;Meta /&amp;gt; // already exists inside `Head`&#xA;-        &amp;lt;Links /&amp;gt; // already exists inside `Head`&#xA;&#xA;-      &amp;lt;/head&amp;gt;&#xA;+      &amp;lt;/Head&amp;gt;&#xA;-      &amp;lt;body&amp;gt;&#xA;+      &amp;lt;Body&amp;gt;&#xA;         &amp;lt;Suspense&amp;gt;&#xA;           &amp;lt;ErrorBoundary&amp;gt;&#xA;             &amp;lt;A href=&#34;/&#34;&amp;gt;Index&amp;lt;/A&amp;gt;&#xA;             &amp;lt;A href=&#34;/about&#34;&amp;gt;About&amp;lt;/A&amp;gt;&#xA;-            &amp;lt;Routes /&amp;gt;&#xA;+            &amp;lt;Routes&amp;gt;&#xA;+              &amp;lt;FileRoutes /&amp;gt;&#xA;+            &amp;lt;/Routes&amp;gt;&#xA;           &amp;lt;/ErrorBoundary&amp;gt;&#xA;         &amp;lt;/Suspense&amp;gt;&#xA;         &amp;lt;Scripts /&amp;gt;&#xA;-     &amp;lt;/body&amp;gt;&#xA;+     &amp;lt;/Body&amp;gt;&#xA;-   &amp;lt;/html&amp;gt;&#xA;+   &amp;lt;/Html&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Why?&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;We changed how we declare our routes to make it more flexible. Earlier we gave you a &lt;code&gt;Routes&lt;/code&gt; component from &lt;code&gt;solid-start&lt;/code&gt; that was equivalent to rendering a &lt;code&gt;Routes&lt;/code&gt; from &lt;code&gt;@solidjs/router&lt;/code&gt; (yeah we know its confusing, that&#39;s why we are changing it) and filling it with the routes from the file system. The opt-in to the file-system routing was all-in or nothing. You didn&#39;t have an opportunity to add more &lt;code&gt;Route&lt;/code&gt;s. We now export &lt;code&gt;FileRoutes&lt;/code&gt; from &lt;code&gt;solid-start&lt;/code&gt; that represents the route config based on the file-system. It is meant to be passed to the &lt;code&gt;Routes&lt;/code&gt; component from &lt;code&gt;solid-start&lt;/code&gt; or wherever you want to use the file-system routes config.&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;You can use it together with other &lt;code&gt;Route&lt;/code&gt; components. &lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&amp;lt;Routes&amp;gt;&#xA;  &amp;lt;FileRoutes /&amp;gt;&#xA;  &amp;lt;Route path=&#34;/somewhere&#34; component={SomeComponent} /&amp;gt;&#xA;&amp;lt;/Routes&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt;Also for quickly starting an app without creating a bunch of files, you can define your routes in a single file. We generally don&#39;t recommend this since it&#39;s a good idea to code split your app along your routes, but its a neat trick. &lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;&amp;lt;Routes&amp;gt;&#xA;  &amp;lt;Route path=&#34;/somewhere&#34; component={SomeComponent} /&amp;gt;&#xA;&amp;lt;/Routes&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;For consistency between the SSR and client-side rendering modes, we needed to take more control of &lt;code&gt;root.tsx&lt;/code&gt; specifically, we couldnt just take &lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; tags and allow them to be part of the component tree since we can&#39;t client-side render the whole document. We only really get to take over &lt;code&gt;document.body&lt;/code&gt;. We needed to ship with special &lt;code&gt;Html&lt;/code&gt;, &lt;code&gt;Head&lt;/code&gt;, and &lt;code&gt;Body&lt;/code&gt; components that you use in &lt;code&gt;root.tsx&lt;/code&gt; instead of the lower-case counterparts. These document flow components know what to do whether you are in SSR mode on or off.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;We can avoid you having to include &lt;code&gt;Meta&lt;/code&gt; and &lt;code&gt;Links&lt;/code&gt; from &lt;code&gt;solid-start/root&lt;/code&gt; in your &lt;code&gt;head&lt;/code&gt; since we do it by default.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;We will always use the title-case variants of the tags used in &lt;code&gt;head&lt;/code&gt; (eg. &lt;code&gt;Link&lt;/code&gt; &amp;gt; &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;Style&lt;/code&gt; &amp;gt; &lt;code&gt;style&lt;/code&gt;, &lt;code&gt;Meta&lt;/code&gt; &amp;gt; &lt;code&gt;meta&lt;/code&gt;) for consistency throughout the app&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;solid-meta&lt;/code&gt; is renamed to &lt;code&gt;@solidjs/meta&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;solid-app-router&lt;/code&gt; is renamed to &lt;code&gt;@solidjs/router&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;code&gt;solid-start&lt;/code&gt; exports all the components meant to be used in your app and these components work on the client and server. Sometimes they are the same on both, and other times they coordinate between the two.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Now, our &lt;code&gt;root.tsx&lt;/code&gt; even more closely replicates how you would be writing your &lt;code&gt;index.html&lt;/code&gt;. And this was intentionally done so that we could enable an SPA mode for you that used the same code as the SSR mode without changing anything. How we do this? At build time for SPA mode, we quickly run the vite server, and make a request for your app&#39;s index and we tell our &lt;code&gt;Body&lt;/code&gt; component not to render anything. So the index.html we get is the one you would have written. We then use that &lt;code&gt;index.html&lt;/code&gt; as your entrypoint. You can still write your own &lt;code&gt;index.html&lt;/code&gt; if you don&#39;t want to use this functionality.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;createServerResource -&amp;gt; createServerData$&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;&#xA;export function routeData() {&#xA;-  return createServerResource(async (_, { request }) =&amp;gt; {&#xA;+  return createServerData$(async (_, { request }) =&amp;gt; {&#xA;    const user = await getUser(request);&#xA;&#xA;    if (!user) {&#xA;      throw redirect(&#34;/login&#34;);&#xA;    }&#xA;&#xA;    return user;&#xA;  });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Renamed &lt;code&gt;createServerResource&lt;/code&gt; to &lt;code&gt;createServerData$&lt;/code&gt;, and &lt;code&gt;createRouteResource&lt;/code&gt; to &lt;code&gt;createRouteData&lt;/code&gt;: We renamed &lt;code&gt;createServerResource&lt;/code&gt; to &lt;code&gt;createServerData$&lt;/code&gt; because we were not using the &lt;code&gt;createResource&lt;/code&gt; signature and that was confusing and we needed to indicate the function was compiled. We just return one single signal from &lt;code&gt;createServerData$&lt;/code&gt; instead of a tuple like &lt;code&gt;createResource&lt;/code&gt; does. And we have moved the source into the options as &lt;code&gt;key&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;createServerAction$, createServerMultiAction$&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;- const logoutAction = createServerAction(() =&amp;gt; logout(server.request));&#xA;+ const [logginOut, logOut] = createServerAction$((_, { request }) =&amp;gt; logout(request));&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;We pass in a &lt;code&gt;ServerFunctionEvent&lt;/code&gt; which has a &lt;code&gt;request&lt;/code&gt; field as the second argument to server actions. You can use this to access to the HTTP Request sent for your action and get the headers from it for things like auth.&lt;/p&gt; &#xA; &lt;p&gt;We now return a tuple where the first argument is the current submission, and the second is the submit function it also has a progressive enhancible form attached to it &lt;code&gt;logout.Form&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h3&gt;üÜï HttpStatusCode, HttpHeader&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;export default function NotFound() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;HttpStatusCode code={404} /&amp;gt;&#xA;      &amp;lt;HttpHeader name=&#34;my-header&#34; value=&#34;header-value&#34; /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;p&gt;All credit for the work on Forms and Sessions goes to the @remix-run team, MIT License, Copyright 2021 Remix Software Inc.&lt;/p&gt;</summary>
  </entry>
</feed>