<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-26T02:06:07Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gothinkster/realworld</title>
    <updated>2023-02-26T02:06:07Z</updated>
    <id>tag:github.com,2023-02-26:/gothinkster/realworld</id>
    <link href="https://github.com/gothinkster/realworld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#34;The mother of all demo apps&#34; ‚Äî Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more üèÖ&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gothinkster/realworld/main/media/realworld-dual-mode.png&#34; alt=&#34;RealWorld Example Applications&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; style=&#34;margin-top: 30px;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gothinkster/realworld/main/media/stacks_hr.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.realworld.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gothinkster/realworld/main/media/conduit_l.png&#34; align=&#34;right&#34; width=&#34;250px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;See how &lt;em&gt;the exact same&lt;/em&gt; Medium.com clone (called &lt;a href=&#34;https://demo.realworld.io&#34;&gt;Conduit&lt;/a&gt;) is built using different &lt;a href=&#34;https://codebase.show/projects/realworld?category=frontend&#34;&gt;frontends&lt;/a&gt; and &lt;a href=&#34;https://codebase.show/projects/realworld?category=backend&#34;&gt;backends&lt;/a&gt;. Yes, you can mix and match them, because &lt;strong&gt;they all adhere to the same &lt;a href=&#34;https://realworld-docs.netlify.app/docs/specs/backend-specs/introduction&#34;&gt;API spec&lt;/a&gt;&lt;/strong&gt; üòÆüòé&lt;/h3&gt; &#xA;&lt;p&gt;While most &#34;todo&#34; demos provide an excellent cursory glance at a framework&#39;s capabilities, they typically don&#39;t convey the knowledge &amp;amp; perspective required to actually build &lt;em&gt;real&lt;/em&gt; applications with it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;RealWorld&lt;/strong&gt; solves this by allowing you to choose any frontend (React, Angular, &amp;amp; more) and any backend (Node, Django, &amp;amp; more) and see how they power a real-world, beautifully designed full-stack app called &lt;a href=&#34;https://demo.realworld.io&#34;&gt;&lt;strong&gt;Conduit&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Read the &lt;a href=&#34;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&#34;&gt;full blog post announcing RealWorld on Medium.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Join us on &lt;a href=&#34;https://github.com/gothinkster/realworld/discussions&#34;&gt;GitHub Discussions!&lt;/a&gt; üéâ&lt;/p&gt; &#xA;&lt;h1&gt;Implementations&lt;/h1&gt; &#xA;&lt;p&gt;Over 100 implementations have been created using various languages, libraries, and frameworks.&lt;/p&gt; &#xA;&lt;p&gt;Explore them on &lt;a href=&#34;https://codebase.show/projects/realworld&#34;&gt;&lt;strong&gt;CodebaseShow&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Create a new implementation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://realworld-docs.netlify.app/docs/implementation-creation/introduction&#34;&gt;&lt;strong&gt;Create a new implementation &amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or you can &lt;a href=&#34;https://github.com/gothinkster/realworld/discussions/categories/wip-implementations&#34;&gt;view upcoming implementations (WIPs)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Learn more&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&#34;&gt;&#34;Introducing RealWorld üôå&#34;&lt;/a&gt; by Eric Simons&lt;/li&gt; &#xA; &lt;li&gt;Every tutorial is built against the same &lt;a href=&#34;https://raw.githubusercontent.com/gothinkster/realworld/main/api/&#34;&gt;API spec&lt;/a&gt; to ensure modularity of every frontend &amp;amp; backend&lt;/li&gt; &#xA; &lt;li&gt;Every frontend utilizes the same handcrafted &lt;a href=&#34;https://github.com/gothinkster/conduit-bootstrap-template&#34;&gt;Bootstrap 4 theme&lt;/a&gt; for identical UI/UX&lt;/li&gt; &#xA; &lt;li&gt;There is a hosted version of the backend API available for public usage, no API keys are required&lt;/li&gt; &#xA; &lt;li&gt;Interested in creating a new RealWorld stack? View our &lt;a href=&#34;https://realworld-docs.netlify.app/docs/implementation-creation/introduction&#34;&gt;starter guide &amp;amp; spec&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Active Maintainers&lt;/h1&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/geromegrignon&#34;&gt;G√©r√¥me Grignon&lt;/a&gt; - Maintainer&lt;/h4&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;40&#34; height=&#34;40&#34; src=&#34;https://avatars.githubusercontent.com/u/32737308?v=4&#34;&gt; &#xA;&lt;p&gt;G√©r√¥me is a Software Engineer at Sfeir. He&#39;s an open-source enthusiast.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/mvila&#34;&gt;Manuel Vila&lt;/a&gt; - Maintainer&lt;/h4&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;40&#34; height=&#34;40&#34; src=&#34;https://avatars.githubusercontent.com/u/381671?v=40&#34;&gt; &#xA;&lt;p&gt;Manuel is an independent Software Engineer, creator of the &lt;a href=&#34;https://layrjs.com&#34;&gt;Layr framework&lt;/a&gt; and the &lt;a href=&#34;https://codebase.show/&#34;&gt;CodebaseShow website&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://thinkster.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gothinkster/realworld/main/media/end.png&#34; alt=&#34;Brought to you by Thinkster&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cfortuner/promptable</title>
    <updated>2023-02-26T02:06:07Z</updated>
    <id>tag:github.com,2023-02-26:/cfortuner/promptable</id>
    <link href="https://github.com/cfortuner/promptable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build LLM apps in Typescript/Javascript. üßë‚Äçüíª üßë‚Äçüíª üßë‚Äçüíª üöÄ üöÄ üöÄ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Promptable&lt;/h1&gt; &#xA;&lt;p&gt;Build fullstack AI apps in Typescript/Javascript.&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;Promptable is library that enables you to build powerful AI applications with LLMs and Embeddings providers such as OpenAI, Hugging Face, Cohere and Anthropic. It provides a flexible and extensible API that makes it easy to compose LLMs with data and tools to build complex applications quickly and easily.&lt;/p&gt; &#xA;&lt;p&gt;With Promptable, you can combine LLMs with other powerful tools and data sources, such as databases and APIs, to create a wide range of AI applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is LLM?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;An LLM is a Large Language Model. It is a model that can generate text given a prompt. It is a type of AI that can be used to generate text, answer questions, and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is an Embedding?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;An Embedding is a vector representation of a piece of text. It is a type of AI that can be used to find similar pieces of text, search for text, and more.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;! Right now the library is in early development and is very much experimental. Don&#39;t use this in production yet! The API is subject to change as we get feedback.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cfortuner/promptable&#34;&gt;Github Repo&lt;/a&gt;. &lt;a href=&#34;https://discord.gg/SYmACWTf6V&#34;&gt;Discord&lt;/a&gt;. &lt;a href=&#34;https://twitter.com/promptableai&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Use Cases:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üí¨ Chatbots &amp;amp; Conversational AI&lt;/li&gt; &#xA; &lt;li&gt;‚ùì Question Answering Bots&lt;/li&gt; &#xA; &lt;li&gt;‚úçÔ∏è Writing Apps&lt;/li&gt; &#xA; &lt;li&gt;üßë‚Äç‚úàÔ∏è Copilot apps built with Chrome Extensions, VSCode Extensions, and more!&lt;/li&gt; &#xA; &lt;li&gt;üîç AI Semantic Search apps&lt;/li&gt; &#xA; &lt;li&gt;üõ†Ô∏è AI first Automations, Workflows and Tools&lt;/li&gt; &#xA; &lt;li&gt;ü§ñ Autonomous Agents &amp;amp; Personal Assistants&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/colinfortuner/status/1626063002683207681?s=20&#34;&gt;StarterKits&lt;/a&gt; ex. NextJS &amp;lt;-&amp;gt; Promptable Starter kit with Streaming Chat Bot!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cfortuner/promptable/main/apps/docs/docs/modules/prompts.md&#34;&gt;Prompts&lt;/a&gt; for templating and formatting&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cfortuner/promptable/main/apps/docs/docs/modules/model-providers.md&#34;&gt;Model Providers&lt;/a&gt; for Text Generation and Embedding Generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cfortuner/promptable/main/apps/docs/docs/modules/embeddings.md&#34;&gt;Embeddings&lt;/a&gt; for creating Embeddings, Indexing and Search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cfortuner/promptable/main/apps/docs/docs/modules/tracing.md&#34;&gt;Tracing&lt;/a&gt; for debugging your applications!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cfortuner/promptable/main/apps/docs/docs/modules/chains.md&#34;&gt;Chains&lt;/a&gt; for composing LLMs and Embeddings with data and other tools.&lt;/li&gt; &#xA; &lt;li&gt;Utilities for working with text and data.&lt;/li&gt; &#xA; &lt;li&gt;More Coming Soon :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install Library&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;npm i promptable&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See our docs for more info on how to use the library. &lt;a href=&#34;https://docs-promptable.vercel.app/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;To run an example, clone the repo and follow these steps&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy contents of &lt;code&gt;/apps/web/.env.example&lt;/code&gt; into a new file, &lt;code&gt;/apps/web/.env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy contents of &lt;code&gt;/examples/.env.example&lt;/code&gt; into a new file, &lt;code&gt;/examples/.env&lt;/code&gt; and add your &lt;a href=&#34;https://openai.com/api/&#34;&gt;OpenAI API Key&lt;/a&gt; to the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; field&lt;/li&gt; &#xA; &lt;li&gt;Run the following commands:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm i&#xA;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Run the following command in a different terminal window/tab: *NOTE: example names found in &lt;a href=&#34;https://github.com/cfortuner/promptable/tree/main/examples/src&#34;&gt;/examples/src&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm run example &amp;lt;example name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What&#39;s inside?&lt;/h2&gt; &#xA;&lt;p&gt;This a Turborepo monorepo of tooling for Typescript developers building LLM apps.&lt;/p&gt; &#xA;&lt;p&gt;It uses &lt;a href=&#34;https://pnpm.io&#34;&gt;pnpm&lt;/a&gt; as a package manager and includes the following packages/apps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;packages/promptable&lt;/code&gt;: The Promptable Library for building LLM apps in Typescript / Javascript!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;examples&lt;/code&gt;: Examples using the Promptable.js library!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;apps/docs&lt;/code&gt;: The Promptable.js Docs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;apps/web&lt;/code&gt;: A nextjs app for visualizing Promptable.js steps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;apps/nextjs-promptable&lt;/code&gt;: A nextjs app starter kit with prebuilt features (ChatBot with Streaming, QA Bot etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h2&gt;Install and Run&lt;/h2&gt; &#xA;&lt;p&gt;Then to install run (at the root)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm i&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install package in a single workspace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;pnpm i &amp;lt;package&amp;gt; --filter &amp;lt;workspace&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;First copy the &lt;code&gt;apps/web/.env.example&lt;/code&gt; file to &lt;code&gt;apps/web/.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, To develop all apps and packages, run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;cd my-turborepo&#xA;pnpm run dev&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start watching the files for changes.&lt;/p&gt; &#xA;&lt;h3&gt;UI&lt;/h3&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://docs-promptable.vercel.app/docs/modules/tracing#tracing-ui&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>clauderic/dnd-kit</title>
    <updated>2023-02-26T02:06:07Z</updated>
    <id>tag:github.com,2023-02-26:/clauderic/dnd-kit</id>
    <link href="https://github.com/clauderic/dnd-kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The modern, lightweight, performant, accessible and extensible drag &amp; drop toolkit for React.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dndkit.com&#34;&gt; &lt;img alt=&#34;@dnd-kit ‚Äì the modern drag &amp;amp; drop toolkit for React&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/dnd-kit-hero-banner.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@dnd-kit/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@dnd-kit/core.svg?sanitize=true&#34; alt=&#34;Stable Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/clauderic/dnd-kit/actions&#34;&gt;&lt;img src=&#34;https://badgen.net/github/checks/clauderic/dnd-kit&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=@dnd-kit/core&#34;&gt;&lt;img alt=&#34;gzip size&#34; src=&#34;https://badgen.net/bundlephobia/minzip/@dnd-kit/core?label=gzip%20size&amp;amp;color=green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/LICENSE&#34;&gt;&lt;img allt=&#34;MIT License&#34; src=&#34;https://badgen.now.sh/badge/license/MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=dndkit&#34;&gt; &lt;img alt=&#34;Follow us on Twitter&#34; src=&#34;https://img.shields.io/twitter/follow/dndkit?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feature packed:&lt;/strong&gt; customizable collision detection algorithms, multiple activators, draggable overlay, drag handles, auto-scrolling, constraints, and so much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built for React:&lt;/strong&gt; exposes hooks such as &lt;a href=&#34;https://docs.dndkit.com/api-documentation/draggable&#34;&gt;&lt;code&gt;useDraggable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://docs.dndkit.com/api-documentation/droppable&#34;&gt;&lt;code&gt;useDroppable&lt;/code&gt;&lt;/a&gt;. and won&#39;t force you to re-architect your app or create additional wrapper DOM nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports a wide range of use cases:&lt;/strong&gt; lists, grids, multiple containers, nested contexts, variable sized items, virtualized lists, 2D Games, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero dependencies and modular:&lt;/strong&gt; the core of the library weighs around 10kb minified and has no external dependencies. It&#39;s built around built-in React state management and context, which keeps the library lean.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built-in support for multiple input methods:&lt;/strong&gt; Pointer, mouse, touch and keyboard sensors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully customizable &amp;amp; extensible:&lt;/strong&gt; Customize every detail: animations, transitions, behaviours, styles. Build your own sensors, collision detection algorithms, customize key bindings and so much more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Accessibility:&lt;/strong&gt; Keyboard support, sensible default aria attributes, customizable screen reader instructions and live regions built-in.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; It was built with performance in mind in order to support silky smooth animations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Presets:&lt;/strong&gt; Need to build a sortable interface? Check out &lt;code&gt;@dnd-kit/sortable&lt;/code&gt;, which is a thin layer built on top of &lt;code&gt;@dnd-kit/core&lt;/code&gt;. More presets coming in the future.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to get started with &lt;strong&gt;dnd kit&lt;/strong&gt;, visit the official documentation website. You&#39;ll find in-depth API documentation, tips and guides to help you build drag and drop interfaces.&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://docs.dndkit.com&#34;&gt; &lt;img alt=&#34;Visit @dnd-kit documentation&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/documentation.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Key concepts&lt;/h2&gt; &#xA;&lt;p&gt;The core library of &lt;strong&gt;dnd kit&lt;/strong&gt; exposes two main concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dndkit.com/api-documentation/draggable&#34;&gt;Draggable elements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.dndkit.com/api-documentation/droppable&#34;&gt;Droppable areas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Augment your existing components using the &lt;code&gt;useDraggable&lt;/code&gt; and &lt;code&gt;useDroppable&lt;/code&gt; hooks, or combine both to create components that can both be dragged and dropped over.&lt;/p&gt; &#xA;&lt;p&gt;Handle events and customize the behaviour of your draggable elements and droppable areas using the &lt;code&gt;&amp;lt;DndContext&amp;gt;&lt;/code&gt; provider. Configure sensors to handle different input methods.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;&amp;lt;DragOverlay&amp;gt;&lt;/code&gt; component to render a draggable overlay that is removed from the normal document flow and is positioned relative to the viewport.&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.dndkit.com/introduction/getting-started&#34;&gt;quick start guide&lt;/a&gt; to learn how get started.&lt;/p&gt; &#xA;&lt;h3&gt;Extensibility&lt;/h3&gt; &#xA;&lt;p&gt;Extensibility is at the core of &lt;strong&gt;dnd kit&lt;/strong&gt;. It is built to be lean and extensible. It ships with the features we believe most people will want most of the time, and provides extension points to build the rest on top of &lt;code&gt;@dnd-kit/core&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A prime example of the level of extensibility of &lt;strong&gt;dnd kit&lt;/strong&gt; is the &lt;a href=&#34;https://docs.dndkit.com/presets/sortable&#34;&gt;Sortable preset&lt;/a&gt;, which is built using the extension points that are exposed by &lt;code&gt;@dnd-kit/core&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The primary extension points of &lt;strong&gt;dnd kit&lt;/strong&gt; are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sensors&lt;/li&gt; &#xA; &lt;li&gt;Modifiers&lt;/li&gt; &#xA; &lt;li&gt;Constraints&lt;/li&gt; &#xA; &lt;li&gt;Custom collision detection algorithms&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessibility&lt;/h3&gt; &#xA;&lt;p&gt;Building accessible drag and drop interfaces is hard; &lt;strong&gt;dnd kit&lt;/strong&gt; has a number of sensible defaults and starting points to help you make your drag and drop interface accessible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable &lt;strong&gt;screen reader instructions&lt;/strong&gt; for how to interact with draggable items&lt;/li&gt; &#xA; &lt;li&gt;Customizable &lt;strong&gt;live region updates&lt;/strong&gt; to provide screen reader announcements in real-time of what is currently happening with draggable and droppable elements.&lt;/li&gt; &#xA; &lt;li&gt;Sensible defaults for &lt;strong&gt;&lt;code&gt;aria&lt;/code&gt; attributes&lt;/strong&gt; that should be passed to draggable items&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.dndkit.com/guides/accessibility&#34;&gt;Accessibility guide&lt;/a&gt; to learn more about how you can help provide a better experience for screen readers.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture&lt;/h3&gt; &#xA;&lt;p&gt;Unlike most drag and drop libraries, &lt;strong&gt;dnd kit&lt;/strong&gt; intentionally is &lt;strong&gt;not&lt;/strong&gt; built on top of the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API&#34;&gt;HTML5 Drag and drop API&lt;/a&gt;. This was a deliberate architectural decision, that does come with tradeoffs that you should be aware of before deciding to use it, but for most applications, we believe the benefits outweigh the tradeoffs.&lt;/p&gt; &#xA;&lt;p&gt;The HTML5 Drag and drop API has some severe &lt;strong&gt;limitations&lt;/strong&gt;. It does not support touch devices or using the keyboard to drag items, which means that the libraries that are built on top of it need to expose an entirely different implementation to support those input methods. It also doesn&#39;t support common use-cases such as locking dragging to a specific axis or to the bounds of a container, custom collision detection strategies, or even customizing the preview of the dragged item.&lt;/p&gt; &#xA;&lt;p&gt;While there are workarounds to some of these issues, those workarounds typically increase the complexity of the codebase and the overall bundle size of the library, and lead to inconsistencies between the mouse, touch and keyboard layers because they&#39;re powered by entirely different implementations.&lt;/p&gt; &#xA;&lt;p&gt;The main &lt;strong&gt;tradeoff&lt;/strong&gt; with not using the HTML5 Drag and drop API is that you won&#39;t be able to drag from the desktop or between windows. If the drag and drop use-case you have in mind involves this kind of functionality, you&#39;ll definitely want to use a library that&#39;s built on top of the HTML 5 Drag and drop API. We highly recommend you check out &lt;a href=&#34;https://github.com/react-dnd/react-dnd/&#34;&gt;react-dnd&lt;/a&gt; for a React library that&#39;s has a native HTML 5 Drag and drop backend.&lt;/p&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Minimizing DOM mutations&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;dnd kit&lt;/strong&gt; lets you build drag and drop interfaces without having to mutate the DOM every time an item needs to shift position.&lt;/p&gt; &#xA;&lt;p&gt;This is possible because &lt;strong&gt;dnd kit&lt;/strong&gt; lazily calculates and stores the initial positions and layout of your droppable containers when a drag operation is initiated. These positions are passed down to your components that use &lt;code&gt;useDraggable&lt;/code&gt; and &lt;code&gt;useDroppable&lt;/code&gt; so that you can compute the new positions of your items while a drag operation is underway, and move them to their new positions using performant CSS properties that do not trigger a repaint such as &lt;code&gt;translate3d&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt;. For an example of how this can be achieved, check out the implementation of the sorting strategies that are exposed by the &lt;a href=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/packages/sortable/README.md&#34;&gt;&lt;code&gt;@dnd-kit/sortable&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;This isn&#39;t to say that you can&#39;t shift the position of the items in the DOM while dragging, this is something that &lt;strong&gt;is supported&lt;/strong&gt; and sometimes inevitable. In some cases, it won&#39;t be possible to know in advance what the new position and layout of the item until you move it in the DOM. Just know that these kind of mutations to the DOM while dragging are much more expensive and will cause a repaint, so if possible, prefer computing the new positions using &lt;code&gt;translate3d&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Synthetic events&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;dnd kit&lt;/strong&gt; also uses &lt;a href=&#34;https://reactjs.org/docs/events.html&#34;&gt;SyntheticEvent listeners&lt;/a&gt; for the activator events of all sensors, which leads to improved performance over manually adding event listeners to each individual draggable node.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Playful illustration of draggable and droppable concepts. A robot picks up a draggable card and moves it over a droppable container.&#34; src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/concepts-illustration.svg?sanitize=true&#34; width=&#34;75%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Working in the &lt;code&gt;@dnd-kit&lt;/code&gt; repository&lt;/h2&gt; &#xA;&lt;h3&gt;Packages contained within this repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/core&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/accessibility&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/sortable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/modifiers&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;@dnd-kit/utilities&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to install all the dependencies in the root directory. Since the &lt;code&gt;@dnd-kit&lt;/code&gt; is a monorepo that uses Lerna and Yarn Workspaces, npm CLI is not supported (only yarn).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will install all dependencies in each project, build them, and symlink them via Lerna&lt;/p&gt; &#xA;&lt;h3&gt;Development workflow&lt;/h3&gt; &#xA;&lt;p&gt;In one terminal, run &lt;code&gt;yarn start&lt;/code&gt; in parallel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This builds each package to &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/dist&lt;/code&gt; and runs the project in watch mode so any edits you save inside &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/src&lt;/code&gt; cause a rebuild to &lt;code&gt;&amp;lt;packages&amp;gt;/&amp;lt;package&amp;gt;/dist&lt;/code&gt;. The results will stream to to the terminal.&lt;/p&gt; &#xA;&lt;h3&gt;Running storybook&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start:storybook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Runs the storybook Open &lt;a href=&#34;http://localhost:6006&#34;&gt;http://localhost:6006&lt;/a&gt; to view it in the browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/storybook-screenshot.png&#34; alt=&#34;Screenshot of Storybook running locally&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Working with the playground&lt;/h3&gt; &#xA;&lt;p&gt;You can play with local packages in the Parcel-powered playground.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn start:playground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the playground on &lt;code&gt;localhost:1234&lt;/code&gt;. If you have lerna running watch in parallel mode in one terminal, and then you run parcel, your playground will hot reload when you make changes to any imported module whose source is inside of &lt;code&gt;packages/*/src/*&lt;/code&gt;. Note that to accomplish this, each package&#39;s &lt;code&gt;start&lt;/code&gt; command passes TDSX the &lt;code&gt;--noClean&lt;/code&gt; flag. This prevents Parcel from exploding between rebuilds because of File Not Found errors.&lt;/p&gt; &#xA;&lt;p&gt;Important Safety Tip: When adding/altering packages in the playground, use &lt;code&gt;alias&lt;/code&gt; object in package.json. This will tell Parcel to resolve them to the filesystem instead of trying to install the package from NPM. It also fixes duplicate React errors you may run into.&lt;/p&gt; &#xA;&lt;h3&gt;Running Cypress&lt;/h3&gt; &#xA;&lt;p&gt;(In a third terminal) you can run Cypress and it will run the integration tests against storybook.&lt;/p&gt;</summary>
  </entry>
</feed>