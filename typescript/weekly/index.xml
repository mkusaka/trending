<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-27T01:53:59Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>David-patrick-chuks/Instagram-AI-Agent</title>
    <updated>2025-04-27T01:53:59Z</updated>
    <id>tag:github.com,2025-04-27:/David-patrick-chuks/Instagram-AI-Agent</id>
    <link href="https://github.com/David-patrick-chuks/Instagram-AI-Agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instagram Ai Agent üå∏ is built using Node.js and TypeScript üõ†Ô∏è, designed for seamless job execution üì∏. It&#39;s lightweight, efficient, and still evolving üöß‚Äîexciting new features coming soon! üåü&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Instagram-AI-Agent üå∏&lt;/h2&gt; &#xA;&lt;p&gt;Instagram-AI-Agent is an AI-powered automation tool designed for &lt;strong&gt;Instagram&lt;/strong&gt; to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.&lt;/p&gt; &#xA;&lt;p&gt;Before using the automation features, you can personalize the agent by training with the following, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;YouTube Video URL&lt;/strong&gt; üé•&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Audio File&lt;/strong&gt; üéôÔ∏è&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portfolio or Website Link&lt;/strong&gt; üåê&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Formats Supported&lt;/strong&gt;: PDF, DOC, DOCX, TXT üìÑ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instagram Automation&lt;/strong&gt;: Automatically log in, post photos, like posts, and leave thoughtful comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI-Powered Content Generation&lt;/strong&gt;: Use Google Generative AI to create engaging captions and comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Use proxies to manage multiple accounts and avoid rate limits.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cookie Management&lt;/strong&gt;: Save and load cookies to maintain sessions across restarts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Twitter Automation&lt;/strong&gt;: (Coming soon) Automatically tweet, retweet, and like tweets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Automation&lt;/strong&gt;: (Coming soon) Automatically manage repositories, issues, and pull requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git&#xA;cd Instagram-AI-Agent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up environment variables&lt;/strong&gt;: Rename the &lt;a href=&#34;http://_vscodecontentref_/1&#34;&gt;.env.example&lt;/a&gt; file to &lt;a href=&#34;http://_vscodecontentref_/1&#34;&gt;.env&lt;/a&gt; in the root directory and add your Instagram credentials. Refer to the &lt;a href=&#34;http://_vscodecontentref_/2&#34;&gt;.env.example&lt;/a&gt; file for the required variables.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dotenv&#34;&gt;IGusername=your_instagram_username&#xA;IGpassword=your_instagram_password &#xA;&#xA;Xusername= #Twitter username&#xA;Xpassword= #Twitter password&#xA;&#xA;MONGODB_URI= #MongoDB URI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;MongoDB Setup (Using Docker)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;: If you don&#39;t have Docker installed, download and install it from the &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run MongoDB using Docker Container&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Option 2: use this if you want to have like a permanent storage in you so your data won&#39;t be lost or remove if you stop or remove your Docker container)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify the MONGODB_URI in the .env file&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-dotenv&#34;&gt;MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the connection&lt;/strong&gt;: Open a new terminal and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see the MongoDB container running.&lt;/p&gt; &lt;p&gt;Docker Commands (Additional Info):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To stop the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker stop instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To start the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker start instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To remove the MongoDB container: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker rm instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To remove the MongoDB container and its data: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker rm -v instagram-ai-mongodb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run the Instagram agent&lt;/strong&gt;: &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Twitter agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run start:twitter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the GitHub agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run start:github&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/client&lt;/strong&gt;: Contains the main logic for interacting with social media platforms like Instagram.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/config&lt;/strong&gt;: Configuration files, including the logger setup.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/utils&lt;/strong&gt;: Utility functions for handling errors, cookies, data saving, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/Agent&lt;/strong&gt;: Contains the AI agent logic and training scripts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/Agent/training&lt;/strong&gt;: Training scripts for the AI agent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/schema&lt;/strong&gt;: Schema definitions for AI-generated content and database models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;src/test&lt;/strong&gt;: Contains test data and scripts, such as example tweets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;The project uses a custom logger to log information, warnings, and errors. Logs are saved in the &lt;a href=&#34;http://_vscodecontentref_/3&#34;&gt;logs&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Error Handling&lt;/h2&gt; &#xA;&lt;p&gt;Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please fork the repository and submit a pull request with your changes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.google/tools/&#34;&gt;Google Generative AI&lt;/a&gt; for providing the AI models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer&#34;&gt;Puppeteer&lt;/a&gt; for browser automation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berstend/puppeteer-extra&#34;&gt;puppeteer-extra&lt;/a&gt; for additional plugins and enhancements.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rolldown/tsdown</title>
    <updated>2025-04-27T01:53:59Z</updated>
    <id>tag:github.com,2025-04-27:/rolldown/tsdown</id>
    <link href="https://github.com/rolldown/tsdown" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The elegant bundler for libraries powered by Rolldown&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rolldown/tsdown/main/docs/public/og-image.svg?sanitize=true&#34; alt=&#34;tsdown&#34; width=&#34;100%&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;tsdown &lt;a href=&#34;https://npmjs.com/package/tsdown&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/tsdown.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rolldown/tsdown/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/rolldown/tsdown/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jsr.io/@sxzz/tsdown&#34;&gt;&lt;img src=&#34;https://jsr.io/badges/@sxzz/tsdown&#34; alt=&#34;JSR&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;‚ú® The elegant bundler for libraries powered by &lt;a href=&#34;https://github.com/rolldown/rolldown&#34;&gt;Rolldown&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ &lt;strong&gt;Blazing fast&lt;/strong&gt;: Build and generate declaration files powered by Oxc and Rolldown, incredibly fast!&lt;/li&gt; &#xA; &lt;li&gt;‚ôªÔ∏è &lt;strong&gt;Powerful ecosystem&lt;/strong&gt;: Support Rollup, Rolldown, unplugin plugins, and some Vite plugins.&lt;/li&gt; &#xA; &lt;li&gt;Ô∏èüõ†Ô∏è &lt;strong&gt;Easy to use&lt;/strong&gt;: tsdown preconfigures everything you need to get started, so you can focus on writing code.&lt;/li&gt; &#xA; &lt;li&gt;üîÑ &lt;strong&gt;Seamless migration&lt;/strong&gt;: Compatible with tsup&#39;s main options and features, ensuring a smooth transition.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For full documentation, visit &lt;a href=&#34;https://tsdown.dev&#34;&gt;tsdown.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -D tsdown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsdown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Migrate from tsup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsdown migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please make sure to commit your changes before migrating. For more details, see the &lt;a href=&#34;https://tsdown.dev/guide/migrate-from-tsup&#34;&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project also partially contains code derived or copied from the following projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/egoist/tsup&#34;&gt;tsup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/privatenumber/pkgroll&#34;&gt;pkgroll&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cdn.jsdelivr.net/gh/sxzz/sponsors/sponsors.svg&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/sxzz/sponsors/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/rolldown/tsdown/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>exa-labs/exa-mcp-server</title>
    <updated>2025-04-27T01:53:59Z</updated>
    <id>tag:github.com,2025-04-27:/exa-labs/exa-mcp-server</id>
    <link href="https://github.com/exa-labs/exa-mcp-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Claude can perform Web Search | Exa with MCP (Model Context Protocol)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Exa MCP Server üîç&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/exa-mcp-server&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/exa-mcp-server.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://smithery.ai/server/exa&#34;&gt;&lt;img src=&#34;https://smithery.ai/badge/exa&#34; alt=&#34;smithery badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches. This setup allows AI models to get real-time web information in a safe and controlled way.&lt;/p&gt; &#xA;&lt;p&gt;Demo video &lt;a href=&#34;https://www.loom.com/share/ac676f29664e4c6cb33a2f0a63772038?sid=0e72619f-5bfc-415d-a705-63d326373f60&#34;&gt;https://www.loom.com/share/ac676f29664e4c6cb33a2f0a63772038?sid=0e72619f-5bfc-415d-a705-63d326373f60&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is MCP? ü§î&lt;/h2&gt; &#xA;&lt;p&gt;The Model Context Protocol (MCP) is a system that lets AI apps, like Claude Desktop, connect to external tools and data sources. It gives a clear and safe way for AI assistants to work with local services and APIs while keeping the user in control.&lt;/p&gt; &#xA;&lt;h2&gt;What does this server do? üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;The Exa MCP server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enables AI assistants to perform web searches using Exa&#39;s powerful search API&lt;/li&gt; &#xA; &lt;li&gt;Provides structured search results including titles, URLs, and content snippets&lt;/li&gt; &#xA; &lt;li&gt;Caches recent searches as resources for reference&lt;/li&gt; &#xA; &lt;li&gt;Handles rate limiting and error cases gracefully&lt;/li&gt; &#xA; &lt;li&gt;Supports real-time web crawling for fresh content&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites üìã&lt;/h2&gt; &#xA;&lt;p&gt;Before you begin, ensure you have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (v18 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude Desktop&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://dashboard.exa.ai/api-keys&#34;&gt;Exa API key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Git installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can verify your Node.js installation by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node --version  # Should show v18.0.0 or higher&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;h3&gt;NPM Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g exa-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Smithery&lt;/h3&gt; &#xA;&lt;p&gt;To install the Exa MCP server for Claude Desktop automatically via &lt;a href=&#34;https://smithery.ai/server/exa&#34;&gt;Smithery&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx -y @smithery/cli install exa --client claude&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/exa-labs/exa-mcp-server.git&#xA;cd exa-mcp-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build the project:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Create a global link (this makes the server executable from anywhere):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm link&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;h3&gt;1. Configure Claude Desktop to recognize the Exa MCP server&lt;/h3&gt; &#xA;&lt;p&gt;You can find claude_desktop_config.json inside the settings of Claude Desktop app:&lt;/p&gt; &#xA;&lt;p&gt;Open the Claude Desktop app and enable Developer Mode from the top-left menu bar.&lt;/p&gt; &#xA;&lt;p&gt;Once enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you&#39;ll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits.&lt;/p&gt; &#xA;&lt;p&gt;OR (if you want to open claude_desktop_config.json from terminal)&lt;/p&gt; &#xA;&lt;h4&gt;For macOS:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;code ~/Library/Application\ Support/Claude/claude_desktop_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Windows:&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;code %APPDATA%\Claude\claude_desktop_config.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Add the Exa server configuration:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;exa&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#34;/path/to/exa-mcp-server/build/index.js&#34;],&#xA;      &#34;env&#34;: {&#xA;        &#34;EXA_API_KEY&#34;: &#34;your-api-key-here&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;your-api-key-here&lt;/code&gt; with your actual Exa API key from &lt;a href=&#34;https://dashboard.exa.ai/api-keys&#34;&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;3. Available Tools &amp;amp; Tool Selection&lt;/h3&gt; &#xA;&lt;p&gt;The Exa MCP server includes the following tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;web_search_exa&lt;/strong&gt;: Performs real-time web searches with optimized results and content extraction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;research_paper_search&lt;/strong&gt;: Specialized search focused on academic papers and research content.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;twitter_search&lt;/strong&gt;: Dedicated Twitter/X.com search that finds tweets, profiles, and conversations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;company_research&lt;/strong&gt;: Comprehensive company research tool that crawls company websites to gather detailed information about businesses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;crawling&lt;/strong&gt;: Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;competitor_finder&lt;/strong&gt;: Identifies competitors of a company by searching for businesses offering similar products or services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;linkedin_search&lt;/strong&gt;: Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can choose which tools to enable by adding the &lt;code&gt;--tools&lt;/code&gt; parameter to your Claude Desktop configuration:&lt;/p&gt; &#xA;&lt;h4&gt;Specify which tools to enable:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;exa&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;/path/to/exa-mcp-server/build/index.js&#34;,&#xA;        &#34;--tools=web_search_exa,research_paper_search,twitter_search,company_research,crawling,competitor_finder,linkedin_search&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;EXA_API_KEY&#34;: &#34;your-api-key-here&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For enabling multiple tools, use a comma-separated list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;exa&#34;: {&#xA;      &#34;command&#34;: &#34;npx&#34;,&#xA;      &#34;args&#34;: [&#xA;        &#34;/path/to/exa-mcp-server/build/index.js&#34;,&#xA;        &#34;--tools=web_search_exa,research_paper_search,twitter_search,company_research,crawling,competitor_finder,linkedin_search&#34;&#xA;      ],&#xA;      &#34;env&#34;: {&#xA;        &#34;EXA_API_KEY&#34;: &#34;your-api-key-here&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t specify any tools, all tools enabled by default will be used.&lt;/p&gt; &#xA;&lt;h3&gt;4. Restart Claude Desktop&lt;/h3&gt; &#xA;&lt;p&gt;For the changes to take effect:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Completely quit Claude Desktop (not just close the window)&lt;/li&gt; &#xA; &lt;li&gt;Start Claude Desktop again&lt;/li&gt; &#xA; &lt;li&gt;Look for the üîå icon to verify the Exa server is connected&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Using via NPX&lt;/h2&gt; &#xA;&lt;p&gt;If you prefer to run the server directly, you can use npx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run with all tools enabled by default&#xA;npx exa-mcp-server&#xA;&#xA;# Enable specific tools only&#xA;npx exa-mcp-server --tools=web_search_exa&#xA;&#xA;# Enable multiple tools&#xA;npx exa-mcp-server --tools=web_search_exa,research_paper_search&#xA;&#xA;# List all available tools&#xA;npx exa-mcp-server --list-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage üéØ&lt;/h2&gt; &#xA;&lt;p&gt;Once configured, you can ask Claude to perform web searches. Here are some example prompts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Can you search for recent developments in quantum computing?&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find and analyze recent research papers about climate change solutions.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Search Twitter for posts from @elonmusk about SpaceX.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find tweets from @samaltman that were published in the last week about AI safety.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Research the company exa.ai and find information about their pricing and features.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Extract the content from this research paper: https://arxiv.org/pdf/1706.03762&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find competitors for a company that provides web search API services, excluding exa.ai from the results.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find the LinkedIn profile for Anthropic company.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Search for data scientists at OpenAI on LinkedIn.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Process the search request&lt;/li&gt; &#xA; &lt;li&gt;Query the Exa API with optimal settings (including live crawling)&lt;/li&gt; &#xA; &lt;li&gt;Return formatted results to Claude&lt;/li&gt; &#xA; &lt;li&gt;Cache the search for future reference&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Testing with MCP Inspector üîç&lt;/h2&gt; &#xA;&lt;p&gt;You can test the server directly using the MCP Inspector:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx @modelcontextprotocol/inspector node ./build/index.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This opens an interactive interface where you can explore the server&#39;s capabilities, execute search queries, and view cached search results.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting üîß&lt;/h2&gt; &#xA;&lt;h3&gt;Common Issues&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Server Not Found&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Verify the npm link is correctly set up&lt;/li&gt; &#xA;   &lt;li&gt;Check Claude Desktop configuration syntax&lt;/li&gt; &#xA;   &lt;li&gt;Ensure Node.js is properly installed&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Key Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Confirm your EXA_API_KEY is valid&lt;/li&gt; &#xA;   &lt;li&gt;Check the EXA_API_KEY is correctly set in the Claude Desktop config&lt;/li&gt; &#xA;   &lt;li&gt;Verify no spaces or quotes around the API key&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connection Issues&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Restart Claude Desktop completely&lt;/li&gt; &#xA;   &lt;li&gt;Check Claude Desktop logs:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# macOS&#xA;tail -n 20 -f ~/Library/Logs/Claude/mcp*.log&#xA;&#xA;# Windows&#xA;type &#34;%APPDATA%\Claude\logs\mcp*.log&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Acknowledgments üôè&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://exa.ai&#34;&gt;Exa AI&lt;/a&gt; for their powerful search API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://modelcontextprotocol.io&#34;&gt;Model Context Protocol&lt;/a&gt; for the MCP specification&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anthropic.com&#34;&gt;Anthropic&lt;/a&gt; for Claude Desktop&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>