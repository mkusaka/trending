<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-15T01:46:18Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ai16z/eliza</title>
    <updated>2024-12-15T01:46:18Z</updated>
    <id>tag:github.com,2024-12-15:/ai16z/eliza</id>
    <link href="https://github.com/ai16z/eliza" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Autonomous agents for everyone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eliza 🤖&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/docs/static/img/eliza_banner.jpg&#34; alt=&#34;Eliza Banner&#34; width=&#34;100%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;📖 &lt;a href=&#34;https://ai16z.github.io/eliza/&#34;&gt;Documentation&lt;/a&gt; | 🎯 &lt;a href=&#34;https://github.com/thejoven/awesome-eliza&#34;&gt;Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🌍 README Translations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_CN.md&#34;&gt;中文说明&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_JA.md&#34;&gt;日本語の説明&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_KOR.md&#34;&gt;한국어 설명&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_FR.md&#34;&gt;Français&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_PTBR.md&#34;&gt;Português&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_TR.md&#34;&gt;Türkçe&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_RU.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_ES.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_IT.md&#34;&gt;Italiano&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_TH.md&#34;&gt;ไทย&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ai16z/eliza/main/README_DE.md&#34;&gt;Deutsch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🛠️ Full-featured Discord, Twitter and Telegram connectors&lt;/li&gt; &#xA; &lt;li&gt;🔗 Support for every model (Llama, Grok, OpenAI, Anthropic, etc.)&lt;/li&gt; &#xA; &lt;li&gt;👥 Multi-agent and room support&lt;/li&gt; &#xA; &lt;li&gt;📚 Easily ingest and interact with your documents&lt;/li&gt; &#xA; &lt;li&gt;💾 Retrievable memory and document store&lt;/li&gt; &#xA; &lt;li&gt;🚀 Highly extensible - create your own actions and clients&lt;/li&gt; &#xA; &lt;li&gt;☁️ Supports many models (local Llama, OpenAI, Anthropic, Groq, etc.)&lt;/li&gt; &#xA; &lt;li&gt;📦 Just works!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ArptLpQiKfI&amp;amp;list=PLx5pnFXdPTRzWla0RaOxALTSTnVq53fKL&#34;&gt;AI Agent Dev School&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🎯 Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Chatbots&lt;/li&gt; &#xA; &lt;li&gt;🕵️ Autonomous Agents&lt;/li&gt; &#xA; &lt;li&gt;📈 Business Process Handling&lt;/li&gt; &#xA; &lt;li&gt;🎮 Video Game NPCs&lt;/li&gt; &#xA; &lt;li&gt;🧠 Trading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 2.7+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;Node.js 23+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note for Windows Users:&lt;/strong&gt; &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install-manual&#34;&gt;WSL 2&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Use the Starter (Recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ai16z/eliza-starter.git&#xA;&#xA;cp .env.example .env&#xA;&#xA;pnpm i &amp;amp;&amp;amp; pnpm build &amp;amp;&amp;amp; pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then read the &lt;a href=&#34;https://ai16z.github.io/eliza/&#34;&gt;Documentation&lt;/a&gt; to learn how to customize your Eliza.&lt;/p&gt; &#xA;&lt;h3&gt;Manually Start Eliza (Only recommended if you know what you are doing)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/ai16z/eliza.git&#xA;&#xA;# Checkout the latest release&#xA;# This project iterates fast, so we recommend checking out the latest release&#xA;git checkout $(git describe --tags --abbrev=0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Eliza with Gitpod&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/ai16z/eliza/tree/main&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Edit the .env file&lt;/h3&gt; &#xA;&lt;p&gt;Copy .env.example to .env and fill in the appropriate values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: .env is optional. If your planning to run multiple distinct agents, you can pass secrets through the character JSON&lt;/p&gt; &#xA;&lt;h3&gt;Automatically Start Eliza&lt;/h3&gt; &#xA;&lt;p&gt;This will run everything to setup the project and start the bot with the default character.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh scripts/start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Edit the character file&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;packages/core/src/defaultCharacter.ts&lt;/code&gt; to modify the default character. Uncomment and edit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To load custom characters:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;code&gt;pnpm start --characters=&#34;path/to/your/character.json&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Multiple character files can be loaded simultaneously&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect with X (Twitter)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;change &lt;code&gt;&#34;clients&#34;: []&lt;/code&gt; to &lt;code&gt;&#34;clients&#34;: [&#34;twitter&#34;]&lt;/code&gt; in the character file to connect with X&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Manually Start Eliza&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm i&#xA;pnpm build&#xA;pnpm start&#xA;&#xA;# The project iterates fast, sometimes you need to clean the project if you are coming back to the project&#xA;pnpm clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional Requirements&lt;/h4&gt; &#xA;&lt;p&gt;You may need to install Sharp. If you see an error when starting up, try installing it with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pnpm install --include=optional sharp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Community &amp;amp; contact&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ai16z/eliza/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Best for: bugs you encounter using Eliza, and feature proposals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/ai16z&#34;&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/ai16z/eliza/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=ai16z/eliza&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#ai16z/eliza&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=ai16z/eliza&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leerob/next-saas-starter</title>
    <updated>2024-12-15T01:46:18Z</updated>
    <id>tag:github.com,2024-12-15:/leerob/next-saas-starter</id>
    <link href="https://github.com/leerob/next-saas-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get started quickly with Next.js, Postgres, Stripe, and shadcn/ui.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Next.js SaaS Starter&lt;/h1&gt; &#xA;&lt;p&gt;This is a starter template for building a SaaS application using &lt;strong&gt;Next.js&lt;/strong&gt; with support for authentication, Stripe integration for payments, and a dashboard for logged-in users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Demo: &lt;a href=&#34;https://next-saas-start.vercel.app/&#34;&gt;https://next-saas-start.vercel.app/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why did I make this?&lt;/summary&gt; &#xA; &lt;p&gt;In 2020, I made a course called &#34;React 2025&#34; which showed how to build a SaaS application with Next.js, Stripe, and other tools.&lt;/p&gt; &#xA; &lt;p&gt;Well, it&#39;s almost 2025 and React 19 has brought so many amazing new features I didn&#39;t predict! This repo is a demonstration of the latest React and Next.js patterns. These patterns can drastically simplify some common tasks in building your SaaS, like building forms, talking to your database, and more.&lt;/p&gt; &#xA; &lt;p&gt;For example, React now has built in hooks like &lt;code&gt;useActionState&lt;/code&gt; to handle inline form errors and pending states. React Server Actions can replace a lot of boilerplate code needed to call an API Route from the client-side. And finally, the React &lt;code&gt;use&lt;/code&gt; hook combined with Next.js makes it incredibly easy to build a powerful &lt;code&gt;useUser()&lt;/code&gt; hook.&lt;/p&gt; &#xA; &lt;p&gt;We&#39;re able to fetch the user from our Postgres database in the root layout, but &lt;em&gt;not&lt;/em&gt; await the &lt;code&gt;Promise&lt;/code&gt;. Instead, we forward the &lt;code&gt;Promise&lt;/code&gt; to a React context provider, where we can &#34;unwrap&#34; it and awaited the streamed in data. This means we can have the best of both worlds: easy code to fetch data from our database (e.g. &lt;code&gt;getUser()&lt;/code&gt;) and a React hook we can use in Client Components (e.g. &lt;code&gt;useUser()&lt;/code&gt;).&lt;/p&gt; &#xA; &lt;p&gt;Fun fact: the majority of the UI for this application was built with &lt;a href=&#34;https://v0.dev&#34;&gt;v0&lt;/a&gt; 🤯 &lt;a href=&#34;https://x.com/leeerob/status/1835777934361084316&#34;&gt;More details here&lt;/a&gt; if you want to learn about this repo.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Marketing landing page (&lt;code&gt;/&lt;/code&gt;) with animated Terminal element&lt;/li&gt; &#xA; &lt;li&gt;Pricing page (&lt;code&gt;/pricing&lt;/code&gt;) which connects to Stripe Checkout&lt;/li&gt; &#xA; &lt;li&gt;Dashboard pages with CRUD operations on users/teams&lt;/li&gt; &#xA; &lt;li&gt;Basic RBAC with Owner and Member roles&lt;/li&gt; &#xA; &lt;li&gt;Subscription management with Stripe Customer Portal&lt;/li&gt; &#xA; &lt;li&gt;Email/password authentication with JWTs stored to cookies&lt;/li&gt; &#xA; &lt;li&gt;Global middleware to protect logged-in routes&lt;/li&gt; &#xA; &lt;li&gt;Local middleware to protect Server Actions or validate Zod schemas&lt;/li&gt; &#xA; &lt;li&gt;Activity logging system for any user events&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ORM&lt;/strong&gt;: &lt;a href=&#34;https://orm.drizzle.team/&#34;&gt;Drizzle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt;: &lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;UI Library&lt;/strong&gt;: &lt;a href=&#34;https://ui.shadcn.com/&#34;&gt;shadcn/ui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/leerob/next-saas-starter&#xA;cd next-saas-starter&#xA;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;Use the included setup script to create your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the database migrations and seed the database with a default user and team:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm db:migrate&#xA;pnpm db:seed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create the following user and team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User: &lt;code&gt;test@test.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Password: &lt;code&gt;admin123&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can, of course, create new users as well through &lt;code&gt;/sign-up&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run the Next.js development server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser to see the app in action.&lt;/p&gt; &#xA;&lt;p&gt;Optionally, you can listen for Stripe webhooks locally through their CLI to handle subscription change events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stripe listen --forward-to localhost:3000/api/stripe/webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing Payments&lt;/h2&gt; &#xA;&lt;p&gt;To test Stripe payments, use the following test card details:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Card Number: &lt;code&gt;4242 4242 4242 4242&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expiration: Any future date&lt;/li&gt; &#xA; &lt;li&gt;CVC: Any 3-digit number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Going to Production&lt;/h2&gt; &#xA;&lt;p&gt;When you&#39;re ready to deploy your SaaS application to production, follow these steps:&lt;/p&gt; &#xA;&lt;h3&gt;Set up a production Stripe webhook&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the Stripe Dashboard and create a new webhook for your production environment.&lt;/li&gt; &#xA; &lt;li&gt;Set the endpoint URL to your production API route (e.g., &lt;code&gt;https://yourdomain.com/api/stripe/webhook&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Select the events you want to listen for (e.g., &lt;code&gt;checkout.session.completed&lt;/code&gt;, &lt;code&gt;customer.subscription.updated&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deploy to Vercel&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Push your code to a GitHub repository.&lt;/li&gt; &#xA; &lt;li&gt;Connect your repository to Vercel and deploy it.&lt;/li&gt; &#xA; &lt;li&gt;Follow the Vercel deployment process, which will guide you through setting up your project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Add environment variables&lt;/h3&gt; &#xA;&lt;p&gt;In your Vercel project settings (or during deployment), add all the necessary environment variables. Make sure to update the values for the production environment, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;BASE_URL&lt;/code&gt;: Set this to your production domain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_SECRET_KEY&lt;/code&gt;: Use your Stripe secret key for the production environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt;: Use the webhook secret from the production webhook you created in step 1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_URL&lt;/code&gt;: Set this to your production database URL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;AUTH_SECRET&lt;/code&gt;: Set this to a random string. &lt;code&gt;openssl rand -base64 32&lt;/code&gt; will generate one.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Other Templates&lt;/h2&gt; &#xA;&lt;p&gt;While this template is intentionally minimal and to be used as a learning resource, there are other paid versions in the community which are more full-featured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://achromatic.dev&#34;&gt;https://achromatic.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shipfa.st&#34;&gt;https://shipfa.st&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://makerkit.dev&#34;&gt;https://makerkit.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>al1abb/invoify</title>
    <updated>2024-12-15T01:46:18Z</updated>
    <id>tag:github.com,2024-12-15:/al1abb/invoify</id>
    <link href="https://github.com/al1abb/invoify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An invoice generator app built using Next.js, Typescript, and Shadcn&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Invoify&lt;/h1&gt; &#xA;&lt;p&gt;Invoify is a web-based invoice generator application built with Next.js 13, TypeScript, React, and the Shadcn UI library. It provides an easy way to create and manage professional invoices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/public/assets/img/invoify-web-app.png&#34; alt=&#34;Invoify Website image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#invoify&#34;&gt;Invoify&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#technologies&#34;&gt;Technologies&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#core-technologies&#34;&gt;Core Technologies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#additional-dependencies&#34;&gt;Additional Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/al1abb/invoify/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technologies&lt;/h2&gt; &#xA;&lt;h3&gt;Core Technologies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Next.js:&lt;/strong&gt; React framework for SSR and client-side navigation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeScript:&lt;/strong&gt; JavaScript superset with static typing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shadcn-UI:&lt;/strong&gt; UI library for enhanced visuals.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tailwind:&lt;/strong&gt; Utility-first CSS framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;React Hook Form:&lt;/strong&gt; Form management for React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zod:&lt;/strong&gt; TypeScript-first schema validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Puppeteer:&lt;/strong&gt; PDF generation with headless browsers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nodemailer:&lt;/strong&gt; Node.js module for sending emails.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lucide Icons:&lt;/strong&gt; Collection of customizable SVG icons.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Easily Create Invoices:&lt;/strong&gt; Utilize a simple form to quickly generate invoices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Save for Future Access:&lt;/strong&gt; Store your invoices directly in your browser for easy retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Retrieve Invoices Effortlessly:&lt;/strong&gt; Load and access invoices seamlessly from your saved list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Flexible Download Options:&lt;/strong&gt; Download invoices directly or send them via email in PDF format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Template Variety:&lt;/strong&gt; Choose from multiple (currently 2) invoice templates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Live Preview:&lt;/strong&gt; Edit the form and see changes in real-time with the live preview feature.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Export in Various Formats:&lt;/strong&gt; Export invoices in different formats, including JSON, XLSX, CSV, and XML.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;I18N Support:&lt;/strong&gt; i18n support with multiple languages for UI and templates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Themeable Templates:&lt;/strong&gt; Select a theme color for the invoice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Custom Inputs:&lt;/strong&gt; Define your own inputs that are missing from the default invoice builder. (Ex: VAT number)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Individual Tax for Line Items:&lt;/strong&gt; Add tax details for a specific line item other than the general tax&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Please be advised that there are currently issues when using this application in the Mozilla Firefox browser. For more information, refer to &lt;a href=&#34;https://github.com/aliabb01/invoify/issues/11&#34;&gt;Issue #11&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://invoify.vercel.app&#34;&gt;live demo&lt;/a&gt; to see Invoify in action.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow these instructions to get Invoify up and running on your local machine.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js and npm installed on your system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/al1abb/invoify.git&#xA;cd invoify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an .env.local file with this content (This step is for sending pdf to email feature):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-env&#34;&gt;NODEMAILER_EMAIL=your_email@example.com&#xA;NODEMAILER_PW=your_email_password&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start development server&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open your web browser and access the application at &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;!-- LICENSE --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the MIT License. See &lt;code&gt;LICENSE.txt&lt;/code&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>