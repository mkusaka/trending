<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-02T02:00:36Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>treetrum/amazon-kindle-bulk-downloader</title>
    <updated>2025-03-02T02:00:36Z</updated>
    <id>tag:github.com,2025-03-02:/treetrum/amazon-kindle-bulk-downloader</id>
    <link href="https://github.com/treetrum/amazon-kindle-bulk-downloader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Allows you to bulk download all your Kindle eBook in a more automated fashion. This tool allows you to create backup copies of the books you&#39;ve already purchased.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] As of 26th February 2025, Amazon has removed the ability to download backups of your Kindle books. Unfortunately, this means that this tool is no longer functional.&lt;br&gt;&lt;br&gt; Thank you to everyone who helped triage issues, contributed code, and provided support to others. The amount of traffic this tool received in the week before the shutdown was quite staggering, and I wouldn’t have been able to help quite as many people without the help of the community.&lt;br&gt;&lt;br&gt; Thank you all!&lt;br&gt; Sam&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Amazon Kindle eBook Bulk Downloader&lt;/h1&gt; &#xA;&lt;p&gt;Designed for downloading your Kindle eBooks in a more automated fashion than is typically permitted, this tool allows you to create backup copies of the books you&#39;ve already purchased.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-Requisites&lt;/h2&gt; &#xA;&lt;p&gt;The most important pre-requisite is that you have a physical e-ink Kindle or an Amazon Fire Tablet linked to your Amazon account. This is a requirement from Amazon&#39;s side and this tool does not offer a way to bypass this.&lt;/p&gt; &#xA;&lt;p&gt;An important distinction is that the physical Kindle you have linked cannot be one of the latest 2024 models. For whatever reason, Amazon has decided to block the ability to download books from these devices. This tool will not work with these devices.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to check if this tool will work for you is to log into your Amazon account manually and navigate to &lt;code&gt;Manage Your Content and Devices&lt;/code&gt;. From there when clicking on &lt;code&gt;More Actions &amp;gt; Download &amp;amp; Transfer via USB&lt;/code&gt; on a book, you should see your Kindle or Fire Tablet device listed. If you see the message &lt;code&gt;You do not have any compatible devices registered for this content&lt;/code&gt; then it means you:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;either don&#39;t have a Kindle or Fire Tablet device linked to your account, OR&lt;/li&gt; &#xA; &lt;li&gt;have a Kindle or Fire Tablet device that is not compatible with this tool&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are able to proceed to the next screen and download the book, then this tool should work for you.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You need to have Bun installed before you can run this too. Please see here for the most up to date instructions for your system: &lt;a href=&#34;https://bun.sh/docs/installation&#34;&gt;https://bun.sh/docs/installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once Bun is installed, clone this repository, and run the following command from the root of the downloaded repository to install dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You may need to restart your prompt (terminal, PowerShell, etc) before calling the &lt;code&gt;bun install&lt;/code&gt; command&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then run the following command to install a special version of chrome for use by this tool&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bunx puppeteer browsers install chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Note that amazon credentials will need to be provided. Currently this script expects them to be in the following ENV variables:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;AMAZON_USER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Account username&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Account password&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;OTP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6 digit one-time password&lt;/td&gt; &#xA;   &lt;td&gt;If 2 factor auth is enabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note this tool is already configured to read environment variables from an &lt;code&gt;.env&lt;/code&gt; file in the root of the repo. You can make a copy of the &lt;code&gt;.env.template&lt;/code&gt; file called &lt;code&gt;.env&lt;/code&gt; and fill in your details there for an easy way to get started.&lt;/p&gt; &#xA;&lt;h3&gt;CLI Arguments&lt;/h3&gt; &#xA;&lt;p&gt;The following CLI arguments are made available to customise the downloader to your needs&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--baseUrl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A (Will be prompted if not provided)&lt;/td&gt; &#xA;   &lt;td&gt;Which Amazon base URL to use. Note, this MUST include &lt;a href=&#34;http://www&#34;&gt;www&lt;/a&gt;. in order to work properly&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--totalDownloads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Infinity&lt;/td&gt; &#xA;   &lt;td&gt;Total number of downloads to do&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--maxConcurrency&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Maximum number of concurrent downloads&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--startFromOffset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Index offset to begin downloading from. Allows resuming of previous partially finished attempts.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--manualAuth&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Allows user to manually login using the pupeteer UI instead of automatically using ENV vars. Use when auto login is not working.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--duplicateHandling&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;skip&lt;/td&gt; &#xA;   &lt;td&gt;How to handle files of the same name/size on the filesystem. Options: skip, overwrite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--searchPhrase&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Search phrase to filter books by&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--searchPhraseDirs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;If set to true, downloaded books will be saved to a sub-directory named after the search phrase within the downloadsDir&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--downloadsDir&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Overrides the default downloads directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--skipBooksMatching&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If a book title contains this phrase, don&#39;t attempt to download it. Case sensitive. Useful for skipping books that crashes. Can be provided multiple times for multiple skip options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;You can run this tool using the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Command line arguments can be provided as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run start --baseUrl &#34;https://www.amazon.com.au&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/treetrum/amazon-kindle-bulk-downloader/main/docker-instructions.md&#34;&gt;Docker instructions here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re having any issues with the tool, please first ensure that you have the latest version of the code by running &lt;code&gt;git pull&lt;/code&gt; or redownloading the repository and then running &lt;code&gt;bun install&lt;/code&gt; from the root of the repository.&lt;/p&gt; &#xA;&lt;p&gt;In addition, please ensure that you have followed the &lt;a href=&#34;https://github.com/treetrum/amazon-kindle-bulk-downloader?tab=readme-ov-file#pre-requisites&#34;&gt;pre-requisites&lt;/a&gt; section carefully and can download a book manually through the website.&lt;/p&gt; &#xA;&lt;h3&gt;Common Errors&lt;/h3&gt; &#xA;&lt;h4&gt;Error: Found 0 books in total&lt;/h4&gt; &#xA;&lt;p&gt;This error &lt;em&gt;may&lt;/em&gt; indicate that you are authenticated to the wrong Amazon account for your locale.&lt;/p&gt; &#xA;&lt;p&gt;You need to ensure that you provide the base URL for the Amazon region where your purchases were made. For example, if you are in Australia, you should use &lt;code&gt;https://www.amazon.com.au&lt;/code&gt;, if you are in the USA, you should use &lt;code&gt;https://www.amazon.com&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;This base URL should be provided as a CLI argument when running the tool. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# For USA based accounts&#xA;bun run start --baseUrl &#34;https://www.amazon.com&#34;&#xA;&#xA;# For Australia based accounts&#xA;bun run start --baseUrl &#34;https://www.amazon.com.au&#34;&#xA;&#xA;# ... etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Error: 404 errors when downloading books&lt;/h4&gt; &#xA;&lt;p&gt;From my testing, 404 errors on book downloads largely occur when the tool is attempting to download an item that is simply not downloadable. From what I can tell, this includes certain comic book purchases. Users with comic book libraries and knowledge of javascript are encouraged to contribute to the project to help test and fix this issue.&lt;/p&gt; &#xA;&lt;p&gt;There has also &lt;a href=&#34;https://github.com/treetrum/amazon-kindle-bulk-downloader/issues/162#issue-2864124279&#34;&gt;been an indication&lt;/a&gt; that 404s can ocurr when a book is present on too many devices. If that&#39;s the case, you can try deleting the book of some of your devices and try the tool again.&lt;/p&gt; &#xA;&lt;h4&gt;Error: Failed to parse CRSF token&lt;/h4&gt; &#xA;&lt;p&gt;This indicates that your login did not fully succeed. There are a multitude of reasons why this could happen however the simplest fix is often to login using the --manualAuth CLI flag instead of using the automated process.&lt;/p&gt; &#xA;&lt;h4&gt;Error: &lt;code&gt;Script not found &#34;start&#34;&lt;/code&gt; when running &lt;code&gt;bun run start&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This error occurs when you are running &lt;code&gt;bun run start&lt;/code&gt; from outside the root of the repository. You need to be in the root of the repository to run this command.&lt;/p&gt; &#xA;&lt;p&gt;After cloning the you will need to change directory (&lt;code&gt;cd&lt;/code&gt;) into the repo folder by doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd amazon-kindle-bulk-downloader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After which you should be able to run the following without getting errors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun install&#xA;bun run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;All downloads are ~100kb files that are not valid books&lt;/h4&gt; &#xA;&lt;p&gt;The 100kb files are actually error web pages instead of book files and likely indicates that the book files were purchased in another region (even if they show up!).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/treetrum/amazon-kindle-bulk-downloader/issues/192#issuecomment-2676081558&#34;&gt;here&lt;/a&gt; for original report of this.&lt;/p&gt; &#xA;&lt;p&gt;The fix is to ensure the correct baseUrl is passed for the region that the books were purchased in.&lt;/p&gt; &#xA;&lt;h4&gt;Error: &lt;code&gt;[ERR_REQUIRE_ESM]: Must use import to load ES Module&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This appears to be when you&#39;ve got an older version of Node installed on your system.&lt;/p&gt; &#xA;&lt;p&gt;Whilst this tool doesn&#39;t explicitly require Node (Bun is an &lt;em&gt;alternative&lt;/em&gt;), it seems that having a Node version older than v16 on your computer can cause issues.&lt;/p&gt; &#xA;&lt;p&gt;If you experience this, try upgrading your local Node version to &amp;gt;= v16 and see if that helps.&lt;/p&gt; &#xA;&lt;p&gt;HUGE thanks to @keithzg in #145 for the investigation work done on this front.&lt;/p&gt; &#xA;&lt;h4&gt;Crashes when encountering certain books&lt;/h4&gt; &#xA;&lt;p&gt;If the program always crashes on a specific book, I recommend using the &lt;code&gt;--skipBooksMatching&lt;/code&gt; flag to exclude that book from being downloaded. This may help with out of memory issues, etc. You can then attempt to download the problematic book manually from the browser.&lt;/p&gt; &#xA;&lt;p&gt;Note, this flag can be provided multiple times to skip books matching one of any number of matching phrases.&lt;/p&gt; &#xA;&lt;p&gt;I.e. given a list of the following books:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Lord of the Rings&lt;/li&gt; &#xA; &lt;li&gt;The Hobbit&lt;/li&gt; &#xA; &lt;li&gt;The Silmarillion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you provided the following skip arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run start --skipBooksMatching &#34;Hobbit&#34; --skipBooksMatching &#34;Silmarillion&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Only &#34;The Lord of the Rings&#34; would actually get downloaded.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>infiniflow/ragflow</title>
    <updated>2025-03-02T02:00:36Z</updated>
    <id>tag:github.com,2025-03-02:/infiniflow/ragflow</id>
    <link href="https://github.com/infiniflow/ragflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RAGFlow is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://demo.ragflow.io/&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.png&#34; width=&#34;520&#34; alt=&#34;ragflow logo&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md&#34;&gt;繁体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md&#34;&gt;한국어&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md&#34;&gt;Bahasa Indonesia&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md&#34;&gt;Português (Brasil)&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://x.com/intent/follow?screen_name=infiniflowai&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5&#34; alt=&#34;follow on X(Twitter)&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://demo.ragflow.io&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Static Badge&#34; src=&#34;https://img.shields.io/badge/Online-Demo-4e6b99&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/infiniflow/ragflow&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docker_pull-ragflow:v0.16.0-brightgreen&#34; alt=&#34;docker pull infiniflow/ragflow:v0.16.0&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infiniflow/ragflow/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release&#34; alt=&#34;Latest Release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/infiniflow/ragflow/raw/main/LICENSE&#34;&gt; &lt;img height=&#34;21&#34; src=&#34;https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://ragflow.io/docs/dev/&#34;&gt;Document&lt;/a&gt; | &lt;a href=&#34;https://github.com/infiniflow/ragflow/issues/4214&#34;&gt;Roadmap&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/infiniflowai&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/4XxujFgUN7&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://demo.ragflow.io&#34;&gt;Demo&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;💡 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow&#34;&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🎮 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📌 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates&#34;&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🌟 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features&#34;&gt;Key Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔎 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture&#34;&gt;System Architecture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🎬 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started&#34;&gt;Get Started&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations&#34;&gt;Configurations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models&#34;&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔧 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models&#34;&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🔨 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development&#34;&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📚 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;📜 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🏄 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;🙌 &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;💡 What is RAGFlow?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ragflow.io/&#34;&gt;RAGFlow&lt;/a&gt; is an open-source RAG (Retrieval-Augmented Generation) engine based on deep document understanding. It offers a streamlined RAG workflow for businesses of any scale, combining LLM (Large Language Models) to provide truthful question-answering capabilities, backed by well-founded citations from various complex formatted data.&lt;/p&gt; &#xA;&lt;h2&gt;🎮 Demo&lt;/h2&gt; &#xA;&lt;p&gt;Try our demo at &lt;a href=&#34;https://demo.ragflow.io&#34;&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/infiniflow/ragflow/assets/7248/2f6baa3e-1092-4f11-866d-36f6a9d075e5&#34; width=&#34;1200&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/504bbbf1-c9f7-4d83-8cc5-e9cb63c26db6&#34; width=&#34;1200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🔥 Latest Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2025-02-05 Updates the model list of &#39;SILICONFLOW&#39; and adds support for Deepseek-R1/DeepSeek-V3.&lt;/li&gt; &#xA; &lt;li&gt;2025-01-26 Optimizes knowledge graph extraction and application, offering various configuration options.&lt;/li&gt; &#xA; &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; &#xA; &lt;li&gt;2024-12-04 Adds support for pagerank score in knowledge base.&lt;/li&gt; &#xA; &lt;li&gt;2024-11-22 Adds more variables to Agent.&lt;/li&gt; &#xA; &lt;li&gt;2024-11-01 Adds keyword extraction and related question generation to the parsed chunks to improve the accuracy of retrieval.&lt;/li&gt; &#xA; &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎉 Stay Tuned&lt;/h2&gt; &#xA;&lt;p&gt;⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! 🌟&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba&#34; width=&#34;1200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🌟 Key Features&lt;/h2&gt; &#xA;&lt;h3&gt;🍭 &lt;strong&gt;&#34;Quality in, quality out&#34;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md&#34;&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; &#xA; &lt;li&gt;Finds &#34;needle in a data haystack&#34; of literally unlimited tokens.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🍱 &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intelligent and explainable.&lt;/li&gt; &#xA; &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🌱 &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; &#xA; &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🍔 &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🛀 &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; &#xA; &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; &#xA; &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; &#xA; &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔎 System Architecture&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;margin-top:20px;margin-bottom:20px;&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485&#34; width=&#34;1000&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🎬 Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; &#xA; &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; &#xA; &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; &#xA; &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1 &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚀 Start up the server&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sysctl vm.max_map_count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# In this case, we set it to 262144:&#xA;$ sudo sysctl -w vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/infiniflow/ragflow.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;The command below downloads the &lt;code&gt;v0.16.0-slim&lt;/code&gt; edition of the RAGFlow Docker image. Refer to the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.16.0-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server. For example: set &lt;code&gt;RAGFLOW_IMAGE=infiniflow/ragflow:v0.16.0&lt;/code&gt; for the full edition &lt;code&gt;v0.16.0&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd ragflow/docker&#xA;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;RAGFlow image tag&lt;/th&gt; &#xA;     &lt;th&gt;Image size (GB)&lt;/th&gt; &#xA;     &lt;th&gt;Has embedding models?&lt;/th&gt; &#xA;     &lt;th&gt;Stable?&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;v0.16.0&lt;/td&gt; &#xA;     &lt;td&gt;≈9&lt;/td&gt; &#xA;     &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Stable release&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;v0.16.0-slim&lt;/td&gt; &#xA;     &lt;td&gt;≈2&lt;/td&gt; &#xA;     &lt;td&gt;❌&lt;/td&gt; &#xA;     &lt;td&gt;Stable release&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;nightly&lt;/td&gt; &#xA;     &lt;td&gt;≈9&lt;/td&gt; &#xA;     &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;nightly-slim&lt;/td&gt; &#xA;     &lt;td&gt;≈2&lt;/td&gt; &#xA;     &lt;td&gt;❌&lt;/td&gt; &#xA;     &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker logs -f ragflow-server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;      ____   ___    ______ ______ __&#xA;     / __ \ /   |  / ____// ____// /____  _      __&#xA;    / /_/ // /| | / / __ / /_   / // __ \| | /| / /&#xA;   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /&#xA;  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/&#xA;&#xA; * Running on all addresses (0.0.0.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://ragflow.io/docs/dev/llm_api_key_setup&#34;&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🔧 Configurations&lt;/h2&gt; &#xA;&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env&#34;&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md&#34;&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template&#34;&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; &#xA;&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href=&#34;https://github.com/infiniflow/infinity/&#34;&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker/docker-compose.yml down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker compose -f docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🔧 Build a Docker image without embedding models&lt;/h2&gt; &#xA;&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;docker build --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 Build a Docker image including embedding models&lt;/h2&gt; &#xA;&lt;p&gt;This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;docker build -f Dockerfile -t infiniflow/ragflow:nightly .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔨 Launch service from source for development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install uv, or skip this step if it is already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pipx install uv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/infiniflow/ragflow.git&#xA;cd ragflow/&#xA;uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose -f docker/docker-compose-base.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HF_ENDPOINT=https://hf-mirror.com&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source .venv/bin/activate&#xA;export PYTHONPATH=$(pwd)&#xA;bash docker/launch_backend_service.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd web&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/category/guides&#34;&gt;User guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/category/references&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ragflow.io/docs/dev/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📜 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/infiniflow/ragflow/issues/4214&#34;&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🏄 Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/4XxujFgUN7&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/infiniflowai&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/infiniflow/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙌 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href=&#34;https://raw.githubusercontent.com/infiniflow/ragflow/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mountain-loop/yaak</title>
    <updated>2025-03-02T02:00:36Z</updated>
    <id>tag:github.com,2025-03-02:/mountain-loop/yaak</id>
    <link href="https://github.com/mountain-loop/yaak" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most intuitive desktop API client. Organize and execute REST, GraphQL, WebSockets, Server Sent Events, and gRPC 🦬&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Yaak API Client&lt;/h1&gt; &#xA;&lt;p&gt;Yaak is a desktop API client for interacting with REST, GraphQL, Server Sent Events (SSE), WebSocket, and gRPC APIs. It&#39;s built using &lt;a href=&#34;https://tauri.app&#34;&gt;Tauri&lt;/a&gt;, Rust, and ReactJS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/f18e963f-0b68-4ecb-b8b8-cb71aa9aec02&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🪂 Import data from Postman, Insomnia, OpenAPI, Swagger, or Curl.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;📤 Send requests via REST, GraphQL, Server Sent Events (SSE), WebSockets, or gRPC.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔐 Automatically authorize requests with OAuth 2.0, JWT tokens, Basic Auth, and more.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔎 Filter response bodies using JSONPath or XPath queries.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;⛓️ Chain together multiple requests to dynamically reference values.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;📂 Organize requests into workspaces and nested folders.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🧮 Use environment variables to easily switch between Prod and Dev.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🏷️ Send dynamic values like UUIDs or timestamps using template tags.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎨 Choose from many of the included themes, or make your own.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;💽 Mirror workspace data to a directory for integration with Git or Dropbox.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;📜 View response history for each request.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔌 Create your own plugins for authentication, template tags, and more!&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛜 Configure a proxy to access firewall-blocked APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback and Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;All feedback, bug reports, questions, and feature requests should be reported to &lt;a href=&#34;https://feedback.yaak.app&#34;&gt;feedback.yaak.app&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BiteCraft/yaak2postman&#34;&gt;&lt;code&gt;yaak2postman&lt;/code&gt;&lt;/a&gt; CLI for converting Yaak data exports to Postman-compatible collections&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution Policy&lt;/h2&gt; &#xA;&lt;p&gt;Yaak is open source, but only accepting contributions for bug fixes. To get started, visit &lt;a href=&#34;https://raw.githubusercontent.com/mountain-loop/yaak/master/DEVELOPMENT.md&#34;&gt;&lt;code&gt;DEVELOPMENT.md&lt;/code&gt;&lt;/a&gt; for tips on setting up your environment.&lt;/p&gt;</summary>
  </entry>
</feed>