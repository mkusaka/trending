<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-19T01:47:07Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mermaid-js/mermaid</title>
    <updated>2025-01-19T01:47:07Z</updated>
    <id>tag:github.com,2025-01-19:/mermaid-js/mermaid</id>
    <link href="https://github.com/mermaid-js/mermaid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generation of diagrams like flowcharts or sequence diagrams from text in a similar manner as markdown&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/docs/public/favicon.svg?sanitize=true&#34; height=&#34;150&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Mermaid &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Generate diagrams from markdown-like text. &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/mermaid&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/mermaid?color=ff3670&amp;amp;label=&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://mermaid.live/&#34;&gt;&lt;b&gt;Live Editor!&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://mermaid.js.org&#34;&gt;üìñ Documentation&lt;/a&gt; | &lt;a href=&#34;https://mermaid.js.org/intro/&#34;&gt;üöÄ Getting Started&lt;/a&gt; | &lt;a href=&#34;https://www.jsdelivr.com/package/npm/mermaid&#34;&gt;üåê CDN&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/AgrbSrBer3&#34; title=&#34;Discord invite&#34;&gt;üôå Join Us&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/README.zh-CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Try Live Editor previews of future releases: &lt;a href=&#34;https://develop.git.mermaid.live/&#34; title=&#34;Try the mermaid version from the develop branch.&#34;&gt;Develop&lt;/a&gt; | &lt;a href=&#34;https://next.git.mermaid.live/&#34; title=&#34;Try the mermaid version from the next branch.&#34;&gt;Next&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/mermaid&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/mermaid&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mermaid-js/mermaid/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/mermaid-js/mermaid/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/package/mermaid&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/mermaid&#34; alt=&#34;npm minified gzipped bundle size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/github/mermaid-js/mermaid/tree/develop&#34;&gt;&lt;img src=&#34;https://codecov.io/github/mermaid-js/mermaid/branch/develop/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/mermaid&#34;&gt;&lt;img src=&#34;https://img.shields.io/jsdelivr/npm/hm/mermaid&#34; alt=&#34;CDN Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/mermaid&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/mermaid&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/AgrbSrBer3&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?message=join%20chat&amp;amp;color=9cf&amp;amp;logo=discord&amp;amp;label=discord&#34; alt=&#34;Join our Discord!&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/mermaidjs_&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Social-mermaidjs__-blue?style=social&amp;amp;logo=X&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://argos-ci.com?utm_source=mermaid&amp;amp;utm_campaign=oss&#34;&gt;&lt;img src=&#34;https://argos-ci.com/badge.svg?sanitize=true&#34; alt=&#34;Covered by Argos Visual Testing&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/mermaid-js/mermaid&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/mermaid-js/mermaid/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/img/header.png&#34; alt=&#34;&#34;&gt; &#xA;&lt;p&gt;&lt;span&gt;üèÜ&lt;/span&gt; &lt;strong&gt;Mermaid was nominated and won the &lt;a href=&#34;https://osawards.com/javascript/2019&#34;&gt;JS Open Source Awards (2019)&lt;/a&gt; in the category &#34;The most exciting use of technology&#34;!!!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Thanks to all involved, people committing pull requests, people answering questions! üôè&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mermaid.js.org/landing/&#34;&gt;&lt;img src=&#34;https://github.com/mermaid-js/mermaid/raw/master/docs/intro/img/book-banner-post-release.jpg&#34; alt=&#34;Explore Mermaid.js in depth, with real-world examples, tips &amp;amp; tricks from the creator... The first official book on Mermaid is available for purchase. Check it out!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Expand contents&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#release&#34;&gt;Release&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#related-projects&#34;&gt;Related projects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#contributors---&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#security-and-safe-diagrams&#34;&gt;Security and safe diagrams&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#reporting-vulnerabilities&#34;&gt;Reporting vulnerabilities&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mermaid-js/mermaid/develop/#appreciation&#34;&gt;Appreciation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;!-- &lt;Main description&gt;   --&gt; &#xA;&lt;p&gt;Mermaid is a JavaScript-based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Doc-Rot is a Catch-22 that Mermaid helps to solve.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Diagramming and documentation costs precious developer time and gets outdated quickly. But not having diagrams or docs ruins productivity and hurts organizational learning.&lt;br&gt; Mermaid addresses this problem by enabling users to create easily modifiable diagrams. It can also be made part of production scripts (and other pieces of code).&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mermaid allows even non-programmers to easily create detailed diagrams through the &lt;a href=&#34;https://mermaid.live/&#34;&gt;Mermaid Live Editor&lt;/a&gt;.&lt;br&gt; For video tutorials, visit our &lt;a href=&#34;https://mermaid.js.org/ecosystem/tutorials.html&#34;&gt;Tutorials&lt;/a&gt; page. Use Mermaid with your favorite applications, check out the list of &lt;a href=&#34;https://mermaid.js.org/ecosystem/integrations-community.html&#34;&gt;Integrations and Usages of Mermaid&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also use Mermaid within &lt;a href=&#34;https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/&#34;&gt;GitHub&lt;/a&gt; as well many of your other favorite applications‚Äîcheck out the list of &lt;a href=&#34;https://mermaid.js.org/ecosystem/integrations-community.html&#34;&gt;Integrations and Usages of Mermaid&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a more detailed introduction to Mermaid and some of its more basic uses, look to the &lt;a href=&#34;https://mermaid.js.org/intro/getting-started.html&#34;&gt;Beginner&#39;s Guide&lt;/a&gt;, &lt;a href=&#34;https://mermaid.js.org/config/usage.html&#34;&gt;Usage&lt;/a&gt; and &lt;a href=&#34;https://mermaid.js.org/ecosystem/tutorials.html&#34;&gt;Tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our PR Visual Regression Testing is powered by &lt;a href=&#34;https://argos-ci.com/?utm_source=mermaid&amp;amp;utm_campaign=oss&#34;&gt;Argos&lt;/a&gt; with their generous Open Source plan. It makes the process of reviewing PRs with visual changes a breeze.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://argos-ci.com?utm_source=mermaid&amp;amp;utm_campaign=oss&#34;&gt;&lt;img src=&#34;https://argos-ci.com/badge-large.svg?sanitize=true&#34; alt=&#34;Covered by Argos Visual Testing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In our release process we rely heavily on visual regression tests using &lt;a href=&#34;https://applitools.com/&#34;&gt;applitools&lt;/a&gt;. Applitools is a great service which has been easy to use and integrate with our tests.&lt;/p&gt; &#xA;&lt;a href=&#34;https://applitools.com/&#34;&gt; &#xA; &lt;svg width=&#34;170&#34; height=&#34;32&#34; viewbox=&#34;0 0 170 32&#34; fill=&#34;none&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;  &lt;mask id=&#34;a&#34; maskunits=&#34;userSpaceOnUse&#34; x=&#34;27&#34; y=&#34;0&#34; width=&#34;143&#34; height=&#34;32&#34;&gt;&#xA;   &lt;path fill-rule=&#34;evenodd&#34; clip-rule=&#34;evenodd&#34; d=&#34;M27.732.227h141.391v31.19H27.733V.227z&#34; fill=&#34;#fff&#34;&gt;&lt;/path&gt;&#xA;  &lt;/mask&gt;&#xA;  &lt;g mask=&#34;url(#a)&#34;&gt;&#xA;   &lt;path fill-rule=&#34;evenodd&#34; clip-rule=&#34;evenodd&#34; d=&#34;M153.851 22.562l1.971-3.298c1.291 1.219 3.837 2.402 5.988 2.402 1.971 0 2.903-.753 2.903-1.829 0-2.832-10.253-.502-10.253-7.313 0-2.904 2.51-5.45 7.099-5.45 2.904 0 5.234 1.004 6.955 2.367l-1.829 3.226c-1.039-1.075-3.011-2.008-5.126-2.008-1.65 0-2.725.717-2.725 1.685 0 2.546 10.289.395 10.289 7.386 0 3.19-2.724 5.52-7.528 5.52-3.012 0-5.916-1.003-7.744-2.688zm-5.7 2.259h4.553V.908h-4.553v23.913zm-6.273-8.676c0-2.689-1.578-5.02-4.446-5.02-2.832 0-4.409 2.331-4.409 5.02 0 2.724 1.577 5.055 4.409 5.055 2.868 0 4.446-2.33 4.446-5.055zm-13.588 0c0-4.912 3.442-9.07 9.142-9.07 5.736 0 9.178 4.158 9.178 9.07 0 4.911-3.442 9.106-9.178 9.106-5.7 0-9.142-4.195-9.142-9.106zm-5.628 0c0-2.689-1.577-5.02-4.445-5.02-2.832 0-4.41 2.331-4.41 5.02 0 2.724 1.578 5.055 4.41 5.055 2.868 0 4.445-2.33 4.445-5.055zm-13.587 0c0-4.912 3.441-9.07 9.142-9.07 5.736 0 9.178 4.158 9.178 9.07 0 4.911-3.442 9.106-9.178 9.106-5.701 0-9.142-4.195-9.142-9.106zm-8.425 4.338v-8.999h-2.868v-3.98h2.868V2.773h4.553v4.733h3.514v3.979h-3.514v7.78c0 1.111.574 1.936 1.578 1.936.681 0 1.326-.251 1.577-.538l.968 3.478c-.681.609-1.9 1.11-3.8 1.11-3.191 0-4.876-1.648-4.876-4.767zm-8.962 4.338h4.553V7.505h-4.553V24.82zm-.43-21.905a2.685 2.685 0 012.688-2.69c1.506 0 2.725 1.184 2.725 2.69a2.724 2.724 0 01-2.725 2.724c-1.47 0-2.688-1.219-2.688-2.724zM84.482 24.82h4.553V.908h-4.553v23.913zm-6.165-8.676c0-2.976-1.793-5.02-4.41-5.02-1.47 0-3.119.825-3.908 1.973v6.094c.753 1.111 2.438 2.008 3.908 2.008 2.617 0 4.41-2.044 4.41-5.055zm-8.318 6.453v8.82h-4.553V7.504H70v2.187c1.327-1.685 3.227-2.618 5.342-2.618 4.446 0 7.672 3.299 7.672 9.07 0 5.773-3.226 9.107-7.672 9.107-2.043 0-3.907-.86-5.342-2.653zm-10.718-6.453c0-2.976-1.793-5.02-4.41-5.02-1.47 0-3.119.825-3.908 1.973v6.094c.753 1.111 2.438 2.008 3.908 2.008 2.617 0 4.41-2.044 4.41-5.055zm-8.318 6.453v8.82H46.41V7.504h4.553v2.187c1.327-1.685 3.227-2.618 5.342-2.618 4.446 0 7.672 3.299 7.672 9.07 0 5.773-3.226 9.107-7.672 9.107-2.043 0-3.908-.86-5.342-2.653zm-11.758-1.936V18.51c-.753-1.004-2.187-1.542-3.657-1.542-1.793 0-3.263.968-3.263 2.617 0 1.65 1.47 2.582 3.263 2.582 1.47 0 2.904-.502 3.657-1.506zm0 4.159v-1.829c-1.183 1.434-3.227 2.259-5.485 2.259-2.761 0-5.988-1.864-5.988-5.736 0-4.087 3.227-5.593 5.988-5.593 2.33 0 4.337.753 5.485 2.115V13.85c0-1.756-1.506-2.904-3.8-2.904-1.829 0-3.55.717-4.984 2.044L28.63 9.8c2.115-1.901 4.84-2.726 7.564-2.726 3.98 0 7.6 1.578 7.6 6.561v11.186h-4.588z&#34; fill=&#34;#00A298&#34;&gt;&lt;/path&gt;&#xA;  &lt;/g&gt;&#xA;  &lt;path fill-rule=&#34;evenodd&#34; clip-rule=&#34;evenodd&#34; d=&#34;M14.934 16.177c0 1.287-.136 2.541-.391 3.752-1.666-1.039-3.87-2.288-6.777-3.752 2.907-1.465 5.11-2.714 6.777-3.753.255 1.211.39 2.466.39 3.753m4.6-7.666V4.486a78.064 78.064 0 01-4.336 3.567c-1.551-2.367-3.533-4.038-6.14-5.207C11.1 4.658 12.504 6.7 13.564 9.262 5.35 15.155 0 16.177 0 16.177s5.35 1.021 13.564 6.915c-1.06 2.563-2.463 4.603-4.507 6.415 2.607-1.169 4.589-2.84 6.14-5.207a77.978 77.978 0 014.336 3.568v-4.025s-.492-.82-2.846-2.492c.6-1.611.93-3.354.93-5.174a14.8 14.8 0 00-.93-5.174c2.354-1.673 2.846-2.492 2.846-2.492&#34; fill=&#34;#00A298&#34;&gt;&lt;/path&gt;&#xA; &lt;/svg&gt; &lt;/a&gt; &#xA;&lt;!-- &lt;/Main description&gt; --&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;The following are some examples of the diagrams, charts and graphs that can be made using Mermaid. Click here to jump into the &lt;a href=&#34;https://mermaid.js.org/intro/syntax-reference.html&#34;&gt;text syntax&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- &lt;Flowchart&gt; --&gt; &#xA;&lt;h3&gt;Flowchart [&lt;a href=&#34;https://mermaid.js.org/syntax/flowchart.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNpNkMtqwzAQRX9FzKqFJK7t1km8KDQP6KJQSLOLvZhIY1tgS0GWmgbb_165IaFaiXvOFTPqgGtBkEJR6zOv0Fj2scsU8-ft8I5G5Gw6fe339GN7tnrYaafE45WvRsLW3Ya4bKVWwzVe_xU-FfVsc9hR62rLwvw_2591z7Y3FuUwgYZMg1L4ObrRzMBW1FAGqb8KKtCLGWRq8Ko7CbS0FdJqA2mBdUsTQGf110VxSK1xdJM2EkuDzd2qNQrypQ7s5TQuXcrW-ie5VoUsx9yZ2seVtac2DYIRz0ppK3eccd0ErRTjD1XfyyRIomSBUUzJPMaXOBb8GC4XRfQcFmL-FEYIwzD8AggvcHE&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;flowchart LR&#xA;&#xA;A[Hard] --&amp;gt;|Text| B(Round)&#xA;B --&amp;gt; C{Decision}&#xA;C --&amp;gt;|One| D[Result 1]&#xA;C --&amp;gt;|Two| E[Result 2]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart LR&#xA;&#xA;A[Hard] --&amp;gt;|Text| B(Round)&#xA;B --&amp;gt; C{Decision}&#xA;C --&amp;gt;|One| D[Result 1]&#xA;C --&amp;gt;|Two| E[Result 2]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sequence diagram [&lt;a href=&#34;https://mermaid.js.org/syntax/sequenceDiagram.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNo9kMluwjAQhl_F-AykQMuSA1WrbuLQQ3v1ZbAnsVXHkzrjVhHi3etQwKfRv4w-z0FqMihL2eF3wqDxyUEdoVHhwTuNk-12RzaU4g29JzHMY2HpV0BE0VO6V8ETtdkGz1Zb1F8qiPyG5LX84mrLAmpwoWNh-5a0pWCiAxUwGBXeiVHEU4oq8V_6AHYUwAu2lLLTjVQ4bc1rT2yleI0IfJG320faZ9ABbk-Jz3hZnFxBduR9L2oiM5Jj2WBswJn8-cMArSRbbFDJMo8GK0ielVThmKOpNcD4bBxTlGUFvsOxhMT02QctS44JL6HzAS-iJzCYOwfJfTscunYd542aQuXqQU_RZ9kyt11ZFIM9rR3btJ9qaorOGQuR7c9mWSznyzXMF7hcLeBusTB6P9usq_ntrDKrm9kc5PF4_AMJE56Z&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sequenceDiagram&#xA;Alice-&amp;gt;&amp;gt;John: Hello John, how are you?&#xA;loop HealthCheck&#xA;    John-&amp;gt;&amp;gt;John: Fight against hypochondria&#xA;end&#xA;Note right of John: Rational thoughts!&#xA;John--&amp;gt;&amp;gt;Alice: Great!&#xA;John-&amp;gt;&amp;gt;Bob: How about you?&#xA;Bob--&amp;gt;&amp;gt;John: Jolly good!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;Alice-&amp;gt;&amp;gt;John: Hello John, how are you?&#xA;loop HealthCheck&#xA;    John-&amp;gt;&amp;gt;John: Fight against hypochondria&#xA;end&#xA;Note right of John: Rational thoughts!&#xA;John--&amp;gt;&amp;gt;Alice: Great!&#xA;John-&amp;gt;&amp;gt;Bob: How about you?&#xA;Bob--&amp;gt;&amp;gt;John: Jolly good!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gantt chart [&lt;a href=&#34;https://mermaid.js.org/syntax/gantt.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNp90cGOgyAQBuBXIZxtFbG29bbZ3fsmvXKZylhJEAyOTZrGd1_sto3xsHMBhu-HBO689hp5xS_giJQbsCbjHTv9jcp9-q63SKhZpb3DhMXSOIiE5ZkoNpnYZGXynh6U-4jBK7JnVfBYJo9QvgjtEya1cj8QwFq0TMz4lZqxTBg0hOF5m1jifI2Lf7Bc490CyxUu1rhc4GLGPOEdhg6Mjq92V44xxanFDhWv4lRjA6MlxZWbIh17DYTf2pAPvGrADphwGMmfbq7mFYURX-jLwCVA91bWg8YYunO69Y8vMgPFI2vvGnOZ-2Owsd0S9UOVpvP29mKoHc_b2nfpYHQLgdrrsUzLvDxALrHcS9hJqeuzOB6avBCN3mciBz5N0y_wxZ0J&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;gantt&#xA;    section Section&#xA;    Completed :done,    des1, 2014-01-06,2014-01-08&#xA;    Active        :active,  des2, 2014-01-07, 3d&#xA;    Parallel 1   :         des3, after des1, 1d&#xA;    Parallel 2   :         des4, after des1, 1d&#xA;    Parallel 3   :         des5, after des3, 1d&#xA;    Parallel 4   :         des6, after des4, 1d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt&#xA;    section Section&#xA;    Completed :done,    des1, 2014-01-06,2014-01-08&#xA;    Active        :active,  des2, 2014-01-07, 3d&#xA;    Parallel 1   :         des3, after des1, 1d&#xA;    Parallel 2   :         des4, after des1, 1d&#xA;    Parallel 3   :         des5, after des3, 1d&#xA;    Parallel 4   :         des6, after des4, 1d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Class diagram [&lt;a href=&#34;https://mermaid.js.org/syntax/classDiagram.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNpdkTFPwzAQhf-K5QlQ2zQJJG1UBaGWDYmBgYEwXO1LYuTEwXYqlZL_jt02asXm--690zvfgTLFkWaUSTBmI6DS0BTt2lfzkKx-p1PytEO9f1FtdaQkI2ulZNGuVqK1qEtgmOfk7BitSzKdOhg59XuNGgk0RDxed-_IOr6uf8cZ6UhTZ8bvHqS5ub1mr9svZPbjk6DEBlu7AQuXyBkx4gcvDk9cUMJq0XT_YaW0kNK5j-ufAoRzcihaQvLcoN4Jv50vvVxw_xrnD3RCG9QNCO4-8OgpqK1dpoJm7smxhF7agp6kfcfB4jMXVmmalW4tnFDorXrbt4xmVvc4is53GKFUwNF5DtTuO3-sShjrJjLVlqLyvNfS4drazmRB4NuzSti6386YagIjeA3a1rtlEiRRsoAoxiSN4SGOOduGy0UZ3YclT-dhBHQYhj8dc6_I&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;classDiagram&#xA;Class01 &amp;lt;|-- AveryLongClass : Cool&#xA;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt; Class01&#xA;Class09 --&amp;gt; C2 : Where am I?&#xA;Class09 --* C3&#xA;Class09 --|&amp;gt; Class07&#xA;Class07 : equals()&#xA;Class07 : Object[] elementData&#xA;Class01 : size()&#xA;Class01 : int chimp&#xA;Class01 : int gorilla&#xA;class Class10 {&#xA;  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;&#xA;  int id&#xA;  size()&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram&#xA;Class01 &amp;lt;|-- AveryLongClass : Cool&#xA;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt; Class01&#xA;Class09 --&amp;gt; C2 : Where am I?&#xA;Class09 --* C3&#xA;Class09 --|&amp;gt; Class07&#xA;Class07 : equals()&#xA;Class07 : Object[] elementData&#xA;Class01 : size()&#xA;Class01 : int chimp&#xA;Class01 : int gorilla&#xA;class Class10 {&#xA;  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;&#xA;  int id&#xA;  size()&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;State diagram [&lt;a href=&#34;https://mermaid.js.org/syntax/stateDiagram.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNpdkEFvgzAMhf8K8nEqpYSNthx22Xbcqcexg0sCiZQQlDhIFeK_L8A6TfXp6fOz9ewJGssFVOAJSbwr7ByadGR1n8T6evpO0vQ1uZDSekOrXGFsPqJPO6q-2-imH8f_0TeHXm50lfelsAMjnEHFY6xpMdRAUhhRQxUlFy0GTTXU_RytYeAx-AdXZB1ULWovdoCB7OXWN1CRC-Ju-r3uz6UtchGHJqDbsPygU57iysb2reoWHpyOWBINvsqypb3vFMlw3TfWZF5xiY7keC6zkpUnZIUojwW-FAVvrvn51LLnvOXHQ84Q5nn-AVtLcwk&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;stateDiagram-v2&#xA;[*] --&amp;gt; Still&#xA;Still --&amp;gt; [*]&#xA;Still --&amp;gt; Moving&#xA;Moving --&amp;gt; Still&#xA;Moving --&amp;gt; Crash&#xA;Crash --&amp;gt; [*]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram-v2&#xA;[*] --&amp;gt; Still&#xA;Still --&amp;gt; [*]&#xA;Still --&amp;gt; Moving&#xA;Moving --&amp;gt; Still&#xA;Moving --&amp;gt; Crash&#xA;Crash --&amp;gt; [*]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pie chart [&lt;a href=&#34;https://mermaid.js.org/syntax/pie.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNo9jsFugzAMhl8F-VzBgEEh13Uv0F1zcYkTIpEEBadShXj3BU3dzf_n77e8wxQUgYDVkvQSbsFsEgpRtEN_5i_kvzx05XiC-xvUHVzAUXRoVe7v0heFBJ7JkQSRR0Ua08ISpD-ymlaFTN_KcoggNC4bXQATh5-Xn0BwTPSWbhZNRPdvLQEV5dIO_FrPZ43dOJ-cgtfWnDzFJeOZed1EVZ3r0lie06Ocgqs2q2aMPD_HvuqbfsCmpf7aYte2anrU46Cbz1qr60fdIBzH8QvW9lkl&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;pie&#xA;&#34;Dogs&#34; : 386&#xA;&#34;Cats&#34; : 85.9&#xA;&#34;Rats&#34; : 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;pie&#xA;&#34;Dogs&#34; : 386&#xA;&#34;Cats&#34; : 85.9&#xA;&#34;Rats&#34; : 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Git graph [experimental - &lt;a href=&#34;https://mermaid.live/edit#pako:eNqNkMFugzAMhl8F-VyVAR1tOW_aA-zKxSSGRCMJCk6lCvHuNZPKZdM0n-zf3_8r8QIqaIIGMqnB8kfEybQ--y4VnLP8-9RF9Mpkmm40hmlnDKmvkPiH_kfS7nFo_VN0FAf6XwocQGgxa_nGsm1bYEOOWmik1dRjGrmF1q-Cpkkj07u2HCI0PY4zHQATh8-7V9BwTPSE3iwOEd1OjQE1iWkBvk_bzQY7s0Sq4Hs7bHqKo8iGeZqbPN_WR7mpSd1RHpvPVhuMbG7XOq_L-oJlRfW5wteq0qorrpe-PBW9Pr8UJcK6rg-BLYPQ&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;h3&gt;Bar chart (using gantt chart) [&lt;a href=&#34;https://mermaid.js.org/syntax/gantt.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNptkU1vhCAQhv8KIenNugiI4rkf6bmXpvEyFVxJFDYyNt1u9r8X63Z7WQ9m5pknLzieaBeMpQ3dg0dsPUkPOhwteXZIXmJcbCT3xMAxkuh8Z8kIEclyMIB209fqKcwTICFvG4IvFy_oLrZ-g9F26ILfQgvNFN94VaRXQ1iWqpumZBcu1J8p1E1TXDx59eQNr5LyEqjJn6hv5QnGNlxevZJmdLLpy5xJSzut45biYCfb0iaVxvawjNjS1p-TCguG16PvaIPzYjO67e3BwX6GiTY9jPFKH43DMF_hGMDY1J4oHg-_f8hFTJFd8L3br3yZx4QHxENsdrt1nO8dDstH3oVpF50ZYMbhU6ud4qoGLqyqBJRCmO6j0HXPZdGbihUc6Pmc0QP49xD-b5X69ZQv2gjO81IwzWqhC1lKrjJ6pA3nVS7SMiVjrKirWlYp5fs3osgrWeo00lorLWvOzz8JVbXm&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;gantt&#xA;    title Git Issues - days since last update&#xA;    dateFormat  X&#xA;    axisFormat %s&#xA;&#xA;    section Issue19062&#xA;    71   : 0, 71&#xA;    section Issue19401&#xA;    36   : 0, 36&#xA;    section Issue193&#xA;    34   : 0, 34&#xA;    section Issue7441&#xA;    9    : 0, 9&#xA;    section Issue1300&#xA;    5    : 0, 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt&#xA;    title Git Issues - days since last update&#xA;    dateFormat  X&#xA;    axisFormat %s&#xA;&#xA;    section Issue19062&#xA;    71   : 0, 71&#xA;    section Issue19401&#xA;    36   : 0, 36&#xA;    section Issue193&#xA;    34   : 0, 34&#xA;    section Issue7441&#xA;    9    : 0, 9&#xA;    section Issue1300&#xA;    5    : 0, 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;User Journey diagram [&lt;a href=&#34;https://mermaid.js.org/syntax/userJourney.html&#34;&gt;docs&lt;/a&gt; - &lt;a href=&#34;https://mermaid.live/edit#pako:eNplkMFuwjAQRH9l5TMiTVIC-FqqnjhxzWWJN4khsSN7XRSh_HsdKBVt97R6Mzsj-yoqq0hIAXCywRkaSwNxWHNHsB_hYt1ZmwYUfiueKtbWwIcFtjf5zgH2eCZgQgkrCXt64GgMg2fUzkvIn5Xd_V5COtMFvCH_62ht_5yk7MU8sn61HDTfxD8VYiF6cj1qFd94nWkpuKWYKWRcFdUYOi5FaaZoDYNCpnel2Toha-w8LQQGtofRVEKyC_Qw7TQ2DvsfV2dRUTy6Ch6H-UMb7TlGVtbUupl5cF3ELfPgZZLM8rLR3IbjsrJ94rVq0XH7uS2SIis2mOVUrHNc5bmqjul2U2evaa3WL2mGYpqmL2BGiho&#34;&gt;live editor&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  journey&#xA;    title My working day&#xA;    section Go to work&#xA;      Make tea: 5: Me&#xA;      Go upstairs: 3: Me&#xA;      Do work: 1: Me, Cat&#xA;    section Go home&#xA;      Go downstairs: 5: Me&#xA;      Sit down: 3: Me&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;  journey&#xA;    title My working day&#xA;    section Go to work&#xA;      Make tea: 5: Me&#xA;      Go upstairs: 3: Me&#xA;      Do work: 1: Me, Cat&#xA;    section Go home&#xA;      Go downstairs: 5: Me&#xA;      Sit down: 3: Me&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;C4 diagram [&lt;a href=&#34;https://mermaid.js.org/syntax/c4.html&#34;&gt;docs&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;C4Context&#xA;title System Context diagram for Internet Banking System&#xA;&#xA;Person(customerA, &#34;Banking Customer A&#34;, &#34;A customer of the bank, with personal bank accounts.&#34;)&#xA;Person(customerB, &#34;Banking Customer B&#34;)&#xA;Person_Ext(customerC, &#34;Banking Customer C&#34;)&#xA;System(SystemAA, &#34;Internet Banking System&#34;, &#34;Allows customers to view information about their bank accounts, and make payments.&#34;)&#xA;&#xA;Person(customerD, &#34;Banking Customer D&#34;, &#34;A customer of the bank, &amp;lt;br/&amp;gt; with personal bank accounts.&#34;)&#xA;&#xA;Enterprise_Boundary(b1, &#34;BankBoundary&#34;) {&#xA;&#xA;  SystemDb_Ext(SystemE, &#34;Mainframe Banking System&#34;, &#34;Stores all of the core banking information about customers, accounts, transactions, etc.&#34;)&#xA;&#xA;  System_Boundary(b2, &#34;BankBoundary2&#34;) {&#xA;    System(SystemA, &#34;Banking System A&#34;)&#xA;    System(SystemB, &#34;Banking System B&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;  }&#xA;&#xA;  System_Ext(SystemC, &#34;E-mail system&#34;, &#34;The internal Microsoft Exchange e-mail system.&#34;)&#xA;  SystemDb(SystemD, &#34;Banking System D Database&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;&#xA;  Boundary(b3, &#34;BankBoundary3&#34;, &#34;boundary&#34;) {&#xA;    SystemQueue(SystemF, &#34;Banking System F Queue&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;    SystemQueue_Ext(SystemG, &#34;Banking System G Queue&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;  }&#xA;}&#xA;&#xA;BiRel(customerA, SystemAA, &#34;Uses&#34;)&#xA;BiRel(SystemAA, SystemE, &#34;Uses&#34;)&#xA;Rel(SystemAA, SystemC, &#34;Sends e-mails&#34;, &#34;SMTP&#34;)&#xA;Rel(SystemC, customerA, &#34;Sends e-mails to&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;C4Context&#xA;title System Context diagram for Internet Banking System&#xA;&#xA;Person(customerA, &#34;Banking Customer A&#34;, &#34;A customer of the bank, with personal bank accounts.&#34;)&#xA;Person(customerB, &#34;Banking Customer B&#34;)&#xA;Person_Ext(customerC, &#34;Banking Customer C&#34;)&#xA;System(SystemAA, &#34;Internet Banking System&#34;, &#34;Allows customers to view information about their bank accounts, and make payments.&#34;)&#xA;&#xA;Person(customerD, &#34;Banking Customer D&#34;, &#34;A customer of the bank, &amp;lt;br/&amp;gt; with personal bank accounts.&#34;)&#xA;&#xA;Enterprise_Boundary(b1, &#34;BankBoundary&#34;) {&#xA;&#xA;  SystemDb_Ext(SystemE, &#34;Mainframe Banking System&#34;, &#34;Stores all of the core banking information about customers, accounts, transactions, etc.&#34;)&#xA;&#xA;  System_Boundary(b2, &#34;BankBoundary2&#34;) {&#xA;    System(SystemA, &#34;Banking System A&#34;)&#xA;    System(SystemB, &#34;Banking System B&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;  }&#xA;&#xA;  System_Ext(SystemC, &#34;E-mail system&#34;, &#34;The internal Microsoft Exchange e-mail system.&#34;)&#xA;  SystemDb(SystemD, &#34;Banking System D Database&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;&#xA;  Boundary(b3, &#34;BankBoundary3&#34;, &#34;boundary&#34;) {&#xA;    SystemQueue(SystemF, &#34;Banking System F Queue&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;    SystemQueue_Ext(SystemG, &#34;Banking System G Queue&#34;, &#34;A system of the bank, with personal bank accounts.&#34;)&#xA;  }&#xA;}&#xA;&#xA;BiRel(customerA, SystemAA, &#34;Uses&#34;)&#xA;BiRel(SystemAA, SystemE, &#34;Uses&#34;)&#xA;Rel(SystemAA, SystemC, &#34;Sends e-mails&#34;, &#34;SMTP&#34;)&#xA;Rel(SystemC, customerA, &#34;Sends e-mails to&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;p&gt;For those who have the permission to do so:&lt;/p&gt; &#xA;&lt;p&gt;Update version number in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm publish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command generates files into the &lt;code&gt;dist&lt;/code&gt; folder and publishes them to &lt;a href=&#34;https://www.npmjs.com&#34;&gt;https://www.npmjs.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mermaid-js/mermaid-cli&#34;&gt;Command Line Interface&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mermaid-js/mermaid-live-editor&#34;&gt;Live Editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TomWright/mermaid-server&#34;&gt;HTTP Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors &lt;a href=&#34;https://github.com/mermaid-js/mermaid/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+issue%21%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/labels/mermaid-js/mermaid/Good%20first%20issue%21&#34; alt=&#34;Good first issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mermaid-js/mermaid/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/mermaid-js/mermaid&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mermaid-js/mermaid/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/mermaid-js/mermaid&#34; alt=&#34;Commits&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Mermaid is a growing community and is always accepting new contributors. There&#39;s a lot of different ways to help out and we&#39;re always looking for extra hands! Look at &lt;a href=&#34;https://github.com/mermaid-js/mermaid/issues/866&#34;&gt;this issue&lt;/a&gt; if you want to know where to start helping out.&lt;/p&gt; &#xA;&lt;p&gt;Detailed information about how to contribute can be found in the &lt;a href=&#34;https://mermaid.js.org/community/contributing.html&#34;&gt;contribution guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security and safe diagrams&lt;/h2&gt; &#xA;&lt;p&gt;For public sites, it can be precarious to retrieve text from users on the internet, storing that content for presentation in a browser at a later stage. The reason is that the user content can contain embedded malicious scripts that will run when the data is presented. For Mermaid this is a risk, specially as mermaid diagrams contain many characters that are used in html which makes the standard sanitation unusable as it also breaks the diagrams. We still make an effort to sanitize the incoming code and keep refining the process but it is hard to guarantee that there are no loop holes.&lt;/p&gt; &#xA;&lt;p&gt;As an extra level of security for sites with external users we are happy to introduce a new security level in which the diagram is rendered in a sandboxed iframe preventing javascript in the code from being executed. This is a great step forward for better security.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Unfortunately you can not have a cake and eat it at the same time which in this case means that some of the interactive functionality gets blocked along with the possible malicious code.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;To report a vulnerability, please e-mail &lt;a href=&#34;mailto:security@mermaid.live&#34;&gt;security@mermaid.live&lt;/a&gt; with a description of the issue, the steps you took to create the issue, affected versions, and if known, mitigations for the issue.&lt;/p&gt; &#xA;&lt;h2&gt;Appreciation&lt;/h2&gt; &#xA;&lt;p&gt;A quick note from Knut Sveidqvist:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Many thanks to the &lt;a href=&#34;https://d3js.org/&#34;&gt;d3&lt;/a&gt; and &lt;a href=&#34;https://github.com/cpettitt/dagre-d3&#34;&gt;dagre-d3&lt;/a&gt; projects for providing the graphical layout and drawing libraries!&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Thanks also to the &lt;a href=&#34;https://bramp.github.io/js-sequence-diagrams&#34;&gt;js-sequence-diagram&lt;/a&gt; project for usage of the grammar for the sequence diagrams. Thanks to Jessica Peter for inspiration and starting point for gantt rendering.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Thank you to &lt;a href=&#34;https://github.com/tylerlong&#34;&gt;Tyler Long&lt;/a&gt; who has been a collaborator since April 2017.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Thank you to the ever-growing list of &lt;a href=&#34;https://github.com/knsv/mermaid/graphs/contributors&#34;&gt;contributors&lt;/a&gt; that brought the project this far!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;Mermaid was created by Knut Sveidqvist for easier documentation.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mattermost-community/focalboard</title>
    <updated>2025-01-19T01:47:07Z</updated>
    <id>tag:github.com,2025-01-19:/mattermost-community/focalboard</id>
    <link href="https://github.com/mattermost-community/focalboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Focalboard is an open source, self-hosted alternative to Trello, Notion, and Asana.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] This repository is currently not maintained. If you&#39;re interested in becoming a maintainer please &lt;a href=&#34;https://github.com/mattermost-community/focalboard/issues/5038&#34;&gt;let us know here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;This repository only contains standalone Focalboard. If you&#39;re looking for the Mattermost plugin please see &lt;a href=&#34;https://github.com/mattermost/mattermost-plugin-boards&#34;&gt;mattermost/mattermost-plugin-boards&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Focalboard&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI Status&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/dev-release.yml/badge.svg?sanitize=true&#34; alt=&#34;Dev Release&#34;&gt; &lt;img src=&#34;https://github.com/mattermost/focalboard/actions/workflows/prod-release.yml/badge.svg?sanitize=true&#34; alt=&#34;Prod Release&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mattermost-community/focalboard/main/website/site/static/img/hero.jpg&#34; alt=&#34;Focalboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Focalboard is an open source, multilingual, self-hosted project management tool that&#39;s an alternative to Trello, Notion, and Asana.&lt;/p&gt; &#xA;&lt;p&gt;It helps define, organize, track and manage work across individuals and teams. Focalboard comes in two editions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.focalboard.com/docs/personal-edition/desktop/&#34;&gt;Personal Desktop&lt;/a&gt;&lt;/strong&gt;: A standalone, single-user &lt;a href=&#34;https://apps.apple.com/app/apple-store/id1556908618?pt=2114704&amp;amp;ct=website&amp;amp;mt=8&#34;&gt;macOS&lt;/a&gt;, &lt;a href=&#34;https://www.microsoft.com/store/apps/9NLN2T0SX9VF?cid=website&#34;&gt;Windows&lt;/a&gt;, or &lt;a href=&#34;https://www.focalboard.com/download/personal-edition/desktop/#linux-desktop&#34;&gt;Linux&lt;/a&gt; desktop app for your own todos and personal projects.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.focalboard.com/download/personal-edition/ubuntu/&#34;&gt;Personal Server&lt;/a&gt;&lt;/strong&gt;: A standalone, multi-user server for development and personal use.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Try Focalboard&lt;/h2&gt; &#xA;&lt;h3&gt;Personal Desktop (Windows, Mac or Linux Desktop)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Download from the &lt;a href=&#34;https://www.microsoft.com/store/productId/9NLN2T0SX9VF&#34;&gt;Windows App Store&lt;/a&gt; or download &lt;code&gt;focalboard-win.zip&lt;/code&gt; from the &lt;a href=&#34;https://github.com/mattermost/focalboard/releases&#34;&gt;latest release&lt;/a&gt;, unpack, and run &lt;code&gt;Focalboard.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: Download from the &lt;a href=&#34;https://apps.apple.com/us/app/focalboard-insiders/id1556908618?mt=12&#34;&gt;Mac App Store&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux Desktop&lt;/strong&gt;: Download &lt;code&gt;focalboard-linux.tar.gz&lt;/code&gt; from the &lt;a href=&#34;https://github.com/mattermost/focalboard/releases&#34;&gt;latest release&lt;/a&gt;, unpack, and open &lt;code&gt;focalboard-app&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Personal Server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: You can download and run the compiled Focalboard &lt;strong&gt;Personal Server&lt;/strong&gt; on Ubuntu by following &lt;a href=&#34;https://www.focalboard.com/download/personal-edition/ubuntu/&#34;&gt;our latest install guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API Docs&lt;/h3&gt; &#xA;&lt;p&gt;Boards API docs can be found over at &lt;a href=&#34;https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/raw/main/server/swagger/docs/html/index.html&#34;&gt;https://htmlpreview.github.io/?https://github.com/mattermost/focalboard/blob/main/server/swagger/docs/html/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Getting started&lt;/h3&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://developers.mattermost.com/contribute/focalboard/personal-server-setup-guide&#34;&gt;developer guide&lt;/a&gt; has detailed instructions on how to set up your development environment for the &lt;strong&gt;Personal Server&lt;/strong&gt;. You can also join the &lt;a href=&#34;https://community.mattermost.com/core/channels/focalboard&#34;&gt;~Focalboard community channel&lt;/a&gt; to connect with other developers.&lt;/p&gt; &#xA;&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file in the focalboard directory that contains:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EXCLUDE_ENTERPRISE=&#34;1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make prebuild&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; ./bin/focalboard-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then navigate your browser to &lt;a href=&#34;http://localhost:8000&#34;&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/a&gt; to access your Focalboard server. The port is configured in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once the server is running, you can rebuild just the web app via &lt;code&gt;make webapp&lt;/code&gt; in a separate terminal window. Reload your browser to see the changes.&lt;/p&gt; &#xA;&lt;h3&gt;Building and running standalone desktop apps&lt;/h3&gt; &#xA;&lt;p&gt;You can build standalone apps that package the server to run locally against SQLite:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Requires Windows 10, &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/&#34;&gt;Windows 10 SDK&lt;/a&gt; 10.0.19041.0, and .NET 4.8 developer pack&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Open a &lt;code&gt;git-bash&lt;/code&gt; prompt.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make win-wpf-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;cd win-wpf/msix &amp;amp;&amp;amp; focalboard.exe&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Requires macOS 11.3+ and Xcode 13.2.1+&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make mac-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;open mac/dist/Focalboard.app&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Tested on Ubuntu 18.04&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Install &lt;code&gt;webgtk&lt;/code&gt; dependencies &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libgtk-3-dev&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Run &lt;code&gt;sudo apt-get install libwebkit2gtk-4.0-dev&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make prebuild&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The above prebuild step needs to be run only when you make changes to or want to install your npm dependencies, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Once the prebuild is completed, you can keep repeating the below steps to build the app &amp;amp; see the changes.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;make linux-app&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Uncompress &lt;code&gt;linux/dist/focalboard-linux.tar.gz&lt;/code&gt; to a directory of your choice&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;focalboard-app&lt;/code&gt; from the directory you have chosen&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To run it locally from offical image: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker run -it -p 80:8000 mattermost/focalboard&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To build it for your current architecture: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile .&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;To build it for a custom architecture (experimental): &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;docker build -f docker/Dockerfile --platform linux/arm64 .&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Cross-compilation currently isn&#39;t fully supported, so please build on the appropriate platform. Refer to the GitHub Actions workflows (&lt;code&gt;build-mac.yml&lt;/code&gt;, &lt;code&gt;build-win.yml&lt;/code&gt;, &lt;code&gt;build-ubuntu.yml&lt;/code&gt;) for the detailed list of steps on each platform.&lt;/p&gt; &#xA;&lt;h3&gt;Unit testing&lt;/h3&gt; &#xA;&lt;p&gt;Before checking in commits, run &lt;code&gt;make ci&lt;/code&gt;, which is similar to the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; workflow and includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Server unit tests&lt;/strong&gt;: &lt;code&gt;make server-test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app ESLint&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run check&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app unit tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web app UI tests&lt;/strong&gt;: &lt;code&gt;cd webapp; npm run cypress:ci&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Staying informed&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Changes&lt;/strong&gt;: See the &lt;a href=&#34;https://raw.githubusercontent.com/mattermost-community/focalboard/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for the latest updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Bug Reports&lt;/strong&gt;: &lt;a href=&#34;https://github.com/mattermost/focalboard/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;File a bug report&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Join the &lt;a href=&#34;https://community.mattermost.com/core/channels/focalboard&#34;&gt;~Focalboard community channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>weaviate/Verba</title>
    <updated>2025-01-19T01:47:07Z</updated>
    <id>tag:github.com,2025-01-19:/weaviate/Verba</id>
    <link href="https://github.com/weaviate/Verba" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Retrieval Augmented Generation (RAG) chatbot powered by Weaviate&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Verba&lt;/h1&gt; &#xA;&lt;h2&gt;The Golden RAGtriever - Community Edition ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=powered%20by&amp;amp;message=Weaviate%20%E2%9D%A4&amp;amp;color=green&amp;amp;style=flat-square&#34; alt=&#34;Weaviate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/goldenverba/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/personalized-badge/goldenverba?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=orange&amp;amp;left_text=pip%20downloads&#34; alt=&#34;PyPi downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.docker.com/get-started/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker_support-%E2%9C%93-4c1?style=flat-square&amp;amp;logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Docker support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://verba.weaviate.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Check%20out%20the%20demo!-yellow?&amp;amp;style=flat-square&amp;amp;logo=react&amp;amp;logoColor=white&#34; alt=&#34;Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Verba: The Golden RAGtriever, an community-driven open-source application designed to offer an end-to-end, streamlined, and user-friendly interface for Retrieval-Augmented Generation (RAG) out of the box. In just a few easy steps, explore your datasets and extract insights with ease, either locally with Ollama and Huggingface or through LLM providers such as Anthrophic, Cohere, and OpenAI. This project is built with and for the community, please be aware that it might not be maintained with the same urgency as other Weaviate production applications. Feel free to contribute to the project and help us make Verba even better! &amp;lt;3&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba.gif&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#verba&#34;&gt;Verba&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#what-is-verba&#34;&gt;üéØ What Is Verba?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#feature-lists&#34;&gt;‚ú® Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#getting-started-with-verba&#34;&gt;‚ú® Getting Started with Verba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#api-keys&#34;&gt;üîë API Keys&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#weaviate&#34;&gt;Weaviate&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#unstructured&#34;&gt;Unstructured&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#assemblyai&#34;&gt;AssemblyAI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#openai&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#huggingface&#34;&gt;HuggingFace&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#groq&#34;&gt;Groq&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-deploy-with-pip&#34;&gt;Quickstart: Deploy with pip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-build-from-source&#34;&gt;Quickstart: Build from Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-install-verba-with-docker&#34;&gt;Quickstart: Deploy with Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#%EF%B8%8Fverba-walkthrough&#34;&gt;üíæ Verba Walkthrough&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#open-source-contribution&#34;&gt;üíñ Open Source Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#known-issues&#34;&gt;üö© Known Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#faq&#34;&gt;‚ùîFAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What Is Verba?&lt;/h2&gt; &#xA;&lt;p&gt;Verba is a fully-customizable personal assistant utilizing &lt;a href=&#34;https://weaviate.io/rag#:~:text=RAG%20with%20Weaviate,accuracy%20of%20AI%2Dgenerated%20content.&#34;&gt;Retrieval Augmented Generation (RAG)&lt;/a&gt; for querying and interacting with your data, &lt;strong&gt;either locally or deployed via cloud&lt;/strong&gt;. Resolve questions around your documents, cross-reference multiple data points or gain insights from existing knowledge bases. Verba combines state-of-the-art RAG techniques with Weaviate&#39;s context-aware database. Choose between different RAG frameworks, data types, chunking &amp;amp; retrieving techniques, and LLM providers based on your individual use-case.&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Spirit&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Weaviate&lt;/strong&gt; is proud to offer this open-source project for the community. While we strive to address issues as fast as we can, please understand that it may not be maintained with the same rigor as production software. We welcome and encourage community contributions to help keep it running smoothly. Your support in fixing open issues quickly is greatly appreciated.&lt;/p&gt; &#xA;&lt;h3&gt;Watch our newest Verba video here:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2VCy-YjRRhA&amp;amp;t=40s&amp;amp;ab_channel=Weaviate%E2%80%A2VectorDatabase&#34;&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/main/img/thumbnail.png&#34; alt=&#34;VIDEO LINK&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature Lists&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ü§ñ Model Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ollama (e.g. Llama3)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding and Generation Models powered by Ollama&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HuggingFace (e.g. MiniLMEmbedder)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding Models powered by HuggingFace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cohere (e.g. Command R+)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by Cohere&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anthrophic (e.g. Claude Sonnet)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by Anthrophic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAI (e.g. GPT4)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Groq (e.g. Llama3)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Generation Models by Groq (LPU inference)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Upstage (e.g. Solar)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding and Generation Models by Upstage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ü§ñ Embedding Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Weaviate&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models powered by Weaviate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ollama&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Local Embedding Models powered by Ollama&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SentenceTransformers&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models powered by HuggingFace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cohere&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by Cohere&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VoyageAI&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by VoyageAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAI&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Upstage&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Embedding Models by Upstage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;üìÅ Data Support&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;UnstructuredIO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import Data through Unstructured&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.firecrawl.dev/&#34;&gt;Firecrawl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Scrape and Crawl URL through Firecrawl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://upstage.ai/&#34;&gt;UpstageDocumentParse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Parse Documents through Upstage Document AI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PDF Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import PDF into Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub &amp;amp; GitLab&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import Files from Github and GitLab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSV/XLSX Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import Table Data into Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.DOCX&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import .docx files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi-Modal (using &lt;a href=&#34;https://assemblyai.com&#34;&gt;AssemblyAI&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Import and Transcribe Audio through AssemblyAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;‚ú® RAG Features&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hybrid Search&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Semantic Search combined with Keyword Search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Autocomplete Suggestion&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Verba suggests autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Filtering&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Apply Filters (e.g. documents, document types etc.) before performing RAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customizable Metadata&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Free control over Metadata&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Async Ingestion&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Ingest data asynchronously to speed up the process&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Advanced Querying&lt;/td&gt; &#xA;   &lt;td&gt;planned ‚è±Ô∏è&lt;/td&gt; &#xA;   &lt;td&gt;Task Delegation Based on LLM Evaluation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reranking&lt;/td&gt; &#xA;   &lt;td&gt;planned ‚è±Ô∏è&lt;/td&gt; &#xA;   &lt;td&gt;Rerank results based on context for improved results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RAG Evaluation&lt;/td&gt; &#xA;   &lt;td&gt;planned ‚è±Ô∏è&lt;/td&gt; &#xA;   &lt;td&gt;Interface for Evaluating RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Agentic RAG&lt;/td&gt; &#xA;   &lt;td&gt;out of scope ‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;Agentic RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Graph RAG&lt;/td&gt; &#xA;   &lt;td&gt;out of scope ‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;Graph-based RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;üó°Ô∏è Chunking Techniques&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Token&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk by Token powered by &lt;a href=&#34;https://spacy.io/&#34;&gt;spaCy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sentence&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk by Sentence powered by &lt;a href=&#34;https://spacy.io/&#34;&gt;spaCy&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Semantic&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk and group by semantic sentence similarity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Recursive&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Recursively chunk data based on rules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk HTML files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk Markdown files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk Code files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JSON&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Chunk JSON files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;üÜí Cool Bonus&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker Support&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Verba is deployable via Docker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Customizable Frontend&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Verba&#39;s frontend is fully-customizable via the frontend&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vector Viewer&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Visualize your data in 3D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi-User Collaboration&lt;/td&gt; &#xA;   &lt;td&gt;out of scope ‚ùå&lt;/td&gt; &#xA;   &lt;td&gt;Multi-User Collaboration in Verba&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ü§ù RAG Libraries&lt;/th&gt; &#xA;   &lt;th&gt;Implemented&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LangChain&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Implement LangChain RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Haystack&lt;/td&gt; &#xA;   &lt;td&gt;planned ‚è±Ô∏è&lt;/td&gt; &#xA;   &lt;td&gt;Implement Haystack RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LlamaIndex&lt;/td&gt; &#xA;   &lt;td&gt;planned ‚è±Ô∏è&lt;/td&gt; &#xA;   &lt;td&gt;Implement LlamaIndex RAG pipelines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Something is missing? Feel free to create a new issue or discussion with your idea!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_screen.png&#34; alt=&#34;Showcase of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Getting Started with Verba&lt;/h1&gt; &#xA;&lt;p&gt;You have three deployment options for Verba:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install via pip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build from Source&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba&#xA;&#xA;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Docker for Deployment&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: If you&#39;re not using Docker, ensure that you have &lt;code&gt;Python &amp;gt;=3.10.0,&amp;lt;3.13.0&lt;/code&gt; installed on your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba&#xA;&#xA;docker compose --env-file &amp;lt;your-env-file&amp;gt; up -d --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re unfamiliar with Python and Virtual Environments, please read the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/PYTHON_TUTORIAL.md&#34;&gt;python tutorial guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;API Keys and Environment Variables&lt;/h1&gt; &#xA;&lt;p&gt;You can set all API keys in the Verba frontend, but to make your life easier, we can also prepare a &lt;code&gt;.env&lt;/code&gt; file in which Verba will automatically look for the keys. Create a &lt;code&gt;.env&lt;/code&gt; in the same directory you want to start Verba in. You can find an &lt;code&gt;.env.example&lt;/code&gt; file in the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/goldenverba/.env.example&#34;&gt;goldenverba&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to only set environment variables you intend to use, environment variables with missing or incorrect values may lead to errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Below is a comprehensive list of the API keys and variables you may require:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WEAVIATE_URL_VERBA&lt;/td&gt; &#xA;   &lt;td&gt;URL to your hosted Weaviate Cluster&lt;/td&gt; &#xA;   &lt;td&gt;Connect to your &lt;a href=&#34;https://console.weaviate.cloud/&#34;&gt;WCS&lt;/a&gt; Cluster&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WEAVIATE_API_KEY_VERBA&lt;/td&gt; &#xA;   &lt;td&gt;API Credentials to your hosted Weaviate Cluster&lt;/td&gt; &#xA;   &lt;td&gt;Connect to your &lt;a href=&#34;https://console.weaviate.cloud/&#34;&gt;WCS&lt;/a&gt; Cluster&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ANTHROPIC_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Anthropic API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://www.anthropic.com/&#34;&gt;Anthropic&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your OpenAI Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to OpenAI instance&lt;/td&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COHERE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://cohere.com/&#34;&gt;Cohere&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GROQ_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Groq API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://groq.com/&#34;&gt;Groq&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OLLAMA_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to your Ollama instance (e.g. &lt;a href=&#34;http://localhost:11434&#34;&gt;http://localhost:11434&lt;/a&gt; )&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UNSTRUCTURED_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;Unstructured&lt;/a&gt; Data Ingestion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UNSTRUCTURED_API_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to Unstructured Instance&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://docs.unstructured.io/welcome&#34;&gt;Unstructured&lt;/a&gt; Data Ingestion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ASSEMBLYAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://assemblyai.com&#34;&gt;AssemblyAI&lt;/a&gt; Data Ingestion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GITHUB_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;Your GitHub Token&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GITLAB_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;Your GitLab Token&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via GitLab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FIRECRAWL_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Firecrawl API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Data Ingestion via Firecrawl&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VOYAGE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your VoyageAI API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via VoyageAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EMBEDDING_SERVICE_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to your Embedding Service Instance&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via &lt;a href=&#34;https://weaviate.io/developers/wcs/embeddings&#34;&gt;Weaviate Embedding Service&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EMBEDDING_SERVICE_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Embedding Service Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to Embedding Models via &lt;a href=&#34;https://weaviate.io/developers/wcs/embeddings&#34;&gt;Weaviate Embedding Service&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UPSTAGE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;Your Upstage API Key&lt;/td&gt; &#xA;   &lt;td&gt;Get Access to &lt;a href=&#34;https://upstage.ai/&#34;&gt;Upstage&lt;/a&gt; Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UPSTAGE_BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;URL to Upstage instance&lt;/td&gt; &#xA;   &lt;td&gt;Models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DEFAULT_DEPLOYMENT&lt;/td&gt; &#xA;   &lt;td&gt;Local, Weaviate, Custom, Docker&lt;/td&gt; &#xA;   &lt;td&gt;Set the default deployment mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/api_screen.png&#34; alt=&#34;API Keys in Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Weaviate&lt;/h2&gt; &#xA;&lt;p&gt;Verba provides flexibility in connecting to Weaviate instances based on your needs. You have three options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local Deployment&lt;/strong&gt;: Use Weaviate Embedded which runs locally on your device (except Windows, choose the Docker/Cloud Deployment)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker Deployment&lt;/strong&gt;: Choose this option when you&#39;re running Verba&#39;s Dockerfile.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Deployment&lt;/strong&gt;: Use an existing Weaviate instance hosted on WCD to run Verba&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;üíª Weaviate Embedded&lt;/strong&gt; Embedded Weaviate is a deployment model that runs a Weaviate instance from your application code rather than from a stand-alone Weaviate server installation. When you run Verba in &lt;code&gt;Local Deployment&lt;/code&gt;, it will setup and manage Embedded Weaviate in the background. Please note that Weaviate Embedded is not supported on Windows and is in Experimental Mode which can bring unexpected errors. We recommend using the Docker Deployment or Cloud Deployment instead. You can read more about Weaviate Embedded &lt;a href=&#34;https://weaviate.io/developers/weaviate/installation/embedded&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üå©Ô∏è Weaviate Cloud Deployment (WCD)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you prefer a cloud-based solution, Weaviate Cloud (WCD) offers a scalable, managed environment. Learn how to set up a cloud cluster and get the API keys by following the &lt;a href=&#34;https://weaviate.io/developers/wcs/guides/create-instance&#34;&gt;Weaviate Cluster Setup Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üê≥ Docker Deployment&lt;/strong&gt; Another local alternative is deploying Weaviate using Docker. For more details, follow the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#how-to-install-verba-with-docker&#34;&gt;How to install Verba with Docker&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_deployment.png&#34; alt=&#34;Deployment in Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚öôÔ∏è Custom Weaviate Deployment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re hosting Weaviate yourself, you can use the &lt;code&gt;Custom&lt;/code&gt; deployment option in Verba. This will allow you to specify the URL, PORT, and API key of your Weaviate instance.&lt;/p&gt; &#xA;&lt;h2&gt;Ollama&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports Ollama models. Download and Install Ollama on your device (&lt;a href=&#34;https://ollama.com/download&#34;&gt;https://ollama.com/download&lt;/a&gt;). Make sure to install your preferred LLM using &lt;code&gt;ollama run &amp;lt;model&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tested with &lt;code&gt;llama3&lt;/code&gt;, &lt;code&gt;llama3:70b&lt;/code&gt; and &lt;code&gt;mistral&lt;/code&gt;. The bigger models generally perform better, but need more computational power.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure Ollama Server runs in the background and that you don&#39;t ingest documents with different ollama models since their vector dimension can vary that will lead to errors&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can verify that by running the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ollama run llama3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Unstructured&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports importing documents through Unstructured IO (e.g plain text, .pdf, .csv, and more). To use them you need the &lt;code&gt;UNSTRUCTURED_API_KEY&lt;/code&gt; and &lt;code&gt;UNSTRUCTURED_API_URL&lt;/code&gt; environment variable. You can get it from &lt;a href=&#34;https://unstructured.io/&#34;&gt;Unstructured&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;UNSTRUCTURED_API_URL is set to &lt;code&gt;https://api.unstructuredapp.io/general/v0/general&lt;/code&gt; by default&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;AssemblyAI&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports importing documents through AssemblyAI (audio files or audio from video files). To use them you need the &lt;code&gt;ASSEMBLYAI_API_KEY&lt;/code&gt; environment variable. You can get it from &lt;a href=&#34;https://assemblyai.com&#34;&gt;AssemblyAI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenAI&lt;/h2&gt; &#xA;&lt;p&gt;Verba supports OpenAI Models such as Ada, GPT3, and GPT4. To use them, you need to specify the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable. You can get it from &lt;a href=&#34;https://openai.com/&#34;&gt;OpenAI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also add a &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt; to use proxies such as LiteLLM (&lt;a href=&#34;https://github.com/BerriAI/litellm&#34;&gt;https://github.com/BerriAI/litellm&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OPENAI_BASE_URL=YOUR-OPENAI_BASE_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;HuggingFace&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use the HuggingFace Features, make sure to install the correct Verba package. It will install required packages to use the local embedding models. Please note that on startup, Verba will automatically download and install embedding models when used.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install goldenverba[huggingface]&#xA;&#xA;or&#xA;&#xA;pip install `.[huggingface]`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you&#39;re using Docker, modify the &lt;code&gt;Dockerfile&lt;/code&gt; accordingly. It&#39;s not possible to install a custom Verba installation if you pull the Docker Image from the Docker Hub, as of now, you&#39;d need to install the Docker deployment from the source code and modify the &lt;code&gt;Dockerfile&lt;/code&gt; beforehand.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Groq&lt;/h2&gt; &#xA;&lt;p&gt;To use Groq LPUs as generation engine, you need to get an API key from &lt;a href=&#34;https://console.groq.com/keys&#34;&gt;Groq&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Although you can provide it in the graphical interface when Verba is up, it is recommended to specify it as &lt;code&gt;GROQ_API_KEY&lt;/code&gt; environment variable before you launch the application.&lt;br&gt; It will allow you to choose the generation model in an up-to-date available models list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;How to deploy with pip&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Python &amp;gt;=3.10.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;(Very Important) &lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m virtualenv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install goldenverba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;verba start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can specify the --port and --host via flags&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Visit localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;(Optional)&lt;strong&gt;Create .env file and add environment variables&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to build from Source&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialize a new Python Environment&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 -m virtualenv venv&#xA;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -e .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launch Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;verba start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can specify the --port and --host via flags&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Visit localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;(Optional) &lt;strong&gt;Create .env file and add environment variables&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to install Verba with Docker&lt;/h1&gt; &#xA;&lt;p&gt;Docker is a set of platform-as-a-service products that use OS-level virtualization to deliver software in packages called containers. To get started with deploying Verba using Docker, follow the steps below. If you need more detailed instructions on Docker usage, check out the &lt;a href=&#34;https://docker-curriculum.com/&#34;&gt;Docker Curriculum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;docker pull semitechnologies/verba&lt;/code&gt; to pull the latest Verba Docker Image. Please note, that by pulling directly from Docker Hub you&#39;re only able to install the vanilla Verba version that does not include packages e.g &lt;code&gt;HuggingFace&lt;/code&gt;. If you want to use Docker and &lt;code&gt;HuggingFace&lt;/code&gt; please follow the steps below.&lt;/p&gt; &#xA;&lt;p&gt;To build the image yourself, you can clone the Verba repository and run &lt;code&gt;docker build -t verba .&lt;/code&gt; inside the Verba directory.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the Verba repos&lt;/strong&gt; Ensure you have Git installed on your system. Then, open a terminal or command prompt and run the following command to clone the Verba repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/weaviate/Verba.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set necessary environment variables&lt;/strong&gt; Make sure to set your required environment variables in the &lt;code&gt;.env&lt;/code&gt; file. You can read more about how to set them up in the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/#api-keys&#34;&gt;API Keys Section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adjust the docker-compose file&lt;/strong&gt; You can use the &lt;code&gt;docker-compose.yml&lt;/code&gt; to add required environment variables under the &lt;code&gt;verba&lt;/code&gt; service and can also adjust the Weaviate Docker settings to enable Authentification or change other settings of your database instance. You can read more about the Weaviate configuration in our &lt;a href=&#34;https://weaviate.io/developers/weaviate/installation/docker-compose&#34;&gt;docker-compose documentation&lt;/a&gt;. You can also uncomment the &lt;code&gt;ollama&lt;/code&gt; service to use Ollama within the same docker compose.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please make sure to only add environment variables that you really need.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deploy using Docker&lt;/strong&gt; With Docker installed and the Verba repository cloned, navigate to the directory containing the Docker Compose file in your terminal or command prompt. Run the following command to start the Verba application in detached mode, which allows it to run in the background:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;docker compose up -d&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;docker compose --env-file goldenverba/.env up -d --build&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will download the necessary Docker images, create containers, and start Verba. Remember, Docker must be installed on your system to use this method. For installation instructions and more details about Docker, visit the official Docker documentation.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access Verba&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can access your local Weaviate instance at &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can access the Verba frontend at &lt;code&gt;localhost:8000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want your Docker Instance to install a specific version of Verba you can edit the &lt;code&gt;Dockerfile&lt;/code&gt; and change the installation line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN pip install -e &#39;.&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verba Walkthrough&lt;/h2&gt; &#xA;&lt;h3&gt;Select your Deployment&lt;/h3&gt; &#xA;&lt;p&gt;The first screen you&#39;ll see is the deployment screen. Here you can select between &lt;code&gt;Local&lt;/code&gt;, &lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;Weaviate Cloud&lt;/code&gt;, or &lt;code&gt;Custom&lt;/code&gt; deployment. The &lt;code&gt;Local&lt;/code&gt; deployment is using Weaviate Embedded under the hood, which initializes a Weaviate instance behind the scenes. The &lt;code&gt;Docker&lt;/code&gt; deployment is using a separate Weaviate instance that is running inside the same Docker network. The &lt;code&gt;Weaviate Cloud&lt;/code&gt; deployment is using a Weaviate instance that is hosted on Weaviate Cloud Services (WCS). The &lt;code&gt;Custom&lt;/code&gt; deployment allows you to specify your own Weaviate instance URL, PORT, and API key.&lt;/p&gt; &#xA;&lt;p&gt;You can skip this part by setting the &lt;code&gt;DEFAULT_DEPLOYMENT&lt;/code&gt; environment variable to &lt;code&gt;Local&lt;/code&gt;, &lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;Weaviate&lt;/code&gt;, or &lt;code&gt;Custom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Import Your Data&lt;/h3&gt; &#xA;&lt;p&gt;First thing you need to do is to add your data. You can do this by clicking on &lt;code&gt;Import Data&lt;/code&gt; and selecting either &lt;code&gt;Add Files&lt;/code&gt;, &lt;code&gt;Add Directory&lt;/code&gt;, or &lt;code&gt;Add URL&lt;/code&gt; tab. Here you can add all your files that you want to ingest. You can then configure every file individually by selecting the file and clicking on &lt;code&gt;Overview&lt;/code&gt; or &lt;code&gt;Configure&lt;/code&gt; tab. &lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_data.png&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Query Your Data&lt;/h3&gt; &#xA;&lt;p&gt;With Data imported, you can use the &lt;code&gt;Chat&lt;/code&gt; page to ask any related questions. You will receive relevant chunks that are semantically relevant to your question and an answer generated by your choosen model. You can configure the RAG pipeline under the &lt;code&gt;Config&lt;/code&gt; tab.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/weaviate/Verba/raw/2.0.0/img/verba_rag.png&#34; alt=&#34;Demo of Verba&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Your contributions are always welcome! Feel free to contribute ideas, feedback, or create issues and bug reports if you find any! Before contributing, please read the &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;. Visit our &lt;a href=&#34;https://forum.weaviate.io/&#34;&gt;Weaviate Community Forum&lt;/a&gt; if you need any help!&lt;/p&gt; &#xA;&lt;h3&gt;Project Architecture&lt;/h3&gt; &#xA;&lt;p&gt;You can learn more about Verba&#39;s architecture and implementation in its &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/TECHNICAL.md&#34;&gt;technical documentation&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/weaviate/Verba/main/FRONTEND.md&#34;&gt;frontend documentation&lt;/a&gt;. It&#39;s recommended to have a look at them before making any contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Weaviate Embeeded&lt;/strong&gt; currently not working on Windows yet &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Will be fixed in future versions, until then please use the Docker or WCS Deployment&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can I use pre-existing data from my Weaviate instance?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No, unfortunatley not. Verba requires the data to be in a specific format to work. And as of now, this is only possible by importing data through the Verba UI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is Verba Multi-Lingual?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This depends on your choosen Embedding and Generation Model whether they support multi-lingual data.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can I use my Ollama Server with the Verba Docker?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes, you can! Make sure the URL is set to: &lt;code&gt;OLLAMA_URL=http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you&#39;re running on Linux, you might need to get the IP Gateway of the Ollama server: &lt;code&gt;OLLAMA_URL=&#34;http://YOUR-IP-OF-OLLAMA:11434&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to clear Weaviate Embedded Storage?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You&#39;ll find the stored data here: &lt;code&gt;~/.local/share/weaviate&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can I specify the port?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can use the port and host flag &lt;code&gt;verba start --port 9000 --host 0.0.0.0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can multiple users use Verba at the same time? How about role based access?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Verba is designed and optimized for single user usage only. There are no plans on supporting multiple users or role based access in the near future.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Does Verba offer a API endpoint to use externally?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No, right now Verba does not offer any useful API endpoints to interact with the application. The current FastAPI setup is optimized for the internal communication between the frontend and backend. It is not recommended to use it as a API endpoint. There are plans to add user-friendly&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to connect to your custom OpenAI Server?&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set your custom OpenAI API Key and URL in the &lt;code&gt;.env&lt;/code&gt; file, this will allow Verba to start up and retrieve the models from your custom OpenAI Server. &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt; is set to &lt;code&gt;https://api.openai.com/v1&lt;/code&gt; by default.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>