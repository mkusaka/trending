<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-21T02:07:38Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>maybe-finance/maybe</title>
    <updated>2024-01-21T02:07:38Z</updated>
    <id>tag:github.com,2024-01-21:/maybe-finance/maybe</id>
    <link href="https://github.com/maybe-finance/maybe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Personal finance and wealth management app&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/maybe-finance/maybe/assets/35243/79d97b31-7fad-4031-9e83-5005bc1d7fd0&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Maybe: Open-source personal finance app&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;Get involved: &lt;a href=&#34;https://link.maybe.co/discord&#34;&gt;Discord&lt;/a&gt; • &lt;a href=&#34;https://maybe.co&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://github.com/maybe-finance/maybe/issues&#34;&gt;Issues&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backstory&lt;/h2&gt; &#xA;&lt;p&gt;We spent the better part of 2021/2022 building a personal finance + wealth management app called, Maybe. Very full-featured, including an &#34;Ask an Advisor&#34; feature which connected users with an actual CFP/CFA to help them with their finances (all included in your subscription).&lt;/p&gt; &#xA;&lt;p&gt;The business end of things didn&#39;t work out, and so we shut things down mid-2023.&lt;/p&gt; &#xA;&lt;p&gt;We spent the better part of $1,000,000 building the app (employees + contractors, data providers/services, infrastructure, etc.).&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re now reviving the product as a fully open-source project. The goal is to let you run the app yourself, for free, and use it to manage your own finances and eventually offer a hosted version of the app for a small monthly fee.&lt;/p&gt; &#xA;&lt;h2&gt;End goal&lt;/h2&gt; &#xA;&lt;p&gt;Ultimately we want to rebuild this so that you can self-host, but we also have plans to offer a hosted version for a fee. That means some decisions will be made that don&#39;t explicitly make sense for self-hosted but &lt;em&gt;do&lt;/em&gt; support the goal of us offering a for-pay hosted version.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;As a personal finance + wealth management app, Maybe has a lot of features. Here&#39;s a brief overview of some of the main ones...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Net worth tracking&lt;/li&gt; &#xA; &lt;li&gt;Financial account syncing&lt;/li&gt; &#xA; &lt;li&gt;Investment benchmarking&lt;/li&gt; &#xA; &lt;li&gt;Investment portfolio allocation&lt;/li&gt; &#xA; &lt;li&gt;Debt insights&lt;/li&gt; &#xA; &lt;li&gt;Retirement forecasting + planning&lt;/li&gt; &#xA; &lt;li&gt;Investment return simulation&lt;/li&gt; &#xA; &lt;li&gt;Manual account/investment tracking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And dozens upon dozens of smaller features.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;This is the current state of building the app. We&#39;re actively working to make this process much more streamlined!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;You&#39;ll need Docker installed to run the app locally.&lt;/em&gt; &lt;a href=&#34;https://www.docker.com/products/docker-desktop/&#34;&gt;Docker Desktop&lt;/a&gt; is an easy way to get started.&lt;/p&gt; &#xA;&lt;p&gt;First, copy the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, create a new secret using &lt;code&gt;openssl rand -base64 32&lt;/code&gt; and populate &lt;code&gt;NEXTAUTH_SECRET&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file with it.&lt;/p&gt; &#xA;&lt;p&gt;To enable transactional emails, you&#39;ll need to create a &lt;a href=&#34;https://postmarkapp.com/&#34;&gt;Postmark&lt;/a&gt; account and add your API key to your &lt;code&gt;.env&lt;/code&gt; file (&lt;code&gt;NX_POSTMARK_API_TOKEN&lt;/code&gt;). You can also set the from and reply-to email addresses (&lt;code&gt;NX_POSTMARK_FROM_ADDRESS&lt;/code&gt; and &lt;code&gt;NX_POSTMARK_REPLY_TO_ADDRESS&lt;/code&gt;). If you want to run the app without email, you can set &lt;code&gt;NX_POSTMARK_API_TOKEN&lt;/code&gt; to a dummy value.&lt;/p&gt; &#xA;&lt;p&gt;Maybe uses &lt;a href=&#34;https://teller.io/&#34;&gt;Teller&lt;/a&gt; for connecting financial accounts. To get started with Teller, you&#39;ll need to create an account. Once you&#39;ve created an account:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add your Teller application id to your &lt;code&gt;.env&lt;/code&gt; file (&lt;code&gt;NEXT_PUBLIC_TELLER_APP_ID&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Download your authentication certificates from Teller, create a &lt;code&gt;certs&lt;/code&gt; folder in the root of the project, and place your certs in that directory. You should have both a &lt;code&gt;certificate.pem&lt;/code&gt; and &lt;code&gt;private_key.pem&lt;/code&gt;. &lt;strong&gt;NEVER&lt;/strong&gt; check these files into source control, the &lt;code&gt;.gitignore&lt;/code&gt; file will prevent the &lt;code&gt;certs/&lt;/code&gt; directory from being added, but please double-check.&lt;/li&gt; &#xA; &lt;li&gt;Set your &lt;code&gt;NEXT_PUBLIC_TELLER_ENV&lt;/code&gt; and &lt;code&gt;NX_TELLER_ENV&lt;/code&gt; to your desired environment. The default is &lt;code&gt;sandbox&lt;/code&gt; which allows for testing with mock data. The login credentials for the sandbox environment are &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;. To connect to real financial accounts, you&#39;ll need to use the &lt;code&gt;development&lt;/code&gt; environment.&lt;/li&gt; &#xA; &lt;li&gt;Webhooks are not implemented yet, but you can populate the &lt;code&gt;NX_TELLER_SIGNING_SECRET&lt;/code&gt; with the value from your Teller account.&lt;/li&gt; &#xA; &lt;li&gt;We highly recommend checking out the &lt;a href=&#34;https://teller.io/docs&#34;&gt;Teller docs&lt;/a&gt; for more info.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then run the following yarn commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn install&#xA;yarn run dev:services:all&#xA;yarn prisma:migrate:dev&#xA;yarn prisma:seed&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Set Up Ngrok&lt;/h2&gt; &#xA;&lt;p&gt;External data providers require HTTPS/SSL webhook URLs for sending data.&lt;/p&gt; &#xA;&lt;p&gt;To test this locally/during development, you will need to setup &lt;code&gt;ngrok&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a free account&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://dashboard.ngrok.com/get-started/your-authtoken&#34;&gt;this page&lt;/a&gt; to access your auth token&lt;/li&gt; &#xA; &lt;li&gt;Paste it into your &lt;code&gt;.env&lt;/code&gt; file: &lt;code&gt;NGROK_AUTH_TOKEN=your_auth_token&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should claim your free static domain to avoid needing to change the URL each time you start/stop the server.&lt;/p&gt; &#xA;&lt;p&gt;To do so:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://dashboard.ngrok.com/cloud-edge/domains&#34;&gt;domains&lt;/a&gt; page&lt;/li&gt; &#xA; &lt;li&gt;Click on Create Domain&lt;/li&gt; &#xA; &lt;li&gt;Copy the domain and paste it into your &lt;code&gt;.env&lt;/code&gt; file: &lt;code&gt;NGROK_DOMAIN=your_domain&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;That&#39;s it! As long as you run the project locally using &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;yarn dev:services:all&lt;/code&gt; you&#39;ll be good to go.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute, please see our &lt;a href=&#34;https://github.com/maybe-finance/maybe/raw/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;High-priority issues&lt;/h2&gt; &#xA;&lt;p&gt;The biggest focus at the moment is on getting the app functional without some previously key external services (namely Plaid).&lt;/p&gt; &#xA;&lt;p&gt;You can view the current &lt;a href=&#34;https://github.com/maybe-finance/maybe/issues?q=is:issue+is:open+label:%22high+priority%22&#34;&gt;high-priority issues here&lt;/a&gt;. Those are the most impactful issues to tackle first.&lt;/p&gt; &#xA;&lt;h2&gt;External data&lt;/h2&gt; &#xA;&lt;p&gt;To pull market data in (for investments), you&#39;ll need a Polygon.io API key. You can get one for free &lt;a href=&#34;https://polygon.io/&#34;&gt;here&lt;/a&gt; and then add it to your &lt;code&gt;.env&lt;/code&gt; file (&lt;code&gt;NX_POLYGON_API_KEY&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Tech stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Next.js&lt;/li&gt; &#xA; &lt;li&gt;Tailwind&lt;/li&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA; &lt;li&gt;Express&lt;/li&gt; &#xA; &lt;li&gt;Postgres (w/ Timescale)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Relevant reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maybe-finance/maybe/wiki/Monorepo-File-Structure-Overview&#34;&gt;Learn about how the app is organized as a monorepo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maybe-finance/maybe/wiki/Data-model-assumptions-and-calculations&#34;&gt;Data model assumptions and calculations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maybe-finance/maybe/wiki/Handling-Money&#34;&gt;Handling money&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maybe-finance/maybe/wiki/REST-API&#34;&gt;REST API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repo Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/7866c9790deba0baf63ca1688b209130b306ea4e.svg?sanitize=true&#34; alt=&#34;Repo Activity&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The original app was built by &lt;a href=&#34;https://twitter.com/zg_dev&#34;&gt;Zach Gollwitzer&lt;/a&gt;, &lt;a href=&#34;https://www.narciero.com/&#34;&gt;Nick Arciero&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/actualTimWilson&#34;&gt;Tim Wilson&lt;/a&gt;, with design work by &lt;a href=&#34;https://twitter.com/justinmfarrugia&#34;&gt;Justin Farrugia&lt;/a&gt;. The app is currently maintained by &lt;a href=&#34;https://twitter.com/Shpigford&#34;&gt;Josh Pigford&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; license&lt;/h2&gt; &#xA;&lt;p&gt;Maybe is distributed under an &lt;a href=&#34;https://github.com/maybe-finance/maybe/raw/main/LICENSE&#34;&gt;AGPLv3 license&lt;/a&gt;. &#34;Maybe&#34; is a trademark of Maybe Finance, Inc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>marimo-team/marimo</title>
    <updated>2024-01-21T02:07:38Z</updated>
    <id>tag:github.com,2024-01-21:/marimo-team/marimo</id>
    <link href="https://github.com/marimo-team/marimo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A reactive notebook for Python — run reproducible experiments, execute as a script, deploy as an app, and version with git.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/marimo-team/marimo/raw/main/docs/_static/marimo-logotype-thick.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;em&gt;A reactive Python notebook that&#39;s reproducible, git-friendly, and deployable as scripts or apps.&lt;/em&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.marimo.io&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://github.com/marimo-team/marimo/tree/main/examples&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pypi.org/project/marimo/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/marimo?color=%2334D058&amp;amp;label=pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/marimo&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/marimo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/marimo-team/marimo/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/marimo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;marimo is a reactive notebook for Python. It allows you to rapidly experiment with data and models, code with confidence in your notebook&#39;s correctness, and productionize notebooks as pipelines or interactive web apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Highlights&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;reactive&lt;/strong&gt;: run a cell, and marimo automatically updates all affected cells and outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;interactive&lt;/strong&gt;: bind sliders, tables, plots, and more to Python — no callbacks required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;reproducible&lt;/strong&gt;: no hidden state, deterministic execution order&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;executable&lt;/strong&gt;: execute as a Python script&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;shareable&lt;/strong&gt;: deploy as an app&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;git-friendly&lt;/strong&gt;: stored as &lt;code&gt;.py&lt;/code&gt; files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install marimo &amp;amp;&amp;amp; marimo tutorial intro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Jump to the &lt;a href=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/#quickstart&#34;&gt;quickstart&lt;/a&gt; for a primer on our CLI.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;A reactive programming environment&lt;/h2&gt; &#xA;&lt;p&gt;marimo guarantees your notebook code, outputs, and program state are consistent. This &lt;a href=&#34;https://docs.marimo.io/faq.html#faq-problems&#34;&gt;solves many problems&lt;/a&gt; associated with traditional notebooks like Jupyter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A reactive programming environment.&lt;/strong&gt; Run a cell and marimo &lt;em&gt;reacts&lt;/em&gt; by automatically running the cells that reference its variables, eliminating the error-prone task of manually re-running cells. Delete a cell and marimo scrubs its variables from program memory, eliminating hidden state.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/reactive.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deterministic execution order.&lt;/strong&gt; Notebooks are executed in a deterministic order, based on variable references instead of cells&#39; positions on the page. Organize your notebooks to best fit the stories you&#39;d like to tell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Synchronized UI elements.&lt;/strong&gt; Interact with UI elements like sliders, dropdowns, and dataframe transformers, and the cells that use them are automatically re-run with their latest values.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/readme-ui.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Performant runtime.&lt;/strong&gt; marimo runs only those cells that need to be run by statically analyzing your code. You can optionally disable expensive cells to prevent them from automatically running.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Batteries-included.&lt;/strong&gt; marimo comes with GitHub Copilot, Black code formatting, HTML export, fast code completion, a &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=marimo-team.vscode-marimo&#34;&gt;VS Code extension&lt;/a&gt;, and many more quality-of-life features.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation.&lt;/strong&gt; In a terminal, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install marimo  # or conda install -c conda-forge marimo&#xA;marimo tutorial intro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Create notebooks.&lt;/strong&gt; Create an empty notebook with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo edit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or create/edit a notebook with a given name with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo edit your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run apps.&lt;/strong&gt; Run your notebook as a web app, with Python code hidden and uneditable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo run your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/docs-model-comparison.gif&#34; style=&#34;border-radius: 8px&#34; width=&#34;450px&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;This app is deployed on &lt;a href=&#34;https://marimo.io/cloud&#34;&gt;marimo cloud&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Execute as scripts.&lt;/strong&gt; marimo notebooks can be executed as scripts at the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatically convert Jupyter notebooks.&lt;/strong&gt; Automatically convert Jupyter notebooks to marimo notebooks with the CLI&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo convert your_notebook.ipynb &amp;gt; your_notebook.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use our &lt;a href=&#34;https://marimo.io/convert&#34;&gt;web interface&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tutorials.&lt;/strong&gt; List all tutorials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;marimo tutorial --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.marimo.io/faq.html&#34;&gt;FAQ&lt;/a&gt; at our docs.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;marimo is easy to get started with, with lots of room for power users. For example, here&#39;s an embedding visualizer made in marimo (&lt;a href=&#34;https://marimo.io/videos/landing/full.mp4&#34;&gt;video&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/embedding.gif&#34; width=&#34;700px&#34;&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://docs.marimo.io&#34;&gt;docs&lt;/a&gt;, the &lt;code&gt;examples/&lt;/code&gt; folder, and our &lt;a href=&#34;https://marimo.io/@public&#34;&gt;gallery&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;table border=&#34;0&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/overview.html&#34;&gt; &lt;img src=&#34;https://docs.marimo.io/_static/reactive.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/inputs/index.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/readme-ui.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/plotting.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/docs-intro.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/layouts/index.html&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/outputs.gif&#34; style=&#34;max-height:150px; width:auto; display:block;&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/overview.html&#34;&gt; Tutorial &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/inputs/index.html&#34;&gt; Inputs &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/guides/plotting.html&#34;&gt; Plots &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://docs.marimo.io/api/layouts/index.html&#34;&gt; Layout &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We appreciate all contributions! You don&#39;t need to be an expert to help out. Please see &lt;a href=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details on how to get started.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Questions? Reach out to us &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34;&gt;on Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re building a community. Come hang out with us!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🌟 &lt;a href=&#34;https://github.com/marimo-team/marimo&#34;&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/JE7nhX6mD8&#34;&gt;Chat with us on Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📧 &lt;a href=&#34;https://marimo.io/newsletter&#34;&gt;Subscribe to our Newsletter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;☁️ &lt;a href=&#34;https://marimo.io/cloud&#34;&gt;Join our Cloud Waitlist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;✏️ &lt;a href=&#34;https://github.com/marimo-team/marimo/discussions&#34;&gt;Start a GitHub Discussion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐦 &lt;a href=&#34;https://twitter.com/marimo_io&#34;&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕴️ &lt;a href=&#34;https://www.linkedin.com/company/marimo-io&#34;&gt;Follow us on LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspiration ✨&lt;/h2&gt; &#xA;&lt;p&gt;marimo is a &lt;strong&gt;reinvention&lt;/strong&gt; of the Python notebook as a reproducible, interactive, and shareable Python program, instead of an error-prone JSON scratchpad.&lt;/p&gt; &#xA;&lt;p&gt;We believe that the tools we use shape the way we think — better tools, for better minds. With marimo, we hope to provide the Python community with a better programming environment to do research and communicate it; to experiment with code and share it; to learn computational science and teach it.&lt;/p&gt; &#xA;&lt;p&gt;Our inspiration comes from many places and projects, especially &lt;a href=&#34;https://github.com/fonsp/Pluto.jl&#34;&gt;Pluto.jl&lt;/a&gt;, &lt;a href=&#34;https://observablehq.com/tutorials&#34;&gt;ObservableHQ&lt;/a&gt;, and &lt;a href=&#34;http://worrydream.com/&#34;&gt;Bret Victor&#39;s essays&lt;/a&gt;. marimo is part of a greater movement toward reactive dataflow programming. From &lt;a href=&#34;https://github.com/ipyflow/ipyflow&#34;&gt;IPyflow&lt;/a&gt;, &lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;streamlit&lt;/a&gt;, &lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&#34;https://github.com/pytorch/pytorch/tree/main&#34;&gt;PyTorch&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/jax&#34;&gt;JAX&lt;/a&gt;, and &lt;a href=&#34;https://github.com/facebook/react&#34;&gt;React&lt;/a&gt;, the ideas of functional, declarative, and reactive programming are transforming a broad range of tools for the better.&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/marimo-logotype-horizontal.png&#34; height=&#34;200px&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>medusajs/nextjs-starter-medusa</title>
    <updated>2024-01-21T02:07:38Z</updated>
    <id>tag:github.com,2024-01-21:/medusajs/nextjs-starter-medusa</id>
    <link href="https://github.com/medusajs/nextjs-starter-medusa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A performant frontend ecommerce starter template with Next.js 14 and Medusa.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.medusajs.com&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/59018053/229103275-b5e482bb-4601-46e6-8142-244f531cebdb.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg&#34;&gt; &#xA;   &lt;img alt=&#34;Medusa logo&#34; src=&#34;https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg?sanitize=true&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Medusa Next.js Starter Template &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Combine Medusa&#39;s modules for your commerce backend with the newest Next.js 14 features for a performant storefront.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/medusajs/medusa/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&#34; alt=&#34;PRs welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/xpCwq3Kfn8&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=medusajs&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs&#34; alt=&#34;Follow @medusajs&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;To use the &lt;a href=&#34;https://medusajs.com/nextjs-commerce/&#34;&gt;Next.js Starter Template&lt;/a&gt;, you should have a Medusa server running locally on port 9000. For a quick setup, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx create-medusa-app@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://docs.medusajs.com/create-medusa-app&#34;&gt;create-medusa-app docs&lt;/a&gt; for more details and troubleshooting.&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;The Medusa Next.js Starter is built with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/&#34;&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medusajs.com/&#34;&gt;Medusa&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full ecommerce support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Product Detail Page&lt;/li&gt; &#xA;   &lt;li&gt;Product Overview Page&lt;/li&gt; &#xA;   &lt;li&gt;Search with Algolia / MeiliSearch&lt;/li&gt; &#xA;   &lt;li&gt;Product Collections&lt;/li&gt; &#xA;   &lt;li&gt;Cart&lt;/li&gt; &#xA;   &lt;li&gt;Checkout with PayPal and Stripe&lt;/li&gt; &#xA;   &lt;li&gt;User Accounts&lt;/li&gt; &#xA;   &lt;li&gt;Order Details&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Full Next.js 14 support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App Router&lt;/li&gt; &#xA;   &lt;li&gt;Next fetching/caching&lt;/li&gt; &#xA;   &lt;li&gt;Server Components&lt;/li&gt; &#xA;   &lt;li&gt;Server Actions&lt;/li&gt; &#xA;   &lt;li&gt;Streaming&lt;/li&gt; &#xA;   &lt;li&gt;Static Pre-Rendering&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;h3&gt;Setting up the environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Navigate into your projects directory and get your environment variables ready:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd nextjs-starter-medusa/&#xA;mv .env.template .env.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Use Yarn to install all dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start developing&lt;/h3&gt; &#xA;&lt;p&gt;You are now ready to start up your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Open the code and start customizing&lt;/h3&gt; &#xA;&lt;p&gt;Your site is now running at &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h1&gt;Payment integrations&lt;/h1&gt; &#xA;&lt;p&gt;By default this starter supports the following payment integrations&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/&#34;&gt;Paypal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable the integrations you need to add the following to your &lt;code&gt;.env.local&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;NEXT_PUBLIC_STRIPE_KEY=&amp;lt;your-stripe-public-key&amp;gt;&#xA;NEXT_PUBLIC_PAYPAL_CLIENT_ID=&amp;lt;your-paypal-client-id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will also need to setup the integrations in your Medusa server. See the &lt;a href=&#34;https://docs.medusajs.com&#34;&gt;Medusa documentation&lt;/a&gt; for more information on how to configure &lt;a href=&#34;https://docs.medusajs.com/add-plugins/stripe&#34;&gt;Stripe&lt;/a&gt; and &lt;a href=&#34;https://docs.medusajs.com/add-plugins/paypal&#34;&gt;PayPal&lt;/a&gt; in your Medusa project.&lt;/p&gt; &#xA;&lt;h1&gt;Search integration&lt;/h1&gt; &#xA;&lt;p&gt;This starter is configured to support using the &lt;code&gt;medusa-search-meilisearch&lt;/code&gt; plugin out of the box. To enable search you will need to enable the feature flag in &lt;code&gt;./store.config.json&lt;/code&gt;, which you do by changing the config to this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;  &#34;features&#34;: {&#xA;    // other features...&#xA;    &#34;search&#34;: true&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Before you can search you will need to install the plugin in your Medusa server, for a written guide on how to do this – &lt;a href=&#34;https://docs.medusajs.com/add-plugins/meilisearch&#34;&gt;see our documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The search components in this starter are developed with Algolia&#39;s &lt;code&gt;react-instant-search-hooks-web&lt;/code&gt; library which should make it possible for you to seemlesly change your search provider to Algolia instead of MeiliSearch.&lt;/p&gt; &#xA;&lt;p&gt;To do this you will need to add &lt;code&gt;algoliasearch&lt;/code&gt; to the project, by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn add algoliasearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this you will need to switch the current MeiliSearch &lt;code&gt;SearchClient&lt;/code&gt; out with a Alogolia client. To do this update &lt;code&gt;@lib/search-client&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import algoliasearch from &#34;algoliasearch/lite&#34;&#xA;&#xA;const appId = process.env.NEXT_PUBLIC_SEARCH_APP_ID || &#34;test_app_id&#34; // You should add this to your environment variables&#xA;&#xA;const apiKey = process.env.NEXT_PUBLIC_SEARCH_API_KEY || &#34;test_key&#34;&#xA;&#xA;export const searchClient = algoliasearch(appId, apiKey)&#xA;&#xA;export const SEARCH_INDEX_NAME =&#xA;  process.env.NEXT_PUBLIC_INDEX_NAME || &#34;products&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in &lt;code&gt;src/app/(main)/search/actions.ts&lt;/code&gt;, remove the MeiliSearch code (line 10-16) and uncomment the Algolia code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;&#34;use server&#34;&#xA;&#xA;import { searchClient, SEARCH_INDEX_NAME } from &#34;@lib/search-client&#34;&#xA;&#xA;/**&#xA; * Uses MeiliSearch or Algolia to search for a query&#xA; * @param {string} query - search query&#xA; */&#xA;export async function search(query: string) {&#xA;  const index = searchClient.initIndex(SEARCH_INDEX_NAME)&#xA;  const { hits } = await index.search(query)&#xA;&#xA;  return hits&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After this you will need to set up Algolia with your Medusa server, and then you should be good to go. For a more thorough walkthrough of using Algolia with Medusa – &lt;a href=&#34;https://docs.medusajs.com/add-plugins/algolia&#34;&gt;see our documentation&lt;/a&gt;, and the &lt;a href=&#34;https://www.algolia.com/doc/guides/building-search-ui/getting-started/react-hooks/&#34;&gt;documentation for using &lt;code&gt;react-instantsearch-hooks-web&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;h2&gt;Learn more about Medusa&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.medusajs.com/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/medusajs&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.medusajs.com/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn more about Next.js&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vercel/next.js&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nextjs.org/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>