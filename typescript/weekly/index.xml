<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:51:41Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fuergaosi233/wechat-chatgpt</title>
    <updated>2022-12-18T01:51:41Z</updated>
    <id>tag:github.com,2022-12-18:/fuergaosi233/wechat-chatgpt</id>
    <link href="https://github.com/fuergaosi233/wechat-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use ChatGPT On Wechat via wechaty&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Welcome to wechat-chatgpt üëã&lt;/h1&gt; &#xA;&lt;p&gt; &lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: ISC&#34; src=&#34;https://img.shields.io/badge/License-ISC-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/fuergaosi&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Twitter: fuergaosi&#34; src=&#34;https://img.shields.io/twitter/follow/fuergaosi.svg?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use ChatGPT On Wechat via wechaty&lt;br&gt; English | &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/README_ZH.md&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/BHJD6L?referralCode=FaJtD_&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have a server or want to experience rapid deployment, you can use Railway to do so, see &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#usage-with-railway&#34;&gt;Usage with Railway&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Update December 13, 2022&lt;/h1&gt; &#xA;&lt;p&gt;Yesterday (2022.12.12), OpenAI upgraded the authentication measures.&lt;/p&gt; &#xA;&lt;p&gt;It causes &lt;code&gt;‚ö†Ô∏è No chatgpt item in pool&lt;/code&gt; when you use this project.&lt;/p&gt; &#xA;&lt;p&gt;However, please rest assured that we are actively looking for an effective solution,&lt;/p&gt; &#xA;&lt;p&gt;If you have a good solution, feel free to contribute!&lt;/p&gt; &#xA;&lt;h2&gt;üåü Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use ChatGPT On Wechat via wechaty&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support OpenAI Accounts Pool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support use proxy to login&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add conversation Support (Everyone will have their own session)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Dockerfile&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Publish to Docker.hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Railway deploy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto Reload OpenAI Accounts Pool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add sendmessage retry for 429/503&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use with docker in Linux(recommended)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp config.yaml.example config.yaml&#xA;# Change Config.yaml&#xA;# run docker command in Linux or WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use with docker in Windows&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create and modify config.yaml in the current directory&#xA;# run docker command in WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# In the Windows command line (cmd) environment, you may mount the current directory like this:&#xA;docker run -d --name wechat-chatgpt -v %cd%/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrade docker image version&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull holegots/wechat-chatgpt:latest&#xA;docker stop wechat-chatgpt&#xA;docker rm wechat-chatgpt&#xA;# run docker command in Linux or WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# In the Windows command line (cmd) environment, you may mount the current directory like this:&#xA;docker run -d --name wechat-chatgpt -v %cd%/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install &amp;amp;&amp;amp; poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage with manual&lt;/h2&gt; &#xA;&lt;h3&gt;Copy config&lt;/h3&gt; &#xA;&lt;p&gt;You need copy config file for setting up your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp config.yaml.example config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get and config Openai account&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you don&#39;t have this OpenAI account and you live in China, you can get it &lt;a href=&#34;https://mirror.xyz/boxchen.eth/9O9CSqyKDj4BKUIil7NC1Sa1LJM-3hsPqaeW_QjfFBc&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;&lt;strong&gt;AÔºöUse account and password&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;You need get OpenAI account and password. Your config.yaml should be like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;chatGPTAccountPool:&#xA;  - email: &amp;lt;your email&amp;gt;&#xA;    password: &amp;lt;your password&amp;gt;&#xA;# if you hope only some keywords can trigger chatgpt on private chat, you can set it like this:&#xA;chatPrivateTiggerKeyword: &#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Trigger keywords must appear in the first position of the received message. ‚ö†Ô∏è Pls make sure your network can log in to OpenAI, and if you fail to login in try setting up a proxy or using SessionToken.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Setup proxy:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can configure in &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openAIProxy: &amp;lt;Your Proxy&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can export to environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export http_proxy=&amp;lt;Your Proxy&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;B: Use Session Token&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If you cant use email and password to login your openai account or your network can&#39;t login, you can use session token. You need to follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; and log in or sign up.&lt;/li&gt; &#xA; &lt;li&gt;Open dev tools.&lt;/li&gt; &#xA; &lt;li&gt;Open Application &amp;gt; Cookies. &lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/session-token.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy the value for &lt;code&gt;\_\_Secure-next-auth.session-token&lt;/code&gt;, save it to your config&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Your &lt;code&gt;config.yaml&lt;/code&gt; should be like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;chatGPTAccountPool:&#xA;  - session_token: &amp;lt;your session_token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Configure Cloudflare Token&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;We also need Cloudflare token to build the connection successfully. Similar to getting the session token, you need to copy the value for &lt;code&gt;cf_clearance&lt;/code&gt;, save it to your config file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/cloudflare-token.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your &lt;code&gt;config.yaml&lt;/code&gt; should be like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clearanceToken: &amp;lt;your cloudflare_token&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Configure User Agent&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;We have provided a sample &lt;code&gt;userAgent&lt;/code&gt; in &lt;code&gt;config.yaml.example&lt;/code&gt;. But you can also set up your own user agent, which can be found in following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open dev tools&lt;/li&gt; &#xA; &lt;li&gt;Open network&lt;/li&gt; &#xA; &lt;li&gt;Find &lt;code&gt;User-Agent&lt;/code&gt; in request headers&lt;/li&gt; &#xA; &lt;li&gt;Copy the value for &lt;code&gt;User-Agent&lt;/code&gt;, save it to your config&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/user-agent.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your &lt;code&gt;config.yaml&lt;/code&gt; should be like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;userAgent: &#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are logging in for the first time, then you need to scan the qrcode.&lt;/p&gt; &#xA;&lt;h2&gt;Usage with Railway&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/&#34;&gt;Railway&lt;/a&gt; is a deployment platform where you can provision infrastructure, develop with that infrastructure locally, and then deploy to the cloud.This section describes how to quickly deploy a wechat-chatgpt project using Railway.&lt;/p&gt; &#xA;&lt;p&gt;Firstly, you&#39;ll need to sign up for a Railway account and sign in using GitHub verification.&lt;/p&gt; &#xA;&lt;p&gt;Then click the one-click deployment button below to deploy.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/BHJD6L?referralCode=FaJtD_&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After some validation is complete, you can begin the deployment.You will see the following interface:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deployment.png&#34; alt=&#34;railway-deployment&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some environment variables need to be configured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_EMAIL&lt;/strong&gt; : Your OpenAI Account email, if you have session_token, It&#39;s optional.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_PASSWORD&lt;/strong&gt; : Your OpenAI Account password, &lt;em&gt;if you have session_token, It&#39;s optional&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_SESSION_TOKEN&lt;/strong&gt; : Your OpenAI Account session_token, &lt;em&gt;if you have email and password, It&#39;s optional&lt;/em&gt;.See how to get a token &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#b-use-session-token&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_RETRY_TIMES&lt;/strong&gt; : The number of times to retry when the OpenAI API returns 429 or 503.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_PRIVATE_TRIGGER_KEYWORD&lt;/strong&gt; : If you hope only some keywords can trigger chatgpt on private chat, you can set it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CF_CLEARANCE&lt;/strong&gt; : Your Cloudflare&#39;s clearance token. See how to get a token &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#configure-cloudflare-token&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;USER_AGENT&lt;/strong&gt;: Your user-agent. See how to get &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#configure-user-agent&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Click the Deploy button and your service will start deploying shortly.The following interface appears to indicate that the deployment has begun:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deploying.png&#34; alt=&#34;railway-deploying&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When the deployment is displayed successfully, click to view the logs and find the WeChat login link in Deploy Logs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deployed.png&#34; alt=&#34;railway-deployed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click to enter and use your prepared WeChat to scan the code to log in.&lt;/p&gt; &#xA;&lt;p&gt;Log in successfully and start sending and receiving messages(This process can take several minutes):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-succeed.png&#34; alt=&#34;railway-success&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Besides, in deployment, you may encounter the following issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error: ‚ö†Ô∏è No chatgpt item in pool&lt;/strong&gt; : This error means that you have not configured the OpenAI account information correctly. You can solve this problem from the following aspects:1. Check whether the token or openAI account and password are filled in correctly. 2. The token may have expired (experience shows that the expiration time of the token is &lt;strong&gt;24&lt;/strong&gt; hours), you can go to the chatGPT official website to re-obtain the token. 3. Redeploy Current Services.Note that the above should be modified on the Variables page in Railway Dashboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;After the deployment is complete, the QR code is not generated&lt;/strong&gt;.Try &lt;strong&gt;refreshing&lt;/strong&gt; the page to see again if the Deploy Logs panel generated a link and QR code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The generated QR code cannot be scanned&lt;/strong&gt;.On the generated QR code, there is a link that can be clicked to scan the QR code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message feedback is very slow&lt;/strong&gt;.Because Railway&#39;s servers are deployed overseas, there is an increase in message feedback latency, but it is still within the acceptance range. If you are time sensitive, you can use your own server deployment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;üë§ &lt;strong&gt;holegots&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/fuergaosi&#34;&gt;@fuergaosi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/fuergaosi233&#34;&gt;@fuergaosi233&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions, issues and feature requests are welcome!&lt;br&gt;Feel free to check &lt;a href=&#34;https://github.com/fuergaosi233/wechat-chatgpt/issues&#34;&gt;issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Show your support&lt;/h2&gt; &#xA;&lt;p&gt;Give a ‚≠êÔ∏è if this project helped you!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wechaty/wechaty</title>
    <updated>2022-12-18T01:51:41Z</updated>
    <id>tag:github.com,2022-12-18:/wechaty/wechaty</id>
    <link href="https://github.com/wechaty/wechaty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Conversational RPA SDK for Chatbot Makers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wechaty &lt;a href=&#34;https://www.npmjs.com/package/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/wechaty?color=brightgreen&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ANPM&#34;&gt;&lt;img src=&#34;https://github.com/wechaty/wechaty/workflows/NPM/badge.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ADocker&#34;&gt;&lt;img src=&#34;https://github.com/wechaty/wechaty/workflows/Docker/badge.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wechaty.js.org&#34;&gt;&lt;img src=&#34;https://wechaty.js.org/img/wechaty-logo.svg?sanitize=true&#34; alt=&#34;Wechaty&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/wechaty.svg?style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/wechaty/wechaty.svg?label=github%20stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wechaty/wechaty/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wechaty/wechaty.svg?maxAge=2592000&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chatie/tsconfig/issues/16&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ES-Modules-orange&#34; alt=&#34;ES Modules&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wechaty.js.org/docs/polyglot/typescript/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--3178C6?logo=typescript&amp;amp;logoColor=ffffff&#34; alt=&#34;TypeScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/typescript/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--F7DF1E?logo=javascript&amp;amp;logoColor=000&#34; alt=&#34;JavaScript&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--3670A0?logo=python&amp;amp;logoColor=ffdd54&#34; alt=&#34;Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/go/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--00ADD8?logo=go&amp;amp;logoColor=white&#34; alt=&#34;Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/java/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--red?logo=java&amp;amp;logoColor=white&#34; alt=&#34;Java&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/dotnet/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--5C2D91?logo=dotnet&amp;amp;logoColor=white&#34; alt=&#34;.NET&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/php/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--777BB4?logo=php&amp;amp;logoColor=white&#34; alt=&#34;PHP&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/rust/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--000000?logo=rust&amp;amp;logoColor=white&#34; alt=&#34;Rust&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/polyglot/scala/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--DC322F?logo=scala&amp;amp;logoColor=white&#34; alt=&#34;Scala&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wechaty.js.org/docs/puppet-providers/wechat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--07C160?logo=wechat&amp;amp;logoColor=white&#34; alt=&#34;WeChat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wechaty.js.org/docs/puppet-providers/whatsapp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/--25D366?logo=whatsapp&amp;amp;logoColor=white&#34; alt=&#34;Whatsapp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;[![TikTok](https://img.shields.io/badge/--000000?logo=tiktok&amp;logoColor=white)](https://wechaty.js.org/docs/puppet-providers/tiktok)&#xA;[![Line](https://img.shields.io/badge/--00C300?logo=line&amp;logoColor=white)](https://wechaty.js.org/docs/puppet-providers/line)&#xA;[![Telegram](https://img.shields.io/badge/--2CA5E0?logo=telegram&amp;logoColor=white)](https://wechaty.js.org/docs/puppet-providers/telegram)&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/wechaty/wechaty?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/wechaty/wechaty?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badgen.net/gitter/members/wechaty/wechaty&#34; alt=&#34;Gitter room&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20telegram-blue&#34; alt=&#34;Telegram Wechaty Channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Connecting Chatbots&lt;/h2&gt; &#xA;&lt;p&gt;Wechaty is a RPA (Robotic Process Automation) SDK for Chatbot Makers which can help you create a bot in 6 lines of &lt;a href=&#34;https://GitHub.com/Wechaty/wechaty&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://GitHub.com/Wechaty/python-wechaty/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://GitHub.com/Wechaty/go-wechaty/&#34;&gt;Go&lt;/a&gt;, and &lt;a href=&#34;https://GitHub.com/Wechaty/java-wechaty/&#34;&gt;Java&lt;/a&gt;, with cross-platform support including &lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ANPM&#34;&gt;Linux, Windows, MacOS&lt;/a&gt;, and &lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ADocker&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;üï∏&lt;/span&gt; &lt;a href=&#34;https://wechaty.js.org&#34;&gt;https://wechaty.js.org&lt;/a&gt;&lt;br&gt; &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/Wechaty/wechaty&#34;&gt;https://github.com/Wechaty/wechaty&lt;/a&gt;&lt;br&gt; &lt;span&gt;ü™≤&lt;/span&gt; &lt;a href=&#34;https://github.com/Wechaty/wechaty/issues&#34;&gt;https://github.com/Wechaty/wechaty/issues&lt;/a&gt;&lt;br&gt; &lt;span&gt;üìñ&lt;/span&gt; &lt;a href=&#34;https://github.com/Wechaty/wechaty-getting-started&#34;&gt;https://github.com/Wechaty/wechaty-getting-started&lt;/a&gt;&lt;br&gt; &lt;span&gt;üê≥&lt;/span&gt; &lt;a href=&#34;https://hub.docker.com/r/wechaty/wechaty&#34;&gt;https://hub.docker.com/r/wechaty/wechaty&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Breaking News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wechaty.js.org/2021/04/13/wechaty-uos-web/&#34;&gt;ÈáçÁ£ÖÔºöÁªïËøáÁôªÂΩïÈôêÂà∂ÔºåwechatyÂÖçË¥πÁâàwebÂçèËÆÆÈáçÊîæËç£ÂÖâ, @gengchen528, Apr 13, 2021&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Voice of Developers&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Wechaty is a great solution, I believe there would be much more users recognize it.&#34; &lt;a href=&#34;https://github.com/Wechaty/wechaty/pull/310#issuecomment-285574472&#34;&gt;link&lt;/a&gt;&lt;br&gt; ‚Äî &lt;cite&gt;@Gcaufy, Tencent Engineer, Author of &lt;a href=&#34;https://github.com/Tencent/wepy&#34;&gt;WePY&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;Â§™Â•ΩÁî®ÔºåÂ•ΩÁî®ÁöÑÊÉ≥Âì≠&#34;&lt;br&gt; ‚Äî &lt;cite&gt;@xinbenlv, Google Engineer, Founder of HaoShiYou.org&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;‚ÄùÂ•ΩÁî®Âà∞Âì≠‚Äú‚Äî‚Äî‰Ω†‰ª¨ÂØπÂæóËµ∑Ëøô‰∏™ËØÑ‰ª∑ÔºÅ &lt;a href=&#34;https://github.com/bigbrother666sh/shezhangbujianle#%E8%87%B4%E6%95%AC&#34;&gt;link&lt;/a&gt;&lt;br&gt; ‚Äî &lt;cite&gt;&lt;a href=&#34;https://github.com/bigbrother666sh&#34;&gt;@bigbrother666sh&lt;/a&gt;, creator of„ÄäÁ§æÈïø‰∏çËßÅ‰∫Ü„ÄãÂâßÊú¨ÊùÄ NPC DM&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;ÊúÄÂ•ΩÁöÑÂæÆ‰ø°ÂºÄÂèëÂ∫ì&#34; &lt;a href=&#34;http://weibo.com/3296245513/Ec4iNp9Ld?type=comment&#34;&gt;link&lt;/a&gt;&lt;br&gt; ‚Äî &lt;cite&gt;@Jarvis, Baidu Engineer&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;WechatyËÆ©ËøêËê•‰∫∫ÂëòÊõ¥Â§öÁöÑÊó∂Èó¥ÊÄùËÄÉÂ¶Ç‰ΩïËøõË°åÊ¥ªÂä®Á≠ñÂàí„ÄÅÁïôÂ≠òÁî®Êà∑ÔºåÂïÜ‰∏öÂèòÁé∞&#34; &lt;a href=&#34;http://mp.weixin.qq.com/s/dWHAj8XtiKG-1fIS5Og79g&#34;&gt;link&lt;/a&gt;&lt;br&gt; ‚Äî &lt;cite&gt;@lijiarui, Founder &amp;amp; CEO of Juzi.BOT.&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;If you know js ... try Wechaty, it&#39;s easy to use.&#34;&lt;br&gt; ‚Äî &lt;cite&gt;@Urinx Uri Lee, Author of &lt;a href=&#34;https://github.com/Urinx/WeixinBot&#34;&gt;WeixinBot(Python)&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt; &#xA; &lt;p&gt;&#34;Wechaty is a good project, I hope it can continue! Therefore, I became a contributors in open collective.&#34;&lt;br&gt; ‚Äî &lt;cite&gt;&lt;a href=&#34;https://github.com/mrwhh&#34;&gt;@Simple&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See more at &lt;a href=&#34;https://github.com/Wechaty/wechaty/wiki/Voice%20Of%20Developer&#34;&gt;Wiki:Voice Of Developer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Join Us&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/wechaty/wechaty?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wechaty is used in many ChatBot projects by thousands of developers. If you want to talk with other developers, just scan the following QR Code in WeChat with secret code &lt;em&gt;wechaty&lt;/em&gt;, join our &lt;strong&gt;Wechaty Developers&#39; Home&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://wechaty.js.org/img/friday-qrcode.svg?sanitize=true&#34; alt=&#34;Wechaty Friday.BOT QR Code&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scan now, because other Wechaty developers want to talk with you too! (secret code: &lt;em&gt;wechaty&lt;/em&gt;)&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You are also welcome to join our Gitter channel at &lt;a href=&#34;https://gitter.im/wechaty/wechaty&#34;&gt;https://gitter.im/wechaty/wechaty&lt;/a&gt; with your GitHub account!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Resource&lt;/h3&gt; &#xA;&lt;p&gt;Wechaty already held lots of talk and got a lot of blogs in the past 4 years, here is all of the wechaty resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;üìπ&lt;/span&gt; &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8hd9KDTdarDXf_Rxtr8meKhxtgcXMInh&#34;&gt;Youtube Playlist: Watch all of talk video related with Wechaty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üìÉ&lt;/span&gt; &lt;a href=&#34;https://wechaty.js.org/&#34;&gt;Full Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üí°&lt;/span&gt; &lt;a href=&#34;https://wechaty.github.io/&#34;&gt;Blog: See how developers use wechaty building fantastic project!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üî∞&lt;/span&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty-getting-started&#34;&gt;Wechaty-Getting-Started:Wechaty Starter Project Template that Works Out-of-the-Box&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üéâ&lt;/span&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty/wiki/Contributors&#34;&gt;Wechaty Contributor List: Thanks for their contribution!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;üéÅ&lt;/span&gt; &lt;a href=&#34;https://github.com/juzibot/Welcome/wiki/Everything-about-Wechaty&#34;&gt;Juzibot Support Wechaty: Know everything about Wechaty&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; The World&#39;s Shortest ChatBot Code: 6 lines of JavaScript&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;import { WechatyBuilder } from &#39;wechaty&#39;&#xA;&#xA;const wechaty = WechatyBuilder.build() // get a Wechaty instance&#xA;wechaty&#xA;  .on(&#39;scan&#39;, (qrcode, status) =&amp;gt; console.log(`Scan QR Code to login: ${status}\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))&#xA;  .on(&#39;login&#39;,            user =&amp;gt; console.log(`User ${user} logged in`))&#xA;  .on(&#39;message&#39;,       message =&amp;gt; console.log(`Message: ${message}`))&#xA;wechaty.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Notice: Wechaty requires Node.js version &amp;gt;= 16&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This bot can log all messages to the console after login by scan.&lt;/p&gt; &#xA;&lt;p&gt;You can find Wechaty Official Example at &lt;a href=&#34;https://raw.githubusercontent.com/wechaty/wechaty/main/examples/ding-dong-bot.ts&#34;&gt;examples/ding-dong-bot.ts&lt;/a&gt;, and more from our &lt;a href=&#34;https://github.com/Wechaty/wechaty-getting-started/raw/main/examples/&#34;&gt;Example Directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üèÅ&lt;/span&gt; Requirements&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Node.js version 16+&lt;/li&gt; &#xA; &lt;li&gt;NPM version 7+&lt;/li&gt; &#xA; &lt;li&gt;TypeScript version 4.4+&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/node/v/wechaty.svg?maxAge=604800&#34; alt=&#34;node&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wechaty Starter Repository - &lt;a href=&#34;https://github.com/wechaty/wechaty-getting-started&#34;&gt;https://github.com/wechaty/wechaty-getting-started&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We have a Wechaty starter repository for beginners with the simplest setting. It will be &lt;strong&gt;just work&lt;/strong&gt; out-of-the-box after you &lt;code&gt;clone&lt;/code&gt; &amp;amp; &lt;code&gt;npm install&lt;/code&gt; &amp;amp; &lt;code&gt;npm start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to Wechaty and want to try it the first time, we&#39;d like to strong recommend you starting from this repository, and using it as your starter template for your project.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, please saved the above &lt;em&gt;The World&#39;s Shortest ChatBot Code: 6 lines of JavaScript&lt;/em&gt; example to a file named &lt;code&gt;bot.js&lt;/code&gt; before you can use either NPM or Docker to run it.&lt;/p&gt; &#xA;&lt;h3&gt;1. Npm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/wechaty?color=brightgreen&amp;amp;label=wechaty%40latest&#34; alt=&#34;NPM Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/wechaty?activeTab=versions&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/wechaty/next?color=yellow&amp;amp;label=wechaty%40next&#34; alt=&#34;npm (tag)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/wechaty.svg?style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagephobia.now.sh/result?p=wechaty&#34;&gt;&lt;img src=&#34;https://packagephobia.now.sh/badge?p=wechaty&#34; alt=&#34;install size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm init&#xA;npm install wechaty&#xA;&#xA;# create your first bot.js file, you can copy/paste from the above &#34;The World&#39;s Shortest ChatBot Code: 6 lines of JavaScript&#34;&#xA;# then:&#xA;node bot.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Docker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wechaty/wechaty/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wechaty/wechaty.svg?maxAge=2592000&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/#/images/wechaty/wechaty&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;Docker Layers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wechaty Starter Repository for Docker - &lt;a href=&#34;https://github.com/wechaty/docker-wechaty-getting-started&#34;&gt;https://github.com/wechaty/docker-wechaty-getting-started&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Wechaty Docker supports both JavaScript and TypeScript. To use TypeScript just write in TypeScript and save with extension name &lt;code&gt;.ts&lt;/code&gt;, no need to compile because we use &lt;code&gt;ts-node&lt;/code&gt; to run it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;2.1. Run JavaScript&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# for JavaScript&#xA;docker run -ti --rm --volume=&#34;$(pwd)&#34;:/bot wechaty/wechaty bot.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.2. Run TypeScript&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# for TypeScript&#xA;docker run -ti --rm --volume=&#34;$(pwd)&#34;:/bot wechaty/wechaty bot.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn more about Wechaty Docker at &lt;a href=&#34;https://github.com/Wechaty/wechaty/wiki/Docker&#34;&gt;Wiki:Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. Switch Protocol(Puppet)&lt;/h3&gt; &#xA;&lt;p&gt;Wechaty is very powerful that it can run over different protocols. You can specify the protocol by set the environment variable &lt;code&gt;WECHATY_PUPPET&lt;/code&gt; to different puppet provider.&lt;/p&gt; &#xA;&lt;p&gt;If you cannot use Web protocol, you can apply other protocal following the instruction here: &lt;a href=&#34;https://github.com/wechaty/wechaty/wiki/Support-Developers&#34;&gt;https://github.com/wechaty/wechaty/wiki/Support-Developers&lt;/a&gt; We provide free token to support developers build a valuable WeChat chatbot.&lt;/p&gt; &#xA;&lt;p&gt;Currently we support the following &lt;a href=&#34;https://wechaty.js.org/docs/puppet-services/&#34;&gt;puppet providers&lt;/a&gt; :&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Protocol&lt;/th&gt; &#xA;   &lt;th&gt;Puppet Provider&lt;/th&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty-puppet-puppeteer&#34;&gt;PuppetPuppeteer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-puppeteer&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/juzibot/wxwork-tester&#34;&gt;PuppetWxwork&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-service&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mock&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty-puppet-mock&#34;&gt;PuppetMock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-mock&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty-puppet-wechat4u&#34;&gt;PuppetWechat4u&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-wechat4u&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iPad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/puppet-service-providers&#34;&gt;PuppetRock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-service&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iPad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/puppet-service-providers&#34;&gt;PuppetPadLocal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-service&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wechaty/puppet-service-providers&#34;&gt;PuppetDonut&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-service&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iPad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;PuppetPadpro&lt;/del&gt; &lt;strong&gt;DEPRECATED&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-padpro&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iPad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;PuppetPadchat&lt;/del&gt; &lt;strong&gt;DEPRECATED&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-padchat&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iPad&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;PuppetPadplus&lt;/del&gt; &lt;strong&gt;DEPRECATED&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-padplus&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;PuppetMacpro&lt;/del&gt; &lt;strong&gt;DEPRECATED&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;export WECHATY_PUPPET=wechaty-puppet-macpro&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Learn more about Wechaty Puppet from the Puppet Wiki:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Puppet Directory: &lt;a href=&#34;https://github.com/Wechaty/wechaty-puppet/wiki/Directory&#34;&gt;https://github.com/Wechaty/wechaty-puppet/wiki/Directory&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Puppet Compatibility: &lt;a href=&#34;https://github.com/Wechaty/wechaty-puppet/wiki/Compatibility&#34;&gt;https://github.com/Wechaty/wechaty-puppet/wiki/Compatibility&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;üé∏&lt;/span&gt; API&lt;/h2&gt; &#xA;&lt;p&gt;Read the Full Documentation at &lt;a href=&#34;https://wechaty.github.io/wechaty/&#34;&gt;Wechaty Official API Reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1 Class &lt;code&gt;Wechaty&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Main bot class.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;Bot&lt;/code&gt; is a Wechaty instance that control a specific &lt;a href=&#34;https://wechaty.js.org/docs/specifications/puppet/&#34;&gt;wechaty-puppet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;new Wechaty(options?: WechatyOptions)&lt;/code&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;options.name?: string&lt;/code&gt; the name of this bot(optional)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;options.puppet?: string&lt;/code&gt; select which puppet provider we want to use. must be one of the: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty-puppet-wechat&#34;&gt;wechaty-puppet-wechat&lt;/a&gt; - Angular Hook for Web Wechat&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty-puppet-wechat4u&#34;&gt;wechaty-puppet-wechat4u&lt;/a&gt; - HTTP API for Web Wechat&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/botorange/wechaty-puppet-padpro&#34;&gt;wechaty-puppet-padpro&lt;/a&gt; - iPad App Protocol&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/linyimin-bupt/wechaty-puppet-ioscat&#34;&gt;wechaty-puppet-ioscat&lt;/a&gt; - iPhone App Hook&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty-puppet-mock&#34;&gt;wechaty-puppet-mock&lt;/a&gt; - Mock for Testing&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;options.puppetOptions?: PuppetOptions&lt;/code&gt; options for the puppet provider.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Wechaty&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;login&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit after bot login full successful&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;logout&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit after the bot log out&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;friendship&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when someone sends bot a friend request&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when there&#39;s a new message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;room-join&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when anyone join any room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;room-topic&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when someone change room topic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;room-leave&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when anyone leave the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;room-invite&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when there is a room invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+on&#34;&gt;&lt;code&gt;scan&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when the bot needs to show you a QR Code for scanning&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+start&#34;&gt;&lt;code&gt;start(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;start the bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+stop&#34;&gt;&lt;code&gt;stop(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;stop the bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+logonoff&#34;&gt;&lt;code&gt;logonoff(): boolean&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bot login status&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+logout&#34;&gt;&lt;code&gt;logout(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;logout the bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+currentUser&#34;&gt;&lt;code&gt;currentUser(): ContactSelf&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the login-ed bot contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Wechaty+say&#34;&gt;&lt;code&gt;say(text: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;let bot say &lt;code&gt;text&lt;/code&gt; to itself&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;2 Class &lt;code&gt;Contact&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;All wechat contacts(friends/non-friends) will be encapsulated as a Contact.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Contact&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact.find&#34;&gt;&lt;code&gt;find(query: string): Promise&amp;lt;null | Contact&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;find contact by name or alias, if the result more than one, return the first one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact.findAll&#34;&gt;&lt;code&gt;findAll(query: string): Promise&amp;lt;Contact[]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;find contact by &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact.load&#34;&gt;&lt;code&gt;load(query: string): Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get contact by id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;property&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;id: readonly string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get contact id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+sync&#34;&gt;&lt;code&gt;sync(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force reload data for contact , sync data from lowlevel API again&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+say&#34;&gt;&lt;code&gt;say(text: string): Promise&amp;lt;void | Message&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;send text, Contact, or file to contact, return the message which the bot sent (only &lt;code&gt;puppet-padplus&lt;/code&gt; supported).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+self&#34;&gt;&lt;code&gt;self(): boolean&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;check if contact is self&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+name&#34;&gt;&lt;code&gt;name(): string&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the name from a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+alias&#34;&gt;&lt;code&gt;alias(): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the alias for a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+alias&#34;&gt;&lt;code&gt;alias(newAlias: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;set or delete the alias for a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+friend&#34;&gt;&lt;code&gt;friend(): boolean&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;check if contact is friend&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+type&#34;&gt;&lt;code&gt;type(): ContactType&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;return the type of the Contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+province&#34;&gt;&lt;code&gt;province(): string&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the region &#39;province&#39; from a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+city&#34;&gt;&lt;code&gt;city(): string&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the region &#39;city&#39; from a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+avatar&#34;&gt;&lt;code&gt;avatar(): Promise&amp;lt;FileBox&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get avatar picture file stream&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Contact+gender&#34;&gt;&lt;code&gt;gender(): ContactGender&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get gender from a contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;2.1 Class &lt;code&gt;ContactSelf&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Class &lt;code&gt;ContactSelf&lt;/code&gt; is extended from &lt;code&gt;Contact&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;ContactSelf&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#ContactSelf+avatar&#34;&gt;&lt;code&gt;avatar(file: FileBox): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;set avatar for bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#ContactSelf+qrcode&#34;&gt;&lt;code&gt;qrcode(): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get qrcode for bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#ContactSelf+signature&#34;&gt;&lt;code&gt;signature(text: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;set signature for bot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;2.2 Class &lt;code&gt;Friendship&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Send, receive friend request, and friend confirmation events.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Friendship&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Friendship.add&#34;&gt;&lt;code&gt;add(contact: Contact, hello?: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;send a friend invitation to contact&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Friendship+accept&#34;&gt;&lt;code&gt;accept(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;accept Friend Request&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Friendship+hello&#34;&gt;&lt;code&gt;hello(): string&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the hello string from a friendship invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Friendship+contact&#34;&gt;&lt;code&gt;contact(): Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the contact from friendship&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Friendship+type&#34;&gt;&lt;code&gt;type(): FriendshipType&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;return the Friendship Type(unknown, confirm, receive, verify)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;3 Class &lt;code&gt;Message&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;All wechat messages will be encapsulated as a Message.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Message&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message.find&#34;&gt;&lt;code&gt;find(query: string): Promise&amp;lt;null | Message&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;find message in cache and return the first one&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message.findAll&#34;&gt;&lt;code&gt;findAll(query: string): Promise&amp;lt;Message[]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;find messages in cache, return a message list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+from&#34;&gt;&lt;code&gt;from(): Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the sender from a message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+to&#34;&gt;&lt;code&gt;to(): Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the destination of the message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+room&#34;&gt;&lt;code&gt;room(): null | Room&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the room from the message.(If the message is not in a room, then will return &lt;code&gt;null&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+text&#34;&gt;&lt;code&gt;text(): string&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the text content of the message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+say&#34;&gt;&lt;code&gt;say(text: string): Promise&amp;lt;void | Message&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;reply a Text, Media File , or contact message to the sender, return the message which the bot sent (only &lt;code&gt;puppet-padplus&lt;/code&gt; supported).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+type&#34;&gt;&lt;code&gt;type(): MessageType&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the type from the message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+self&#34;&gt;&lt;code&gt;self(): boolean&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;check if a message is sent by self&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+mention&#34;&gt;&lt;code&gt;mention(): Contact[]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get message mentioned contactList.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+mentionSelf&#34;&gt;&lt;code&gt;mentionSelf(): boolean&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;check if a message is mention self&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+forward&#34;&gt;&lt;code&gt;forward(to: Contact): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Forward the received message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+age&#34;&gt;&lt;code&gt;age(): number&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;the number of seconds since it has been created&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+date&#34;&gt;&lt;code&gt;date(): Date&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;the time it was created&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+toFileBox&#34;&gt;&lt;code&gt;toFileBox(): Promise&amp;lt;FileBox&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;extract the Media File from the Message, and put it into the FileBox.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Message+toContact&#34;&gt;&lt;code&gt;toContact(): Promise&amp;lt;Contact&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get Share Card of the Message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;4 Class &lt;code&gt;Room&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;All wechat rooms(groups) will be encapsulated as a Room.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Room&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room.create&#34;&gt;&lt;code&gt;create(contactList: Contact[], topic?: string): Promise&amp;lt;Room&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;create a new room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room.find&#34;&gt;&lt;code&gt;find(query: string): Promise&amp;lt;null | Room&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Try to find a room by filter. If get many, return the first one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room.findAll&#34;&gt;&lt;code&gt;findAll(query: string): Promise&amp;lt;Room[]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find all contacts in a room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;static&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room.load&#34;&gt;&lt;code&gt;load(query: string): Room&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;load room by room id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;property&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;id: readonly string&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+on&#34;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when anyone join any room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+on&#34;&gt;&lt;code&gt;topic&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when someone change room topic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+on&#34;&gt;&lt;code&gt;leave&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when anyone leave the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;event&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+on&#34;&gt;&lt;code&gt;invite&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;emit when receive a room invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+sync&#34;&gt;&lt;code&gt;sync(): &amp;lt;Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force reload data for room, sync data from lowlevel API again.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+say&#34;&gt;&lt;code&gt;say(text: string): Promise&amp;lt;void | Message&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Send text,media file, contact card, or text with mention @mention contact inside Room, return the message which the bot sent (only &lt;code&gt;puppet-padplus&lt;/code&gt; supported).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+add&#34;&gt;&lt;code&gt;add(contact: Contact): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Add contact in a room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+del&#34;&gt;&lt;code&gt;del(contact: Contact): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Delete a contact from the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+quit&#34;&gt;&lt;code&gt;quit(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Bot quit the room itself&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+topic&#34;&gt;&lt;code&gt;topic(): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GET topic from the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+topic&#34;&gt;&lt;code&gt;topic(newTopic: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SET topic from the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+announce&#34;&gt;&lt;code&gt;announce(text: string): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;SET/GET announce from the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+qrcode&#34;&gt;&lt;code&gt;qrcode(): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Get QR Code of the Room from the room, which can be used as scan and join the room.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+alias&#34;&gt;&lt;code&gt;alias(contact: Contact): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Return contact&#39;s roomAlias in the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+roomAlias&#34;&gt;&lt;code&gt;roomAlias(contact: Contact): Promise&amp;lt;string | null&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Same as function alias&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+has&#34;&gt;&lt;code&gt;has(contact: Contact): Promise&amp;lt;boolean&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Check if the room has member &lt;code&gt;contact&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+memberAll&#34;&gt;&lt;code&gt;memberAll(query?: string): Promise&amp;lt;Contact[]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find all contacts or with specific name in a room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+member&#34;&gt;&lt;code&gt;member(query: string): Promise&amp;lt;null | Contact&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Find all contacts in a room, if get many, return the first one.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+memberList&#34;&gt;&lt;code&gt;memberList():Promise&amp;lt;Contact[]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get all room member from the room&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#Room+owner&#34;&gt;&lt;code&gt;owner(): null | Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Get room&#39;s owner from the room.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;4.1 Class &lt;code&gt;RoomInvitation&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Accept room invitation&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;RoomInvitation&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#RoomInvitation+accept&#34;&gt;&lt;code&gt;accept(): Promise&amp;lt;void&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;accept Room Invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#RoomInvitation+inviter&#34;&gt;&lt;code&gt;inviter(): Contact&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the inviter from room invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#RoomInvitation+inviter&#34;&gt;&lt;code&gt;roomTopic(): Promise&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;get the room topic from room invitation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#RoomInvitation+date&#34;&gt;&lt;code&gt;date(): Promise&amp;lt;Date&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;the time it was created&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;method&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://wechaty.github.io/wechaty/#RoomInvitation+age&#34;&gt;&lt;code&gt;age(): Promise&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;the number of seconds since it has been created&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;TEST&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ANPM&#34;&gt;&lt;img src=&#34;https://github.com/wechaty/wechaty/workflows/NPM/badge.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/wechaty/actions?query=workflow%3ADocker&#34;&gt;&lt;img src=&#34;https://github.com/wechaty/wechaty/workflows/Docker/badge.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/wechaty/wechaty?branch=main&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/wechaty/wechaty/badge.svg?branch=main&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snyk.io/test/github/Wechaty/wechaty&#34;&gt;&lt;img src=&#34;https://snyk.io/test/github/Wechaty/wechaty/badge.svg?sanitize=true&#34; alt=&#34;Known Vulnerabilities&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Wechaty is fully automatically tested by unit and integration tests, with Continious Integration &amp;amp; Continious Deliver(CI/CD) support powered by CI like Travis, Shippable and Appveyor.&lt;/p&gt; &#xA;&lt;p&gt;To test Wechaty, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get to know more about the tests from &lt;a href=&#34;https://github.com/Wechaty/wechaty/wiki/Tests&#34;&gt;Wiki:Tests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CREATING WECHATY PLUGIN&lt;/h2&gt; &#xA;&lt;p&gt;Creating and publishing a Wechaty Plugin is simple. Simply expose your module as a function that takes 1 parameter: wechaty. When your plugin is imported by Wechaty, it will pass itself in as the argument, and so you are free to add any configuration that Wechaty supports.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { WechatyPlugin } from &#39;wechaty&#39;&#xA;&#xA;export default const MyPlugin: WechatyPlugin = (wechaty: Wechaty) =&amp;gt; {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;config&lt;/code&gt; exist so the user can pass in customizations to your Plugin. In documenting your Wechaty Plugin, you would lay out your supported config for the user.&lt;/p&gt; &#xA;&lt;p&gt;See:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty/issues/1939&#34;&gt;Wechaty Plugin Support with KickOut Example #1939&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty-plugin-contrib&#34;&gt;Wechaty Plugins Contrib&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìù&lt;/span&gt; RELEASE NOTES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty/releases/latest&#34;&gt;Latest Release&lt;/a&gt;(All releases &lt;a href=&#34;https://github.com/Wechaty/wechaty/releases&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty/raw/main/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;üé∑&lt;/span&gt; Views Since Feb 15, 2019&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://hits.dwyl.io/wechaty/wechaty&#34;&gt;&lt;img src=&#34;http://hits.dwyl.io/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;HitCount&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíñ&lt;/span&gt; POWERED BY WECHATY&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wechaty.js.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg?sanitize=true&#34; alt=&#34;Powered by Wechaty&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;‚ú®&lt;/span&gt; Wechaty Badge&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[![Powered by Wechaty](https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg)](https://wechaty.js.org)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get more embed html/markdown code from &lt;a href=&#34;https://github.com/wechaty/wechaty/wiki/Badge&#34;&gt;Wiki:Badge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;üåü&lt;/span&gt; Projects Using Wechaty&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huyingxi/wechaty_selfie&#34;&gt;‰∏Ä‰∏™Áî®CNNÊ∑±Â∫¶Á•ûÁªèÁΩëÁªúÁªôÂõæÁâáËØÑÂàÜÁöÑwechatyÈ°πÁõÆ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Firaenix/TeleChatRelay&#34;&gt;Relay between Telegram and WeChat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xinbenlv/haoshiyou-bot&#34;&gt;A chat bot managing the HaoShiYou wechat groups run by volunteers of haoshiyou.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coderbunker/candobot&#34;&gt;An interactive chat bot to manage a TODO list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luosheng/Wegram&#34;&gt;Forward WeChat messages to telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gengchen528/wechat-assistant&#34;&gt;koa‰∏éwechatyÂÆûÁé∞ÁöÑÂæÆ‰ø°Â∞èÂä©ÊâãÔºåÂèØÂÆöÊó∂ÊèêÈÜí‰∏éÂèëÊ∂àÊÅØËÆæÂÆöÂÆöÊó∂‰ªªÂä°&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coderwhocode/wechaty-pay&#34;&gt;Wechaty Pay - ËÆ©Á∫ø‰∏äÊ≤°ÊúâÈöæÂÅöÁöÑÁîüÊÑè&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaiyuanshe/wechat-robot&#34;&gt;ÂºÄÊ∫êÁ§æÁöÑÂæÆ‰ø°Êú∫Âô®‰∫∫È°πÁõÆ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Pull Request is welcome to add yours!&lt;/p&gt; &#xA;&lt;p&gt;Learn more about Projects Using Wechaty at &lt;a href=&#34;https://github.com/wechaty/wechaty/wiki/Projects-Using-Wechaty&#34;&gt;Wiki:Projects Using Wechaty&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üòá&lt;/span&gt; Find a Good Server&lt;/h2&gt; &#xA;&lt;p&gt;The best practice for running Wechaty Docker/NPM is using a VPS(Virtual Private Server) outside of China, which can save you hours of time because &lt;code&gt;npm install&lt;/code&gt; and &lt;code&gt;docker pull&lt;/code&gt; will run smoothly without any problem.&lt;/p&gt; &#xA;&lt;p&gt;The following VPS providers are used by the Wechaty team, and they worked perfectly in production. You can use the following link to get one in minutes. Also, doing this can support Wechaty because you are referred by us.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Location&lt;/th&gt; &#xA;   &lt;th&gt;Price&lt;/th&gt; &#xA;   &lt;th&gt;Ram&lt;/th&gt; &#xA;   &lt;th&gt;Payment&lt;/th&gt; &#xA;   &lt;th&gt;Provider&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Singapore&lt;/td&gt; &#xA;   &lt;td&gt;$5&lt;/td&gt; &#xA;   &lt;td&gt;512MB&lt;/td&gt; &#xA;   &lt;td&gt;Paypal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://m.do.co/c/01a54778df5c&#34;&gt;DigitalOcean&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Japan&lt;/td&gt; &#xA;   &lt;td&gt;$5&lt;/td&gt; &#xA;   &lt;td&gt;1GB&lt;/td&gt; &#xA;   &lt;td&gt;Paypal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linode.com/?r=5fd2b713d711746bb5451111df0f2b6d863e9f63&#34;&gt;Linode&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Korea&lt;/td&gt; &#xA;   &lt;td&gt;$10&lt;/td&gt; &#xA;   &lt;td&gt;1GB&lt;/td&gt; &#xA;   &lt;td&gt;Alipay, Paypal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.netdedi.com/?affid=35&#34;&gt;Netdedi&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Singapore&lt;/td&gt; &#xA;   &lt;td&gt;$3.5&lt;/td&gt; &#xA;   &lt;td&gt;512MB&lt;/td&gt; &#xA;   &lt;td&gt;Alipay, Wechat&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.vultr.com/?ref=6986613&#34;&gt;Vultr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;üé∂&lt;/span&gt; See Also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty/wiki/RelatedProject&#34;&gt;RelatedProject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üí©&lt;/span&gt; The Story&lt;/h2&gt; &#xA;&lt;p&gt;In 2017 ...&lt;/p&gt; &#xA;&lt;p&gt;Huan&#39;s daily life/work depends on too much chat on wechat.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Almost 14,000 wechat friends in May 2014, before wechat restricts a total number of friends to 5,000.&lt;/li&gt; &#xA; &lt;li&gt;Almost 400 wechat rooms, and most of them have more than 400 members.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Can you imagine that? He was dying...&lt;/p&gt; &#xA;&lt;p&gt;So a tireless bot working for me 24x7 on wechat, monitoring/filtering the most important message is badly needed. For example, it highlights discussion which contains the KEYWORDS which he want to follow up(especially in a noisy room). ;-)&lt;/p&gt; &#xA;&lt;p&gt;At last, It&#39;s built for huan&#39;s personal study purpose of Automatically Testing.&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/wechaty/wechaty&#34;&gt;&lt;img src=&#34;https://starchart.cc/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíï&lt;/span&gt; Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Wechaty/wechaty/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/wechaty/wechaty.svg?sanitize=true&#34; alt=&#34;GitHub pull requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/wechaty/&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/backer/badge.svg?label=open%20collective%20backers&amp;amp;color=blue&#34; alt=&#34;Open Collective Backers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/wechaty/&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/sponsors/badge.svg?label=open%20collective%20sponsors&amp;amp;color=blue&#34; alt=&#34;Open Collective Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/0&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/0&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/1&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/1&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/2&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/2&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/3&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/3&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/4&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/4&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/5&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/5&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/6&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/6&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/links/7&#34;&gt;&lt;img src=&#34;https://sourcerer.io/fame/huan/wechaty/wechaty/images/7&#34; alt=&#34;contributor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href=&#34;https://raw.githubusercontent.com/wechaty/wechaty/main/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt;].&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Wechaty/wechaty/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;Contribute&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üòé&lt;/span&gt; Backers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wechaty/wechaty/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&#34;https://opencollective.com/wechaty#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/wechaty#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/backers.svg?width=890&#34; alt=&#34;Open Collective Wechaty&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üòè&lt;/span&gt; Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wechaty/wechaty/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/wechaty#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/wechaty/#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/wechaty/sponsor.svg?width=890&#34; alt=&#34;Wechaty Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Multi-language Wechaty&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wechaty/python-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-Python-blue&#34; alt=&#34;Python Wechaty&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/go-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-Go-7de&#34; alt=&#34;Go Wechaty&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/java-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-Java-f80&#34; alt=&#34;Java(Kotlin) Wechaty&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/scala-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-Scala-890&#34; alt=&#34;Scala Wechaty&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/php-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-PHP-99c&#34; alt=&#34;PHP Wechaty&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wechaty/dotnet-wechaty&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Wechaty-.NET-629&#34; alt=&#34;.NET(C#) Wechatyin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/wechaty&#34;&gt;Wechaty&lt;/a&gt; - RPA SDK for Chatot Makers (TypeScript)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/python-wechaty&#34;&gt;Python Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in Python&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/go-wechaty&#34;&gt;Go Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in Go&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/java-wechaty&#34;&gt;Java Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in Java(Kotlin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/scala-wechaty&#34;&gt;Scala Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in Scala&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/php-wechaty&#34;&gt;PHP Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in PHP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wechaty/dotnet-wechaty&#34;&gt;.Net(C#) Wechaty&lt;/a&gt; - RPA SDK for Chatbot Makers written in .NET(C#)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;h3&gt;main v1.11 (Nov 22, 2021)&lt;/h3&gt; &#xA;&lt;p&gt;Working on reduxify the Wechaty ecosystem for applying the CQRS pattern.&lt;/p&gt; &#xA;&lt;h3&gt;v1.10 (Nov 21, 2021)&lt;/h3&gt; &#xA;&lt;p&gt;Second beta release of Wechaty, with all ecosystem npm modules with version v1.10 (wechaty-puppet, wechaty-puppet-service, etc)&lt;/p&gt; &#xA;&lt;h3&gt;v1.0 (Sep 2021)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Release v1.0 of Wechaty is the first beta release of Wechaty.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v0.69&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;v0.69: Supports ES Modules (with CJS dual support) (&lt;a href=&#34;https://github.com/wechaty/wechaty/issues/2232&#34;&gt;#2232&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;v0.68 (Aug 27, 2021)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;TLS support (&lt;a href=&#34;https://github.com/wechaty/wechaty/issues/2231&#34;&gt;#2231&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The latest CommonJS version&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Creators&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huan&#34;&gt;Huan&lt;/a&gt; &lt;a href=&#34;http://linkedin.com/in/zixia&#34;&gt;(ÊùéÂçìÊ°ì)&lt;/a&gt;, Tencent TVP of Chatbot&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pre-angel.com/peoples/jiarui-li/&#34;&gt;Rui (Êùé‰Ω≥ËäÆ)&lt;/a&gt;, Microsoft AI MVP, Founder &amp;amp; CEO of &lt;a href=&#34;https://www.juzibot.com/&#34;&gt;Juzi.BOT&lt;/a&gt; (YC W19 Alumni)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/users/1123955/huan&#34;&gt;&lt;img src=&#34;https://stackoverflow.com/users/flair/1123955.png&#34; alt=&#34;Profile of Huan LI (ÊùéÂçìÊ°ì) on StackOverflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cite Wechaty&lt;/h2&gt; &#xA;&lt;p&gt;To cite this project in publications:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{wechaty,&#xA;  author = {Huan LI, Jiarui LI},&#xA;  title = {Wechaty: Conversational SDK for Chatbot Makers},&#xA;  year = {2016},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub Repository},&#xA;  howpublished = {\url{https://github.com/wechaty/wechaty}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright &amp;amp; License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code &amp;amp; Docs ¬© 2016-now Huan, Rui, and Wechaty Community Contributors&lt;/li&gt; &#xA; &lt;li&gt;Code released under the Apache-2.0 License&lt;/li&gt; &#xA; &lt;li&gt;Docs released under Creative Commons&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>transitive-bullshit/chatgpt-api</title>
    <updated>2022-12-18T01:51:41Z</updated>
    <id>tag:github.com,2022-12-18:/transitive-bullshit/chatgpt-api</id>
    <link href="https://github.com/transitive-bullshit/chatgpt-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js client for the unofficial ChatGPT API. üî•&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Update December 15, 2022 &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;p&gt;On December 11th, OpenAI added Cloudflare protections that make it more difficult to access the unofficial API.&lt;/p&gt; &#xA;&lt;p&gt;This package has been updated to use Puppeteer to automatically log in to ChatGPT and extract the necessary auth credentials. üî•&lt;/p&gt; &#xA;&lt;p&gt;Even with this in place, however, it&#39;s common to run into 429 / 403 errors at the moment using the &lt;code&gt;getOpenAIAuth&lt;/code&gt; + &lt;code&gt;ChatGPTAPI&lt;/code&gt; approach.&lt;/p&gt; &#xA;&lt;p&gt;To circumvent these issues, we&#39;ve also added a full browser-based solution, which uses Puppeteer to login and automate the webapp.&lt;/p&gt; &#xA;&lt;p&gt;The full browser version is working consistently and can be used via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTAPIBrowser } from &#39;chatgpt&#39;&#xA;&#xA;const api = new ChatGPTAPIBrowser({&#xA;  email: process.env.OPENAI_EMAIL,&#xA;  password: process.env.OPENAI_PASSWORD&#xA;})&#xA;await api.initSession()&#xA;&#xA;const result = await api.sendMessage(&#39;Hello World!&#39;)&#xA;console.log(result.response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this solution is not lightweight, but it does work a lot more consistently than the REST API-based versions. I&#39;m currently using this solution to power 10 OpenAI accounts concurrently across 10 minimized Chrome windows for my &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot&#34;&gt;Twitter bot&lt;/a&gt;. üòÇ&lt;/p&gt; &#xA;&lt;p&gt;If you get a &#34;ChatGPT is at capacity&#34; error when logging in, note that this can also happen on the official webapp as well. Their servers get overloaded at times, and we&#39;re all trying our best to offer access to this amazing technology.&lt;/p&gt; &#xA;&lt;p&gt;To use the updated version, &lt;strong&gt;make sure you&#39;re using the latest version of this package and Node.js &amp;gt;= 18&lt;/strong&gt;. Then update your code following the examples below, paying special attention to the sections on &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#authentication&#34;&gt;Authentication&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#restrictions&#34;&gt;Restrictions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re working hard to improve this process (especially CAPTCHA automation). Keep in mind that this package will be updated to use the official API as soon as it&#39;s released, so things should get much easier over time. üí™&lt;/p&gt; &#xA;&lt;p&gt;Lastly, please consider starring this repo and &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt; to help support the project.&lt;/p&gt; &#xA;&lt;p&gt;Thanks &amp;amp;&amp;amp; cheers, &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;Travis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Example usage&#34; src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/media/demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;ChatGPT API &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Node.js client for the unofficial &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt; API.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/chatgpt&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/chatgpt.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/transitive-bullshit/chatgpt-api/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/raw/main/license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prettier.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-brightgreen.svg?sanitize=true&#34; alt=&#34;Prettier Code Formatting&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#docs&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#demos&#34;&gt;Demos&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#authentication&#34;&gt;Authentication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#restrictions&#34;&gt;Restrictions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#projects&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#compatibility&#34;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;This package is a Node.js wrapper around &lt;a href=&#34;https://openai.com/blog/chatgpt&#34;&gt;ChatGPT&lt;/a&gt; by &lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt;. TS batteries included. ‚ú®&lt;/p&gt; &#xA;&lt;p&gt;You can use it to start building projects powered by ChatGPT like chatbots, websites, etc...&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install chatgpt puppeteer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;puppeteer&lt;/code&gt; is an optional peer dependency used to automate bypassing the Cloudflare protections via &lt;code&gt;getOpenAIAuth&lt;/code&gt;. The main API wrapper uses &lt;code&gt;fetch&lt;/code&gt; directly.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTAPI, getOpenAIAuth } from &#39;chatgpt&#39;&#xA;&#xA;async function example() {&#xA;  // use puppeteer to bypass cloudflare (headful because of captchas)&#xA;  const openAIAuth = await getOpenAIAuth({&#xA;    email: process.env.OPENAI_EMAIL,&#xA;    password: process.env.OPENAI_PASSWORD&#xA;  })&#xA;&#xA;  const api = new ChatGPTAPI({ ...openAIAuth })&#xA;  await api.initSession()&#xA;&#xA;  // send a message and wait for the response&#xA;  const result = await api.sendMessage(&#39;Write a python version of bubble sort.&#39;)&#xA;&#xA;  // result.response is a markdown-formatted string&#xA;  console.log(result.response)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you want to try the full browser-based solution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTAPIBrowser } from &#39;chatgpt&#39;&#xA;&#xA;async function example() {&#xA;  // use puppeteer to bypass cloudflare (headful because of captchas)&#xA;  const api = new ChatGPTAPIBrowser({&#xA;    email: process.env.OPENAI_EMAIL,&#xA;    password: process.env.OPENAI_PASSWORD&#xA;  })&#xA;&#xA;  await api.initSession()&#xA;&#xA;  const result = await api.sendMessage(&#39;Hello World!&#39;)&#xA;  console.log(result.response)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ChatGPT responses are formatted as markdown by default. If you want to work with plaintext instead, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTAPI({ ...openAIAuth, markdown: false })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to track the conversation, use the &lt;code&gt;conversationId&lt;/code&gt; and &lt;code&gt;messageId&lt;/code&gt; in the result object, and pass them to &lt;code&gt;sendMessage&lt;/code&gt; as &lt;code&gt;conversationId&lt;/code&gt; and &lt;code&gt;parentMessageId&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTAPI({ ...openAIAuth, markdown: false })&#xA;await api.initSession()&#xA;&#xA;// send a message and wait for the response&#xA;let res = await conversation.sendMessage(&#39;What is OpenAI?&#39;)&#xA;console.log(res.response)&#xA;&#xA;// send a follow-up&#xA;res = await conversation.sendMessage(&#39;Can you expand on that?&#39;, {&#xA;  conversationId: res.conversationId,&#xA;  parentMessageId: res.messageId&#xA;})&#xA;console.log(res.response)&#xA;&#xA;// send another follow-up&#xA;// send a follow-up&#xA;res = await conversation.sendMessage(&#39;What were we talking about?&#39;, {&#xA;  conversationId: res.conversationId,&#xA;  parentMessageId: res.messageId&#xA;})&#xA;console.log(res.response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sometimes, ChatGPT will hang for an extended period of time before beginning to respond. This may be due to rate limiting or it may be due to OpenAI&#39;s servers being overloaded.&lt;/p&gt; &#xA;&lt;p&gt;To mitigate these issues, you can add a timeout like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// timeout after 2 minutes (which will also abort the underlying HTTP request)&#xA;const response = await api.sendMessage(&#39;this is a timeout test&#39;, {&#xA;  timeoutMs: 2 * 60 * 1000&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Usage in CommonJS (Dynamic import)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;async function example() {&#xA;  // To use ESM in CommonJS, you can use a dynamic import&#xA;  const { ChatGPTAPI, getOpenAIAuth } = await import(&#39;chatgpt&#39;)&#xA;&#xA;  const openAIAuth = await getOpenAIAuth({&#xA;    email: process.env.OPENAI_EMAIL,&#xA;    password: process.env.OPENAI_PASSWORD&#xA;  })&#xA;&#xA;  const api = new ChatGPTAPI({ ...openAIAuth })&#xA;  await api.initSession()&#xA;&#xA;  const result = await api.sendMessage(&#39;Hello World!&#39;)&#xA;  console.log(result)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Docs&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/docs/classes/ChatGPTAPI.md&#34;&gt;auto-generated docs&lt;/a&gt; for more info on methods and parameters. Here are the &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/docs/classes/ChatGPTAPIBrowser.md&#34;&gt;docs&lt;/a&gt; for the browser-based version.&lt;/p&gt; &#xA;&lt;h3&gt;Demos&lt;/h3&gt; &#xA;&lt;p&gt;To run the included demos:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone repo&lt;/li&gt; &#xA; &lt;li&gt;install node deps&lt;/li&gt; &#xA; &lt;li&gt;set &lt;code&gt;OPENAI_EMAIL&lt;/code&gt; and &lt;code&gt;OPENAI_PASSWORD&lt;/code&gt; in .env&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo.ts&#34;&gt;basic demo&lt;/a&gt; is included for testing purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-conversation.ts&#34;&gt;conversation demo&lt;/a&gt; is also included:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-conversation.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-conversation-browser.ts&#34;&gt;browser-based conversation demo&lt;/a&gt; is also included:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-conversation-browser.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;On December 11, 2022, OpenAI added some additional Cloudflare protections which make it more difficult to access the unofficial API.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need a valid OpenAI &#34;session token&#34; and Cloudflare &#34;clearance token&#34; in order to use the API.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve provided an automated, Puppeteer-based solution &lt;code&gt;getOpenAIAuth&lt;/code&gt; to fetch these for you, but you may still run into cases where you have to manually pass the CAPTCHA. We&#39;re working on a solution to automate this further.&lt;/p&gt; &#xA;&lt;p&gt;You can also get these tokens manually, but keep in mind that the &lt;code&gt;clearanceToken&lt;/code&gt; only lasts for max 2 hours.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Getting tokens manually&lt;/summary&gt; &#xA; &lt;p&gt;To get session token manually:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; and log in or sign up.&lt;/li&gt; &#xA;  &lt;li&gt;Open dev tools.&lt;/li&gt; &#xA;  &lt;li&gt;Open &lt;code&gt;Application&lt;/code&gt; &amp;gt; &lt;code&gt;Cookies&lt;/code&gt;. &lt;img src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/media/session-token.png&#34; alt=&#34;ChatGPT cookies&#34;&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Copy the value for &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; and save it to your environment. This will be your &lt;code&gt;sessionToken&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Copy the value for &lt;code&gt;cf_clearance&lt;/code&gt; and save it to your environment. This will be your &lt;code&gt;clearanceToken&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Copy the value of the &lt;code&gt;user-agent&lt;/code&gt; header from any request in your &lt;code&gt;Network&lt;/code&gt; tab. This will be your &lt;code&gt;userAgent&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;Pass &lt;code&gt;sessionToken&lt;/code&gt;, &lt;code&gt;clearanceToken&lt;/code&gt;, and &lt;code&gt;userAgent&lt;/code&gt; to the &lt;code&gt;ChatGPTAPI&lt;/code&gt; constructor.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; This package will switch to using the official API once it&#39;s released, which will make this process much simpler.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Restrictions&lt;/h3&gt; &#xA;&lt;p&gt;These restrictions are for the &lt;code&gt;getOpenAIAuth&lt;/code&gt; + &lt;code&gt;ChatGPTAPI&lt;/code&gt; solution, which uses the unofficial API. The browser-based solution, &lt;code&gt;ChatGPTAPIBrowser&lt;/code&gt;, doesn&#39;t have many of these restrictions, though you&#39;ll still have to manually bypass CAPTCHAs by hand.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please read carefully&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must use &lt;code&gt;node &amp;gt;= 18&lt;/code&gt; at the moment. I&#39;m using &lt;code&gt;v19.2.0&lt;/code&gt; in my testing.&lt;/li&gt; &#xA; &lt;li&gt;Cloudflare &lt;code&gt;cf_clearance&lt;/code&gt; &lt;strong&gt;tokens expire after 2 hours&lt;/strong&gt;, so right now we recommend that you refresh your &lt;code&gt;cf_clearance&lt;/code&gt; token every hour or so.&lt;/li&gt; &#xA; &lt;li&gt;Your &lt;code&gt;user-agent&lt;/code&gt; and &lt;code&gt;IP address&lt;/code&gt; &lt;strong&gt;must match&lt;/strong&gt; from the real browser window you&#39;re logged in with to the one you&#39;re using for &lt;code&gt;ChatGPTAPI&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This means that you currently can&#39;t log in with your laptop and then run the bot on a server or proxy somewhere.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Cloudflare will still sometimes ask you to complete a CAPTCHA, so you may need to keep an eye on it and manually resolve the CAPTCHA. Automated CAPTCHA bypass is coming soon.&lt;/li&gt; &#xA; &lt;li&gt;You should not be using this account while the bot is using it, because that browser window may refresh one of your tokens and invalidate the bot&#39;s session.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Prior to v1.0.0, this package used a headless browser via &lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt; to automate the web UI. Here are the &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/tree/v0.4.2&#34;&gt;docs for the initial browser version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;p&gt;All of these awesome projects are built using the &lt;code&gt;chatgpt&lt;/code&gt; package. ü§Ø&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot&#34;&gt;Twitter Bot&lt;/a&gt; powered by ChatGPT ‚ú® &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mention &lt;a href=&#34;https://twitter.com/ChatGPTBot&#34;&gt;@ChatGPTBot&lt;/a&gt; on Twitter with your prompt to try it out&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lovelines.xyz?ref=chatgpt-api&#34;&gt;Lovelines.xyz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gragland/chatgpt-everywhere&#34;&gt;Chrome Extension&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/gabe_ragland/status/1599466486422470656&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mpociot/chatgpt-vscode&#34;&gt;VSCode Extension #1&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/marcelpociot/status/1599180144551526400&#34;&gt;demo&lt;/a&gt;, &lt;a href=&#34;https://github.com/timkmecl/chatgpt-vscode&#34;&gt;updated version&lt;/a&gt;, &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=timkmecl.chatgpt&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/barnesoir/chatgpt-vscode-plugin&#34;&gt;VSCode Extension #2&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=JayBarnes.chatgpt-vscode-plugin&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gencay/vscode-chatgpt&#34;&gt;VSCode Extension #3&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=gencay.vscode-chatgpt&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogukanakkaya/chatgpt-code-vscode-extension&#34;&gt;VSCode Extension #4&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dogukanakkaya.chatgpt-code&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abielzulio/chatgpt-raycast&#34;&gt;Raycast Extension #1&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/abielzulio/status/1600176002042191875&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/domnantas/raycast-chatgpt&#34;&gt;Raycast Extension #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/realies/chatgpt-telegram-bot&#34;&gt;Telegram Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dawangraoming/chatgpt-telegram-bot&#34;&gt;Telegram Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ciyou/chatbot-telegram&#34;&gt;Deno Telegram Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m1guelpf/chatgpt-telegram&#34;&gt;Go Telegram Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oceanlvr/ChatGPTBot&#34;&gt;GitHub ProBot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onury5506/Discord-ChatGPT-Bot&#34;&gt;Discord Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nageld/ChatGPT-Bot&#34;&gt;Discord Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leinstay/gptbot&#34;&gt;Discord Bot #3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0x7030676e31/cumsocket&#34;&gt;Discord Bot #4 (selfbot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AutumnWhj/ChatGPT-wechat-bot&#34;&gt;WeChat Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fuergaosi233/wechat-chatgpt&#34;&gt;WeChat Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wangrongding/wechat-bot&#34;&gt;WeChat Bot #3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/darknightlab/wechat-bot&#34;&gt;WeChat Bot #4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sunshanpeng/wechaty-chatgpt&#34;&gt;WeChat Bot #5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ikechan8370/chatgpt-plugin&#34;&gt;QQ Bot (plugin for Yunzai-bot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KiviBotLab/kivibot-plugin-chatgpt&#34;&gt;QQ Bot (plugin for KiviBot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easydu2002/chat_gpt_oicq&#34;&gt;QQ Bot (oicq)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linsyking/ChatGPT-QQBot&#34;&gt;QQ Bot (oicq + RabbitMQ)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PairZhu/ChatGPT-QQRobot&#34;&gt;QQ Bot (go-cqhttp)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/decentldotland/molecule&#34;&gt;EXM smart contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coskuncay/flutter_chatgpt_api&#34;&gt;Flutter ChatGPT API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luridarmawan/Carik&#34;&gt;Carik Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kxxt/chatgpt-action/&#34;&gt;Github Action for reviewing PRs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pascalroget/whatsgpt&#34;&gt;WhatsApp Bot #1&lt;/a&gt; (multi-user support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amosayomide05/chatgpt-whatsapp-bot&#34;&gt;WhatsApp Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/navopw/whatsapp-chatgpt&#34;&gt;WhatsApp Bot #3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jakecoppinger/matrix-chatgpt-bot&#34;&gt;Matrix Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sharehouse.app/ai&#34;&gt;Rental Cover Letter Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diciaup/assistant-cli&#34;&gt;Assistant CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/formulahendry/chatgpt-teams-bot&#34;&gt;Teams Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yudax42/askai&#34;&gt;Askai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShadovvBeast/TalkGPT&#34;&gt;TalkGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leecobaby/shortcuts/raw/master/other/ChatGPT_EN.md&#34;&gt;iOS Shortcut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trietphm/chatgpt-slackbot/&#34;&gt;Slack Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShiranAbir/chaty&#34;&gt;Electron Bot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you create a cool integration, feel free to open a PR and add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;This package is ESM-only. It supports:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js &amp;gt;= 18 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Node.js 17, 16, and 14 were supported in earlier versions, but OpenAI&#39;s Cloudflare update caused a bug with &lt;code&gt;undici&lt;/code&gt; on v17 and v16 that needs investigation. So for now, use &lt;code&gt;node &amp;gt;= 18&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;We recommend against using &lt;code&gt;chatgpt&lt;/code&gt; from client-side browser code because it would expose your private session token&lt;/li&gt; &#xA; &lt;li&gt;If you want to build a website using &lt;code&gt;chatgpt&lt;/code&gt;, we recommend using it only from your backend API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Huge thanks to &lt;a href=&#34;https://github.com/abacaj&#34;&gt;@abacaj&lt;/a&gt;, &lt;a href=&#34;https://github.com/waylaidwanderer&#34;&gt;@waylaidwanderer&lt;/a&gt;, &lt;a href=&#34;https://github.com/wong2&#34;&gt;@wong2&lt;/a&gt;, &lt;a href=&#34;https://github.com/simon300000&#34;&gt;@simon300000&lt;/a&gt;, &lt;a href=&#34;https://github.com/RomanHotsiy&#34;&gt;@RomanHotsiy&lt;/a&gt;, &lt;a href=&#34;https://github.com/ElijahPepe&#34;&gt;@ElijahPepe&lt;/a&gt;, and all the other contributors üí™&lt;/li&gt; &#xA; &lt;li&gt;The original browser version was inspired by this &lt;a href=&#34;https://github.com/danielgross/whatsapp-gpt&#34;&gt;Go module&lt;/a&gt; by &lt;a href=&#34;https://github.com/danielgross&#34;&gt;Daniel Gross&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt; for creating &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt; üî•&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://transitivebullsh.it&#34;&gt;Travis Fischer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you found this project interesting, please consider &lt;a href=&#34;https://github.com/sponsors/transitive-bullshit&#34;&gt;sponsoring me&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>