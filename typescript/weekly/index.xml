<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-09T01:53:29Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coinbase/agentkit</title>
    <updated>2025-02-09T01:53:29Z</updated>
    <id>tag:github.com,2025-02-09:/coinbase/agentkit</id>
    <link href="https://github.com/coinbase/agentkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Every AI Agent deserves a wallet.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://docs.cdp.coinbase.com/agentkit/docs/welcome&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/agentkit_banner.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;h1 style=&#34;font-size: 3em; margin-bottom: 20px;&#34;&gt; AgentKit &lt;/h1&gt; &#xA; &lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/agent_k.webp&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA; &lt;p style=&#34;font-size: 1.2em; max-width: 600px; margin: 0 auto 20px;&#34;&gt; Every agent deserves a wallet. &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pypistats.org/packages/cdp-agentkit-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/cdp-agentkit-core?style=flat-square&#34; alt=&#34;PyPI - Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@coinbase/agentkit&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/@coinbase/cdp-agentkit-core?style=flat-square&#34; alt=&#34;npm downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://star-history.com/#coinbase/agentkit&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/coinbase/cdp-agentkit?style=flat-square&#34; alt=&#34;GitHub star chart&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/coinbase/agentkit/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/coinbase/cdp-agentkit?style=flat-square&#34; alt=&#34;Open Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-overview&#34;&gt;📖 Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-quickstart&#34;&gt;🚀 Quickstart&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#nodejs&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-repository-structure&#34;&gt;🗂 Repository Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-contributing&#34;&gt;🤝 Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-documentation&#34;&gt;📜 Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-security-and-bug-reports&#34;&gt;🚨 Security and bug reports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-contact&#34;&gt;📧 Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-license&#34;&gt;📝 License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#-legal-and-privacy&#34;&gt;🔒 Legal and Privacy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 Overview&lt;/h2&gt; &#xA;&lt;p&gt;AgentKit is &lt;a href=&#34;https://docs.cdp.coinbase.com&#34;&gt;Coinbase Developer Platform&#39;s&lt;/a&gt; framework for easily enabling AI agents to take actions onchain. It is designed to be framework-agnostic, so you can use it with any AI framework, and wallet-agnostic, so you can use it with any wallet. AgentKit is actively being built out, and &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/#contributing&#34;&gt;welcomes community contributions!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=-R_mKpdepRE&#34;&gt; &lt;img src=&#34;https://img.youtube.com/vi/-R_mKpdepRE/maxresdefault.jpg&#34; alt=&#34;Video Title&#34; style=&#34;max-width: 600px;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Node.js&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Prerequisites&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js 18+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cdp.coinbase.com/get-started/docs/cdp-api-keys#creating-secret-api-keys&#34;&gt;CDP Secret API Key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key&#34;&gt;OpenAI API Key&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get your agent running:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/coinbase/agentkit.git&#xA;&#xA;# Navigate to the root of the repo&#xA;cd agentkit&#xA;&#xA;# Install dependencies&#xA;npm install&#xA;&#xA;# Build the packages locally&#xA;npm run build&#xA;&#xA;# Navigate to the langchain-cdp-chatbot example&#xA;cd typescript/examples/langchain-cdp-chatbot&#xA;&#xA;# At this point, fill in your CDP API key name, private key, and OpenAI API key in&#xA;# the .env.local file.&#xA;# Then, rename the .env.local file to .env&#xA;mv .env.local .env&#xA;&#xA;# Run the chatbot&#xA;npm run start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Select &#34;1. chat mode&#34; and start telling your Agent to do things onchain!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Prompt: Fund my wallet with some testnet ETH.&#xA;-------------------&#xA;Wallet: ccaf1dbf-3a90-4e52-ad34-89a07aad9e8b on network: base-sepolia with default address: 0xD9b990c7b0079c1c3733D2918Ee50b68f29FCFD5&#xA;-------------------&#xA;&#xA;-------------------&#xA;Received eth from the faucet. Transaction: https://sepolia.basescan.org/tx/0x03e82934cd04be5b725927729b517c606f6f744611f0f36e834f21ad742ad7ca&#xA;-------------------&#xA;Your wallet has been successfully funded with testnet ETH. You can view the transaction [here](https://sepolia.basescan.org/tx/0x03e82934cd04be5b725927729b517c606f6f744611f0f36e834f21ad742ad7ca).&#xA;-------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Prerequisites&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3.10+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://python-poetry.org/docs/&#34;&gt;Poetry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cdp.coinbase.com/get-started/docs/cdp-api-keys#creating-secret-api-keys&#34;&gt;CDP Secret API Key&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key&#34;&gt;OpenAI API Key&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get your agent running:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;git clone https://github.com/coinbase/agentkit.git&#xA;&#xA;# Navigate to the chatbot-python example&#xA;cd agentkit/python/examples/cdp-langchain-chatbot &#xA;&#xA;# At this point, fill in your CDP API key name, private key, and OpenAI API key in the&#xA;# .env.example file.&#xA;# Then, rename the .env.example file to .env&#xA;mv .env.example .env&#xA;&#xA;# Install dependencies&#xA;poetry install&#xA;&#xA;# Run the chatbot&#xA;make run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Select &#34;1. chat mode&#34; and start telling your Agent to do things onchain!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Prompt: Fund my wallet with some testnet ETH.&#xA;-------------------&#xA;Wallet: ccaf1dbf-3a90-4e52-ad34-89a07aad9e8b on network: base-sepolia with default address: 0xD9b990c7b0079c1c3733D2918Ee50b68f29FCFD5&#xA;-------------------&#xA;&#xA;-------------------&#xA;Received eth from the faucet. Transaction: https://sepolia.basescan.org/tx/0x03e82934cd04be5b725927729b517c606f6f744611f0f36e834f21ad742ad7ca&#xA;-------------------&#xA;Your wallet has been successfully funded with testnet ETH. You can view the transaction [here](https://sepolia.basescan.org/tx/0x03e82934cd04be5b725927729b517c606f6f744611f0f36e834f21ad742ad7ca).&#xA;-------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🗂 Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;AgentKit is organized as a monorepo that contains multiple packages.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./&#xA;├── typescript/&#xA;│   ├── agentkit/&#xA;│   ├── framework-extensions/&#xA;│   |   └── langchain/&#xA;│   └── examples/&#xA;│       ├── langchain-cdp-chatbot/&#xA;│       ├── langchain-farcaster-chatbot/&#xA;│       └── langchain-twitter-chatbot/&#xA;├── python/&#xA;│   ├── cdp-agentkit-core/&#xA;│   ├── cdp-langchain/&#xA;│   ├── twitter-langchain/&#xA;│   └── examples/&#xA;│       ├── cdp-langchain-chatbot/&#xA;│       └── twitter-langchain-chatbot/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🤝 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;AgentKit is actively looking for community contributions!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To see a list of actions and frameworks we&#39;d love to see open-source contributions for, see &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/WISHLIST.md&#34;&gt;WISHLIST.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To understand the process for contributing to AgentKit, see &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📜 Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cdp.coinbase.com/agentkit/docs/welcome&#34;&gt;AgentKit Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Python API References &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coinbase.github.io/agentkit/cdp-agentkit-core/python/index.html&#34;&gt;AgentKit Core&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coinbase.github.io/agentkit/cdp-langchain/python/index.html&#34;&gt;AgentKit Langchain Extension&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Node.js API References &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coinbase.github.io/agentkit/agentkit/typescript/index.html&#34;&gt;AgentKit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coinbase.github.io/agentkit/agentkit-langchain/typescript/index.html&#34;&gt;AgentKit Langchain Extension&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚨 Security and Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;The AgentKit team takes security seriously. See &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;📧 Contact&lt;/h2&gt; &#xA;&lt;p&gt;For feature requests, feedback, or questions, please reach out to us via the &lt;a href=&#34;https://discord.com/channels/1220414409550336183/1304126107876069376&#34;&gt;Coinbase Developer Platform Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📝 License&lt;/h2&gt; &#xA;&lt;p&gt;AgentKit is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/coinbase/agentkit/master/LICENSE.md&#34;&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;h2&gt;🔒 Legal and Privacy&lt;/h2&gt; &#xA;&lt;p&gt;The AgentKit software is novel and experimental, and is therefore provided on an AS-IS basis. The software is intended to be used only for the purposes of assisting with designing blockchain transactions and enabling other API integrations using natural language inputs, and is not intended to provide (i) an offer, or solicitation of an offer, to invest in, or to buy or sell, any interests or shares, or to participate in any investment or trading strategy, (ii) accounting, legal, tax advice, investment recommendations or other professional advice or (iii) an official statement of Coinbase. Acts proposed or performed by an agent through AgentKit software are NOT acts of Coinbase. You should consult with a professional advisor before making any decisions based on the information provided by the software. You are not permitted to use the proceeds of loans or credit to purchase digital assets on or through coinbase.com, Coinbase&#39;s APIs, the Coinbase mobile application, or any other Coinbase website or product, including AgentKit. No representation or warranty is made, expressed or implied, with respect to the accuracy, completeness, reliability, security, or suitability of the software or to any information provided in connection with the software. The risk of loss through use of the software can be substantial, and you assume any and all risks of loss and liability. The software may produce output that is inaccurate, incorrect, unpredictable or undesirable, and it is the user’s exclusive responsibility to evaluate the output and the use-case and determine whether it is appropriate. The right to use the software is contingent on your agreement to the &lt;a href=&#34;https://www.coinbase.com/legal/developer-platform/terms-of-service&#34;&gt;CDP Terms of Service&lt;/a&gt; (except to the extent it conflicts with the Apache-2.0 license).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jina-ai/reader</title>
    <updated>2025-02-09T01:53:29Z</updated>
    <id>tag:github.com,2025-02-09:/jina-ai/reader</id>
    <link href="https://github.com/jina-ai/reader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert any URL to an LLM-friendly input with a simple prefix https://r.jina.ai/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Reader&lt;/h1&gt; &#xA;&lt;p&gt;Your LLMs deserve better input.&lt;/p&gt; &#xA;&lt;p&gt;Reader does two things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read&lt;/strong&gt;: It converts any URL to an &lt;strong&gt;LLM-friendly&lt;/strong&gt; input with &lt;code&gt;https://r.jina.ai/https://your.url&lt;/code&gt;. Get improved output for your agent and RAG systems at no cost.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: It searches the web for a given query with &lt;code&gt;https://s.jina.ai/your+query&lt;/code&gt;. This allows your LLMs to access the latest world knowledge from the web.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://jina.ai/reader#demo&#34;&gt;the live demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or just visit these URLs (&lt;strong&gt;Read&lt;/strong&gt;) &lt;a href=&#34;https://r.jina.ai/https://github.com/jina-ai/reader&#34;&gt;https://r.jina.ai/https://github.com/jina-ai/reader&lt;/a&gt;, (&lt;strong&gt;Search&lt;/strong&gt;) &lt;a href=&#34;https://s.jina.ai/Who%20will%20win%202024%20US%20presidential%20election%3F&#34;&gt;https://s.jina.ai/Who%20will%20win%202024%20US%20presidential%20election%3F&lt;/a&gt; and see yourself.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Feel free to use Reader API in production. It is free, stable and scalable. We are maintaining it actively as one of the core products of Jina AI. &lt;a href=&#34;https://jina.ai/reader#pricing&#34;&gt;Check out rate limit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img width=&#34;973&#34; alt=&#34;image&#34; src=&#34;https://github.com/jina-ai/reader/assets/2041322/2067c7a2-c12e-4465-b107-9a16ca178d41&#34;&gt; &#xA;&lt;img width=&#34;973&#34; alt=&#34;image&#34; src=&#34;https://github.com/jina-ai/reader/assets/2041322/675ac203-f246-41c2-b094-76318240159f&#34;&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-10-08&lt;/strong&gt;: Introduced an &lt;code&gt;adaptive crawler&lt;/code&gt;. It can recursively crawl the website and extract the most relevant pages for a given webpage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-07-15&lt;/strong&gt;: To restrict the results of &lt;code&gt;s.jina.ai&lt;/code&gt; to certain domain/website, you can set e.g. &lt;code&gt;site=jina.ai&lt;/code&gt; in the query parameters, which enables in-site search. For more options, &lt;a href=&#34;https://jina.ai/reader/#apiform&#34;&gt;try our updated live-demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-07-01&lt;/strong&gt;: We have resolved a DDoS attack and other traffic abusing since June 27th. We also found a bug introduced on June 28th which may cause higher latency for some websites. The attack and the bug have been solved; if you have experienced high latency of r.jina.ai between June 27th-30th, it should back to normal now.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-05-30&lt;/strong&gt;: Reader can now read abitrary PDF from any URL! Check out &lt;a href=&#34;https://r.jina.ai/https://www.nasa.gov/wp-content/uploads/2023/01/55583main_vision_space_exploration2.pdf&#34;&gt;this PDF result from NASA.gov&lt;/a&gt; vs &lt;a href=&#34;https://www.nasa.gov/wp-content/uploads/2023/01/55583main_vision_space_exploration2.pdf&#34;&gt;the original&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-05-15&lt;/strong&gt;: We introduced a new endpoint &lt;code&gt;s.jina.ai&lt;/code&gt; that searches on the web and return top-5 results, each in a LLM-friendly format. &lt;a href=&#34;https://jina.ai/news/jina-reader-for-search-grounding-to-improve-factuality-of-llms&#34;&gt;Read more about this new feature here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-05-08&lt;/strong&gt;: Image caption is off by default for better latency. To turn it on, set &lt;code&gt;x-with-generated-alt: true&lt;/code&gt; in the request header.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-05-03&lt;/strong&gt;: We finally resolved a DDoS attack since April 29th. Now our API is much more reliable and scalable than ever!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-04-24&lt;/strong&gt;: You now have more fine-grained control over Reader API &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/reader/main/#using-request-headers&#34;&gt;using headers&lt;/a&gt;, e.g. forwarding cookies, using HTTP proxy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2024-04-15&lt;/strong&gt;: Reader now supports image reading! It captions all images at the specified URL and adds &lt;code&gt;Image [idx]: [caption]&lt;/code&gt; as an alt tag (if they initially lack one). This enables downstream LLMs to interact with the images in reasoning, summarizing etc. &lt;a href=&#34;https://x.com/JinaAI_/status/1780094402071023926&#34;&gt;See example here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;r.jina.ai&lt;/code&gt; for single URL fetching&lt;/h3&gt; &#xA;&lt;p&gt;Simply prepend &lt;code&gt;https://r.jina.ai/&lt;/code&gt; to any URL. For example, to convert the URL &lt;code&gt;https://en.wikipedia.org/wiki/Artificial_intelligence&lt;/code&gt; to an LLM-friendly input, use the following URL:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://r.jina.ai/https://en.wikipedia.org/wiki/Artificial_intelligence&#34;&gt;https://r.jina.ai/https://en.wikipedia.org/wiki/Artificial_intelligence&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://colab.research.google.com/drive/1uoBy6_7BhxqpFQ45vuhgDDDGwstaCt4P#scrollTo=5LQjzJiT9ewT&#34;&gt;Using &lt;code&gt;r.jina.ai&lt;/code&gt; for a full website fetching (Google Colab)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;s.jina.ai&lt;/code&gt; for web search&lt;/h3&gt; &#xA;&lt;p&gt;Simply prepend &lt;code&gt;https://s.jina.ai/&lt;/code&gt; to your search query. Note that if you are using this in the code, make sure to encode your search query first, e.g. if your query is &lt;code&gt;Who will win 2024 US presidential election?&lt;/code&gt; then your url should look like:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://s.jina.ai/Who%20will%20win%202024%20US%20presidential%20election%3F&#34;&gt;https://s.jina.ai/Who%20will%20win%202024%20US%20presidential%20election%3F&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Behind the scenes, Reader searches the web, fetches the top 5 results, visits each URL, and applies &lt;code&gt;r.jina.ai&lt;/code&gt; to it. This is different from many &lt;code&gt;web search function-calling&lt;/code&gt; in agent/RAG frameworks, which often return only the title, URL, and description provided by the search engine API. If you want to read one result more deeply, you have to fetch the content yourself from that URL. With Reader, &lt;code&gt;http://s.jina.ai&lt;/code&gt; automatically fetches the content from the top 5 search result URLs for you (reusing the tech stack behind &lt;code&gt;http://r.jina.ai&lt;/code&gt;). This means you don&#39;t have to handle browser rendering, blocking, or any issues related to JavaScript and CSS yourself.&lt;/p&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;s.jina.ai&lt;/code&gt; for in-site search&lt;/h3&gt; &#xA;&lt;p&gt;Simply specify &lt;code&gt;site&lt;/code&gt; in the query parameters such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl &#39;https://s.jina.ai/When%20was%20Jina%20AI%20founded%3F?site=jina.ai&amp;amp;site=github.com&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://jina.ai/reader#apiform&#34;&gt;Interactive Code Snippet Builder&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;We highly recommend using the code builder to explore different parameter combinations of the Reader API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jina.ai/reader#apiform&#34;&gt;&lt;img width=&#34;973&#34; alt=&#34;image&#34; src=&#34;https://github.com/jina-ai/reader/assets/2041322/a490fd3a-1c4c-4a3f-a95a-c481c2a8cc8f&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using request headers&lt;/h3&gt; &#xA;&lt;p&gt;As you have already seen above, one can control the behavior of the Reader API using request headers. Here is a complete list of supported headers.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can enable the image caption feature via the &lt;code&gt;x-with-generated-alt: true&lt;/code&gt; header.&lt;/li&gt; &#xA; &lt;li&gt;You can ask the Reader API to forward cookies settings via the &lt;code&gt;x-set-cookie&lt;/code&gt; header. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that requests with cookies will not be cached.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can bypass &lt;code&gt;readability&lt;/code&gt; filtering via the &lt;code&gt;x-respond-with&lt;/code&gt; header, specifically: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;x-respond-with: markdown&lt;/code&gt; returns markdown &lt;em&gt;without&lt;/em&gt; going through &lt;code&gt;reability&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;x-respond-with: html&lt;/code&gt; returns &lt;code&gt;documentElement.outerHTML&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;x-respond-with: text&lt;/code&gt; returns &lt;code&gt;document.body.innerText&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;x-respond-with: screenshot&lt;/code&gt; returns the URL of the webpage&#39;s screenshot&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can specify a proxy server via the &lt;code&gt;x-proxy-url&lt;/code&gt; header.&lt;/li&gt; &#xA; &lt;li&gt;You can customize cache tolerance via the &lt;code&gt;x-cache-tolerance&lt;/code&gt; header (integer in seconds).&lt;/li&gt; &#xA; &lt;li&gt;You can bypass the cached page (lifetime 3600s) via the &lt;code&gt;x-no-cache: true&lt;/code&gt; header (equivalent of &lt;code&gt;x-cache-tolerance: 0&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;If you already know the HTML structure of your target page, you may specify &lt;code&gt;x-target-selector&lt;/code&gt; or &lt;code&gt;x-wait-for-selector&lt;/code&gt; to direct the Reader API to focus on a specific part of the page. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;By setting &lt;code&gt;x-target-selector&lt;/code&gt; header to a CSS selector, the Reader API return the content within the matched element, instead of the full HTML. Setting this header is useful when the automatic content extraction fails to capture the desired content and you can manually select the correct target.&lt;/li&gt; &#xA;   &lt;li&gt;By setting &lt;code&gt;x-wait-for-selector&lt;/code&gt; header to a CSS selector, the Reader API will wait until the matched element is rendered before returning the content. If you already specified &lt;code&gt;x-wait-for-selector&lt;/code&gt;, this header can be omitted if you plan to wait for the same element.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;r.jina.ai&lt;/code&gt; for single page application (SPA) fetching&lt;/h3&gt; &#xA;&lt;p&gt;Many websites nowadays rely on JavaScript frameworks and client-side rendering. Usually known as Single Page Application (SPA). Thanks to &lt;a href=&#34;https://github.com/puppeteer/puppeteer&#34;&gt;Puppeteer&lt;/a&gt; and headless Chrome browser, Reader natively supports fetching these websites. However, due to specific approach some SPA are developed, there may be some extra precautions to take.&lt;/p&gt; &#xA;&lt;h4&gt;SPAs with hash-based routing&lt;/h4&gt; &#xA;&lt;p&gt;By definition of the web standards, content come after &lt;code&gt;#&lt;/code&gt; in a URL is not sent to the server. To mitigate this issue, use &lt;code&gt;POST&lt;/code&gt; method with &lt;code&gt;url&lt;/code&gt; parameter in body.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST &#39;https://r.jina.ai/&#39; -d &#39;url=https://example.com/#/route&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SPAs with preloading contents&lt;/h4&gt; &#xA;&lt;p&gt;Some SPAs, or even some websites that are not strictly SPAs, may show preload contents before later loading the main content dynamically. In this case, Reader may be capturing the preload content instead of the main content. To mitigate this issue, here are some possible solutions:&lt;/p&gt; &#xA;&lt;h5&gt;Specifying &lt;code&gt;x-timeout&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;When timeout is explicitly specified, Reader will not attempt to return early and will wait for network idle until the timeout is reached. This is useful when the target website will eventually come to a network idle.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl &#39;https://example.com/&#39; -H &#39;x-timeout: 30&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Specifying &lt;code&gt;x-wait-for-selector&lt;/code&gt;&lt;/h5&gt; &#xA;&lt;p&gt;When wait-for-selector is explicitly specified, Reader will wait for the appearance of the specified CSS selector until timeout is reached. This is useful when you know exactly what element to wait for.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl &#39;https://example.com/&#39; -H &#39;x-wait-for-selector: #content&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Streaming mode&lt;/h3&gt; &#xA;&lt;p&gt;Streaming mode is useful when you find that the standard mode provides an incomplete result. This is because the Reader will wait a bit longer until the page is &lt;em&gt;stablely&lt;/em&gt; rendered. Use the accept-header to toggle the streaming mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -H &#34;Accept: text/event-stream&#34; https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data comes in a stream; each subsequent chunk contains more complete information. &lt;strong&gt;The last chunk should provide the most complete and final result.&lt;/strong&gt; If you come from LLMs, please note that it is a different behavior than the LLMs&#39; text-generation streaming.&lt;/p&gt; &#xA;&lt;p&gt;For example, compare these two curl commands below. You can see streaming one gives you complete information at last, whereas standard mode does not. This is because the content loading on this particular site is triggered by some js &lt;em&gt;after&lt;/em&gt; the page is fully loaded, and standard mode returns the page &#34;too soon&#34;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -H &#39;x-no-cache: true&#39; https://access.redhat.com/security/cve/CVE-2023-45853&#xA;curl -H &#34;Accept: text/event-stream&#34; -H &#39;x-no-cache: true&#39; https://r.jina.ai/https://access.redhat.com/security/cve/CVE-2023-45853&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: &lt;code&gt;-H &#39;x-no-cache: true&#39;&lt;/code&gt; is used only for demonstration purposes to bypass the cache.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Streaming mode is also useful if your downstream LLM/agent system requires immediate content delivery or needs to process data in chunks to interleave I/O and LLM processing times. This allows for quicker access and more efficient data handling:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Reader API:  streamContent1 ----&amp;gt; streamContent2 ----&amp;gt; streamContent3 ---&amp;gt; ... &#xA;                          |                    |                     |&#xA;                          v                    |                     |&#xA;Your LLM:                 LLM(streamContent1)  |                     |&#xA;                                               v                     |&#xA;                                               LLM(streamContent2)   |&#xA;                                                                     v&#xA;                                                                     LLM(streamContent3)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that in terms of completeness: &lt;code&gt;... &amp;gt; streamContent3 &amp;gt; streamContent2 &amp;gt; streamContent1&lt;/code&gt;, each subsequent chunk contains more complete information.&lt;/p&gt; &#xA;&lt;h3&gt;JSON mode&lt;/h3&gt; &#xA;&lt;p&gt;This is still very early and the result is not really a &#34;useful&#34; JSON. It contains three fields &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; only. Nonetheless, you can use accept-header to control the output format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -H &#34;Accept: application/json&#34; https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JSON mode is probably more useful in &lt;code&gt;s.jina.ai&lt;/code&gt; than &lt;code&gt;r.jina.ai&lt;/code&gt;. For &lt;code&gt;s.jina.ai&lt;/code&gt; with JSON mode, it returns 5 results in a list, each in the structure of &lt;code&gt;{&#39;title&#39;, &#39;content&#39;, &#39;url&#39;}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Generated alt&lt;/h3&gt; &#xA;&lt;p&gt;All images in that page that lack &lt;code&gt;alt&lt;/code&gt; tag can be auto-captioned by a VLM (vision langauge model) and formatted as &lt;code&gt;!(Image [idx]: [VLM_caption])[img_URL]&lt;/code&gt;. This should give your downstream text-only LLM &lt;em&gt;just enough&lt;/em&gt; hints to include those images into reasoning, selecting, and summarization. Use the x-with-generated-alt header to toggle the streaming mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -H &#34;X-With-Generated-Alt: true&#34; https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You will need the following tools to run the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node v18 (The build fails for Node version &amp;gt;18)&lt;/li&gt; &#xA; &lt;li&gt;Firebase CLI (&lt;code&gt;npm install -g firebase-tools&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For backend, go to the &lt;code&gt;backend/functions&lt;/code&gt; directory and install the npm dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:jina-ai/reader.git&#xA;cd backend/functions&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is &lt;code&gt;thinapps-shared&lt;/code&gt; submodule?&lt;/h2&gt; &#xA;&lt;p&gt;You might notice a reference to &lt;code&gt;thinapps-shared&lt;/code&gt; submodule, an internal package we use to share code across our products. While it’s not open-sourced and isn&#39;t integral to the Reader&#39;s functions, it mainly helps with decorators, logging, secrets management, etc. Feel free to ignore it for now.&lt;/p&gt; &#xA;&lt;p&gt;That said, this is &lt;em&gt;the single codebase&lt;/em&gt; behind &lt;code&gt;https://r.jina.ai&lt;/code&gt;, so everytime we commit here, we will deploy the new version to the &lt;code&gt;https://r.jina.ai&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Having trouble on some websites?&lt;/h2&gt; &#xA;&lt;p&gt;Please raise an issue with the URL you are having trouble with. We will look into it and try to fix it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Reader is backed by &lt;a href=&#34;https://jina.ai&#34;&gt;Jina AI&lt;/a&gt; and licensed under &lt;a href=&#34;https://raw.githubusercontent.com/jina-ai/reader/main/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>n4ze3m/page-assist</title>
    <updated>2025-02-09T01:53:29Z</updated>
    <id>tag:github.com,2025-02-09:/n4ze3m/page-assist</id>
    <link href="https://github.com/n4ze3m/page-assist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use your locally running AI models to assist you in your web browsing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Page Assist&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/bu54382uBd&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true&#34; alt=&#34;Join dialoqbase #welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Page Assist is an open-source browser extension that provides a sidebar and web UI for your local AI model. It allows you to interact with your model from any webpage.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Page Assist supports Chromium-based browsers like Chrome, Brave, and Edge, as well as Firefox.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/page-assist/jfgfiigpkhlkbnfnbobbkinehhfdhndo&#34;&gt;&lt;img src=&#34;https://pub-35424b4473484be483c0afa08c69e7da.r2.dev/UV4C4ybeBTsZt43U4xis.png&#34; alt=&#34;Chrome Web Store&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/page-assist/&#34;&gt;&lt;img src=&#34;https://pub-35424b4473484be483c0afa08c69e7da.r2.dev/get-the-addon.png&#34; alt=&#34;Firefox Add-on&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Checkout the Demo (v1.0.0):&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8VTjlLGXA4s&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/8VTjlLGXA4s/0.jpg&#34; alt=&#34;Page Assist Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sidebar&lt;/strong&gt;: A sidebar that can be opened on any webpage. It allows you to interact with your model and see the results.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web UI&lt;/strong&gt;: A web UI that allows you to interact with your model like a ChatGPT Website.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chat With Webpage&lt;/strong&gt;: You can chat with the webpage and ask questions about the content.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;want more features? Create an issue and let me know.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Pre-requisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bun - &lt;a href=&#34;https://bun.sh/&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ollama (Local AI Provider) - &lt;a href=&#34;https://ollama.com&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Any OpenAI API Compatible Endpoint (like LM Studio, llamafile etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/n4ze3m/page-assist.git&#xA;cd page-assist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install the dependencies&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Build the extension (by default it will build for Chrome)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or you can build for Firefox&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun build:firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Load the extension (chrome)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the Extension Management page by navigating to &lt;code&gt;chrome://extensions&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable Developer Mode by clicking the toggle switch next to Developer mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &lt;code&gt;Load unpacked&lt;/code&gt; button and select the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Load the extension (firefox)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the Add-ons page by navigating to &lt;code&gt;about:addons&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;code&gt;Extensions&lt;/code&gt; tab.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;code&gt;Manage Your Extensions&lt;/code&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;code&gt;Load Temporary Add-on&lt;/code&gt; button and select the &lt;code&gt;manifest.json&lt;/code&gt; file from the &lt;code&gt;build&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Sidebar&lt;/h3&gt; &#xA;&lt;p&gt;Once the extension is installed, you can open the sidebar via context menu or keyboard shortcut.&lt;/p&gt; &#xA;&lt;p&gt;Default Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+Y&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Web UI&lt;/h3&gt; &#xA;&lt;p&gt;You can open the Web UI by clicking on the extension icon which will open a new tab with the Web UI.&lt;/p&gt; &#xA;&lt;p&gt;Default Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+L&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: You can change the keyboard shortcuts from the extension settings on the Chrome Extension Management page.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;You can run the extension in development mode to make changes and test them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bun dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a development server and watch for changes in the source files. You can load the extension in your browser and test the changes.&lt;/p&gt; &#xA;&lt;h2&gt;Browser Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Browser&lt;/th&gt; &#xA;   &lt;th&gt;Sidebar&lt;/th&gt; &#xA;   &lt;th&gt;Chat With Webpage&lt;/th&gt; &#xA;   &lt;th&gt;Web UI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chrome&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Brave&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firefox&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vivaldi&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Edge&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LibreWolf&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zen Browser&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Opera&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arc&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Local AI Provider&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ollama/ollama&#34;&gt;Ollama&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Chrome AI (Gemini Nano)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OpenAI API Compatible endpoints (like LM Studio, llamafile etc.)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Firefox Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; More Local AI Providers&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More Customization Options&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Better UI/UX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;Page Assist does not collect any personal data. The only time the extension communicates with the server is when you are using the share feature, which can be disabled from the settings.&lt;/p&gt; &#xA;&lt;p&gt;All the data is stored locally in the browser storage. You can view the source code and verify it yourself.&lt;/p&gt; &#xA;&lt;p&gt;You learn more about the privacy policy &lt;a href=&#34;https://raw.githubusercontent.com/n4ze3m/page-assist/main/PRIVACY.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. If you have any feature requests, bug reports, or questions, feel free to create an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you like the project and want to support it, you can buy me a coffee. It will help me to keep working on the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/M4M3EMCLL&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;36&#34; style=&#34;border:0px;height:36px;&#34; src=&#34;https://storage.ko-fi.com/cdn/kofi2.png?v=3&#34; border=&#34;0&#34; alt=&#34;Buy Me a Coffee at ko-fi.com&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or you can sponsor me on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Blogs and Videos About Page Assist&lt;/h2&gt; &#xA;&lt;p&gt;This are some of the blogs and videos about Page Assist. If you have written a blog or made a video about Page Assist, feel free to create a PR and add it here.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://note.com/lucas_san/n/nf00d01a02c3a&#34;&gt;OllamaをChromeAddonのPage Assistで簡単操作&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/LucasChatGPT&#34;&gt;LucasChatGPT&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IvLTlDy9G8c&#34;&gt;This Chrome Extension Surprised Me&lt;/a&gt; by &lt;a href=&#34;https://www.youtube.com/@technovangelist&#34;&gt;Matt Williams&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=61uN5jtj2wo&#34;&gt;Ollama With 1 Click&lt;/a&gt; by &lt;a href=&#34;https://www.youtube.com/@ecomxfactor-YaronBeen&#34;&gt;Yaron Been From EcomXFactor&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Last but not least&lt;/h2&gt; &#xA;&lt;p&gt;Made in &lt;a href=&#34;https://en.wikipedia.org/wiki/Alappuzha&#34;&gt;Alappuzha&lt;/a&gt; with ❤️&lt;/p&gt;</summary>
  </entry>
</feed>