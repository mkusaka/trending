<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-14T01:42:01Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>signalapp/Signal-Desktop</title>
    <updated>2024-07-14T01:42:01Z</updated>
    <id>tag:github.com,2024-07-14:/signalapp/Signal-Desktop</id>
    <link href="https://github.com/signalapp/Signal-Desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A private messenger for Windows, macOS, and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Signal Desktop&lt;/h1&gt; &#xA;&lt;p&gt;Signal Desktop links with Signal on &lt;a href=&#34;https://github.com/signalapp/Signal-Android&#34;&gt;Android&lt;/a&gt; or &lt;a href=&#34;https://github.com/signalapp/Signal-iOS&#34;&gt;iOS&lt;/a&gt; and lets you message from your Windows, macOS, and Linux computers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://signal.org/download/&#34;&gt;Install the production version&lt;/a&gt; or help us out by &lt;a href=&#34;https://support.signal.org/hc/articles/360007318471-Signal-Beta&#34;&gt;installing the beta version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Got a question?&lt;/h2&gt; &#xA;&lt;p&gt;You can find answers to a number of frequently asked questions on our &lt;a href=&#34;https://support.signal.org/&#34;&gt;support site&lt;/a&gt;. The &lt;a href=&#34;https://community.signalusers.org/&#34;&gt;community forum&lt;/a&gt; is another good place for questions.&lt;/p&gt; &#xA;&lt;h2&gt;Found a Bug?&lt;/h2&gt; &#xA;&lt;p&gt;Please search for any &lt;a href=&#34;https://github.com/signalapp/Signal-Desktop/issues&#34;&gt;existing issues&lt;/a&gt; that describe your bug in order to avoid duplicate submissions.&lt;/p&gt; &#xA;&lt;h2&gt;Have a feature request, question, comment?&lt;/h2&gt; &#xA;&lt;p&gt;Please use our community forum: &lt;a href=&#34;https://community.signalusers.org/&#34;&gt;https://community.signalusers.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Code&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/signalapp/Signal-Desktop/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions and guidelines for new contributors. Don&#39;t forget to sign the &lt;a href=&#34;https://signal.org/cla/&#34;&gt;CLA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Funds&lt;/h2&gt; &#xA;&lt;p&gt;You can donate to Signal development through the &lt;a href=&#34;https://signal.org/donate&#34;&gt;Signal Technology Foundation&lt;/a&gt;, an independent 501c3 nonprofit.&lt;/p&gt; &#xA;&lt;h2&gt;Cryptography Notice&lt;/h2&gt; &#xA;&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&#34;http://www.wassenaar.org/&#34;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013-2024 Signal Messenger, LLC&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the GNU AGPLv3: &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;https://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Chainlit/chainlit</title>
    <updated>2024-07-14T01:42:01Z</updated>
    <id>tag:github.com,2024-07-14:/Chainlit/chainlit</id>
    <link href="https://github.com/Chainlit/chainlit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build Conversational AI in minutes ‚ö°Ô∏è&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Chainlit by Literal AI üëã&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/k73SQ3FyUh&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/ZThrUxbAYw?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/chainlit_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/chainlit_io.svg?style=social&amp;amp;label=Follow%20%40chainlit_io&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/chainlit&#34; alt=&#34;PyPI - Downloads&#34;&gt; &lt;a href=&#34;https://github.com/chainlit/chainlit/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/chainlit/chainlit&#34; alt=&#34;GitHub Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Chainlit/chainlit/actions/workflows/ci.yaml&#34;&gt;&lt;img src=&#34;https://github.com/Chainlit/chainlit/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build production-ready Conversational AI applications in minutes, not weeks ‚ö°Ô∏è&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chainlit is an open-source async Python framework which allows developers to build scalable Conversational AI or agentic applications.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ ChatGPT-like application&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Embedded Chatbot &amp;amp; Software Copilot&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Slack &amp;amp; Discord&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Custom frontend (build your own agentic experience)&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ API Endpoint&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Full documentation is available &lt;a href=&#34;https://docs.chainlit.io&#34;&gt;here&lt;/a&gt;. You can ask Chainlit related questions to &lt;a href=&#34;https://help.chainlit.io/&#34;&gt;Chainlit Help&lt;/a&gt;, an app built using Chainlit!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Contact us &lt;a href=&#34;https://forms.gle/BX3UNBLmTF75KgZVA&#34;&gt;here&lt;/a&gt; for &lt;strong&gt;Enterprise Support&lt;/strong&gt;. Check out &lt;a href=&#34;https://literalai.com&#34;&gt;Literal AI&lt;/a&gt;, our product to monitor and evaluate LLM applications! It works with any Python or TypeScript applications and &lt;a href=&#34;https://docs.chainlit.io/data-persistence/overview&#34;&gt;seamlessly&lt;/a&gt; with Chainlit by adding a &lt;code&gt;LITERAL_API_KEY&lt;/code&gt; in your project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/Chainlit/chainlit/assets/13104895/0c2cc7a9-766c-41d3-aae2-117a2d0eb8ed&#34; width=&#34;80%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Open a terminal and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install chainlit&#xA;$ chainlit hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this opens the &lt;code&gt;hello app&lt;/code&gt; in your browser, you&#39;re all set!&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;üêç Pure Python&lt;/h3&gt; &#xA;&lt;p&gt;Create a new file &lt;code&gt;demo.py&lt;/code&gt; with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import chainlit as cl&#xA;&#xA;&#xA;@cl.step(type=&#34;tool&#34;)&#xA;async def tool():&#xA;    # Fake tool&#xA;    await cl.sleep(2)&#xA;    return &#34;Response from the tool!&#34;&#xA;&#xA;&#xA;@cl.on_message  # this function will be called every time a user inputs a message in the UI&#xA;async def main(message: cl.Message):&#xA;    &#34;&#34;&#34;&#xA;    This function is called every time a user inputs a message in the UI.&#xA;    It sends back an intermediate response from the tool, followed by the final answer.&#xA;&#xA;    Args:&#xA;        message: The user&#39;s message.&#xA;&#xA;    Returns:&#xA;        None.&#xA;    &#34;&#34;&#34;&#xA;&#xA;    final_answer = await cl.Message(content=&#34;&#34;).send()&#xA;&#xA;    # Call the tool&#xA;    final_answer.content = await tool()&#xA;&#xA;    await final_answer.update()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now run it!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ chainlit run demo.py -w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Chainlit/chainlit/main/images/quick-start.png&#34; alt=&#34;Quick Start&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üéâ Key Features and Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation is available &lt;a href=&#34;https://docs.chainlit.io&#34;&gt;here&lt;/a&gt;. Key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/advanced-features/multi-modal&#34;&gt;üí¨ Multi Modal chats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/concepts/step&#34;&gt;üí≠ Chain of Thought visualisation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/data-persistence/overview&#34;&gt;üíæ Data persistence + human feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/data-persistence/enterprise#debug-mode&#34;&gt;üêõ Debug Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/authentication/overview&#34;&gt;üë§ Authentication&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Chainlit is compatible with all Python programs and libraries. That being said, it comes with integrations for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/integrations/langchain&#34;&gt;LangChain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/integrations/llama-index&#34;&gt;Llama Index&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chainlit/cookbook/tree/main/pyautogen&#34;&gt;Autogen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chainlit/cookbook/tree/main/openai-assistant&#34;&gt;OpenAI Assistant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.chainlit.io/integrations/haystack&#34;&gt;Haystack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìö More Examples - Cookbook&lt;/h2&gt; &#xA;&lt;p&gt;You can find various examples of Chainlit apps &lt;a href=&#34;https://github.com/Chainlit/cookbook&#34;&gt;here&lt;/a&gt; that leverage tools and services such as OpenAI, Anthropi—Å, LangChain, LlamaIndex, ChromaDB, Pinecone and more.&lt;/p&gt; &#xA;&lt;p&gt;Tell us what you would like to see added in Chainlit using the Github issues or on &lt;a href=&#34;https://discord.gg/k73SQ3FyUh&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üíÅ Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As an open-source initiative in a rapidly evolving domain, we welcome contributions, be it through the addition of new features or the improvement of documentation.&lt;/p&gt; &#xA;&lt;p&gt;For detailed information on how to contribute, see &lt;a href=&#34;https://raw.githubusercontent.com/Chainlit/chainlit/main/.github/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìÉ License&lt;/h2&gt; &#xA;&lt;p&gt;Chainlit is open-source and licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Chainlit/chainlit/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JSv4/OpenContracts</title>
    <updated>2024-07-14T01:42:01Z</updated>
    <id>tag:github.com,2024-07-14:/JSv4/OpenContracts</id>
    <link href="https://github.com/JSv4/OpenContracts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mass document analytics platform based on LlamaIndex, Pgvector, React and Django.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/logos/OS_Legal_Logo.png&#34; alt=&#34;OpenContracts&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Open Contracts (&lt;a href=&#34;https://opencontracts.opensource.legal&#34;&gt;Demo&lt;/a&gt;)&lt;/h1&gt; &#xA;&lt;h2&gt;The Free and Open Source Document Analytics Platform &lt;a href=&#34;https://github.com/sponsors/JSv4&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CI/CD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/JSv4/OpenContracts&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/JSv4/OpenContracts/branch/main/graph/badge.svg?token=RdVsiuaTVz&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Meta&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34; alt=&#34;code style - black&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/python/mypy&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/types-Mypy-blue.svg?sanitize=true&#34; alt=&#34;types - Mypy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pycqa/isort&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/imports-isort-ef8336.svg?sanitize=true&#34; alt=&#34;imports - isort&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License - Apache2&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What Does it Do?&lt;/h2&gt; &#xA;&lt;p&gt;OpenContracts is an &lt;strong&gt;Apache-2 Licensed&lt;/strong&gt; enterprise document analytics tool. It provides several key features:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manage Documents&lt;/strong&gt; - Manage document collections (&lt;code&gt;Corpuses&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Layout Parser&lt;/strong&gt; - Automatically extracts layout features from PDFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic Vector Embeddings&lt;/strong&gt; - generated for uploaded PDFs and extracted layout blocks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pluggable microservice analyzer architecture&lt;/strong&gt; - to let you analyze documents and automatically annotate them&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Human Annotation Interface&lt;/strong&gt; - to manually annotated documents, including multi-page annotations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LlamaIndex Integration&lt;/strong&gt; - Use our vector stores (powered by pgvector) and any manual or automatically annotated features to let an LLM intelligently answer questions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Extract&lt;/strong&gt; - ask multiple questions across hundreds of documents using complex LLM-powered querying behavior. Our sample implementation uses LlamaIndex + Marvin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Data Extract&lt;/strong&gt; - Custom data extract pipelines can be used on the frontend to query documents in bulk.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/gifs/Grid_Review_And_Sources.gif&#34; alt=&#34;Grid Review And Sources.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/screenshots/Jumped_To_Annotation.png&#34; alt=&#34;Manual Annotations&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key Docs&lt;/h2&gt; &#xA;&lt;p&gt;We recommend you &lt;a href=&#34;https://jsv4.github.io/OpenContracts/&#34;&gt;browse our docs&lt;/a&gt; via our Mkdocs Site. You can also view the docs in the repo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/quick-start.md&#34;&gt;Quickstart Guide&lt;/a&gt; - You&#39;ll probably want to get started quickly. Setting up locally should be pretty painless if you&#39;re already running Docker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/walkthrough/key-concepts.md&#34;&gt;Basic Walkthrough&lt;/a&gt; - Check out the walkthrough to step through basic usage of the application for document and annotation management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/architecture/PDF-data-layer.md&#34;&gt;PDF Annotation Data Format Overview&lt;/a&gt; - You may be interested how we map text to PDFs visually and the underlying data format we&#39;re using.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/extract_and_retrieval/intro_to_django_annotation_vector_store.md&#34;&gt;Django + Pgvector Powered Hybrid Vector Database&lt;/a&gt; We&#39;ve used the latest open source tooling for vector storage in postgres to make it almost trivially easy to combine structured metadata and vector embeddings with an API-powered application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/extract_and_retrieval/intro_to_django_annotation_vector_store.md&#34;&gt;LlamaIndex Integration Walkthrough&lt;/a&gt; - We wrote a wrapper for our backend database and vector store to make it simple to load our parsed annotations, embeddings and text into LlamaIndex. Even better, if you have additional annotations in the document, the LLM can access those too.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/walkthrough/advanced/write-your-own-extractors.md&#34;&gt;Write Custom Data Extractors&lt;/a&gt; - Custom data extract tasks (which can use LlamaIndex or can be totally bespoke) are automatically loaded and displayed on the frontend to let user&#39;s select how to ask questions and extract data from documents.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture and Data Flows at a Glance&lt;/h2&gt; &#xA;&lt;h3&gt;Core Data Standard&lt;/h3&gt; &#xA;&lt;p&gt;The core idea here - besides providing a platform to analyze contracts - is an open and standardized architecture that makes data extremely portable. Powering this is a set of data standards to describe the text and layout blocks on a PDF page:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/diagrams/pawls-annotation-mapping.svg?sanitize=true&#34; alt=&#34;Data Format&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Robust PDF Processing Pipeline&lt;/h3&gt; &#xA;&lt;p&gt;We have a robust PDF processing pipeline that is horizontally scalable and generates our standardized data consistently for PDF inputs (We&#39;re working on adding additional formats soon):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JSv4/OpenContracts/main/docs/assets/images/diagrams/PDF-processor-sequence-diagram.png&#34; alt=&#34;PDF Processor&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to Nlmatics and &lt;a href=&#34;https://github.com/nlmatics/nlm-ingestor&#34;&gt;nlm-ingestor&lt;/a&gt; for powering the layout parsing and extraction.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;At the moment, it only works with PDFs. In the future, it will be able to convert other document types to PDF for storage and labeling. PDF is an excellent format for this as it introduces a consistent, repeatable format which we can use to generate a text and x-y coordinate layer from scratch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adding OCR and ingestion for other enterprise documents is a priority&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to AllenAI&#39;s &lt;a href=&#34;https://github.com/allenai/pawls&#34;&gt;PAWLS project&lt;/a&gt; and Nlmatics &lt;a href=&#34;https://github.com/nlmatics/nlm-ingestor&#34;&gt;nlm-ingestor&lt;/a&gt;. They&#39;ve pioneered a number of features and flows, and we are using their code in some parts of the application.&lt;/p&gt;</summary>
  </entry>
</feed>