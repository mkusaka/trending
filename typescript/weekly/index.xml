<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-18T01:42:39Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>plasmicapp/plasmic</title>
    <updated>2024-08-18T01:42:39Z</updated>
    <id>tag:github.com,2024-08-18:/plasmicapp/plasmic</id>
    <link href="https://github.com/plasmicapp/plasmic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Visual builder for React. Build apps, websites, and content. Integrate with your codebase.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.plasmic.app&#34;&gt; &lt;img alt=&#34;Plasmic&#34; role=&#34;img&#34; src=&#34;https://static1.plasmic.app/brand/2023/logo-cropped.png&#34; width=&#34;120&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Plasmic &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; The open-source visual builder for your codebase. &lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Build beautiful apps and websites incredibly fast. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Drag and drop your own components, integrate with your codebase. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Break through the low-code ceiling. &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.plasmic.app&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7129/146098801-0691ff13-e302-40fb-827e-90488a7a28b4.gif&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.plasmic.app/learn/quickstart&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7129/139351025-8acd6f6d-8e32-4486-982e-a6f26a53d865.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/plasmicapp/plasmic&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/plasmicapp/plasmic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@plasmicapp/loader-react&#34;&gt;&lt;img alt=&#34;Types&#34; src=&#34;https://img.shields.io/npm/types/@plasmicapp/loader-react&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;&lt;img alt=&#34;code style: prettier&#34; src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plasmicapp/plasmic/pulls&#34;&gt;&lt;img alt=&#34;PRs Welcome&#34; src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.plasmic.app/&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.plasmic.app/learn/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.plasmic.app/learn/quickstart/&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.plasmic.app/&#34;&gt;Plasmic Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.plasmic.app/slack&#34;&gt;Slack Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;See Plasmic in action&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Vercel marketing page: &lt;a href=&#34;https://youtu.be/itvbmgLZvcM&#34;&gt;https://youtu.be/itvbmgLZvcM&lt;/a&gt; (live app: &lt;a href=&#34;https://vercel-workflow.vercel.app&#34;&gt;https://vercel-workflow.vercel.app&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apple.com: &lt;a href=&#34;https://apple.plasmic.run&#34;&gt;https://apple.plasmic.run&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shopify headless storefront: &lt;a href=&#34;https://commerce.plasmic.run&#34;&gt;https://commerce.plasmic.run&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Twitter clone: &lt;a href=&#34;https://youtu.be/rpdjrFuVMog&#34;&gt;https://youtu.be/rpdjrFuVMog&lt;/a&gt; (live app: &lt;a href=&#34;https://twitter.plasmic.run&#34;&gt;https://twitter.plasmic.run&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Service desk app: &lt;a href=&#34;https://youtu.be/rYqSpUEJSTw&#34;&gt;https://youtu.be/rYqSpUEJSTw&lt;/a&gt; (live app: &lt;a href=&#34;https://tickets.plasmic.run&#34;&gt;https://tickets.plasmic.run&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Interview with Lee Robinson, Plasmic as a visual CMS: &lt;a href=&#34;https://www.youtube.com/watch?v=pcVzNR6FBAQ&#34;&gt;https://www.youtube.com/watch?v=pcVzNR6FBAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Emails with React.Email: coming soon&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Plasmic?&lt;/h2&gt; &#xA;&lt;p&gt;Plasmic is a visual builder for the web.&lt;/p&gt; &#xA;&lt;p&gt;It enables rapidly designing and building applications and websites--code optional.&lt;/p&gt; &#xA;&lt;p&gt;Main use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Content management: let marketing drag/drop your React components to build landing pages in your Next.js website, with design guardrails&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Applications: let developers and technical users quickly build internal tools, client portals, and business software&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Website builder and design tool that doesn’t limit you to some built-in ecommerce platform, CMS, or hosting&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plasmic is powerful, with a deep feature set that scales to complex projects. And with codebase integration, it removes the ceiling typically associated with low-code tools.&lt;/p&gt; &#xA;&lt;h2&gt;What makes Plasmic special?&lt;/h2&gt; &#xA;&lt;p&gt;Plasmic combines some seemingly disparate genres:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Webflow, Wordpress and other site builders&lt;/li&gt; &#xA; &lt;li&gt;Retool and other tool builders&lt;/li&gt; &#xA; &lt;li&gt;Glide and no-code app builders&lt;/li&gt; &#xA; &lt;li&gt;Contentful and other CMSes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Today these are different tools to specialize in, but the line between, say, a website and an application is blurry (consider an ecommerce storefront with user logins). With the right foundations, we think these can be unified—Plasmic’s UI can adapt to different levels of control for different personas/tasks.&lt;/p&gt; &#xA;&lt;p&gt;But more importantly, unlike existing tools, Plasmic integrates with codebases. This is critical to making low-code scale past the complexity ceiling that all such tools (including Plasmic) have. You can drag and drop existing complex React components, and you can visually create new UIs/components within traditionally-coded applications, seamlessly weaving code and no-code.&lt;/p&gt; &#xA;&lt;p&gt;Some feature highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full design freedom&lt;/strong&gt; and speedy modern design tool UX.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integrate with codebases&lt;/strong&gt; to drag/drop existing React components, publish screens into existing applications, and extend/customize Plasmic Studio.&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;strong&gt;rich stateful interactions and behavior&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect with &lt;strong&gt;arbitrary data source and backend integrations&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful abstractions&lt;/strong&gt; like components, variants, slots, composable state management, and more that promote composition and let you build and maintain at scale.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable headless design system components&lt;/strong&gt; powered by &lt;a href=&#34;https://react-spectrum.adobe.com/react-aria/&#34;&gt;react-aria&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Content creator mode&lt;/strong&gt;: give specific collaborators a more simplified editing experience with design guardrails.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open integrations&lt;/strong&gt;: choose your own CMS, ecommerce platform, hosting provider, and more.&lt;/li&gt; &#xA; &lt;li&gt;Deep collaboration with multiplayer, branching, cross-project imports, and multi-workspace organizations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import designs from Figma&lt;/strong&gt;, translating its proprietary vector document format into DOM/CSS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Page performance and high-quality codegen&lt;/strong&gt;. Supports static site generation, automatic image optimization, layout shift reduction, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deploy/host/export anywhere&lt;/strong&gt;, including Vercel, Netlify, or any hosting provider.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;End-user auth and permissions&lt;/strong&gt;, including RBAC and user-scoped permissions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-source platform&lt;/strong&gt; that you can always fork and control.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Learn more on &lt;a href=&#34;https://www.plasmic.app&#34;&gt;our website&lt;/a&gt; and &lt;a href=&#34;https://www.plasmic.app/learn/&#34;&gt;our docs&lt;/a&gt;. Or check out &lt;a href=&#34;https://docs.plasmic.app/learn/comparisons/&#34;&gt;comparisons of Plasmic vs other tools&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How do I integrate Plasmic as a CMS?&lt;/h2&gt; &#xA;&lt;p&gt;This is one popular use case of Plasmic.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; Install Plasmic into your codebase (exact package &lt;a href=&#34;https://www.plasmic.app/learn/quickstart/&#34;&gt;depends on your framework&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install @plasmicapp/loader-nextjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2 (optional).&lt;/strong&gt; Make components from your app or design system available for drag-and-drop in the visual editor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// Take any component from your app or design system...&#xA;export default function HeroSection({ children }) {&#xA;  return &amp;lt;div className=&#34;hero-section&#34;&amp;gt;{children}&amp;lt;/div&amp;gt;;&#xA;}&#xA;&#xA;// ...and make it available for drag-and-drop, along with any props you want to&#xA;// expose.&#xA;PLASMIC.registerComponent(HeroSection, {&#xA;  props: {&#xA;    children: &#34;slot&#34;,&#xA;  },&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 3.&lt;/strong&gt; Add placeholders that render pages/components made in the visual editor anywhere in your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;// pages/index.tsx&#xA;&#xA;import {&#xA;  PlasmicComponent,&#xA;  PlasmicRootProvider,&#xA;} from &#34;@plasmicapp/loader-nextjs&#34;;&#xA;import { PLASMIC } from &#34;../plasmic-init&#34;;&#xA;&#xA;// Here we fetch dynamically on the client, but you can also fetch and render&#xA;// components server-side in SSG/SSR frameworks, such as via getStaticProps&#xA;// in Next.js.&#xA;export default function IndexPage() {&#xA;  return (&#xA;    &amp;lt;PlasmicRootProvider plasmic={PLASMIC}&amp;gt;&#xA;      &amp;lt;PlasmicComponent component=&#34;Summer22LandingPage&#34; /&amp;gt;&#xA;    &amp;lt;/PlasmicRootProvider&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 4.&lt;/strong&gt; Non-developers (or developers!) can now create new pages, sections, or components that ship directly into the app/website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 5.&lt;/strong&gt; When you hit Publish, changes get picked up via webhooks that trigger rebuilds, or more specific mechanisms such as incremental static revalidation or dynamic fetching from the Plasmic CDN.&lt;/p&gt; &#xA;&lt;h2&gt;Who uses Plasmic?&lt;/h2&gt; &#xA;&lt;p&gt;Plasmic is used by companies ranging from Fortune 500s to boutique brands to solo makers. It&#39;s used for websites ranging from headless commerce storefronts to marketing websites to logged-in app content.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://www.plasmic.app/casestudies&#34;&gt;Case Studies and Community Showcase&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.plasmic.app/casestudies&#34;&gt; &lt;img alt=&#34;Customer logos&#34; width=&#34;1106&#34; src=&#34;https://github.com/plasmicapp/plasmic/assets/7129/2c682d45-6b72-4571-895a-e48b0c588647&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.plasmic.app/casestudies&#34;&gt; &lt;img alt=&#34;Showcase&#34; src=&#34;https://user-images.githubusercontent.com/7129/139349675-a807ad9d-aaaf-411b-ab4b-8247a09be676.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;How does Plasmic work?&lt;/h2&gt; &#xA;&lt;h3&gt;How codebase integration works&lt;/h3&gt; &#xA;&lt;p&gt;Note: you do not need to integrate Plasmic with a codebase. This is core to using Plasmic as a CMS, but you can build complete apps and websites without this, entirely within Plasmic.&lt;/p&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://docs.plasmic.app/learn/technical-overview/&#34;&gt;the full technical overview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Bring your own React components&lt;/h3&gt; &#xA;&lt;p&gt;You can register your own arbitrary custom React components for use as building blocks within Plasmic Studio. &lt;a href=&#34;https://code-components.plasmic.site&#34;&gt;Learn more about code components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Codegen&lt;/h3&gt; &#xA;&lt;p&gt;Besides the Headless API, you can also &lt;a href=&#34;https://docs.plasmic.app/learn/codegen-guide&#34;&gt;generate React code&lt;/a&gt; into your codebase. This is a powerful way to use Plasmic as a UI builder for creating rich interactive web applications—one example of this is Plasmic Studio itself. See the &lt;a href=&#34;https://docs.plasmic.app/learn/minitwitter-tutorial&#34;&gt;application development tutorials&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Note on versioning&lt;/h2&gt; &#xA;&lt;p&gt;One common issue we see is mismatched or duplicate versions of packages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@plasmicapp&lt;/code&gt; packages can depend on each other. Each package always has an &lt;em&gt;exact&lt;/em&gt; version of its @plasmicapp dependencies. This is because we want to ensure that all packages are always in sync, and that we don&#39;t end up with a mismatched set of packages.&lt;/p&gt; &#xA;&lt;p&gt;Packages like &lt;code&gt;@plasmicapp/host&lt;/code&gt; must also be deduped, since functionality such as &lt;code&gt;registerComponent&lt;/code&gt; make use of globals and side effects, so with multiple versions you could end up using the wrong &#34;instance&#34; of this package. Additionally, types can be tightly coupled across multiple packages.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, npm and yarn make it easy for you to end up with mismatched versions and duplicate versions of packages. Use the &lt;code&gt;npm list&lt;/code&gt; command to ensure that you have unique deduped versions of packages. Furthermore, issues can be &#34;sticky,&#34; since npm/yarn are stateful. At times, you may need to rely on &lt;code&gt;npm dedupe&lt;/code&gt;, or removing and reinstalling Plasmic packages (including &lt;code&gt;@plasmicpkgs&lt;/code&gt; packages), resetting package-lock.json/yarn.lock, in order to unwedge npm/yarn.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@plasmicpkgs&lt;/code&gt; (the built-in code component packages) have &lt;code&gt;@plasmicapp&lt;/code&gt; packages as peer dependencies, and these specify ranges rather than exact versions--this is to offer some flexibility for developers to use the core package versions they need, while still using &lt;code&gt;@plasmicpkgs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: exact versioning does not imply that every package increments versions for every release. Packages are only incremented if they or their dependencies have changed. Incrementing versions, including those referenced in &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt;, is done automatically when our deployment scripts run &lt;code&gt;lerna version patch --exact...&lt;/code&gt;, which detects whether a package has changed since its last git-tagged release.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing 🚀&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/plasmicapp/plasmic/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get help and join our community&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://www.plasmic.app/learn/&#34;&gt;docs&lt;/a&gt; and our community &lt;a href=&#34;https://forum.plasmic.app/&#34;&gt;forum&lt;/a&gt; and &lt;a href=&#34;https://www.plasmic.app/slack&#34;&gt;Slack&lt;/a&gt; with 3000+ members are the best places to get help with Plasmic.&lt;/p&gt; &#xA;&lt;p&gt;For support from the Plasmic team, please use the forum. The forum is also easily searchable for all previously asked questions and discussions.&lt;/p&gt; &#xA;&lt;p&gt;Both the docs and forum are indexed by search engines! Search both by including “plasmic” in your query.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All content outside of &lt;code&gt;platform/&lt;/code&gt; is licensed under the MIT license--see LICENSE.md.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;platform/&lt;/code&gt; is licensed under the AGPL--see LICENSE.platform.md.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ❤️&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the people who make Plasmic!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/plasmicapp/plasmic/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=plasmicapp/plasmic&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>hcengineering/platform</title>
    <updated>2024-08-18T01:42:39Z</updated>
    <id>tag:github.com,2024-08-18:/hcengineering/platform</id>
    <link href="https://github.com/hcengineering/platform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Huly — All-in-One Project Management Platform (alternative to Linear, Jira, Slack, Notion, Motion)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Huly Platform&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/huly_io&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/huly_io?style=for-the-badge&#34; alt=&#34;X (formerly Twitter) Follow&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/hcengineering/platform?style=for-the-badge&#34; alt=&#34;GitHub License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;⭐️ Your star shines on us. Star us on GitHub!&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;The Huly Platform is a robust framework designed to accelerate the development of business applications, such as CRM systems. This repository includes several applications, such as Chat, Project Management, CRM, HRM, and ATS. Various teams are building products on top of the Platform, including &lt;a href=&#34;https://huly.io&#34;&gt;Huly&lt;/a&gt; and &lt;a href=&#34;https://tracex.co&#34;&gt;TraceX&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repository-images.githubusercontent.com/392073243/6d27d5cc-38cd-4d88-affe-bb88b393180c&#34; alt=&#34;Huly&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Self-Hosting&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re primarily interested in self-hosting Huly without the intention to modify or contribute to its development, please use &lt;a href=&#34;https://github.com/hcengineering/huly-selfhost&#34;&gt;huly-selfhost&lt;/a&gt;. This project offers a convenient method to host Huly using &lt;code&gt;docker&lt;/code&gt;, designed for ease of use and quick setup. Explore this option to effortlessly enjoy Huly on your own server.&lt;/p&gt; &#xA;&lt;h2&gt;Activity&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/c42c99e21691fa60ea61b5cdf11c2e0647621534.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#huly-platform&#34;&gt;Huly Platform&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#self-hosting&#34;&gt;Self-Hosting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#activity&#34;&gt;Activity&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#table-of-content&#34;&gt;Table of Content&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#pre-requisites&#34;&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#verification&#34;&gt;Verification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#build-and-run&#34;&gt;Build and run&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#run-in-development-mode&#34;&gt;Run in development mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#update-project-structure-and-database&#34;&gt;Update project structure and database&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#build--watch&#34;&gt;Build &amp;amp; Watch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#tests&#34;&gt;Tests&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#unit-tests&#34;&gt;Unit tests&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#ui-tests&#34;&gt;UI tests&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#package-publishing&#34;&gt;Package publishing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hcengineering/platform/develop/#additional-testing&#34;&gt;Additional testing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before proceeding, ensure that your system meets the following requirements: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Node.js&lt;/a&gt; (v20.11.0 is required)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Verification&lt;/h2&gt; &#xA;&lt;p&gt;To verify the installation, perform the following checks in your terminal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure that the &lt;code&gt;docker&lt;/code&gt; commands are available: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker --version&#xA;docker compose version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fast start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/fast-start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You need Microsoft&#39;s &lt;a href=&#34;https://rushjs.io&#34;&gt;rush&lt;/a&gt; to install application.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Rush globally using the command: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g @microsoft/rush&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigate to the repository root and run the following commands: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush install&#xA;rush build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/presetup-rush.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build and run&lt;/h2&gt; &#xA;&lt;p&gt;Development environment setup requires Docker to be installed on system.&lt;/p&gt; &#xA;&lt;p&gt;Support is available for both amd64 and arm64 containers on Linux and macOS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./dev/&#xA;rush build    # Will build all the required packages. &#xA;# rush rebuild  # could be used to omit build cache.&#xA;rush bundle   # Will prepare bundles.&#xA;rush package  # Will build all webpack packages.&#xA;rush validate # Will validate all sources with typescript and generate d.ts files required for ts-node execution.&#xA;rush svelte-check # Optional. svelte files validation using svelte-check.&#xA;rush docker:build   # Will build Docker containers for all applications in the local Docker environment.&#xA;rush docker:up # Will set up all the containers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be aware &lt;code&gt;rush docker:build&lt;/code&gt; will automatically execute all required phases like build, bundle, package.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, Docker volumes named dev_db, dev_elastic, and dev_files will be created for the MongoDB, Elasticsearch, and MinIO instances.&lt;/p&gt; &#xA;&lt;p&gt;Before you can begin, you need to create a workspace and an account and associate it with the workspace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tool # dev/tool in the repository root&#xA;rushx run-local create-workspace ws1 -w DevWorkspace # Create workspace&#xA;rushx run-local create-account user1 -p 1234 -f John -l Appleseed # Create account&#xA;rushx run-local configure ws1 --list --enable &#39;*&#39; # Enable all modules, even if they are not yet intended to be used by a wide audience.&#xA;rushx run-local assign-workspace user1 ws1 # Assign workspace to user.&#xA;rushx run-local confirm-email user1 # To allow the creation of additional test workspaces.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./scripts/create-workspace.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Accessing the URL &lt;a href=&#34;http://localhost:8087&#34;&gt;http://localhost:8087&lt;/a&gt; will lead you to the app in production mode.&lt;/p&gt; &#xA;&lt;p&gt;Limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local installation does not support sending emails, thus disabling functionalities such as password recovery and email notifications.&lt;/li&gt; &#xA; &lt;li&gt;Integrations with Telegram, Gmail, and other content sources are exclusively available as Docker containers, sourced from private repositories. However, these integrations are fully functional and can be utilized with the platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run in development mode&lt;/h2&gt; &#xA;&lt;p&gt;Development mode allows for live reloading and a smoother development process.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd dev/prod&#xA;rushx dev-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use the following login credentials:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plain&#34;&gt;Email: user1&#xA;Password: 1234&#xA;Workspace: ws1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Update project structure and database&lt;/h2&gt; &#xA;&lt;p&gt;If the project&#39;s structure is updated, it may be necessary to relink and rebuild the projects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush update&#xA;rush build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It may also be necessary to upgrade the running database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./dev/tool&#xA;rushx upgrade -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If a build fails, but the code is correct, try to delete the &lt;a href=&#34;https://rushjs.io/pages/maintainer/build_cache/&#34;&gt;build cache&lt;/a&gt; and retry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# from the project root&#xA;rm -rf common/temp/build-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build &amp;amp; Watch&lt;/h2&gt; &#xA;&lt;p&gt;For development purpose &lt;code&gt;rush build:watch&lt;/code&gt; action could be used.&lt;/p&gt; &#xA;&lt;p&gt;It includes build and validate phases in watch mode.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;h3&gt;Unit tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rush test # To execute all tests&#xA;&#xA;rushx test # For individual test execution inside a package directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;UI tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tests&#xA;rush build&#xA;rush bundle&#xA;rush docker:build&#xA;## creates test Docker containers and sets up test database&#xA;./prepare.sh&#xA;## runs UI tests&#xA;rushx uitest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To execute tests in the development environment, please follow these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./tests&#xA;./create-local.sh ## use ./restore-local.sh if you only want to restore the workspace to a predefined initial state for sanity.&#xA;cd ./sanity&#xA;rushx dev-uitest # To execute all tests against the development environment.&#xA;rushx dev-debug -g &#39;pattern&#39; # To execute tests in debug mode with only the matching test pattern.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Package publishing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node ./common/scripts/bump.js -p projectName&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional testing&lt;/h2&gt; &#xA;&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;&lt;sup&gt;© 2024 &lt;a href=&#34;https://hardcoreeng.com&#34;&gt;Hardcore Engineering Inc&lt;/a&gt;.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>EvolutionAPI/evolution-api</title>
    <updated>2024-08-18T01:42:39Z</updated>
    <id>tag:github.com,2024-08-18:/EvolutionAPI/evolution-api</id>
    <link href="https://github.com/EvolutionAPI/evolution-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Evolution API is an open-source WhatsApp integration API&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Evolution Api&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://evolution-api.com/whatsapp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Group-WhatsApp-%2322BC18&#34; alt=&#34;Whatsapp Group&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://evolution-api.com/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Community-blue&#34; alt=&#34;Discord Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://evolution-api.com/postman&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Postman-Collection-orange&#34; alt=&#34;Postman Collection&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doc.evolution-api.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-Official-green&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL--3.0-orange&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.picpay.com/user/davidsongomes1998&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donation-picpay-green&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bmc.link/evolutionapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Buy%20me-coffe-orange&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/cover.png&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;WhatsApp-Api-NodeJs&lt;/h2&gt; &#xA;&lt;p&gt;This project is based on the &lt;a href=&#34;https://github.com/code-chat-br/whatsapp-api&#34;&gt;CodeChat&lt;/a&gt;. The original project is an implementation of &lt;a href=&#34;https://github.com/WhiskeySockets/Baileys&#34;&gt;Baileys&lt;/a&gt;, serving as a Restful API service that controls WhatsApp functions.&lt;br&gt; The code allows the creation of multiservice chats, service bots, or any other system that utilizes WhatsApp. The documentation provides instructions on how to set up and use the project, as well as additional information about its features and configuration options.&lt;/p&gt; &#xA;&lt;h2&gt;SSL&lt;/h2&gt; &#xA;&lt;p&gt;To install the SSL certificate, follow the &lt;strong&gt;&lt;a href=&#34;https://certbot.eff.org/instructions?ws=other&amp;amp;os=ubuntufocal&#34;&gt;instructions&lt;/a&gt;&lt;/strong&gt; below.&lt;/p&gt; &#xA;&lt;h1&gt;Note&lt;/h1&gt; &#xA;&lt;p&gt;This code is in no way affiliated with WhatsApp. Use at your own discretion. Don&#39;t spam this.&lt;/p&gt; &#xA;&lt;p&gt;This code was produced based on the baileys library and it is still under development.&lt;/p&gt; &#xA;&lt;h1&gt;Donate to the project.&lt;/h1&gt; &#xA;&lt;h4&gt;PicPay&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://app.picpay.com/user/davidsongomes1998&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/picpay-qr.jpeg&#34; style=&#34;width: 50% !important;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h4&gt;Buy me coffe - PIX&lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://bmc.link/evolutionapi&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/qrcode-pix.png&#34; style=&#34;width: 50% !important;&#34;&gt; &lt;/a&gt; &#xA; &lt;p&gt;&lt;b&gt;CHAVE PIX (Telefone):&lt;/b&gt; (74)99987-9409&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt;</summary>
  </entry>
</feed>