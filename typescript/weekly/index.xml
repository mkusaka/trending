<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T02:28:44Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>siyuan-note/siyuan</title>
    <updated>2022-06-05T02:28:44Z</updated>
    <id>tag:github.com,2022-06-05:/siyuan-note/siyuan</id>
    <link href="https://github.com/siyuan-note/siyuan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📕 SiYuan is a local-first personal knowledge management system, supports fine-grained block-level reference, and Markdown WYSIWYG. 思源笔记是一款本地优先的个人知识管理系统， 支持细粒度块级引用和 Markdown 所见即所得。Roadmap https://github.com/orgs/siyuan-note/projects/1&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;SiYuan&#34; src=&#34;https://b3log.org/images/brand/siyuan-128.png&#34;&gt; &lt;br&gt; Build Your Eternal Digital Garden &lt;br&gt;&lt;br&gt; &lt;a title=&#34;Releases&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/siyuan-note/siyuan.svg?style=flat-square&amp;amp;color=FF9900&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Downloads&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/siyuan-note/siyuan/total.svg?style=flat-square&amp;amp;color=blueviolet&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Docker Pulls&#34; target=&#34;_blank&#34; href=&#34;https://hub.docker.com/r/b3log/siyuan&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/b3log/siyuan.svg?style=flat-square&amp;amp;color=99CCFF&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Hits&#34; target=&#34;_blank&#34; href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;&lt;img src=&#34;https://hits.b3log.org/siyuan-note/siyuan.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/siyuan-note/siyuan/master/README_zh_CN.md&#34;&gt;中文&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;💡 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is a local-first personal knowledge management system, support fine-grained block-level reference and Markdown WYSIWYG.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://b3logfile.com/file/2022/05/feature0-a82bdd3f.png&#34; alt=&#34;feature0.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://b3logfile.com/file/2022/05/feature1-1-740d9a02.png&#34; alt=&#34;feature1-1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;h3&gt;Free&lt;/h3&gt; &#xA;&lt;p&gt;All local features are free.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Content block &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block-level reference and two-way links&lt;/li&gt; &#xA;   &lt;li&gt;Document relationship diagram, global relationship diagram&lt;/li&gt; &#xA;   &lt;li&gt;Custom attributes&lt;/li&gt; &#xA;   &lt;li&gt;SQL query embed&lt;/li&gt; &#xA;   &lt;li&gt;Protocol &lt;code&gt;siyuan://&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Editor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block-style&lt;/li&gt; &#xA;   &lt;li&gt;Markdown WYSIWYG&lt;/li&gt; &#xA;   &lt;li&gt;List outline&lt;/li&gt; &#xA;   &lt;li&gt;Block zoom-in&lt;/li&gt; &#xA;   &lt;li&gt;Block horizontal layout&lt;/li&gt; &#xA;   &lt;li&gt;Million-word large document editing&lt;/li&gt; &#xA;   &lt;li&gt;Mathematical formulas, charts, flowcharts, Gantt charts, timing charts, staffs, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Web clipping&lt;/li&gt; &#xA;   &lt;li&gt;PDF Annotation link&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Block ref and embed&lt;/li&gt; &#xA;   &lt;li&gt;Standard Markdown with assets&lt;/li&gt; &#xA;   &lt;li&gt;PDF, Word and HTML&lt;/li&gt; &#xA;   &lt;li&gt;Copy to WeChat MP, Zhihu and Yuque&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Community bazaar &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Themes&lt;/li&gt; &#xA;   &lt;li&gt;Icons&lt;/li&gt; &#xA;   &lt;li&gt;Templates&lt;/li&gt; &#xA;   &lt;li&gt;Widgets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hierarchical tag&lt;/li&gt; &#xA; &lt;li&gt;Multi-tab, drag and drop to split screen&lt;/li&gt; &#xA; &lt;li&gt;Fulltext search&lt;/li&gt; &#xA; &lt;li&gt;Template snippet&lt;/li&gt; &#xA; &lt;li&gt;Keymap&lt;/li&gt; &#xA; &lt;li&gt;Themes and icons&lt;/li&gt; &#xA; &lt;li&gt;Android APP&lt;/li&gt; &#xA; &lt;li&gt;iOS APP&lt;/li&gt; &#xA; &lt;li&gt;Docker deployment&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/raw/master/API.md&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid subscription&lt;/h3&gt; &#xA;&lt;p&gt;Cloud services require a paid subscription.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VIP identity&lt;/li&gt; &#xA; &lt;li&gt;End-to-end encrypted data synchronization&lt;/li&gt; &#xA; &lt;li&gt;End-to-end encrypted data backup&lt;/li&gt; &#xA; &lt;li&gt;Cloud assets serving&lt;/li&gt; &#xA; &lt;li&gt;WeChat notification&lt;/li&gt; &#xA; &lt;li&gt;Cloud inbox&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗺️ Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/projects&#34;&gt;SiYuan development plan and progress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/siyuan-note/siyuan/master/CHANGELOG.md&#34;&gt;SiYuan Change logs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛠️ Download Setup&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to give priority to installing through the application market on the desktop and mobile, so that you can upgrade the version with one click in the future.&lt;/p&gt; &#xA;&lt;h3&gt;App Market&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/siyuan/id1583226508&#34;&gt;App Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.b3log.siyuan&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/store/apps/9P7HPMXP73K4&#34;&gt;Microsoft Store&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Hosting&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Docker Deployment&lt;/summary&gt; &#xA; &lt;h4&gt;Overview&lt;/h4&gt; &#xA; &lt;p&gt;The easiest way to serve SiYuan on a server is to deploy it through Docker.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Image name &lt;code&gt;b3log/siyuan&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/b3log/siyuan&#34;&gt;Image URL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;File structure&lt;/h4&gt; &#xA; &lt;p&gt;The overall program is located under &lt;code&gt;/opt/siyuan/&lt;/code&gt;, which is basically the structure under the resources folder of the Electron installation package:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;appearance: icon, theme, languages&lt;/li&gt; &#xA;  &lt;li&gt;guide: user guide document&lt;/li&gt; &#xA;  &lt;li&gt;stage: interface and static resources&lt;/li&gt; &#xA;  &lt;li&gt;kernel: kernel program&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Entrypoint&lt;/h4&gt; &#xA; &lt;p&gt;The entry point is set when building the Docker image: &lt;code&gt;ENTRYPOINT [&#34;/opt/siyuan/kernel&#34; ]&lt;/code&gt;, use &lt;code&gt;docker run b3log/siyuan&lt;/code&gt; with parameters to start:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;--workspace&lt;/code&gt; specifies the workspace folder path, mounted to the container via &lt;code&gt;-v&lt;/code&gt; on the host&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;More parameters can refer to &lt;code&gt;--help&lt;/code&gt;. The following is an example of a startup command: &lt;code&gt;docker run -v workspace_dir_host:workspace_dir_container -p 6806:6806 b3log/siyuan --workspace=workspace_dir_container&lt;/code&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;workspace_dir_host&lt;/code&gt;: the workspace folder path on the host&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;workspace_dir_container&lt;/code&gt;: The path of the workspace folder in the container, which is the same as specified in &lt;code&gt;--workspace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;To simplify, it is recommended to configure the workspace folder path to be consistent on the host and container, such as: &lt;code&gt;workspace_dir_host&lt;/code&gt; and &lt;code&gt;workspace_dir_container&lt;/code&gt; are configured as &lt;code&gt;/siyuan/workspace&lt;/code&gt;, the corresponding startup commands is: &lt;code&gt;docker run -v /siyuan/workspace:/siyuan/workspace -p 6806:6806 -u 1000:1000 b3log/siyuan --workspace=/siyuan/workspace/&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;User permissions&lt;/h4&gt; &#xA; &lt;p&gt;In the image, the normal user &lt;code&gt;siyuan&lt;/code&gt; (uid 1000/gid 1000) created by default is used to start the kernel process. Therefore, when the host creates a workspace folder, please pay attention to setting the user group of the folder: &lt;code&gt;chown -R 1000:1000 /siyuan/workspace&lt;/code&gt;. The parameter &lt;code&gt;-u 1000:1000&lt;/code&gt; is required when starting the container.&lt;/p&gt; &#xA; &lt;h4&gt;Hidden port&lt;/h4&gt; &#xA; &lt;p&gt;Use NGINX reverse proxy to hide port 6806, please note:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Configure WebSocket reverse proxy &lt;code&gt;/ws&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Installation Package&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://b3log.org/siyuan/en/download.html&#34;&gt;B3log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/releases&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Insider Preview&lt;/h3&gt; &#xA;&lt;p&gt;To get the latest Insider Preview, please send an email with your GitHub login name to &lt;a href=&#34;mailto:845765@qq.com&#34;&gt;845765@qq.com&lt;/a&gt;, and we will invite you to join the SiYuan Insider Preview team, thanks.&lt;/p&gt; &#xA;&lt;h2&gt;🏘️ Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;❓ FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How does SiYuan store data?&lt;/h3&gt; &#xA;&lt;p&gt;The data is saved in the workspace folder (the default is in the user&#39;s home directory Documents/SiYuan, which can be modified in &lt;kbd&gt;Settings&lt;/kbd&gt; - &lt;kbd&gt;About&lt;/kbd&gt;), in the workspace data folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; are used to save all inserted asset files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;templates&lt;/code&gt; are used to save template snippets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;widgets&lt;/code&gt; are used to save widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;emojis&lt;/code&gt; are used to save emoji images&lt;/li&gt; &#xA; &lt;li&gt;The rest of the folders are the notebook folders created by the user, files with the suffix of &lt;code&gt;.sy&lt;/code&gt; in the notebook folder are used to save the document data, and the data format is JSON&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Is SiYuan open source?&lt;/h3&gt; &#xA;&lt;p&gt;SiYuan is completely open source, and contributions are welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;User Interface and Kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/user-guide-en_US&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/appearance&#34;&gt;Appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;Data Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;Editor Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;End-to-end encryption&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-chrome&#34;&gt;Chrome Clipping Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/siyuan-note/siyuan/master/.github/CONTRIBUTING.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Is there any note for deleting docs?&lt;/h3&gt; &#xA;&lt;p&gt;After deletion, the doc will not appear in the operating system&#39;s recycle bin, but will be deleted directly. When deleted, SiYuan will generate edit history.&lt;/p&gt; &#xA;&lt;h3&gt;How can I just wrap and not start a new paragraph?&lt;/h3&gt; &#xA;&lt;p&gt;Please use &lt;kbd&gt;Shift+Enter&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How to move the heading and blocks below it?&lt;/h3&gt; &#xA;&lt;p&gt;Fold the heading and move it later.&lt;/p&gt; &#xA;&lt;h3&gt;How to select multiple blocks across pages?&lt;/h3&gt; &#xA;&lt;p&gt;Click at the beginning, hold down &lt;kbd&gt;Shift&lt;/kbd&gt; and click at the end after scrolling the page.&lt;/p&gt; &#xA;&lt;h3&gt;How to adjust table rows and columns?&lt;/h3&gt; &#xA;&lt;p&gt;There is an operation entry in the block icon menu of the table block.&lt;/p&gt; &#xA;&lt;h3&gt;How to use a third-party sync disk for data synchronization?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please only synchronize the &lt;code&gt;workspace/data/&lt;/code&gt;, do not synchronize the entire workspace&lt;/li&gt; &#xA; &lt;li&gt;Please suspend third-party synchronization during the operation of SiYuan, otherwise data may be damaged. For details, please refer to &lt;a href=&#34;https://ld246.com/article/1626537583158&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The data folder path on the Android is &lt;code&gt;internal storage device/Android/data/org.b3log.siyuan/files/siyuan/data/&lt;/code&gt;, which is a private path of the application and cannot be read by other programs and can only be copied manually&lt;/li&gt; &#xA; &lt;li&gt;There is a conflict between third-party synchronization and SiYuan synchronization, please do not use at the same time&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What should I do if I forget the end-to-end password?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the new workspace on the main device, manually copy the old workspace data folder to the new workspace&lt;/li&gt; &#xA; &lt;li&gt;New workspace can reset password&lt;/li&gt; &#xA; &lt;li&gt;The cloud uses the new cloud synchronization directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If it is a mobile-end, uninstall and reinstall it (note: When the mobile-enduninstalls the application, the local workspace data will be deleted together).&lt;/p&gt; &#xA;&lt;h3&gt;Do I need to pay for it?&lt;/h3&gt; &#xA;&lt;p&gt;Local functions are completely free to use, &lt;a href=&#34;https://b3log.org/siyuan/pricing.html&#34;&gt;Cloud services&lt;/a&gt; requires annual subscription, price is $72/year。&lt;/p&gt; &#xA;&lt;p&gt;Users in non-Mainland China regions should not pay for subscriptions, because SiYuan Cloud Server cannot guarantee availability in non-Mainland China regions.&lt;/p&gt; &#xA;&lt;h2&gt;💌 Participate in contribution&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is completely open source, and contributions are welcome:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan&#34;&gt;User Interface and Kernel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/user-guide-en_US&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/appearance&#34;&gt;Appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;Data Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;Editor Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;End-to-end encryption&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-chrome&#34;&gt;Chrome Clipping Extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/siyuan-ios&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/siyuan-note/siyuan/master/.github/CONTRIBUTING.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🙏 Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;SiYuan is made possible by the following open source projects.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/golang/go&#34;&gt;https://github.com/golang/go&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atotto/clipboard&#34;&gt;https://github.com/atotto/clipboard&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanng822/css&#34;&gt;https://github.com/vanng822/css&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gofrs/flock&#34;&gt;https://github.com/gofrs/flock&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/gulu&#34;&gt;https://github.com/88250/gulu&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/lute&#34;&gt;https://github.com/88250/lute&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olahol/melody&#34;&gt;https://github.com/olahol/melody&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pdfcpu/pdfcpu&#34;&gt;https://github.com/pdfcpu/pdfcpu&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/88250/protyle&#34;&gt;https://github.com/88250/protyle&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blastrain/vitess-sqlparser&#34;&gt;https://github.com/blastrain/vitess-sqlparser&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ConradIrwin/font&#34;&gt;https://github.com/ConradIrwin/font&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Masterminds/sprig&#34;&gt;https://github.com/Masterminds/sprig&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PuerkitoBio/goquery&#34;&gt;https://github.com/PuerkitoBio/goquery&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/araddon/dateparse&#34;&gt;https://github.com/araddon/dateparse&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/common-nighthawk/go-figure&#34;&gt;https://github.com/common-nighthawk/go-figure&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/denisbrodbeck/machineid&#34;&gt;https://github.com/denisbrodbeck/machineid&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgraph-io/ristretto&#34;&gt;https://github.com/dgraph-io/ristretto&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dustin/go-humanize&#34;&gt;https://github.com/dustin/go-humanize&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emirpasic/gods&#34;&gt;https://github.com/emirpasic/gods&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facette/natsort&#34;&gt;https://github.com/facette/natsort&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flopp/go-findfont&#34;&gt;https://github.com/flopp/go-findfont&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fsnotify/fsnotify&#34;&gt;https://github.com/fsnotify/fsnotify&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabriel-vasile/mimetype&#34;&gt;https://github.com/gabriel-vasile/mimetype&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/cors&#34;&gt;https://github.com/gin-contrib/cors&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/gzip&#34;&gt;https://github.com/gin-contrib/gzip&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-contrib/sessions&#34;&gt;https://github.com/gin-contrib/sessions&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;https://github.com/gin-gonic/gin&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imroc/req&#34;&gt;https://github.com/imroc/req&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jinzhu/copier&#34;&gt;https://github.com/jinzhu/copier&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-sqlite3&#34;&gt;https://github.com/mattn/go-sqlite3&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-zglob&#34;&gt;https://github.com/mattn/go-zglob&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitchellh/go-ps&#34;&gt;https://github.com/mitchellh/go-ps&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mssola/user_agent&#34;&gt;https://github.com/mssola/user_agent&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/panjf2000/ants&#34;&gt;https://github.com/panjf2000/ants&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patrickmn/go-cache&#34;&gt;https://github.com/patrickmn/go-cache&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radovskyb/watcher&#34;&gt;https://github.com/radovskyb/watcher&lt;/a&gt; &lt;code&gt;BSD-3-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siyuan-note/encryption&#34;&gt;https://github.com/siyuan-note/encryption&lt;/a&gt; &lt;code&gt;Mulan PSL v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmihailenco/msgpack&#34;&gt;https://github.com/vmihailenco/msgpack&lt;/a&gt; &lt;code&gt;BSD-2-Clause License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xrash/smetrics&#34;&gt;https://github.com/xrash/smetrics&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript&#34;&gt;https://github.com/microsoft/TypeScript&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/electron&#34;&gt;https://github.com/electron/electron&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vanessa219/vditor&#34;&gt;https://github.com/Vanessa219/vditor&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/visjs/vis-network&#34;&gt;https://github.com/visjs/vis-network&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/pdf.js&#34;&gt;https://github.com/mozilla/pdf.js&lt;/a&gt; &lt;code&gt;Apache-2.0 License&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blueimp/JavaScript-MD5&#34;&gt;https://github.com/blueimp/JavaScript-MD5&lt;/a&gt; &lt;code&gt;MIT License&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>backstage/backstage</title>
    <updated>2022-06-05T02:28:44Z</updated>
    <id>tag:github.com,2022-06-05:/backstage/backstage</id>
    <link href="https://github.com/backstage/backstage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backstage is an open platform for building developer portals&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/backstage/backstage/master/docs/assets/headline.png&#34; alt=&#34;headline&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://backstage.io&#34;&gt;Backstage&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cncf.io/projects&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cncf%20status-incubation-blue.svg?sanitize=true&#34; alt=&#34;CNCF Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/backstage/backstage/actions?query=workflow%3A%22Main+Master+Build%22&#34;&gt;&lt;img src=&#34;https://github.com/backstage/backstage/workflows/Main%20Master%20Build/badge.svg?sanitize=true&#34; alt=&#34;Main CI Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/EBHEGzX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/687207715902193673&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true&#34; alt=&#34;Code style&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/backstage/backstage&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/backstage/backstage&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/backstage/backstage/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@backstage/core?label=Version&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Backstage?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://backstage.io/&#34;&gt;Backstage&lt;/a&gt; is an open platform for building developer portals. Powered by a centralized software catalog, Backstage restores order to your microservices and infrastructure and enables your product teams to ship high-quality code quickly — without compromising autonomy.&lt;/p&gt; &#xA;&lt;p&gt;Backstage unifies all your infrastructure tooling, services, and documentation to create a streamlined development environment from end to end.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://backstage.io/blog/assets/6/header.png&#34; alt=&#34;software-catalog&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Out of the box, Backstage includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-catalog/software-catalog-overview&#34;&gt;Backstage Software Catalog&lt;/a&gt; for managing all your software (microservices, libraries, data pipelines, websites, ML models, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-templates/software-templates-index&#34;&gt;Backstage Software Templates&lt;/a&gt; for quickly spinning up new projects and standardizing your tooling with your organization’s best practices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/techdocs/techdocs-overview&#34;&gt;Backstage TechDocs&lt;/a&gt; for making it easy to create, maintain, find, and use technical documentation, using a &#34;docs like code&#34; approach&lt;/li&gt; &#xA; &lt;li&gt;Plus, a growing ecosystem of &lt;a href=&#34;https://github.com/backstage/backstage/tree/master/plugins&#34;&gt;open source plugins&lt;/a&gt; that further expand Backstage’s customizability and functionality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Backstage was created by Spotify but is now hosted by the &lt;a href=&#34;https://www.cncf.io&#34;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; as an Incubation level project. Read the announcement &lt;a href=&#34;https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project roadmap&lt;/h2&gt; &#xA;&lt;p&gt;A detailed project roadmap, including already delivered milestones, is available &lt;a href=&#34;https://backstage.io/docs/overview/roadmap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://backstage.io/docs/getting-started&#34;&gt;the documentation&lt;/a&gt; on how to start using Backstage.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs&#34;&gt;Main documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/features/software-catalog/software-catalog-overview&#34;&gt;Software Catalog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/overview/architecture-overview&#34;&gt;Architecture&lt;/a&gt; (&lt;a href=&#34;https://backstage.io/docs/architecture-decisions/adrs-overview&#34;&gt;Decisions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/dls/design&#34;&gt;Designing for Backstage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/storybook&#34;&gt;Storybook - UI components&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/MUpMjP2&#34;&gt;Discord chatroom&lt;/a&gt; - Get support or discuss the project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/backstage/raw/master/CONTRIBUTING.md&#34;&gt;Contributing to Backstage&lt;/a&gt; - Start here if you want to contribute&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/backstage/labels/rfc&#34;&gt;RFCs&lt;/a&gt; - Help shape the technical direction&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/docs/FAQ&#34;&gt;FAQ&lt;/a&gt; - Frequently Asked Questions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; - This is how we roll&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/ADOPTERS.md&#34;&gt;Adopters&lt;/a&gt; - Companies already using Backstage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backstage.io/blog/&#34;&gt;Blog&lt;/a&gt; - Announcements and updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mailchi.mp/spotify/backstage-community&#34;&gt;Newsletter&lt;/a&gt; - Subscribe to our email newsletter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backstage/community&#34;&gt;Backstage Community Sessions&lt;/a&gt; - Join monthly meetup and explore Backstage community&lt;/li&gt; &#xA; &lt;li&gt;Give us a star ⭐️ - If you are using Backstage or think it is an interesting project, we would love a star ❤️&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2020-2022 © The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: &lt;a href=&#34;https://www.linuxfoundation.org/trademark-usage&#34;&gt;https://www.linuxfoundation.org/trademark-usage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please report sensitive security issues via Spotify&#39;s &lt;a href=&#34;https://hackerone.com/spotify&#34;&gt;bug-bounty program&lt;/a&gt; rather than GitHub.&lt;/p&gt; &#xA;&lt;p&gt;For further details please see our complete &lt;a href=&#34;https://raw.githubusercontent.com/backstage/backstage/master/SECURITY.md&#34;&gt;security release process&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>puppeteer/puppeteer</title>
    <updated>2022-06-05T02:28:44Z</updated>
    <id>tag:github.com,2022-06-05:/puppeteer/puppeteer</id>
    <link href="https://github.com/puppeteer/puppeteer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Headless Chrome Node.js API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Puppeteer&lt;/h1&gt; &#xA;&lt;!-- [START badges] --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/actions?query=workflow%3Arun-checks&#34;&gt;&lt;img src=&#34;https://github.com/puppeteer/puppeteer/workflows/run-checks/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://npmjs.org/package/puppeteer&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/puppeteer.svg?sanitize=true&#34; alt=&#34;npm puppeteer package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [END badges] --&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png&#34; height=&#34;200&#34; align=&#34;right&#34;&gt; &#xA;&lt;h6&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md&#34;&gt;API&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/puppeteer/puppeteer/main/#faq&#34;&gt;FAQ&lt;/a&gt; | &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; | &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;DevTools Protocol&lt;/a&gt;. Puppeteer runs &lt;a href=&#34;https://developers.google.com/web/updates/2017/04/headless-chrome&#34;&gt;headless&lt;/a&gt; by default, but can be configured to run full (non-headless) Chrome or Chromium.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- [START usecases] --&gt; &#xA;&lt;h6&gt;What can I do?&lt;/h6&gt; &#xA;&lt;p&gt;Most things that you can do manually in the browser can be done using Puppeteer! Here are a few examples to get you started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate screenshots and PDFs of pages.&lt;/li&gt; &#xA; &lt;li&gt;Crawl a SPA (Single-Page Application) and generate pre-rendered content (i.e. &#34;SSR&#34; (Server-Side Rendering)).&lt;/li&gt; &#xA; &lt;li&gt;Automate form submission, UI testing, keyboard input, etc.&lt;/li&gt; &#xA; &lt;li&gt;Create an up-to-date, automated testing environment. Run your tests directly in the latest version of Chrome using the latest JavaScript and browser features.&lt;/li&gt; &#xA; &lt;li&gt;Capture a &lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference&#34;&gt;timeline trace&lt;/a&gt; of your site to help diagnose performance issues.&lt;/li&gt; &#xA; &lt;li&gt;Test Chrome Extensions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- [END usecases] --&gt; &#xA;&lt;!-- [START getstarted] --&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;To use Puppeteer in your project, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i puppeteer&#xA;# or &#34;yarn add puppeteer&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: When you install Puppeteer, it downloads a recent version of Chromium (~170MB Mac, ~282MB Linux, ~280MB Win) that is guaranteed to work with the API. To skip the download, download into another path, or download a different browser, see &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#environment-variables&#34;&gt;Environment variables&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;puppeteer-core&lt;/h3&gt; &#xA;&lt;p&gt;Since version 1.7.0 we publish the &lt;a href=&#34;https://www.npmjs.com/package/puppeteer-core&#34;&gt;&lt;code&gt;puppeteer-core&lt;/code&gt;&lt;/a&gt; package, a version of Puppeteer that doesn&#39;t download any browser by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i puppeteer-core&#xA;# or &#34;yarn add puppeteer-core&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;puppeteer-core&lt;/code&gt; is intended to be a lightweight version of Puppeteer for launching an existing browser installation or for connecting to a remote one. Be sure that the version of puppeteer-core you install is compatible with the browser you intend to connect to.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#puppeteer-vs-puppeteer-core&#34;&gt;puppeteer vs puppeteer-core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Puppeteer follows the latest &lt;a href=&#34;https://github.com/nodejs/Release#release-schedule&#34;&gt;maintenance LTS&lt;/a&gt; version of Node.&lt;/p&gt; &#xA;&lt;p&gt;Note: Prior to v1.18.1, Puppeteer required at least Node v6.4.0. Versions from v1.18.1 to v2.1.0 rely on Node 8.9.0+. Starting from v3.0.0 Puppeteer starts to rely on Node 10.18.1+. All examples below use async/await which is only supported in Node v7.6.0 or greater.&lt;/p&gt; &#xA;&lt;p&gt;Puppeteer will be familiar to people using other browser testing frameworks. You create an instance of &lt;code&gt;Browser&lt;/code&gt;, open pages, and then manipulate them with &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#&#34;&gt;Puppeteer&#39;s API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - navigating to &lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt; and saving a screenshot as &lt;em&gt;example.png&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Save file as &lt;strong&gt;example.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const puppeteer = require(&#39;puppeteer&#39;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const browser = await puppeteer.launch();&#xA;  const page = await browser.newPage();&#xA;  await page.goto(&#39;https://example.com&#39;);&#xA;  await page.screenshot({ path: &#39;example.png&#39; });&#xA;&#xA;  await browser.close();&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute script on the command line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node example.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Puppeteer sets an initial page size to 800×600px, which defines the screenshot size. The page size can be customized with &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#pagesetviewportviewport&#34;&gt;&lt;code&gt;Page.setViewport()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - create a PDF.&lt;/p&gt; &#xA;&lt;p&gt;Save file as &lt;strong&gt;hn.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const puppeteer = require(&#39;puppeteer&#39;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const browser = await puppeteer.launch();&#xA;  const page = await browser.newPage();&#xA;  await page.goto(&#39;https://news.ycombinator.com&#39;, {&#xA;    waitUntil: &#39;networkidle2&#39;,&#xA;  });&#xA;  await page.pdf({ path: &#39;hn.pdf&#39;, format: &#39;a4&#39; });&#xA;&#xA;  await browser.close();&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute script on the command line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node hn.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#pagepdfoptions&#34;&gt;&lt;code&gt;Page.pdf()&lt;/code&gt;&lt;/a&gt; for more information about creating pdfs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; - evaluate script in the context of the page&lt;/p&gt; &#xA;&lt;p&gt;Save file as &lt;strong&gt;get-dimensions.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const puppeteer = require(&#39;puppeteer&#39;);&#xA;&#xA;(async () =&amp;gt; {&#xA;  const browser = await puppeteer.launch();&#xA;  const page = await browser.newPage();&#xA;  await page.goto(&#39;https://example.com&#39;);&#xA;&#xA;  // Get the &#34;viewport&#34; of the page, as reported by the page.&#xA;  const dimensions = await page.evaluate(() =&amp;gt; {&#xA;    return {&#xA;      width: document.documentElement.clientWidth,&#xA;      height: document.documentElement.clientHeight,&#xA;      deviceScaleFactor: window.devicePixelRatio,&#xA;    };&#xA;  });&#xA;&#xA;  console.log(&#39;Dimensions:&#39;, dimensions);&#xA;&#xA;  await browser.close();&#xA;})();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Execute script on the command line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node get-dimensions.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#pageevaluatepagefunction-args&#34;&gt;&lt;code&gt;Page.evaluate()&lt;/code&gt;&lt;/a&gt; for more information on &lt;code&gt;evaluate&lt;/code&gt; and related methods like &lt;code&gt;evaluateOnNewDocument&lt;/code&gt; and &lt;code&gt;exposeFunction&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- [END getstarted] --&gt; &#xA;&lt;!-- [START runtimesettings] --&gt; &#xA;&lt;h2&gt;Default runtime settings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Uses Headless mode&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Puppeteer launches Chromium in &lt;a href=&#34;https://developers.google.com/web/updates/2017/04/headless-chrome&#34;&gt;headless mode&lt;/a&gt;. To launch a full version of Chromium, set the &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#puppeteerlaunchoptions&#34;&gt;&lt;code&gt;headless&lt;/code&gt; option&lt;/a&gt; when launching a browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browser = await puppeteer.launch({ headless: false }); // default is true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Runs a bundled version of Chromium&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;By default, Puppeteer downloads and uses a specific version of Chromium so its API is guaranteed to work out of the box. To use Puppeteer with a different version of Chrome or Chromium, pass in the executable&#39;s path when creating a &lt;code&gt;Browser&lt;/code&gt; instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browser = await puppeteer.launch({ executablePath: &#39;/path/to/Chrome&#39; });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use Puppeteer with Firefox Nightly (experimental support). See &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#puppeteerlaunchoptions&#34;&gt;&lt;code&gt;Puppeteer.launch()&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/&#34;&gt;&lt;code&gt;this article&lt;/code&gt;&lt;/a&gt; for a description of the differences between Chromium and Chrome. &lt;a href=&#34;https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/chromium_browser_vs_google_chrome.md&#34;&gt;&lt;code&gt;This article&lt;/code&gt;&lt;/a&gt; describes some differences for Linux users.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Creates a fresh user profile&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Puppeteer creates its own browser user profile which it &lt;strong&gt;cleans up on every run&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;!-- [END runtimesettings] --&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/tree/main/examples/&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/awesome-puppeteer&#34;&gt;Community list of Puppeteer resources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- [START debugging] --&gt; &#xA;&lt;h2&gt;Debugging tips&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Turn off headless mode - sometimes it&#39;s useful to see what the browser is displaying. Instead of launching in headless mode, launch a full version of the browser using &lt;code&gt;headless: false&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browser = await puppeteer.launch({ headless: false });&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Slow it down - the &lt;code&gt;slowMo&lt;/code&gt; option slows down Puppeteer operations by the specified amount of milliseconds. It&#39;s another way to help see what&#39;s going on.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browser = await puppeteer.launch({&#xA;  headless: false,&#xA;  slowMo: 250, // slow down by 250ms&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture console output - You can listen for the &lt;code&gt;console&lt;/code&gt; event. This is also handy when debugging code in &lt;code&gt;page.evaluate()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;page.on(&#39;console&#39;, (msg) =&amp;gt; console.log(&#39;PAGE LOG:&#39;, msg.text()));&#xA;&#xA;await page.evaluate(() =&amp;gt; console.log(`url is ${location.href}`));&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use debugger in application code browser&lt;/p&gt; &lt;p&gt;There are two execution context: node.js that is running test code, and the browser running application code being tested. This lets you debug code in the application code browser; ie code inside &lt;code&gt;evaluate()&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Use &lt;code&gt;{devtools: true}&lt;/code&gt; when launching Puppeteer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const browser = await puppeteer.launch({ devtools: true });&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Change default test timeout:&lt;/p&gt; &lt;p&gt;jest: &lt;code&gt;jest.setTimeout(100000);&lt;/code&gt;&lt;/p&gt; &lt;p&gt;jasmine: &lt;code&gt;jasmine.DEFAULT_TIMEOUT_INTERVAL = 100000;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;mocha: &lt;code&gt;this.timeout(100000);&lt;/code&gt; (don&#39;t forget to change test to use &lt;a href=&#34;https://stackoverflow.com/a/23492442&#34;&gt;function and not &#39;=&amp;gt;&#39;&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Add an evaluate statement with &lt;code&gt;debugger&lt;/code&gt; inside / add &lt;code&gt;debugger&lt;/code&gt; to an existing evaluate statement:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await page.evaluate(() =&amp;gt; {&#xA;  debugger;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The test will now stop executing in the above evaluate statement, and chromium will stop in debug mode.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use debugger in node.js&lt;/p&gt; &lt;p&gt;This will let you debug test code. For example, you can step over &lt;code&gt;await page.click()&lt;/code&gt; in the node.js script and see the click happen in the application code browser.&lt;/p&gt; &lt;p&gt;Note that you won&#39;t be able to run &lt;code&gt;await page.click()&lt;/code&gt; in DevTools console due to this &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=833928&#34;&gt;Chromium bug&lt;/a&gt;. So if you want to try something out, you have to add it to your test file.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Add &lt;code&gt;debugger;&lt;/code&gt; to your test, eg:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;debugger;&#xA;await page.click(&#39;a[target=_blank]&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Set &lt;code&gt;headless&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Run &lt;code&gt;node --inspect-brk&lt;/code&gt;, eg &lt;code&gt;node --inspect-brk node_modules/.bin/jest tests&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In Chrome open &lt;code&gt;chrome://inspect/#devices&lt;/code&gt; and click &lt;code&gt;inspect&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In the newly opened test browser, type &lt;code&gt;F8&lt;/code&gt; to resume test execution&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Now your &lt;code&gt;debugger&lt;/code&gt; will be hit and you can debug in the test browser&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable verbose logging - internal DevTools protocol traffic will be logged via the &lt;a href=&#34;https://github.com/visionmedia/debug&#34;&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; module under the &lt;code&gt;puppeteer&lt;/code&gt; namespace.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; # Basic verbose logging&#xA; env DEBUG=&#34;puppeteer:*&#34; node script.js&#xA;&#xA; # Protocol traffic can be rather noisy. This example filters out all Network domain messages&#xA; env DEBUG=&#34;puppeteer:*&#34; env DEBUG_COLORS=true node script.js 2&amp;gt;&amp;amp;1 | grep -v &#39;&#34;Network&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debug your Puppeteer (node) code easily, using &lt;a href=&#34;https://github.com/GoogleChromeLabs/ndb&#34;&gt;ndb&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm install -g ndb&lt;/code&gt; (or even better, use &lt;a href=&#34;https://github.com/zkat/npx&#34;&gt;npx&lt;/a&gt;!)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;add a &lt;code&gt;debugger&lt;/code&gt; to your Puppeteer (node) code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;add &lt;code&gt;ndb&lt;/code&gt; (or &lt;code&gt;npx ndb&lt;/code&gt;) before your test command. For example:&lt;/p&gt; &lt;p&gt;&lt;code&gt;ndb jest&lt;/code&gt; or &lt;code&gt;ndb mocha&lt;/code&gt; (or &lt;code&gt;npx ndb jest&lt;/code&gt; / &lt;code&gt;npx ndb mocha&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;debug your test inside chromium like a boss!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- [END debugging] --&gt; &#xA;&lt;!-- [START typescript] --&gt; &#xA;&lt;h2&gt;Usage with TypeScript&lt;/h2&gt; &#xA;&lt;p&gt;We have recently completed a migration to move the Puppeteer source code from JavaScript to TypeScript and as of version 7.0.1 we ship our own built-in type definitions.&lt;/p&gt; &#xA;&lt;p&gt;If you are on a version older than 7, we recommend installing the Puppeteer type definitions from the &lt;a href=&#34;https://definitelytyped.org/&#34;&gt;DefinitelyTyped&lt;/a&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --save-dev @types/puppeteer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The types that you&#39;ll see appearing in the Puppeteer source code are based off the great work of those who have contributed to the &lt;code&gt;@types/puppeteer&lt;/code&gt; package. We really appreciate the hard work those people put in to providing high quality TypeScript definitions for Puppeteer&#39;s users.&lt;/p&gt; &#xA;&lt;!-- [END typescript] --&gt; &#xA;&lt;h2&gt;Contributing to Puppeteer&lt;/h2&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to get an overview of Puppeteer development.&lt;/p&gt; &#xA;&lt;!-- [START faq] --&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h4&gt;Q: Who maintains Puppeteer?&lt;/h4&gt; &#xA;&lt;p&gt;The Chrome DevTools team maintains the library, but we&#39;d love your help and expertise on the project! See &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Q: What is the status of cross-browser support?&lt;/h4&gt; &#xA;&lt;p&gt;Official Firefox support is currently experimental. The ongoing collaboration with Mozilla aims to support common end-to-end testing use cases, for which developers expect cross-browser coverage. The Puppeteer team needs input from users to stabilize Firefox support and to bring missing APIs to our attention.&lt;/p&gt; &#xA;&lt;p&gt;From Puppeteer v2.1.0 onwards you can specify &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#puppeteerlaunchoptions&#34;&gt;&lt;code&gt;puppeteer.launch({product: &#39;firefox&#39;})&lt;/code&gt;&lt;/a&gt; to run your Puppeteer scripts in Firefox Nightly, without any additional custom patches. While &lt;a href=&#34;https://www.npmjs.com/package/puppeteer-firefox&#34;&gt;an older experiment&lt;/a&gt; required a patched version of Firefox, &lt;a href=&#34;https://wiki.mozilla.org/Remote&#34;&gt;the current approach&lt;/a&gt; works with “stock” Firefox.&lt;/p&gt; &#xA;&lt;p&gt;We will continue to collaborate with other browser vendors to bring Puppeteer support to browsers such as Safari. This effort includes exploration of a standard for executing cross-browser commands (instead of relying on the non-standard DevTools Protocol used by Chrome).&lt;/p&gt; &#xA;&lt;h4&gt;Q: What are Puppeteer’s goals and principles?&lt;/h4&gt; &#xA;&lt;p&gt;The goals of the project are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide a slim, canonical library that highlights the capabilities of the &lt;a href=&#34;https://chromedevtools.github.io/devtools-protocol/&#34;&gt;DevTools Protocol&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Provide a reference implementation for similar testing libraries. Eventually, these other frameworks could adopt Puppeteer as their foundational layer.&lt;/li&gt; &#xA; &lt;li&gt;Grow the adoption of headless/automated browser testing.&lt;/li&gt; &#xA; &lt;li&gt;Help dogfood new DevTools Protocol features...and catch bugs!&lt;/li&gt; &#xA; &lt;li&gt;Learn more about the pain points of automated browser testing and help fill those gaps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We adapt &lt;a href=&#34;https://www.chromium.org/developers/core-principles&#34;&gt;Chromium principles&lt;/a&gt; to help us drive product decisions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt;: Puppeteer has almost zero performance overhead over an automated page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Puppeteer operates off-process with respect to Chromium, making it safe to automate potentially malicious pages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: Puppeteer should not be flaky and should not leak memory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;: Puppeteer provides a high-level API that’s easy to use, understand, and debug.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Q: Is Puppeteer replacing Selenium/WebDriver?&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;No&lt;/strong&gt;. Both projects are valuable for very different reasons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Selenium/WebDriver focuses on cross-browser automation; its value proposition is a single standard API that works across all major browsers.&lt;/li&gt; &#xA; &lt;li&gt;Puppeteer focuses on Chromium; its value proposition is richer functionality and higher reliability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That said, you &lt;strong&gt;can&lt;/strong&gt; use Puppeteer to run tests against Chromium, e.g. using the community-driven &lt;a href=&#34;https://github.com/smooth-code/jest-puppeteer&#34;&gt;jest-puppeteer&lt;/a&gt;. While this probably shouldn’t be your only testing solution, it does have a few good points compared to WebDriver:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Puppeteer requires zero setup and comes bundled with the Chromium version it works best with, making it &lt;a href=&#34;https://github.com/puppeteer/puppeteer/#getting-started&#34;&gt;very easy to start with&lt;/a&gt;. At the end of the day, it’s better to have a few tests running chromium-only, than no tests at all.&lt;/li&gt; &#xA; &lt;li&gt;Puppeteer has event-driven architecture, which removes a lot of potential flakiness. There’s no need for evil “sleep(1000)” calls in puppeteer scripts.&lt;/li&gt; &#xA; &lt;li&gt;Puppeteer runs headless by default, which makes it fast to run. Puppeteer v1.5.0 also exposes browser contexts, making it possible to efficiently parallelize test execution.&lt;/li&gt; &#xA; &lt;li&gt;Puppeteer shines when it comes to debugging: flip the “headless” bit to false, add “slowMo”, and you’ll see what the browser is doing. You can even open Chrome DevTools to inspect the test environment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Q: Why doesn’t Puppeteer v.XXX work with Chromium v.YYY?&lt;/h4&gt; &#xA;&lt;p&gt;We see Puppeteer as an &lt;strong&gt;indivisible entity&lt;/strong&gt; with Chromium. Each version of Puppeteer bundles a specific version of Chromium – &lt;strong&gt;the only&lt;/strong&gt; version it is guaranteed to work with.&lt;/p&gt; &#xA;&lt;p&gt;This is not an artificial constraint: A lot of work on Puppeteer is actually taking place in the Chromium repository. Here’s a typical story:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Puppeteer bug is reported: &lt;a href=&#34;https://github.com/puppeteer/puppeteer/issues/2709&#34;&gt;https://github.com/puppeteer/puppeteer/issues/2709&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;It turned out this is an issue with the DevTools protocol, so we’re fixing it in Chromium: &lt;a href=&#34;https://chromium-review.googlesource.com/c/chromium/src/+/1102154&#34;&gt;https://chromium-review.googlesource.com/c/chromium/src/+/1102154&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Once the upstream fix is landed, we roll updated Chromium into Puppeteer: &lt;a href=&#34;https://github.com/puppeteer/puppeteer/pull/2769&#34;&gt;https://github.com/puppeteer/puppeteer/pull/2769&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;However, oftentimes it is desirable to use Puppeteer with the official Google Chrome rather than Chromium. For this to work, you should install a &lt;code&gt;puppeteer-core&lt;/code&gt; version that corresponds to the Chrome version.&lt;/p&gt; &#xA;&lt;p&gt;For example, in order to drive Chrome 71 with puppeteer-core, use &lt;code&gt;chrome-71&lt;/code&gt; npm tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install puppeteer-core@chrome-71&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Q: Which Chromium version does Puppeteer use?&lt;/h4&gt; &#xA;&lt;p&gt;Find the version using one of the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Look for the &lt;code&gt;chromium&lt;/code&gt; entry in &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/src/revisions.ts&#34;&gt;revisions.ts&lt;/a&gt;. To find the corresponding Chromium commit and version number, search for the revision prefixed by an &lt;code&gt;r&lt;/code&gt; in &lt;a href=&#34;https://omahaproxy.appspot.com/&#34;&gt;OmahaProxy&lt;/a&gt;&#39;s &#34;Find Releases&#34; section.&lt;/li&gt; &#xA; &lt;li&gt;Look for the &lt;code&gt;versionsPerRelease&lt;/code&gt; map in &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/versions.js&#34;&gt;versions.js&lt;/a&gt; which contains mapping between Chromium and Puppeteer versions. Note: The file contains only Puppeteer versions where Chromium is updated. Not all Puppeteer versions are listed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Q: Which Firefox version does Puppeteer use?&lt;/h4&gt; &#xA;&lt;p&gt;Since Firefox support is experimental, Puppeteer downloads the latest &lt;a href=&#34;https://wiki.mozilla.org/Nightly&#34;&gt;Firefox Nightly&lt;/a&gt; when the &lt;code&gt;PUPPETEER_PRODUCT&lt;/code&gt; environment variable is set to &lt;code&gt;firefox&lt;/code&gt;. That&#39;s also why the value of &lt;code&gt;firefox&lt;/code&gt; in &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/src/revisions.ts&#34;&gt;revisions.ts&lt;/a&gt; is &lt;code&gt;latest&lt;/code&gt; -- Puppeteer isn&#39;t tied to a particular Firefox version.&lt;/p&gt; &#xA;&lt;p&gt;To fetch Firefox Nightly as part of Puppeteer installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PUPPETEER_PRODUCT=firefox npm i puppeteer&#xA;# or &#34;yarn add puppeteer&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Q: What’s considered a “Navigation”?&lt;/h4&gt; &#xA;&lt;p&gt;From Puppeteer’s standpoint, &lt;strong&gt;“navigation” is anything that changes a page’s URL&lt;/strong&gt;. Aside from regular navigation where the browser hits the network to fetch a new document from the web server, this includes &lt;a href=&#34;https://www.w3.org/TR/html5/single-page.html#scroll-to-fragid&#34;&gt;anchor navigations&lt;/a&gt; and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/History_API&#34;&gt;History API&lt;/a&gt; usage.&lt;/p&gt; &#xA;&lt;p&gt;With this definition of “navigation,” &lt;strong&gt;Puppeteer works seamlessly with single-page applications.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Q: What’s the difference between a “trusted&#34; and &#34;untrusted&#34; input event?&lt;/h4&gt; &#xA;&lt;p&gt;In browsers, input events could be divided into two big groups: trusted vs. untrusted.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trusted events&lt;/strong&gt;: events generated by users interacting with the page, e.g. using a mouse or keyboard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Untrusted event&lt;/strong&gt;: events generated by Web APIs, e.g. &lt;code&gt;document.createEvent&lt;/code&gt; or &lt;code&gt;element.click()&lt;/code&gt; methods.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Websites can distinguish between these two groups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;using an &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted&#34;&gt;&lt;code&gt;Event.isTrusted&lt;/code&gt;&lt;/a&gt; event flag&lt;/li&gt; &#xA; &lt;li&gt;sniffing for accompanying events. For example, every trusted &lt;code&gt;&#39;click&#39;&lt;/code&gt; event is preceded by &lt;code&gt;&#39;mousedown&#39;&lt;/code&gt; and &lt;code&gt;&#39;mouseup&#39;&lt;/code&gt; events.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For automation purposes it’s important to generate trusted events. &lt;strong&gt;All input events generated with Puppeteer are trusted and fire proper accompanying events.&lt;/strong&gt; If, for some reason, one needs an untrusted event, it’s always possible to hop into a page context with &lt;code&gt;page.evaluate&lt;/code&gt; and generate a fake event:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;await page.evaluate(() =&amp;gt; {&#xA;  document.querySelector(&#39;button[type=submit]&#39;).click();&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Q: What features does Puppeteer not support?&lt;/h4&gt; &#xA;&lt;p&gt;You may find that Puppeteer does not behave as expected when controlling pages that incorporate audio and video. (For example, &lt;a href=&#34;https://github.com/puppeteer/puppeteer/issues/291&#34;&gt;video playback/screenshots is likely to fail&lt;/a&gt;.) There are two reasons for this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Puppeteer is bundled with Chromium — not Chrome — and so by default, it inherits all of &lt;a href=&#34;https://www.chromium.org/audio-video&#34;&gt;Chromium&#39;s media-related limitations&lt;/a&gt;. This means that Puppeteer does not support licensed formats such as AAC or H.264. (However, it is possible to force Puppeteer to use a separately-installed version Chrome instead of Chromium via the &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/api.md#puppeteerlaunchoptions&#34;&gt;&lt;code&gt;executablePath&lt;/code&gt; option to &lt;code&gt;puppeteer.launch&lt;/code&gt;&lt;/a&gt;. You should only use this configuration if you need an official release of Chrome that supports these media formats.)&lt;/li&gt; &#xA; &lt;li&gt;Since Puppeteer (in all configurations) controls a desktop version of Chromium/Chrome, features that are only supported by the mobile version of Chrome are not supported. This means that Puppeteer &lt;a href=&#34;https://caniuse.com/#feat=http-live-streaming&#34;&gt;does not support HTTP Live Streaming (HLS)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Q: I am having trouble installing / running Puppeteer in my test environment. Where should I look for help?&lt;/h4&gt; &#xA;&lt;p&gt;We have a &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/troubleshooting.md&#34;&gt;troubleshooting&lt;/a&gt; guide for various operating systems that lists the required dependencies.&lt;/p&gt; &#xA;&lt;h4&gt;Q: Chromium gets downloaded on every &lt;code&gt;npm ci&lt;/code&gt; run. How can I cache the download?&lt;/h4&gt; &#xA;&lt;p&gt;The default download path is &lt;code&gt;node_modules/puppeteer/.local-chromium&lt;/code&gt;. However, you can change that path with the &lt;code&gt;PUPPETEER_DOWNLOAD_PATH&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Puppeteer uses that variable to resolve the Chromium executable location during launch, so you don’t need to specify &lt;code&gt;PUPPETEER_EXECUTABLE_PATH&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you wish to keep the Chromium download in &lt;code&gt;~/.npm/chromium&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PUPPETEER_DOWNLOAD_PATH=~/.npm/chromium&#xA;npm ci&#xA;&#xA;# by default the Chromium executable path is inferred&#xA;# from the download path&#xA;npm test&#xA;&#xA;# a new run of npm ci will check for the existence of&#xA;# Chromium in ~/.npm/chromium&#xA;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Q: I have more questions! Where do I ask?&lt;/h4&gt; &#xA;&lt;p&gt;There are many ways to get help on Puppeteer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puppeteer/puppeteer/issues&#34;&gt;bugtracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/puppeteer&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure to search these channels before posting your question.&lt;/p&gt; &#xA;&lt;!-- [END faq] --&gt;</summary>
  </entry>
</feed>