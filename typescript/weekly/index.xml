<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:48:16Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>upscayl/upscayl</title>
    <updated>2022-11-20T01:48:16Z</updated>
    <id>tag:github.com,2022-11-20:/upscayl/upscayl</id>
    <link href="https://github.com/upscayl/upscayl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üÜô Upscayl - Free and Open Source AI Image Upscaler for Linux, MacOS and Windows built with Linux-First philosophy.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/TGS963/upscayl/releases/latest&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25067102/191081148-ca101da1-d601-4170-9d41-26fc2de8c027.png&#34; alt=&#34;download&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h1&gt;Upscayl üÜô&lt;/h1&gt; &#xA; &lt;h4&gt;Free and Open Source AI Image Upscaler&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/25067102/191083105-cca0dc96-69d5-472b-baff-cb89f1603488.mp4&#34;&gt;https://user-images.githubusercontent.com/25067102/191083105-cca0dc96-69d5-472b-baff-cb89f1603488.mp4&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Upscayl is a cross-platform application built with the Linux-first philosophy. This means that we prioritize Linux builds over others but that doesn&#39;t mean we&#39;ll break things for other OSes :)&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;h3&gt;NOTE: You&#39;ll need a Vulkan compatible GPU to upscale images. Many CPU and iGPUs do not work but no harm in trying.&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;h5&gt;TUTORIAL&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=L44FeV41BDI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/L44FeV41BDI/0.jpg&#34; alt=&#34;IMAGE ALT TEXT HERE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation üë®‚Äçüíª&lt;/h1&gt; &#xA;&lt;h3&gt;Linux üêß&lt;/h3&gt; &#xA;&lt;a href=&#34;https://appimage.github.io/Upscayl/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25067102/191270389-9de37c0f-39a8-41f1-a659-8dd4e7b8ac28.png&#34; width=&#34;250px&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://aur.archlinux.org/packages/upscayl-bin&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25067102/191269445-87050a77-c304-4284-9ea0-699721309c59.png&#34; width=&#34;250px&#34;&gt; &lt;/a&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://github.com/TGS963/upscayl/releases/latest&#34;&gt;releases section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;.AppImage&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Right Click AppImage -&amp;gt; Go to Permissions tab -&amp;gt; Check allow file to execute and then double click the file to run Upscayl.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also download the flatpak version and double click the flatpak file to install via Store but wait for the full release, we&#39;ll be pushing it to Flathub for easy access.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS üçé&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://github.com/TGS963/upscayl/releases/latest&#34;&gt;releases section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;.dmg&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Double click dmg, drag Upscayl icon into Applications folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows üêå&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://github.com/TGS963/upscayl/releases/latest&#34;&gt;releases section&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the &lt;code&gt;.exe&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Double click exe file, wait for installation, profit.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Comparisons:&lt;/h1&gt; &#xA;&lt;h4&gt;Medium Resolution Images (300-400 pixels wide):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25067102/187059440-83f32705-4509-4899-a109-ed2d8248fd2b.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25067102/187059369-9bc63f1c-e6c0-4d6a-9089-706db43f171f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Low Resolution Images (150 pixels wide):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25067102/187059318-2d01a671-53fe-4ecc-9a74-3a791fd55818.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25067102/187059336-8d6e87ec-232f-4591-89c9-ff451692bcf2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Super Low Resolution Images (75 pixels wide):&lt;/h4&gt; &#xA;&lt;h3&gt;UPSCALED TWICE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/25067102/187153200-8e184622-a791-43ad-8d73-e5580034f2f2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap ü§´&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Allow video upscalingüìº&lt;/li&gt; &#xA; &lt;li&gt;More models&lt;/li&gt; &#xA; &lt;li&gt;Make the whole world use FOSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development üõ†&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/TGS963/upscayl&#xA;cd upscayl&#xA;&#xA;# INSTALL DEPENDENCIES&#xA;npm install&#xA;&#xA;# RUN THE DEVELOPMENT SERVER LOCALLY&#xA;npm run start&#xA;&#xA;# PACKAGE THE APP&#xA;npm run dist&#xA;&#xA;# PUBLISH THE APP, MAKE SURE TO ADD GH_TOKEN= IN SHELL&#xA;npm run publish-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;FAQ ü§ì&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How does Upscayl work? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Upscayl uses AI models to enhance your images by guessing what the details could be. It uses Real-ESRGAN (and more in the future) model to achieve this.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Is there a CLI available? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The CLI tool is called real-esrgan-ncnn-vulkan and it&#39;s available on the Real-ESRGAN repository.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Do I need a GPU for this to work? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes, unfortunately. NCNN Vulkan requires a Vulkan compatible GPU. Upscayl won&#39;t work on most iGPUs or CPUs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;How can I contribute? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can donate more NCNN compatible models or fix code by submitting PRs :)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You are not fully open source!!üò° &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We are, we&#39;re using completely free and open source tech. We do ship a binary but that&#39;s because not including it would kill the entire purpose of the project. If you want to deal with all those PyTorch, NCNN, and Python errors, you&#39;re more than welcome to compile your own binary using the code provided by Real-ESRGAN. The binary is pre-compiled for convenience, if you do not trust it, then you can compile your own since everything is free and open source here :)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upscayl uses Real-ESRGAN-ncnn-vulkan binaries to upscale images. More models and algorithms will come soon.&lt;/p&gt; &#xA;&lt;h1&gt;Donate&lt;/h1&gt; &#xA;&lt;a href=&#34;https://www.buymeacoffee.com/fossisthefuture&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25067102/154570688-9e143f2b-fee3-4b05-a9d2-a7a3013b2b51.png&#34;&gt; &lt;/a&gt;&#xA;&lt;a&gt;&lt;/a&gt; &#xA;&lt;h1&gt;Credits ‚ù§&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Real-ESRGAN for their wonderful research work.&lt;br&gt; &lt;a href=&#34;https://github.com/xinntao/Real-ESRGAN/&#34;&gt;Real-ESRGAN: Copyright (c) 2021, Xintao Wang&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Microsoft‚Ñ¢ for their Fluent Emoji used as our logo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;@JanDeDinoMan, @xanderfrangos, @Fdawgs, @keturn for their code contributions :)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;@aaronliu0130 for providing community support :)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;Copyright ¬© 2022 - &lt;strong&gt;Upscayl&lt;/strong&gt;&lt;br&gt; By Nayam Amarshe and TGS963&lt;br&gt; Made with üñ± &amp;amp; ‚å®&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>whyour/qinglong</title>
    <updated>2022-11-20T01:48:16Z</updated>
    <id>tag:github.com,2022-11-20:/whyour/qinglong</id>
    <link href="https://github.com/whyour/qinglong" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ÊîØÊåÅpython3„ÄÅjavaScript„ÄÅshell„ÄÅtypescript ÁöÑÂÆöÊó∂‰ªªÂä°ÁÆ°ÁêÜÈù¢ÊùøÔºàA timed task management panel that supports typescript, javaScript, python3, and shellÔºâ&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/whyour/qinglong&#34;&gt; &lt;img width=&#34;150&#34; src=&#34;https://user-images.githubusercontent.com/22700758/191449379-f9f56204-0e31-4a16-be5a-331f52696a73.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;ÈùíÈæô&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;ÊîØÊåÅpython3„ÄÅjavaScript„ÄÅshell„ÄÅtypescript ÁöÑÂÆöÊó∂‰ªªÂä°ÁÆ°ÁêÜÈù¢Êùø&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/whyour/qinglong/tags?page=1&amp;amp;ordering=last_updated&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/whyour/qinglong?style=flat&#34; alt=&#34;docker version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/whyour/qinglong&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/whyour/qinglong?style=flat&#34; alt=&#34;docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/whyour/qinglong&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/whyour/qinglong?style=flat&#34; alt=&#34;docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/whyour/qinglong&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/whyour/qinglong?style=flat&#34; alt=&#34;docker image size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://whyour.cn&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/22700758/161788855-c4e51cb8-d4e9-44fe-bb17-ee1a56c8549b.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÁÆÄ‰Ωì‰∏≠Êñá | &lt;a href=&#34;https://raw.githubusercontent.com/whyour/qinglong/develop/README-en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÂäüËÉΩ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ÊîØÊåÅÂ§öÁßçËÑöÊú¨ËØ≠Ë®ÄÔºàpython3„ÄÅjavaScript„ÄÅshell„ÄÅtypescriptÔºâ&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÂú®Á∫øÁÆ°ÁêÜËÑöÊú¨„ÄÅÁéØÂ¢ÉÂèòÈáè„ÄÅÈÖçÁΩÆÊñá‰ª∂&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÂú®Á∫øÊü•Áúã‰ªªÂä°Êó•Âøó&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÁßíÁ∫ß‰ªªÂä°ËÆæÁΩÆ&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÁ≥ªÁªüÁ∫ßÈÄöÁü•&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÊöóÈªëÊ®°Âºè&lt;/li&gt; &#xA; &lt;li&gt;ÊîØÊåÅÊâãÊú∫Á´ØÊìç‰Ωú&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÈÉ®ÁΩ≤&lt;/h2&gt; &#xA;&lt;h3&gt;Êú¨Êú∫ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ÂæÖÂÆåÂñÑÔºåÂèØÂÖàÂèÇËÄÉÂºÄÂèëÊ≠•È™§&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;podman ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;podman ÂÆâË£Ö&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;https://podman.io/getting-started/installation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;ÂêØÂä®ÂÆπÂô®&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;podman run -dit \&#xA;  --network bridge \&#xA;  -v $PWD/ql/data:/ql/data \&#xA;  -p 5700:5700 \&#xA;  --name qinglong \&#xA;  --hostname qinglong \&#xA;  docker.io/whyour/qinglong:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;docker ÂÆâË£Ö&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -sSL get.docker.com | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;ÈÖçÁΩÆÂõΩÂÜÖÈïúÂÉèÊ∫ê Configure domestic mirror sources&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /etc/docker&#xA;tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&#39;EOF&#39;&#xA;{&#xA;  &#34;registry-mirrors&#34;: [&#xA;    &#34;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com&#34;,&#xA;    &#34;https://ypzju6vq.mirror.aliyuncs.com&#34;,&#xA;    &#34;https://registry.docker-cn.com&#34;,&#xA;    &#34;http://hub-mirror.c.163.com&#34;,&#xA;    &#34;https://docker.mirrors.ustc.edu.cn&#34;&#xA;  ]&#xA;}&#xA;EOF&#xA;systemctl daemon-reload&#xA;systemctl restart docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;ÂêØÂä®ÂÆπÂô®&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -dit \&#xA;  -v $PWD/ql/data:/ql/data \&#xA;  -p 5700:5700 \&#xA;  --name qinglong \&#xA;  --hostname qinglong \&#xA;  --restart unless-stopped \&#xA;  whyour/qinglong:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker-compose ÈÉ®ÁΩ≤&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;docker-compose ÂÆâË£Ö&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;ÂêØÂä®ÂÆπÂô®&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir qinglong&#xA;wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml&#xA;&#xA;# ÂêØÂä®&#xA;docker-compose up -d&#xA;# ÂÅúÊ≠¢&#xA;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;ËÆøÈóÆ&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;ÊâìÂºÄ‰Ω†ÁöÑÊµèËßàÂô®ÔºåËÆøÈóÆ http://{ip}:5700&lt;/p&gt; &#xA;&lt;h2&gt;‰ΩøÁî®&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;ÂÜÖÁΩÆÂëΩ‰ª§&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Êõ¥Êñ∞Âπ∂ÈáçÂêØÈùíÈæô&#xA;ql update                                                    &#xA;# ËøêË°åËá™ÂÆö‰πâËÑöÊú¨extra.sh&#xA;ql extra                                                     &#xA;# Ê∑ªÂä†Âçï‰∏™ËÑöÊú¨Êñá‰ª∂&#xA;ql raw &amp;lt;file_url&amp;gt;                                             &#xA;# Ê∑ªÂä†Âçï‰∏™‰ªìÂ∫ìÁöÑÊåáÂÆöËÑöÊú¨&#xA;ql repo &amp;lt;repo_url&amp;gt; &amp;lt;whitelist&amp;gt; &amp;lt;blacklist&amp;gt; &amp;lt;dependence&amp;gt; &amp;lt;branch&amp;gt; &amp;lt;extensions&amp;gt;&#xA;# Âà†Èô§ÊóßÊó•Âøó&#xA;ql rmlog &amp;lt;days&amp;gt;                                              &#xA;# ÂêØÂä®tg-bot&#xA;ql bot                                                       &#xA;# Ê£ÄÊµãÈùíÈæôÁéØÂ¢ÉÂπ∂‰øÆÂ§ç&#xA;ql check                                                     &#xA;# ÈáçÁΩÆÁôªÂΩïÈîôËØØÊ¨°Êï∞&#xA;ql resetlet                                                  &#xA;# Á¶ÅÁî®‰∏§Ê≠•ÁôªÂΩï&#xA;ql resettfa                                                  &#xA;&#xA;# ‰æùÊ¨°ÊâßË°åÔºåÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜÈöèÊú∫Âª∂ËøüÔºåÂ∞ÜÈöèÊú∫Âª∂Ëøü‰∏ÄÂÆöÁßíÊï∞&#xA;task &amp;lt;file_path&amp;gt;                                             &#xA;# ‰æùÊ¨°ÊâßË°åÔºåÊó†ËÆ∫ÊòØÂê¶ËÆæÁΩÆ‰∫ÜÈöèÊú∫Âª∂ËøüÔºåÂùáÁ´ãÂç≥ËøêË°åÔºåÂâçÂè∞‰ºöËæìÂá∫Êó•ÔºåÂêåÊó∂ËÆ∞ÂΩïÂú®Êó•ÂøóÊñá‰ª∂‰∏≠&#xA;task &amp;lt;file_path&amp;gt; now                                         &#xA;# Âπ∂ÂèëÊâßË°åÔºåÊó†ËÆ∫ÊòØÂê¶ËÆæÁΩÆ‰∫ÜÈöèÊú∫Âª∂ËøüÔºåÂùáÁ´ãÂç≥ËøêË°åÔºåÂâçÂè∞‰∏ç‰∫ßÁîüÊó•ÔºåÁõ¥Êé•ËÆ∞ÂΩïÂú®Êó•ÂøóÊñá‰ª∂‰∏≠Ôºå‰∏îÂèØÊåáÂÆöË¥¶Âè∑ÊâßË°å&#xA;task &amp;lt;file_path&amp;gt; conc &amp;lt;env_name&amp;gt; &amp;lt;account_number&amp;gt;(ÂèØÈÄâÁöÑ) &#xA;# ÊåáÂÆöË¥¶Âè∑ÊâßË°åÔºåÊó†ËÆ∫ÊòØÂê¶ËÆæÁΩÆ‰∫ÜÈöèÊú∫Âª∂ËøüÔºåÂùáÁ´ãÂç≥ËøêË°å &#xA;task &amp;lt;file_path&amp;gt; desi &amp;lt;env_name&amp;gt; &amp;lt;account_number&amp;gt;         &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;ÂèÇÊï∞ËØ¥Êòé&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;file_url: ËÑöÊú¨Âú∞ÂùÄ&lt;/li&gt; &#xA; &lt;li&gt;repo_url: ‰ªìÂ∫ìÂú∞ÂùÄ&lt;/li&gt; &#xA; &lt;li&gt;whitelist: ÊãâÂèñ‰ªìÂ∫ìÊó∂ÁöÑÁôΩÂêçÂçïÔºåÂç≥Â∞±ÊòØÈúÄË¶ÅÊãâÂèñÁöÑËÑöÊú¨ÁöÑË∑ØÂæÑÂåÖÂê´ÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ§ö‰∏™Á´ñÁ∫øÂàÜÂâ≤&lt;/li&gt; &#xA; &lt;li&gt;blacklist: ÊãâÂèñ‰ªìÂ∫ìÊó∂ÁöÑÈªëÂêçÂçïÔºåÂç≥Â∞±ÊòØÈúÄË¶ÅÊãâÂèñÁöÑËÑöÊú¨ÁöÑË∑ØÂæÑ‰∏çÂåÖÂê´ÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂ§ö‰∏™Á´ñÁ∫øÂàÜÂâ≤&lt;/li&gt; &#xA; &lt;li&gt;dependence: ÊãâÂèñ‰ªìÂ∫ìÈúÄË¶ÅÁöÑ‰æùËµñÊñá‰ª∂Ôºå‰ºöÁõ¥Êé•‰ªé‰ªìÂ∫ìÊã∑Ë¥ùÂà∞scripts‰∏ãÁöÑ‰ªìÂ∫ìÁõÆÂΩïÔºå‰∏çÂèóÈªëÂêçÂçïÂΩ±ÂìçÔºåÂ§ö‰∏™Á´ñÁ∫øÂàÜÂâ≤&lt;/li&gt; &#xA; &lt;li&gt;extensions: ÊãâÂèñ‰ªìÂ∫ìÁöÑÊñá‰ª∂ÂêéÁºÄÔºåÂ§ö‰∏™Á´ñÁ∫øÂàÜÂâ≤&lt;/li&gt; &#xA; &lt;li&gt;branch: ÊãâÂèñ‰ªìÂ∫ìÁöÑÂàÜÊîØ&lt;/li&gt; &#xA; &lt;li&gt;days: ÈúÄË¶Å‰øùÁïôÁöÑÊó•ÂøóÁöÑÂ§©Êï∞&lt;/li&gt; &#xA; &lt;li&gt;file_path: ‰ªªÂä°ÊâßË°åÊó∂ÁöÑÊñá‰ª∂Ë∑ØÂæÑ&lt;/li&gt; &#xA; &lt;li&gt;env_name: ‰ªªÂä°ÊâßË°åÊó∂ÈúÄË¶ÅÂπ∂ÂèëÊàñËÄÖÊåáÂÆöÊó∂ÁöÑÁéØÂ¢ÉÂèòÈáèÂêçÁß∞&lt;/li&gt; &#xA; &lt;li&gt;account_number: ‰ªªÂä°ÊâßË°åÊó∂ÊåáÂÆöÊüê‰∏™ÁéØÂ¢ÉÂèòÈáèÈúÄË¶ÅÊâßË°åÁöÑË¥¶Âè∑Â∫èÂè∑&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÈìæÊé•&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/evine&#34;&gt;nevinee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alseambusher/crontab-ui&#34;&gt;crontab-ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ant.design&#34;&gt;Ant Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pro.ant.design/&#34;&gt;Ant Design Pro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://umijs.org&#34;&gt;Umijs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/darkreader/darkreader&#34;&gt;darkreader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sunpu007/admin-server&#34;&gt;admin-server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÂºÄÂèë&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:whyour/qinglong.git&#xA;$ cd qinglong&#xA;$ cp .env.example .env&#xA;# Êé®Ëçê‰ΩøÁî® pnpm https://pnpm.io/zh/installation&#xA;$ npm install -g pnpm&#xA;$ pnpm install&#xA;$ pnpm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ÊâìÂºÄ‰Ω†ÁöÑÊµèËßàÂô®ÔºåËÆøÈóÆ &lt;a href=&#34;http://127.0.0.1:5700&#34;&gt;http://127.0.0.1:5700&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‰∫§ÊµÅ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/jiao_long&#34;&gt;telegramÈ¢ëÈÅì&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÂêçÁß∞Êù•Ê∫ê&lt;/h2&gt; &#xA;&lt;p&gt;ÈùíÈæôÔºåÂèàÂêçËãçÈæôÔºåÂú®‰∏≠ÂõΩ‰º†ÁªüÊñáÂåñ‰∏≠ÊòØÂõõË±°‰πã‰∏Ä„ÄÅ&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%A4%A9%E4%B9%8B%E5%9B%9B%E7%81%B5&#34;&gt;Â§©‰πãÂõõÁÅµ&lt;/a&gt;‰πã‰∏ÄÔºåÊ†πÊçÆ‰∫îË°åÂ≠¶ËØ¥ÔºåÂÆÉÊòØ‰ª£Ë°®‰∏úÊñπÁöÑÁÅµÂÖΩÔºå‰∏∫ÈùíËâ≤ÁöÑÈæôÔºå‰∫îË°åÂ±ûÊú®Ôºå‰ª£Ë°®ÁöÑÂ≠£ËäÇÊòØÊò•Â≠£ÔºåÂÖ´Âç¶‰∏ªÈúá„ÄÇËãçÈæô‰∏éÂ∫îÈæô‰∏ÄÊ†∑ÔºåÈÉΩÊòØË∫´ÂÖ∑ÁæΩÁøº„ÄÇ„ÄäÂº†ÊûúÊòüÂÆó„ÄãÁß∞‚ÄúÂèàÊúâËæÖÁøºÔºåÊñπ‰∏∫ÁúüÈæô‚Äù„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;„ÄäÂêéÊ±â‰π¶¬∑ÂæãÂéÜÂøó‰∏ã„ÄãËÆ∞ËΩΩÔºöÊó•Âë®‰∫éÂ§©Ôºå‰∏ÄÂØí‰∏ÄÊöëÔºåÂõõÊó∂Â§áÊàêÔºå‰∏áÁâ©ÊØïÊîπÔºåÊëÑÊèêËøÅÊ¨°ÔºåÈùíÈæôÁßªËæ∞ÔºåË∞ì‰πãÂ≤Å„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Âú®‰∏≠ÂõΩ&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%8D%81%E5%85%AB%E5%AE%BF&#34;&gt;‰∫åÂçÅÂÖ´ÂÆø&lt;/a&gt;‰∏≠ÔºåÈùíÈæôÊòØ‰∏úÊñπ‰∏ÉÂÆøÔºàËßí„ÄÅ‰∫¢„ÄÅÊ∞ê„ÄÅÊàø„ÄÅÂøÉ„ÄÅÂ∞æ„ÄÅÁÆïÔºâÁöÑÊÄªÁß∞„ÄÇ Âú®Êó©ÊúüÊòüÂÆø‰ø°‰ª∞‰∏≠ÔºåÁ•ÇÊòØÊúÄÂ∞äË¥µÁöÑÂ§©Á•û„ÄÇ ‰ΩÜË¢´ÈÅìÊïô‰ø°‰ª∞Âê∏Á∫≥ÂÖ•ÂÖ∂Á•ûÁ≥ªÂêéÔºåÁ•ûÊ†ºÂ§ßË∑åÔºåÈÅìÊïôÂ∞ÜÂÖ∂Áß∞‰∏∫‚ÄúÂ≠üÁ´†‚ÄùÔºåÂú®‰∏çÂêåÁöÑÈÅìÁªè‰∏≠Êúâ‚ÄúÂ∏ùÂêõ‚Äù„ÄÅ‚ÄúÂú£Â∞Ü‚Äù„ÄÅ‚ÄúÁ•ûÂ∞Ü‚ÄùÂíå‚ÄúÊçïÈ¨ºÂ∞Ü‚ÄùÁ≠âÁß∞ÂëºÔºå‰∏éÁôΩËôéÁõëÂÖµÁ•ûÂêõ‰∏ÄËµ∑ÔºåÊòØÈÅìÊïôÁöÑÊä§Âç´Â§©Á•û„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TanStack/router</title>
    <updated>2022-11-20T01:48:16Z</updated>
    <id>tag:github.com,2022-11-20:/TanStack/router</id>
    <link href="https://github.com/TanStack/router" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü§ñ Type-safe router w/ built-in caching &amp; URL state management for JS/TS, React, Preact, Solid, Vue, Svelte and Angular&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://static.scarf.sh/a.png?x-pxid=d988eb79-b0fc-4a2b-8514-6a1ab932d188&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tanstack/router/raw/beta/media/header.png&#34; alt=&#34;TanStack Router Header&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ü§ñ Application Routing for JS/TS, React, Solid, Vue and Svelte&lt;/p&gt; &#xA;&lt;a href=&#34;https://twitter.com/intent/tweet?button_hashtag=TanStack&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;#TanStack&#34; src=&#34;https://img.shields.io/twitter/url?color=%2308a0e9&amp;amp;label=%23TanStack&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fbutton_hashtag%3DTanStack&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://discord.com/invite/WrRKjPJ&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/badge/Discord-TanStack-%235865F2&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://npmjs.com/package/@tanstack/react-router&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/npm/dm/@tanstack/react-router.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://bundlephobia.com/result?p=@tanstack/react-router&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://badgen.net/bundlephobia/minzip/@tanstack/react-router&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/TanStack/router/beta/#badge&#34;&gt; &lt;img alt=&#34;semantic-release&#34; src=&#34;https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tanstack/router/discussions&#34;&gt; &lt;img alt=&#34;Join the discussion on Github&#34; src=&#34;https://img.shields.io/badge/Github%20Discussions%20%26%20Support-Chat%20now!-blue&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://bestofjs.org/projects/react-router&#34;&gt;&lt;img alt=&#34;Best of JS&#34; src=&#34;https://img.shields.io/endpoint?url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=tanstack%2Freact-router%26since=daily&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/tanstack/router&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/github/stars/tanstack/router.svg?style=social&amp;amp;label=Star&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://twitter.com/tan_stack&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/twitter/follow/tan_stack.svg?style=social&amp;amp;label=Follow @TanStack&#34;&gt; &lt;/a&gt;&#xA;&lt;a href=&#34;https://twitter.com/tannerlinsley&#34; target=&#34;\_parent&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://img.shields.io/twitter/follow/tannerlinsley.svg?style=social&amp;amp;label=Follow @TannerLinsley&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Enjoy this library? Try the entire &lt;a href=&#34;https://tanstack.com&#34;&gt;TanStack&lt;/a&gt;! &lt;a href=&#34;https://github.com/tannerlinsley/react-query&#34;&gt;React Query&lt;/a&gt;, &lt;a href=&#34;https://github.com/tanstack/react-table&#34;&gt;React Table&lt;/a&gt;, &lt;a href=&#34;https://github.com/tannerlinsley/react-charts&#34;&gt;React Charts&lt;/a&gt;, &lt;a href=&#34;https://github.com/tannerlinsley/react-virtual&#34;&gt;React Virtual&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visit &lt;a href=&#34;https://tanstack.com/router&#34;&gt;tanstack.com/router&lt;/a&gt; for docs, guides, API and more!&lt;/h2&gt; &#xA;&lt;h2&gt;Quick Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% TypeSafe &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Route Defs&lt;/li&gt; &#xA;   &lt;li&gt;Navigation&lt;/li&gt; &#xA;   &lt;li&gt;Relative Navigation&lt;/li&gt; &#xA;   &lt;li&gt;Search Params&lt;/li&gt; &#xA;   &lt;li&gt;Path Params&lt;/li&gt; &#xA;   &lt;li&gt;Loaders&lt;/li&gt; &#xA;   &lt;li&gt;Actions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;1st Class Search Params &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Schemas + Validation&lt;/li&gt; &#xA;   &lt;li&gt;Parsing + Serialization&lt;/li&gt; &#xA;   &lt;li&gt;Immutable&lt;/li&gt; &#xA;   &lt;li&gt;Structural Sharing&lt;/li&gt; &#xA;   &lt;li&gt;Pre/Post Processing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Built-in Caching &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stale-While-Revalidate&lt;/li&gt; &#xA;   &lt;li&gt;Max-Age&lt;/li&gt; &#xA;   &lt;li&gt;Auto Garbage Collection&lt;/li&gt; &#xA;   &lt;li&gt;Invalidation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Prefetching&lt;/li&gt; &#xA; &lt;li&gt;Automatic Prefetching&lt;/li&gt; &#xA; &lt;li&gt;Transitions&lt;/li&gt; &#xA; &lt;li&gt;Error Boundaries&lt;/li&gt; &#xA; &lt;li&gt;Code Splitting&lt;/li&gt; &#xA; &lt;li&gt;Layout Routes&lt;/li&gt; &#xA; &lt;li&gt;Easy Integration w/ external caches and storage (eg. React Query, Apollo, SWR, RTKQuery)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Use the force, Luke! --&gt;</summary>
  </entry>
</feed>