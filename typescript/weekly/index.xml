<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T02:08:27Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>resendlabs/react-email</title>
    <updated>2023-01-29T02:08:27Z</updated>
    <id>tag:github.com,2023-01-29:/resendlabs/react-email</id>
    <link href="https://github.com/resendlabs/react-email" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ’Œ Build and send emails using React&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://react.email/static/covers/react-email.png&#34; alt=&#34;React email cover&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;strong&gt;React Email&lt;/strong&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; The next generation of writing emails.&#xA; &lt;br&gt;High-quality, unstyled components for creating emails.&#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://react.email&#34;&gt;Website&lt;/a&gt; &#xA; &lt;span&gt; Â· &lt;/span&gt; &#xA; &lt;a href=&#34;https://github.com/resendlabs/react-email&#34;&gt;GitHub&lt;/a&gt; &#xA; &lt;span&gt; Â· &lt;/span&gt; &#xA; &lt;a href=&#34;https://react.email/discord&#34;&gt;Discord&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;A collection of high-quality, unstyled components for creating beautiful emails using React and TypeScript. It reduces the pain of coding responsive emails with dark mode support. It also takes care of inconsistencies between Gmail, Outlook, and other email clients for you.&lt;/p&gt; &#xA;&lt;h2&gt;Why&lt;/h2&gt; &#xA;&lt;p&gt;We believe that email is an extremely important medium for people to communicate. However, we need to stop developing emails like 2010, and rethink how email can be done in 2022 and beyond. Email development needs a revamp. A renovation. Modernized for the way we build web apps today.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install one of the components from your command line.&lt;/p&gt; &#xA;&lt;h4&gt;With yarn&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @react-email/button -E&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With npm&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @react-email/button -E&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Add the component to your email template. Include styles where needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Button } from &#39;@react-email/button&#39;;&#xA;&#xA;const Email = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;Button href=&#34;https://example.com&#34; style={{ color: &#39;#61dafb&#39; }}&amp;gt;&#xA;      Click me&#xA;    &amp;lt;/Button&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;A set of standard components to help you build amazing emails without having to deal with the mess of creating table-based layouts and maintaining archaic markup.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/html&#34;&gt;Html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/head&#34;&gt;Head&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/heading&#34;&gt;Heading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/button&#34;&gt;Button&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/link&#34;&gt;Link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/img&#34;&gt;Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/hr&#34;&gt;Divider&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/text&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/container&#34;&gt;Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/preview&#34;&gt;Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/body&#34;&gt;Body&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/column&#34;&gt;Column&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/packages/section&#34;&gt;Section&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;Emails built with React Email can be converted into HTML and sent using any email service provider. Here are some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/examples/nodemailer&#34;&gt;Nodemailer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/examples/sendgrid&#34;&gt;SendGrid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/examples/postmark&#34;&gt;Postmark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/resendlabs/react-email/tree/main/examples/aws-ses&#34;&gt;AWS SES&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;All components were tested using the most popular email clients.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/gmail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Gmail logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/apple-mail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Apple Mail&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/outlook.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Outlook logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/yahoo-mail.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Yahoo! Mail logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/hey.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;HEY logo&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://react.email/static/icons/superhuman.svg?sanitize=true&#34; width=&#34;48px&#34; height=&#34;48px&#34; alt=&#34;Superhuman logo&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gmail âœ”&lt;/td&gt; &#xA;   &lt;td&gt;Apple Mail âœ”&lt;/td&gt; &#xA;   &lt;td&gt;Outlook âœ”&lt;/td&gt; &#xA;   &lt;td&gt;Yahoo! Mail âœ”&lt;/td&gt; &#xA;   &lt;td&gt;HEY âœ”&lt;/td&gt; &#xA;   &lt;td&gt;Superhuman âœ”&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h4&gt;Install dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build and run packages&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will initialize all packages in parallel and watch for changes, including the website which will be available at &lt;a href=&#34;http://localhost:3001&#34;&gt;localhost:3001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bu Kinoshita (&lt;a href=&#34;https://twitter.com/bukinoshita&#34;&gt;@bukinoshita&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Zeno Rocha (&lt;a href=&#34;https://twitter.com/zenorocha&#34;&gt;@zenorocha&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rocketseat-education/nlw-setup-ignite</title>
    <updated>2023-01-29T02:08:27Z</updated>
    <id>tag:github.com,2023-01-29:/rocketseat-education/nlw-setup-ignite</id>
    <link href="https://github.com/rocketseat-education/nlw-setup-ignite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AplicaÃ§Ã£o desenvolvida durante o NLW Setup - Ignite&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>actions/setup-node</title>
    <updated>2023-01-29T02:08:27Z</updated>
    <id>tag:github.com,2023-01-29:/actions/setup-node</id>
    <link href="https://github.com/actions/setup-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Set up your GitHub Actions workflow with a specific version of node.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;setup-node&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/actions/setup-node/actions/workflows/basic-validation.yml&#34;&gt;&lt;img src=&#34;https://github.com/actions/setup-node/actions/workflows/basic-validation.yml/badge.svg?sanitize=true&#34; alt=&#34;basic-validation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions/setup-node/actions/workflows/versions.yml&#34;&gt;&lt;img src=&#34;https://github.com/actions/setup-node/actions/workflows/versions.yml/badge.svg?sanitize=true&#34; alt=&#34;versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/actions/setup-node/actions/workflows/proxy.yml&#34;&gt;&lt;img src=&#34;https://github.com/actions/setup-node/actions/workflows/proxy.yml/badge.svg?sanitize=true&#34; alt=&#34;proxy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This action provides the following functionality for GitHub Actions users:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optionally downloading and caching distribution of the requested Node.js version, and adding it to the PATH&lt;/li&gt; &#xA; &lt;li&gt;Optionally caching npm/yarn/pnpm dependencies&lt;/li&gt; &#xA; &lt;li&gt;Registering problem matchers for error output&lt;/li&gt; &#xA; &lt;li&gt;Configuring authentication for GPR or npm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/action.yml&#34;&gt;action.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Basic:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: actions/setup-node@v3&#xA;  with:&#xA;    node-version: 16&#xA;- run: npm ci&#xA;- run: npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;node-version&lt;/code&gt; input is optional. If not supplied, the node version from PATH will be used. However, it is recommended to always specify Node.js version and don&#39;t rely on the system one.&lt;/p&gt; &#xA;&lt;p&gt;The action will first check the local cache for a semver match. If unable to find a specific version in the cache, the action will attempt to download a version of Node.js. It will pull LTS versions from &lt;a href=&#34;https://github.com/actions/node-versions/releases&#34;&gt;node-versions releases&lt;/a&gt; and on miss or failure will fall back to the previous behavior of downloading directly from &lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;node dist&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information regarding locally cached versions of Node.js on GitHub hosted runners, check out &lt;a href=&#34;https://github.com/actions/runner-images&#34;&gt;GitHub Actions Runner Images&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Supported version syntax&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;node-version&lt;/code&gt; input supports the Semantic Versioning Specification, for more detailed examples please refer to the &lt;a href=&#34;https://github.com/npm/node-semver&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Major versions: &lt;code&gt;14&lt;/code&gt;, &lt;code&gt;16&lt;/code&gt;, &lt;code&gt;18&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;More specific versions: &lt;code&gt;10.15&lt;/code&gt;, &lt;code&gt;16.15.1&lt;/code&gt; , &lt;code&gt;18.4.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;NVM LTS syntax: &lt;code&gt;lts/erbium&lt;/code&gt;, &lt;code&gt;lts/fermium&lt;/code&gt;, &lt;code&gt;lts/*&lt;/code&gt;, &lt;code&gt;lts/-n&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Latest release: &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;latest&lt;/code&gt;/&lt;code&gt;current&lt;/code&gt;/&lt;code&gt;node&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Like the other values, &lt;code&gt;*&lt;/code&gt; will get the latest &lt;a href=&#34;https://github.com/actions/runner-images/raw/main/images/linux/Ubuntu2204-Readme.md#nodejs&#34;&gt;locally-cached Node.js version&lt;/a&gt;, or the latest version from &lt;a href=&#34;https://github.com/actions/node-versions/raw/main/versions-manifest.json&#34;&gt;actions/node-versions&lt;/a&gt;, depending on the &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#check-latest-version&#34;&gt;&lt;code&gt;check-latest&lt;/code&gt;&lt;/a&gt; input.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;current&lt;/code&gt;/&lt;code&gt;latest&lt;/code&gt;/&lt;code&gt;node&lt;/code&gt; always resolve to the latest &lt;a href=&#34;https://nodejs.org/dist/index.json&#34;&gt;dist version&lt;/a&gt;. That version is then downloaded from actions/node-versions if possible, or directly from Node.js if not. Since it will not be cached always, there is possibility of hitting rate limit when downloading from dist&lt;/p&gt; &#xA;&lt;h3&gt;Checking in lockfiles&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s &lt;strong&gt;always&lt;/strong&gt; recommended to commit the lockfile of your package manager for security and performance reasons. For more information consult the &#34;Working with lockfiles&#34; section of the &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#working-with-lockfiles&#34;&gt;Advanced usage&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Caching global packages data&lt;/h2&gt; &#xA;&lt;p&gt;The action has a built-in functionality for caching and restoring dependencies. It uses &lt;a href=&#34;https://github.com/actions/cache&#34;&gt;actions/cache&lt;/a&gt; under the hood for caching global packages data but requires less configuration settings. Supported package managers are &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt; (v6.10+). The &lt;code&gt;cache&lt;/code&gt; input is optional, and caching is turned off by default.&lt;/p&gt; &#xA;&lt;p&gt;The action defaults to search for the dependency file (&lt;code&gt;package-lock.json&lt;/code&gt;, &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;) in the repository root, and uses its hash as a part of the cache key. Use &lt;code&gt;cache-dependency-path&lt;/code&gt; for cases when multiple dependency files are used, or they are located in different subdirectories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The action does not cache &lt;code&gt;node_modules&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the examples of using cache for &lt;code&gt;yarn&lt;/code&gt;/&lt;code&gt;pnpm&lt;/code&gt; and &lt;code&gt;cache-dependency-path&lt;/code&gt; input in the &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#caching-packages-data&#34;&gt;Advanced usage&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caching npm dependencies:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: actions/setup-node@v3&#xA;  with:&#xA;    node-version: 16&#xA;    cache: &#39;npm&#39;&#xA;- run: npm ci&#xA;- run: npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caching npm dependencies in monorepos:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: actions/setup-node@v3&#xA;  with:&#xA;    node-version: 16&#xA;    cache: &#39;npm&#39;&#xA;    cache-dependency-path: subdir/package-lock.json&#xA;- run: npm ci&#xA;- run: npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Matrix Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  build:&#xA;    runs-on: ubuntu-latest&#xA;    strategy:&#xA;      matrix:&#xA;        node: [ 14, 16, 18 ]&#xA;    name: Node ${{ matrix.node }} sample&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - name: Setup node&#xA;        uses: actions/setup-node@v3&#xA;        with:&#xA;          node-version: ${{ matrix.node }}&#xA;      - run: npm ci&#xA;      - run: npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using &lt;code&gt;setup-node&lt;/code&gt; on GHES&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;setup-node&lt;/code&gt; comes pre-installed on the appliance with GHES if Actions is enabled. When dynamically downloading Nodejs distributions, &lt;code&gt;setup-node&lt;/code&gt; downloads distributions from &lt;a href=&#34;https://github.com/actions/node-versions&#34;&gt;&lt;code&gt;actions/node-versions&lt;/code&gt;&lt;/a&gt; on github.com (outside of the appliance). These calls to &lt;code&gt;actions/node-versions&lt;/code&gt; are made via unauthenticated requests, which are limited to &lt;a href=&#34;https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting&#34;&gt;60 requests per hour per IP&lt;/a&gt;. If more requests are made within the time frame, then you will start to see rate-limit errors during downloading that looks like: &lt;code&gt;##[error]API rate limit exceeded for...&lt;/code&gt;. After that error the action will try to download versions directly from the official site, but it also can have rate limit so it&#39;s better to put token.&lt;/p&gt; &#xA;&lt;p&gt;To get a higher rate limit, you can &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;generate a personal access token on github.com&lt;/a&gt; and pass it as the &lt;code&gt;token&lt;/code&gt; input for the action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;uses: actions/setup-node@v3&#xA;with:&#xA;  token: ${{ secrets.GH_DOTCOM_TOKEN }}&#xA;  node-version: 16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the runner is not able to access github.com, any Nodejs versions requested during a workflow run must come from the runner&#39;s tool cache. See &#34;&lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.2/admin/github-actions/managing-access-to-actions-from-githubcom/setting-up-the-tool-cache-on-self-hosted-runners-without-internet-access&#34;&gt;Setting up the tool cache on self-hosted runners without internet access&lt;/a&gt;&#34; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#check-latest-version&#34;&gt;Check latest version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#node-version-file&#34;&gt;Using a node version file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#architecture&#34;&gt;Using different architectures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#v8-canary-versions&#34;&gt;Using v8 canary versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#nightly-versions&#34;&gt;Using nightly versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#rc-versions&#34;&gt;Using rc versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#caching-packages-data&#34;&gt;Caching packages data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#multiple-operating-systems-and-architectures&#34;&gt;Using multiple operating systems and architectures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#publish-to-npmjs-and-gpr-with-npm&#34;&gt;Publishing to npmjs and GPR with npm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#publish-to-npmjs-and-gpr-with-yarn&#34;&gt;Publishing to npmjs and GPR with yarn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/advanced-usage.md#use-private-packages&#34;&gt;Using private packages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! See &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/docs/contributors.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ‘‹&lt;/span&gt; Be nice. See &lt;a href=&#34;https://raw.githubusercontent.com/actions/setup-node/main/CODE_OF_CONDUCT.md&#34;&gt;our code of conduct&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>