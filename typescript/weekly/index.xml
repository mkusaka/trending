<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-19T02:00:18Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mckaywrigley/chatbot-ui</title>
    <updated>2023-11-19T02:00:18Z</updated>
    <id>tag:github.com,2023-11-19:/mckaywrigley/chatbot-ui</id>
    <link href="https://github.com/mckaywrigley/chatbot-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source ChatGPT UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chatbot UI&lt;/h1&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;Chatbot UI 2.0 is out as an updated, hosted product!&lt;/p&gt; &#xA;&lt;p&gt;Check out &lt;a href=&#34;https://www.takeoffchat.com/&#34;&gt;Takeoff Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open source version coming soon!&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Chatbot UI is an open source chat UI for AI models.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://twitter.com/mckaywrigley/status/1640380021423603713?s=46&amp;amp;t=AowqkodyK6B4JccSOxSPew&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mckaywrigley/chatbot-ui/main/public/screenshots/screenshot-0402023.jpg&#34; alt=&#34;Chatbot UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;p&gt;Chatbot UI will be updated over time.&lt;/p&gt; &#xA;&lt;p&gt;Expect frequent improvements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Next up:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sharing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &#34;Bots&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Host your own live version of Chatbot UI with Vercel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fmckaywrigley%2Fchatbot-ui&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t chatgpt-ui .&#xA;docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 chatgpt-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pull from ghcr:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -e OPENAI_API_KEY=xxxxxxxx -p 3000:3000 ghcr.io/mckaywrigley/chatbot-ui:main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Clone Repo&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mckaywrigley/chatbot-ui.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Install Dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Provide OpenAI API Key&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a .env.local file in the root of the repo with your OpenAI API Key:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=YOUR_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can set &lt;code&gt;OPENAI_API_HOST&lt;/code&gt; where access to the official OpenAI host is restricted or unavailable, allowing users to configure an alternative host for their specific needs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Additionally, if you have multiple OpenAI Organizations, you can set &lt;code&gt;OPENAI_ORGANIZATION&lt;/code&gt; to specify one.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Run App&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Use It&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to start chatting.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;When deploying the application, the following environment variables can be set:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default API key used for authentication with OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_HOST&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://api.openai.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The base url, for Azure use &lt;code&gt;https://&amp;lt;endpoint&amp;gt;.openai.azure.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_TYPE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;openai&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The API type, options are &lt;code&gt;openai&lt;/code&gt; or &lt;code&gt;azure&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_VERSION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2023-03-15-preview&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Only applicable for Azure OpenAI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AZURE_DEPLOYMENT_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Needed when Azure OpenAI, Ref &lt;a href=&#34;https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/reference#completions&#34;&gt;Azure OpenAI API&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_ORGANIZATION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Your OpenAI organization ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DEFAULT_MODEL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gpt-3.5-turbo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default model to use on new conversations, for Azure use &lt;code&gt;gpt-35-turbo&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mckaywrigley/chatbot-ui/main/utils/app/const.ts&#34;&gt;see here&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default system prompt to use on new conversations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NEXT_PUBLIC_DEFAULT_TEMPERATURE&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;The default temperature to use on new conversations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOOGLE_API_KEY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://developers.google.com/custom-search/v1/overview&#34;&gt;Custom Search JSON API documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOOGLE_CSE_ID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://developers.google.com/custom-search/v1/overview&#34;&gt;Custom Search JSON API documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you do not provide an OpenAI API key with &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;, users will have to provide their own key.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have an OpenAI API key, you can get one &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to reach out to Mckay on &lt;a href=&#34;https://twitter.com/mckaywrigley&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SawyerHood/draw-a-ui</title>
    <updated>2023-11-19T02:00:18Z</updated>
    <id>tag:github.com,2023-11-19:/SawyerHood/draw-a-ui</id>
    <link href="https://github.com/SawyerHood/draw-a-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Draw a mockup and generate html for it&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;draw-a-ui&lt;/h1&gt; &#xA;&lt;p&gt;This is an app that uses tldraw and the gpt-4-vision api to generate html based on a wireframe you draw.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I&#39;m currently working on a hosted version of draw-a-ui. You can join the waitlist at &lt;a href=&#34;https://draw-a-ui.com&#34;&gt;draw-a-ui.com&lt;/a&gt;. The core of it will always be open source and available here.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SawyerHood/draw-a-ui/main/demo.gif&#34; alt=&#34;A demo of the app&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This works by just taking the current canvas SVG, converting it to a PNG, and sending that png to gpt-4-vision with instructions to return a single html file with tailwind.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Disclaimer: This is a demo and is not intended for production use. It doesn&#39;t have any auth so you will go broke if you deploy it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This is a Next.js app. To get started run the following commands in the root directory of the project. You will need an OpenAI API key with access to the GPT-4 Vision API.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note this uses Next.js 14 and requires a version of &lt;code&gt;node&lt;/code&gt; greater than 18.17. &lt;a href=&#34;https://nextjs.org/docs/pages/building-your-application/upgrading/version-14&#34;&gt;Read more here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;OPENAI_API_KEY=sk-your-key&#34; &amp;gt; .env.local&#xA;npm install&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; with your browser to see the result.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>atomicals/atomicals-js</title>
    <updated>2023-11-19T02:00:18Z</updated>
    <id>tag:github.com,2023-11-19:/atomicals/atomicals-js</id>
    <link href="https://github.com/atomicals/atomicals-js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Atomicals CLI and Javascript Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Atomicals Javascript Library&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;atomicals.xyz Documentation: &lt;a href=&#34;https://docs.atomicals.xyz&#34;&gt;https://docs.atomicals.xyz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atomicals/atomicals-js/master/banner.png&#34; alt=&#34;Atomicals&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install, Build and Run Tests&lt;/h3&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Download the github repo and then run:&#xA;&#xA;npm install&#xA;npm run build&#xA;&#xA;See all commands at:&#xA;&#xA;npm run cli --help&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quick Start - Command Line (CLI)&lt;/h3&gt; &#xA;&lt;p&gt;First install packages and build, then follow the steps here to create your first Atomical and query the status. Use &lt;code&gt;yarn cli&lt;/code&gt;to get a list of all commands available.&lt;/p&gt; &#xA;&lt;h4&gt;0. Environment File (.env)&lt;/h4&gt; &#xA;&lt;p&gt;The environment file comes with defaults (&lt;code&gt;.env.example&lt;/code&gt;), but it is highly recommend to install and operate your own ElectrumX server. Web browser communication is possible through the &lt;code&gt;wss&lt;/code&gt; (secure websockets) interface of ElectrumX.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ELECTRUMX_WSS=wss://electrumx.atomicals.xyz:50012&#xA;&#xA;// Optional (defaults to wallet.json)&#xA;WALLET_PATH=path-to-wallet.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;ELECTRUMX_WSS&lt;/em&gt;: URL of the ElectrumX with Atomicals support. Note that only &lt;code&gt;wss&lt;/code&gt; endpoints are accessible from web browsers.&lt;/p&gt; &#xA;&lt;h4&gt;1. Wallet Setup&lt;/h4&gt; &#xA;&lt;p&gt;The purpose of the wallet is to create p2tr (pay-to-taproot) spend scripts and to receive change from the transactions made for the various operations. &lt;em&gt;Do not put more funds than you can afford to lose, as this is still beta!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;To initialize a new &lt;code&gt;wallet.json&lt;/code&gt; file that will store your address for receiving change use the &lt;code&gt;wallet-init&lt;/code&gt; command. Alternatively, you may populate the &lt;code&gt;wallet.json&lt;/code&gt; manually, ensuring that the address at &lt;code&gt;m/44&#39;/0&#39;/0&#39;/0/0&lt;/code&gt; is equal to the address and the derivePath is set correctly.&lt;/p&gt; &#xA;&lt;p&gt;Configure the path in the environment &lt;code&gt;.env&lt;/code&gt; file to point to your wallet file. defaults to &lt;code&gt;./wallet.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;WALLET_PATH=.&#xA;WALLET_FILE=wallet.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update to &lt;code&gt;wallets/&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;WALLET_PATH=./wallets&#xA;WALLET_FILE=wallet.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create the wallet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn cli wallet-init&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt;&#xA;&#xA;Wallet created at wallet.json&#xA;phrase: maple maple maple maple maple maple maple maple maple maple maple maple&#xA;Legacy address (for change): 1FXL2CJ9nAC...u3e9Evdsa2pKrPhkag&#xA;Derive Path: m/44&#39;/0&#39;/0&#39;/0/0&#xA;WIF: L5Sa65gNR6QsBjqK.....r6o4YzcqNRnJ1p4a6GPxqQQ&#xA;------------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Explore the CLI&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn cli --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Quick Commands&lt;/h4&gt; &#xA;&lt;p&gt;Get all of the commands available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run cli --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read the documentation at &lt;a href=&#34;https://docs.atomicals.xyz&#34;&gt;https://docs.atomicals.xyz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ElectrumX Server RPC Interface&lt;/h2&gt; &#xA;&lt;p&gt;See updated ElectrumX (&lt;a href=&#34;https://github.com/atomicals/electrumx-atomicals&#34;&gt;https://github.com/atomicals/electrumx-atomicals&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Any questions or ideas?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://atomicals.xyz&#34;&gt;https://atomicals.xyz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://x.com/atomicalsxyz&#34;&gt;https://x.com/atomicalsxyz&lt;/a&gt; (X - Formerly Twitter)&lt;/p&gt; &#xA;&lt;h2&gt;Donate to Atomicals Development&lt;/h2&gt; &#xA;&lt;p&gt;We greatly appreciate any donation to help support Atomicals Protocol development. We worked out of passion and kindness for the world, we believe this technology must exist and be free for all to use. Bitcoin is our one hope for freedom and digital sovereignty and we intend to do our best to make it a reality.&lt;/p&gt; &#xA;&lt;p&gt;BTC: bc1pljy9g0ugrgumpd5y6v9tv23rvz5y8dhaq980r9qfgyhd4dmgkwmqpdpr5q&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/atomicals/atomicals-js/master/donate.png&#34; alt=&#34;Donate to Atomicals Development&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>