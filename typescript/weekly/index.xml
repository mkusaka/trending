<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-12T01:47:37Z</updated>
  <subtitle>Weekly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vernu/textbee</title>
    <updated>2025-01-12T01:47:37Z</updated>
    <id>tag:github.com,2025-01-12:/vernu/textbee</id>
    <link href="https://github.com/vernu/textbee" rel="alternate"></link>
    <summary type="html">&lt;p&gt;textbee.dev is an opensource and free sms-gatway for sending SMS messages through API or dashboard web interface.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TextBee - Android SMS Gateway&lt;/h1&gt; &#xA;&lt;p&gt;A simple SMS gateway that allows users to send SMS messages from a web interface or from their application via a REST API. It utilizes android phones as SMS gateways.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Technology stack&lt;/strong&gt;: React, Next.js, Node.js, NestJs, MongoDB, Android, Java&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Link&lt;/strong&gt;: &lt;a href=&#34;https://textbee.dev/&#34;&gt;https://textbee.dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://ik.imagekit.io/vernu/textbee/texbee-landing-light.png?updatedAt=1687076964687&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://textbee.dev&#34;&gt;textbee.dev&lt;/a&gt; and register or login with your account&lt;/li&gt; &#xA; &lt;li&gt;Install the app on your android phone from &lt;a href=&#34;https://dl.textbee.dev&#34;&gt;dl.textbee.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the app and grant the permissions for SMS&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://textbee.dev/dashboard&#34;&gt;textbee.dev/dashboard&lt;/a&gt; and click register device/ generate API Key&lt;/li&gt; &#xA; &lt;li&gt;Scan the QR code with the app or enter the API key manually&lt;/li&gt; &#xA; &lt;li&gt;You are ready to send SMS messages from the dashboard or from your application via the REST API&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code Snippet&lt;/strong&gt;: Few lines of code showing how to send an SMS message via the REST API&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const API_KEY = &#39;YOUR_API_KEY&#39;;&#xA;const DEVICE_ID = &#39;YOUR_DEVICE_ID&#39;;&#xA;&#xA;await axios.post(`https://api.textbee.dev/api/v1/gateway/devices/${DEVICE_ID}/send-sms`, {&#xA;  recipients: [ &#39;+251912345678&#39; ],&#xA;  message: &#39;Hello World!&#39;,&#xA;}, {&#xA;  headers: {&#xA;    &#39;x-api-key&#39;: API_KEY,&#xA;  },&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code Snippet&lt;/strong&gt;: Curl command to send an SMS message via the REST API&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X POST &#34;https://api.textbee.dev/api/v1/gateway/devices/YOUR_DEVICE_ID/send-sms&#34; \&#xA;  -H &#39;x-api-key: YOUR_API_KEY&#39; \&#xA;  -H &#39;Content-Type: application/json&#39; \&#xA;  -d &#39;{&#xA;    &#34;recipients&#34;: [ &#34;+251912345678&#34; ],&#xA;    &#34;message&#34;: &#34;Hello World!&#34;&#xA;  }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Receiving SMS Messages&lt;/h3&gt; &#xA;&lt;p&gt;To receive SMS messages, you can enable the feature from the mobile app. You can then fetch the received SMS messages via the REST API or view them in the dashboard. (Webhook notifications are coming soon)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code Snippet&lt;/strong&gt;: Few lines of code showing how to fetch received SMS messages via the REST API&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const API_KEY = &#39;YOUR_API_KEY&#39;;&#xA;const DEVICE_ID = &#39;YOUR_DEVICE_ID&#39;;&#xA;&#xA;await axios.get(`https://api.textbee.dev/api/v1/gateway/devices/${DEVICE_ID}/get-received-sms`, {&#xA;  headers: {&#xA;    &#39;x-api-key&#39;: API_KEY,&#xA;  },&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code Snippet&lt;/strong&gt;: Curl command to fetch received SMS messages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -X GET &#34;https://api.textbee.dev/api/v1/gateway/devices/YOUR_DEVICE_ID/get-received-sms&#34;\&#xA;  -H &#34;x-api-key: YOUR_API_KEY&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vernu/textbee/fork&#34;&gt;Fork&lt;/a&gt; the project.&lt;/li&gt; &#xA; &lt;li&gt;Create a feature or bugfix branch from &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Make sure your commit messages and PR comment summaries are descriptive.&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request to the &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Bug Reporting and Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;Please feel free to &lt;a href=&#34;https://github.com/vernu/textbee/issues/new&#34;&gt;create an issue&lt;/a&gt; in the repository for any bug reports or feature requests. Make sure to provide a detailed description of the issue or feature you are requesting and properly label whether it is a bug or a feature request.&lt;/p&gt; &#xA;&lt;p&gt;Please note that if you discover any vulnerability or security issue, we kindly request that you refrain from creating a public issue. Instead, send an email detailing the vulnerability to &lt;a href=&#34;mailto:textbee.dev@gmail.com&#34;&gt;textbee.dev@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;For support, feedback, and questions&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to reach out to us at &lt;a href=&#34;mailto:textbee.dev@gmail.com&#34;&gt;textbee.dev@gmail.com&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/d7vyfBpWbQ&#34;&gt;Join our Discord server&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Koenkk/zigbee2mqtt</title>
    <updated>2025-01-12T01:47:37Z</updated>
    <id>tag:github.com,2025-01-12:/Koenkk/zigbee2mqtt</id>
    <link href="https://github.com/Koenkk/zigbee2mqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zigbee üêù to MQTT bridge üåâ, get rid of your proprietary Zigbee bridges üî®&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/koenkk/zigbee2mqtt&#34;&gt; &lt;img width=&#34;150&#34; height=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/logo.png&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div style=&#34;display: flex;&#34;&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/actions?query=workflow%3Aci&#34;&gt; &lt;img src=&#34;https://github.com/koenkk/zigbee2mqtt/workflows/ci/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/koenkk/zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/koenkk/zigbee2mqtt.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.paypal.me/koenkk&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/donate-PayPal-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/dadfWYE&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/556563650429583360.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;http://zigbee2mqtt.discourse.group/&#34;&gt; &lt;img src=&#34;https://img.shields.io/discourse/https/zigbee2mqtt.discourse.group/status.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Coverage-100%25-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.codacy.com/manual/Koenkk/zigbee2mqtt?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Koenkk/zigbee2mqtt&amp;amp;utm_campaign=Badge_Grade&#34;&gt; &lt;img src=&#34;https://api.codacy.com/project/badge/Grade/24f1e0fe39f04daa810e8a1416693d3f&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.npmjs.com/package/zigbee2mqtt&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/zigbee2mqtt&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h1&gt;Zigbee2MQTT üåâ üêù&lt;/h1&gt; &#xA; &lt;p&gt; Allows you to use your Zigbee devices &lt;b&gt;without&lt;/b&gt; the vendor&#39;s bridge or gateway. &lt;/p&gt; &#xA; &lt;p&gt; It bridges events and allows you to control your Zigbee devices via MQTT. In this way you can integrate your Zigbee devices with whatever smart home infrastructure you are using. &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/guide/getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.zigbee2mqtt.io/&#34;&gt;documentation&lt;/a&gt; provides you all the information needed to get up and running! Make sure you don&#39;t skip sections if this is your first visit, as there might be important details in there for you.&lt;/p&gt; &#xA;&lt;p&gt;If you aren&#39;t familiar with &lt;strong&gt;Zigbee&lt;/strong&gt; terminology make sure you &lt;a href=&#34;https://www.zigbee2mqtt.io/advanced/zigbee/01_zigbee_network.html&#34;&gt;read this&lt;/a&gt; to help you out.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.zigbee2mqtt.io/guide/usage/integrations.html&#34;&gt;Integrations&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Zigbee2MQTT integrates well with (almost) every home automation solution because it uses MQTT. However the following integrations are worth mentioning:&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://user-images.githubusercontent.com/7738048/40914297-49e6e560-6800-11e8-8904-36cce896e5a8.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home Assistant&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.home-assistant.io/installation/&#34;&gt;Home Assistant OS&lt;/a&gt;: Using &lt;a href=&#34;https://github.com/zigbee2mqtt/hassio-zigbee2mqtt&#34;&gt;the official addon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Other installation: using instructions &lt;a href=&#34;https://www.zigbee2mqtt.io/guide/usage/integrations/home_assistant.html&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://etc.athom.com/logo/white/256.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://homey.app/&#34;&gt;Homey&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in the &lt;a href=&#34;https://homey.app/nl-nl/app/com.gruijter.zigbee2mqtt/&#34;&gt;Homey App&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation and support in the &lt;a href=&#34;https://community.homey.app/t/83214&#34;&gt;Homey Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://user-images.githubusercontent.com/2734836/47615848-b8dd8700-dabd-11e8-9d77-175002dd8987.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.domoticz.com/&#34;&gt;Domoticz&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in Domoticz (&lt;a href=&#34;https://www.domoticz.com/wiki/Zigbee2MQTT&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/gladys-assistant-logo.jpg&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://gladysassistant.com/&#34;&gt;Gladys Assistant&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented natively in Gladys Assistant (&lt;a href=&#34;https://gladysassistant.com/docs/integrations/zigbee2mqtt/&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;left&#34; height=&#34;100px&#34; width=&#34;100px&#34; src=&#34;https://forum.iobroker.net/assets/uploads/system/site-logo.png&#34;&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.iobroker.net/&#34;&gt;IoBroker&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration implemented in IoBroker (&lt;a href=&#34;https://github.com/o0shojo0o/ioBroker.zigbee2mqtt&#34;&gt;documentation&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Koenkk/zigbee2mqtt/master/images/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Internal Architecture&lt;/h3&gt; &#xA;&lt;p&gt;Zigbee2MQTT is made up of three modules, each developed in its own Github project. Starting from the hardware (adapter) and moving up; &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman&#34;&gt;zigbee-herdsman&lt;/a&gt; connects to your Zigbee adapter and makes an API available to the higher levels of the stack. For e.g. Texas Instruments hardware, zigbee-herdsman uses the &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman/raw/master/docs/Z-Stack%20Monitor%20and%20Test%20API.pdf&#34;&gt;TI zStack monitoring and test API&lt;/a&gt; to communicate with the adapter. Zigbee-herdsman handles the core Zigbee communication. The module &lt;a href=&#34;https://github.com/koenkk/zigbee-herdsman-converters&#34;&gt;zigbee-herdsman-converters&lt;/a&gt; handles the mapping from individual device models to the Zigbee clusters they support. &lt;a href=&#34;https://github.com/Koenkk/zigbee-herdsman/raw/master/docs/07-5123-08-Zigbee-Cluster-Library.pdf&#34;&gt;Zigbee clusters&lt;/a&gt; are the layers of the Zigbee protocol on top of the base protocol that define things like how lights, sensors and switches talk to each other over the Zigbee network. Finally, the Zigbee2MQTT module drives zigbee-herdsman and maps the zigbee messages to MQTT messages. Zigbee2MQTT also keeps track of the state of the system. It uses a &lt;code&gt;database.db&lt;/code&gt; file to store this state; a text file with a JSON database of connected devices and their capabilities. Zigbee2MQTT provides a &lt;a href=&#34;https://github.com/nurikk/zigbee2mqtt-frontend&#34;&gt;web-based interface&lt;/a&gt; that allows monitoring and configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Developing&lt;/h3&gt; &#xA;&lt;p&gt;Zigbee2MQTT uses TypeScript (partially for now). Therefore after making changes to files in the &lt;code&gt;lib/&lt;/code&gt; directory you need to recompile Zigbee2MQTT. This can be done by executing &lt;code&gt;pnpm run build&lt;/code&gt;. For faster development instead of running &lt;code&gt;pnpm run build&lt;/code&gt; you can run &lt;code&gt;pnpm run build-watch&lt;/code&gt; in another terminal session, this will recompile as you change files. In first time before building you need to run &lt;code&gt;pnpm install --include=dev&lt;/code&gt; Before submitting changes run &lt;code&gt;pnpm run test-with-coverage&lt;/code&gt;, &lt;code&gt;pnpm run pretty:check&lt;/code&gt; and &lt;code&gt;pnpm run eslint&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices&#34;&gt;Supported devices&lt;/a&gt; to check whether your device is supported. There is quite an extensive list, including devices from vendors like &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=Xiaomi&#34;&gt;Xiaomi&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=IKEA&#34;&gt;Ikea&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=Philips&#34;&gt;Philips&lt;/a&gt;, &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices/#v=OSRAM&#34;&gt;OSRAM&lt;/a&gt; and more.&lt;/p&gt; &#xA;&lt;p&gt;If it&#39;s not listed in &lt;a href=&#34;https://www.zigbee2mqtt.io/supported-devices&#34;&gt;Supported devices&lt;/a&gt;, support can be added (fairly) easily, see &lt;a href=&#34;https://www.zigbee2mqtt.io/advanced/support-new-devices/01_support_new_devices.html&#34;&gt;How to support new devices&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support &amp;amp; help&lt;/h2&gt; &#xA;&lt;p&gt;If you need assistance you can check &lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt/issues&#34;&gt;opened issues&lt;/a&gt;. Feel free to help with Pull Requests when you were able to fix things or add new devices or just share the love on social media.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>browserbase/stagehand</title>
    <updated>2025-01-12T01:47:37Z</updated>
    <id>tag:github.com,2025-01-12:/browserbase/stagehand</id>
    <link href="https://github.com/browserbase/stagehand" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An AI web browsing framework focused on simplicity and extensibility.&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;toc&#34; align=&#34;center&#34;&gt; &#xA; &lt;ul style=&#34;list-style: none&#34;&gt; &#xA;  &lt;a href=&#34;https://stagehand.dev&#34;&gt; &#xA;   &lt;picture&gt; &#xA;    &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://stagehand.dev/logo-dark.svg&#34;&gt; &#xA;    &lt;img alt=&#34;Stagehand&#34; src=&#34;https://stagehand.dev/logo-light.svg?sanitize=true&#34;&gt; &#xA;   &lt;/picture&gt; &lt;/a&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; An AI web browsing framework focused on simplicity and extensibility.&lt;br&gt; &lt;a href=&#34;https://docs.stagehand.dev&#34;&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@browserbasehq/stagehand&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://stagehand.dev/api/assets/npm?mode=dark&#34;&gt; &#xA;   &lt;img alt=&#34;NPM&#34; src=&#34;https://stagehand.dev/api/assets/npm?mode=light&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://stagehand.dev/api/assets/license?mode=dark&#34;&gt; &#xA;   &lt;img alt=&#34;MIT License&#34; src=&#34;https://stagehand.dev/api/assets/license?mode=light&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/stagehand-dev/shared_invite/zt-2tdncfgkk-fF8y5U0uJzR2y2_M9c9OJA&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://stagehand.dev/api/assets/slack?mode=dark&#34;&gt; &#xA;   &lt;img alt=&#34;Slack Community&#34; src=&#34;https://stagehand.dev/api/assets/slack?mode=light&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Stagehand is the easiest way to build browser automations. It is fully compatible with &lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt;, offering three simple AI APIs (&lt;code&gt;act&lt;/code&gt;, &lt;code&gt;extract&lt;/code&gt;, and &lt;code&gt;observe&lt;/code&gt;) on top of the base Playwright &lt;code&gt;Page&lt;/code&gt; class that provide the building blocks for web automation via natural language. It also makes Playwright more accessible to non-technical users and less vulnerable to minor changes in the UI/DOM.&lt;/p&gt; &#xA;&lt;p&gt;Anything that can be done in a browser can be done with Stagehand. Consider:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to Hacker News and extract the top stories of the day&lt;/li&gt; &#xA; &lt;li&gt;Log into Amazon, search for AirPods, and buy the most relevant product&lt;/li&gt; &#xA; &lt;li&gt;Go to ESPN, search for Steph Curry, and get stats for his last 10 games&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Stagehand makes it easier to write durable, performant browser automation code. When used with &lt;a href=&#34;https://browserbase.com/&#34;&gt;Browserbase&lt;/a&gt;, it offers unparalleled debugging tools like session replay and step-by-step debugging.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;code&gt;Stagehand&lt;/code&gt; is currently available as an early release, and we&#39;re actively seeking feedback from the community. Please join our &lt;a href=&#34;https://join.slack.com/t/stagehand-dev/shared_invite/zt-2tdncfgkk-fF8y5U0uJzR2y2_M9c9OJA&#34;&gt;Slack community&lt;/a&gt; to stay updated on the latest developments and provide feedback.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://docs.stagehand.dev&#34;&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&#34;&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7&#34;&gt; &lt;img style=&#34;max-width:300px;&#34; src=&#34;https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;p&gt;To create a new Stagehand project configured to our default settings, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-browser-app --example quickstart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://docs.stagehand.dev/get_started/quickstart&#34;&gt;Quickstart Guide&lt;/a&gt; in the docs for more information.&lt;/p&gt; &#xA;&lt;p&gt;You can also add Stagehand to an existing Typescript project by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @browserbasehq/stagehand zod&#xA;npx playwright install # if running locally&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build and Run from Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/browserbase/stagehand.git&#xA;cd stagehand&#xA;npm install&#xA;npx playwright install&#xA;npm run example # run the blank script at ./examples/example.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp .env.example .env&#xA;nano .env # Edit the .env file to add API keys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href=&#34;https://join.slack.com/t/stagehand-dev/shared_invite/zt-2tdncfgkk-fF8y5U0uJzR2y2_M9c9OJA&#34;&gt;Slack community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;At a high level, we&#39;re focused on improving reliability, speed, and cost in that order of priority. If you&#39;re interested in contributing, we strongly recommend reaching out to &lt;a href=&#34;https://x.com/kamathematic&#34;&gt;Anirudh Kamath&lt;/a&gt; or &lt;a href=&#34;https://x.com/pk_iv&#34;&gt;Paul Klein&lt;/a&gt; in our &lt;a href=&#34;https://join.slack.com/t/stagehand-dev/shared_invite/zt-2tdncfgkk-fF8y5U0uJzR2y2_M9c9OJA&#34;&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please see our &lt;a href=&#34;https://docs.stagehand.dev/contributions/contributing&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This project heavily relies on &lt;a href=&#34;https://playwright.dev/&#34;&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href=&#34;https://github.com/reworkd/tarsier&#34;&gt;tarsier&lt;/a&gt;, and &lt;a href=&#34;https://github.com/normal-computing/fuji-web&#34;&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;d like to thank the following people for their contributions to Stagehand:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/jeremypress&#34;&gt;Jeremy Press&lt;/a&gt; wrote the original MVP of Stagehand and continues to be an ally to the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/navidpour&#34;&gt;Navid Pour&lt;/a&gt; is heavily responsible for the current architecture of Stagehand and the &lt;code&gt;act&lt;/code&gt; API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seanmcguire12&#34;&gt;Sean McGuire&lt;/a&gt; is a major contributor to the project and has been a great help with improving the &lt;code&gt;extract&lt;/code&gt; API and getting evals to a high level.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filip-michalsky&#34;&gt;Filip Michalsky&lt;/a&gt; has been doing a lot of work on building out integrations like &lt;a href=&#34;https://js.langchain.com/docs/integrations/tools/stagehand/&#34;&gt;Langchain&lt;/a&gt; and &lt;a href=&#34;https://github.com/browserbase/mcp-server-browserbase&#34;&gt;Claude MCP&lt;/a&gt;, generally improving the repository, and unblocking users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sameelarif&#34;&gt;Sameel Arif&lt;/a&gt; is a major contributor to the project, especially around improving the developer experience.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</summary>
  </entry>
</feed>