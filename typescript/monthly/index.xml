<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T02:11:10Z</updated>
  <subtitle>Monthly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xiaolai/everyone-can-use-english</title>
    <updated>2024-02-01T02:11:10Z</updated>
    <id>tag:github.com,2024-02-01:/xiaolai/everyone-can-use-english</id>
    <link href="https://github.com/xiaolai/everyone-can-use-english" rel="alternate"></link>
    <summary type="html">&lt;p&gt;人人都能用英语&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;人人都能用英语&lt;/h1&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/README.en-US.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/README.md&#34;&gt;简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter1.md&#34;&gt;第一章：起点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter2.md&#34;&gt;第二章：口语&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter3.md&#34;&gt;第三章：语音&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter4.md&#34;&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter5.md&#34;&gt;第五章：词典&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter6.md&#34;&gt;第六章：语法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter7.md&#34;&gt;第七章：精读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/chapter8.md&#34;&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/book/end.md&#34;&gt;后记&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Enjoy App&lt;/h1&gt; &#xA;&lt;h2&gt;* 开发者&lt;/h2&gt; &#xA;&lt;h3&gt;本地启动&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;yarn start:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;编译&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn make:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;* 普通小白用户&lt;/h2&gt; &#xA;&lt;p&gt;方法一：&lt;strong&gt;最直接简单的方法&lt;/strong&gt;是去 &lt;a href=&#34;https://github.com/xiaolai/everyone-can-use-english/tags&#34;&gt;releases 页面&lt;/a&gt;下载相应的安装文件。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果你需要&lt;strong&gt;详细下载操作指导&lt;/strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/find-compatible-software-version.md&#34;&gt;点这里&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 如果你是普通用户，并不想为本项目提供代码，按上面的操作就可以正常使用 Enjoy APP ！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;方法二：如果想要随时&lt;strong&gt;试用更新版本&lt;/strong&gt;的话，请按以下步骤操作。&lt;/p&gt; &#xA;&lt;h3&gt;MacOS 用户&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;打开命令行工具 Terminal&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 Homebrew（请参阅这篇文章：《&lt;a href=&#34;https://github.com/xiaolai/apple-computer-literacy/raw/main/start-from-terminal.md&#34;&gt;从 Terminal 开始…&lt;/a&gt;》）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 &lt;code&gt;nodejs&lt;/code&gt; 以及 &lt;code&gt;yarn&lt;/code&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install nvm&#xA;nvm install 20.5.1&#xA;brew install yarn&#xA;brew install ffmpeg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;设置 yarn 环境变量以及 Node.js 配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export ELECTRON_MIRROR=&#34;https://npmmirror.com/mirrors/electron/&#34;&#xA;corepack enable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;克隆此仓库至本地，而后安装、启动：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~&#xA;mkdir github&#xA;cd github&#xA;git clone https://github.com/xiaolai/everyone-can-use-english&#xA;cd ~/github/everyone-can-use-english&#xA;yarn install&#xA;yarn start:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;以后重新启动用 Terminal&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/github/everyone-can-use-english&#xA;git pull&#xA;yarn install&#xA;yarn start:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows 用户&lt;/h3&gt; &#xA;&lt;p&gt;系统要求：Windows 10 22H2 以上版本、 &lt;a href=&#34;https://aka.ms/wmf5download&#34;&gt;Windows PowerShell 5.1&lt;/a&gt; 以上版本、互联网网络连接正常。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;将鼠标移至任务栏的 “Windows 徽标” 上单击右键，选择 “PowerShell”&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;tips 1 ：在最新的 Windows 11 上，你看不到 “PowerShell” 选项，只有 “终端”&lt;/p&gt; &#xA;   &lt;p&gt;tips 2 ：不能用管理员权限运行 PowerShell ，否则会导致 Scoop 安装失败&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在弹出的 PowerShell 窗口中依次执行运行以下命令，安装 Scoop：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# 设置 PowerShell 执行策略&#xA;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser&#xA;# 下载安装脚本&#xA;irm get.scoop.sh -outfile &#39;install.ps1&#39;&#xA;# 执行安装, --ScoopDir 参数指定 Scoop 安装路径&#xA;.\install.ps1 -ScoopDir &#39;C:\Scoop&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;如果出现下面的错误：&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;span style=&#34;color:red&#34;&gt;irm : 未能解析此远程名称: &#39;raw.githubusercontent.com&#39;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;说明你的&lt;strong&gt;网络连接&lt;/strong&gt;有问题，请自行研究解决：&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 Nodejs 和 yarn 以及其他依赖环境 ：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop install nodejs&#xA;scoop install git&#xA;npm install yarn -g&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;设置 yarn 环境变量以及 Node.js 配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$env:ELECTRON_MIRROR=&#34;https://npmmirror.com/mirrors/electron/&#34;&#xA;corepack enable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;克隆此仓库至本地，而后安装 Enjoy APP：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cd ~&#xA;mkdir github&#xA;cd github&#xA;git clone https://github.com/xiaolai/everyone-can-use-english&#xA;cd everyone-can-use-english&#xA;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;出现 &lt;code&gt;“YN0000: · Done …… ” &lt;/code&gt; 类似字样说明安装成功！&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行 Enjoy APP ，在终端执行下列命令：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;yarn start:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;更新 Enjoy&lt;/h3&gt; &#xA;&lt;p&gt;更新并使用最新版本的 Enjoy：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;将仓库最新内容拉取到本地，在命令行工具中执行：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;结果显示为：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Already up to date.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;若非如此，那么意味着代码有所更新，那么就要运行以下命令：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行 Enjoy APP：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn start:enjoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FAQ（常见问题）&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 我该下载哪个版本？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: &lt;a href=&#34;https://raw.githubusercontent.com/xiaolai/everyone-can-use-english/main/find-compatible-software-version.md&#34;&gt;点这里&lt;/a&gt; 有详细说明。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 如何确定安装成功了？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 目前 Enjoy 的核心功能依赖两个服务，一个是 Whisper，用来语音转文字，在 软件设置 -&amp;gt; STT 语音转文字 -&amp;gt; 检查，提示工作正常表示 Whisper 安装成功。另一个是 FFmpeg，在 软件设置 -&amp;gt; FFmpeg -&amp;gt; 查找，确保提示成功。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 我用 Mac，安装不了 FFmpeg&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 安装 FFmpeg 要先安装 &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;，如果安装失败，多数是因为网络问题导致 Github 服务连接失败。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 无法语音转文字&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 先确定选择了哪个模型，如果选了 medium 以上的，试试换一个小一点的模型，电脑配置不够高可能会导致失败。如果是相对老版本 Windows 用户，可以是缺少一些依赖，到 &lt;a href=&#34;https://aka.ms/vs/17/release/vc_redist.x64.exe&#34;&gt;这里&lt;/a&gt; 下载这个软件然后安装，再重新打开 Enjoy 试试。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 智能助手一直转圈&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 绝大多数是网络问题，请确保网络环境能正常访问 OpenAI 接口。如果网络有困难，请等待后续提供其他更易用的方案。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 还有 bug，怎么办？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 可以提 &lt;a href=&#34;https://github.com/xiaolai/everyone-can-use-english/issues/new&#34;&gt;Issue&lt;/a&gt;，也可以 Mixin 开发者（Mixin ID: 1051445）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Q: 很多解决不了的问题，怎么办？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;其实，可能还有很多其它问题，比如，本软件安装、OpenAI（注册、支付）、美国线路……&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A: 1）文本生成，可以暂时用各种翻译工具，比如 Google Translate，或者其它的替代方案；2）语音生成，可以暂时用开源免费的 &lt;a href=&#34;https://github.com/LuckyHookin/edge-TTS-record&#34;&gt;Edge-TTS-record&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>janhq/jan</title>
    <updated>2024-02-01T02:11:10Z</updated>
    <id>tag:github.com,2024-02-01:/janhq/jan</id>
    <link href="https://github.com/janhq/jan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Bring AI to your Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/janhq/jan/assets/89722390/35daac7d-b895-487c-a6ac-6663daaad78e&#34; alt=&#34;Jan banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt=&#34;GitHub commit activity&#34; src=&#34;https://img.shields.io/github/commit-activity/m/janhq/jan&#34;&gt; &lt;img alt=&#34;Github Last Commit&#34; src=&#34;https://img.shields.io/github/last-commit/janhq/jan&#34;&gt; &lt;img alt=&#34;Github Contributors&#34; src=&#34;https://img.shields.io/github/contributors/janhq/jan&#34;&gt; &lt;img alt=&#34;GitHub closed issues&#34; src=&#34;https://img.shields.io/github/issues-closed/janhq/jan&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1107178041848909847?label=discord&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://jan.ai/guides&#34;&gt;Getting Started&lt;/a&gt; - &lt;a href=&#34;https://jan.ai/docs&#34;&gt;Docs&lt;/a&gt; - &lt;a href=&#34;https://github.com/janhq/jan/releases&#34;&gt;Changelog&lt;/a&gt; - &lt;a href=&#34;https://github.com/janhq/jan/issues&#34;&gt;Bug reports&lt;/a&gt; - &lt;a href=&#34;https://discord.gg/AsJ8krTT3N&#34;&gt;Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ &lt;strong&gt;Jan is currently in Development&lt;/strong&gt;: Expect breaking changes and bugs!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Jan is an open-source ChatGPT alternative that runs 100% offline on your computer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Jan runs on any hardware.&lt;/strong&gt; From PCs to multi-GPU clusters, Jan supports universal architectures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Nvidia GPUs (fast)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Apple M-series (fast)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Apple Intel&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Linux Debian&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Windows x64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr style=&#34;text-align:center&#34;&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Version Type&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34; style=&#34;text-align:center&#34;&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34; style=&#34;text-align:center&#34;&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;text-align:center&#34;&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Stable (Recommended)&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://github.com/janhq/jan/releases/download/v0.4.5/jan-win-x64-0.4.5.exe&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/windows.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://github.com/janhq/jan/releases/download/v0.4.5/jan-mac-x64-0.4.5.dmg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png&#34; style=&#34;height:15px; width: 15px&#34;&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://github.com/janhq/jan/releases/download/v0.4.5/jan-mac-arm64-0.4.5.dmg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png&#34; style=&#34;height:15px; width: 15px&#34;&gt; &lt;b&gt;M1/M2&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://github.com/janhq/jan/releases/download/v0.4.5/jan-linux-amd64-0.4.5.deb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.deb&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://github.com/janhq/jan/releases/download/v0.4.5/jan-linux-x86_64-0.4.5.AppImage&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr style=&#34;text-align:center&#34;&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Experimental (Nightly Build)&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://delta.jan.ai/latest/jan-win-x64-0.4.5-215.exe&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/windows.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://delta.jan.ai/latest/jan-mac-x64-0.4.5-215.dmg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png&#34; style=&#34;height:15px; width: 15px&#34;&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://delta.jan.ai/latest/jan-mac-arm64-0.4.5-215.dmg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/mac.png&#34; style=&#34;height:15px; width: 15px&#34;&gt; &lt;b&gt;M1/M2&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://delta.jan.ai/latest/jan-linux-amd64-0.4.5-215.deb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.deb&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center&#34;&gt; &lt;a href=&#34;https://delta.jan.ai/latest/jan-linux-x86_64-0.4.5-215.AppImage&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/docs/static/img/linux.png&#34; style=&#34;height:14px; width: 14px&#34;&gt; &lt;b&gt;jan.AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Download the latest version of Jan at &lt;a href=&#34;https://jan.ai/&#34;&gt;https://jan.ai/&lt;/a&gt; or visit the &lt;strong&gt;&lt;a href=&#34;https://github.com/janhq/jan/releases&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/strong&gt; to download any previous release.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/janhq/jan/dev/demo.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Realtime Video: Jan v0.4.3-nightly on a Mac M1, 16GB Sonoma 14&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quicklinks&lt;/h2&gt; &#xA;&lt;h4&gt;Jan&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jan.ai/&#34;&gt;Jan website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janhq/jan&#34;&gt;Jan GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jan.ai/guides/&#34;&gt;User Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jan.ai/developer/&#34;&gt;Developer docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jan.ai/api-reference/&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jan.ai/docs/&#34;&gt;Specs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Nitro&lt;/h4&gt; &#xA;&lt;p&gt;Nitro is a high-efficiency C++ inference engine for edge computing. It is lightweight and embeddable, and can be used on its own within your own projects.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nitro.jan.ai&#34;&gt;Nitro Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janhq/nitro&#34;&gt;Nitro GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nitro.jan.ai/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nitro.jan.ai/api-reference&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;As Jan is in development mode, you might get stuck on a broken build.&lt;/p&gt; &#xA;&lt;p&gt;To reset your installation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the following commands to remove any dangling backend processes:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ps aux | grep nitro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Look for processes like &#34;nitro&#34; and &#34;nitro_arm_64,&#34; and kill them one by one with:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kill -9 &amp;lt;PID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove Jan from your Applications folder and Cache folder&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make clean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will remove all build artifacts and cached files:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Delete Jan extension from your &lt;code&gt;~/jan/extensions&lt;/code&gt; folder&lt;/li&gt; &#xA;   &lt;li&gt;Delete all &lt;code&gt;node_modules&lt;/code&gt; in current folder&lt;/li&gt; &#xA;   &lt;li&gt;Clear Application cache in &lt;code&gt;~/Library/Caches/jan&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Requirements for running Jan&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS: 13 or higher&lt;/li&gt; &#xA; &lt;li&gt;Windows: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows 10 or higher&lt;/li&gt; &#xA;   &lt;li&gt;To enable GPU support: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Nvidia GPU with CUDA Toolkit 11.7 or higher&lt;/li&gt; &#xA;     &lt;li&gt;Nvidia driver 470.63.01 or higher&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;glibc 2.27 or higher (check with &lt;code&gt;ldd --version&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;gcc 11, g++ 11, cpp 11 or higher, refer to this &lt;a href=&#34;https://jan.ai/guides/troubleshooting/gpu-not-used/#specific-requirements-for-linux&#34;&gt;link&lt;/a&gt; for more information&lt;/li&gt; &#xA;   &lt;li&gt;To enable GPU support: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Nvidia GPU with CUDA Toolkit 11.7 or higher&lt;/li&gt; &#xA;     &lt;li&gt;Nvidia driver 470.63.01 or higher&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please read the &lt;a href=&#34;https://raw.githubusercontent.com/janhq/jan/dev/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file&lt;/p&gt; &#xA;&lt;h3&gt;Pre-requisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;node &amp;gt;= 20.0.0&lt;/li&gt; &#xA; &lt;li&gt;yarn &amp;gt;= 1.22.0&lt;/li&gt; &#xA; &lt;li&gt;make &amp;gt;= 3.81&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Instructions&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository and prepare:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/janhq/jan&#xA;cd jan&#xA;git checkout -b DESIRED_BRANCH&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run development and use Jan Desktop&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will start the development server and open the desktop app.&lt;/p&gt; &#xA;&lt;h3&gt;For production build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Do steps 1 and 2 in the previous section&#xA;# Build the app&#xA;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build the app MacOS m1/m2 for production (with code signing already done) and put the result in &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Jan builds on top of other open-source projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NVIDIA/TensorRT&#34;&gt;TensorRT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bugs &amp;amp; requests: file a GitHub ticket&lt;/li&gt; &#xA; &lt;li&gt;For discussion: join our Discord &lt;a href=&#34;https://discord.gg/FTk2MvZwJH&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For business inquiries: email &lt;a href=&#34;mailto:hello@jan.ai&#34;&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For jobs: please email &lt;a href=&#34;mailto:hr@jan.ai&#34;&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Jan is free and open source, under the AGPLv3 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>refinedev/refine</title>
    <updated>2024-02-01T02:11:10Z</updated>
    <id>tag:github.com,2024-02-01:/refinedev/refine</id>
    <link href="https://github.com/refinedev/refine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A React Framework for building internal tools, admin panels, dashboards &amp; B2B apps with unmatched flexibility.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://refine.dev/&#34;&gt; &lt;img alt=&#34;refine logo&#34; src=&#34;https://refine.ams3.cdn.digitaloceanspaces.com/readme/refine-readme-banner.png&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;a href=&#34;https://refine.dev&#34;&gt;Home Page&lt;/a&gt; | &#xA;  &lt;a href=&#34;https://discord.gg/refine&#34;&gt;Discord&lt;/a&gt; | &#xA;  &lt;a href=&#34;https://refine.dev/examples/&#34;&gt;Examples&lt;/a&gt; | &#xA;  &lt;a href=&#34;https://refine.dev/blog/&#34;&gt;Blog&lt;/a&gt; | &#xA;  &lt;a href=&#34;https://refine.dev/docs/&#34;&gt;Documentation&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;strong&gt;Build your &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;-based CRUD applications, without constraints.&lt;/strong&gt;&#xA; &lt;br&gt;An open-source, headless web application framework developed with flexibility in mind. &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/refinedev/awesome-refine&#34;&gt;&lt;img src=&#34;https://github.com/refinedev/awesome-refine/raw/main/images/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bestpractices.dev/projects/8101&#34;&gt;&lt;img src=&#34;https://www.bestpractices.dev/projects/8101/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@refinedev/core&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@refinedev/core.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/refinedev/refine/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/refinedev/refine&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/refinedev/refine/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/refine&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/837692625737613362.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/refine_dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/refine_dev?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/refine-3?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-refine-3&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=362220&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;refine - 100% open source React framework to build web apps 3x faster | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://refine.dev&#34;&gt;&lt;img src=&#34;https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/new-diagram.jpg&#34; alt=&#34;how-refine-works&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Refine?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Refine&lt;/strong&gt; is a meta &lt;strong&gt;React&lt;/strong&gt; framework that enables the rapid✨ development of a wide range of web applications.&lt;/p&gt; &#xA;&lt;p&gt;From internal tools to admin panels, B2B apps, and dashboards, it serves as a comprehensive solution for building any type of &lt;strong&gt;CRUD&lt;/strong&gt; application.&lt;/p&gt; &#xA;&lt;p&gt;Refine&#39;s internal hooks and components simplify the development process and eliminate repetitive tasks by providing industry-standard solutions for crucial aspects of a project, including &lt;strong&gt;authentication&lt;/strong&gt;, &lt;strong&gt;access control&lt;/strong&gt;, &lt;strong&gt;routing&lt;/strong&gt;, &lt;strong&gt;networking&lt;/strong&gt;, &lt;strong&gt;state management&lt;/strong&gt;, and &lt;strong&gt;i18n&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Refine&lt;/strong&gt; is &lt;em&gt;headless by design&lt;/em&gt;, thereby offering unlimited styling and customization options.&lt;/p&gt; &#xA;&lt;h2&gt;What do you mean by &#34;headless&#34; ?&lt;/h2&gt; &#xA;&lt;p&gt;Instead of being limited to a set of pre-styled components, &lt;strong&gt;Refine&lt;/strong&gt; provides collections of helper &lt;code&gt;hooks&lt;/code&gt;, &lt;code&gt;components&lt;/code&gt;, &lt;code&gt;providers&lt;/code&gt;, and more. Since business logic and the UI are completely decoupled, you can customize the UI without constraints.&lt;/p&gt; &#xA;&lt;p&gt;It means that &lt;strong&gt;Refine&lt;/strong&gt; just works &lt;em&gt;seamlessly&lt;/em&gt; with any &lt;em&gt;custom designs&lt;/em&gt; or &lt;em&gt;UI frameworks&lt;/em&gt;. Thanks to it&#39;s headless architecture, you can use popular CSS frameworks like &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; or even create your own styles from scratch.&lt;/p&gt; &#xA;&lt;p&gt;Refine also provides integrations with &lt;a href=&#34;https://ant.design/&#34;&gt;Ant Design&lt;/a&gt;, &lt;a href=&#34;https://mui.com/material-ui/getting-started/overview/&#34;&gt;Material UI&lt;/a&gt;, &lt;a href=&#34;https://mantine.dev/&#34;&gt;Mantine&lt;/a&gt;, and &lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra UI&lt;/a&gt; to get you started quickly. These libraries are a set of components that are nicely integrated with the headless &lt;code&gt;@refinedev/core&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;h3&gt;Headless in Routing&lt;/h3&gt; &#xA;&lt;p&gt;For the routing, Refine&#39;s headless approach shines too. It doesn&#39;t tie you to a single routing method or library. Instead, it offers a simple routing interface with built-in integrations for popular libraries.&lt;/p&gt; &#xA;&lt;p&gt;This means you can use Refine seamlessly on different platforms like React Native, Electron, Next.js, Remix, etc. without any extra setup steps.&lt;/p&gt; &#xA;&lt;h2&gt;⚡ Try Refine&lt;/h2&gt; &#xA;&lt;p&gt;Refine&#39;s &lt;a href=&#34;https://refine.dev/#playground&#34;&gt;browser-based app scaffolder&lt;/a&gt; enables you to build a Refine app through an interactive, step-by-step process in your browser.&lt;/p&gt; &#xA;&lt;p&gt;You have the freedom to select your preferred libraries and frameworks, and the tool generates a ready-to-download boilerplate code. This feature not only lets you preview and tweak your project on the fly but also accelerates the overall development workflow.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://refine.dev/#playground&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://refine.ams3.cdn.digitaloceanspaces.com/blog/2023-07-25-refine-primereact/create-refine-project.gif&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Refine&lt;/strong&gt;&amp;nbsp;shines on &lt;em&gt;data-intensive⚡&lt;/em&gt; enterprise B2B applications like &lt;strong&gt;admin panels&lt;/strong&gt;, &lt;strong&gt;dashboards&lt;/strong&gt; and &lt;strong&gt;internal tools&lt;/strong&gt;. Thanks to the built-in &lt;strong&gt;SSR support&lt;/strong&gt;, it&amp;nbsp;can also power &lt;em&gt;customer-facing&lt;/em&gt; applications like &lt;strong&gt;storefronts&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can take a look at some live examples that can be built using &lt;strong&gt;refine&lt;/strong&gt; from scratch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://example.crm.refine.dev/&#34;&gt;Fully-functional CRM Application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.refine.dev/readme-admin-panel&#34;&gt;Fully-functional Admin Panel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://win95.refine.dev/&#34;&gt;Win95 Style Admin panel 🪟&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.refine.dev/readme-medium-clone&#34;&gt;Medium Clone - Real World Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://multi-tenancy-strapi.refine.dev/&#34;&gt;Multitenancy Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.refine.dev/readme-ssr-storefront&#34;&gt;Storefront&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://refine.dev/docs/examples/&#34;&gt;👉 Refer to most popular real use case examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://refine.dev/docs/examples#other-examples&#34;&gt;👉 More &lt;strong&gt;Refine&lt;/strong&gt; powered different usage scenarios can be found here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;p&gt;⚙️ Zero-config, &lt;strong&gt;one-minute setup&lt;/strong&gt; with a &lt;strong&gt;single CLI command&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔌 Connectors for &lt;strong&gt;15+ backend services&lt;/strong&gt; including &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/simple-rest&#34;&gt;REST API&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/graphql&#34;&gt;GraphQL&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/nestjsx-crud&#34;&gt;NestJs CRUD&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/airtable&#34;&gt;Airtable&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/strapi&#34;&gt;Strapi&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/strapi-v4&#34;&gt;Strapi v4&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/supabase&#34;&gt;Supabase&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/hasura&#34;&gt;Hasura&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/appwrite&#34;&gt;Appwrite&lt;/a&gt;, &lt;a href=&#34;https://github.com/refinedev/refine/tree/master/packages/nestjs-query&#34;&gt;Nestjs-Query&lt;/a&gt;, &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;, &lt;a href=&#34;https://www.sanity.io/&#34;&gt;Sanity&lt;/a&gt;, and &lt;a href=&#34;https://directus.io/&#34;&gt;Directus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;🌐 &lt;strong&gt;SSR support&lt;/strong&gt; with &lt;strong&gt;Next.js&lt;/strong&gt; or &lt;strong&gt;Remix&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔍 Auto-generated &lt;strong&gt;CRUD&lt;/strong&gt; UIs from &lt;strong&gt;your API data structure&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;⚛ Perfect &lt;strong&gt;state management&lt;/strong&gt; &amp;amp; &lt;strong&gt;mutations&lt;/strong&gt; with &lt;strong&gt;React Query&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔀 &lt;strong&gt;Advanced routing&lt;/strong&gt; with any router library of your choice&lt;/p&gt; &#xA;&lt;p&gt;🔐 Providers for seamless &lt;strong&gt;authentication&lt;/strong&gt; and &lt;strong&gt;access control&lt;/strong&gt; flows&lt;/p&gt; &#xA;&lt;p&gt;⚡ Out-of-the-box support for &lt;strong&gt;live / real-time applications&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;📄 Easy &lt;strong&gt;audit logs&lt;/strong&gt; &amp;amp; &lt;strong&gt;document versioning&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;💬 Support for any &lt;strong&gt;i18n&lt;/strong&gt; framework&lt;/p&gt; &#xA;&lt;p&gt;💪 Future-proof, &lt;strong&gt;robust architecture&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;⌛️ Built-in CLI with time-saving features&lt;/p&gt; &#xA;&lt;p&gt;💻 Refine &lt;a href=&#34;https://github.com/refinedev/refine/raw/master/packages/devtools/README.md&#34;&gt;Devtools&lt;/a&gt; - dive deeper into your app and provide useful insights&lt;/p&gt; &#xA;&lt;p&gt;✅ Full &lt;strong&gt;test coverage&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;There are two ways to create a Refine app: either by using the &lt;code&gt;create refine-app&lt;/code&gt; CLI tool or the &lt;a href=&#34;https://refine.dev/#playground&#34;&gt;browser-based app scaffolder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To quickly start a Refine project with &lt;a href=&#34;https://ant.design/&#34;&gt;Ant Design&lt;/a&gt; as the default UI framework, run the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm create refine-app@latest -- -o refine-antd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the setup is complete, navigate to the project folder and start your project with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Your &lt;strong&gt;Refine&lt;/strong&gt; application will be accessible at &lt;a href=&#34;http://localhost:5173&#34;&gt;http://localhost:5173&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:5173&#34;&gt;&lt;img src=&#34;https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/new-welcome.png&#34; alt=&#34;Welcome on board&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The command above uses pre-set options for ease. For a different tech stack, simply run:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;npm create refine-app@latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Let&#39;s consume a public &lt;code&gt;fake REST API&lt;/code&gt; and add two resources (&lt;em&gt;blog_posts&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt;) to our project. Replace the contents of &lt;code&gt;src/App.tsx&lt;/code&gt; with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tsx&#34;&gt;import { Refine } from &#34;@refinedev/core&#34;;&#xA;import {&#xA;  notificationProvider,&#xA;  ErrorComponent,&#xA;  ThemedLayout,&#xA;} from &#34;@refinedev/antd&#34;;&#xA;import routerProvider, { NavigateToResource } from &#34;@refinedev/react-router-v6&#34;;&#xA;import dataProvider from &#34;@refinedev/simple-rest&#34;;&#xA;&#xA;import { BrowserRouter, Routes, Route, Outlet } from &#34;react-router-dom&#34;;&#xA;&#xA;import { AntdInferencer } from &#34;@refinedev/inferencer/antd&#34;;&#xA;&#xA;import &#34;@refinedev/antd/dist/reset.css&#34;;&#xA;&#xA;const App: React.FC = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;BrowserRouter&amp;gt;&#xA;      &amp;lt;Refine&#xA;        routerProvider={routerProvider}&#xA;        dataProvider={dataProvider(&#34;https://api.fake-rest.refine.dev&#34;)}&#xA;        notificationProvider={notificationProvider}&#xA;        resources={[&#xA;          {&#xA;            name: &#34;blog_posts&#34;,&#xA;            list: &#34;/blog-posts&#34;,&#xA;            show: &#34;/blog-posts/show/:id&#34;,&#xA;            create: &#34;/blog-posts/create&#34;,&#xA;            edit: &#34;/blog-posts/edit/:id&#34;,&#xA;            meta: { canDelete: true },&#xA;          },&#xA;          {&#xA;            name: &#34;categories&#34;,&#xA;            list: &#34;/categories&#34;,&#xA;            show: &#34;/categories/show/:id&#34;,&#xA;          },&#xA;        ]}&#xA;      &amp;gt;&#xA;        &amp;lt;Routes&amp;gt;&#xA;          &amp;lt;Route&#xA;            element={&#xA;              &amp;lt;ThemedLayout&amp;gt;&#xA;                &amp;lt;Outlet /&amp;gt;&#xA;              &amp;lt;/ThemedLayout&amp;gt;&#xA;            }&#xA;          &amp;gt;&#xA;            &amp;lt;Route index element={&amp;lt;NavigateToResource /&amp;gt;} /&amp;gt;&#xA;            &amp;lt;Route path=&#34;blog-posts&#34;&amp;gt;&#xA;              &amp;lt;Route index element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;              &amp;lt;Route path=&#34;show/:id&#34; element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;              &amp;lt;Route path=&#34;create&#34; element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;              &amp;lt;Route path=&#34;edit/:id&#34; element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;            &amp;lt;/Route&amp;gt;&#xA;            &amp;lt;Route path=&#34;categories&#34;&amp;gt;&#xA;              &amp;lt;Route index element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;              &amp;lt;Route path=&#34;show/:id&#34; element={&amp;lt;AntdInferencer /&amp;gt;} /&amp;gt;&#xA;            &amp;lt;/Route&amp;gt;&#xA;            &amp;lt;Route path=&#34;*&#34; element={&amp;lt;ErrorComponent /&amp;gt;} /&amp;gt;&#xA;          &amp;lt;/Route&amp;gt;&#xA;        &amp;lt;/Routes&amp;gt;&#xA;      &amp;lt;/Refine&amp;gt;&#xA;    &amp;lt;/BrowserRouter&amp;gt;&#xA;  );&#xA;};&#xA;&#xA;export default App;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;🚀 The &lt;a href=&#34;https://refine.dev/docs/packages/documentation/inferencer/&#34;&gt;&lt;strong&gt;Refine Inferencer package&lt;/strong&gt;&lt;/a&gt; automatically generates &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, and &lt;code&gt;edit&lt;/code&gt; pages by guessing configurations from API data. We&#39;ve used it here for a quick, clear start, but you can also choose to code your pages from scratch instead of using the Inferencer feature.&lt;/p&gt; &#xA;&lt;p&gt;Now, you should see the output as a table populated with &lt;code&gt;blog_posts&lt;/code&gt; &amp;amp; &lt;code&gt;category&lt;/code&gt; data:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/readme-quick-start-2.png&#34; alt=&#34;First example result&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;You can get the auto-generated page codes by clicking the &lt;code&gt;Show Code&lt;/code&gt; button on each page. Afterward, simply pass the pages to the &lt;code&gt;resources&lt;/code&gt; array by replacing them with the Inferencer components.&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;👉 Jump to &lt;a href=&#34;https://refine.dev/docs/tutorial/introduction/index/&#34;&gt;Tutorial&lt;/a&gt; to continue your work and turn the example into a full-blown CRUD application.&lt;/p&gt; &#xA;&lt;p&gt;👉 Visit the &lt;a href=&#34;https://refine.dev/docs/getting-started/overview/&#34;&gt;Learn the Basics page&lt;/a&gt; to get informed about the fundamental concepts.&lt;/p&gt; &#xA;&lt;p&gt;👉 Read more on &lt;a href=&#34;https://refine.dev/docs/advanced-tutorials/&#34;&gt;Advanced Tutorials &lt;/a&gt; for different usage scenarios.&lt;/p&gt; &#xA;&lt;p&gt;👉 See the real-life &lt;a href=&#34;https://example.crm.refine.dev/&#34;&gt;CRM Application&lt;/a&gt; project built using Refine.&lt;/p&gt; &#xA;&lt;p&gt;👉 Play with interactive &lt;a href=&#34;https://refine.dev/docs/examples/&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://refine.dev/docs/contributing/#ways-to-contribute&#34;&gt;👉 Refer to the contribution docs for more information.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have any doubts related to the project or want to discuss something, then join our &lt;a href=&#34;https://discord.gg/refine&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ♥️&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/refinedev/refine/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=refinedev/refine&amp;amp;max=400&amp;amp;columns=20&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License, Copyright © 2021-present Refinedev&lt;/p&gt;</summary>
  </entry>
</feed>