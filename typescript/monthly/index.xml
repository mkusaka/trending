<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T02:56:45Z</updated>
  <subtitle>Monthly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bluesky-social/adx</title>
    <updated>2022-06-04T02:56:45Z</updated>
    <id>tag:github.com,2022-06-04:/bluesky-social/adx</id>
    <link href="https://github.com/bluesky-social/adx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Experiment in self-authenticating data structures for a federated social network&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ADX - Authenticated Data eXperiment&lt;/h1&gt; &#xA;&lt;p&gt;This is a working repository for Bluesky&#39;s data protocol which we&#39;ve termed ADX: the Authenticated Data eXperiment. The &#34;X&#34; stands for &#34;experiment&#34; while the project lives in an early exploratory state.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏èThis is not production-ready or even alpha software. This project is in active development.‚ö†Ô∏è&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Please do not try to build anything with this! Interfaces and data structures are likely to radically change, and we took some shortcuts on features still in development (key management, schemas, indexing, to name a few). This experiment is primarily confined to the data &amp;amp; authorization layer with hints at some of the other systems.&lt;/p&gt; &#xA;&lt;p&gt;We encourage you to &lt;a href=&#34;https://github.com/bluesky-social/adx/discussions&#34;&gt;open discussions&lt;/a&gt; with any questions or ideas you have. This code is not meant to be perfect or 100% bug free. Therefore, while we&#39;re interested to hear about any problems you may run into (in the form of Issues), we will likely leave them for a larger rewrite and may not be resolving them in the near term.&lt;/p&gt; &#xA;&lt;h2&gt;‚ÑπÔ∏è About this project&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about ADX, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bluesky-social/adx/main/architecture.md&#34;&gt;The Architecture document&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://blueskyweb.xyz/blog/3-6-2022-a-self-authenticating-social-protocol&#34;&gt;Blogpost on self-authenticating data structures&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üîç What&#39;s here?&lt;/h2&gt; &#xA;&lt;p&gt;This is a monorepo containing three packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;common&lt;/code&gt;: This is the adx SDK that contains implementations of:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;the repository data structure&lt;/li&gt; &#xA;   &lt;li&gt;a sample network namespace (microblogging) with both a full client and delegator client implementation&lt;/li&gt; &#xA;   &lt;li&gt;an authorization library for working with adx-capable UCANs&lt;/li&gt; &#xA;   &lt;li&gt;some helpers for making calls to a adx data server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;server&lt;/code&gt;: This is an implementation of a adx server. For simplicity&#39;s sake, it actually combines the function of three &#34;roles&#34; in the network:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Identity:&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;maintains a mapping of username -&amp;gt; DID&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Data:&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;maintains a pointer to the latest root CID of a data repository.&lt;/li&gt; &#xA;     &lt;li&gt;verifies the authority of pushes to your repo and updates the root.&lt;/li&gt; &#xA;     &lt;li&gt;serves the repository for pulls.&lt;/li&gt; &#xA;     &lt;li&gt;acts as a delegatee and makes updates to your repository for properly authorized requests&lt;/li&gt; &#xA;     &lt;li&gt;sends updates to other data/indexing servers that have subscribed to a particular DID that it is hosting&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Indexing:&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;stores an indexed version of repositories that it is hosting or that its user&#39;s are following&lt;/li&gt; &#xA;     &lt;li&gt;returned global view of data including follower lists, aggregated like counts, and user timelines.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cli&lt;/code&gt;: This is a basic command line interface for interactions with the adx network:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;creating a local repository&lt;/li&gt; &#xA;   &lt;li&gt;registering a user&lt;/li&gt; &#xA;   &lt;li&gt;creating/editing/deleting posts&lt;/li&gt; &#xA;   &lt;li&gt;creating/deleting likes&lt;/li&gt; &#xA;   &lt;li&gt;viewing a user&#39;s timeline&lt;/li&gt; &#xA;   &lt;li&gt;viewing a user&#39;s feed&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Note: the cli uses a delegator client at the moment. We are adding the option to use a full client soon.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì∫ Demo recording&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluesky-social/adx/main/docs/demo.gif&#34; alt=&#34;demo.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üèéÔ∏è Quick use&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Requires Node&amp;gt;=16, and yarn&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to jump right in? Follow these steps to get a sample two server network up and running.&lt;/p&gt; &#xA;&lt;p&gt;This demo takes four terminal windows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;two servers to show off data federation (you can use just one here if you like)&lt;/li&gt; &#xA; &lt;li&gt;two cli clients representing two users on separate servers interaction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Please note, the server stores data in-memory. If you shutdown and restart a server, your account and related data will be deleted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The number in parentheses tells you which terminal to run each command in. From project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install dependencies&#xA;(1) yarn&#xA;&#xA;# build projects&#xA;(1) yarn build&#xA;&#xA;# run server&#xA;(1) yarn server # runs on localhost:2583&#xA;&#xA;# in a separate terminal, run a second server&#xA;(2) yarn server:alt # runs on localhost:2584&#xA;&#xA;# set an env var to store alice&#39;s repo in a scoped dir&#xA;(3) export ADX_REPO_PATH=&#34;~/.adx-alice&#34;&#xA;&#xA;# set an env var to store bob&#39;s repo in a scoped dir&#xA;(4) export ADX_REPO_PATH=&#34;~/.adx-bob&#34;&#xA;&#xA;# register alice&#xA;(3) yarn cli init&#xA;# prompt with &#39;alice&#39; for username, &#39;localhost:2583&#39; for host, true for registration &amp;amp; false for delegator client&#xA;&#xA;# register bob&#xA;(4) yarn cli init&#xA;# prompt with &#39;bob&#39; for username, &#39;localhost:2584&#39; for host, true for registration &amp;amp; false for delegator client&#xA;&#xA;# make a couple posts as alice&#xA;(3) yarn cli post &#34;hello world&#34;&#xA;(3) yarn cli post &#34;howdy&#34;&#xA;&#xA;# follow alice as bob&#xA;(4) yarn cli follow alice@localhost:2583&#xA;&#xA;# like alice&#39;s post&#xA;(4) yarn cli like alice@localhost:2583 {post_id from alice post} # the post id has the format `3iwc-gvs-ehpk-2s`&#xA;&#xA;# view your timeline&#xA;(4) yarn cli timeline&#xA;&#xA;# list your follows&#xA;(3/4) yarn cli list follows&#xA;&#xA;# list your followers&#xA;(3/4) yarn cli list followers&#xA;&#xA;# list your feed&#xA;(3/4) yarn cli feed&#xA;&#xA;# view alice&#39;s feed as bob&#xA;(4) yarn cli feed alice@localhost:2583&#xA;&#xA;# Keep playing around. Try unliking, deleting or editing posts, or add a third user into the mix! They can be registered to one of the existing servers&#xA;&#xA;# Remember, the servers are running in-memory, if you restart a server and want to restart your CLI as well, run&#xA;(3/4) yarn cli destroy # deletes user repo &amp;amp; keypair&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üóíÔ∏è Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We have not put together detailed documentation for the server API or the SDK because the APIs are expected to change soon.&lt;/p&gt; &#xA;&lt;p&gt;If you are inclined to play with either, your best bet is to check the tests to see how to use each part of the library.&lt;/p&gt; &#xA;&lt;p&gt;Specifically:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;server/test/delegator.ts&lt;/code&gt; contains an example of a delegator client (the simplest client to work with)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;server/test/indexer.ts&lt;/code&gt; contains an example of multiple users interaction on a 2 server network&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;common/test/repo.ts&lt;/code&gt; contains an examples of directly performing updates to a user repo&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;common/test/microblog.ts&lt;/code&gt; contains an examples of using the microblog library to create/update microblog namespace objects in the repository&lt;/p&gt; &#xA;&lt;p&gt;For communicating directly with the server api, there is a schema above each route that details the exact parameters it expects to receive. Any post route will require a valid UCAN as a Bearer token. We recommend using the SDK to make these requests as these tokens can be difficult to roll by hand.&lt;/p&gt; &#xA;&lt;h2&gt;üî¶ Notes for code spelunkers&lt;/h2&gt; &#xA;&lt;p&gt;We hope you jump into the code to explore these concepts alongside us!&lt;/p&gt; &#xA;&lt;p&gt;As mentioned earlier, please join in the Discussions with questions and ideas. Feel free to report bugs, with the understanding that we may not be resolving them any time soon.&lt;/p&gt; &#xA;&lt;p&gt;A few notes for the curious ones that find themselves trawling the depths of the code:&lt;/p&gt; &#xA;&lt;h3&gt;Namespaces&lt;/h3&gt; &#xA;&lt;p&gt;Data is separated in the user repository by namespace.&lt;/p&gt; &#xA;&lt;p&gt;A user&#39;s microblogging data lives separately from their image broadcasting data which lives separately from their long form writing data and so on. Each namespace following its respective data spec.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve implemented only one sample namespace here: microblogging.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll notice that we sometimes switch between using the words &#34;interactions&#34; and &#34;likes&#34;. The reason for this is that the user repository speaks in terms of &#34;interactions&#34;, which is any sort of interaction generated by an application. These may be likes, retweets, upvotes, shares, rsvps, etc. Our current (simplified) microblogging spec only allows for &#34;likes&#34; as interactions.&lt;/p&gt; &#xA;&lt;p&gt;Therefore we try to talk about the general concept as &#34;interactions&#34; and the particular as &#34;likes&#34;. There is some gray area here where those two concepts blur together and will be better demarcated as we develop our schema system.&lt;/p&gt; &#xA;&lt;h3&gt;DIDs and UCANs&lt;/h3&gt; &#xA;&lt;p&gt;In this prototype a user&#39;s root DID is a simple &lt;code&gt;did:key&lt;/code&gt;. In the future, these will be more permanent identifiers such as &lt;code&gt;did:ion&lt;/code&gt; or our currently unnamed consortium-provided DID proposed in the architecture docs.&lt;/p&gt; &#xA;&lt;p&gt;The DID network is outside of the scope of this prototype. However, a DID is the canonical, unchanging identifier for a user. and is needed in order to enable data/server interop. Therefore we run a very simple DID network that only allows POSTs and GETs (with signature checks). The DID network is run &lt;em&gt;on&lt;/em&gt; the data server (&lt;code&gt;http://localhost:2583/did-network&lt;/code&gt;), however every server that is running communicates with the &lt;em&gt;same&lt;/em&gt; data server when it comes to DID network requests. As DIDs are self-describing for resolution, we emulate this by hard coding how to discover a DID (ie &#34;always go to &lt;em&gt;this particular address&lt;/em&gt; not your personal data server&#34;).&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll notice that we delegate a UCAN from the root key to the root key (which is a no-op), this is to mirror the process of receiving a fully delegated UCAN &lt;em&gt;from your actual root key&lt;/em&gt; to a &lt;em&gt;fully permissioned device key&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also notice that the DID for the microblogging namespace is just &lt;code&gt;did:example:microblog&lt;/code&gt; (which is not an actual valid DID). This is a stand in until we have an addressed network for schemas.&lt;/p&gt; &#xA;&lt;p&gt;UCAN permissions are also simplified at the current moment, allowing for scoped &lt;code&gt;WRITE&lt;/code&gt; permission or full-repo &lt;code&gt;MAINTENANCE&lt;/code&gt; permission. These permissions will be expanding in the future to allow presenting CRUD operations, and more detailed maintenance (ie creation vs merging vs cleanup, etc)&lt;/p&gt; &#xA;&lt;h3&gt;Client types&lt;/h3&gt; &#xA;&lt;p&gt;In the architecture overview, we specify three client types: full, light, and delegator. This library only contains implementations of full and delegator. Thus we use delegator for light weight operations and a full client when we want the entire repository.&lt;/p&gt; &#xA;&lt;p&gt;The main ramification of this is that data server subscribers must receive the &lt;em&gt;full repo&lt;/em&gt; of the users that they subscribe to. Once we add in light clients, they can receive only the &lt;em&gt;sections&lt;/em&gt; of the repo that they are interested in (for instance a single post or a like) while having the same trust model as a full repo.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>changesets/changesets</title>
    <updated>2022-06-04T02:56:45Z</updated>
    <id>tag:github.com,2022-06-04:/changesets/changesets</id>
    <link href="https://github.com/changesets/changesets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶ã A way to manage your versioning and changelogs with a focus on monorepos&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/changesets/changesets/main/assets/images/changesets-banner-light.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A tool to manage versioning and changelogs &lt;br&gt; with a focus on multi-package repositories &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://changelogs.xyz/@changesets/cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/changelogs.xyz-Explore%20Changelog-brightgreen&#34; alt=&#34;View changelog&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;changesets&lt;/code&gt; workflow is designed to help when people are making changes, all the way through to publishing. It lets contributors declare how their changes should be released, then we automate updating package versions, and changelogs, and publishing new versions of packages based on the provided information.&lt;/p&gt; &#xA;&lt;p&gt;Changesets has a focus on solving these problems for multi-package repositories, and keeps packages that rely on each other within the multi-package repository up-to-date, as well as making it easy to make changes to groups of packages.&lt;/p&gt; &#xA;&lt;h2&gt;How do we do that?&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;code&gt;changeset&lt;/code&gt; is an intent to release a set of packages at particular &lt;a href=&#34;https://semver.org/&#34;&gt;semver bump types&lt;/a&gt; with a summary of the changes made.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;@changesets/cli&lt;/strong&gt; package allows you to write &lt;code&gt;changeset&lt;/code&gt; files as you make changes, then combine any number of changesets into a release, that flattens the bump-types into a single release per package, handles internal dependencies in a multi-package-repository, and updates changelogs, as well as release all updated packages from a mono-repository with one command.&lt;/p&gt; &#xA;&lt;h2&gt;How do I get started?&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to jump in to using changesets, the &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/intro-to-using-changesets.md&#34;&gt;Intro to using changesets&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/packages/cli/README.md&#34;&gt;@changesets/cli&lt;/a&gt; docs are where you should head.&lt;/p&gt; &#xA;&lt;p&gt;If you want a detailed explanation of the the concepts behind changesets, or to understand how you would build on top of changesets, check out our &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/detailed-explanation.md&#34;&gt;detailed-explanation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/dictionary.md&#34;&gt;dictionary&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integrating with CI&lt;/h2&gt; &#xA;&lt;p&gt;While changesets can be an entirely manual process, we recommend integrating it with how your CI works.&lt;/p&gt; &#xA;&lt;p&gt;To check that PRs contain a changeset, we recommend using &lt;a href=&#34;https://github.com/apps/changeset-bot&#34;&gt;the changeset bot&lt;/a&gt;, or if you want to fail builds on a changesets failure, run &lt;code&gt;yarn changeset status&lt;/code&gt; in CI.&lt;/p&gt; &#xA;&lt;p&gt;To make releasing easier, you can use &lt;a href=&#34;https://github.com/changesets/action&#34;&gt;this changesets github action&lt;/a&gt; to automate creating versioning pull requests, and optionally publishing packages.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/intro-to-using-changesets.md&#34;&gt;Intro to using changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/detailed-explanation.md&#34;&gt;Detailed explanation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/common-questions.md&#34;&gt;Common questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/adding-a-changeset.md&#34;&gt;Adding a changeset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/automating-changesets.md&#34;&gt;Automating changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/checking-for-changesets.md&#34;&gt;Checking for changesets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/command-line-options.md&#34;&gt;Command line options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/config-file-options.md&#34;&gt;Config file options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/decisions.md&#34;&gt;Decisions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/dictionary.md&#34;&gt;Dictionary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/fixed-packages.md&#34;&gt;Fixed packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/linked-packages.md&#34;&gt;Linked packages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/modifying-changelog-format.md&#34;&gt;Modifying changelog format&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/prereleases.md&#34;&gt;Prereleases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/problems-publishing-in-monorepos.md&#34;&gt;Problems publishing in monorepos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/changesets/changesets/main/docs/snapshot-releases.md&#34;&gt;Snapshot releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool Projects already using Changesets for versioning and changelogs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://atlaskit.atlassian.com/&#34;&gt;atlaskit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emotion.sh/docs/introduction&#34;&gt;emotion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://v5.keystonejs.com/&#34;&gt;keystone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-select.com/home&#34;&gt;react-select&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xstate.js.org/&#34;&gt;XState&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.js.org/&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kuldeepkeshwar/filbert-js&#34;&gt;filbert-js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/talentlessguy/tinyhttp&#34;&gt;tinyhttp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/firebase/firebase-js-sdk&#34;&gt;Firebase Javascript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/formium/formik&#34;&gt;Formik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobxjs/mobx&#34;&gt;MobX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verdaccio.org/&#34;&gt;verdaccio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chakra-ui.com/&#34;&gt;Chakra UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://astro.build&#34;&gt;Astro&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thanks/Inspiration&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boltpkg/bolt&#34;&gt;bolt&lt;/a&gt; - Brought us a strong concept of how packages in a mono-repo should be able to interconnect, and provided the initial infrastructure to get inter-package information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/&#34;&gt;Atlassian&lt;/a&gt; - The original idea/sponsor of the changesets code, and where many of the ideas and processes were fermented. It was originally implemented by the team behind &lt;a href=&#34;https://atlaskit.atlassian.com&#34;&gt;atlaskit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/atlassian/lerna-semantic-release&#34;&gt;lerna-semantic-release&lt;/a&gt; - put down many of the initial patterns around updating packages within a multi-package-repository, and started us thinking about how to manage dependent packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thinkmill.com.au&#34;&gt;Thinkmill&lt;/a&gt; - For sponsoring the focused open sourcing of this project, and the version two rearchitecture.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vuejs/vitepress</title>
    <updated>2022-06-04T02:56:45Z</updated>
    <id>tag:github.com,2022-06-04:/vuejs/vitepress</id>
    <link href="https://github.com/vuejs/vitepress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vite &amp; Vue powered static site generator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VitePress (alpha) üìùüí®&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vuejs/vitepress/actions&#34;&gt;&lt;img src=&#34;https://github.com/vuejs/vitepress/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/vitepress&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/vitepress&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;VitePress is &lt;a href=&#34;https://vuepress.vuejs.org&#34;&gt;VuePress&lt;/a&gt;&#39; spiritual successor, built on top of &lt;a href=&#34;https://github.com/vitejs/vite&#34;&gt;vite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently, it&#39;s in the &lt;code&gt;alpha&lt;/code&gt; stage. It is already suitable for out-of-the-box documentation use, but the config and theming API may still change between minor releases.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To check out docs, visit &lt;a href=&#34;https://vitepress.vuejs.org&#34;&gt;vitepress.vuejs.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Detailed changes for each release are documented in the &lt;a href=&#34;https://github.com/vuejs/vitepress/raw/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Please make sure to read the &lt;a href=&#34;https://github.com/vuejs/vitepress/raw/main/.github/contributing.md&#34;&gt;Contributing Guide&lt;/a&gt; before making a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vuejs/vitepress/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2019-present, Yuxi (Evan) You&lt;/p&gt;</summary>
  </entry>
</feed>