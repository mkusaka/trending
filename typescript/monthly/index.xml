<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:56:01Z</updated>
  <subtitle>Monthly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ag-grid/ag-grid</title>
    <updated>2022-06-02T02:56:01Z</updated>
    <id>tag:github.com,2022-06-02:/ag-grid/ag-grid</id>
    <link href="https://github.com/ag-grid/ag-grid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The best JavaScript Data Table for building Enterprise Applications. Supports React / Angular / Vue / Plain JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ag-grid/ag-grid/latest/github-banner.png&#34; alt=&#34;AG Grid HTML5 Grid trusted by the community, built for enterprise&#34; title=&#34;AG Grid&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cdnjs.com/libraries/ag-grid&#34;&gt;&lt;img src=&#34;https://img.shields.io/cdnjs/v/ag-grid&#34; alt=&#34;CDNJS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ag-grid/ag-grid&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ag-grid/ag-grid?style=social&#34; alt=&#34;Github Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ag_grid&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ag_grid?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ag-grid-community&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/ag-grid-community&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/ag-grid-community&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=ag-grid-community&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/ag-grid-community&#34; alt=&#34;Bundle Phobia&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=ag-grid-community&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=ag-grid-community&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ag-grid-enterprise&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/ag-grid-enterprise&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dm/ag-grid-enterprise&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=ag-grid-enterprise&#34;&gt;&lt;img src=&#34;https://badgen.net/bundlephobia/minzip/ag-grid-enterprise&#34; alt=&#34;Bundle Phobia&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=ag-grid-enterprise&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=ag-grid-enterprise&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;AG Grid&lt;/h1&gt; &#xA;&lt;p&gt;AG Grid is a fully-featured and highly customizable JavaScript data grid. It delivers &lt;a href=&#34;https://www.ag-grid.com/example?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;outstanding performance&lt;/a&gt;, has no third-party dependencies and &lt;a href=&#34;https://www.ag-grid.com/javascript-data-grid/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;integrates smoothly with all major JavaScript frameworks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how our grid looks with multiple filters and grouping enabled:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ag-grid/ag-grid/latest/github-grid-demo.jpg&#34; alt=&#34;Image of AG Grid showing filtering and grouping enabled.&#34; title=&#34;AG Grid demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the standard set of features you&#39;d expect from any grid:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Column Interactions (resize, reorder, and pin columns)&lt;/li&gt; &#xA; &lt;li&gt;Pagination&lt;/li&gt; &#xA; &lt;li&gt;Sorting&lt;/li&gt; &#xA; &lt;li&gt;Row Selection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are some of the features that make AG Grid stand out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grouping / Aggregation *&lt;/li&gt; &#xA; &lt;li&gt;Accessibility support&lt;/li&gt; &#xA; &lt;li&gt;Custom Filtering&lt;/li&gt; &#xA; &lt;li&gt;In-place Cell Editing&lt;/li&gt; &#xA; &lt;li&gt;Records Lazy Loading *&lt;/li&gt; &#xA; &lt;li&gt;Server-Side Records Operations *&lt;/li&gt; &#xA; &lt;li&gt;Live Stream Updates&lt;/li&gt; &#xA; &lt;li&gt;Hierarchical Data Support &amp;amp; Tree View *&lt;/li&gt; &#xA; &lt;li&gt;Customizable Appearance&lt;/li&gt; &#xA; &lt;li&gt;Customizable Cell Contents&lt;/li&gt; &#xA; &lt;li&gt;State Persistence&lt;/li&gt; &#xA; &lt;li&gt;Keyboard Navigation&lt;/li&gt; &#xA; &lt;li&gt;Data Export to CSV&lt;/li&gt; &#xA; &lt;li&gt;Data Export to Excel *&lt;/li&gt; &#xA; &lt;li&gt;Excel-like Pivoting *&lt;/li&gt; &#xA; &lt;li&gt;Row Reordering&lt;/li&gt; &#xA; &lt;li&gt;Copy / Paste&lt;/li&gt; &#xA; &lt;li&gt;Column Spanning&lt;/li&gt; &#xA; &lt;li&gt;Pinned Rows&lt;/li&gt; &#xA; &lt;li&gt;Full Width Rows&lt;/li&gt; &#xA; &lt;li&gt;Integrated Charting&lt;/li&gt; &#xA; &lt;li&gt;Sparklines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* The features marked with an asterisk are available in the &lt;a href=&#34;https://www.ag-grid.com/license-pricing?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;Enterprise version&lt;/a&gt; only.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://www.ag-grid.com/documentation/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;developer documentation&lt;/a&gt; for a complete list of features or visit &lt;a href=&#34;https://www.ag-grid.com/features-overview/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;our official docs&lt;/a&gt; for tutorials and feature demos.&lt;/p&gt; &#xA;&lt;h2&gt;Looking for a framework specific solution?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ag-grid.com/angular-data-grid/getting-started/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;Get Started with Angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ag-grid.com/react-data-grid/getting-started/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;Get Started with React&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ag-grid.com/vue-data-grid/getting-started/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;Get Started with Vue&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install --save ag-grid-community&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add a placeholder to HTML&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#34;myGrid&#34; style=&#34;height: 150px; width: 600px&#34; class=&#34;ag-theme-alpine&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Import the grid and styles&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Grid } from &#39;ag-grid-community&#39;;&#xA;&#xA;import &#39;ag-grid-community/dist/styles/ag-grid.css&#39;;&#xA;import &#39;ag-grid-community/dist/styles/ag-theme-alpine.css&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var gridOptions = {&#xA;&#x9;columnDefs: [&#xA;&#x9;&#x9;{ headerName: &#39;Make&#39;, field: &#39;make&#39; },&#xA;&#x9;&#x9;{ headerName: &#39;Model&#39;, field: &#39;model&#39; },&#xA;&#x9;&#x9;{ headerName: &#39;Price&#39;, field: &#39;price&#39; }&#xA;&#x9;],&#xA;&#x9;rowData: [&#xA;&#x9;&#x9;{ make: &#39;Toyota&#39;, model: &#39;Celica&#39;, price: 35000 },&#xA;&#x9;&#x9;{ make: &#39;Ford&#39;, model: &#39;Mondeo&#39;, price: 32000 },&#xA;&#x9;&#x9;{ make: &#39;Porsche&#39;, model: &#39;Boxster&#39;, price: 72000 }&#xA;&#x9;]&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Initialise the grid&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var eGridDiv = document.querySelector(&#39;#myGrid&#39;);&#xA;new Grid(eGridDiv, this.gridOptions);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on how to integrate the grid into your project see &lt;a href=&#34;https://www.ag-grid.com/javascript-data-grid/building/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;Building AG Grid Applications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issue Reporting&lt;/h2&gt; &#xA;&lt;p&gt;If you have found a bug, please report it in this repository&#39;s &lt;a href=&#34;https://github.com/ag-grid/ag-grid/issues&#34;&gt;issues&lt;/a&gt; section. If you&#39;re using the Enterprise version, please use the &lt;a href=&#34;https://ag-grid.zendesk.com/&#34;&gt;private ticketing&lt;/a&gt; system to do that.&lt;/p&gt; &#xA;&lt;h2&gt;Asking Questions&lt;/h2&gt; &#xA;&lt;p&gt;Look for similar problems on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/ag-grid&#34;&gt;StackOverflow&lt;/a&gt; using the &lt;code&gt;ag-grid&lt;/code&gt; tag. If nothing seems related, post a new message there. Please do not use GitHub issues to ask questions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;AG Grid is developed by a team of co-located developers in London. If you want to join the team check out our &lt;a href=&#34;https://www.ag-grid.com/ag-grid-jobs-board/?utm_source=ag-grid-readme&amp;amp;utm_medium=repository&amp;amp;utm_campaign=github&#34;&gt;jobs board&lt;/a&gt; or send your application to &lt;a href=&#34;mailto:info@ag-grid.com&#34;&gt;info@ag-grid.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT license. See the &lt;a href=&#34;https://raw.githubusercontent.com/ag-grid/ag-grid/latest/LICENSE.txt&#34;&gt;LICENSE file&lt;/a&gt; for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/playwright</title>
    <updated>2022-06-02T02:56:01Z</updated>
    <id>tag:github.com,2022-06-02:/microsoft/playwright</id>
    <link href="https://github.com/microsoft/playwright" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Playwright is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎭 Playwright&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/playwright&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/playwright.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &#xA; &lt;!-- GEN:chromium-version-badge --&gt;&lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chromium-103.0.5060.24-blue.svg?logo=google-chrome&#34; alt=&#34;Chromium version&#34;&gt;&lt;/a&gt;&#xA; &lt;!-- GEN:stop --&gt; &#xA; &lt;!-- GEN:firefox-version-badge --&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/firefox-100.0.2-blue.svg?logo=mozilla-firefox&#34; alt=&#34;Firefox version&#34;&gt;&lt;/a&gt;&#xA; &lt;!-- GEN:stop --&gt; &#xA; &lt;!-- GEN:webkit-version-badge --&gt;&lt;a href=&#34;https://webkit.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/webkit-15.4-blue.svg?logo=safari&#34; alt=&#34;WebKit version&#34;&gt;&lt;/a&gt;&#xA; &lt;!-- GEN:stop --&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://playwright.dev&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://playwright.dev/docs/api/class-playwright&#34;&gt;API reference&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Playwright is a framework for Web Testing and Automation. It allows testing &lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;Chromium&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt; and &lt;a href=&#34;https://webkit.org/&#34;&gt;WebKit&lt;/a&gt; with a single API. Playwright is built to enable cross-browser web automation that is &lt;strong&gt;ever-green&lt;/strong&gt;, &lt;strong&gt;capable&lt;/strong&gt;, &lt;strong&gt;reliable&lt;/strong&gt; and &lt;strong&gt;fast&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Chromium &#xA;    &lt;!-- GEN:chromium-version --&gt;103.0.5060.24&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WebKit &#xA;    &lt;!-- GEN:webkit-version --&gt;15.4&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Firefox &#xA;    &lt;!-- GEN:firefox-version --&gt;100.0.2&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Headless execution is supported for all the browsers on all platforms. Check out &lt;a href=&#34;https://playwright.dev/docs/library#system-requirements&#34;&gt;system requirements&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Looking for Playwright for &lt;a href=&#34;https://playwright.dev/python/docs/intro&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://playwright.dev/dotnet/docs/intro&#34;&gt;.NET&lt;/a&gt;, or &lt;a href=&#34;https://playwright.dev/java/docs/intro&#34;&gt;Java&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Playwright has its own test runner for end-to-end tests, we call it Playwright Test.&lt;/p&gt; &#xA;&lt;h3&gt;Using init command&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to get started with Playwright Test is to run the init command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;# Run from your project&#39;s root directory&#xA;npm init playwright@latest&#xA;# Or create a new project&#xA;npm init playwright@latest new-project&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a configuration file, optionally add examples, a GitHub Action workflow and a first test example.spec.ts. You can now jump directly to writing assertions section.&lt;/p&gt; &#xA;&lt;h3&gt;Manually&lt;/h3&gt; &#xA;&lt;p&gt;Add dependency and install browsers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;npm i -D @playwright/test&#xA;# install supported browsers&#xA;npx playwright install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can optionally install only selected browsers, see &lt;a href=&#34;https://playwright.dev/docs/cli#install-browsers&#34;&gt;install browsers&lt;/a&gt; for more details. Or you can install no browsers at all and use existing &lt;a href=&#34;https://playwright.dev/docs/browsers&#34;&gt;browser channels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/intro&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/installation&#34;&gt;Installation configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/api/class-playwright&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Capabilities&lt;/h2&gt; &#xA;&lt;h3&gt;Resilient • No flaky tests&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Auto-wait&lt;/strong&gt;. Playwright waits for elements to be actionable prior to performing actions. It also has rich set of introspection events. The combination of the two eliminate the need for artificial timeouts - primary cause of flaky tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Web-first assertions&lt;/strong&gt;. Playwright assertions are created specifically for the dynamic web. Checks are automatically retried until the necessary conditions are met.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tracing&lt;/strong&gt;. Configure test retry strategy, capture execution trace, videos, screenshots to eliminate flakes.&lt;/p&gt; &#xA;&lt;h3&gt;No trade-offs • No limits&lt;/h3&gt; &#xA;&lt;p&gt;Browsers run web content belonging to different origins in different processes. Playwright is aligned with the modern browsers architecture and runs tests out-of-process. This makes Playwright free of the typical in-process test runner limitations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiple everything&lt;/strong&gt;. Test scenarios that span multiple tabs, multiple origins and multiple users. Create scenarios with different contexts for different users and run them against your server, all in one test.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Trusted events&lt;/strong&gt;. Hover elements, interact with dynamic controls, produce trusted events. Playwright uses real browser input pipeline indistinguishable from the real user.&lt;/p&gt; &#xA;&lt;p&gt;Test frames, pierce Shadow DOM. Playwright selectors pierce shadow DOM and allow entering frames seamlessly.&lt;/p&gt; &#xA;&lt;h3&gt;Full isolation • Fast execution&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Browser contexts&lt;/strong&gt;. Playwright creates a browser context for each test. Browser context is equivalent to a brand new browser profile. This delivers full test isolation with zero overhead. Creating a new browser context only takes a handful of milliseconds.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Log in once&lt;/strong&gt;. Save the authentication state of the context and reuse it in all the tests. This bypasses repetitive log-in operations in each test, yet delivers full isolation of independent tests.&lt;/p&gt; &#xA;&lt;h3&gt;Powerful Tooling&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Codegen&lt;/strong&gt;. Generate tests by recording your actions. Save them into any language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Playwright inspector&lt;/strong&gt;. Inspect page, generate selectors, step through the test execution, see click points, explore execution logs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Trace Viewer&lt;/strong&gt;. Capture all the information to investigate the test failure. Playwright trace contains test execution screencast, live DOM snapshots, action explorer, test source and many more.&lt;/p&gt; &#xA;&lt;p&gt;Looking for Playwright for &lt;a href=&#34;https://playwright.dev/docs/intro&#34;&gt;TypeScript&lt;/a&gt;, &lt;a href=&#34;https://playwright.dev/docs/intro&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://playwright.dev/python/docs/intro&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://playwright.dev/dotnet/docs/intro&#34;&gt;.NET&lt;/a&gt;, or &lt;a href=&#34;https://playwright.dev/java/docs/intro&#34;&gt;Java&lt;/a&gt;?&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to run these Playwright Test examples, check out our &lt;a href=&#34;https://playwright.dev/docs/intro&#34;&gt;getting started docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Page screenshot&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet navigates to whatsmyuseragent.org and saves a screenshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-TypeScript&#34;&gt;import { test } from &#39;@playwright/test&#39;;&#xA;&#xA;test(&#39;Page Screenshot&#39;, async ({ page }) =&amp;gt; {&#xA;  await page.goto(&#39;http://whatsmyuseragent.org/&#39;);&#xA;  await page.screenshot({ path: `example.png` });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Mobile and geolocation&lt;/h4&gt; &#xA;&lt;p&gt;This snippet emulates Mobile Safari on a device at a given geolocation, navigates to maps.google.com, performs action and takes a screenshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-TypeScript&#34;&gt;import { test, devices } from &#39;@playwright/test&#39;;&#xA;&#xA;test.use({&#xA;  ...devices[&#39;iPhone 13 Pro&#39;],&#xA;  locale: &#39;en-US&#39;,&#xA;  geolocation: { longitude: 12.492507, latitude: 41.889938 },&#xA;  permissions: [&#39;geolocation&#39;],&#xA;})&#xA;&#xA;test(&#39;Mobile and geolocation&#39;, async ({ page }) =&amp;gt; {&#xA;  await page.goto(&#39;https://maps.google.com&#39;);&#xA;  await page.locator(&#39;text=&#34;Your location&#34;&#39;).click();&#xA;  await page.waitForRequest(/.*preview\/pwa/);&#xA;  await page.screenshot({ path: &#39;colosseum-iphone.png&#39; });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Evaluate in browser context&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet navigates to example.com, and executes a script in the page context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-TypeScript&#34;&gt;import { test } from &#39;@playwright/test&#39;;&#xA;&#xA;test(&#39;Evaluate in browser context&#39;, async ({ page }) =&amp;gt; {&#xA;  await page.goto(&#39;https://www.example.com/&#39;);&#xA;  const dimensions = await page.evaluate(() =&amp;gt; {&#xA;    return {&#xA;      width: document.documentElement.clientWidth,&#xA;      height: document.documentElement.clientHeight,&#xA;      deviceScaleFactor: window.devicePixelRatio&#xA;    }&#xA;  });&#xA;  console.log(dimensions);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Intercept network requests&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet sets up request routing for a page to log all network requests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-TypeScript&#34;&gt;import { test } from &#39;@playwright/test&#39;;&#xA;&#xA;test(&#39;Intercept network requests&#39;, async ({ page }) =&amp;gt; {&#xA;  // Log and continue all network requests&#xA;  await page.route(&#39;**&#39;, route =&amp;gt; {&#xA;    console.log(route.request().url());&#xA;    route.continue();&#xA;  });&#xA;  await page.goto(&#39;http://todomvc.com&#39;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/intro&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/api/class-playwright/&#34;&gt;API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://playwright.dev/docs/showcase/&#34;&gt;Community showcase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright/main/CONTRIBUTING.md&#34;&gt;Contribution guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/playwright/releases&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode</title>
    <updated>2022-06-02T02:56:01Z</updated>
    <id>tag:github.com,2022-06-02:/microsoft/vscode</id>
    <link href="https://github.com/microsoft/vscode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Visual Studio Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Visual Studio Code - Open Source (&#34;Code - OSS&#34;)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/vscode/feature-request.svg?sanitize=true&#34; alt=&#34;Feature Requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/vscode/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Abug&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/microsoft/vscode/bug.svg?sanitize=true&#34; alt=&#34;Bugs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/Microsoft/vscode&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20gitter-yellow.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;The Repository&lt;/h2&gt; &#xA;&lt;p&gt;This repository (&#34;&lt;code&gt;Code - OSS&lt;/code&gt;&#34;) is where we (Microsoft) develop the &lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt; product together with the community. Not only do we work on code and issues here, we also publish our &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Roadmap&#34;&gt;roadmap&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Iteration-Plans&#34;&gt;monthly iteration plans&lt;/a&gt;, and our &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Running-the-Endgame&#34;&gt;endgame plans&lt;/a&gt;. This source code is available to everyone under the standard &lt;a href=&#34;https://github.com/microsoft/vscode/raw/main/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Visual Studio Code&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;VS Code in action&#34; src=&#34;https://user-images.githubusercontent.com/35271042/118224532-3842c400-b438-11eb-923d-a5f66fa6785a.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt; is a distribution of the &lt;code&gt;Code - OSS&lt;/code&gt; repository with Microsoft-specific customizations released under a traditional &lt;a href=&#34;https://code.visualstudio.com/License/&#34;&gt;Microsoft product license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Visual Studio Code&lt;/a&gt; combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.&lt;/p&gt; &#xA;&lt;p&gt;Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on &lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;Visual Studio Code&#39;s website&lt;/a&gt;. To get the latest releases every day, install the &lt;a href=&#34;https://code.visualstudio.com/insiders&#34;&gt;Insiders build&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;There are many ways in which you can participate in this project, for example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/issues&#34;&gt;Submit bugs and feature requests&lt;/a&gt;, and help us verify as they are checked in&lt;/li&gt; &#xA; &lt;li&gt;Review &lt;a href=&#34;https://github.com/microsoft/vscode/pulls&#34;&gt;source code changes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Review the &lt;a href=&#34;https://github.com/microsoft/vscode-docs&#34;&gt;documentation&lt;/a&gt; and make pull requests for anything from typos to additional and new content&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base, please see the document &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute&#34;&gt;How to Contribute&lt;/a&gt;, which covers the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute&#34;&gt;How to build and run from source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute#debugging&#34;&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Coding-Guidelines&#34;&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute#pull-requests&#34;&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute&#34;&gt;Finding an issue to work on&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/vscodeloc&#34;&gt;Contributing to translations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask a question on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/vscode&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode/main/CONTRIBUTING.md&#34;&gt;Request a new feature&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Upvote &lt;a href=&#34;https://github.com/microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc&#34;&gt;popular feature requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/issues&#34;&gt;File an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/code&#34;&gt;@code&lt;/a&gt; and let us know what you think!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Feedback-Channels&#34;&gt;wiki&lt;/a&gt; for a description of each of these channels and information on some other available community-driven channels.&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;p&gt;Many of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the &lt;a href=&#34;https://github.com/microsoft/vscode-node-debug&#34;&gt;node debug adapter&lt;/a&gt; and the &lt;a href=&#34;https://github.com/microsoft/vscode-mono-debug&#34;&gt;mono debug adapter&lt;/a&gt; repositories are separate from each other. For a complete list, please visit the &lt;a href=&#34;https://github.com/microsoft/vscode/wiki/Related-Projects&#34;&gt;Related Projects&lt;/a&gt; page on our &lt;a href=&#34;https://github.com/microsoft/vscode/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bundled Extensions&lt;/h2&gt; &#xA;&lt;p&gt;VS Code includes a set of built-in extensions located in the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode/main/extensions&#34;&gt;extensions&lt;/a&gt; folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix &lt;code&gt;language-features&lt;/code&gt;. For example, the &lt;code&gt;json&lt;/code&gt; extension provides coloring for &lt;code&gt;JSON&lt;/code&gt; and the &lt;code&gt;json-language-features&lt;/code&gt; extension provides rich language support for &lt;code&gt;JSON&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Container&lt;/h2&gt; &#xA;&lt;p&gt;This repository includes a Visual Studio Code Remote - Containers / GitHub Codespaces development container.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For &lt;a href=&#34;https://aka.ms/vscode-remote/download/containers&#34;&gt;Remote - Containers&lt;/a&gt;, use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command which creates a Docker volume for better disk I/O on macOS and Windows. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you already have VS Code and Docker installed, you can also click &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode&#34;&gt;here&lt;/a&gt; to get started. This will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For Codespaces, install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt; extension in VS Code, and use the &lt;strong&gt;Codespaces: Create New Codespace&lt;/strong&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker / the Codespace should have at least &lt;strong&gt;4 Cores and 6 GB of RAM (8 GB recommended)&lt;/strong&gt; to run full build. See the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode/main/.devcontainer/README.md&#34;&gt;development container README&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
</feed>