<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TypeScript Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-01T02:22:47Z</updated>
  <subtitle>Monthly Trending of TypeScript in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>transitive-bullshit/chatgpt-api</title>
    <updated>2023-03-01T02:22:47Z</updated>
    <id>tag:github.com,2023-03-01:/transitive-bullshit/chatgpt-api</id>
    <link href="https://github.com/transitive-bullshit/chatgpt-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js client for the unofficial ChatGPT API. üî•&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT API &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Node.js client for the unofficial &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt; API.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/chatgpt&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/chatgpt.svg?sanitize=true&#34; alt=&#34;NPM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/transitive-bullshit/chatgpt-api/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/raw/main/license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://prettier.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-brightgreen.svg?sanitize=true&#34; alt=&#34;Prettier Code Formatting&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#intro&#34;&gt;Intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#updates&#34;&gt;Updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#cli&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#usage---chatgptapi&#34;&gt;Usage - ChatGPTAPI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#usage---chatgptunofficialproxyapi&#34;&gt;Usage - ChatGPTUnofficialProxyAPI&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#reverse-proxy&#34;&gt;Reverse Proxy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#access-token&#34;&gt;Access Token&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#docs&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#demos&#34;&gt;Demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#projects&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#compatibility&#34;&gt;Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;This package is a Node.js wrapper around &lt;a href=&#34;https://openai.com/blog/chatgpt&#34;&gt;ChatGPT&lt;/a&gt; by &lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt;. TS batteries included. ‚ú®&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Example usage&#34; src=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/media/demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Updates&lt;/h2&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Feb 19, 2023&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;p&gt;We now provide three ways of accessing the unofficial ChatGPT API, all of which have tradeoffs:&lt;/p&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Method&lt;/th&gt; &#xA;    &lt;th&gt;Free?&lt;/th&gt; &#xA;    &lt;th&gt;Robust?&lt;/th&gt; &#xA;    &lt;th&gt;Quality?&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;ChatGPTAPI&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‚ùå No&lt;/td&gt; &#xA;    &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;    &lt;td&gt;‚òëÔ∏è Mimics ChatGPT&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;    &lt;td&gt;‚òëÔ∏è Maybe&lt;/td&gt; &#xA;    &lt;td&gt;‚úÖ Real ChatGPT&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;ChatGPTAPIBrowser&lt;/code&gt; (v3)&lt;/td&gt; &#xA;    &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;    &lt;td&gt;‚ùå No&lt;/td&gt; &#xA;    &lt;td&gt;‚úÖ Real ChatGPT&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I recommend that you use either &lt;code&gt;ChatGPTAPI&lt;/code&gt; or &lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;code&gt;ChatGPTAPI&lt;/code&gt; - Uses &lt;code&gt;text-davinci-003&lt;/code&gt; to mimic ChatGPT via the official OpenAI completions API (most robust approach, but it&#39;s not free and doesn&#39;t use a model fine-tuned for chat)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt; - Uses an unofficial proxy server to access ChatGPT&#39;s backend API in a way that circumvents Cloudflare (uses the real ChatGPT and is pretty lightweight, but relies on a third-party server and is rate-limited)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;ChatGPTAPIBrowser&lt;/code&gt; - (&lt;em&gt;deprecated&lt;/em&gt;; v3.5.1 of this package) Uses Puppeteer to access the official ChatGPT webapp (uses the real ChatGPT, but very flaky, heavyweight, and error prone)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Previous Updates&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;&lt;strong&gt;Feb 5, 2023&lt;/strong&gt;&lt;/summary&gt; &#xA;  &lt;p&gt;OpenAI has disabled the leaked chat model we were previously using, so we&#39;re now defaulting to &lt;code&gt;text-davinci-003&lt;/code&gt;, which is not free.&lt;/p&gt; &#xA;  &lt;p&gt;We&#39;ve found several other hidden, fine-tuned chat models, but OpenAI keeps disabling them, so we&#39;re searching for alternative workarounds.&lt;/p&gt; &#xA; &lt;/details&gt; &#xA; &lt;details&gt; &#xA;  &lt;summary&gt;&lt;strong&gt;Feb 1, 2023&lt;/strong&gt;&lt;/summary&gt; &#xA;  &lt;p&gt;This package no longer requires any browser hacks ‚Äì&amp;nbsp;&lt;strong&gt;it is now using the official OpenAI completions API&lt;/strong&gt; with a leaked model that ChatGPT uses under the hood. üî•&lt;/p&gt; &#xA;  &lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTAPI } from &#39;chatgpt&#39;&#xA;&#xA;const api = new ChatGPTAPI({&#xA;  apiKey: process.env.OPENAI_API_KEY&#xA;})&#xA;&#xA;const res = await api.sendMessage(&#39;Hello World!&#39;)&#xA;console.log(res.text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p&gt;Please upgrade to &lt;code&gt;chatgpt@latest&lt;/code&gt; (at least &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-api/releases/tag/v4.0.0&#34;&gt;v4.0.0&lt;/a&gt;). The updated version is &lt;strong&gt;significantly more lightweight and robust&lt;/strong&gt; compared with previous versions. You also don&#39;t have to worry about IP issues or rate limiting.&lt;/p&gt; &#xA;  &lt;p&gt;Huge shoutout to &lt;a href=&#34;https://github.com/waylaidwanderer&#34;&gt;@waylaidwanderer&lt;/a&gt; for discovering the leaked chat model!&lt;/p&gt; &#xA; &lt;/details&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;If you run into any issues, we do have a pretty active &lt;a href=&#34;https://discord.gg/v9gERj825w&#34;&gt;Discord&lt;/a&gt; with a bunch of ChatGPT hackers from the Node.js &amp;amp; Python communities.&lt;/p&gt; &#xA;&lt;p&gt;Lastly, please consider starring this repo and &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt; to help support the project.&lt;/p&gt; &#xA;&lt;p&gt;Thanks &amp;amp;&amp;amp; cheers, &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;Travis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;To run the CLI, you&#39;ll need an &lt;a href=&#34;https://platform.openai.com/overview&#34;&gt;OpenAI API key&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export OPENAI_API_KEY=&#34;sk-TODO&#34;&#xA;npx chatgpt &#34;your prompt here&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, the response is streamed to stdout, the results are stored in a local config file, and every invocation starts a new conversation. You can use &lt;code&gt;-c&lt;/code&gt; to continue the previous conversation and &lt;code&gt;--no-stream&lt;/code&gt; to disable streaming.&lt;/p&gt; &#xA;&lt;p&gt;Under the hood, the CLI uses &lt;code&gt;ChatGPTAPI&lt;/code&gt; with &lt;code&gt;text-davinci-003&lt;/code&gt; to mimic ChatGPT.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  $ chatgpt &amp;lt;prompt&amp;gt;&#xA;&#xA;Commands:&#xA;  &amp;lt;prompt&amp;gt;  Ask ChatGPT a question&#xA;  rm-cache  Clears the local message cache&#xA;  ls-cache  Prints the local message cache path&#xA;&#xA;For more info, run any command with the `--help` flag:&#xA;  $ chatgpt --help&#xA;  $ chatgpt rm-cache --help&#xA;  $ chatgpt ls-cache --help&#xA;&#xA;Options:&#xA;  -c, --continue          Continue last conversation (default: false)&#xA;  -d, --debug             Enables debug logging (default: false)&#xA;  -s, --stream            Streams the response (default: true)&#xA;  -s, --store             Enables the local message cache (default: true)&#xA;  -t, --timeout           Timeout in milliseconds&#xA;  -k, --apiKey            OpenAI API key&#xA;  -n, --conversationName  Unique name for the conversation&#xA;  -h, --help              Display this message&#xA;  -v, --version           Display version number&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you&#39;re using &lt;code&gt;node &amp;gt;= 18&lt;/code&gt; so &lt;code&gt;fetch&lt;/code&gt; is available (or &lt;code&gt;node &amp;gt;= 14&lt;/code&gt; if you install a &lt;a href=&#34;https://github.com/developit/unfetch#usage-as-a-polyfill&#34;&gt;fetch polyfill&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use this module from Node.js, you need to pick between two methods:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Free?&lt;/th&gt; &#xA;   &lt;th&gt;Robust?&lt;/th&gt; &#xA;   &lt;th&gt;Quality?&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ChatGPTAPI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚ùå No&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;‚òëÔ∏è Mimics ChatGPT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Yes&lt;/td&gt; &#xA;   &lt;td&gt;‚òëÔ∏è Maybe&lt;/td&gt; &#xA;   &lt;td&gt;‚úÖ Real ChatGPT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ChatGPTAPI&lt;/code&gt; - Uses &lt;code&gt;text-davinci-003&lt;/code&gt; to mimic ChatGPT via the official OpenAI completions API (most robust approach, but it&#39;s not free and doesn&#39;t use a model fine-tuned for chat). You can override the model, completion params, and prompt to fully customize your bot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt; - Uses an unofficial proxy server to access ChatGPT&#39;s backend API in a way that circumvents Cloudflare (uses the real ChatGPT and is pretty lightweight, but relies on a third-party server and is rate-limited)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Both approaches have very similar APIs, so it should be simple to swap between them.&lt;/p&gt; &#xA;&lt;h3&gt;Usage - ChatGPTAPI&lt;/h3&gt; &#xA;&lt;p&gt;Sign up for an &lt;a href=&#34;https://platform.openai.com/overview&#34;&gt;OpenAI API key&lt;/a&gt; and store it in your environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTAPI } from &#39;chatgpt&#39;&#xA;&#xA;async function example() {&#xA;  const api = new ChatGPTAPI({&#xA;    apiKey: process.env.OPENAI_API_KEY&#xA;  })&#xA;&#xA;  const res = await api.sendMessage(&#39;Hello World!&#39;)&#xA;  console.log(res.text)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can override the default &lt;code&gt;model&lt;/code&gt; (&lt;code&gt;text-davinci-003&lt;/code&gt;) and any &lt;a href=&#34;https://platform.openai.com/docs/api-reference/completions/create&#34;&gt;OpenAI completion params&lt;/a&gt; using &lt;code&gt;completionParams&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTAPI({&#xA;  apiKey: process.env.OPENAI_API_KEY,&#xA;  completionParams: {&#xA;    temperature: 0.5,&#xA;    top_p: 0.8&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to track the conversation, you&#39;ll need to pass the &lt;code&gt;parentMessageId&lt;/code&gt; and &lt;code&gt;conversationId&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTAPI({ apiKey: process.env.OPENAI_API_KEY })&#xA;&#xA;// send a message and wait for the response&#xA;let res = await api.sendMessage(&#39;What is OpenAI?&#39;)&#xA;console.log(res.text)&#xA;&#xA;// send a follow-up&#xA;res = await api.sendMessage(&#39;Can you expand on that?&#39;, {&#xA;  conversationId: res.conversationId,&#xA;  parentMessageId: res.id&#xA;})&#xA;console.log(res.text)&#xA;&#xA;// send another follow-up&#xA;res = await api.sendMessage(&#39;What were we talking about?&#39;, {&#xA;  conversationId: res.conversationId,&#xA;  parentMessageId: res.id&#xA;})&#xA;console.log(res.text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add streaming via the &lt;code&gt;onProgress&lt;/code&gt; handler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const res = await api.sendMessage(&#39;Write a 500 word essay on frogs.&#39;, {&#xA;  // print the partial response as the AI is &#34;typing&#34;&#xA;  onProgress: (partialResponse) =&amp;gt; console.log(partialResponse.text)&#xA;})&#xA;&#xA;// print the full text at the end&#xA;console.log(res.text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add a timeout using the &lt;code&gt;timeoutMs&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;// timeout after 2 minutes (which will also abort the underlying HTTP request)&#xA;const response = await api.sendMessage(&#xA;  &#39;write me a really really long essay on frogs&#39;,&#xA;  {&#xA;    timeoutMs: 2 * 60 * 1000&#xA;  }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to see more info about what&#39;s actually being sent to &lt;a href=&#34;https://platform.openai.com/docs/api-reference/completions&#34;&gt;OpenAI&#39;s completions API&lt;/a&gt;, set the &lt;code&gt;debug: true&lt;/code&gt; option in the &lt;code&gt;ChatGPTAPI&lt;/code&gt; constructor:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTAPI({&#xA;  apiKey: process.env.OPENAI_API_KEY,&#xA;  debug: true&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll notice that we&#39;re using a reverse-engineered &lt;code&gt;promptPrefix&lt;/code&gt; and &lt;code&gt;promptSuffix&lt;/code&gt;. You can customize these via the &lt;code&gt;sendMessage&lt;/code&gt; options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const res = await api.sendMessage(&#39;what is the answer to the universe?&#39;, {&#xA;  promptPrefix: `You are ChatGPT, a large language model trained by OpenAI. You answer as concisely as possible for each responseIf you are generating a list, do not have too many items.&#xA;Current date: ${new Date().toISOString()}\n\n`&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that we automatically handle appending the previous messages to the prompt and attempt to optimize for the available tokens (which defaults to &lt;code&gt;4096&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Usage in CommonJS (Dynamic import)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;async function example() {&#xA;  // To use ESM in CommonJS, you can use a dynamic import&#xA;  const { ChatGPTAPI } = await import(&#39;chatgpt&#39;)&#xA;&#xA;  const api = new ChatGPTAPI({ apiKey: process.env.OPENAI_API_KEY })&#xA;&#xA;  const res = await api.sendMessage(&#39;Hello World!&#39;)&#xA;  console.log(res.text)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Usage - ChatGPTUnofficialProxyAPI&lt;/h3&gt; &#xA;&lt;p&gt;The API is almost exactly the same for the &lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;; you just need to provide a ChatGPT &lt;code&gt;accessToken&lt;/code&gt; instead of an OpenAI API key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { ChatGPTUnofficialProxyAPI } from &#39;chatgpt&#39;&#xA;&#xA;async function example() {&#xA;  const api = new ChatGPTUnofficialProxyAPI({&#xA;    accessToken: process.env.OPENAI_ACCESS_TOKEN&#xA;  })&#xA;&#xA;  const res = await api.sendMessage(&#39;Hello World!&#39;)&#xA;  console.log(res.text)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-reverse-proxy.ts&#34;&gt;demos/demo-reverse-proxy&lt;/a&gt; for a full example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-reverse-proxy.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reverse Proxy&lt;/h4&gt; &#xA;&lt;p&gt;You can override the reverse proxy by passing &lt;code&gt;apiReverseProxyUrl&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;const api = new ChatGPTUnofficialProxyAPI({&#xA;  accessToken: process.env.OPENAI_ACCESS_TOKEN,&#xA;  apiReverseProxyUrl: &#39;https://your-example-server.com/api/conversation&#39;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Known reverse proxies run by community members include:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Reverse Proxy URL&lt;/th&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Rate Limits&lt;/th&gt; &#xA;   &lt;th&gt;Last Checked&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://chat.duti.tech/api/conversation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acheong08&#34;&gt;@acheong08&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;120 req/min by IP&lt;/td&gt; &#xA;   &lt;td&gt;2/19/2023&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;https://gpt.pawan.krd/backend-api/conversation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PawanOsman&#34;&gt;@PawanOsman&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;?&lt;/td&gt; &#xA;   &lt;td&gt;2/19/2023&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: info on how the reverse proxies work is not being published at this time in order to prevent OpenAI from disabling access.&lt;/p&gt; &#xA;&lt;h4&gt;Access Token&lt;/h4&gt; &#xA;&lt;p&gt;To use &lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt;, you&#39;ll need an OpenAI access token from the ChatGPT webapp. To do this, you can use any of the following methods which take an &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; and return an access token:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node.js libs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ericlewis/openai-authenticator&#34;&gt;ericlewis/openai-authenticator&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/michael-dm/openai-token&#34;&gt;michael-dm/openai-token&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/AllanOricil/chat-gpt-authenticator&#34;&gt;allanoricil/chat-gpt-authenticator&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Python libs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/acheong08/OpenAIAuth&#34;&gt;acheong08/OpenAIAuth&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These libraries work with email + password accounts (e.g., they do not support accounts where you auth via Microsoft / Google).&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can manually get an &lt;code&gt;accessToken&lt;/code&gt; by logging in to the ChatGPT webapp and then opening &lt;code&gt;https://chat.openai.com/api/auth/session&lt;/code&gt;, which will return a JSON object containing your &lt;code&gt;accessToken&lt;/code&gt; string.&lt;/p&gt; &#xA;&lt;p&gt;Access tokens last for days.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: using a reverse proxy will expose your access token to a third-party. There shouldn&#39;t be any adverse effects possible from this, but please consider the risks before using this method.&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/docs/classes/ChatGPTAPI.md&#34;&gt;auto-generated docs&lt;/a&gt; for more info on methods and parameters.&lt;/p&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;p&gt;Most of the demos use &lt;code&gt;ChatGPTAPI&lt;/code&gt;. It should be pretty easy to convert them to use &lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt; if you&#39;d rather use that approach. The only thing that needs to change is how you initialize the api with an &lt;code&gt;accessToken&lt;/code&gt; instead of an &lt;code&gt;apiKey&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run the included demos:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone repo&lt;/li&gt; &#xA; &lt;li&gt;install node deps&lt;/li&gt; &#xA; &lt;li&gt;set &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; in .env&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo.ts&#34;&gt;basic demo&lt;/a&gt; is included for testing purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-on-progress.ts&#34;&gt;demo showing on progress handler&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-on-progress.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The on progress demo uses the optional &lt;code&gt;onProgress&lt;/code&gt; parameter to &lt;code&gt;sendMessage&lt;/code&gt; to receive intermediary results as ChatGPT is &#34;typing&#34;.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-conversation.ts&#34;&gt;conversation demo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-conversation.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/transitive-bullshit/chatgpt-api/main/demos/demo-persistence.ts&#34;&gt;persistence demo&lt;/a&gt; shows how to store messages in Redis for persistence:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tsx demos/demo-persistence.ts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any &lt;a href=&#34;https://github.com/jaredwray/keyv&#34;&gt;keyv adaptor&lt;/a&gt; is supported for persistence, and there are overrides if you&#39;d like to use a different way of storing / retrieving messages.&lt;/p&gt; &#xA;&lt;p&gt;Note that persisting message is required for remembering the context of previous conversations beyond the scope of the current Node.js process, since by default, we only store messages in memory. Here&#39;s an &lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot/raw/main/src/index.ts#L86-L95&#34;&gt;external demo&lt;/a&gt; of using a completely custom database solution to persist messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Persistence is handled automatically when using &lt;code&gt;ChatGPTUnofficialProxyAPI&lt;/code&gt; because it is connecting indirectly to ChatGPT.&lt;/p&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;p&gt;All of these awesome projects are built using the &lt;code&gt;chatgpt&lt;/code&gt; package. ü§Ø&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/transitive-bullshit/chatgpt-twitter-bot&#34;&gt;Twitter Bot&lt;/a&gt; powered by ChatGPT ‚ú® &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mention &lt;a href=&#34;https://twitter.com/ChatGPTBot&#34;&gt;@ChatGPTBot&lt;/a&gt; on Twitter with your prompt to try it out&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/waylaidwanderer/node-chatgpt-api&#34;&gt;ChatGPT API Server&lt;/a&gt; - API server for this package with support for multiple OpenAI accounts, proxies, and load-balancing requests between accounts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pacholoamit/chatgpt-prompts&#34;&gt;ChatGPT Prompts&lt;/a&gt; - A collection of 140+ of the best ChatGPT prompts from the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lovelines.xyz?ref=chatgpt-api&#34;&gt;Lovelines.xyz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gragland/chatgpt-everywhere&#34;&gt;Chrome Extension&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/gabe_ragland/status/1599466486422470656&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mpociot/chatgpt-vscode&#34;&gt;VSCode Extension #1&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/marcelpociot/status/1599180144551526400&#34;&gt;demo&lt;/a&gt;, &lt;a href=&#34;https://github.com/timkmecl/chatgpt-vscode&#34;&gt;updated version&lt;/a&gt;, &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=timkmecl.chatgpt&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/barnesoir/chatgpt-vscode-plugin&#34;&gt;VSCode Extension #2&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=JayBarnes.chatgpt-vscode-plugin&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gencay/vscode-chatgpt&#34;&gt;VSCode Extension #3&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=gencay.vscode-chatgpt&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogukanakkaya/chatgpt-code-vscode-extension&#34;&gt;VSCode Extension #4&lt;/a&gt; (&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dogukanakkaya.chatgpt-code&#34;&gt;marketplace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abielzulio/chatgpt-raycast&#34;&gt;Raycast Extension #1&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/abielzulio/status/1600176002042191875&#34;&gt;demo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/domnantas/raycast-chatgpt&#34;&gt;Raycast Extension #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/realies/chatgpt-telegram-bot&#34;&gt;Telegram Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dawangraoming/chatgpt-telegram-bot&#34;&gt;Telegram Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RainEggplant/chatgpt-telegram-bot&#34;&gt;Telegram Bot #3&lt;/a&gt; (group privacy mode, ID-based auth)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArdaGnsrn/chatgpt-telegram&#34;&gt;Telegram Bot #4&lt;/a&gt; (queue system, ID-based chat thread)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ciyou/chatbot-telegram&#34;&gt;Deno Telegram Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m1guelpf/chatgpt-telegram&#34;&gt;Go Telegram Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codextde/youtube-summary&#34;&gt;Telegram Bot for YouTube Summaries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oceanlvr/ChatGPTBot&#34;&gt;GitHub ProBot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onury5506/Discord-ChatGPT-Bot&#34;&gt;Discord Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nageld/ChatGPT-Bot&#34;&gt;Discord Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leinstay/gptbot&#34;&gt;Discord Bot #3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0x7030676e31/cumsocket&#34;&gt;Discord Bot #4 (selfbot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/itskdhere/ChatGPT-Discord-BOT&#34;&gt;Discord Bot #5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/TheBrokenRail/4b37e7c44e8f721d8bd845050d034c16&#34;&gt;Discord Bot #6 (Shakespeare bot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AutumnWhj/ChatGPT-wechat-bot&#34;&gt;WeChat Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fuergaosi233/wechat-chatgpt&#34;&gt;WeChat Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wangrongding/wechat-bot&#34;&gt;WeChat Bot #3&lt;/a&gt; (&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/darknightlab/wechat-bot&#34;&gt;WeChat Bot #4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sunshanpeng/wechaty-chatgpt&#34;&gt;WeChat Bot #5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ikechan8370/chatgpt-plugin&#34;&gt;QQ Bot (plugin for Yunzai-bot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KiviBotLab/kivibot-plugin-chatgpt&#34;&gt;QQ Bot (plugin for KiviBot)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/easydu2002/chat_gpt_oicq&#34;&gt;QQ Bot (oicq)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linsyking/ChatGPT-QQBot&#34;&gt;QQ Bot (oicq + RabbitMQ)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PairZhu/ChatGPT-QQRobot&#34;&gt;QQ Bot (go-cqhttp)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/decentldotland/molecule&#34;&gt;EXM smart contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coskuncay/flutter_chatgpt_api&#34;&gt;Flutter ChatGPT API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luridarmawan/Carik&#34;&gt;Carik Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kxxt/chatgpt-action/&#34;&gt;Github Action for reviewing PRs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/askrella/whatsapp-chatgpt&#34;&gt;WhatsApp Bot #1&lt;/a&gt; (DALL-E + Whisper support üí™)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amosayomide05/chatgpt-whatsapp-bot&#34;&gt;WhatsApp Bot #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pascalroget/whatsgpt&#34;&gt;WhatsApp Bot #3&lt;/a&gt; (multi-user support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/noelzappy/chatgpt-whatsapp&#34;&gt;WhatsApp Bot #4&lt;/a&gt; (schedule periodic messages)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hujanais/bs-chat-gpt3-api&#34;&gt;WhatsApp Bot #5&lt;/a&gt; (RaspberryPi + ngrok + Twilio)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dannysantino/whatsgpt&#34;&gt;WhatsApp Bot #6&lt;/a&gt; (Session and chat history storage with MongoStore)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matrixgpt/matrix-chatgpt-bot&#34;&gt;Matrix Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sharehouse.app/ai&#34;&gt;Rental Cover Letter Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/diciaup/assistant-cli&#34;&gt;Assistant CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/formulahendry/chatgpt-teams-bot&#34;&gt;Teams Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yudax42/askai&#34;&gt;Askai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShadovvBeast/TalkGPT&#34;&gt;TalkGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thanhsonng/chatgpt-voice&#34;&gt;ChatGPT With Voice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leecobaby/shortcuts/raw/master/other/ChatGPT_EN.md&#34;&gt;iOS Shortcut&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trietphm/chatgpt-slackbot/&#34;&gt;Slack Bot #1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lokwkin/chatgpt-slackbot-node/&#34;&gt;Slack Bot #2&lt;/a&gt; (with queueing mechanism)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NessunKim/slack-chatgpt/&#34;&gt;Slack Bot #3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MarkusGalant/chatgpt-slackbot-serverless/&#34;&gt;Slack Bot #4&lt;/a&gt; ( Serverless AWS Lambda )&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShiranAbir/chaty&#34;&gt;Electron Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nooqta/chatgpt-kodyfire&#34;&gt;Kodyfire CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BennyDeeDev/chatgpt-twitch-bot&#34;&gt;Twitch Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DanielTerletzkiy/chat-gtp-assistant&#34;&gt;Continuous Conversation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/frederickk/chatgpt-figma-plugin&#34;&gt;Figma plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RusDyn/chatgpt_nestjs_server&#34;&gt;NestJS server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitkodkn/nestjs-chatgpt-starter&#34;&gt;NestJS ChatGPT Starter Boilerplate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xtremehpx/Wordsmith&#34;&gt;Wordsmith: Add-in for Microsoft Word&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kladdy/quizgpt&#34;&gt;QuizGPT: Create Kahoot quizzes with ChatGPT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gmpetrov/openai-chatgpt&#34;&gt;openai-chatgpt: Talk to ChatGPT from the terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sebas00/chatgptclippy&#34;&gt;Clippy the Saleforce chatbot&lt;/a&gt; ClippyJS joke bot&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/youking-lib/ai-assistant&#34;&gt;ai-assistant&lt;/a&gt; Chat assistant&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linjungz/feishu-chatgpt-bot&#34;&gt;Feishu Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/billylo1/DomainGPT&#34;&gt;DomainGPT: Discover available domain names&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aipoemgenerator.com/&#34;&gt;AI Poem Generator&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you create a cool integration, feel free to open a PR and add it to the list.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This package is ESM-only.&lt;/li&gt; &#xA; &lt;li&gt;This package supports &lt;code&gt;node &amp;gt;= 14&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;This module assumes that &lt;code&gt;fetch&lt;/code&gt; is installed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In &lt;code&gt;node &amp;gt;= 18&lt;/code&gt;, it&#39;s installed by default.&lt;/li&gt; &#xA;   &lt;li&gt;In &lt;code&gt;node &amp;lt; 18&lt;/code&gt;, you need to install a polyfill like &lt;code&gt;unfetch/polyfill&lt;/code&gt; (&lt;a href=&#34;https://github.com/developit/unfetch#usage-as-a-polyfill&#34;&gt;guide&lt;/a&gt;) or &lt;code&gt;isomorphic-fetch&lt;/code&gt; (&lt;a href=&#34;https://github.com/matthew-andrews/isomorphic-fetch#readme&#34;&gt;guide&lt;/a&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you want to build a website using &lt;code&gt;chatgpt&lt;/code&gt;, we recommend using it only from your backend API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Huge thanks to &lt;a href=&#34;https://github.com/waylaidwanderer&#34;&gt;@waylaidwanderer&lt;/a&gt;, &lt;a href=&#34;https://github.com/abacaj&#34;&gt;@abacaj&lt;/a&gt;, &lt;a href=&#34;https://github.com/wong2&#34;&gt;@wong2&lt;/a&gt;, &lt;a href=&#34;https://github.com/simon300000&#34;&gt;@simon300000&lt;/a&gt;, &lt;a href=&#34;https://github.com/RomanHotsiy&#34;&gt;@RomanHotsiy&lt;/a&gt;, &lt;a href=&#34;https://github.com/ElijahPepe&#34;&gt;@ElijahPepe&lt;/a&gt;, and all the other contributors üí™&lt;/li&gt; &#xA; &lt;li&gt;The original browser version was inspired by this &lt;a href=&#34;https://github.com/danielgross/whatsapp-gpt&#34;&gt;Go module&lt;/a&gt; by &lt;a href=&#34;https://github.com/danielgross&#34;&gt;Daniel Gross&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openai.com&#34;&gt;OpenAI&lt;/a&gt; for creating &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;ChatGPT&lt;/a&gt; üî•&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT ¬© &lt;a href=&#34;https://transitivebullsh.it&#34;&gt;Travis Fischer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you found this project interesting, please consider &lt;a href=&#34;https://github.com/sponsors/transitive-bullshit&#34;&gt;sponsoring me&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/transitive_bs&#34;&gt;following me on twitter &lt;img src=&#34;https://storage.googleapis.com/saasify-assets/twitter-logo.svg?sanitize=true&#34; alt=&#34;twitter&#34; height=&#34;24px&#34; align=&#34;center&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AutumnWhj/ChatGPT-wechat-bot</title>
    <updated>2023-03-01T02:22:47Z</updated>
    <id>tag:github.com,2023-03-01:/AutumnWhj/ChatGPT-wechat-bot</id>
    <link href="https://github.com/AutumnWhj/ChatGPT-wechat-bot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT for wechat https://github.com/AutumnWhj/ChatGPT-wechat-bot&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;ChatGPT-wechat-botü§ñ&lt;/h1&gt; &#xA;&lt;p&gt; &lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AutumnWhj/ChatGPT-wechat-bot/master/#&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: ISC&#34; src=&#34;https://img.shields.io/badge/License-ISC-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Get a WeChat robot ü§ñ based on ChatGPT in a few step. &lt;a href=&#34;https://raw.githubusercontent.com/AutumnWhj/ChatGPT-wechat-bot/master/README_ZH.md&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt; | English&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Update February 9, 2023&lt;/h2&gt; &#xA;&lt;p&gt;Â§ö‰∏™Áî®Êà∑ÂºÄÂßãÂèçÈ¶àÂæÆ‰ø°ÊöÇÊó∂Â∞ÅÁ¶Å, ÁêÜÁî±ÊòØ„Äå‰ΩøÁî®Á¨¨‰∏âÊñπËΩØ‰ª∂, Â§ñÊåÇ, Êèí‰ª∂Á≠âÈùûÂÆòÊñπÂ∑•ÂÖ∑ÊàñÂÖ∂‰ªñËøùËßÑË°å‰∏∫„ÄçÔºåÂéüÂõ†ÂæÖÊéíÊü•ÔºåËØ∑ÂêÑ‰ΩçÊúãÂèãË∞®ÊÖé‰ΩøÁî®„ÄÇ ÈõÜ‰∏≠ËÆ®ËÆ∫Ôºö&lt;a href=&#34;https://github.com/AutumnWhj/ChatGPT-wechat-bot/issues/158&#34;&gt;https://github.com/AutumnWhj/ChatGPT-wechat-bot/issues/158&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update February 3, 2023&lt;/h2&gt; &#xA;&lt;p&gt;üî•This package no longer requires any browser hacks ‚Äì it is now using the official OpenAI completions API with a leaked modelüî•&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support conversation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Can set keywords to reset the previous conversation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support replying message when mentioning your bot in the group.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Set the keywords to wake up the WeChat robot in the group.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support Dockerfile to deploy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support set retry times when request ChatGPT.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Catch conversation error and retry.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Other&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  // Fill up with OPENAI_API_KEY&#xA;  OPENAI_API_KEY: &#39;&#39;,&#xA;  // Setting the number of retries when API error occurs&#xA;  retryTimes: 3,&#xA;  // Setting keyword to wake up in group chat&#xA;  groupKey: &#39;&#39;,&#xA;  // Setting keyword to wake up in private chat&#xA;  privateKey: &#39;&#39;,&#xA;  // Setting keyword to reset context&#xA;  resetKey: &#39;reset&#39;,&#xA;  // Enabling auto replies from ChatGPT&#xA;  autoReply: true,&#xA;  // Using regular expression to automatically pass friends verification&#xA;  friendShipRule: /chatgpt|chat/,&#xA;  // Using reply mode in group chat&#xA;  groupReplyMode: true,&#xA;  // Using reply mode in private chat&#xA;  privateReplyMode: false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to start?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Firstly, you should have an OpenAI account, then follow the steps below to get your token.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/2777249/1675413138418-d5df2543-bd37-41cc-a16c-505c5a38e88d.png&#34; alt=&#34;image.png&#34;&gt; &lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/2777249/1675413190188-4cf10947-ea7f-479d-9550-0dec9d40c0e2.png?x-oss-process=image%2Fresize%2Cw_1500%2Climit_0&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, you should &lt;strong&gt;fill your Token value into the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; in the directory &lt;code&gt;src/config.js&lt;/code&gt;&lt;/strong&gt;Ôºå then run this project on local.&lt;/p&gt; &lt;p&gt;&lt;em&gt;If necessary, configure other customization variables in &lt;code&gt;src/config.js&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// install dependencies&#xA;npm i&#xA;&#xA;// start:&#xA;// dev&#xA;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;you can see your logs, and scan qrcode to log in wechat.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/2777249/1670287138908-cc898c58-6e0a-488f-ae07-ae489508c1be.png#averageHue=%23484948&amp;amp;clientId=uf4023d0a-0da7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=442&amp;amp;id=ub5fee6b7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;name=image.png&amp;amp;originHeight=1200&amp;amp;originWidth=1660&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=492370&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u233d9139-1ef5-42bf-9f44-354c6565862&amp;amp;title=&amp;amp;width=612&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Send a message to your WeChat and you will receive a reply from ChatGPT.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/2777249/1670288278607-73beed83-1a42-42db-8404-72ba60bf2c53.png#averageHue=%234d4e4d&amp;amp;clientId=uf4023d0a-0da7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=437&amp;amp;id=uff52651b&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;name=image.png&amp;amp;originHeight=874&amp;amp;originWidth=1398&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=543479&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub5559ec7-30f8-4c07-a9f8-1445a659835&amp;amp;title=&amp;amp;width=699&#34; alt=&#34;image.png&#34;&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/2777249/1670288469581-470c7f45-b3db-4a7e-ab01-32b44b812668.png#averageHue=%23f2f2f2&amp;amp;clientId=uf4023d0a-0da7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=230&amp;amp;id=u97e5b1e5&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;name=image.png&amp;amp;originHeight=460&amp;amp;originWidth=1266&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=112172&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u7d7970df-3044-4534-910c-fdb7b3d2a5b&amp;amp;title=&amp;amp;width=633&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;QA&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If your WeChat cannot log in Please check the root directory of your project, whether there is a file ‚Äî‚Äî &lt;code&gt;WechatEveryDay.memory-card&lt;/code&gt;, if so, please delete it and try it again.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This package is ESM-only. It supports: Node.js &amp;gt;= 16.8&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;how to get all response? you can say &#34;continue&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;621&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/39156049/206840335-a64ee27c-df4f-4e70-8604-669fc9468910.png&#34;&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Error: Failed to launch the browser process puppeteer refer to &lt;a href=&#34;https://github.com/puppeteer/puppeteer/raw/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix&#34;&gt;https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;// ubuntu&#xA;sudo apt-get install chromium-browser&#xA;sudo apt-get install  ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üëèüèªContributions&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to contribute your code and ideasüçµ.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fuergaosi233/wechat-chatgpt</title>
    <updated>2023-03-01T02:22:47Z</updated>
    <id>tag:github.com,2023-03-01:/fuergaosi233/wechat-chatgpt</id>
    <link href="https://github.com/fuergaosi233/wechat-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use ChatGPT On Wechat via wechaty&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Welcome to wechat-chatgpt üëã&lt;/h1&gt; &#xA;&lt;p&gt; &lt;img alt=&#34;Version&#34; src=&#34;https://img.shields.io/badge/version-1.0.0-blue.svg?cacheSeconds=2592000&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;License: ISC&#34; src=&#34;https://img.shields.io/badge/License-ISC-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/fuergaosi&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Twitter: fuergaosi&#34; src=&#34;https://img.shields.io/twitter/follow/fuergaosi.svg?style=social&#34;&gt; &lt;/a&gt;  &lt;a href=&#34;https://discord.gg/8fXNrxwUJH&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1058994816446369832?label=Join%20Community&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;join discord community of github profile readme generator&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use ChatGPT On Wechat via wechaty&lt;br&gt; English | &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/README_ZH.md&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/BHJD6L?referralCode=FaJtD_&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have a server or want to experience rapid deployment, you can use Railway to do so, see &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#usage-with-railway&#34;&gt;Usage with Railway&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Update Decomber 27, 2022&lt;/h3&gt; &#xA;&lt;p&gt;Using railway &amp;amp; docker deployment, there may be problems that cannot be solved, we are working on it.&lt;/p&gt; &#xA;&lt;h3&gt;Update December 20, 2022&lt;/h3&gt; &#xA;&lt;p&gt;Thanks @transitive-bullshit, The ChatGPT API automates the work.&lt;br&gt; You should use password &amp;amp; username to login, and config &lt;a href=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/#CAPTCHAS&#34;&gt;CAPTCHAs&lt;/a&gt;.&lt;br&gt; ‚ö†Ô∏è There may be a problem with the Docker image because I don&#39;t have an X86 device and Qume doesn&#39;t work.&lt;/p&gt; &#xA;&lt;h2&gt;üåü Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use ChatGPT On Wechat via wechaty&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support OpenAI Accounts Pool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support use proxy to login&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add conversation Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Dockerfile&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Publish to Docker.hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Railway deploy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto Reload OpenAI Accounts Pool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add sendmessage retry for 429/503&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use with docker in Linux(recommended)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp config.yaml.example config.yaml&#xA;# Change Config.yaml&#xA;# run docker command in Linux or WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use with docker in Windows&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create and modify config.yaml in the current directory&#xA;# run docker command in WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# In the Windows command line (cmd) environment, you may mount the current directory like this:&#xA;docker run -d --name wechat-chatgpt -v %cd%/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrade docker image version&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull holegots/wechat-chatgpt:latest&#xA;docker stop wechat-chatgpt&#xA;docker rm wechat-chatgpt&#xA;# run docker command in Linux or WindowsPowerShell&#xA;docker run -d --name wechat-chatgpt -v $(pwd)/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# In the Windows command line (cmd) environment, you may mount the current directory like this:&#xA;docker run -d --name wechat-chatgpt -v %cd%/config.yaml:/app/config.yaml holegots/wechat-chatgpt:latest&#xA;# login with qrcode&#xA;docker logs -f wechat-chatgpt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NodeJS Version &amp;gt;= 18.0.0&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;h3&gt;Copy config&lt;/h3&gt; &#xA;&lt;p&gt;You need copy config file for setting up your project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp config.yaml.example config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get and config Openai account&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you don&#39;t have this OpenAI account and you live in China, you can get it &lt;a href=&#34;https://mirror.xyz/boxchen.eth/9O9CSqyKDj4BKUIil7NC1Sa1LJM-3hsPqaeW_QjfFBc&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Use account and password&lt;/h4&gt; &#xA;&lt;p&gt;You need get OpenAI account and password. Your config.yaml should be like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;chatGPTAccountPool:&#xA;  - email: &amp;lt;your email&amp;gt;&#xA;    password: &amp;lt;your password&amp;gt;&#xA;# if you hope only some keywords can trigger chatgpt on private chat, you can set it like this:&#xA;chatPrivateTiggerKeyword: &#34;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Trigger keywords must appear in the first position of the received message. ‚ö†Ô∏è Pls make sure your network can log in to OpenAI, and if you fail to login in try setting up a proxy or using SessionToken.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Setup proxy:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can configure in &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;openAIProxy: &amp;lt;Your Proxy&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CAPTCHAS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The browser portions of this package use Puppeteer to automate as much as possible, including solving all CAPTCHAs. üî•&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Basic Cloudflare CAPTCHAs are handled by default, but if you want to automate the email + password Recaptchas, you&#39;ll need to sign up for one of these paid providers:&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://nopecha.com/&#34;&gt;nopecha&lt;/a&gt; - Uses AI to solve CAPTCHAS &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Faster and cheaper&lt;/li&gt; &#xA;    &lt;li&gt;Set the &lt;code&gt;NOPECHA_KEY&lt;/code&gt; env var to your nopecha API key&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/552829/208235991-de4890f2-e7ba-4b42-bf55-4fcd792d4b19.mp4&#34;&gt;Demo video&lt;/a&gt; of nopecha solving the login Recaptcha (41 seconds)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://2captcha.com&#34;&gt;2captcha&lt;/a&gt; - Uses real people to solve CAPTCHAS &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;More well-known solution that&#39;s been around longer&lt;/li&gt; &#xA;    &lt;li&gt;Set the &lt;code&gt;CAPTCHA_TOKEN&lt;/code&gt; env var to your 2captcha API token&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;So you should config &lt;code&gt;NOPECHA_KEY&lt;/code&gt; or &lt;code&gt;CAPTCHA_TOKEN&lt;/code&gt; in your Environment Variables.&lt;/p&gt; &#xA;&lt;h2&gt;Start Project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage with Railway&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/&#34;&gt;Railway&lt;/a&gt; is a deployment platform where you can provision infrastructure, develop with that infrastructure locally, and then deploy to the cloud.This section describes how to quickly deploy a wechat-chatgpt project using Railway.&lt;/p&gt; &#xA;&lt;p&gt;Firstly, you&#39;ll need to sign up for a Railway account and sign in using GitHub verification.&lt;/p&gt; &#xA;&lt;p&gt;Then click the one-click deployment button below to deploy.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/new/template/BHJD6L?referralCode=FaJtD_&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After some validation is complete, you can begin the deployment.You will see the following interface:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deployment.png&#34; alt=&#34;railway-deployment&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some environment variables need to be configured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_EMAIL&lt;/strong&gt; : Your OpenAI Account email.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_PASSWORD&lt;/strong&gt; : Your OpenAI Account password.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_GPT_RETRY_TIMES&lt;/strong&gt; : The number of times to retry when the OpenAI API returns 429 or 503.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_PRIVATE_TRIGGER_KEYWORD&lt;/strong&gt; : If you hope only some keywords can trigger chatgpt on private chat, you can set it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CHAT_TRIGGER_RULE&lt;/strong&gt; ÔºöIf you hope only pass by a regular expression check can trigger chatgpt, you can set it&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;DISABLE_GROUP_MESSAGE&lt;/strong&gt; Ôºöif you do not want to trigger chatgpt in group chat, you can set it&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Click the Deploy button and your service will start deploying shortly.The following interface appears to indicate that the deployment has begun:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deploying.png&#34; alt=&#34;railway-deploying&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;When the deployment is displayed successfully, click to view the logs and find the WeChat login link in Deploy Logs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-deployed.png&#34; alt=&#34;railway-deployed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click to enter and use your prepared WeChat to scan the code to log in.&lt;/p&gt; &#xA;&lt;p&gt;Log in successfully and start sending and receiving messages(This process can take several minutes):&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuergaosi233/wechat-chatgpt/main/docs/images/railway-succeed.png&#34; alt=&#34;railway-success&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Besides, in deployment, you may encounter the following issues:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error: ‚ö†Ô∏è No chatgpt item in pool&lt;/strong&gt; : This error means that you have not configured the OpenAI account information correctly. You can solve this problem from the following aspects:1. Check whether the token or openAI account and password are filled in correctly. 2. Redeploy Current Services.Note that the above should be modified on the Variables page in Railway Dashboard. 3. Please make sure that CloudFlare human authentication is present, if it is, Headless browser may not be able to simulate logging into OpenAI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;After the deployment is complete, the QR code is not generated&lt;/strong&gt;.Try &lt;strong&gt;refreshing&lt;/strong&gt; the page to see again if the Deploy Logs panel generated a link and QR code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The generated QR code cannot be scanned&lt;/strong&gt;.On the generated QR code, there is a link that can be clicked to scan the QR code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message feedback is very slow&lt;/strong&gt;.Because Railway&#39;s servers are deployed overseas, there is an increase in message feedback latency, but it is still within the acceptance range. If you are time sensitive, you can use your own server deployment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are logging in for the first time, then you need to scan the qrcode.&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Contributor&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/fuergaosi233/wechat-chatgpt/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=fuergaosi233/wechat-chatgpt&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions, issues and feature requests are welcome!&lt;br&gt;Feel free to check &lt;a href=&#34;https://github.com/fuergaosi233/wechat-chatgpt/issues&#34;&gt;issues page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Show your support&lt;/h2&gt; &#xA;&lt;p&gt;Give a ‚≠êÔ∏è if this project helped you!&lt;/p&gt;</summary>
  </entry>
</feed>