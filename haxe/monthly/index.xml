<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:16:39Z</updated>
  <subtitle>Monthly Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>massive-oss/MassiveUnit</title>
    <updated>2023-05-01T02:16:39Z</updated>
    <id>tag:github.com,2023-05-01:/massive-oss/MassiveUnit</id>
    <link href="https://github.com/massive-oss/MassiveUnit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;munit is a cross-platform unit testing framework for Haxe. Utilises metadata markup for test cases and includes tools for generating, compiling and running test cases from the command line.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;MUnit is a metadata driven unit testing framework for cross-platform Haxe development.&lt;/p&gt; &#xA;&lt;p&gt;It includes tools for creating, updating, compiling and running unit test cases from the command line.&lt;/p&gt; &#xA;&lt;p&gt;MUnit supports Haxe 3+&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install you must have &lt;a href=&#34;http://www.haxe.org&#34;&gt;Haxe&lt;/a&gt; installed&lt;/p&gt; &#xA;&lt;p&gt;Then just use haxelib to download the latest version&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib install munit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check that it is all installed and to view the help run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; After upgrading you may be required to update the TestMain.hx in existing project before being able to test&lt;/p&gt; &#xA;&lt;p&gt;To install latest build from git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib git munit https://github.com/massiveinteractive/MassiveUnit.git master src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Cross Platform&lt;/h3&gt; &#xA;&lt;p&gt;MUnit has been designed for cross platform Haxe development. It currently supports js, swf, as3, neko, c++, java, cs, python, php and hl and the tool chain works on Windows, OSX and Linux. To run js tests with NodeJS, add &lt;code&gt;-lib hxnodejs&lt;/code&gt; or &lt;code&gt;-D nodejs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Test Metadata&lt;/h3&gt; &#xA;&lt;p&gt;Test cases use Haxe metadata to simplify creating tests (and avoid needing to extend or implement framework classes).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;@Test&#xA;public function testExample():Void&#xA;{&#xA;&#x9;Assert.isTrue(true);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Asynchronous Tests&lt;/h3&gt; &#xA;&lt;p&gt;Unlike the default haxe unit test classes, MUnit supports asynchronous testing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;@AsyncTest&#xA;public function asyncTestExample(factory:AsyncFactory):Void&#xA;{&#xA;&#x9;...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tool Chain&lt;/h3&gt; &#xA;&lt;p&gt;MUnit is way more than just a unit test framework. It includes a command line tool for working with munit projects to streamline your development workflow.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Setup stub test projects in seconds&lt;/li&gt; &#xA; &lt;li&gt;Auto generate test suites based on test classes in a src directory&lt;/li&gt; &#xA; &lt;li&gt;Compile and run multiple targets from an hxml build file&lt;/li&gt; &#xA; &lt;li&gt;Launch and run test applications in the browser or command line (neko)&lt;/li&gt; &#xA; &lt;li&gt;Save out text and junit style test reports to the file system for reporting and ci&lt;/li&gt; &#xA; &lt;li&gt;Auto generate stub test classes (and/or target classes)&lt;/li&gt; &#xA; &lt;li&gt;Integrated code coverage compilation with &lt;a href=&#34;https://github.com/massiveinteractive/MassiveCover&#34;&gt;MCover&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed user guides refer to the &lt;strong&gt;&lt;a href=&#34;https://github.com/massiveinteractive/MassiveUnit/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The API documentation is available on the &lt;a href=&#34;http://lib.haxe.org/d/munit&#34;&gt;haxelib project page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug, &lt;a href=&#34;https://github.com/massiveinteractive/MassiveUnit/issues&#34;&gt;report it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to help, &lt;a href=&#34;https://github.com/massiveinteractive/MassiveUnit/fork_select&#34;&gt;fork it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install latest build from git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib git munit https://github.com/massiveinteractive/MassiveUnit.git src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to make sure it works, make sure to run the bash script (build.sh) and check that the tests all pass on all platforms:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit test -coverage&#xA;&#xA;cd ../test&#xA;haxelib run munit test -coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;New since 2.0.0&lt;/h2&gt; &#xA;&lt;h3&gt;Haxe 3 Support&lt;/h3&gt; &#xA;&lt;p&gt;Some APIs have changed to ensure compatibility with both Haxe 2.10 and Haxe3.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: Support for Haxe 2.09 and Haxe 2.08 have been dropped&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;New since 0.9.5.x&lt;/h2&gt; &#xA;&lt;h3&gt;C++ Target&lt;/h3&gt; &#xA;&lt;p&gt;MUnit now compiles/runs c++ targets&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit test -cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Updates to TestMain to work with MCover 1.4.x&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Note: You may be required to update the TestMain.hx in existing project&#xA;before being able to run `munit test -coverage`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Coverage customisation&lt;/h3&gt; &#xA;&lt;p&gt;Munit now supports custom &lt;a href=&#34;https://github.com/massiveinteractive/MassiveCover&#34;&gt;mcover&lt;/a&gt; settings when compiling via &lt;code&gt;munit test -coverage&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;re-run &lt;code&gt;haxelib run munit config&lt;/code&gt; in a project to set &lt;code&gt;coverage packages&lt;/code&gt; and &lt;code&gt;coverage ignored classes&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/tynril&#34;&gt;tynril&lt;/a&gt; for adding these options.&lt;/p&gt; &#xA;&lt;h2&gt;New since 2.0.x&lt;/h2&gt; &#xA;&lt;h3&gt;Haxe 3 Support&lt;/h3&gt; &#xA;&lt;p&gt;Munit now supports Haxe 3 RC.&lt;/p&gt; &#xA;&lt;p&gt;There aren&#39;t any new features in this release, however there are several breaking changes to internal APIS and Interfaces to ensure compatibility with both versions of Haxe.&lt;/p&gt; &#xA;&lt;p&gt;To compile tests aginst Haxe 3, you may need to delete any references to js.Dom in the generated TestMain class in your project.&lt;/p&gt; &#xA;&lt;h2&gt;New since 0.9.4.x&lt;/h2&gt; &#xA;&lt;h3&gt;Report Command&lt;/h3&gt; &#xA;&lt;p&gt;Convert munit summary reports into different format(s). As of 0.9.4.0 there is only one supported format (TeamCity)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit report [format] [dest] [-coverage percent]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;The following example generates a teamcity-info.xml report in the project directory (.)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit report teamcity . -coverage 85&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You must run and generated summary reports prior to executing the report command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;New since 0.9.3.x&lt;/h2&gt; &#xA;&lt;h3&gt;Better CI support&lt;/h3&gt; &#xA;&lt;p&gt;Get error exit code when tests on one or more platforms fail&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit test -result-exit-code&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: haxelib currently doesnt return exit codes &amp;gt; 0 on OSX (see &lt;a href=&#34;http://code.google.com/p/haxe/issues/detail?id=879&#34;&gt;issue&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Workaround for issues with nekotools server HTTP POST via a simple SummaryReportClient&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;var httpClient = new HTTPClient(new SummaryReportClient())&#xA;runner.addResultClient(httpClient);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;New since 0.9.2.x&lt;/h2&gt; &#xA;&lt;p&gt;Rich HTML output for JavaScript and Flash targets (see RichPrintClient)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;var client = new RichPrintClient();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Seamless support for MCover code coverage&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit test -coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Commands for generating stub test classes on demand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit create package.FooTest -for package.Foo  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CI friendly options for munit config command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib run munit config -default&#xA;haxelib run munit config -src path/to/src -hxml path/to/test.hxml&#xA;haxelib run munit config -file path/to/my/custom/config.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Support for assertions inside async tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;public function someAsyncTest(factory:AsyncFactory)&#xA;{&#xA;&#x9;Assert.isTrue(false);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Support for custom runner html templates and resources&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Run &#39;munit config&#39; to set template and resources directories&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For full list of recent changes see the &lt;strong&gt;&lt;a href=&#34;https://github.com/massiveinteractive/MassiveUnit/raw/master/CHANGES&#34;&gt;change log&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project is brought to you by &lt;a href=&#34;https://github.com/misprintt&#34;&gt;Dominic&lt;/a&gt; and &lt;a href=&#34;https://github.com/mikestead&#34;&gt;Mike&lt;/a&gt; from &lt;a href=&#34;http://massiveinteractive.com&#34;&gt;Massive Interactive&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>