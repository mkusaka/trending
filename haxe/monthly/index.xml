<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:50:48Z</updated>
  <subtitle>Monthly Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>armory3d/armorpaint</title>
    <updated>2022-09-01T01:50:48Z</updated>
    <id>tag:github.com,2022-09-01:/armory3d/armorpaint</id>
    <link href="https://github.com/armory3d/armorpaint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3D PBR Texture Painting Software&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://armorpaint.org/img/git.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;armorpaint&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://armorpaint.org&#34;&gt;ArmorPaint&lt;/a&gt; is a software for 3D PBR texture painting - check out the &lt;a href=&#34;https://armorpaint.org/manual&#34;&gt;manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note 1: This repository is aimed at developers and may not be stable. Distributed binaries are &lt;a href=&#34;https://armorpaint.org/download&#34;&gt;paid&lt;/a&gt; to help with the project funding. All of the development is happening here in order to make it accessible to everyone. Thank you for support!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note 2: If you are compiling git version of ArmorPaint, then you need to have a compiler (&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio&lt;/a&gt; - Windows, &lt;a href=&#34;https://clang.llvm.org/get_started.html&#34;&gt;clang&lt;/a&gt; + &lt;a href=&#34;https://github.com/armory3d/armorpaint/wiki/Linux-Dependencies&#34;&gt;deps&lt;/a&gt; - Linux, &lt;a href=&#34;https://developer.apple.com/xcode/resources/&#34;&gt;Xcode&lt;/a&gt; - macOS / iOS, &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt; - Android) and &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt; installed.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive https://github.com/armory3d/armorpaint&#xA;cd armorpaint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Unpack `armorcore\v8\libraries\win32\release\v8_monolith.7z` using 7-Zip - Extract Here (exceeds 100MB)&#xA;armorcore\Kinc\make --from armorcore -g direct3d11&#xA;# Open generated Visual Studio project at `build\ArmorPaint.sln`&#xA;# Build and run for x64 &amp;amp; release&#xA;# Copy build\x64\Release\ArmorPaint.exe to build\krom to run ArmorPaint.exe directly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;armorcore/Kinc/make --from armorcore -g opengl --compiler clang --compile&#xA;cd armorcore/Deployment&#xA;strip ArmorPaint&#xA;./ArmorPaint ../../build/krom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git apply armorcore/patch/metal_depth.diff --directory=armorcore/Kinc&#xA;armorcore/Kinc/make --from armorcore -g metal&#xA;cp -a build/krom/ armorcore/Deployment&#xA;# Open generated Xcode project at `build/ArmorPaint.xcodeproj`&#xA;# Build and run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt; &lt;em&gt;wip&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git apply armorcore/patch/android_document_picker.diff --directory=armorcore/Kinc&#xA;armorcore/Kinc/make android --from armorcore -g opengl&#xA;cp -r build/krom/* build/ArmorPaint/app/src/main/assets/&#xA;# Manual tweaking is required for now:&#xA;# https://github.com/armory3d/armorcore/blob/master/kincfile.js#L68&#xA;# Open generated Android Studio project at `build/ArmorPaint`&#xA;# Build for device&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt; &lt;em&gt;wip&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/armory3d/armorpaint_plugins armorcore/Libraries/plugins&#xA;git apply armorcore/patch/ios_document_picker.diff --directory=armorcore/Kinc&#xA;git apply armorcore/patch/metal_depth.diff --directory=armorcore/Kinc&#xA;armorcore/Kinc/make ios --from armorcore -g metal&#xA;cp -a build/krom/ armorcore/Deployment&#xA;# Open generated Xcode project `build/ArmorPaint.xcodeproj`&#xA;# Set iOS Deployment Target to 11.0&#xA;# Build for device in release mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows DXR&lt;/strong&gt; &lt;em&gt;wip&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Unpack `armorcore\v8\libraries\win32\release\v8_monolith.7z` using 7-Zip - Extract Here (exceeds 100MB)&#xA;git apply armorcore/patch/d3d12_raytrace.diff --directory=armorcore/Kinc&#xA;armorcore\Kinc\make --from armorcore -g direct3d12&#xA;# Open generated Visual Studio project at `build\ArmorPaint.sln`&#xA;# Build and run for x64 &amp;amp; release&#xA;# Copy build\x64\Release\ArmorPaint.exe to build\krom to run ArmorPaint.exe directly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux VKRT&lt;/strong&gt; &lt;em&gt;wip&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive https://github.com/armory3d/glsl_to_spirv armorcore/Libraries/glsl_to_spirv&#xA;git apply armorcore/patch/vulkan_raytrace.diff --directory=armorcore/Kinc&#xA;armorcore/Kinc/make --from armorcore -g vulkan --compiler clang --compile&#xA;cd armorcore/Deployment&#xA;strip ArmorPaint&#xA;./ArmorPaint ../../build/krom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows VR&lt;/strong&gt; &lt;em&gt;wip&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Unpack `armorcore\v8\libraries\win32\release\v8_monolith.7z` using 7-Zip - Extract Here (exceeds 100MB)&#xA;armorcore\Kinc\make --from armorcore -g direct3d11 --vr oculus&#xA;# Open generated Visual Studio project at `build\ArmorPaint.sln`&#xA;# Build and run for x64 &amp;amp; release&#xA;# Copy build\x64\Release\ArmorPaint.exe to build\krom to run ArmorPaint.exe directly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Updating cloned repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git pull origin main&#xA;git submodule update --init --recursive&#xA;# Delete `armorpaint/build` directory if present&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Generating a locale file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install typing_extensions -t Assets/locale/tools&#xA;python ./Assets/locale/tools/extract_locales.py &amp;lt;locale code&amp;gt;&#xA;# Generates an `Assets/locale/&amp;lt;locale code&amp;gt;.json` file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Release builds&lt;/strong&gt; &lt;em&gt;Optional, used for best performance&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Compile krom.js using the closure compiler&#xA;https://developers.google.com/closure/compiler&#xA;# Generate a v8 snapshot file&#xA;export ARM_SNAPSHOT=1&#xA;armorcore/Kinc/make --from armorcore -g api&#xA;./ArmorPaint . --snapshot&#xA;# Generates a `krom.bin` file from `krom.js` file&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Yoshubs/Forever-Engine-Legacy</title>
    <updated>2022-09-01T01:50:48Z</updated>
    <id>tag:github.com,2022-09-01:/Yoshubs/Forever-Engine-Legacy</id>
    <link href="https://github.com/Yoshubs/Forever-Engine-Legacy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source Friday Night Funkin&#39; mod engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/Yoshubs/FunkinForever&#34;&gt;Forever Engine&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;An open-source, quality of life and performance driven &lt;a href=&#34;https://www.newgrounds.com/portal/view/770371&#34;&gt;Friday Night Funkin&#39;&lt;/a&gt; mod engine!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/916918345255751690/930068118938730526/legacy.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The Friday Night Funkin&#39; Forever Engine is an engine solely based on source code at the moment. Forever Engine is currently in legacy state as it is being rewritten. The legacy version of Forever Engine lacks accessibility and cohesion, something we are currently working to fix with the more newer and updated rewrite. Thank you for your patience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;FOREVER ENGINE IS ONLY MEANT TO BE USED ON DESKTOP! I AM NOT RESPONSIBLE FOR CRASHES/PROBLEMS WITH HTML5, NOR AM I RESPONSIBLE FOR MAINTAINING HTML5&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please redirect all future and current enhancements to the &lt;a href=&#34;https://github.com/Yoshubs/FNF-Forever-Engine&#34;&gt;new repository&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Forever Engine FEATURES! - Noteskins, Custom UIs, Options Menu with FPS Capping and adjustments A lot of modularity and freedom with options (hopefully in the future EVERYTHING will be toggleable) A restructure and partial remake of the base game&#39;s source code Source Code folder abstraction More streamlined code (only having to set things in one place) AND MORE!&lt;/p&gt; &#xA;&lt;p&gt;I really wanted to make an FNF engine that was easier to work with than any other, mostly because I thought about how messy most other engines including the base game were. That doesn&#39;t mean Forever Engine is better than the base game however, Forever is only a tribute to Friday Night Funkin&#39; and its modding community, a small project of mine that I hope people can find enjoyment and use out of!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;ADDITIONS IN 0.3&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rewritten Hold notes&lt;/li&gt; &#xA; &lt;li&gt;BPM Changes (credit to NebulaZorua)&lt;/li&gt; &#xA; &lt;li&gt;Rewritten Inputs (Thanks ShadowMario for letting me borrow some of your scripts, it was more of an afterthought tbh)&lt;/li&gt; &#xA; &lt;li&gt;Better camera movement (heavily based on Vs. Sonic.exe)&lt;/li&gt; &#xA; &lt;li&gt;Just general stability and changes to make sure Legacy is at the very least not broken before moving on to 1.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;CREDITS:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Yoshubs&#34;&gt;Yoshubs&lt;/a&gt; - made the engine. she just so happens to be very fucking stupid for accidentally pushing the martian mixtape source code into forever engine&#39;s base github page&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PixlJacket&#34;&gt;Pixloen&lt;/a&gt; - made a lot of the custom assets that forever engine uses, he also gave me a lot of general advice on how to improve the engine as well as his input on both how to improve upon the base game and how the input system felt and such. ALSO PROGRAMMED SIMPLY JUDGEMENTS AND BACKGROUND DARKEN, He basically co-owns the engine lmao&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gedehari&#34;&gt;Gedehari&lt;/a&gt; - BANGER ASS PROGRAMMER, made the freeplay loading thread to avoid lag issues in freeplay, waveform render code (which will be used soon), freaking EXTERNAL SHADER SUPPORT for modcharts when they&#39;re a thing and so many other things like the crashlogger. I urge you to check out his project, &lt;a href=&#34;https://github.com/gedehari/IzzyEngine&#34;&gt;Izzy Engine&lt;/a&gt;, which he let me borrow a lot of aspects from which I still owe him for lmao. AWESOME dude I can&#39;t stress this enough&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ImCodist&#34;&gt;ImCodist&lt;/a&gt; - helped with a couple of pull requests and issue fixes, ALSO MADE THE WHOLE ASS FREAKING DIALOGUE SYSTEM, but, I&#39;m not gonna give him any credit at all, because he stole my obsidian soul in minecraft and I will never forgive him for that!!!!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SomeKitten&#34;&gt;Scarlett&lt;/a&gt; - Overall cool friend of mine who knows a lot about programming and math that has helped me out countless times, still going here helping me with pushes, commits, etc. She wrote the finalised math formula for the note quants and fixed the song name issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oneilr.newgrounds.com/&#34;&gt;Oneilr&lt;/a&gt; - Cool Guy Oneilr, made some of the custom assets, mostly the animated ones like the custom note splashes to avoid the week 7 embargo as well as some other things like the checkmarks in the options menu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hellosammu&#34;&gt;HelloSammu&lt;/a&gt; - weird catgirl programmer, they scare me CREDITED MAINTENANCE AND SOME MISC FIXES, also scaleable text for dialogue functions&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ninjamuffin99.newgrounds.com/&#34;&gt;ninjamuffin99&lt;/a&gt; - HE MADE THE BASE GAME SO LIKE WITHOUT HIM THIS WOULD NOT BE POSSIBLE GO CHECK HIM OUT RIGHT NOW&lt;/p&gt; &#xA;&lt;p&gt;rest of the rise n&#39; skate team - that mod is the reason im even making an engine right now so like I kind of owe you guys this whole engine and more for that honestly and I will actually do more so stay tuned&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SHOUTOUTS&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HThagomizer&#34;&gt;HThagomizer&lt;/a&gt; - not MURDERING ME for accidentally pushing the martian mixtape source code&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/_Tsuraran&#34;&gt;Tsuraran&lt;/a&gt; - DOPE ASS CUSTOM MENU MUSIC INCOMING, also made vs skipper with clockwerk which is fucking hilarious ALSO YEAH I&#39;LL BUMP AS WELL AFTER ITS IN THE ENGINE (YES IM WORKING ON IT TOO LMAO)&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://twitter.com/ClockwerkSmurf&#34;&gt;Clockwerk&lt;/a&gt; - also made vs skipper, oh my god what were you guys thinking&lt;/h2&gt; &#xA;&lt;p&gt;How to Compile:&lt;/p&gt; &#xA;&lt;p&gt;Basically, all of the files you need are in the engine itself through the setup.bat (Huge thanks to &lt;a href=&#34;https://gamebanana.com/tuts/13798&#34;&gt;FNF Source Code Guide&lt;/a&gt; for the download to the file) except for Visual Studio Code, or whatever program you choose to use to program in the engine. If you&#39;ve already worked with fnf, this should work perfectly with you and if it doesn&#39;t then you might have the wrong target settings, or Lime is probably broken, that&#39;s usually what happens with these things, it&#39;s happened to me a ton of times lmao. I&#39;m not a very good programmer. If you want some external sources that will better walk you through how to compile the game, look no further than the &lt;a href=&#34;https://github.com/ninjamuffin99/Funkin&#34;&gt;base game github&lt;/a&gt; and &lt;a href=&#34;https://gamebanana.com/tuts/13798&#34;&gt;FNF Source Code Guide&lt;/a&gt;, I really hope they help you out!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Thank you for checking out my engine! Got any questions? DM me at Shubs#0404 on Discord!&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>ninjamuffin99/Funkin</title>
    <updated>2022-09-01T01:50:48Z</updated>
    <id>tag:github.com,2022-09-01:/ninjamuffin99/Funkin</id>
    <link href="https://github.com/ninjamuffin99/Funkin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A rhythm game made with HaxeFlixel&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friday Night Funkin&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for Friday Night Funkin, a game originally made for Ludum Dare 47 &#34;Stuck In a Loop&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Play the Ludum Dare prototype here: &lt;a href=&#34;https://ninja-muffin24.itch.io/friday-night-funkin&#34;&gt;https://ninja-muffin24.itch.io/friday-night-funkin&lt;/a&gt; Play the Newgrounds one here: &lt;a href=&#34;https://www.newgrounds.com/portal/view/770371&#34;&gt;https://www.newgrounds.com/portal/view/770371&lt;/a&gt; Support the project on the itch.io page: &lt;a href=&#34;https://ninja-muffin24.itch.io/funkin&#34;&gt;https://ninja-muffin24.itch.io/funkin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IF YOU MAKE A MOD AND DISTRIBUTE A MODIFIED / RECOMPILED VERSION, YOU MUST OPEN SOURCE YOUR MOD AS WELL&lt;/p&gt; &#xA;&lt;h2&gt;Credits / shoutouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ninja_muffin99&#34;&gt;ninjamuffin99 (me!)&lt;/a&gt; - Programmer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/phantomarcade3k&#34;&gt;PhantomArcade3K&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/evilsk8r&#34;&gt;Evilsk8r&lt;/a&gt; - Art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kawaisprite&#34;&gt;Kawaisprite&lt;/a&gt; - Musician&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This game was made with love to Newgrounds and its community. Extra love to Tom Fulp.&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;THESE INSTRUCTIONS ARE FOR COMPILING THE GAME&#39;S SOURCE CODE!!!&lt;/p&gt; &#xA;&lt;p&gt;IF YOU WANT TO JUST DOWNLOAD AND INSTALL AND PLAY THE GAME NORMALLY, GO TO ITCH.IO TO DOWNLOAD THE GAME FOR PC, MAC, AND LINUX!!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ninja-muffin24.itch.io/funkin&#34;&gt;https://ninja-muffin24.itch.io/funkin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IF YOU WANT TO COMPILE THE GAME YOURSELF, CONTINUE READING!!!&lt;/p&gt; &#xA;&lt;h3&gt;Installing the Required Programs&lt;/h3&gt; &#xA;&lt;p&gt;First, you need to install Haxe and HaxeFlixel. I&#39;m too lazy to write and keep updated with that setup (which is pretty simple).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxe.org/download/version/4.1.5/&#34;&gt;Install Haxe 4.1.5&lt;/a&gt; (Download 4.1.5 instead of 4.2.0 because 4.2.0 is broken and is not working with gits properly...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxeflixel.com/documentation/install-haxeflixel/&#34;&gt;Install HaxeFlixel&lt;/a&gt; after downloading Haxe&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Other installations you&#39;d need are the additional libraries, a fully updated list will be in &lt;code&gt;Project.xml&lt;/code&gt; in the project root. Currently, these are all of the things you need to install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;flixel&#xA;flixel-addons&#xA;flixel-ui&#xA;hscript&#xA;newgrounds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So for each of those type &lt;code&gt;haxelib install [library]&lt;/code&gt; so shit like &lt;code&gt;haxelib install newgrounds&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also need to install a couple things that involve Gits. To do this, you need to do a few things first.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git-scm&lt;/a&gt;. Works for Windows, Mac, and Linux, just select your build.&lt;/li&gt; &#xA; &lt;li&gt;Follow instructions to install the application properly.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git polymod https://github.com/larsiusprime/polymod.git&lt;/code&gt; to install Polymod.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc&lt;/code&gt; to install Discord RPC.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should have everything ready for compiling the game! Follow the guide below to continue!&lt;/p&gt; &#xA;&lt;p&gt;At the moment, you can optionally fix the transition bug in songs with zoomed-out cameras.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git flixel-addons https://github.com/HaxeFlixel/flixel-addons&lt;/code&gt; in the terminal/command-prompt.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ignored files&lt;/h3&gt; &#xA;&lt;p&gt;I gitignore the API keys for the game so that no one can nab them and post fake high scores on the leaderboards. But because of that the game doesn&#39;t compile without it.&lt;/p&gt; &#xA;&lt;p&gt;Just make a file in &lt;code&gt;/source&lt;/code&gt; and call it &lt;code&gt;APIStuff.hx&lt;/code&gt;, and copy &amp;amp; paste this into it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;package;&#xA;&#xA;class APIStuff&#xA;{&#xA;&#x9;public static var API:String = &#34;&#34;;&#xA;&#x9;public static var EncKey:String = &#34;&#34;;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and you should be good to go there.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling game&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: If you see any messages relating to deprecated packages, ignore them. They&#39;re just warnings that don&#39;t affect compiling&lt;/p&gt; &#xA;&lt;p&gt;Once you have all those installed, it&#39;s pretty easy to compile the game. You just need to run &lt;code&gt;lime test html5 -debug&lt;/code&gt; in the root of the project to build and run the HTML5 version. (command prompt navigation guide can be found here: &lt;a href=&#34;https://ninjamuffin99.newgrounds.com/news/post/1090480&#34;&gt;https://ninjamuffin99.newgrounds.com/news/post/1090480&lt;/a&gt;) To run it from your desktop (Windows, Mac, Linux) it can be a bit more involved. For Linux, you only need to open a terminal in the project directory and run &lt;code&gt;lime test linux -debug&lt;/code&gt; and then run the executable file in export/release/linux/bin. For Windows, you need to install Visual Studio Community 2019. While installing VSC, don&#39;t click on any of the options to install workloads. Instead, go to the individual components tab and choose the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSVC v142 - VS 2019 C++ x64/x86 build tools&lt;/li&gt; &#xA; &lt;li&gt;Windows SDK (10.0.17763.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once that is done you can open up a command line in the project&#39;s directory and run &lt;code&gt;lime test windows -debug&lt;/code&gt;. Once that command finishes (it takes forever even on a higher end PC), you can run FNF from the .exe file under export\release\windows\bin As for Mac, &#39;lime test mac -debug&#39; should work, if not the internet surely has a guide on how to compile Haxe stuff for Mac.&lt;/p&gt; &#xA;&lt;h3&gt;Additional guides&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ninjamuffin99.newgrounds.com/news/post/1090480&#34;&gt;Command line basics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>