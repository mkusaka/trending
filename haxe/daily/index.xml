<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-10T01:42:16Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KadeDev/Hex-The-Weekend-Update</title>
    <updated>2022-06-10T01:42:16Z</updated>
    <id>tag:github.com,2022-06-10:/KadeDev/Hex-The-Weekend-Update</id>
    <link href="https://github.com/KadeDev/Hex-The-Weekend-Update" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Banging hex man&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HEX MOD&lt;/h1&gt; &#xA;&lt;h2&gt;SHIT&lt;/h2&gt; &#xA;&lt;h3&gt;I GET A CRASH RELATING TO CAMERAS???&lt;/h3&gt; &#xA;&lt;p&gt;thats cuz IM FUCKIN LAZY and I modified a source file on FLIXEL itself&lt;/p&gt; &#xA;&lt;p&gt;Please replace #HaxeToolKitFolder#/haxe/lib/flixel/#flixelver#/flixel/graphics/tile/FlxDrawQuadsItem.hx&lt;/p&gt; &#xA;&lt;p&gt;with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;package flixel.graphics.tile;&#xA;&#xA;#if FLX_DRAW_QUADS&#xA;import flixel.FlxCamera;&#xA;import flixel.graphics.frames.FlxFrame;&#xA;import flixel.graphics.tile.FlxDrawBaseItem.FlxDrawItemType;&#xA;import flixel.system.FlxAssets.FlxShader;&#xA;import flixel.math.FlxMatrix;&#xA;import openfl.geom.ColorTransform;&#xA;import openfl.display.ShaderParameter;&#xA;import openfl.Vector;&#xA;&#xA;class FlxDrawQuadsItem extends FlxDrawBaseItem&amp;lt;FlxDrawQuadsItem&amp;gt; {&#xA;&#x9;static inline var VERTICES_PER_QUAD = #if (openfl &amp;gt;= &#34;8.5.0&#34;) 4 #else 6 #end;&#xA;&#xA;&#x9;public var shader:FlxShader;&#xA;&#xA;&#x9;var rects:Vector&amp;lt;Float&amp;gt;;&#xA;&#x9;var transforms:Vector&amp;lt;Float&amp;gt;;&#xA;&#x9;var alphas:Array&amp;lt;Float&amp;gt;;&#xA;&#x9;var colorMultipliers:Array&amp;lt;Float&amp;gt;;&#xA;&#x9;var colorOffsets:Array&amp;lt;Float&amp;gt;;&#xA;&#xA;&#x9;public function new() {&#xA;&#x9;&#x9;super();&#xA;&#x9;&#x9;type = FlxDrawItemType.TILES;&#xA;&#x9;&#x9;rects = new Vector&amp;lt;Float&amp;gt;();&#xA;&#x9;&#x9;transforms = new Vector&amp;lt;Float&amp;gt;();&#xA;&#x9;&#x9;alphas = [];&#xA;&#x9;}&#xA;&#xA;&#x9;override public function reset():Void {&#xA;&#x9;&#x9;super.reset();&#xA;&#x9;&#x9;rects.length = 0;&#xA;&#x9;&#x9;transforms.length = 0;&#xA;&#x9;&#x9;alphas.splice(0, alphas.length);&#xA;&#x9;&#x9;if (colorMultipliers != null)&#xA;&#x9;&#x9;&#x9;colorMultipliers.splice(0, colorMultipliers.length);&#xA;&#x9;&#x9;if (colorOffsets != null)&#xA;&#x9;&#x9;&#x9;colorOffsets.splice(0, colorOffsets.length);&#xA;&#x9;}&#xA;&#xA;&#x9;override public function dispose():Void {&#xA;&#x9;&#x9;super.dispose();&#xA;&#x9;&#x9;rects = null;&#xA;&#x9;&#x9;transforms = null;&#xA;&#x9;&#x9;alphas = null;&#xA;&#x9;&#x9;colorMultipliers = null;&#xA;&#x9;&#x9;colorOffsets = null;&#xA;&#x9;}&#xA;&#xA;&#x9;override public function addQuad(frame:FlxFrame, matrix:FlxMatrix, ?transform:ColorTransform):Void {&#xA;&#x9;&#x9;var rect = frame.frame;&#xA;&#x9;&#x9;rects.push(rect.x);&#xA;&#x9;&#x9;rects.push(rect.y);&#xA;&#x9;&#x9;rects.push(rect.width);&#xA;&#x9;&#x9;rects.push(rect.height);&#xA;&#xA;&#x9;&#x9;transforms.push(matrix.a);&#xA;&#x9;&#x9;transforms.push(matrix.b);&#xA;&#x9;&#x9;transforms.push(matrix.c);&#xA;&#x9;&#x9;transforms.push(matrix.d);&#xA;&#x9;&#x9;transforms.push(matrix.tx);&#xA;&#x9;&#x9;transforms.push(matrix.ty);&#xA;&#xA;&#x9;&#x9;for (i in 0...VERTICES_PER_QUAD)&#xA;&#x9;&#x9;&#x9;alphas.push(transform != null ? transform.alphaMultiplier : 1.0);&#xA;&#xA;&#x9;&#x9;if (colored || hasColorOffsets) {&#xA;&#x9;&#x9;&#x9;if (colorMultipliers == null)&#xA;&#x9;&#x9;&#x9;&#x9;colorMultipliers = [];&#xA;&#xA;&#x9;&#x9;&#x9;if (colorOffsets == null)&#xA;&#x9;&#x9;&#x9;&#x9;colorOffsets = [];&#xA;&#xA;&#x9;&#x9;&#x9;for (i in 0...VERTICES_PER_QUAD) {&#xA;&#x9;&#x9;&#x9;&#x9;if (transform != null) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(transform.redMultiplier);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(transform.greenMultiplier);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(transform.blueMultiplier);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(transform.redOffset);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(transform.greenOffset);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(transform.blueOffset);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(transform.alphaOffset);&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(1);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;colorOffsets.push(0);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;colorMultipliers.push(1);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;#if !flash&#xA;&#x9;override public function render(camera:FlxCamera):Void {&#xA;&#x9;&#x9;if (rects.length == 0)&#xA;&#x9;&#x9;&#x9;return;&#xA;&#xA;&#x9;&#x9;var shader = shader != null ? shader : graphics.shader;&#xA;&#x9;&#x9;if (shader == null)&#xA;&#x9;&#x9;&#x9;return;&#xA;&#x9;&#x9;var bitmap = graphics.bitmap;&#xA;&#x9;&#x9;shader.bitmap.input = bitmap;&#xA;&#x9;&#x9;shader.bitmap.filter = (camera.antialiasing || antialiasing) ? LINEAR : NEAREST;&#xA;&#x9;&#x9;shader.alpha.value = alphas;&#xA;&#xA;&#x9;&#x9;if (colored || hasColorOffsets) {&#xA;&#x9;&#x9;&#x9;shader.colorMultiplier.value = colorMultipliers;&#xA;&#x9;&#x9;&#x9;shader.colorOffset.value = colorOffsets;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;setParameterValue(shader.hasTransform, true);&#xA;&#x9;&#x9;setParameterValue(shader.hasColorTransform, colored || hasColorOffsets);&#xA;&#xA;&#x9;&#x9;#if (openfl &amp;gt; &#34;8.7.0&#34;)&#xA;&#x9;&#x9;camera.canvas.graphics.overrideBlendMode(blend);&#xA;&#x9;&#x9;#end&#xA;&#x9;&#x9;camera.canvas.graphics.beginShaderFill(shader);&#xA;&#x9;&#x9;camera.canvas.graphics.drawQuads(rects, null, transforms);&#xA;&#x9;&#x9;super.render(camera);&#xA;&#x9;}&#xA;&#xA;&#x9;inline function setParameterValue(parameter:ShaderParameter&amp;lt;Bool&amp;gt;, value:Bool):Void {&#xA;&#x9;&#x9;if (parameter.value == null)&#xA;&#x9;&#x9;&#x9;parameter.value = [];&#xA;&#x9;&#x9;parameter.value[0] = value;&#xA;&#x9;}&#xA;&#x9;#end&#xA;}&#xA;#end&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>FuseIsHere813/VsDave</title>
    <updated>2022-06-10T01:42:16Z</updated>
    <id>tag:github.com,2022-06-10:/FuseIsHere813/VsDave</id>
    <link href="https://github.com/FuseIsHere813/VsDave" rel="alternate"></link>
    <summary type="html">&lt;p&gt;thank you funkipedia for linking my forked copy of VsDave into here lol&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Powered by a heavily modified version of Kade Engine known as Dave Engine!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/KadeDev/Kade-Engine/raw/stable/assets/preload/images/KadeEngineLogo.png&#34; alt=&#34;Kade Engine Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dave&lt;/h2&gt; &#xA;&lt;p&gt;this is dave &lt;img src=&#34;https://cdn.discordapp.com/attachments/892140166309892136/905267141299802152/dorve_reale.png&#34; alt=&#34;Dave&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;say hi to dave&lt;/p&gt; &#xA;&lt;p&gt;please say hi to him&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Carlitosmorecom/FNF-VS-YOSHI-SOURCE-CODE-</title>
    <updated>2022-06-10T01:42:16Z</updated>
    <id>tag:github.com,2022-06-10:/Carlitosmorecom/FNF-VS-YOSHI-SOURCE-CODE-</id>
    <link href="https://github.com/Carlitosmorecom/FNF-VS-YOSHI-SOURCE-CODE-" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The code shit for fnf vs yoshi mod&lt;/p&gt;&lt;hr&gt;&lt;p&gt;SOURCE CODE FOR THE MOD VS YOSHI!&lt;/p&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/KadeDev/Kade-Engine&#34;&gt;https://github.com/KadeDev/Kade-Engine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To Compile The Source Code&lt;/p&gt;</summary>
  </entry>
</feed>