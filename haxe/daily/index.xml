<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-11T01:32:10Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ceramic-engine/ceramic</title>
    <updated>2025-07-11T01:32:10Z</updated>
    <id>tag:github.com,2025-07-11:/ceramic-engine/ceramic</id>
    <link href="https://github.com/ceramic-engine/ceramic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform 2D framework written in Haxe that can export natively to desktop (windows, mac, linux), mobile (ios, android), web (js + webgl) and to unity projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ceramic&lt;/h1&gt; &#xA;&lt;img alt=&#34;Ceramic Logo&#34; align=&#34;left&#34; src=&#34;https://raw.githubusercontent.com/ceramic-engine/ceramic/master/tools/tpl/project/empty/assets/ceramic.png&#34; height=&#34;130&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ceramic&lt;/strong&gt; is a cross-platform 2D framework written in Haxe that can export natively to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Desktop&lt;/strong&gt; (windows, mac, linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile&lt;/strong&gt; (ios, android), web (js + webgl)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unity&lt;/strong&gt; projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ceramic-engine.com&#34;&gt;https://ceramic-engine.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Ceramic was created by &lt;strong&gt;&lt;a href=&#34;https://github.com/jeremyfa&#34;&gt;Jérémy Faivre&lt;/a&gt;&lt;/strong&gt;, as well as multiple libraries used internally, but is also possible thanks to the following works:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://luxeengine.com/alpha/&#34;&gt;Luxe Engine (alpha)&lt;/a&gt; by ruby0x1&lt;/strong&gt; which was used as a transitional backend before &lt;code&gt;clay&lt;/code&gt; backend was ready. Some snippets of Ceramic still directly come from &lt;code&gt;luxe&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/HaxeFlixel/flixel/raw/a59545015a65a42b8f24b08262ac80de020deb37/flixel/util/FlxColor.hx&#34;&gt;HaxeFlixel&#39;s FlxColor class&lt;/a&gt; by Joe Williamson&lt;/strong&gt; which was ported into to &lt;code&gt;ceramic.Color&lt;/code&gt; and &lt;code&gt;ceramic.AlphaColor&lt;/code&gt; classes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/openfl/openfl/raw/0b84012052fc8f6ab2e211c93769c99ad331beb9/openfl/geom/Matrix.hx&#34;&gt;OpenFL&lt;/a&gt; by Joshua Granick&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/pixijs/pixi.js/raw/85aaea595f77bf0511886c499fc2733d4f5ba524/src/core/math/Matrix.js&#34;&gt;PixiJS&lt;/a&gt; by Mathew Groves&lt;/strong&gt; to implement &lt;code&gt;ceramic.Transform&lt;/code&gt; class.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://haxe.org/&#34;&gt;Haxe&lt;/a&gt; by Nicolas Cannasse&lt;/strong&gt;, maintained by the &lt;strong&gt;Haxe Foundation&lt;/strong&gt;, which is a fantastic cross-platform toolkit and programming language making it much easier to create a portable engine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; and its huge amount of community supported modules&lt;/strong&gt;, helping a lot to create feature-complete and cross-platform command line tools.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rjanicek/janicek-core-haxe&#34;&gt;Janicek Core Haxe&lt;/a&gt; by Richard Janicek&lt;/strong&gt;, for some borrowed code for &lt;code&gt;ceramic.Utils.hashCode()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/simov/slugify&#34;&gt;Slugify&lt;/a&gt; by Simov&lt;/strong&gt;, and &lt;strong&gt;&lt;a href=&#34;https://lib.haxe.org/p/slug&#34;&gt;Slug haxelib port&lt;/a&gt;&lt;/strong&gt; to provide &lt;code&gt;ceramic.Slug&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/HaxeFlixel/flixel/raw/02e2d18158761d0d508a06126daef2487aa7373c/flixel/effects/particles/FlxEmitter.hx&#34;&gt;HaxeFlixel&#39;s FlxEmitter class&lt;/a&gt;&lt;/strong&gt; used as a starting point to implement &lt;code&gt;ceramic.Particles&lt;/code&gt; and &lt;code&gt;ceramic.ParticleEmitter&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mikvor/hashmapTest&#34;&gt;Optimised HashMaps&lt;/a&gt; by Mikhail Vorontsov&lt;/strong&gt; to implement &lt;code&gt;ceramic.IntIntMap&lt;/code&gt; and related on static targets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/larsiusprime/crashdumper/raw/24e28e8fd664de922bd480502efe596665d905b8/crashdumper/CrashDumper.hx&#34;&gt;Some crash logging snippets&lt;/a&gt; by Lars Doucet&lt;/strong&gt; to handle errors with &lt;code&gt;ceramic.Errors&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/gdenisov/cardinal-spline-js&#34;&gt;Cardinal Spline JS&lt;/a&gt; by Gleb Denisov&lt;/strong&gt;, used to create &lt;code&gt;ceramic.CardinalSpline&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/deepnight/ld48-NuclearBlaze/raw/master/src/game/gm/Camera.hx&#34;&gt;Nuclear Blaze&#39;s GameBase Camera&lt;/a&gt; by Sébastien Bénard&lt;/strong&gt;, used as a model to create &lt;code&gt;ceramic.Camera&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/gre/bezier-easing&#34;&gt;Bezier Easing&lt;/a&gt; by Gaëtan Renaudeau&lt;/strong&gt;, used to create &lt;code&gt;ceramic.BezierEasing&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kiwipxl/GLSL-shaders&#34;&gt;Some GLSL shader code&lt;/a&gt; by Richman Steward&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/goldfire/howler.js/raw/143ae442386c7b42d91a007d0b1f1695528abe64/src/howler.core.js#L245-L293&#34;&gt;Some browser mess handling&lt;/a&gt; from Howler.js&lt;/strong&gt; to help implement Ceramic audio backend for web.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/AustinEast/heaps-aseprite&#34;&gt;Heaps Aseprite&lt;/a&gt; by Austin East&lt;/strong&gt;, from which several snippets were ported for make Ceramic &lt;code&gt;ase&lt;/code&gt; format parsing and rendering.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/aseprite/aseprite/raw/23557a190b4f5ab46c9b3ddb19146a7dcfb9dd82/src/doc/blend_funcs.cpp&#34;&gt;Aseprite Blend Functions&lt;/a&gt; by Igara Studio S.A. and David Capello&lt;/strong&gt;, which were ported to Haxe in order to implement ase frame blending at runtime in Ceramic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mattdesl/extrude-polyline&#34;&gt;Extrude Polyline&lt;/a&gt; by Matt DesLauriers&lt;/strong&gt;, via Haxe port used in Ceramic to draw lines.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/libgdx/libgdx&#34;&gt;LibGDX&lt;/a&gt;&lt;/strong&gt;, used as a reference for polygon triangulation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Yanrishatum/haxe-format-tiled&#34;&gt;Haxe Format Tiled&lt;/a&gt; by Pavel Alexandrov&lt;/strong&gt; to parse Tiled Map Editor&#39;s TMX format.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yupswing/akifox-asynchttp&#34;&gt;Akifox Async HTTP&lt;/a&gt; by Simone Cingano&lt;/strong&gt;, used to implement HTTP backend on native targets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://joecreates.github.io/napephys&#34;&gt;Nape Physics&lt;/a&gt; by Luca Deltodesco and contributors&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hsluv/hsluv&#34;&gt;HSLuv&lt;/a&gt;&lt;/strong&gt; to provide additional color manipulation helpers to &lt;code&gt;ceramic.Color&lt;/code&gt; and &lt;code&gt;ceramic.AlphaColor&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;Dear ImGui&lt;/a&gt; by Omar Cornut&lt;/strong&gt;, via &lt;strong&gt;&lt;a href=&#34;https://github.com/jeremyfa/imgui-hx&#34;&gt;Haxe bindings&lt;/a&gt; initially created by Aidan Lee&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/snowkit/gif&#34;&gt;Gif Capture&lt;/a&gt; ported by Tilman Schmidt and Sven Bergström&lt;/strong&gt; from &lt;a href=&#34;https://github.com/Chman/Moments&#34;&gt;Moments&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/KeyMaster-/linc_rtmidi&#34;&gt;Linc RTMidi&lt;/a&gt; by Tilman Schmidt&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tw1ddle/Rectangle-Bin-Packing&#34;&gt;Rectangle Bin Packing&lt;/a&gt; by Sam Twidale&lt;/strong&gt;, used for &lt;code&gt;ceramic.TextureAtlasPacker&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/miriti/ase&#34;&gt;Ase format parser&lt;/a&gt; by Michael Miriti&lt;/strong&gt; to read &lt;code&gt;.ase&lt;/code&gt;/&lt;code&gt;.aseprite&lt;/code&gt; files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/atom/fuzzaldrin&#34;&gt;Fuzzaldrin&lt;/a&gt; from Atom&lt;/strong&gt; to provide some auto-completion features at runtime debug UI.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jarikomppa/soloud&#34;&gt;SoLoud&lt;/a&gt; by Jari Komppa&lt;/strong&gt; to implement audio on both C++/Native targets and C#/Unity audio mixing (via MiniLoud port)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/deepnight/ldtk&#34;&gt;LDtk&lt;/a&gt; by Sébastien Bénard&lt;/strong&gt;, a modern 2D level editor, compatible with Ceramic&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Ceramic is &lt;a href=&#34;https://raw.githubusercontent.com/ceramic-engine/ceramic/master/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>