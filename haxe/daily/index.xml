<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-20T01:39:54Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vshaxe/haxe-language-server</title>
    <updated>2023-06-20T01:39:54Z</updated>
    <id>tag:github.com,2023-06-20:/vshaxe/haxe-language-server</id>
    <link href="https://github.com/vshaxe/haxe-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language Server Protocol implementation for the Haxe language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Haxe Language Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vshaxe/haxe-language-server/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://github.com/vshaxe/haxe-language-server/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a language server implementing &lt;a href=&#34;https://github.com/Microsoft/language-server-protocol&#34;&gt;Language Server Protocol&lt;/a&gt; for the &lt;a href=&#34;http://haxe.org/&#34;&gt;Haxe&lt;/a&gt; language.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this project is to encapsulate haxe&#39;s completion API with all its quirks behind a solid and easy-to-use protocol that can be used by any editor/IDE.&lt;/p&gt; &#xA;&lt;p&gt;Used by the &lt;a href=&#34;https://github.com/vshaxe/vshaxe&#34;&gt;Visual Studio Code Haxe Extension&lt;/a&gt;. It has also successfully been used in Neovim and Sublime Text&lt;sup&gt;&lt;a href=&#34;https://github.com/vshaxe/vshaxe/issues/171&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;&lt;a href=&#34;https://github.com/vshaxe/vshaxe/issues/328&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;, but no official extensions exist at this time.&lt;/p&gt; &#xA;&lt;p&gt;Note that any issues should be reported to &lt;a href=&#34;https://github.com/vshaxe/vshaxe&#34;&gt;vshaxe&lt;/a&gt; directly (this is also the reason why the issue tracker is disabled). Pull requests are welcome however!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: This requires Haxe 3.4.0 or newer due to usage of &lt;a href=&#34;https://github.com/HaxeFoundation/haxe/pull/5120&#34;&gt;&lt;code&gt;-D display-stdin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/HaxeFoundation/haxe/pull/5188&#34;&gt;&lt;code&gt;--wait stdio&lt;/code&gt;&lt;/a&gt; and tons of other fixes and additions related to IDE support.&lt;/p&gt; &#xA;&lt;h3&gt;Building From Source&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to work on the language server is probably to build it as part of the vshaxe VSCode extension as instructed &lt;a href=&#34;https://github.com/vshaxe/vshaxe/wiki/Installation#from-source&#34;&gt;here&lt;/a&gt; (even if you ultimately want to use it outside of VSCode), which allows for easy debugging.&lt;/p&gt; &#xA;&lt;p&gt;However, you can also build it as a standalone project like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/vshaxe/haxe-language-server&#xA;cd haxe-language-server&#xA;npm ci&#xA;npx lix run vshaxe-build -t language-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This creates a &lt;code&gt;bin/server.js&lt;/code&gt; that can be started with &lt;code&gt;node server.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage with (Neo)vim&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s a large amount of language client plugins for (Neo)vim, but the best choice currently seems to be &lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;coc.nvim&lt;/a&gt;. A &lt;code&gt;coc-settings.json&lt;/code&gt; that is known to work with haxe-language-server looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;{&#xA;    &#34;languageserver&#34;: {&#xA;        &#34;haxe&#34;: {&#xA;            &#34;command&#34;: &#34;node&#34;,&#xA;            &#34;args&#34;: [&#34;&amp;lt;path-to-server.js&amp;gt;&#34;],&#xA;            &#34;filetypes&#34;: [&#34;haxe&#34;],&#xA;            &#34;trace.server&#34;: &#34;verbose&#34;,&#xA;            &#34;initializationOptions&#34;: {&#xA;                &#34;displayArguments&#34;: [&#34;build.hxml&#34;]&#xA;            },&#xA;            &#34;settings&#34;: {&#xA;                &#34;haxe.executable&#34;: &#34;haxe&#34;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with Kate&lt;/h3&gt; &#xA;&lt;p&gt;Go to configure Kate (&lt;code&gt;Ctrl+Shift+,&lt;/code&gt;) » &lt;code&gt;LSP Client&lt;/code&gt; » &lt;code&gt;User Server Settings&lt;/code&gt; » Add the following snippet to the JSON config within the &lt;code&gt;servers&lt;/code&gt; object. Don&#39;t forget to change the path to the LSP server.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;haxe&#34;: {&#xA;    &#34;command&#34;: [&#34;node&#34;, &#34;&amp;lt;path-to-server.js&amp;gt;&#34;],&#xA;    &#34;rootIndicationFileNames&#34;: [&#34;*.hx&#34;, &#34;*.hxml&#34;],&#xA;    &#34;url&#34;: &#34;https://github.com/vshaxe/haxe-language-server&#34;,&#xA;    &#34;initializationOptions&#34;: {&#34;displayArguments&#34;: [&#34;build.hxml&#34;]},&#xA;    &#34;settings&#34;: {&#34;haxe&#34;: {&#34;buildCompletionCache&#34;: true}},&#xA;    &#34;highlightingModeRegex&#34;: &#34;^Haxe$&#34;&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Click &lt;code&gt;Apply&lt;/code&gt;, you can then close the window. Use &lt;code&gt;File&lt;/code&gt; » &lt;code&gt;Reload&lt;/code&gt; or &lt;code&gt;F5&lt;/code&gt; to reload the project. Accept when it asks you whether you want to start the LSP server.&lt;/p&gt; &#xA;&lt;p&gt;Where &lt;code&gt;&amp;lt;path-to-server.js&amp;gt;&lt;/code&gt; can either be a &lt;code&gt;server.js&lt;/code&gt; you built from source or simply downloaded as part of the Haxe Visual Studio Code extension (&lt;code&gt;&#34;/&amp;lt;you-home-folder&amp;gt;/.vscode/extensions/nadako.vshaxe-&amp;lt;version&amp;gt;/bin/server.js&#34;&lt;/code&gt;).&lt;/p&gt;</summary>
  </entry>
</feed>