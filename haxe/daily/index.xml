<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:35:56Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheZoroForce240/FNF-Modcharting-Tools</title>
    <updated>2023-03-04T01:35:56Z</updated>
    <id>tag:github.com,2023-03-04:/TheZoroForce240/FNF-Modcharting-Tools</id>
    <link href="https://github.com/TheZoroForce240/FNF-Modcharting-Tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FNF Modcharting Tools&lt;/h1&gt; &#xA;&lt;p&gt;Just a thing I made to make modcharting easier, should be easy to add to most engines. Still very WIP and not everything is supported yet!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Modifier system for easing in and out effects&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/TheZoroForce240/FNF-Modcharting-Tools/raw/main/readme/modifiers.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Sustain Renderer (using FlxStrip for stretchy sustains)&lt;/h3&gt; &#xA;&lt;h3&gt;Multiple playfields that can have their own positions and modifiers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/TheZoroForce240/FNF-Modcharting-Tools/raw/main/readme/sustains.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom Modifier Support via Hscript&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/TheZoroForce240/FNF-Modcharting-Tools/raw/main/readme/custommods.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Support for multiple engines&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Base Game (not tested)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ShadowMario/FNF-PsychEngine&#34;&gt;Psych Engine&lt;/a&gt; (working 0.6.3, includes lua functions)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Leather128/LeatherEngine&#34;&gt;Leather Engine&lt;/a&gt; (working 0.4.2)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KadeDev/Kade-Engine&#34;&gt;Kade Engine&lt;/a&gt; (not tested)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YoshiCrafter29/YoshiCrafterEngine&#34;&gt;Yoshi Engine&lt;/a&gt; (not tested)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Yoshubs/Forever-Engine-Legacy&#34;&gt;Forever Engine Legacy&lt;/a&gt; (not tested)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ThatRozebudDude/FPS-Plus-Public&#34;&gt;FPS Plus&lt;/a&gt; (not tested)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ninjamuffin99/Funkin&#34;&gt;Original FNF Team&lt;/a&gt; - they made the game&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.noti.tg/&#34;&gt;NotITG&lt;/a&gt; - Inspiration (made me love modcharts lol)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openitg/openitg&#34;&gt;OpenITG&lt;/a&gt; - Math used for some modifiers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You need the most recent version of HaxeFlixel for it to work. (5.2.1 as of writing)&lt;/p&gt; &#xA;&lt;h3&gt;With Source:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the haxelib by typing &lt;code&gt;haxelib git fnf-modcharting-tools https://github.com/TheZoroForce240/FNF-Modcharting-Tools&lt;/code&gt; in the console&lt;/li&gt; &#xA; &lt;li&gt;Now you only need to make a few small additions to get everything working,&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In MusicBeatState.hx:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;class MusicBeatState extends modcharting.ModchartMusicBeatState&#xA;{&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In PlayState.hx:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;import modcharting.ModchartFuncs;&#xA;import modcharting.NoteMovement;&#xA;import modcharting.PlayfieldRenderer;&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;override public function create()&#xA;{&#xA;&#xA;  //Add this before camfollow stuff and after strumLineNotes and notes have been made&#xA;  playfieldRenderer = new PlayfieldRenderer(strumLineNotes, notes, this);&#xA;  playfieldRenderer.cameras = [camHUD];&#xA;  add(playfieldRenderer);&#xA;  add(grpNoteSplashes); /*place splashes in front (add this if the engine has splashes).&#xA;  If you have added this: remove(or something) the add(grpNoteSplashes); which is by default below the add(strumLineNotes);*/&#xA;      &#xA;      &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;// (at the bottom of create())&#xA;&#xA;ModchartFuncs.loadLuaFunctions(); //add this if you want lua functions in scripts&#xA;//being used in psych engine as an example&#xA;&#xA;callOnLuas(&#39;onCreatePost&#39;, []);&#xA;super.create();&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;public function startCountdown():Void&#xA;{&#xA;  generateStaticArrows(0);&#xA;  generateStaticArrows(1);&#xA;  &#xA;  //add after generating strums&#xA;  NoteMovement.getDefaultStrumPos(this);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In Note.hx:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;class Note extends FlxSprite&#xA;{&#xA;  //add these 2 variables for the renderer&#xA;  public var mesh:flixel.FlxStrip = null; &#xA;  public var z:Float = 0;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In Project.xml:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;!--Set this to the engine you&#39;re using!--&amp;gt;&#xA;&amp;lt;define name=&#34;PSYCH&#34; /&amp;gt;&#xA;&#xA;&amp;lt;haxelib name=&#34;fnf-modcharting-tools&#34; /&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need to define which engine you&#39;re using to fix compiling issues, or it would default to base game settings (downscroll won&#39;t work etc). Available ones: PSYCH, KADE, LEATHER, FOREVER_LEGACY, YOSHI, FPSPLUS&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Now if your game compiles successfully then you should be all good to go.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>