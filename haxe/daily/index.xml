<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-27T01:36:46Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HeapsIO/hide</title>
    <updated>2023-02-27T01:36:46Z</updated>
    <id>tag:github.com,2023-02-27:/HeapsIO/hide</id>
    <link href="https://github.com/HeapsIO/hide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Heaps IDE&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hide&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HeapsIO/hide/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/HeapsIO/hide/CI.svg?logo=github&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://haxe.org/img/blog/2020-04-06-shirogames-stack/hide.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hide (Heaps IDE) is an extensible editor that can be used as a middleware for various tasks, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;preview 3D models and textures&lt;/li&gt; &#xA; &lt;li&gt;edit materials properties&lt;/li&gt; &#xA; &lt;li&gt;create timeline based visual effects and movements&lt;/li&gt; &#xA; &lt;li&gt;create whole 3D levels, place lights, paint terrain, bake shadow maps and volumetric light maps&lt;/li&gt; &#xA; &lt;li&gt;create and edit 2D and 3D particles systems&lt;/li&gt; &#xA; &lt;li&gt;edit and modify your &lt;a href=&#34;https://github.com/ncannasse/castle&#34;&gt;Castle&lt;/a&gt; Database&lt;/li&gt; &#xA; &lt;li&gt;extend by adding game specific prefabs&lt;/li&gt; &#xA; &lt;li&gt;extend with your own game specific editors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t want to build Hide from source, you can download a nightly build from &lt;a href=&#34;http://build.heaps.io:8080/hide/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling from source&lt;/h2&gt; &#xA;&lt;h4&gt;1. Install Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://haxe.org/&#34;&gt;Haxe&lt;/a&gt; using appropriate installer from &lt;a href=&#34;https://haxe.org/download/&#34;&gt;https://haxe.org/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install these libraries:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib git heaps https://github.com/HeapsIO/heaps&#xA;haxelib git castle https://github.com/ncannasse/castle&#xA;haxelib git hxbit https://github.com/ncannasse/hxbit&#xA;haxelib git hscript https://github.com/HaxeFoundation/hscript&#xA;haxelib git hxnodejs https://github.com/HaxeFoundation/hxnodejs&#xA;haxelib git domkit https://github.com/HeapsIO/domkit&#xA;haxelib git hx3compat https://github.com/HaxeFoundation/hx3compat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Build Heaps IDE&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxe hide.hxml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;This will create hide.js in the bin folder&lt;/li&gt; &#xA; &lt;li&gt;If there are errors when compiling, make sure you are using the latest libraries from git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;3. Install NWJS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and copy &lt;a href=&#34;https://nwjs.io/&#34;&gt;NWJS&lt;/a&gt; SDK into the &lt;code&gt;/bin/nwjs&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;On OSX, copy all files from &lt;code&gt;bin&lt;/code&gt; into the &lt;code&gt;bin/nwjs.app/Contents/Resources/app.nw&lt;/code&gt; folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: Run &lt;code&gt;hide.cmd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux: Run &lt;code&gt;nwjs/nw .&lt;/code&gt; (don&#39;t miss the trailing space and dot)&lt;/li&gt; &#xA; &lt;li&gt;OSX: Open the NWJS application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;In your project&#39;s resource folder, you can create a &lt;code&gt;props.json&lt;/code&gt; configuration file to override Hide&#39;s default settings. Refer to &lt;code&gt;bin/defaultProps.json&lt;/code&gt; for the list of available settings.&lt;/p&gt; &#xA;&lt;h2&gt;Extending Hide&lt;/h2&gt; &#xA;&lt;h3&gt;Custom plugin&lt;/h3&gt; &#xA;&lt;p&gt;In your project, create an hxml configuration for building the plugin. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hxml&#34;&gt;# hide-plugin.hxml&#xA;-cp src&#xA;-lib hide&#xA;-lib hxnodejs&#xA;-lib castle&#xA;--macro hide.Plugin.init()&#xA;-js hide-plugin.js&#xA;-debug&#xA;HideImports&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;HideImports.hx&lt;/code&gt; here is just a file that lists all the classes you want to embed in your plugin. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;// HideImports.hx&#xA;import prefabs.MyPrefab1;&#xA;import prefabs.MyPrefab2;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;haxe hide-plugin.hxml&lt;/code&gt; should now generate a &lt;code&gt;hide-plugin.js&lt;/code&gt; plugin file.&lt;/p&gt; &#xA;&lt;p&gt;In your project configuration file (&lt;code&gt;res/props.json&lt;/code&gt;) you can now include this file like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;plugins&#34;: [&#34;../hide-plugin.js&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Aside from javascript plugins, you can add your own stylsheets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;plugins&#34;: [&#34;../hide-plugin-style.css&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom prefab&lt;/h3&gt; &#xA;&lt;p&gt;Example of a project-specific custom prefab:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;import hrt.prefab.Context;&#xA;import hrt.prefab.Library;&#xA;&#xA;class MyPrefab extends hrt.prefab.Object3D {&#xA;    &#xA;    public function new(?parent) {&#xA;        super(parent);&#xA;        type = &#34;myprefab&#34;;&#xA;    }&#xA;&#xA;    override function make(ctx:Context):Context {&#xA;        var ret = super.make(ctx);&#xA;        // Custom code...&#xA;        return ret;&#xA;    }&#xA;&#xA;    #if editor&#xA;&#xA;    override function getHideProps() : hide.prefab.HideProps {&#xA;        return { icon : &#34;cog&#34;, name : &#34;MyPrefab&#34; };&#xA;    }&#xA;&#xA;    #end&#xA;&#xA;    static var _ = Library.register(&#34;myprefab&#34;, MyPrefab);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom file views&lt;/h3&gt; &#xA;&lt;p&gt;You can add your own viewers/editors for files, by extending &lt;code&gt;hide.view.FileView&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;import hide.view.FileView;&#xA;&#xA;class CustomView extends FileView {&#xA;    &#xA;    // onDisplay should create html layout of your view. It is also called each when file is changed externally.&#xA;    override public function onDisplay()&#xA;    {&#xA;        // Example of initial layout setup.&#xA;        element.html(&#39;&#xA;          &amp;lt;div class=&#34;flex vertical&#34;&amp;gt;&#xA;            &amp;lt;div class=&#34;toolbar&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;            &amp;lt;div class=&#34;content&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;          &amp;lt;/div&amp;gt;&#xA;        &#39;);&#xA;        var tools = new hide.comp.Toolbar(null, element.find(&#34;.toolbar&#34;));&#xA;        var content = element.find(&#34;.content&#34;));&#xA;        // Importantly, use `getPath()` to obtain file path that you can use for filesystem access.&#xA;        var path = getPath();&#xA;        // ... your code to fill content&#xA;  }&#xA;  &#xA;  // Register the view with specific extensions.&#xA;  // Extensions starting with `json.` refer to `.json` files with `type` at root&#xA;  // object being second part of extension (&#34;type&#34;: &#34;customView&#34; in this sample).&#xA;  // Otherwise it is treated as regular file extension.&#xA;  // Providing icon and createNew is optional. If createNew set, HIDE file tree will have a context menu item to create new file that FileView represents.&#xA;  static var _ = hide.view.FileTree.registerExtension(CustomView, [&#34;json.customView&#34;, &#34;customview&#34;], { icon: &#34;snowflake-o&#34;, createNew: &#34;Dialog Context&#34; });&#xA;  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>MAJigsaws-Storage/FNF-PsychEngine</title>
    <updated>2023-02-27T01:36:46Z</updated>
    <id>tag:github.com,2023-02-27:/MAJigsaws-Storage/FNF-PsychEngine</id>
    <link href="https://github.com/MAJigsaws-Storage/FNF-PsychEngine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;some people wanted it back so here it is!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friday Night Funkin&#39; - Psych Engine With Android Support&lt;/h1&gt; &#xA;&lt;p&gt;Engine originally used on &lt;a href=&#34;https://gamebanana.com/mods/301107&#34;&gt;Mind Games Mod&lt;/a&gt;, intended to be a fix for the vanilla version&#39;s many issues while keeping the casual play aspect of it. Also aiming to be an easier alternative to newbie coders.&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://haxe.org/download/&#34;&gt;the most up-to-date version of Haxe&lt;/a&gt;, seriously, stop using 4.1.5, it misses some stuff.&lt;/p&gt; &#xA;&lt;p&gt;Follow a Friday Night Funkin&#39; source code compilation tutorial, after this you will need to install LuaJIT.&lt;/p&gt; &#xA;&lt;p&gt;To install LuaJIT do this: &lt;code&gt;haxelib git linc_luajit https://github.com/jigsaw-4277821/linc_luajit&lt;/code&gt; on a CMD/PowerShell window&lt;/p&gt; &#xA;&lt;p&gt;...Or if you don&#39;t want your mod to be able to run .lua scripts, delete the &#34;LUA_ALLOWED&#34; line on Project.xml&lt;/p&gt; &#xA;&lt;p&gt;If you get an error about StatePointer when using Lua, run &lt;code&gt;haxelib remove linc_luajit&lt;/code&gt; into CMD/PowerShell, then re-install linc_luajit.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Build Instructions For Android:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html&#34;&gt;JDK&lt;/a&gt; - Download version &lt;code&gt;11&lt;/code&gt; of it&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt; - I recomend you to download the latest version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/ndk/downloads/older_releases?hl=fi&#34;&gt;NDK&lt;/a&gt; - Download version &lt;code&gt;r21e&lt;/code&gt; (This is the version recomended by Lime)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Install JDK, Android Studio Unzip the NDK (the NDK does not need to be installed because its a zip archive)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We need to set up Android Studio for this go to android studio and find android sdk (in settings -&amp;gt; Appearance &amp;amp; Behavior -&amp;gt; system settings -&amp;gt; android sdk) &lt;img src=&#34;https://user-images.githubusercontent.com/59097731/104179652-44346000-541d-11eb-8ad1-1e4dfae304a8.PNG&#34; alt=&#34;andr&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/59097731/104179943-a9885100-541d-11eb-8f69-7fb5a4bfdd37.PNG&#34; alt=&#34;andr2&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You Need to install extension-androidtools&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To install &lt;code&gt;extension-androidtools&lt;/code&gt; run this: &lt;code&gt;haxelib git extension-androidtools https://github.com/jigsaw-4277821/extension-androidtools&lt;/code&gt; on a CMD/PowerShell window&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;And run command &lt;code&gt;lime setup android&lt;/code&gt; in CMD/PowerShell (You need to insert the program paths)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open project in CMD/PowerShell &lt;code&gt;cd (path to fnf source)&lt;/code&gt; And run command &lt;code&gt;lime build android -final&lt;/code&gt; The apk will be generated in this path (path to source)\export\release\android\bin\app\build\outputs\apk\debug&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want video support on your mod, simply run &lt;code&gt;haxelib install hxCodec&lt;/code&gt; on a CMD/PowerShell window&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, you can delete the &#34;VIDEOS_ALLOWED&#34; Line on Project.xml&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shadow Mario - Programmer&lt;/li&gt; &#xA; &lt;li&gt;RiverOaken - Artist&lt;/li&gt; &#xA; &lt;li&gt;Yoshubs - Assistant Programmer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bbpanzu - Ex-Programmer&lt;/li&gt; &#xA; &lt;li&gt;shubs - New Input System&lt;/li&gt; &#xA; &lt;li&gt;SqirraRNG - Crash Handler and Base code for Chart Editor&#39;s Waveform&lt;/li&gt; &#xA; &lt;li&gt;KadeDev - Fixed some cool stuff on Chart Editor and other PRs&lt;/li&gt; &#xA; &lt;li&gt;iFlicky - Composer of Psync and Tea Time, also made the Dialogue Sounds&lt;/li&gt; &#xA; &lt;li&gt;PolybiusProxy - .MP4 Video Loader Library (hxCodec)&lt;/li&gt; &#xA; &lt;li&gt;Keoiki - Note Splash Animations&lt;/li&gt; &#xA; &lt;li&gt;Smokey - Sprite Atlas Support&lt;/li&gt; &#xA; &lt;li&gt;Nebula the Zorua - LUA JIT Fork and some Lua reworks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android Support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Saw (M.A. Jigsaw) - All the things needed for this engine to support android&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Attractive animated dialogue boxes:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/127706669-71cd5cdb-5c2a-4ecc-871b-98a276ae8070.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mod Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Probably one of the main points of this engine, you can code in .lua files outside of the source code, making your own weeks without even messing with the source!&lt;/li&gt; &#xA; &lt;li&gt;Comes with a Mod Organizing/Disabling Menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Atleast one change to every week:&lt;/h2&gt; &#xA;&lt;h3&gt;Week 1:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Dad Left sing sprite&lt;/li&gt; &#xA; &lt;li&gt;Unused stage lights are now used&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 2:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both BF and Skid &amp;amp; Pump does &#34;Hey!&#34; animations&lt;/li&gt; &#xA; &lt;li&gt;Thunders does a quick light flash and zooms the camera in slightly&lt;/li&gt; &#xA; &lt;li&gt;Added a quick transition/cutscene to Monster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 3:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BF does &#34;Hey!&#34; during Philly Nice&lt;/li&gt; &#xA; &lt;li&gt;Blammed has a cool new colors flash during that sick part of the song&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 4:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better hair physics for Mom/Boyfriend (Maybe even slightly better than Week 7&#39;s &lt;span&gt;👀&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Henchmen die during all songs. Yeah :(&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 5:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bottom Boppers and GF does &#34;Hey!&#34; animations during Cocoa and Eggnog&lt;/li&gt; &#xA; &lt;li&gt;On Winter Horrorland, GF bops her head slower in some parts of the song.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 6:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Thorns, the HUD is hidden during the cutscene&lt;/li&gt; &#xA; &lt;li&gt;Also there&#39;s the Background girls being spooky during the &#34;Hey!&#34; parts of the Instrumental&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool new Chart Editor changes and countless bug fixes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ShadowMario/FNF-PsychEngine/raw/main/docs/img/chart.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can now chart &#34;Event&#34; notes, which are bookmarks that trigger specific actions that usually were hardcoded on the vanilla version of the game.&lt;/li&gt; &#xA; &lt;li&gt;Your song&#39;s BPM can now have decimal values&lt;/li&gt; &#xA; &lt;li&gt;You can manually adjust a Note&#39;s strum time if you&#39;re really going for milisecond precision&lt;/li&gt; &#xA; &lt;li&gt;You can change a note&#39;s type on the Editor, it comes with two example types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alt Animation: Forces an alt animation to play, useful for songs like Ugh/Stress&lt;/li&gt; &#xA;   &lt;li&gt;Hey: Forces a &#34;Hey&#34; animation instead of the base Sing animation, if Boyfriend hits this note, Girlfriend will do a &#34;Hey!&#34; too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multiple editors to assist you in making your own Mod&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144629914-1fe55999-2f18-4cc1-bc70-afe616d74ae5.png&#34; alt=&#34;Screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Working both for Source code modding and Downloaded builds!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Story mode menu rework:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/UB2EKpV.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a different BG to every song (less Tutorial)&lt;/li&gt; &#xA; &lt;li&gt;All menu characters are now in individual spritesheets, makes modding it easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits menu&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144632635-f263fb22-b879-4d6b-96d6-865e9562b907.png&#34; alt=&#34;Screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add a head icon, name, description and a Redirect link for when the player presses Enter while the item is currently selected.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Awards/Achievements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The engine comes with 16 example achievements that you can mess with and learn how it works (Check Achievements.hx and search for &#34;checkForAchievement&#34; on PlayState.hx)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options menu:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can change Note colors, Delay and Combo Offset, Controls and Preferences there.&lt;/li&gt; &#xA; &lt;li&gt;On Preferences you can toggle Downscroll, Middlescroll, Anti-Aliasing, Framerate, Low Quality, Note Splashes, Flashing Lights, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other gameplay features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the enemy hits a note, their strum note also glows.&lt;/li&gt; &#xA; &lt;li&gt;Lag doesn&#39;t impact the camera movement and player icon scaling anymore.&lt;/li&gt; &#xA; &lt;li&gt;Some stuff based on Week 7&#39;s changes has been put in (Background colors on Freeplay, Note splashes)&lt;/li&gt; &#xA; &lt;li&gt;You can reset your Score on Freeplay/Story Mode by pressing Reset button.&lt;/li&gt; &#xA; &lt;li&gt;You can listen to a song or adjust Scroll Speed/Damage taken/etc. on Freeplay by pressing Space.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>