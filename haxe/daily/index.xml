<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:45:40Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>YoshiCrafter29/YoshiCrafterEngine</title>
    <updated>2022-06-05T01:45:40Z</updated>
    <id>tag:github.com,2022-06-05:/YoshiCrafter29/YoshiCrafterEngine</id>
    <link href="https://github.com/YoshiCrafter29/YoshiCrafterEngine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friday Night Funkin&#39; - Yoshi Engine&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YoshiCrafter29/YoshiCrafterEngine/main/art/banner_new.png&#34; alt=&#34;Yoshi Engine&#39;s logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the repository of Yoshi Engine, a modification of Friday Night Funkin&#39; which allows full modding without source code access.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is &lt;a href=&#34;https://github.com/YoshiCrafter29/YoshiEngine/wiki&#34;&gt;here&lt;/a&gt; (in construction), feel free to download it for offline use !&lt;/p&gt; &#xA;&lt;p&gt;Thanks to PolybiusProxy for the &lt;a href=&#34;https://github.com/brightfyregit/Friday-Night-Funkin-Mp4-Video-Support&#34;&gt;MP4 Cutscene Support&lt;/a&gt; !&lt;/p&gt; &#xA;&lt;p&gt;Also, if you&#39;re going to mod it, do NOT include the executable with it, only your mod in the &#34;mods&#34; folder. The goal of this engine is to have one instance of FNF with every mods in it&lt;/p&gt; &#xA;&lt;h2&gt;Here&#39;s a full list of Yoshi Engine&#39;s functionnalities :&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full mod support&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Songs&lt;/li&gt; &#xA;   &lt;li&gt;Characters&lt;/li&gt; &#xA;   &lt;li&gt;Stages&lt;/li&gt; &#xA;   &lt;li&gt;Modcharts&lt;/li&gt; &#xA;   &lt;li&gt;Custom notes&lt;/li&gt; &#xA;   &lt;li&gt;Cutscenes&lt;/li&gt; &#xA;   &lt;li&gt;Weeks&lt;/li&gt; &#xA;   &lt;li&gt;Credits&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom keybinds&lt;/li&gt; &#xA;   &lt;li&gt;Downscroll&lt;/li&gt; &#xA;   &lt;li&gt;Custom scroll speed&lt;/li&gt; &#xA;   &lt;li&gt;GUI scale&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;GUI Options&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Accuracy mode&lt;/li&gt; &#xA;     &lt;li&gt;Text quality level&lt;/li&gt; &#xA;     &lt;li&gt;Timer&lt;/li&gt; &#xA;     &lt;li&gt;Press delay&lt;/li&gt; &#xA;     &lt;li&gt;Accuracy&lt;/li&gt; &#xA;     &lt;li&gt;Number of misses&lt;/li&gt; &#xA;     &lt;li&gt;Average hit delay&lt;/li&gt; &#xA;     &lt;li&gt;Rating&lt;/li&gt; &#xA;     &lt;li&gt;Animated info bar&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Custom note colors&lt;/li&gt; &#xA;   &lt;li&gt;Custom note skins&lt;/li&gt; &#xA;   &lt;li&gt;Custom Boyfriend skins&lt;/li&gt; &#xA;   &lt;li&gt;Custom Girlfriend skins&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Botplay&lt;/li&gt; &#xA; &lt;li&gt;Green Screen Mode&lt;/li&gt; &#xA; &lt;li&gt;New charter&lt;/li&gt; &#xA; &lt;li&gt;Freeplay Statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer Mode&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In game logs&lt;/li&gt; &#xA;   &lt;li&gt;Disables cache&lt;/li&gt; &#xA;   &lt;li&gt;Character debug mode&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;People who helped me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AbnormalPoof&lt;/strong&gt; for the pretty printing of chart jsons.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install a mod&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download an Yoshi Engine mod&lt;/li&gt; &#xA; &lt;li&gt;Get the mod folder (in the root or in a &#34;mods&#34; folder, or see instructions)&lt;/li&gt; &#xA; &lt;li&gt;Copy over to the &#34;mods&#34; folder&lt;/li&gt; &#xA; &lt;li&gt;Restart the engine&lt;/li&gt; &#xA; &lt;li&gt;Enjoy !&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Friday Night Funkin&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for Friday Night Funkin, a game originally made for Ludum Dare 47 &#34;Stuck In a Loop&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Play the Ludum Dare prototype here: &lt;a href=&#34;https://ninja-muffin24.itch.io/friday-night-funkin&#34;&gt;https://ninja-muffin24.itch.io/friday-night-funkin&lt;/a&gt; Play the Newgrounds one here: &lt;a href=&#34;https://www.newgrounds.com/portal/view/770371&#34;&gt;https://www.newgrounds.com/portal/view/770371&lt;/a&gt; Support the project on the itch.io page: &lt;a href=&#34;https://ninja-muffin24.itch.io/funkin&#34;&gt;https://ninja-muffin24.itch.io/funkin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IF YOU MAKE A MOD AND DISTRIBUTE A MODIFIED / RECOMPILED VERSION, YOU MUST OPEN SOURCE YOUR MOD AS WELL&lt;/p&gt; &#xA;&lt;h2&gt;Credits / shoutouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ninja_muffin99&#34;&gt;ninjamuffin99 (me!)&lt;/a&gt; - Programmer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/phantomarcade3k&#34;&gt;PhantomArcade3K&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/evilsk8r&#34;&gt;Evilsk8r&lt;/a&gt; - Art&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kawaisprite&#34;&gt;Kawaisprite&lt;/a&gt; - Musician&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This game was made with love to Newgrounds and its community. Extra love to Tom Fulp.&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;THESE INSTRUCTIONS ARE FOR COMPILING THE GAME&#39;S SOURCE CODE!!!&lt;/p&gt; &#xA;&lt;p&gt;IF YOU WANT TO JUST DOWNLOAD AND INSTALL AND PLAY THE GAME NORMALLY, GO TO ITCH.IO TO DOWNLOAD THE GAME FOR PC, MAC, AND LINUX!!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ninja-muffin24.itch.io/funkin&#34;&gt;https://ninja-muffin24.itch.io/funkin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IF YOU WANT TO COMPILE THE GAME YOURSELF, CONTINUE READING!!!&lt;/p&gt; &#xA;&lt;h3&gt;Installing the Required Programs&lt;/h3&gt; &#xA;&lt;p&gt;First, you need to install Haxe and HaxeFlixel. I&#39;m too lazy to write and keep updated with that setup (which is pretty simple).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxe.org/download/version/4.1.5/&#34;&gt;Install Haxe 4.1.5&lt;/a&gt; (Download 4.1.5 instead of 4.2.0 because 4.2.0 is broken and is not working with gits properly...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxeflixel.com/documentation/install-haxeflixel/&#34;&gt;Install HaxeFlixel&lt;/a&gt; after downloading Haxe&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Other installations you&#39;d need are the additional libraries, a fully updated list will be in &lt;code&gt;Project.xml&lt;/code&gt; in the project root. Currently, these are all of the things you need to install:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;flixel&#xA;flixel-addons&#xA;flixel-ui&#xA;hscript&#xA;newgrounds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So for each of those type &lt;code&gt;haxelib install [library]&lt;/code&gt; so shit like &lt;code&gt;haxelib install newgrounds&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also need to install a couple things that involve Gits. To do this, you need to do a few things first.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git-scm&lt;/a&gt;. Works for Windows, Mac, and Linux, just select your build.&lt;/li&gt; &#xA; &lt;li&gt;Follow instructions to install the application properly.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git polymod https://github.com/larsiusprime/polymod.git&lt;/code&gt; to install Polymod.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc&lt;/code&gt; to install Discord RPC.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit&lt;/code&gt; to install hxvm-luajit.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit&lt;/code&gt; to install linc_luajit.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should have everything ready for compiling the game! Follow the guide below to continue!&lt;/p&gt; &#xA;&lt;p&gt;At the moment, you can optionally fix the transition bug in songs with zoomed-out cameras.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;haxelib git flixel-addons https://github.com/HaxeFlixel/flixel-addons&lt;/code&gt; in the terminal/command-prompt.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ignored files&lt;/h3&gt; &#xA;&lt;p&gt;I gitignore the API keys for the game so that no one can nab them and post fake high scores on the leaderboards. But because of that the game doesn&#39;t compile without it.&lt;/p&gt; &#xA;&lt;p&gt;Just make a file in &lt;code&gt;/source&lt;/code&gt; and call it &lt;code&gt;APIStuff.hx&lt;/code&gt;, and copy &amp;amp; paste this into it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;package;&#xA;&#xA;class APIStuff&#xA;{&#xA;&#x9;public static var API:String = &#34;&#34;;&#xA;&#x9;public static var EncKey:String = &#34;&#34;;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and you should be good to go there.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling game&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: If you see any messages relating to deprecated packages, ignore them. They&#39;re just warnings that don&#39;t affect compiling&lt;/p&gt; &#xA;&lt;p&gt;Once you have all those installed, it&#39;s pretty easy to compile the game. You just need to run &lt;code&gt;lime test html5 -debug&lt;/code&gt; in the root of the project to build and run the HTML5 version. (command prompt navigation guide can be found here: &lt;a href=&#34;https://ninjamuffin99.newgrounds.com/news/post/1090480&#34;&gt;https://ninjamuffin99.newgrounds.com/news/post/1090480&lt;/a&gt;) To run it from your desktop (Windows, Mac, Linux) it can be a bit more involved. For Linux, you only need to open a terminal in the project directory and run &lt;code&gt;lime test linux -debug&lt;/code&gt; and then run the executable file in export/release/linux/bin. For Windows, you need to install Visual Studio Community 2019. While installing VSC, don&#39;t click on any of the options to install workloads. Instead, go to the individual components tab and choose the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MSVC v142 - VS 2019 C++ x64/x86 build tools&lt;/li&gt; &#xA; &lt;li&gt;Windows SDK (10.0.17763.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once that is done you can open up a command line in the project&#39;s directory and run &lt;code&gt;lime test windows -debug&lt;/code&gt;. Once that command finishes (it takes forever even on a higher end PC), you can run FNF from the .exe file under export\release\windows\bin As for Mac, &#39;lime test mac -debug&#39; should work, if not the internet surely has a guide on how to compile Haxe stuff for Mac.&lt;/p&gt; &#xA;&lt;h3&gt;Additional guides&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ninjamuffin99.newgrounds.com/news/post/1090480&#34;&gt;Command line basics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MerphiG/Impostor-V4-Fanmade</title>
    <updated>2022-06-05T01:45:40Z</updated>
    <id>tag:github.com,2022-06-05:/MerphiG/Impostor-V4-Fanmade</id>
    <link href="https://github.com/MerphiG/Impostor-V4-Fanmade" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Just best Impostor v4 Fanmade.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>andrew-git/Lune</title>
    <updated>2022-06-05T01:45:40Z</updated>
    <id>tag:github.com,2022-06-05:/andrew-git/Lune</id>
    <link href="https://github.com/andrew-git/Lune" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lune Game Engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lune v0&lt;/h1&gt; &#xA;&lt;p&gt;Lune - haXe/NME Cross-Platform Game Engine&lt;/p&gt;</summary>
  </entry>
</feed>