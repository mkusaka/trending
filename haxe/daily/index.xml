<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-07T01:37:38Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>deepnight/deepnightLibs</title>
    <updated>2023-05-07T01:37:38Z</updated>
    <id>tag:github.com,2023-05-07:/deepnight/deepnightLibs</id>
    <link href="https://github.com/deepnight/deepnightLibs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The general personal libs I use in my Haxe projects.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;The general purpose libs I use in all my Haxe projects. If you want to build one of &lt;a href=&#34;https://github.com/deepnight/&#34;&gt;my project&lt;/a&gt;, you will need them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/deepnight/deepnightLibs/actions/workflows/runUnitTests.yml&#34;&gt;&lt;img src=&#34;https://github.com/deepnight/deepnightLibs/actions/workflows/runUnitTests.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;h2&gt;Stable&lt;/h2&gt; &#xA;&lt;p&gt;Use this version if you plan to use the libs for your own projects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;haxelib install deepnightLibs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Latest Git version (mostly stable)&lt;/h2&gt; &#xA;&lt;p&gt;This is the version I use and update very frequently.&lt;/p&gt; &#xA;&lt;p&gt;Pick this version if you&#39;re building one of my GitHub projects, such as LDtk or one of my gamejam entry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;haxelib git deepnightLibs https://github.com/deepnight/deepnightLibs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;In your HXML file, add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-hxml&#34;&gt;-lib deepnightLibs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All the libs are in the &lt;code&gt;dn.*&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;class MyProject {&#xA;&#x9;public function new() {&#xA;&#x9;&#x9;trace( dn.Color.intToHex(0) ); // &#34;#000000&#34;&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Tips&lt;/h1&gt; &#xA;&lt;p&gt;Use global imports! To import libs in every HX files, just add a &lt;code&gt;import.hx&lt;/code&gt; (this exact name &amp;amp; caps) file to the &lt;strong&gt;root&lt;/strong&gt; of your &lt;code&gt;src&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dn.*;&#xA;dn.Color as C;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The first line imports all classes in &lt;code&gt;dn&lt;/code&gt; package,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The second one imports &lt;code&gt;Color&lt;/code&gt; as an alias &#34;C&#34;,&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Feel free to add your own convenient imports there.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Noteworthy classes&lt;/h1&gt; &#xA;&lt;h2&gt;dn.M&lt;/h2&gt; &#xA;&lt;p&gt;My re-implementation of the Math class, with high-performances in mind:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;M.fmin(0.5, 0.9); // 0.5&#xA;M.frandRange(0, 2); // random Float number between 0 -&amp;gt; 2&#xA;M.randRange(0, 2); // either 0, 1 or 2&#xA;M.pow(val, 2); // turns into val*val at compilation time&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;dn.Color&lt;/h2&gt; &#xA;&lt;p&gt;The color management lib.&lt;/p&gt; &#xA;&lt;p&gt;It mostly works using &lt;code&gt;UInt&lt;/code&gt; colors (&lt;code&gt;0xRRGGBB&lt;/code&gt;, like &lt;code&gt;0xffcc00&lt;/code&gt;), but contains many useful methods to convert color to various formats (HSL, ARGB, String).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;dn.Color.intToHex(0); // #000000&#xA;dn.Color.toWhite(0xff0000, 0.5); // Interpolates color to white at 50%&#xA;dn.Color.getPerceivedLuminosityInt(0x7799ff); // return perceived luminosity (0 to 1.0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;dn.DecisionHelper&lt;/h2&gt; &#xA;&lt;p&gt;A nice tool to easily pick a value among many others using any custom criterion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;var arr = [ &#34;a&#34;, &#34;foo&#34;, &#34;bar&#34;, &#34;food&#34;, &#34;hello&#34; ];&#xA;&#xA;var dh = new dn.DecisionHelper(arr);&#xA;&#xA;/* Iterates all values in arr and increase their internal score by 1 if they contain the letter &#34;o&#34;. */&#xA;dh.score( v -&amp;gt; StringTools.contains(v,&#34;o&#34;) ? 1 : 0 );&#xA;&#xA;/* Increase score of each values using 10% of their length (ie. longer strings get slightly higher score) */&#xA;dh.score( v -&amp;gt; v.length*0.1 );&#xA;&#xA;/* Discard any value containing the letter &#34;h&#34; */&#xA;dh.remove( v -&amp;gt; StringTools.contains(v,&#34;h&#34;) );&#xA;&#xA;/* Only keep values with length&amp;gt;1 */&#xA;dh.keepOnly( v -&amp;gt; v.length&amp;gt;1 );&#xA;&#xA;trace( dh.getBest() ); // -&amp;gt; food&#xA;/* Internal scores: a (discarded), foo (1.3), bar (0.3), food (1.4), hello (discarded). */&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>