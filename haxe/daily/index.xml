<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-21T01:37:35Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>danielo515/haxe-nvim</title>
    <updated>2023-02-21T01:37:35Z</updated>
    <id>tag:github.com,2023-02-21:/danielo515/haxe-nvim</id>
    <link href="https://github.com/danielo515/haxe-nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configure NeoVim in Haxe!!! Lua externs for the neovim lua API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Important information!!&lt;/h1&gt; &#xA;&lt;h2&gt;WIP&lt;/h2&gt; &#xA;&lt;p&gt;This is a work in progress. It is very usable, in fact I use it in my personal configs and in one Neovim plugin with great success, but the API may change.&lt;/p&gt; &#xA;&lt;h2&gt;Not a plugin&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is not a Neovim plugin&lt;/strong&gt; , it is a Haxe library to help you write neovim configurations and plugins using Haxe programming language&lt;/p&gt; &#xA;&lt;h2&gt;Just a mirror&lt;/h2&gt; &#xA;&lt;p&gt;This repository is, as today 2023-01-02 a mirror of my personal dotfiles. The reason is point 1 on this important information list. I am still developing this library and use it daily for my Neovim configuration, so I want the convenience of having it in my personal dotfiles repository. You can open issues on this repository, but don&#39;t try to contribute to it because this repository is automatically updated from my personal dotfiles.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;I am just a newcomer to Haxe, so there are lots of places where I will appreciate contributions. Here is a list of things that are very welcome&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; A cool logo. If anything this project needs is a cool logo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Proper configurations to publish this to haxelib&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; A better lua annotations parser. I don&#39;t want to depend on anything but Haxe. Currently this library uses a very dumb parser for the Lua annotations. If you want to help there and improve it or write a new one you are welcome&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Try this out. Yeah, just having this used by someone but me will probably be beneficial.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Write more neovim externs! This library tries to generate most extenrs automatically, but some manual work is unavoidable (because how wild the Neovim api is in terms of types). If you want to contribute and add new and better definitions for NeoVim methods, this is also welcome&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Haxe Nvim&lt;/h1&gt; &#xA;&lt;p&gt;Write your next Neovim plugin or your personal neovim configuration in Haxe and enjoy a high level language which is type safe.&lt;/p&gt; &#xA;&lt;p&gt;This library was initially intended to be named &#34;Nvim haxelerator&#34; (and I may rename it at some point) because it will allow you to write Neovim plugins faster and safer. Take advantage of the powerful Haxe compiler and turn frustrating runtime errors your users (probably your future self) will face and that will take you hours to debug into nice compilation time errors that will take you seconds to fix!&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;We have strong opinions about what this library should be and what should not be. Read about that below.&lt;/p&gt; &#xA;&lt;h3&gt;Prefer enums over magic values&lt;/h3&gt; &#xA;&lt;p&gt;APIs must be for humans to instruct machines, not to talk between machines. Because of that the usage of magic values that have a special meaning is avoided as much as possible. Instead Enums are used in every place it is possible. Haxe has a great feature which is called &lt;code&gt;Abstracts&lt;/code&gt;, which allows you to have proper compile-time-only abstractions without any runtime overhead. An example of this is the &lt;code&gt;Buffer&lt;/code&gt; type. All the neovim functions that expect a &lt;code&gt;BufferId&lt;/code&gt; will not just accept any number, you must provide a proper &lt;code&gt;BufferId&lt;/code&gt; (obtained from functions that return a &lt;code&gt;BufferId&lt;/code&gt;) or &lt;code&gt;CurrentBuffer&lt;/code&gt;. Thanks to the nature of abstract types this disappears after compilation and all what is left are plain numbers.&lt;/p&gt; &#xA;&lt;h2&gt;Advantages over plain Lua&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Proper types! You don&#39;t know how good is having proper types that will you prevent from doing silly mistakes. This library goes even further and not only prevents you from putting a &lt;code&gt;&#34;string&#34;&lt;/code&gt; where a number is expected, it will also prevent you from putting the wrong number!&lt;/li&gt; &#xA; &lt;li&gt;Compile time errors. Yes, rather than saving your plugin/config, reload neovim, test your feature and try to decipher the stack trace, you will get compile-time errors as you save your file, pointing out to the exact place where you did that stupid mistake because you are configuring your editor again at 2:00 am&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently the output size is a bit beefy compared to plain Lua. I ported kickstart.lua, which is about 350 lines of code and the generated Lua is about ~1k lines. It is just 3 times larger, which is not that bad if you consider all the extra language features you get.&lt;/li&gt; &#xA; &lt;li&gt;Duplicated STD. This library tries to use Neovim std as much as possible, but because the Haxe Lua output limitations there are always some Haxe STD helpers in the generated file. This paired with the inability of Haxe to output several files will make every plugin contain a copy of all the STD helper Haxe produces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Example usage&lt;/h1&gt; &#xA;&lt;p&gt;If you want an example or a bootstrap to start your own neovim plugin using haxe-nvim, take a look at the &lt;a href=&#34;https://github.com/danielo515/haxe-nvim-example-plugin&#34;&gt;template plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgments&lt;/h1&gt; &#xA;&lt;p&gt;I want to thank Rudy from the Haxe discord channel for his huge help with macros to reduce the overhead of the Lua target.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaysLastPlays-FNF-Things/FNF-PsychEngine</title>
    <updated>2023-02-21T01:37:35Z</updated>
    <id>tag:github.com,2023-02-21:/MaysLastPlays-FNF-Things/FNF-PsychEngine</id>
    <link href="https://github.com/MaysLastPlays-FNF-Things/FNF-PsychEngine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friday Night Funkin&#39; - Psych Engine&lt;/h1&gt; &#xA;&lt;p&gt;Engine originally used on &lt;a href=&#34;https://gamebanana.com/mods/301107&#34;&gt;Mind Games Mod&lt;/a&gt;, intended to be a fix for the vanilla version&#39;s many issues while keeping the casual play aspect of it. Also aiming to be an easier alternative to newbie coders.&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://haxe.org/download/&#34;&gt;the most up-to-date version of Haxe&lt;/a&gt;, seriously, stop using 4.1.5, it misses some stuff.&lt;/p&gt; &#xA;&lt;p&gt;open up a Command Prompt/PowerShell or Terminal, type &lt;code&gt;haxelib install hmm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;after it finishes, simply type &lt;code&gt;haxelib run hmm install&lt;/code&gt; in order to install all the needed libraries for &lt;em&gt;Psych Engine!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Customization:&lt;/h2&gt; &#xA;&lt;p&gt;if you wish to disable things like &lt;em&gt;Lua Scripts&lt;/em&gt; or &lt;em&gt;Video Cutscenes&lt;/em&gt;, you can read over to &lt;code&gt;Project.xml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;inside &lt;code&gt;Project.xml&lt;/code&gt;, you will find several variables to customize Psych Engine to your liking&lt;/p&gt; &#xA;&lt;p&gt;to start you off, disabling Videos should be simple, simply Delete the line &lt;code&gt;&#34;VIDEOS_ALLOWED&#34;&lt;/code&gt; or comment it out by wrapping the line in XML-like comments, like this &lt;code&gt;&amp;lt;!-- YOUR_LINE_HERE --&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;same goes for &lt;em&gt;Lua Scripts&lt;/em&gt;, comment out or delete the line with &lt;code&gt;LUA_ALLOWED&lt;/code&gt;, this and other customization options are all available within the &lt;code&gt;Project.xml&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;h1&gt;Build instructions For Android&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html&#34;&gt; JDK &lt;/a&gt; - download jdk 8&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt; Android Studio &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/ndk/downloads/older_releases?hl=fi&#34;&gt; NDK &lt;/a&gt; - download the r15c&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Install JDK, Android Studio Unzip ndk (ndk does not need to be installed)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We need to set up Android Studio for this go to android studio and find android sdk (in settings -&amp;gt; Appearance &amp;amp; Behavior -&amp;gt; system settings -&amp;gt; android sdk) &lt;img src=&#34;https://user-images.githubusercontent.com/59097731/104179652-44346000-541d-11eb-8ad1-1e4dfae304a8.PNG&#34; alt=&#34;andr&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/59097731/104179943-a9885100-541d-11eb-8f69-7fb5a4bfdd37.PNG&#34; alt=&#34;andr2&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And run command &lt;code&gt;lime setup android&lt;/code&gt; in power shell / cmd You need to insert the program paths&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;As in this picture (use jdk, not jre) &lt;img src=&#34;https://user-images.githubusercontent.com/59097731/104179268-9e80f100-541c-11eb-948d-a00d85317b1a.PNG&#34; alt=&#34;lime&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;You Need to install extension-androidtools, extension-videoview and to replace the linc_luajit&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To Install Them You Need To Open Command prompt/PowerShell And To Tipe&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;haxelib git extension-androidtools https://github.com/MaysLastPlay77/extension-androidtools.git&#xA;&#xA;haxelib remove hxCodec&#xA;&#xA;haxelib git hxCodec https://github.com/MAJigsaw77/hxCodec.git&#xA;&#xA;haxelib remove linc_luajit&#xA;&#xA;haxelib git linc_luajit https://github.com/Sirox228/linc_luajit.git&#xA;&#xA;haxelib git hxShaders https://github.com/JonnycatMeow/hxShaders.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Open project in command line &lt;code&gt;cd (path to fnf source)&lt;/code&gt; And run command &lt;code&gt;lime build android -final&lt;/code&gt; Apk will be generated in this path (path to source)\export\release\android\bin\app\build\outputs\apk\debug&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shadow Mario - Programmer&lt;/li&gt; &#xA; &lt;li&gt;RiverOaken - Artist&lt;/li&gt; &#xA; &lt;li&gt;Yoshubs - Assistant Programmer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bbpanzu - Ex-Programmer&lt;/li&gt; &#xA; &lt;li&gt;Yoshubs - New Input System&lt;/li&gt; &#xA; &lt;li&gt;SqirraRNG - Crash Handler and Base code for Chart Editor&#39;s Waveform&lt;/li&gt; &#xA; &lt;li&gt;KadeDev - Fixed some cool stuff on Chart Editor and other PRs&lt;/li&gt; &#xA; &lt;li&gt;iFlicky - Composer of Psync and Tea Time, also made the Dialogue Sounds&lt;/li&gt; &#xA; &lt;li&gt;PolybiusProxy - .MP4 Video Loader Library (hxCodec)&lt;/li&gt; &#xA; &lt;li&gt;Keoiki - Note Splash Animations&lt;/li&gt; &#xA; &lt;li&gt;Smokey - Sprite Atlas Support&lt;/li&gt; &#xA; &lt;li&gt;Nebula the Zorua - LUA JIT Fork and some Lua reworks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Attractive animated dialogue boxes:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/127706669-71cd5cdb-5c2a-4ecc-871b-98a276ae8070.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mod Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Probably one of the main points of this engine, you can code in .lua files outside of the source code, making your own weeks without even messing with the source!&lt;/li&gt; &#xA; &lt;li&gt;Comes with a Mod Organizing/Disabling Menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Atleast one change to every week:&lt;/h2&gt; &#xA;&lt;h3&gt;Week 1:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Dad Left sing sprite&lt;/li&gt; &#xA; &lt;li&gt;Unused stage lights are now used&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 2:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both BF and Skid &amp;amp; Pump does &#34;Hey!&#34; animations&lt;/li&gt; &#xA; &lt;li&gt;Thunders does a quick light flash and zooms the camera in slightly&lt;/li&gt; &#xA; &lt;li&gt;Added a quick transition/cutscene to Monster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 3:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BF does &#34;Hey!&#34; during Philly Nice&lt;/li&gt; &#xA; &lt;li&gt;Blammed has a cool new colors flash during that sick part of the song&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 4:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better hair physics for Mom/Boyfriend (Maybe even slightly better than Week 7&#39;s &lt;span&gt;👀&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Henchmen die during all songs. Yeah :(&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 5:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bottom Boppers and GF does &#34;Hey!&#34; animations during Cocoa and Eggnog&lt;/li&gt; &#xA; &lt;li&gt;On Winter Horrorland, GF bops her head slower in some parts of the song.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 6:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Thorns, the HUD is hidden during the cutscene&lt;/li&gt; &#xA; &lt;li&gt;Also there&#39;s the Background girls being spooky during the &#34;Hey!&#34; parts of the Instrumental&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool new Chart Editor changes and countless bug fixes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ShadowMario/FNF-PsychEngine/raw/main/docs/img/chart.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can now chart &#34;Event&#34; notes, which are bookmarks that trigger specific actions that usually were hardcoded on the vanilla version of the game.&lt;/li&gt; &#xA; &lt;li&gt;Your song&#39;s BPM can now have decimal values&lt;/li&gt; &#xA; &lt;li&gt;You can manually adjust a Note&#39;s strum time if you&#39;re really going for milisecond precision&lt;/li&gt; &#xA; &lt;li&gt;You can change a note&#39;s type on the Editor, it comes with two example types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alt Animation: Forces an alt animation to play, useful for songs like Ugh/Stress&lt;/li&gt; &#xA;   &lt;li&gt;Hey: Forces a &#34;Hey&#34; animation instead of the base Sing animation, if Boyfriend hits this note, Girlfriend will do a &#34;Hey!&#34; too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multiple editors to assist you in making your own Mod&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144629914-1fe55999-2f18-4cc1-bc70-afe616d74ae5.png&#34; alt=&#34;Screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Working both for Source code modding and Downloaded builds!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Story mode menu rework:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/UB2EKpV.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a different BG to every song (less Tutorial)&lt;/li&gt; &#xA; &lt;li&gt;All menu characters are now in individual spritesheets, makes modding it easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits menu&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144632635-f263fb22-b879-4d6b-96d6-865e9562b907.png&#34; alt=&#34;Screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add a head icon, name, description and a Redirect link for when the player presses Enter while the item is currently selected.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Awards/Achievements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The engine comes with 16 example achievements that you can mess with and learn how it works (Check Achievements.hx and search for &#34;checkForAchievement&#34; on PlayState.hx)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options menu:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can change Note colors, Delay and Combo Offset, Controls and Preferences there.&lt;/li&gt; &#xA; &lt;li&gt;On Preferences you can toggle Downscroll, Middlescroll, Anti-Aliasing, Framerate, Low Quality, Note Splashes, Flashing Lights, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other gameplay features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the enemy hits a note, their strum note also glows.&lt;/li&gt; &#xA; &lt;li&gt;Lag doesn&#39;t impact the camera movement and player icon scaling anymore.&lt;/li&gt; &#xA; &lt;li&gt;Some stuff based on Week 7&#39;s changes has been put in (Background colors on Freeplay, Note splashes)&lt;/li&gt; &#xA; &lt;li&gt;You can reset your Score on Freeplay/Story Mode by pressing Reset button.&lt;/li&gt; &#xA; &lt;li&gt;You can listen to a song or adjust Scroll Speed/Damage taken/etc. on Freeplay by pressing Space.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>