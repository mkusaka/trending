<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-03T01:43:16Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Randomxdp/Psych-Engine-0.5.1-Android-Port</title>
    <updated>2022-07-03T01:43:16Z</updated>
    <id>tag:github.com,2022-07-03:/Randomxdp/Psych-Engine-0.5.1-Android-Port</id>
    <link href="https://github.com/Randomxdp/Psych-Engine-0.5.1-Android-Port" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Found It lol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Friday Night Funkin&#39; - Psych Engine&lt;/h1&gt; &#xA;&lt;p&gt;Engine originally used on &lt;a href=&#34;https://gamebanana.com/mods/301107&#34;&gt;Mind Games Mod&lt;/a&gt;, intended to be a fix for the vanilla version&#39;s many issues while keeping the casual play aspect of it. Also aiming to be an easier alternative to newbie coders.&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://haxe.org/download/&#34;&gt;the most up-to-date version of Haxe&lt;/a&gt;, seriously, stop using 4.1.5, it misses some stuff.&lt;/p&gt; &#xA;&lt;p&gt;Follow a Friday Night Funkin&#39; source code compilation tutorial, after this you will need to install LuaJIT.&lt;/p&gt; &#xA;&lt;p&gt;To install LuaJIT do this: &lt;code&gt;haxelib install linc_luajit&lt;/code&gt; on a Command prompt/PowerShell&lt;/p&gt; &#xA;&lt;p&gt;...Or if you don&#39;t want your mod to be able to run .lua scripts, delete the &#34;LUA_ALLOWED&#34; line on Project.xml&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shadow Mario - Coding&lt;/li&gt; &#xA; &lt;li&gt;RiverOaken - Arts and Animations&lt;/li&gt; &#xA; &lt;li&gt;bbpanzu - Assistant Coding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;shubs - New Input System&lt;/li&gt; &#xA; &lt;li&gt;SqirraRNG - Chart Editor&#39;s Sound Waveform base code&lt;/li&gt; &#xA; &lt;li&gt;iFlicky - Delay/Combo Menu Song Composer + Dialogue Sounds&lt;/li&gt; &#xA; &lt;li&gt;PolybiusProxy - .MP4 Loader Extension&lt;/li&gt; &#xA; &lt;li&gt;Keoiki - Note Splash Animations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Attractive animated dialogue boxes:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/127706669-71cd5cdb-5c2a-4ecc-871b-98a276ae8070.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mod Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Probably one of the main points of this engine, you can code in .lua files outside of the source code, making your own weeks without even messing with the source!&lt;/li&gt; &#xA; &lt;li&gt;Comes with a Mod Organizing/Disabling Menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Atleast one change to every week:&lt;/h2&gt; &#xA;&lt;h3&gt;Week 1:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Dad Left sing sprite&lt;/li&gt; &#xA; &lt;li&gt;Unused stage lights are now used&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 2:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both BF and Skid &amp;amp; Pump does &#34;Hey!&#34; animations&lt;/li&gt; &#xA; &lt;li&gt;Thunders does a quick light flash and zooms the camera in slightly&lt;/li&gt; &#xA; &lt;li&gt;Added a quick transition/cutscene to Monster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 3:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BF does &#34;Hey!&#34; during Philly Nice&lt;/li&gt; &#xA; &lt;li&gt;Blammed has a cool new colors flash during that sick part of the song&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 4:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better hair physics for Mom/Boyfriend (Maybe even slightly better than Week 7&#39;s &lt;span&gt;ðŸ‘€&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Henchmen die during all songs. Yeah :(&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 5:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bottom Boppers and GF does &#34;Hey!&#34; animations during Cocoa and Eggnog&lt;/li&gt; &#xA; &lt;li&gt;On Winter Horrorland, GF bops her head slower in some parts of the song.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 6:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Thorns, the HUD is hidden during the cutscene&lt;/li&gt; &#xA; &lt;li&gt;Also there&#39;s the Background girls being spooky during the &#34;Hey!&#34; parts of the Instrumental&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool new Chart Editor changes and countless bug fixes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ShadowMario/FNF-PsychEngine/raw/main/docs/img/chart.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can now chart &#34;Event&#34; notes, which are bookmarks that trigger specific actions that usually were hardcoded on the vanilla version of the game.&lt;/li&gt; &#xA; &lt;li&gt;Your song&#39;s BPM can now have decimal values&lt;/li&gt; &#xA; &lt;li&gt;You can manually adjust a Note&#39;s strum time if you&#39;re really going for milisecond precision&lt;/li&gt; &#xA; &lt;li&gt;You can change a note&#39;s type on the Editor, it comes with two example types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alt Animation: Forces an alt animation to play, useful for songs like Ugh/Stress&lt;/li&gt; &#xA;   &lt;li&gt;Hey: Forces a &#34;Hey&#34; animation instead of the base Sing animation, if Boyfriend hits this note, Girlfriend will do a &#34;Hey!&#34; too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multiple editors to assist you in making your own Mod&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144629914-1fe55999-2f18-4cc1-bc70-afe616d74ae5.png&#34; alt=&#34;Screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Working both for Source code modding and Downloaded builds!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Story mode menu rework:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/UB2EKpV.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a different BG to every song (less Tutorial)&lt;/li&gt; &#xA; &lt;li&gt;All menu characters are now in individual spritesheets, makes modding it easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits menu&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144632635-f263fb22-b879-4d6b-96d6-865e9562b907.png&#34; alt=&#34;Screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add a head icon, name, description and a Redirect link for when the player presses Enter while the item is currently selected.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Awards/Achievements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The engine comes with 16 example achievements that you can mess with and learn how it works (Check Achievements.hx and search for &#34;checkForAchievement&#34; on PlayState.hx)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options menu:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can change Note colors, Delay and Combo Offset, Controls and Preferences there.&lt;/li&gt; &#xA; &lt;li&gt;On Preferences you can toggle Downscroll, Middlescroll, Anti-Aliasing, Framerate, Low Quality, Note Splashes, Flashing Lights, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other gameplay features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the enemy hits a note, their strum note also glows.&lt;/li&gt; &#xA; &lt;li&gt;Lag doesn&#39;t impact the camera movement and player icon scaling anymore.&lt;/li&gt; &#xA; &lt;li&gt;Some stuff based on Week 7&#39;s changes has been put in (Background colors on Freeplay, Note splashes)&lt;/li&gt; &#xA; &lt;li&gt;You can reset your Score on Freeplay/Story Mode by pressing Reset button.&lt;/li&gt; &#xA; &lt;li&gt;You can listen to a song or adjust Scroll Speed/Damage taken/etc. on Freeplay by pressing Space.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ActualMandM/Doki-Doki-Takeover-BAD-ENDING</title>
    <updated>2022-07-03T01:43:16Z</updated>
    <id>tag:github.com,2022-07-03:/ActualMandM/Doki-Doki-Takeover-BAD-ENDING</id>
    <link href="https://github.com/ActualMandM/Doki-Doki-Takeover-BAD-ENDING" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Play with me, it&#39;s all I have.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ActualMandM/Doki-Doki-Takeover-BAD-ENDING/main/art/api.png&#34; alt=&#34;Doki Doki Takeover! - BAD ENDING logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Built on &lt;strong&gt;&lt;a href=&#34;https://github.com/ShadowMario/FNF-PsychEngine&#34;&gt;Psych Engine&lt;/a&gt;&lt;/strong&gt; - &lt;strong&gt;&lt;a href=&#34;https://gamebanana.com/mods/386603&#34;&gt;GameBanana&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;Original Game Links&lt;/h1&gt; &#xA;&lt;p&gt;FNF Links: &lt;strong&gt;&lt;a href=&#34;https://ninja-muffin24.itch.io/funkin&#34;&gt;itch.io page&lt;/a&gt; â‹… &lt;a href=&#34;https://www.newgrounds.com/portal/view/770371&#34;&gt;Newgrounds&lt;/a&gt; â‹… &lt;a href=&#34;https://github.com/ninjamuffin99/Funkin&#34;&gt;source code on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;DDLC Links: &lt;strong&gt;&lt;a href=&#34;http://ddlc.moe&#34;&gt;DDLC Official Website&lt;/a&gt; â‹… &lt;a href=&#34;https://teamsalvato.itch.io/ddlc&#34;&gt;itch.io page&lt;/a&gt; â‹… &lt;a href=&#34;https://store.steampowered.com/app/698780/Doki_Doki_Literature_Club&#34;&gt;Steam page&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;DDLC+ Links: &lt;strong&gt;&lt;a href=&#34;http://ddlc.plus&#34;&gt;DDLC+ Official Website&lt;/a&gt; â‹… &lt;a href=&#34;https://store.steampowered.com/app/1388880/Doki_Doki_Literature_Club_Plus&#34;&gt;Steam page&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;Credits are listed in the game!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openfl/openfl</title>
    <updated>2022-07-03T01:43:16Z</updated>
    <id>tag:github.com,2022-07-03:/openfl/openfl</id>
    <link href="https://github.com/openfl/openfl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Open Flash Library for creative expression on the web, desktop, mobile and consoles.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openfl/openfl/develop/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lib.haxe.org/p/openfl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/openfl/openfl.svg?style=flat&amp;amp;label=haxelib&amp;amp;color=df7900&#34; alt=&#34;Haxelib Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openfl/openfl/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/openfl/openfl/CI/develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.openfl.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/posts?color=24afc4&amp;amp;server=https%3A%2F%2Fcommunity.openfl.org&amp;amp;label=community&#34; alt=&#34;Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discordapp.com/invite/tDgq8EE&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/415681294446493696.svg?color=7289da&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openfl/openfl/develop/assets/openfl.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;The OpenFL project is an open-source answer to the needs of game and application developers everywhere, looking for a fast, simple approach to delivering creative masterpieces without relying on a specific implementation, such as a browser plugin.&lt;/p&gt; &#xA;&lt;p&gt;Using the innovative &lt;a href=&#34;http://haxe.org/&#34;&gt;Haxe&lt;/a&gt; programming language, OpenFL supports wildly different platforms using one codebase. Transitioning from one target type to another is simple, and keeps the strengths of the target environment. OpenFL builds to native C++, Neko or Flash bytecode, or JavaScript, enabling maximum compatibility and runtime performance.&lt;/p&gt; &#xA;&lt;p&gt;OpenFL depends on &lt;a href=&#34;https://github.com/openfl/lime&#34;&gt;Lime&lt;/a&gt;, which has easy-to-use command-line tools, and provides backend support.&lt;/p&gt; &#xA;&lt;h1&gt;Platforms&lt;/h1&gt; &#xA;&lt;p&gt;Currently, OpenFL supports the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;HTML5&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;WebAssembly&lt;/li&gt; &#xA; &lt;li&gt;Flash&lt;/li&gt; &#xA; &lt;li&gt;AIR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There is also a community effort to bring OpenFL to consoles, OpenFL is running on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PlayStation 4&lt;/li&gt; &#xA; &lt;li&gt;PlayStation 3&lt;/li&gt; &#xA; &lt;li&gt;PlayStation Vita&lt;/li&gt; &#xA; &lt;li&gt;Xbox One&lt;/li&gt; &#xA; &lt;li&gt;Wii U&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Additional details on console support will be available in the future.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenFL is also being used in additional environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.tivo.com&#34;&gt;TiVo&lt;/a&gt; boxes&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi&lt;/li&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Libraries&lt;/h1&gt; &#xA;&lt;p&gt;OpenFL is compatible with &lt;a href=&#34;http://lib.haxe.org/all&#34;&gt;many libraries&lt;/a&gt;, ported from ActionScript or written originally in Haxe, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfl/starling&#34;&gt;Starling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfl/away3d&#34;&gt;Away3D&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfl/dragonbones&#34;&gt;DragonBones&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deltaluca/nape&#34;&gt;Nape&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jgranick/Box2D&#34;&gt;Box2D&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jgranick/Actuate&#34;&gt;Actuate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/haxeflixel/flixel&#34;&gt;HaxeFlixel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HaxePunk/HaxePunk&#34;&gt;HaxePunk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OpenFL also powers other platforms, such as &lt;a href=&#34;http://www.stencyl.com/&#34;&gt;Stencyl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Code Editors&lt;/h1&gt; &#xA;&lt;p&gt;Plugins have been written for many &lt;a href=&#34;http://haxe.org/documentation/introduction/editors-and-ides.html&#34;&gt;code editors&lt;/a&gt;, but the most popular editors used for Haxe and OpenFL development are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; (with &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=openfl.lime-vscode-extension&#34;&gt;plugin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://haxedevelop.org/&#34;&gt;HaxeDevelop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sublimetext.com&#34;&gt;Sublime Text&lt;/a&gt; (with &lt;a href=&#34;https://github.com/clemos/haxe-sublime-bundle&#34;&gt;plugin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; (with &lt;a href=&#34;http://plugins.jetbrains.com/plugin/6873?pr=&#34;&gt;plugin&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Easy Deployment&lt;/h1&gt; &#xA;&lt;p&gt;OpenFL includes the tools you need to build, package, install and run on each target platform.&lt;/p&gt; &#xA;&lt;p&gt;For example, &lt;code&gt;openfl test html5&lt;/code&gt; will generate an HTML5 project, create a local web server and open your default browser.&lt;/p&gt; &#xA;&lt;p&gt;Some platforms will require a standard SDK to build (such as Visual Studio C++ or Xcode). OpenFL includes &#34;setup&#34; commands to even help the install of these standard tools.&lt;/p&gt; &#xA;&lt;h1&gt;3D Support&lt;/h1&gt; &#xA;&lt;p&gt;OpenFL is designed primarily for 2D development, but you can use the &lt;code&gt;OpenGLRenderer&lt;/code&gt; API to write your own WebGL-style code, and mix it with the OpenFL display architecture.&lt;/p&gt; &#xA;&lt;p&gt;OpenFL also has support for the Stage3D API. If you like you can use this directly, or you can also use libraries such as &lt;a href=&#34;https://github.com/away3d/away3d-core-openfl/&#34;&gt;Away3D&lt;/a&gt; or &lt;a href=&#34;https://github.com/openfl/starling&#34;&gt;Starling&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Native Extensions&lt;/h1&gt; &#xA;&lt;p&gt;When you target a native platform, the output is true native C++, enabling deep integration with platform features and third-party SDKs. There is a standard Haxe &#34;CFFI&#34; API for connecting Haxe classes directly to C++ libraries.&lt;/p&gt; &#xA;&lt;p&gt;We have also developed a straight-forward Android library project API for adding Java-based extensions, too. Native extensions can also use the standard Lime project format, for flexible control over dependencies, adding additional assets or tuning the output of your project.&lt;/p&gt; &#xA;&lt;p&gt;The result are native extensions that can be made to interchangeably drop into projects, without breaking one another. We have made no attempt to emulate the system for AIR native extensions, which are much more difficult to create and less flexible.&lt;/p&gt; &#xA;&lt;h1&gt;Core Components&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfl/openfl&#34;&gt;openfl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfl/lime&#34;&gt;lime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HaxeFoundation/hxcpp&#34;&gt;hxcpp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OpenFL relies upon &lt;a href=&#34;https://github.com/openfl/lime&#34;&gt;Lime&lt;/a&gt;, a foundation for cross-platform project development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HaxeFoundation/hxcpp&#34;&gt;hxcpp&lt;/a&gt; is used automatically by the Lime tools to manage the C++ compilation process for each platform, and to provide the Haxe standard library for C++ support.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;OpenFL is free, open-source software under the &lt;a href=&#34;https://raw.githubusercontent.com/openfl/openfl/develop/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installing OpenFL&lt;/h1&gt; &#xA;&lt;p&gt;Follow the directions at &lt;a href=&#34;http://www.openfl.org/download&#34;&gt;openfl.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Development Builds&lt;/h1&gt; &#xA;&lt;p&gt;Clone the OpenFL repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/openfl/openfl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tell haxelib where your development copy of OpenFL is installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib dev openfl openfl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rebuild the SWF library tools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;openfl rebuild tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To return to release builds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;haxelib dev openfl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need a development build of Lime installed.&lt;/p&gt;</summary>
  </entry>
</feed>