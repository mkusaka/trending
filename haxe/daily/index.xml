<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-20T01:41:27Z</updated>
  <subtitle>Daily Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Steviegt6/dashlink</title>
    <updated>2022-06-20T01:41:27Z</updated>
    <id>tag:github.com,2022-06-20:/Steviegt6/dashlink</id>
    <link href="https://github.com/Steviegt6/dashlink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dashlink - a HashLink bytecode disassembler, inspector, and writer.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;A majority&lt;/strong&gt; of the deserialization/disassembly code is adapted from &lt;a href=&#34;https://github.com/Gui-Yom&#34;&gt;&lt;strong&gt;@Gui-Yom&#39;s&lt;/strong&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Gui-Yom/hlbc.git&#34;&gt;wonderful Rust dissassembler&lt;/a&gt; under the MIT license.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;&lt;strong&gt;&lt;em&gt;dashlink&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;h6&gt;A HashLink bytecode disassembler, inspector, and writer.&lt;/h6&gt; &#xA;&lt;p&gt;Dashlink, stylized as &lt;strong&gt;dashlink&lt;/strong&gt;, is a disassembler for &lt;a href=&#34;https://github.com/HaxeFoundation/hashlink&#34;&gt;HashLink&lt;/a&gt; bytecode developed with the goal of allowing users to dump HL bytecode, rewrite compiled code, and create compiled bytecode from scratch -- all through the power of a Haxe library.&lt;/p&gt; &#xA;&lt;h2&gt;Practical Uses&lt;/h2&gt; &#xA;&lt;p&gt;This may be used for reverse-engineering Haxe programs compiled to HashLink bytecode (for whatever reason that&#39;s needed), programmatically creating HashLink programs for various utility purposes, or for dynamically rewriting/otherwise modifying programs. One such example of the latter is using a bootstrapper to weave together external assemblies at runtime.&lt;/p&gt; &#xA;&lt;h2&gt;Extra Resources&lt;/h2&gt; &#xA;&lt;p&gt;There are numerous additional resources you may indulge in for further studying or tooling, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Gui-Yom/hlbc&#34;&gt;Gui-Yom/hlbc&lt;/a&gt;, a HashLink disassembler written in Rust. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Much of the deserialization/disassembly code featured in this repository is adapted from here.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://github.com/Gui-Yom/hlbc/wiki&#34;&gt;reverse-engineered HashLink documentation&lt;/a&gt; featured on the repository&#39;s wiki is an extremely valuable resource as well.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HaxeFoundation/hashlink&#34;&gt;HaxeFoundation/hashlink&lt;/a&gt;, the HashLink virtual machine&#39;s source code, containing lots of important information. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;a href=&#34;https://github.com/HaxeFoundation/hashlink/wiki&#34;&gt;GitHub wiki&lt;/a&gt; containing various pieces of information.&lt;/li&gt; &#xA;   &lt;li&gt;The actual HashLink virtual machine provides useful tools for reverse-engineering as well. Mostly notably, &lt;a href=&#34;https://github.com/HaxeFoundation/hashlink/wiki/Profiler&#34;&gt;dumping&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://haxe.org/blog/hashlink-indepth/&#34;&gt;The HashLink blog&lt;/a&gt;, featured on the &lt;a href=&#34;https://haxe.org/&#34;&gt;haxe.org&lt;/a&gt; website. While slightly dated, it goes into detail about various aspects of development and the virtual machine.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>