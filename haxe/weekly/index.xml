<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:56:25Z</updated>
  <subtitle>Weekly Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WhatsDownYT/VDAB-DefinitiveEdition</title>
    <updated>2023-01-29T01:56:25Z</updated>
    <id>tag:github.com,2023-01-29:/WhatsDownYT/VDAB-DefinitiveEdition</id>
    <link href="https://github.com/WhatsDownYT/VDAB-DefinitiveEdition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Vs. Dave and Bambi: Definitive Edition + Bambi&#39;s Purgatory Pre-Alpha Source Code!&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Basically a fan tweak of VS Dave And Bambi, with new content and more!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.discordapp.net/attachments/855503995119075328/907232690640654366/notkadeenginelogo.png?width=921&amp;amp;height=701&#34; alt=&#34;notkadeenginelogo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;And also a new Fanmod called Bambi&#39;s Purgatory with cool new songs, characters and a new story! (i shat my pants)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/936394281428598867/images_2.jpg&#34; alt=&#34;bambisburger&#34;&gt; PLACEHOLDER IMAGE TILL THE NEW LOGO LOL&lt;/p&gt; &#xA;&lt;h2&gt;Vs Dave And Bambi&lt;/h2&gt; &#xA;&lt;p&gt;Vs Dave and Bambi, Github and GameBanana download links, support the og mod lol!!!: &lt;a href=&#34;https://github.com/moldycheese99/VsDave&#34;&gt;https://github.com/moldycheese99/VsDave&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gamebanana.com/mods/43201&#34;&gt;https://gamebanana.com/mods/43201&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/903663420547665970/logoBumpin.png&#34; alt=&#34;daveicon&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dave&lt;/h2&gt; &#xA;&lt;p&gt;this is dave &lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/907235537788756018/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3839323134303136363330393839323133362f3930353236373134313239393830323135322f646f7276655f7265616c652e706e67.png&#34; alt=&#34;Dave&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;say hi to dave&lt;/p&gt; &#xA;&lt;p&gt;please say hi to him&lt;/p&gt; &#xA;&lt;h2&gt;Bambi&lt;/h2&gt; &#xA;&lt;p&gt;this is bambi &lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/907236335612473374/Bambiupa.gif&#34; alt=&#34;Bambi&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;say hi to him&lt;/p&gt; &#xA;&lt;p&gt;please say hi&lt;/p&gt; &#xA;&lt;p&gt;please&lt;/p&gt; &#xA;&lt;p&gt;please please... :((&lt;/p&gt; &#xA;&lt;p&gt;you didnt say hi to him&lt;/p&gt; &#xA;&lt;p&gt;look what you did&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/903659144706408468/8521332-nhufncfc-v4.png&#34; alt=&#34;BambiLookWhatDoDone&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tristan&lt;/h2&gt; &#xA;&lt;p&gt;this is tristan&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/890546329078620170/903659381990752306/ZhG5hOR_1.png&#34; alt=&#34;tristan&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;say hi&lt;/p&gt; &#xA;&lt;p&gt;hi tridan&lt;/p&gt; &#xA;&lt;p&gt;welcome to psych engine zone&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Friday Night Funkin&#39; - Psych Engine&lt;/h1&gt; &#xA;&lt;p&gt;Engine originally used on &lt;a href=&#34;https://gamebanana.com/mods/301107&#34;&gt;Mind Games Mod&lt;/a&gt;, intended to be a fix for the vanilla version&#39;s many issues while keeping the casual play aspect of it. Also aiming to be an easier alternative to newbie coders.&lt;/p&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;p&gt;You must have &lt;a href=&#34;https://haxe.org/download/&#34;&gt;the most up-to-date version of Haxe&lt;/a&gt;, seriously, stop using 4.1.5, it misses some stuff.&lt;/p&gt; &#xA;&lt;p&gt;Follow a Friday Night Funkin&#39; source code compilation tutorial, after this you will need to install LuaJIT.&lt;/p&gt; &#xA;&lt;p&gt;To install LuaJIT do this: &lt;code&gt;haxelib git linc_luajit https://github.com/AndreiRudenko/linc_luajit &lt;/code&gt; on a Command prompt/PowerShell&lt;/p&gt; &#xA;&lt;p&gt;...Or if you don&#39;t want your mod to be able to run .lua scripts, delete the &#34;LUA_ALLOWED&#34; line on Project.xml&lt;/p&gt; &#xA;&lt;h2&gt;Credits:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shadow Mario - Coding&lt;/li&gt; &#xA; &lt;li&gt;RiverOaken - Arts and Animations&lt;/li&gt; &#xA; &lt;li&gt;bbpanzu - Assistant Coding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;shubs - New Input System&lt;/li&gt; &#xA; &lt;li&gt;SqirraRNG - Chart Editor&#39;s Sound Waveform base code&lt;/li&gt; &#xA; &lt;li&gt;iFlicky - Delay/Combo Menu Song Composer + Dialogue Sounds&lt;/li&gt; &#xA; &lt;li&gt;PolybiusProxy - .MP4 Loader Extension&lt;/li&gt; &#xA; &lt;li&gt;Keoiki - Note Splash Animations&lt;/li&gt; &#xA; &lt;li&gt;Smokey - Spritemap Texture Atlas support&lt;/li&gt; &#xA; &lt;li&gt;Cary - OG Resolution code&lt;/li&gt; &#xA; &lt;li&gt;Nebula_Zorua - VCR Shader code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Attractive animated dialogue boxes:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/127706669-71cd5cdb-5c2a-4ecc-871b-98a276ae8070.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mod Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Probably one of the main points of this engine, you can code in .lua files outside of the source code, making your own weeks without even messing with the source!&lt;/li&gt; &#xA; &lt;li&gt;Comes with a Mod Organizing/Disabling Menu.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Atleast one change to every week:&lt;/h2&gt; &#xA;&lt;h3&gt;Week 1:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New Dad Left sing sprite&lt;/li&gt; &#xA; &lt;li&gt;Unused stage lights are now used&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 2:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both BF and Skid &amp;amp; Pump does &#34;Hey!&#34; animations&lt;/li&gt; &#xA; &lt;li&gt;Thunders does a quick light flash and zooms the camera in slightly&lt;/li&gt; &#xA; &lt;li&gt;Added a quick transition/cutscene to Monster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 3:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BF does &#34;Hey!&#34; during Philly Nice&lt;/li&gt; &#xA; &lt;li&gt;Blammed has a cool new colors flash during that sick part of the song&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 4:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better hair physics for Mom/Boyfriend (Maybe even slightly better than Week 7&#39;s &lt;span&gt;ðŸ‘€&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Henchmen die during all songs. Yeah :(&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 5:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bottom Boppers and GF does &#34;Hey!&#34; animations during Cocoa and Eggnog&lt;/li&gt; &#xA; &lt;li&gt;On Winter Horrorland, GF bops her head slower in some parts of the song.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Week 6:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Thorns, the HUD is hidden during the cutscene&lt;/li&gt; &#xA; &lt;li&gt;Also there&#39;s the Background girls being spooky during the &#34;Hey!&#34; parts of the Instrumental&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cool new Chart Editor changes and countless bug fixes&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/ShadowMario/FNF-PsychEngine/raw/main/docs/img/chart.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can now chart &#34;Event&#34; notes, which are bookmarks that trigger specific actions that usually were hardcoded on the vanilla version of the game.&lt;/li&gt; &#xA; &lt;li&gt;Your song&#39;s BPM can now have decimal values&lt;/li&gt; &#xA; &lt;li&gt;You can manually adjust a Note&#39;s strum time if you&#39;re really going for milisecond precision&lt;/li&gt; &#xA; &lt;li&gt;You can change a note&#39;s type on the Editor, it comes with two example types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alt Animation: Forces an alt animation to play, useful for songs like Ugh/Stress&lt;/li&gt; &#xA;   &lt;li&gt;Hey: Forces a &#34;Hey&#34; animation instead of the base Sing animation, if Boyfriend hits this note, Girlfriend will do a &#34;Hey!&#34; too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multiple editors to assist you in making your own Mod&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144629914-1fe55999-2f18-4cc1-bc70-afe616d74ae5.png&#34; alt=&#34;Screenshot_3&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Working both for Source code modding and Downloaded builds!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Story mode menu rework:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/UB2EKpV.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a different BG to every song (less Tutorial)&lt;/li&gt; &#xA; &lt;li&gt;All menu characters are now in individual spritesheets, makes modding it easier.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits menu&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/44785097/144632635-f263fb22-b879-4d6b-96d6-865e9562b907.png&#34; alt=&#34;Screenshot_1&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add a head icon, name, description and a Redirect link for when the player presses Enter while the item is currently selected.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Awards/Achievements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The engine comes with 16 example achievements that you can mess with and learn how it works (Check Achievements.hx and search for &#34;checkForAchievement&#34; on PlayState.hx)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options menu:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can change Note colors, Delay and Combo Offset, Controls and Preferences there.&lt;/li&gt; &#xA; &lt;li&gt;On Preferences you can toggle Downscroll, Middlescroll, Anti-Aliasing, Framerate, Low Quality, Note Splashes, Flashing Lights, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other gameplay features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the enemy hits a note, their strum note also glows.&lt;/li&gt; &#xA; &lt;li&gt;Lag doesn&#39;t impact the camera movement and player icon scaling anymore.&lt;/li&gt; &#xA; &lt;li&gt;Some stuff based on Week 7&#39;s changes has been put in (Background colors on Freeplay, Note splashes)&lt;/li&gt; &#xA; &lt;li&gt;You can reset your Score on Freeplay/Story Mode by pressing Reset button.&lt;/li&gt; &#xA; &lt;li&gt;You can listen to a song or adjust Scroll Speed/Damage taken/etc. on Freeplay by pressing Space.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>HxGodot/hxgodot</title>
    <updated>2023-01-29T01:56:25Z</updated>
    <id>tag:github.com,2023-01-29:/HxGodot/hxgodot</id>
    <link href="https://github.com/HxGodot/hxgodot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Haxe GDExtension for Godot 4&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://hxgodot.github.io/logo2.png&#34; alt=&#34;logo.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;HxGodot - A Haxe GDExtension for Godot 4&lt;/h1&gt; &#xA;&lt;p&gt;HxGodot combines Haxe&#39;s hxcpp target with Godot 4&#39;s GDExtension mechanism to supercharge the way you build games with Godot. Nodes are written in Haxe, bundled as a GDExtension and behave like any other Node in your scenes(attach scripts, signals, etc).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; There might be crashes, pieces of the API not working or straight up missing. That being said, we appreciate you testing HxGodot in smaller projects. Feel free to get in touch in should you face issues or bugs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites &amp;amp; Toolchain:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A Commandline shell of your choice. We assume a *nix-based shell for all commands presented here.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://scons.org/&#34;&gt;SCons&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://haxe.org/download/&#34;&gt;Haxe 4.2+&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install Haxe and setup Haxe&#39;s package manager via &lt;code&gt;haxelib setup&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;hxcpp 4.2+&lt;/p&gt; &lt;p&gt;Install hxcpp by running &lt;code&gt;haxelib install hxcpp&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Godot 4 beta10+ (best build from master)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;First time setup&lt;/h3&gt; &#xA;&lt;p&gt;When you are first starting out HxGodot is able to generate a simple example project for you. Let&#39;s go into a shell and do that:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install hxgodot via &lt;code&gt;haxelib&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;&lt;code&gt;haxelib git hxgodot https://github.com/HxGodot/hxgodot.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create yourself a folder somewhere for the sample project we are about to generate and enter it:&lt;/p&gt; &lt;p&gt;&lt;code&gt;mkdir &amp;lt;sample_project&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;sample_project&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now run the included cli-tool and and follow the instructions:&lt;/p&gt; &lt;p&gt;&lt;code&gt;haxelib run hxgodot init&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5015415/212423704-a1a145c6-56e3-43fe-afce-36860a453e1f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s take a closer look at the folder&#39;s content, that we just generated for you:&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5015415/212425501-696bff72-4f84-4792-bc49-901849bef3c8.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt;: Will contain the compiled gdextension binaries&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;bindings&lt;/code&gt;: Will contain the generated Haxe bindings for Godot4&#39;s classes. Also holds a &lt;code&gt;log.txt&lt;/code&gt; which contains reports about things that were ignored or could not be handled. Usefull if you miss a function in Godot&#39;s API, here you will usually find the reason why.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;build.hxml&lt;/code&gt;: this contains the build-instructions for Haxe when building the extension. Here you can add extra compiler defines for debugging or specify which Haxe code modules you want to include in your extension or which third party Haxe libraries to include. See the included comments.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;example.gdextension&lt;/code&gt;: This is the extension-file Godot4 will use to load the correct binaries for your CPU architecture.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;project.godot&lt;/code&gt;: Main Godot Project File. This file is the entry-point for Godot and includes a section to include loading our &lt;code&gt;example.gdextension&lt;/code&gt; file&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SConstruct&lt;/code&gt;: This is the SCONS build file. This what runs the build pipeline and assembles the binary of your choice.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;src&lt;/code&gt;: This folder contains the sample&#39;s Haxe code. It holds basic examples of a few Godot nodes written in Haxe and runs a few tests &amp;amp; interactions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the extension: &lt;code&gt;scons platform=&amp;lt;windows|linux|macos&amp;gt; target=&amp;lt;debug|release&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the sample-project in Godot4 &lt;img src=&#34;https://user-images.githubusercontent.com/5015415/212428088-965ae83c-e1dc-4a98-b82d-4c42e4866f87.png&#34; alt=&#34;image&#34;&gt; Here you will find the scenetree with the custom Haxe nodes that are contained in the extension.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can now study the included Haxe code and play around with it. Just repeat Step 4 and restart Godot. Feel free to modify this project or use it as a base for a more complex project.&lt;/p&gt; &lt;p&gt;Speaking of a more complex project, you can also checkout our full sample game here: &lt;a href=&#34;https://github.com/HxGodot/squash-the-creeps-3d-hxgodot&#34;&gt;https://github.com/HxGodot/squash-the-creeps-3d-hxgodot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Updating the HxGodot in an existing project&lt;/h2&gt; &#xA;&lt;p&gt;In cases where hxgodot was updated you dont need to recreate your existing project. In such cases you can follow the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Update hxgodot via git&lt;/p&gt; &lt;p&gt;&lt;code&gt;haxelib git hxgodot https://github.com/HxGodot/hxgodot.git&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate a new set of bindings (usually updates come with improvements)&lt;/p&gt; &lt;p&gt;&lt;code&gt;haxelib run hxgodot generate_bindings&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rebuild your project&#39;s extension&lt;/p&gt; &lt;p&gt;&lt;code&gt;scons platform=&amp;lt;windows|linux|macos&amp;gt; target=&amp;lt;debug|release&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: Startup your VisualStudio and setup it up to launch your compile Godot 4.x executable with the test-project defined on the cmdline. &lt;code&gt;&amp;lt;path to godot binary&amp;gt; -e --path &amp;lt;included test project folder&amp;gt;&lt;/code&gt; You should be able to step through the code on both sides(godot &amp;amp; hxgodot) and see what&#39;s going on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Good to know&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Godot exposes around 850 classes in the extension API. Haxe&#39;s compiler will automatically only compile classes that your code actually imports / uses into the extension.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>