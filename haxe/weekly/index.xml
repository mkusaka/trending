<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T01:53:10Z</updated>
  <subtitle>Weekly Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>regniraj/pixi.js-haxe-extern</title>
    <updated>2023-10-22T01:53:10Z</updated>
    <id>tag:github.com,2023-10-22:/regniraj/pixi.js-haxe-extern</id>
    <link href="https://github.com/regniraj/pixi.js-haxe-extern" rel="alternate"></link>
    <summary type="html">&lt;p&gt;small haxe extern for pixi.js&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pixi.js-haxe-extern&lt;/h1&gt; &#xA;&lt;p&gt;small extern to be used with haxe js &lt;a href=&#34;https://github.com/GoodBoyDigital/pixi.js&#34;&gt;pixi.js&lt;/a&gt; demo using pixi.js-haxe-extern &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-haxe&#34;&gt;&#xA;package test;&#xA;&#xA;import js.Dom;&#xA;import js.Lib;&#xA;import pixi.AssetLoader;&#xA;import pixi.CommonRenderer;&#xA;import pixi.DisplayObjectContainer;&#xA;import pixi.Global;&#xA;import pixi.PIXI;&#xA;import pixi.Sprite;&#xA;import pixi.Stage;&#xA;import pixi.WebGLRenderer;&#xA;&#xA;class Main &#xA;{&#xA;&#xA;&#x9;&#xA;static&#x9;var aliens:Array&amp;lt;Dynamic&amp;gt; = [];&#xA;static &#x9;var count:Float = 0;&#xA;static var  alienFrames:Array&amp;lt;String&amp;gt; = [&#34;eggHead.png&#34;, &#34;flowerTop.png&#34;, &#34;helmlok.png&#34;, &#34;skully.png&#34;];&#xA;static var alienContainer:DisplayObjectContainer = new DisplayObjectContainer();&#xA;static var renderer:CommonRenderer ;&#xA;static var stage:Stage = new Stage(0xFFFFFF);&#xA;&#x9;&#xA;&#x9;static&#x9;function animate() {&#xA;&#x9;&#xA;&#x9;    Global.request(animate);&#x9;&#xA;&#x9;    // just for fun, lets rotate mr rabbit a little&#xA;&#x9;    for ( i in 0...100) &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;var alien = aliens[i];&#xA;&#x9;&#x9;&#x9;alien.rotation += 0.1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;count += 0.01;&#xA;&#x9;&#x9;alienContainer.scale.x = Math.sin(count);&#xA;&#x9;&#x9;alienContainer.scale.y = Math.sin(count);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;alienContainer.rotation += 0.01;&#xA;&#x9;    // render the stage   &#xA;&#x9;    renderer.render(stage);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;static&#x9;function onAssetsLoaded()&#xA;&#x9;{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;// create a texture from an image path&#xA;&#x9;&#x9;// add a bunch of aliens&#xA;&#x9;&#x9;for (i in 0...100) &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;var frameName = alienFrames[i % 4];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// create an alien using the frame name..&#xA;&#x9;&#x9;&#x9;var alien = Sprite.fromFrame(frameName);&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;/*&#xA;&#x9;&#x9;&#x9; * fun fact for the day :)&#xA;&#x9;&#x9;&#x9; * another way of doing the above would be&#xA;&#x9;&#x9;&#x9; * var texture = PIXI.Texture.fromFrame(frameName);&#xA;&#x9;&#x9;&#x9; * var alien = new PIXI.Sprite(texture);&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;alien.position.x = Math.random() * 800 - 400;&#xA;&#x9;&#x9;&#x9;alien.position.y = Math.random() * 600 - 300;&#xA;&#x9;&#x9;&#x9;alien.anchor.x = 0.5;&#xA;&#x9;&#x9;&#x9;alien.anchor.y = 0.5;&#xA;&#x9;&#x9;&#x9;aliens.push(alien);&#xA;&#x9;&#x9;&#x9;alienContainer.addChild(alien);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;// start animating&#xA;&#x9;&#x9;Global.request( animate );&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;}&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;static function main() &#xA;&#x9;{&#xA;&#x9;&#x9;// create an array of assets to load&#xA;&#x9;var assetsToLoader:Array&amp;lt;String&amp;gt; = [ &#34;SpriteSheet.json&#34;];&#xA;&#x9;&#xA;&#x9;// create a new loader&#xA;&#x9;var loader:AssetLoader = new AssetLoader(assetsToLoader);&#xA;&#x9;&#xA;&#x9;// use callback&#xA;&#x9;loader.onComplete = onAssetsLoaded;&#xA;&#x9;&#xA;&#x9;//begin load&#xA;&#x9;loader.load();&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;// holder to store aliens&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;// create an new instance of a pixi stage&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;// create a renderer instance.&#xA;renderer= PIXI.autoDetectRenderer(800, 600);&#xA;&#x9;&#x9;&#xA;&#x9;// add the renderer view element to the DOM&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;Lib.document.body.appendChild(renderer.view);&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;// create an empty container&#xA;&#x9;&#xA;&#x9;alienContainer.position.x = 400;&#xA;&#x9;alienContainer.position.y = 300;&#xA;&#x9;&#xA;&#x9;stage.addChild(alienContainer);&#xA;&#x9;&#xA;&#xA;&#x9;&#xA;&#xA;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;outputs &lt;a href=&#34;https://dl.dropbox.com/u/5114622/pixi-haxe-demo/index.html&#34;&gt;Demo link&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>