<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Haxe Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-19T01:51:54Z</updated>
  <subtitle>Weekly Trending of Haxe in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nulab/knockout-example-haxe</title>
    <updated>2023-11-19T01:51:54Z</updated>
    <id>tag:github.com,2023-11-19:/nulab/knockout-example-haxe</id>
    <link href="https://github.com/nulab/knockout-example-haxe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;knockout-example-haxe&lt;/p&gt;&lt;hr&gt;&lt;p&gt;demo &lt;a href=&#34;http://nulab.github.io/knockout-example-haxe/web/todo.html&#34;&gt;http://nulab.github.io/knockout-example-haxe/web/todo.html&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bitDecayGames/GithubGameOff2023</title>
    <updated>2023-11-19T01:51:54Z</updated>
    <id>tag:github.com,2023-11-19:/bitDecayGames/GithubGameOff2023</id>
    <link href="https://github.com/bitDecayGames/GithubGameOff2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Template Project for HaxeFlixel games&lt;/h1&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;To develop on the game, run &lt;code&gt;lime test html5&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Template features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pre-configured libraries &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FMOD Studio project with menu sound effects and a random song I wrote&lt;/li&gt; &#xA;   &lt;li&gt;Ready to use Bitlytics tie-ins &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Grafana metrics visualization&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Newgrounds API boiler plate&lt;/li&gt; &#xA;   &lt;li&gt;Various utility libraries&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Basic state templates &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Main menu with buttons to load the credits or start the game &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Controller, keyboard, or mouse support for menu navigation&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Credits state with built-in scrolling&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pre-configured .gitignore&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bitDecayGames/GithubGameOff2023/master/#aseprite&#34;&gt;Aseprite art pipeline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Github build actions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dev builds on push to master&lt;/li&gt; &#xA;   &lt;li&gt;Production builds on releases&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Template Configuration (on repo creation)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Set the proper Github secrets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;BUTLER_API_KEY&lt;/code&gt;: The Butler API key from itch.io&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ANALYTICS_TOKEN&lt;/code&gt;: The InfluxDB access token to the bucket&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;./bin/setup_repo.sh&lt;/code&gt; script to update github workflow files and project configuration json&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;User Configuration (new contributor setup)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;./bin/setup_hooks.sh&lt;/code&gt; - Run to copy git hooks over&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./bin/init_deps.sh&lt;/code&gt; - Run to get dependencies at the proper versions. See &lt;a href=&#34;https://raw.githubusercontent.com/bitDecayGames/GithubGameOff2023/master/#haxelibdeps&#34;&gt;haxelib.deps&lt;/a&gt; for more info.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Metrics &amp;amp; Analytics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some basic analytics are already configured to be reported after the proper project configuration has been done.&lt;/li&gt; &#xA; &lt;li&gt;To view game metrics, run &lt;code&gt;./bin/view_metrics.sh&lt;/code&gt; and a grafana instance will be created locally that connects to the cloud metrics. Graphs will be available at &lt;code&gt;http://localhost:3000&lt;/code&gt; if the browser doesn&#39;t automatically open. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This script will prompt for a read token the first time it is run for access to the data. Consult whoever controls your cloud data for a token.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Holding &lt;code&gt;D&lt;/code&gt; and pressing &lt;code&gt;M&lt;/code&gt; at the main menu will allow playing the release game without sending metrics. This is indicated by a sound effect and a log message once pressed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;haxelib.deps&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;haxelib.deps&lt;/code&gt; - Contains all dependencies needed by the project other than haxe itself &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It supports two dep styles &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;standard haxelib dependencies &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Formatted as: &lt;code&gt;&amp;lt;libName&amp;gt; &amp;lt;libVersion&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;git dependencies &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Formatted as: &lt;code&gt;&amp;lt;libName&amp;gt; git &amp;lt;gitRepoLocation&amp;gt; &amp;lt;OPTIONAL: gitBranchOrTag&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./bin/init_deps.sh&lt;/code&gt; - Script that reads &lt;code&gt;haxelib.deps&lt;/code&gt; file and configures &lt;code&gt;haxelib&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This script will need to be run any time the dependencies change&lt;/li&gt; &#xA;   &lt;li&gt;This script is run by the github actions as part of the build so local and github builds are equivalent&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Aseprite&lt;/h3&gt; &#xA;&lt;p&gt;All Aseprite files within the &lt;code&gt;art/&lt;/code&gt; directory are automatically exported as Atlases as part of a pre-commit hook. The details of this process can be found in the &lt;code&gt;pre-commit&lt;/code&gt; hook file, as well as the &lt;code&gt;AsepritePacker&lt;/code&gt; tool code.&lt;/p&gt; &#xA;&lt;p&gt;There is an accompanying set of code in the &lt;code&gt;source/loaders/&lt;/code&gt; directory to aid with loading these files into game objects that allow frames and durations to be driven entirely via the Aseprite files.&lt;/p&gt; &#xA;&lt;h3&gt;Maintenance&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This projects uses the &lt;a href=&#34;https://github.com/HaxeCheckstyle/haxe-formatter&#34;&gt;haxe-formatter&lt;/a&gt; package for formatting using default settings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;./bin/format.sh&lt;/code&gt; is a convenience script will perform the formatting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>