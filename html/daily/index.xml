<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-22T01:37:36Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NianBroken/Personal_Sakura_Guide_Page</title>
    <updated>2023-02-22T01:37:36Z</updated>
    <id>tag:github.com,2023-02-22:/NianBroken/Personal_Sakura_Guide_Page</id>
    <link href="https://github.com/NianBroken/Personal_Sakura_Guide_Page" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款好看的樱花个人引导页，基于Dimension的二次修改。普通虚拟主机即可搭建，无需其他环境。把源码上传到服务器，修改index.html里面的代码，访问域名就可以使用。纯Html-Css-JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;个人樱花引导页&lt;/h1&gt; &#xA;&lt;h2&gt;注意：&lt;/h2&gt; &#xA;&lt;p&gt;此源码是基于 &lt;a href=&#34;https://html5up.net/dimension&#34; title=&#34;Dimension&#34;&gt;Dimension&lt;/a&gt; 的二次修改&lt;/p&gt; &#xA;&lt;p&gt;Demo：&lt;a href=&#34;https://nianbroken.github.io/Personal_Sakura_Guide_Page/&#34; title=&#34;https://nianbroken.github.io/Personal_Sakura_Guide_Page/&#34;&gt;https://nianbroken.github.io/Personal_Sakura_Guide_Page/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新日志：&lt;/h2&gt; &#xA;&lt;h3&gt;1.2 - 2022年1月30日&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更正错别字“途径”→“途经”（她只是途经我留下了星火 而我却任凭它焚烧了我整个荒原）&lt;/li&gt; &#xA; &lt;li&gt;修复页面中头像周围出现两个圆框&lt;/li&gt; &#xA; &lt;li&gt;新增版权信息的年份支持自动更新&lt;/li&gt; &#xA; &lt;li&gt;底部新增一条文案&lt;/li&gt; &#xA; &lt;li&gt;修复其他Bug&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1 - 2021年7月21日&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复 Svg 无法显示 的问题&lt;/li&gt; &#xA; &lt;li&gt;增加 Meta Description 优化SEO&lt;/li&gt; &#xA; &lt;li&gt;增加 图像的 Alt 属性 优化SEO&lt;/li&gt; &#xA; &lt;li&gt;增加 Meta Language 标记 优化SEO&lt;/li&gt; &#xA; &lt;li&gt;增加 万能收款码 （需自行修改 &lt;code&gt;\money_receiving_QR_code\index.html&lt;/code&gt; 相关参数）&lt;/li&gt; &#xA; &lt;li&gt;此版本可通过Bing、Google搜索引擎的质量检查&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;修改内容：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;将页面内头像改为本地头像&lt;/li&gt; &#xA; &lt;li&gt;将原本的背景替换为动态樱花背景（参考自 &lt;a href=&#34;https://github.com/fwxiaohan/fwxiaohan.github.io&#34; title=&#34;fwxiaohan.github.io&#34;&gt;fwxiaohan.github.io&lt;/a&gt; ）&lt;/li&gt; &#xA; &lt;li&gt;去除&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;标签的锚点链接，改为文本链接&lt;/li&gt; &#xA; &lt;li&gt;去除超链接下方的横线&lt;/li&gt; &#xA; &lt;li&gt;去除页面中间的黑色块块&lt;/li&gt; &#xA; &lt;li&gt;增加显示访问者IP地址（调用 &lt;a href=&#34;https://pv.sohu.com/cityjson?ie=utf-8&#34;&gt;https://pv.sohu.com/cityjson?ie=utf-8&lt;/a&gt; 接口）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Dimension与个人樱花引导页的对比：&lt;/h2&gt; &#xA;&lt;img width=&#34;50%&#34; src=&#34;https://blog.nianbroken.top/NianBrokenStorage/FileStorage/7/02.png&#34; alt=&#34;Dimension&#34;&gt; &#xA;&lt;img width=&#34;50%&#34; src=&#34;https://blog.nianbroken.top/NianBrokenStorage/FileStorage/7/03.png&#34; alt=&#34;个人樱花引导页&#34;&gt;图1为Dimension，图2为个人樱花引导页 &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;动态图：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://blog.nianbroken.top/NianBrokenStorage/FileStorage/7/04.gif&#34; alt=&#34;个人樱花引导页动态图&#34; title=&#34;个人樱花引导页动态图&#34;&gt;由于Gif较大，可能加载不出来或加载比较慢，建议直接前往演示站查看。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wuomzfx/wx-chatgpt</title>
    <updated>2023-02-22T01:37:36Z</updated>
    <id>tag:github.com,2023-02-22:/wuomzfx/wx-chatgpt</id>
    <link href="https://github.com/wuomzfx/wx-chatgpt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;公众号微信云托管接入 chatgpt 模板&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;如何接入 ChatGPT&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;注册 openai 账号，并获取到 apiKey&lt;/li&gt; &#xA; &lt;li&gt;将 &lt;code&gt;index.js&lt;/code&gt; 文件中，&lt;code&gt;##your api key##&lt;/code&gt; 替换成你的 apiKey&lt;/li&gt; &#xA; &lt;li&gt;push 代码到 master 分支，云托管自动部署后即可运行&lt;/li&gt; &#xA; &lt;li&gt;完成之后，记得在微信云托管在后台的「设置-全局设置」中，添加「消息推送」，并增加 path 为 &lt;code&gt;/message/post&lt;/code&gt; 的配置。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;下面为微信云托管的标准README&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WeixinCloud/wxcloudrun-koa&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/WeixinCloud/wxcloudrun-koa&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/package-json/dependency-version/WeixinCloud/wxcloudrun-koa/koa&#34; alt=&#34;GitHub package.json dependency version (prod)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/package-json/dependency-version/WeixinCloud/wxcloudrun-koa/sequelize&#34; alt=&#34;GitHub package.json dependency version (prod)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;微信云托管 Node.js Koa 框架模版，实现简单的计数器读写接口，使用云托管 MySQL 读写、记录计数值。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://qcloudimg.tencent-cloud.cn/raw/be22992d297d1b9a1a5365e606276781.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;前往 &lt;a href=&#34;https://cloud.weixin.qq.com/cloudrun/onekey&#34;&gt;微信云托管快速开始页面&lt;/a&gt;，选择相应语言的模板，根据引导完成部署。&lt;/p&gt; &#xA;&lt;h2&gt;本地调试&lt;/h2&gt; &#xA;&lt;p&gt;下载代码在本地调试，请参考&lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/guide/debug/&#34;&gt;微信云托管本地调试指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;实时开发&lt;/h2&gt; &#xA;&lt;p&gt;代码变动时，不需要重新构建和启动容器，即可查看变动后的效果。请参考&lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/guide/debug/dev.html&#34;&gt;微信云托管实时开发指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dockerfile最佳实践&lt;/h2&gt; &#xA;&lt;p&gt;请参考&lt;a href=&#34;https://developers.weixin.qq.com/miniprogram/dev/wxcloudrun/src/scene/build/speed.html&#34;&gt;如何提高项目构建效率&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目结构说明&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── Dockerfile&#xA;├── README.md&#xA;├── container.config.json  &#xA;├── db.js&#xA;├── index.js&#xA;├── index.html&#xA;├── package.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;index.js&lt;/code&gt;：项目入口，实现主要的读写 API&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;db.js&lt;/code&gt;：数据库相关实现，使用 &lt;code&gt;sequelize&lt;/code&gt; 作为 ORM&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;：首页代码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;package.json&lt;/code&gt;：Node.js 项目定义文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;container.config.json&lt;/code&gt;：模板部署「服务设置」初始化配置（二开请忽略）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt;：容器配置文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;服务 API 文档&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;GET /api/count&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;获取当前计数&lt;/p&gt; &#xA;&lt;h4&gt;请求参数&lt;/h4&gt; &#xA;&lt;p&gt;无&lt;/p&gt; &#xA;&lt;h4&gt;响应结果&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;code&lt;/code&gt;：错误码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data&lt;/code&gt;：当前计数值&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;响应结果示例&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;code&#34;: 0,&#xA;  &#34;data&#34;: 42&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;调用示例&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://&amp;lt;云托管服务域名&amp;gt;/api/count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;POST /api/count&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;更新计数，自增或者清零&lt;/p&gt; &#xA;&lt;h4&gt;请求参数&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;action&lt;/code&gt;：&lt;code&gt;string&lt;/code&gt; 类型，枚举值 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;等于 &lt;code&gt;&#34;inc&#34;&lt;/code&gt; 时，表示计数加一&lt;/li&gt; &#xA;   &lt;li&gt;等于 &lt;code&gt;&#34;clear&#34;&lt;/code&gt; 时，表示计数重置（清零）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;请求参数示例&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;action&#34;: &#34;inc&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;响应结果&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;code&lt;/code&gt;：错误码&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;data&lt;/code&gt;：当前计数值&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;响应结果示例&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;code&#34;: 0,&#xA;  &#34;data&#34;: 42&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;调用示例&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -X POST -H &#39;content-type: application/json&#39; -d &#39;{&#34;action&#34;: &#34;inc&#34;}&#39; https://&amp;lt;云托管服务域名&amp;gt;/api/count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;使用注意&lt;/h2&gt; &#xA;&lt;p&gt;如果不是通过微信云托管控制台部署模板代码，而是自行复制/下载模板代码后，手动新建一个服务并部署，需要在「服务设置」中补全以下环境变量，才可正常使用，否则会引发无法连接数据库，进而导致部署失败。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MYSQL_ADDRESS&lt;/li&gt; &#xA; &lt;li&gt;MYSQL_PASSWORD&lt;/li&gt; &#xA; &lt;li&gt;MYSQL_USERNAME 以上三个变量的值请按实际情况填写。如果使用云托管内MySQL，可以在控制台MySQL页面获取相关信息。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wuomzfx/wx-chatgpt/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws-samples/aws-deployment-pipeline-reference-architecture</title>
    <updated>2023-02-22T01:37:36Z</updated>
    <id>tag:github.com,2023-02-22:/aws-samples/aws-deployment-pipeline-reference-architecture</id>
    <link href="https://github.com/aws-samples/aws-deployment-pipeline-reference-architecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reference architecture for deployment pipelines&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Deployment Pipeline Reference Architecture (DPRA)&lt;/strong&gt; describes best practices for building deployment pipelines. A deployment pipeline automates the building, testing and deploying of software into AWS environments. With DPRA, developers can increase the speed, stability, and security of software systems through the use of deployment pipelines.&lt;/p&gt; &#xA;&lt;p&gt;Each type of deployment pipeline also includes one or more reference implementations with source code that defines a functional pipeline based on the reference architecture.&lt;/p&gt; &#xA;&lt;p&gt;To learn more, visit &lt;a href=&#34;https://pipelines.devops.aws.dev&#34;&gt;https://pipelines.devops.aws.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;The easiest approach is to use the preconfigured &lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers&#34;&gt;development container&lt;/a&gt; within VS Code.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can install these required dependencies manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install graphviz drawio&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setup &lt;a href=&#34;https://pre-commit.com&#34;&gt;pre-commit&lt;/a&gt; hooks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start server with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdocs serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License Summary&lt;/h2&gt; &#xA;&lt;p&gt;The documentation is made available under the Creative Commons Attribution-ShareAlike 4.0 International License. See the LICENSE file.&lt;/p&gt; &#xA;&lt;p&gt;The sample code within this documentation is made available under the MIT-0 license. See the LICENSE-SAMPLECODE file.&lt;/p&gt;</summary>
  </entry>
</feed>