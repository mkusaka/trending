<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:30:59Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>acenelio/dsmeta-css</title>
    <updated>2022-07-15T01:30:59Z</updated>
    <id>tag:github.com,2022-07-15:/acenelio/dsmeta-css</id>
    <link href="https://github.com/acenelio/dsmeta-css" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>docker/awesome-compose</title>
    <updated>2022-07-15T01:30:59Z</updated>
    <id>tag:github.com,2022-07-15:/docker/awesome-compose</id>
    <link href="https://github.com/docker/awesome-compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Awesome Docker Compose samples&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Compose &lt;a href=&#34;https://awesome.re&#34;&gt;&lt;img src=&#34;https://awesome.re/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/docker/awesome-compose/master/awesome-compose.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A curated list of Docker Compose samples.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;These samples provide a starting point for how to integrate different services using a Compose file and to manage their deployment with Docker Compose.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;The following samples are intended for use in local development environments such as project setups, tinkering with software stacks, etc. These samples must not be deployed in production environments.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!--lint disable awesome-toc--&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker/awesome-compose/master/#samples-of-docker-compose-applications-with-multiple-integrated-services&#34;&gt;Samples of Docker Compose applications with multiple integrated services&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker/awesome-compose/master/#single-service-samples&#34;&gt;Single service samples&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/docker/awesome-compose/master/#basic-setups-for-different-platforms-not-production-ready---useful-for-personal-use&#34;&gt;Basic setups for different platforms (not production ready - useful for personal use)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Samples of Docker Compose applications with multiple integrated services&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/aspnet-mssql&#34;&gt;&lt;code&gt;ASP.NET / MS-SQL&lt;/code&gt;&lt;/a&gt; - Sample ASP.NET core application with MS SQL server database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/elasticsearch-logstash-kibana&#34;&gt;&lt;code&gt;Elasticsearch / Logstash / Kibana&lt;/code&gt;&lt;/a&gt; - Sample Elasticsearch, Logstash, and Kibana stack.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-golang-mysql&#34;&gt;&lt;code&gt;Go / NGINX / MySQL&lt;/code&gt;&lt;/a&gt; - Sample Go application with an Nginx proxy and a MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-golang-postgres&#34;&gt;&lt;code&gt;Go / NGINX / PostgreSQL&lt;/code&gt;&lt;/a&gt; - Sample Go application with an Nginx proxy and a PostgreSQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/sparkjava-mysql&#34;&gt;&lt;code&gt;Java Spark / MySQL&lt;/code&gt;&lt;/a&gt; - Sample Java application and a MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-aspnet-mysql&#34;&gt;&lt;code&gt;NGINX / ASP.NET / MySQL&lt;/code&gt;&lt;/a&gt; - Sample Nginx reverse proxy with an C# backend using ASP.NET&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-flask-mongo&#34;&gt;&lt;code&gt;NGINX / Flask / MongoDB&lt;/code&gt;&lt;/a&gt; - Sample Python/Flask application with Nginx proxy and a Mongo database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-flask-mysql&#34;&gt;&lt;code&gt;NGINX / Flask / MySQL&lt;/code&gt;&lt;/a&gt; - Sample Python/Flask application with an Nginx proxy and a MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-nodejs-redis&#34;&gt;&lt;code&gt;NGINX / Node.js / Redis&lt;/code&gt;&lt;/a&gt; - Sample Node.js application with Nginx proxy and a Redis database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-golang&#34;&gt;&lt;code&gt;NGINX / Go&lt;/code&gt;&lt;/a&gt; - Sample Nginx proxy with a Go backend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nginx-wsgi-flask&#34;&gt;&lt;code&gt;NGINX / WSGI / Flask&lt;/code&gt;&lt;/a&gt; - Sample Nginx reverse proxy with a Flask backend using WSGI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/postgresql-pgadmin&#34;&gt;&lt;code&gt;PostgreSQL / pgAdmin&lt;/code&gt;&lt;/a&gt; - Sample setup for postgreSQL database with pgAdmin web interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/flask-redis&#34;&gt;&lt;code&gt;Python / Flask / Redis&lt;/code&gt;&lt;/a&gt; - Sample Python/Flask and a Redis database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/react-java-mysql&#34;&gt;&lt;code&gt;React / Spring / MySQL&lt;/code&gt;&lt;/a&gt; - Sample React application with a Spring backend and a MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/react-express-mysql&#34;&gt;&lt;code&gt;React / Express / MySQL&lt;/code&gt;&lt;/a&gt; - Sample React application with a Node.js backend and a MySQL database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/react-express-mongodb&#34;&gt;&lt;code&gt;React / Express / MongoDB&lt;/code&gt;&lt;/a&gt; - Sample React application with a Node.js backend and a Mongo database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/react-rust-postgres&#34;&gt;&lt;code&gt;React / Rust / PostgreSQL&lt;/code&gt;&lt;/a&gt; - Sample React application with a Rust backend and a Postgres database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/react-nginx&#34;&gt;&lt;code&gt;React / Nginx&lt;/code&gt;&lt;/a&gt; - Sample React application with Nginx.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/spring-postgres&#34;&gt;&lt;code&gt;Spring / PostgreSQL&lt;/code&gt;&lt;/a&gt; - Sample Java application with Spring framework and a Postgres database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Single service samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/angular&#34;&gt;&lt;code&gt;Angular&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/sparkjava&#34;&gt;&lt;code&gt;Spark&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/vuejs&#34;&gt;&lt;code&gt;VueJS&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/flask&#34;&gt;&lt;code&gt;Flask&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/apache-php&#34;&gt;&lt;code&gt;PHP&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/traefik-golang&#34;&gt;&lt;code&gt;Traefik&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/django&#34;&gt;&lt;code&gt;Django&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/minecraft&#34;&gt;&lt;code&gt;Minecraft server&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/plex&#34;&gt;&lt;code&gt;Plex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/portainer&#34;&gt;&lt;code&gt;Portainer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/wireguard&#34;&gt;&lt;code&gt;Wireguard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic setups for different platforms (not production ready - useful for personal use)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/gitea-postgres&#34;&gt;&lt;code&gt;Gitea / PostgreSQL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nextcloud-postgres&#34;&gt;&lt;code&gt;Nextcloud / PostgreSQL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/nextcloud-redis-mariadb&#34;&gt;&lt;code&gt;Nextcloud / Redis / MariaDB&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/pihole-cloudflared-DoH&#34;&gt;&lt;code&gt;Pi-hole / cloudflared&lt;/code&gt;&lt;/a&gt; - Sample Pi-hole setup with use of DoH cloudflared service&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/prometheus-grafana&#34;&gt;&lt;code&gt;Prometheus / Grafana&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/awesome-compose/tree/master/wordpress-mysql&#34;&gt;&lt;code&gt;Wordpress / MySQL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--lint disable awesome-toc--&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will get you through the bootstrap phase of creating and deploying samples of containerized applications with Docker Compose.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that you have Docker and Docker Compose installed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows or macOS: &lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Install Docker Desktop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux: &lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Install Docker&lt;/a&gt; and then &lt;a href=&#34;https://github.com/docker/compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download some or all of the samples from this repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running a sample&lt;/h3&gt; &#xA;&lt;p&gt;The root directory of each sample contains the &lt;code&gt;compose.yaml&lt;/code&gt; which describes the configuration of service components. All samples can be run in a local environment by going into the root directory of each one and executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;code&gt;README.md&lt;/code&gt; of each sample to get more details on the structure and what is the expected output. To stop and remove all containers of the sample application run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--lint disable awesome-toc--&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We welcome examples that help people understand how to use Docker Compose for common applications. Check the &lt;a href=&#34;https://raw.githubusercontent.com/docker/awesome-compose/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ColorlibHQ/email-templates</title>
    <updated>2022-07-15T01:30:59Z</updated>
    <id>tag:github.com,2022-07-15:/ColorlibHQ/email-templates</id>
    <link href="https://github.com/ColorlibHQ/email-templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free HTML email templates for Mailchimp and other emails services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Free Email Templates by Colorlib.&lt;/h1&gt; &#xA;&lt;p&gt;Free HTML email templates for Mailchimp and other emails services&lt;/p&gt; &#xA;&lt;p&gt;Huge selection of the best free email templates you will ever find. All templates are responsive and will work with all popular emails such as Gmail, Outlook and ohers. You can use these templates with MailChimp or any other email delivery service.&lt;/p&gt; &#xA;&lt;h1&gt;Here is a preview of one of the templates&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://colorlib.com/wp/wp-content/uploads/sites/2/email-templates.jpg&#34; alt=&#34;Free email Templates&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more email templates like this one &lt;a href=&#34;https://colorlib.com/wp/responsive-html-email-templates/&#34;&gt;please see this list&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>