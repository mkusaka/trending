<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-14T01:35:10Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>InboxSDK/InboxSDK</title>
    <updated>2022-10-14T01:35:10Z</updated>
    <id>tag:github.com,2022-10-14:/InboxSDK/InboxSDK</id>
    <link href="https://github.com/InboxSDK/InboxSDK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The InboxSDK lets you build apps for Gmail.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://www.inboxsdk.com&#34;&gt;InboxSDK&lt;/a&gt; Â· &lt;a href=&#34;https://github.com/InboxSDK/InboxSDK/raw/main/LICENSE-APACHE.txt&#34;&gt;&lt;img src=&#34;https://shields.io/badge/license-Apache--2.0-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/InboxSDK/InboxSDK/raw/main/LICENSE-MIT.txt&#34;&gt;&lt;img src=&#34;https://shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/inboxSDK/inboxsdk#contribution-guidelines&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;InboxSDK is a JavaScript library for building apps inside of Gmail with browser extensions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;No DOM Hacking&lt;/strong&gt;: exposes a high level, declarative API and handles all the DOM manipulation in a performant way&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Handles edge cases&lt;/strong&gt;: multiple inboxes, conversation mode on/off, personal vs workspace, preview pane, fullscreen compose, popouts &amp;amp; themes are all handled&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Constant updates&lt;/strong&gt;: new versions released as Gmail updates (often before their changes are fully rolled out)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://inboxsdk.github.io/inboxsdk-docs/&#34;&gt;full docs site&lt;/a&gt; and &lt;a href=&#34;https://github.com/InboxSDK/inboxsdk-docs&#34;&gt;relevant repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://inboxsdk.github.io/inboxsdk-docs/#quick-start&#34;&gt;Quickstart&lt;/a&gt; in the docs, but basic summary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;@inboxsdk/core&lt;/code&gt; package on &lt;a href=&#34;https://www.npmjs.com/package/@inboxsdk/core&#34;&gt;npm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up the project like the &lt;a href=&#34;https://github.com/InboxSDK/hello-world&#34;&gt;example extension&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.inboxsdk.com/register&#34;&gt;Generate&lt;/a&gt; an app id&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The most basic example of adding a button to a Gmail compose window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import * as InboxSDK from &#39;@inboxsdk/core&#39;;&#xA;&#xA;InboxSDK.load(2, &#39;YOUR_APP_ID_HERE&#39;).then((sdk) =&amp;gt; {&#xA;  // the SDK has been loaded, now do something with it!&#xA;  sdk.Compose.registerComposeViewHandler((composeView) =&amp;gt; {&#xA;    // a compose view has come into existence, do something with it!&#xA;    composeView.addButton({&#xA;      title: &#39;My Nifty Button!&#39;,&#xA;      iconUrl: &#39;https://example.com/foo.png&#39;,&#xA;      onClick(event) {&#xA;        event.composeView.insertTextIntoBodyAtCursor(&#39;Hello World!&#39;);&#xA;      },&#xA;    });&#xA;  });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/InboxSDK/hello-world&#34;&gt;https://github.com/InboxSDK/hello-world&lt;/a&gt; for an example extension using the InboxSDK.&lt;/p&gt; &#xA;&lt;h1&gt;Licensing&lt;/h1&gt; &#xA;&lt;p&gt;This release of the InboxSDK is distributed under the terms of both the MIT license and the Apache License (Version 2.0). The InboxSDK may be used and redistributed according to the terms of either license. These are permissive licenses that do not require modifications or embedding applications to be open source themselves. See &lt;a href=&#34;https://raw.githubusercontent.com/InboxSDK/InboxSDK/main/LICENSE-APACHE.txt&#34;&gt;LICENSE-APACHE.txt&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/InboxSDK/InboxSDK/main/LICENSE-MIT.txt&#34;&gt;LICENSE-MIT.txt&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/InboxSDK/InboxSDK/main/COPYRIGHT.txt&#34;&gt;COPYRIGHT.txt&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Contribution Guidelines&lt;/h1&gt; &#xA;&lt;p&gt;Please feel free to open issues or pull requests for bug fixes. For feature requests, please open an issue first so we can decide if and how we may want to support the feature. Many features require ongoing maintenance to support as Gmail changes, and we may not want to commit to supporting every requested feature. If we decide not to implement a feature, we may be able to find a way to implement functionality in the InboxSDK to help applications implement the feature themselves.&lt;/p&gt; &#xA;&lt;h1&gt;Development Cycle Essentials&lt;/h1&gt; &#xA;&lt;p&gt;Run &lt;code&gt;yarn&lt;/code&gt; to install the necessary dependencies, and run &lt;code&gt;yarn start&lt;/code&gt; to start the automatic builder. Then load &lt;code&gt;examples/hello-world/&lt;/code&gt; as an unpacked extension into Google Chrome.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://chrome.google.com/webstore/detail/extensions-reloader/fimgfedafeadlieiabdeeaodndnlbhid&#34;&gt;Chrome Extensions Reloader&lt;/a&gt; extension is supported, and if it is detected then it will be triggered whenever any changes are made to any SDK files, so that you don&#39;t have to click reload on the test extension yourself on every change. (You&#39;ll still need to refresh Gmail!)&lt;/p&gt; &#xA;&lt;p&gt;When you are working on the InboxSDK, you should test with one of the example extensions in the examples directory. If you are working on a specific feature, find an example extension that uses that feature, or edit a relevant example to use the feature. If you are adding a new feature to the InboxSDK, make one of the examples use the new feature. The new feature should be easily usable in isolation in an example extension, and must not depend on Streak (including Streak&#39;s CSS). Any new features that add elements controlled by the extension ought to be styled (positioned) reasonably by the InboxSDK without requiring the extension to include its own non-trivial CSS.&lt;/p&gt; &#xA;&lt;h2&gt;Technology Choices&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re trying to use Typescript as much as possible now. There are still a lot of classic Javascript and Flow Javascript files left over. As needed, you can make &lt;code&gt;.d.ts&lt;/code&gt; type-def files so Typescript can see them, and you can make &lt;code&gt;.js.flow&lt;/code&gt; type-def files so Flow can see Typescript files. If you&#39;re working on a bit of code that&#39;s not in a Typescript file, consider changing the file to be Typescript.&lt;/p&gt; &#xA;&lt;p&gt;React is done for some UIs, but there&#39;s a complication to using it generally: we often need to integrate with elements from Gmail itself or other instances of the InboxSDK. React only works well for the case where there are a lot of elements created and managed by the InboxSDK itself, we have many places where we have to integrate with outside elements, and most of our additions into the page are pretty simple DOM-wise, so we&#39;re pretty picky about where we use React.&lt;/p&gt; &#xA;&lt;h2&gt;Fixing Unreproducible Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Gmail frequently delivers rolling updates to users, so that a small percent of users run different versions of Gmail than most people. These different versions of Gmail may visually appear the same but contain internal differences (HTML structure, ajax request/response formats, etc.) that cause compatibility issues for the InboxSDK.&lt;/p&gt; &#xA;&lt;p&gt;In general, we should try to add error logging that makes it obvious whenever Gmail&#39;s HTML structure or ajax formats aren&#39;t what we expect. For example, if we have code that calls &lt;code&gt;.querySelector(...)&lt;/code&gt; on an element and then requires an element to be returned, we should either import and use &#39;querySelectorOrFail.js&#39; (which throws an error with a useful message if no element is found), or we should handle null being returned from &lt;code&gt;.querySelector(...)&lt;/code&gt; with code like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const insertionPointEl = el.querySelector(&#39;.foo .bar&#39;);&#xA;if (!insertionPointEl) {&#xA;  const err = new Error(&#39;Could not find FOO element&#39;);&#xA;  driver.getLogger().errorSite(err);&#xA;  throw err; // or instead of throwing, do some graceful fallback instead.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If we started seeing that error in our logs, and we weren&#39;t able to reproduce the issue locally, then you can log the HTML of the unexpectedly-different element by passing an object as the details parameter to any of Logger&#39;s methods. Whenever we log HTML of elements in Gmail, we must either use an HTML censoring function (so we don&#39;t risk getting users&#39; message contents; use either &lt;code&gt;censorHTMLstring(el.outerHTML)&lt;/code&gt;, or &lt;code&gt;censorHTMLtree(el)&lt;/code&gt; if information about the element&#39;s parents is useful too), or restrict the logging to only happen for Streak users (by checking the extension&#39;s appId with the &lt;code&gt;isStreakAppId.js&lt;/code&gt; function). Same rule of thumb applies for logging ajax request/responses too (see &lt;code&gt;censorJSONTree&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;em&gt;Querying for Error Logs&lt;/em&gt; section below for instructions on reading the logged errors and their details.&lt;/p&gt; &#xA;&lt;p&gt;Whenever we update our code for a new Gmail version that isn&#39;t completely rolled out, we need to make sure our code continues to support previous versions of Gmail. The best way to guarantee this is to create a unit test which runs the code on all known versions of the HTML. (Ideally, the unit test should even work on the censored HTML directly from an error report! Maybe in the future for specific errors, we could automate the process of taking the censored HTML from an error report and creating a new failing test case using it.)&lt;/p&gt; &#xA;&lt;h1&gt;Build Options&lt;/h1&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;yarn start&lt;/code&gt; runs the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn gulp default --watch --reloader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which builds the SDK, watches all of its source files for changes to trigger rebuilds of the bundle automatically (&lt;code&gt;--watch&lt;/code&gt;), and tells Chrome to reload its extensions after SDK rebuilds (&lt;code&gt;--reload&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Separate SDK and implementation bundles can be built and a local test server which hosts the remote implementation bundle can be started by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn gulp default server --watch --reloader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building separate SDK and implementation bundles represents how the production builds will work. When using the local test server to host the platform-implementation bundle, you&#39;ll need to run Chrome with the &lt;code&gt;--allow-running-insecure-content&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h1&gt;Tests&lt;/h1&gt; &#xA;&lt;p&gt;This project has different kinds of unit tests and integration tests.&lt;/p&gt; &#xA;&lt;p&gt;All .js files under &lt;code&gt;__tests__&lt;/code&gt; and all &lt;code&gt;*.test.js&lt;/code&gt; files are tests executed by Jest. All new tests should be Jest tests.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;*.test.js&lt;/code&gt; files inside of &lt;code&gt;test/chrome&lt;/code&gt; are Puppeteer-based integration tests. These tests open a browser with a test InboxSDK extension and test that various InboxSDK features work correctly in Gmail. These tests are primarily about checking whether Gmail has broken support with us, and our CI system runs these for us. These tests require that the InboxSDK has been built first and that the &#34;.inboxsdk_test_secret&#34; file or the INBOXSDK_TEST_SECRET environment variable contains the decryption key for the Google test account credentials. These tests can be run with &lt;code&gt;yarn puppeteer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Implementation Notes&lt;/h1&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;When the &lt;code&gt;--remote&lt;/code&gt; flag is used, two main javascript files are created: inboxsdk.js and platform-implementation.js. inboxsdk.js implements the InboxSDK object with the load method. It triggers an AJAX request for platform-implementation.js which is evaluated and creates a PlatformImplementation object.&lt;/p&gt; &#xA;&lt;h2&gt;Paths&lt;/h2&gt; &#xA;&lt;h3&gt;src/inboxsdk-js/&lt;/h3&gt; &#xA;&lt;p&gt;This contains the code for the global &lt;code&gt;InboxSDK&lt;/code&gt; object with the &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;loadScript&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;h3&gt;src/platform-implementation-js/&lt;/h3&gt; &#xA;&lt;p&gt;This is the code that the InboxSDK loader fetches from our server.&lt;/p&gt; &#xA;&lt;p&gt;When it&#39;s executed, it defines a global object containing a function that instantiates a PlatformImplementation object. Calls to &lt;code&gt;InboxSDK.load&lt;/code&gt; return a promise that resolves to this object. This object is the object given to the extension.&lt;/p&gt; &#xA;&lt;p&gt;The PlatformImplementation object instantiates either a GmailDriver or InboxDriver object and uses it to do its DOM manipulations. The Driver object is not directly exposed to the application. This pattern is used often. For example, each Driver object has a getComposeViewDriverStream() method which returns a Kefir stream of objects following the ComposeViewDriver interface. The PlatformImplementation&#39;s Compose object takes the ComposeViewDriver object and instantiates a ComposeView object wrapping it, adding some logic common to both Gmail and Inbox, and this ComposeView object is what is exposed to the extension.&lt;/p&gt; &#xA;&lt;h3&gt;src/injected-js/&lt;/h3&gt; &#xA;&lt;p&gt;This code ultimately ends up inside of platform-implementation.js. Unlike the rest of the code, it&#39;s executed within Gmail&#39;s environment instead of the extension&#39;s environment. This allows it to access global Gmail variables, and to intercept Gmail&#39;s AJAX connections (see xhr-proxy-factory). It communicates with the InboxSDK code in the extension environment through DOM events.&lt;/p&gt; &#xA;&lt;p&gt;InboxSDK code within Gmail&#39;s environment has less coverage from our error tracking system, and is more vulnerable to being affected by or affecting Gmail&#39;s own Javascript variables, so we try to minimize what functionality lives in the injected script.&lt;/p&gt; &#xA;&lt;p&gt;The file &#34;src/injected-js/main.js&#34; is browserified into &#34;dist/injected.js&#34;, which is then included by &#34;src/platform-implementation-js/lib/inject-script.js&#34; and built into &#34;dist/platform-implementation.js&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Element Detection Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Gmail&lt;/h3&gt; &#xA;&lt;p&gt;CSS selectors should not depend on id values as these are uniquely auto-generated at run-time. CSS class names are randomly strings, but they stay the same long term over many sessions and are dependable for using to find elements.&lt;/p&gt; &#xA;&lt;p&gt;The account switcher widget in Gmail is built a bit differently, and the notes about Inbox should be referred to instead for it.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;del&gt;Inbox&lt;/del&gt; Modern Google&lt;/h3&gt; &#xA;&lt;p&gt;(Inbox support is no more, but this knowledge is true of some newer Google web app code and parts of Gmail.)&lt;/p&gt; &#xA;&lt;p&gt;Like Gmail, Inbox uses a lot of randomly generated class names, but the class names appear to be regenerated every few weeks. CSS class names, id values, jstcache properties, and jsl properties are not dependable for using to find elements. The presence of the id and usually the class properties can be used. CSS child and sibling selectors are useful to use.&lt;/p&gt; &#xA;&lt;h2&gt;Gmail Response Processor Utilities&lt;/h2&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;./tools/serialize.js&lt;/code&gt; and &lt;code&gt;./tools/deserialize.js&lt;/code&gt; executables to (de)serialize Gmail messages from the command line. You need to have babel-cli installed globally (&lt;code&gt;yarn global add babel-cli&lt;/code&gt;) for them to work. Each one reads from stdin and writes to stdout.&lt;/p&gt; &#xA;&lt;p&gt;If you have a file of JSON containing the Gmail response, you can use &lt;code&gt;jq&lt;/code&gt; (&lt;code&gt;brew install jq&lt;/code&gt;) to read the string out of the JSON and pipe it into deserialize:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;jq -j &#39;.input&#39; ./test/data/gmail-response-processor/suggestions.json | ./tools/deserialize.js&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>aymanebenhima/YouCodeScrumBoard</title>
    <updated>2022-10-14T01:35:10Z</updated>
    <id>tag:github.com,2022-10-14:/aymanebenhima/YouCodeScrumBoard</id>
    <link href="https://github.com/aymanebenhima/YouCodeScrumBoard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;L&#39;objectif est de dÃ©velopper une application web YouCode Scrum Board en bootstrap et de le rendre aussi proche que possible de la conception proposÃ©e.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YouCode Scrum Board Project&lt;/h1&gt; &#xA;&lt;p&gt;L&#39;objectif est de dÃ©velopper une application web YouCode Scrum Board en bootstrap et de le rendre aussi proche que possible de la conception proposÃ©e.&lt;/p&gt; &#xA;&lt;h2&gt;Bienvenue! ð&lt;/h2&gt; &#xA;&lt;p&gt;Pour dÃ©velopper l&#39;interface d&#39;une application web avec responsive design, vous avez besoin d&#39;une comprÃ©hension de base du HTML, CSS et d&#39;une Framework Css pour faciliter le dÃ©veloppement et rendre le code source trÃ¨s lisible avec les bons pratique de nomination des classes Css comme Bootstrap&lt;/p&gt; &#xA;&lt;h2&gt;OÃ¹ tout trouver?&lt;/h2&gt; &#xA;&lt;p&gt;Votre tÃ¢che consiste Ã  construire low fidelity and high fidelity wireframes du projet Ã  l&#39;aide d&#39;un outil de wireframing - web disign Ã  partir des dessins et modÃ¨les contenus dans ð &lt;code&gt;/design&lt;/code&gt;. Vous y trouverez une version mobile et une version de bureau de la conception sur laquelle travailler.&lt;/p&gt; &#xA;&lt;p&gt;Les maquettes sont au format PNG statique. Cela signifie que vous devrez faire preuve de discernement pour les styles tels que &#39;font-size&#39;, &#39;padding&#39; et &#39;margin&#39;. Cela devrait vous aider Ã  entraÃ®ner votre Åil Ã  percevoir les diffÃ©rences d&#39;espacement et de taille.&lt;/p&gt; &#xA;&lt;p&gt;Vous y trouverez le fichier html sur laquelle travailler &lt;code&gt;index.html&lt;/code&gt; pour ajouter les classes css du Bootstrap 5, et si vous avez besoin d&#39;ajouter quelques propriÃ©tÃ©s css utilisez le fichier &lt;code&gt;style.css&lt;/code&gt; dans ð &lt;code&gt;/assets/css&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Construire votre projet&lt;/h2&gt; &#xA;&lt;p&gt;N&#39;hÃ©sitez pas Ã  utiliser le flux de travail qui vous convient le mieux. Vous trouverez ci-dessous une suggestion de procÃ©dure, mais n&#39;estimez pas nÃ©cessaire de suivre ces Ã©tapes :&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Initialisez votre projet en tant que dÃ©pÃ´t public sur &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configurez votre repository pour publier votre code dans un URL. I existe plusieurs mÃ©thode de procÃ©der, (Deployment).&lt;/li&gt; &#xA; &lt;li&gt;CrÃ©ez un projet Ã  l&#39;aide d&#39;un outil de wireframing - web design, et exporter le livrable en format PDF dans un ð nommÃ© &lt;code&gt;/mockup&lt;/code&gt; si vous n&#39;avez pas utilisez Figma ou Adobe XD.&lt;/li&gt; &#xA; &lt;li&gt;Examinez les modÃ¨les pour commencer Ã  planifier la maniÃ¨re dont vous allez aborder le projet. Cette Ã©tape est cruciale pour vous aider Ã  anticiper les classes CSS du Bootstrap rÃ©utilisables.&lt;/li&gt; &#xA; &lt;li&gt;Avant d&#39;ajouter des classes css et styles, le contenu du HTML est dÃ©jÃ  structurÃ©. Le fait d&#39;Ã©crire d&#39;abord des classes en Bootstrap peut vous aider Ã  vous concentrer sur l&#39;apprentissage de plusieurs ensembles des composants d&#39;un contenu bien structurÃ©s.&lt;/li&gt; &#xA; &lt;li&gt;Le projet manque d&#39;un composant nommÃ© modal ou bien popup. (Voir la partie Modal preview)&lt;/li&gt; &#xA; &lt;li&gt;Ce modal contient tout simplement un formulaire d&#39;ajouter une nouvelle tÃ¢che (&lt;strong&gt;&lt;code&gt;Title&lt;/code&gt;&lt;/strong&gt;, Type (&lt;strong&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;/strong&gt; ou bien &lt;strong&gt;&lt;code&gt;Bug&lt;/code&gt;&lt;/strong&gt;), &lt;strong&gt;&lt;code&gt;Priority&lt;/code&gt;&lt;/strong&gt; (&lt;strong&gt;&lt;code&gt;Low&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;Medium&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;High&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;Critical&lt;/code&gt;&lt;/strong&gt;), Status(&lt;strong&gt;&lt;code&gt;To Do&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;In Progress&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;Done&lt;/code&gt;&lt;/strong&gt;), &lt;strong&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/strong&gt; et &lt;strong&gt;&lt;code&gt;Description&lt;/code&gt;&lt;/strong&gt;, lorsqu&#39;un utilisateur clique sur le Boutton &lt;code&gt;Add Task&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Layout&lt;/h2&gt; &#xA;&lt;p&gt;Les designs ont Ã©tÃ© crÃ©Ã©s dans les largeurs (widths) suivantes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mobile: &lt;strong&gt;375px&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Desktop: &lt;strong&gt;1440px&lt;/strong&gt; Voir les maquettes en format PNG dans ð &lt;code&gt;/design&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;h3&gt;Desktop preview&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aymanebenhima/YouCodeScrumBoard/main/design/desktop.png&#34; alt=&#34;desktop&#34;&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Mobile preview&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aymanebenhima/YouCodeScrumBoard/main/design/mobile.png&#34; alt=&#34;mobile&#34;&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Modal preview&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aymanebenhima/YouCodeScrumBoard/main/design/modal.png&#34; alt=&#34;modal&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Best of luck! ð&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zcyzcy88/TagTable</title>
    <updated>2022-10-14T01:35:10Z</updated>
    <id>tag:github.com,2022-10-14:/zcyzcy88/TagTable</id>
    <link href="https://github.com/zcyzcy88/TagTable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;[Dump] gelbooru, danbooru, sankaku complex, konachan, yande.re | keywords sheet, experience for image search (å³é®è¯/æå¾ç»éª)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;1. è¡¨çææ&lt;/h2&gt; &#xA;&lt;p&gt;ï¼Aè¡¨ï¼gelbooruï¼danbooruï¼sankakucomplexä¸èå³é®è¯å·®ä¸å¤ï¼æä»¥ä¸ºä¸å¼ è¡¨æ ¼&lt;br&gt; ï¼Bè¡¨ï¼konachanï¼èå¦¹ï¼imoutoï¼åçã&lt;/p&gt; &#xA;&lt;h2&gt;2. è¡¨çæ¥å&lt;/h2&gt; &#xA;&lt;p&gt;[Aè¡¨]&lt;br&gt; åºäºgelbooruå§ä¸»å°éåä¹ç&lt;a href=&#34;http://tieba.baidu.com/p/1385229041&#34;&gt;ãæå¾ç®ææç¨ã&lt;/a&gt;&lt;br&gt; tagæåç±&lt;a href=&#34;http://tieba.baidu.com/p/845084270&#34;&gt;sd4408391&lt;/a&gt;æ¶é&lt;br&gt; å¹¶ç±æç»å»ºè¡¨æ ¼ï¼ä¿®æ¹å¢å ï¼æ´çèæ&lt;/p&gt; &#xA;&lt;p&gt;[Bè¡¨]&lt;br&gt; åºæ¬ä¸æ¯æä¸ä¸ªä¸ªççèå¦¹çtagè®°ä¸æ¥çã&lt;br&gt; è¿å¥½ä¸åGç«é£æ ·æ4000+ä¸ªããã&lt;/p&gt; &#xA;&lt;p&gt;[æªæ¶å½çtag]&lt;br&gt; å¾çæ°éè¿å°&lt;br&gt; æä¸ºç®åçè±è¯­ï¼å¦skyï¼fruitä¹ç±»ã&lt;/p&gt; &#xA;&lt;h2&gt;3. å¦æéè¯¯è¯·å¨ãåå¸ãä¸­æåºã&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;æ³¨ï¼æ¬ä»åºä¸ºè½¬è½½&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;4. æçå»ºè®®&lt;/h2&gt; &#xA;&lt;p&gt;å¸æä½¿ç¨Gç«çäººæç©ºè½å»å·¦ä¸è§ &lt;code&gt;My Account&lt;/code&gt; å»ºä¸ªè´¦å·ï¼è¶ç®åï¼&lt;br&gt; çå°æ ç­¾ææ¾ä¸ç¬¦åç¹å¾çå·¦ä¸è§çeditä¿®æ¹ä¸ä¸&lt;br&gt; å°¤å¶æ¯questionableåexplicitæè®¸å¤å¾æä¹±&lt;/p&gt; &#xA;&lt;p&gt;æäºææé½æèµ·æ¥äºï¼è±ä¸ªå·®ä¸å¤äºè¿éçæ¯questionableï¼æ±ä¸ä¸&lt;br&gt; å¯è½æ¯ä¸ä¼ çäººæçéå§ï¼æ¯ç«é»è®¤æ¯questionable&lt;br&gt; ä¸æå¾æ ç­¾å¯ä»¥å¼è¡¨æ ¼Aè¡¨å»æ¥ä¸&lt;/p&gt; &#xA;&lt;p&gt;ä¹æä»¥Gç«çtagå¦æ­¤è¯¦ç»ï¼å¯ä¸ååæ¯ä¸ä¼ èçåå³&lt;/p&gt; &#xA;&lt;h2&gt;5. åç¨ç¾¤ä¸»çè¯&lt;/h2&gt; &#xA;&lt;p&gt;æ­¤èº«ç¾å¹´åï¼è¥æè¡äººç¸åå¿µï¼å½å¥æ¨±è±ç®æä½ãââby å°é­&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;æºå°å&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://tieba.baidu.com/p/1428468676&#34;&gt;https://tieba.baidu.com/p/1428468676&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;åæä»¶&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/zcyzcy88/TagTable/raw/master/1161375397.rar&#34;&gt;https://github.com/zcyzcy88/TagTable/blob/master/1161375397.rar&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;åå«æä»¶&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zcyzcy88.github.io/TagTable/A/Sheet1.html&#34;&gt;ï¼Aè¡¨ï¼gelbooru, danbooru, sankakucomplexçtagè¡¨.xlsx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zcyzcy88.github.io/TagTable/B/Sheet1.html&#34;&gt;ï¼Bè¡¨ï¼konachan, èå¦¹(imouto)çtagè¡¨.xlsx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcyzcy88/TagTable/issues/1&#34;&gt;åºç¡æå¾æå·§ï¼æä¹ç¥æç½é©¬é³ç­ï¼.doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcyzcy88/TagTable/raw/master/README.md&#34;&gt;è¯´æ.txt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;For CLI favor &amp;amp; program friendly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcyzcy88/TagTable/raw/master/A/plain.txt&#34;&gt;A_plain_text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zcyzcy88/TagTable/raw/master/B/plain.txt&#34;&gt;B_plain_text&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;For Japanese â English:&lt;/h2&gt; &#xA;&lt;p&gt;(&lt;a href=&#34;https://github.com/zcyzcy88/TagTable/issues/2&#34;&gt;https://github.com/zcyzcy88/TagTable/issues/2&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sleazyfork.org/zh-TW/scripts/1601-pixiv-translation-plus/code&#34;&gt;https://sleazyfork.org/zh-TW/scripts/1601-pixiv-translation-plus/code&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1SYkJFdSKbbNADYlDtOl6C4_yX6nA-GsX9FMNIwwUnL4/edit#gid=1&#34;&gt;https://docs.google.com/spreadsheets/d/1SYkJFdSKbbNADYlDtOl6C4_yX6nA-GsX9FMNIwwUnL4/edit#gid=1&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://89.223.37.135/ptp.html&#34;&gt;http://89.223.37.135/ptp.html&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://danbooru.donmai.us/forum_topics/14673&#34;&gt;https://danbooru.donmai.us/forum_topics/14673&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/evazion/translate-pixiv-tags&#34;&gt;https://github.com/evazion/translate-pixiv-tags&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://greasyfork.org/en/scripts/23109-pixiv-tag-translation-replacement&#34;&gt;https://greasyfork.org/en/scripts/23109-pixiv-tag-translation-replacement&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://en-dic.pixiv.net/a/Tag&#34;&gt;https://en-dic.pixiv.net/a/Tag&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.pixiv.help/hc/en-us/articles/360002987773-What-are-the-rules-regarding-translations-&#34;&gt;https://www.pixiv.help/hc/en-us/articles/360002987773-What-are-the-rules-regarding-translations-&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>