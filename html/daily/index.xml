<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-28T01:39:34Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mostafizurhimself/admintoolkit-html</title>
    <updated>2023-05-28T01:39:34Z</updated>
    <id>tag:github.com,2023-05-28:/mostafizurhimself/admintoolkit-html</id>
    <link href="https://github.com/mostafizurhimself/admintoolkit-html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Admin template based on TailwindCSS and Vanilla JavaScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/mostafizurhimself/admintoolkit-html/main/src/images/logo.png&#34; height=&#34;50px&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; TailwindCSS Based Admin Dashboard Template &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;ðŸ“Œ Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;AdminToolkit -&lt;/strong&gt; is a modern admin dashboard template that comes with a variety of useful features and functionalities. It is built using TailwindCSS, a popular CSS framework that provides a simple and intuitive approach to building responsive UIs. The template includes over 50 pre-built pages, each designed with a focus on usability and user experience. These pages cover a wide range of use cases, including dashboards, analytics, products management, user management, invoice management and more.&lt;/p&gt; &#xA;&lt;p&gt;In addition to its pre-built pages, &lt;strong&gt;AdminToolkit&lt;/strong&gt; comes with a wide range of UI components and utility classes. These include icons, buttons, tables, forms, and charts, among others. These components and utility classes are carefully designed to provide a seamless user experience, while also being highly customizable. This allows developers to create unique designs that match their brand identity and project requirements.&lt;/p&gt; &#xA;&lt;p&gt;Overall, &lt;strong&gt;AdminToolkit&lt;/strong&gt; is an excellent choice for developers who are looking for a developer-friendly and highly customizable admin dashboard template. Itâ€™s intuitive design, wide range of pre-built pages, useful UI components and utility classes make it the best choice for creating modern and responsive admin dashboards.&lt;/p&gt; &#xA;&lt;h2&gt;ðŸ“Œ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on Tailwindcss 3.x+&lt;/li&gt; &#xA; &lt;li&gt;Light &amp;amp; Dark theme support&lt;/li&gt; &#xA; &lt;li&gt;Auto-detect theme from user device preference&lt;/li&gt; &#xA; &lt;li&gt;Pre-built UI components&lt;/li&gt; &#xA; &lt;li&gt;Pre-built apps layout&lt;/li&gt; &#xA; &lt;li&gt;50+ Pages&lt;/li&gt; &#xA; &lt;li&gt;Responsive layout&lt;/li&gt; &#xA; &lt;li&gt;Easily Customizable&lt;/li&gt; &#xA; &lt;li&gt;Developer friendly&lt;/li&gt; &#xA; &lt;li&gt;Organized codebase&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ðŸ“Œ Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Clone the repository&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:mostafizurhimself/admintoolkit-html.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Install dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Start development server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Build for production&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;5. Preview production build&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ðŸ“Œ Contribution&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Create a new branch &lt;code&gt;git checkout -b new-branch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make changes&lt;/li&gt; &#xA; &lt;li&gt;Commit and push the changes&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ðŸ“Œ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mostafizurhimself/admintoolkit-html/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ðŸ“Œ Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; RTL support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Language Support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; React version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Vue version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Angular version&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Laravel version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/mostafizur&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-violet.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adoptium/aqa-tests</title>
    <updated>2023-05-28T01:39:34Z</updated>
    <id>tag:github.com,2023-05-28:/adoptium/aqa-tests</id>
    <link href="https://github.com/adoptium/aqa-tests" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Home of test infrastructure for Adoptium builds&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://adoptium.net/aqavit&#34;&gt; &lt;img src=&#34;https://adoptium.net/images/aqavit-light.png&#34; alt=&#34;Logo&#34; width=&#34;250&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/adoptium/aqa-tests/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Adoptium/aqa-tests&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adoptium/aqa-tests/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/adoptium/aqa-tests&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adoptium/aqa-tests/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/adoptium/aqa-tests&#34; alt=&#34;commit-activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adoptium/aqa-tests/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/adoptium/aqa-tests&#34; alt=&#34;closed-issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adoptium/aqa-tests/pulls?q=is%3Apr+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/adoptium/aqa-tests&#34; alt=&#34;closed-pr&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adoptium/aqa-tests/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/adoptium/aqa-tests&#34; alt=&#34;release-date&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://adoptium.net/slack/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?logo=slack&amp;amp;logoColor=white&#34; alt=&#34;slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/adoptium&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/adoptium?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Adoptium Testing&lt;/h1&gt; &#xA;&lt;h4&gt;Guide to the Test Jobs at Adoptium&lt;/h4&gt; &#xA;&lt;p&gt;For nightly and release builds, there are test jobs running as part of the Adoptium continuous delivery pipelines. There is a &lt;a href=&#34;https://blog.adoptopenjdk.net/2017/12/testing-java-help-count-ways&#34;&gt;blog post and brief presentation&lt;/a&gt; that explains what testing we run and how they fit into the overall delivery pipeline. As the world of testing at Adoptium is evolving and improving quickly, some documentation may fall behind the march of progress. Please let us know and help us keep it up-to-date, and ask questions at the &lt;a href=&#34;https://adoptium.slack.com/archives/C5219G28G&#34;&gt;Adoptium testing Slack channel&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adoptium/aqa-tests/master/doc/diagrams/ciPipeline.jpg&#34; alt=&#34;CI pipeline view&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Test &#39;Inventory&#39;&lt;/h4&gt; &#xA;&lt;p&gt;The directory structure in this aqa-tests repository is meant to reflect the different types of test we run (and pull from lots of other locations). The diagrams below show the test make target for each of the types, along with in-plan, upcoming additions (denoted by dotted line grey boxes). The provided links jump to test jobs in Jenkins (ci.adoptium.net).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD&#xA;    A[openjdk-tests] --&amp;gt;B[make _perf]&#xA;    A[openjdk-tests] --&amp;gt;C[make _openjdk]&#xA;    A[openjdk-tests] --&amp;gt;D[make _system]&#xA;    A[openjdk-tests] --&amp;gt;E[make _functional]&#xA;    A[openjdk-tests] --&amp;gt;F[make _jck]&#xA;    A[openjdk-tests] --&amp;gt;G[make _external]&#xA;    B[make _perf] --&amp;gt;|perf|H[performance]&#xA;    H[performance] --&amp;gt;|_sanity.perf|I[.....]&#xA;    H[performance] --&amp;gt;|_extended.perf|J[..]&#xA;    C[make _openjdk] --&amp;gt;|openjdk|K[openjdk]&#xA;    D[make _system] --&amp;gt;|system|L[system]&#xA;    E[make _functional] --&amp;gt;|functional|M[functional]&#xA;    F[make _jck] --&amp;gt;|jck|N[jck]&#xA;    G[make _external] --&amp;gt;|external|O[external]&#xA;    O[external] --&amp;gt;|_sanity.external|P[...]&#xA;    O[external] --&amp;gt;|_extended.external|Q[....] &#xA;    &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://ci.adoptium.net/view/Test_openjdk/&#34;&gt;openjdk&lt;/a&gt; tests - OpenJDK regression tests&lt;/h5&gt; &#xA;&lt;p&gt;Tests from OpenJDK&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://ci.adoptium.net/view/Test_system/&#34;&gt;system&lt;/a&gt; tests - System and load tests&lt;/h5&gt; &#xA;&lt;p&gt;Tests from the adoptium/aqa-systemtest repo&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://ci.adoptium.net/view/Test_external/&#34;&gt;external&lt;/a&gt; tests - 3rd party application tests&lt;/h5&gt; &#xA;&lt;p&gt;Test suites from a variety of applications, along with microprofile TCKs, run in Docker containers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD&#xA; A[openjdk-tests] --&amp;gt;|make _external| B[external]&#xA;    B --&amp;gt; C[derby]&#xA;    B --&amp;gt; D[elasticsearch]&#xA;    B --&amp;gt; E[example]&#xA;    B --&amp;gt; F[jenkins]&#xA;    B --&amp;gt; G[kafka]&#xA;    B --&amp;gt; H[lucene-solr]&#xA;    B --&amp;gt;|_sanity.external|I[scala]&#xA;    B --&amp;gt; J[tomcat]&#xA;    B --&amp;gt; K[wildfly]&#xA;    B --&amp;gt; L[openliberty]&#xA;    B --&amp;gt; M[geode]&#xA;    B --&amp;gt; N[hbase]&#xA;    B --&amp;gt; O[akka]&#xA;    B --&amp;gt; P[logstash]&#xA;    B --&amp;gt; Q[openliberty-mp-tck]&#xA;    B --&amp;gt;|_extended.external|R[payara-mp-tck]&#xA;    B --&amp;gt; S[thorntail-mp-tck]&#xA;   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://ci.adoptium.net/view/Test_perf/&#34;&gt;perf&lt;/a&gt; tests - Performance benchmark suites&lt;/h5&gt; &#xA;&lt;p&gt;Performance benchmark tests (both full suites and microbenches) from different open-source projects such as Acme-Air and adoptium/bumblebench&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD&#xA; A[openjdk-tests] --&amp;gt;|make _perf| B[performance]&#xA;    B --&amp;gt;|_sanity.perf| C[bbench]&#xA;    B --&amp;gt; D[idle_micro]&#xA;    B --&amp;gt; E[odm]&#xA;    B --&amp;gt;|_extended.perf| F[liberty_dt]&#xA;    B --&amp;gt; G[acme_air]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://ci.adoptium.net/view/Test_functional/&#34;&gt;functional&lt;/a&gt; tests - Unit and functional tests&lt;/h5&gt; &#xA;&lt;p&gt;Functional tests not originating from the openjdk regression suite, that include locale/language tests and a subset of implementation agnostic tests from the openj9 project.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;jck tests - Compliance tests&lt;/h5&gt; &#xA;&lt;p&gt;TCK tests (under the OpenJDK Community TCK License Agreement), in compliance with the license agreement. While this test material is currently not run at the Adoptium project (see the &lt;a href=&#34;https://adoptopenjdk.net/support.html#jck&#34;&gt;support statement&lt;/a&gt; for details), those with their own OCTLA agreements may use the Adoptium test automation infrastructure to execute their TCK test material in their own private Jenkins servers.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Guide to Running the Tests Yourself&lt;/h4&gt; &#xA;&lt;p&gt;For more details on how to run the same tests that we run at Adoptium on your laptop or in your build farm, please consult our &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/aqa-tests/master/doc/userGuide.md&#34;&gt;User Guide&lt;/a&gt; (work in progress).&lt;/p&gt; &#xA;&lt;h4&gt;What is our motivation?&lt;/h4&gt; &#xA;&lt;p&gt;We want:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;better, more flexible tests, with the ability to apply certain types of testing to different builds&lt;/li&gt; &#xA; &lt;li&gt;a common way to easily add, edit, group, include, exclude and execute tests on adoptium builds&lt;/li&gt; &#xA; &lt;li&gt;the latitude to use a variety of tests that use many different test frameworks&lt;/li&gt; &#xA; &lt;li&gt;test results to have a common look &amp;amp; feel for easier viewing and comparison&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are a great number of tests available to test a JVM, starting with the OpenJDK regression tests. In addition to running the OpenJDK regression tests, we will increase the amount of testing and coverage by pulling in other open tests. These new tests are not necessarily written using the jtreg format.&lt;/p&gt; &#xA;&lt;p&gt;Why the need for other testing? The OpenJDK regression tests are a great start, but eventually you may want to be able to test how performant is your code, and whether some 3rd party applications still work. We will begin to incorporate more types of testing, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;additional API and functional tests&lt;/li&gt; &#xA; &lt;li&gt;stress/load tests&lt;/li&gt; &#xA; &lt;li&gt;system level tests such as 3rd party application tests&lt;/li&gt; &#xA; &lt;li&gt;performance tests&lt;/li&gt; &#xA; &lt;li&gt;TCK tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The test infrastructure in this repository allows us to lightly yoke a great variety of tests together to be applied to testing the adoptium binaries. By using an intentionally thin wrapper around a varied set of tests, we can more easily run all types of tests via make targets and as stages in our Jenkins CI pipeline builds.&lt;/p&gt; &#xA;&lt;h4&gt;How can you help?&lt;/h4&gt; &#xA;&lt;p&gt;You can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;browse through the &lt;a href=&#34;https://github.com/adoptium/aqa-tests/issues&#34;&gt;aqa-tests issues list&lt;/a&gt;, select one, add a comment to claim it and ask questions&lt;/li&gt; &#xA; &lt;li&gt;browse through the &lt;a href=&#34;https://github.com/adoptium/aqa-systemtest/issues&#34;&gt;aqa-systemtest issues&lt;/a&gt; or &lt;a href=&#34;https://github.com/adoptium/stf/issues&#34;&gt;stf issues&lt;/a&gt;, claim one with a comment and dig right in&lt;/li&gt; &#xA; &lt;li&gt;triage live test jobs at &lt;a href=&#34;https://ci.adoptium.net&#34;&gt;ci.adoptium.net&lt;/a&gt;, check out the &lt;a href=&#34;https://github.com/adoptium/aqa-tests/raw/master/doc/Triage.md&#34;&gt;triage doc&lt;/a&gt; for guidance &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if you would like to regularly triage test jobs, you can optionally &#39;sign up for duty&#39; via the &lt;a href=&#34;https://github.com/adoptium/aqa-tests/wiki/AdoptOpenJDK-Test-Triage-Rotas&#34;&gt;triage rotas&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ask questions in the &lt;a href=&#34;https://adoptium.slack.com/archives/C5219G28G&#34;&gt;#testing channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>