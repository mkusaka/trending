<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T01:37:42Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cdfmlr/muvtuber</title>
    <updated>2023-07-01T01:37:42Z</updated>
    <id>tag:github.com,2023-07-01:/cdfmlr/muvtuber</id>
    <link href="https://github.com/cdfmlr/muvtuber" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Makes your AI vtuber&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;muvtuber&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cdfmlr/muvtuber/main/README-EN.md&#34;&gt;README in English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Makes your AI vtuber.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;让 AI 成为虚拟主播：看懂弹幕，妙语连珠，悲欢形于色，以一种简单的实现&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cdfmlr/muvtuber/main/attachments/obs.png&#34; alt=&#34;obs&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不定期的测试直播：&lt;a href=&#34;http://live.bilibili.com/26949229&#34;&gt;http://live.bilibili.com/26949229&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;QQ 交流群：569686683&lt;/li&gt; &#xA; &lt;li&gt;介绍文章：&lt;a href=&#34;https://zhuanlan.zhihu.com/p/609878670&#34;&gt;知乎 - 写个AI虚拟主播：看懂弹幕，妙语连珠，悲欢形于色，以一种简单的实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;We&#39;re currently developing this project for the Chinese Bilibili platform. We&#39;re still working on integrating it with YouTube, Twitch, and other platforms. Stay tuned for updates, and we welcome your contributions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[TOC]&lt;/p&gt; &#xA;&lt;h2&gt;项目构成&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cdfmlr/muvtuber/main/attachments/muvtuber-impl.png&#34; alt=&#34;muvtuber-impl&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;服务&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;基于&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/blivechat/tree/muvtuber&#34;&gt;blivechat&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;获取直播间弹幕消息。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xfgryujk/blivechat&#34;&gt;xfgryujk/blivechat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/live2dview&#34;&gt;Live2dView&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;前端：显示 &lt;a href=&#34;https://www.live2d.com/en/&#34;&gt;Live2D&lt;/a&gt; 模型&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/guansss/pixi-live2d-display&#34;&gt;guansss/pixi-live2d-display&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/live2ddriver&#34;&gt;Live2dDriver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;驱动前端 Live2D 模型动作表情&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/chatgpt_chatbot&#34;&gt;ChatGPTChatbot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;基于 &lt;a href=&#34;https://chat.openai.com&#34;&gt;ChatGPT&lt;/a&gt; 的优质聊天机器人&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;acheong08/ChatGPT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/musharing_chatbot&#34;&gt;MusharingChatbot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;基于 &lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;ChatterBot&lt;/a&gt; 的简单聊天机&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RaSan147/ChatterBot_update&#34;&gt;RaSan147/ChatterBot_update&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/musharing-team/chatbot_api&#34;&gt;musharing-team/chatbot_api&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/murchinroom/emotext&#34;&gt;Emotext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;中文文本情感分析&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/murecom-verse-1&#34;&gt;cdfmlr/murecom-verse-1&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/externalsayer&#34;&gt;externalsayer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;调用公开的 API （external API）进行 TTS 文本语音合成。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://azure.microsoft.com/zh-cn/products/cognitive-services/text-to-speech/&#34;&gt;Azure: TTS&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/audioview&#34;&gt;audioview&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;基于 Web 的音频播放。用于从 docker 中输出音频到 OBS&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/muvtuberdriver&#34;&gt;muvtuberdriver&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;组装各模块，驱动整个流程&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;非服务模块：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;模块&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cdfmlr/muvtuber-proto&#34;&gt;muvtuber-proto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;proto 定义&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/murchinroom/sayerapigo&#34;&gt;sayerapigo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go 语言的 Sayer (TTS) 接口服务端+客户端框架&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/murchinroom/chatbotapipy&#34;&gt;chatbotapipy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python 语言的 Chatbot API 服务端框架&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;v0.3.0 版本已实现了完全 Docker 化，所以应该支持任意常用操作系统了。现在只需要几个命令即可启动整个项目：&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 Docker 以及 Docker Compose。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;拉取代码：&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 拉取代码&#xA;git clone --recursive https://github.com/cdfmlr/muvtuber.git&#xA;cd muvtuber&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ 由于使用了 git 子模块，一定要递归拉取。不能下载 zip，或不带 &lt;code&gt;--recursive&lt;/code&gt; 参数的 clone。&lt;/p&gt; &#xA;&lt;p&gt;🚧 默认的 main 分支是开发中的最新版本，不保证能运行。请使用打了 tag 个版本：&lt;a href=&#34;https://github.com/cdfmlr/muvtuber/tags&#34;&gt;点这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;修改配置：（详见 &lt;a href=&#34;https://raw.githubusercontent.com/cdfmlr/muvtuber/main/#%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3&#34;&gt;配置详解&lt;/a&gt;）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;vim docker-compose.yml&#xA;# 按照你的实际情况修改 HTTP_PROXY、HTTPS_PROXY 的值&#xA;# 如果不需要，直接删掉就行。&#xA;&#xA;vim configs/externalsayer/config.yaml&#xA;# 配置 TTS 文本语音合成: &#xA;# 配置 azure 语音合成服务的 key、region 和 role (SSML 模板)&#xA;&#xA;vim configs/muvtuberdriver/config.yaml&#xA;# 主程序的配置:&#xA;# 你的房间号（roomid）、ChatGPT 的 apiKey 以及 initialprompt.&#xA;# 各种 server 的地址都不用改，已经配合 docker-compose.yml 设好了.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;启动服务：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker compose up -d      # 自动下载或构建、启动各种服务&#xA;&#xA;# docker compose ps       # 查看服务状态&#xA;# docker compose logs -f  # 查看日志（Ctrl+C 停止）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以直接从 Docker Hub 拉取镜像啦 🎉 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;在 v0.3.5 中，加入了 CI 机制。所有 Docker 镜像均由 GitHub Actions 自动构建，并推送到 Docker Hub （ &lt;a href=&#34;https://hub.docker.com/u/murchinroom&#34;&gt;murchinroom/xxx&lt;/a&gt;）。&lt;/li&gt; &#xA;   &lt;li&gt;镜像较多，请保持网络通畅。在较差的网络情况下测试（校园网直连 Docker Hub），需要约 252.4s 拉取全部镜像。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;亦可在本地自行构建各种镜像： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;请确保网络环境能访问 Docker Hub 和 GitHub.&lt;/li&gt; &#xA;   &lt;li&gt;在中国大陆或其他网络环境受限的地区，请使用 &lt;code&gt;Dockerfile&lt;/code&gt;。其他地区推荐使用 &lt;code&gt;gh.Dockerfile&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;请保证至少有 1 GB 可用硬盘空间。&lt;/li&gt; &#xA; &lt;li&gt;如果遇到问题，可以先看一看 &lt;a href=&#34;https://raw.githubusercontent.com/cdfmlr/muvtuber/main/#Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;配置 OBS，开始直播：（下面三个都是新建浏览器源） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;主播 Live2DView：&lt;code&gt;http://localhost:51070/#/?driver=ws://localhost:51071/live2d&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;语音 AudioView：&lt;code&gt;http://127.0.0.1:51082/?controller=ws://127.0.0.1:51081/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;弹幕 Blivechat：先用浏览器打开 &lt;a href=&#34;http://localhost:51060%EF%BC%8C%E6%8C%89%E9%9C%80%E9%85%8D%E7%BD%AE%EF%BC%8C%E7%84%B6%E5%90%8E%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E9%93%BE%E6%8E%A5%E5%92%8C%E6%A0%B7%E5%BC%8F%E3%80%82&#34;&gt;http://localhost:51060，按需配置，然后复制粘贴链接和样式。&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;配置详解&lt;/h2&gt; &#xA;&lt;h3&gt;网络环境配置&lt;/h3&gt; &#xA;&lt;p&gt;If you can access ChatGPT (api.openai.com) directly, please remove all lines about &lt;code&gt;HTTP(S)_PROXY&lt;/code&gt; in the &lt;code&gt;doccker-compose.yml&lt;/code&gt; and skip following steps.&lt;/p&gt; &#xA;&lt;p&gt;如果你的网络环境不好，直连 GitHub 和 ChatGPT 有困难，就需要做一些代理配置。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;预先条件：你拥有一个可以让网络变好的魔法道具（行业黑话：代理）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;在你的代理设置中（可能还藏的比较深，如高级设置中），可以找到类似「本机 http 监听端口」之类的值，下面假设这个值为 &lt;code&gt;http://0.0.0.0:1000&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;接下来根据你的实际情况：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;你使用 Docker Desktop：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;在 Docker Desktop 里 Settings -&amp;gt; Resources -&amp;gt; Proxies 设置代理地址（宿主机以太网下的本地 IPv4 地址+代理软件设置的端口）&lt;/li&gt; &#xA;   &lt;li&gt;把 &lt;code&gt;doccker-compose.yml&lt;/code&gt; 文件中的有关 proxy 的内容注释掉或删除。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;（这个方法在 Windows 和 macOS 下验证可用，详见 &lt;a href=&#34;https://github.com/cdfmlr/muvtuber/issues/51#issuecomment-1579220195&#34;&gt;#51&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/cdfmlr/muvtuber/issues/30&#34;&gt;#30&lt;/a&gt; 的讨论，感谢 &lt;a href=&#34;https://github.com/RAINighty&#34;&gt;@RAINighty&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/JackChow6&#34;&gt;@JackChow6&lt;/a&gt; 的帮助。）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;你使用 Docker 服务器环境或 Colima 之类的其他容器运行环境：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; 中：&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  chatgpt_chatbot:&#xA;    ...&#xA;    environment:&#xA;      - HTTP_PROXY=http://host.docker.internal:1000&#xA;      - HTTPS_PROXY=http://host.docker.internal:1000&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;请按照自己的实际情况，替换掉端口号 &lt;code&gt;1000&lt;/code&gt;。也有可能需要将 &lt;code&gt;host.docker.internal&lt;/code&gt; 修改为容器眼里宿主机的 IP，具体要看你的运行时是否为你提供了一个容器访问宿主的域名或地址。如果你发现操作中有困难无法解决，建议尝试 Docker Desktop。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;externalsayer 配置详解&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;这里将配置使用免费、高质量的 Azure 的 TTS 服务。（目前也只支持这一种。） 该服务的介绍: &lt;a href=&#34;https://azure.microsoft.com/zh-cn/products/cognitive-services/text-to-speech/&#34;&gt;https://azure.microsoft.com/zh-cn/products/cognitive-services/text-to-speech/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;这一块的配置在 &lt;code&gt;configs/externalsayer/config.yaml&lt;/code&gt; 中：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;SrvAddr: &#34;localhost:50010&#34;&#xA;EnabledSayer: &#34;azure&#34;&#xA;AzureSayer:&#xA;  SpeechKey: &#34;your-key&#34;&#xA;  SpeechRegion: &#34;eastus&#34;&#xA;  FormatMicrosoft: &#34;audio-16khz-32kbitrate-mono-mp3&#34;&#xA;  FormatMimeSubtype: &#34;mp3&#34;&#xA;  Roles:&#xA;    &#34;default&#34;: &#39;&amp;lt;speak version=&#34;1.0&#34; xml:lang=&#34;zh-CN&#34;&amp;gt;&amp;lt;voice name=&#34;zh-CN-XiaoxiaoNeural&#34;&amp;gt;{{.}}&amp;lt;/voice&amp;gt;&amp;lt;/speak&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;你需要更改：SpeechKey, SpeechRegion 以及 Roles。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SpeechKey, SpeechRegion： 你在 Azure 上申请的 TTS 服务的 key 和 region。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;具体的申请流程可以参考文档：&lt;a href=&#34;https://learn.microsoft.com/zh-CN/azure/cognitive-services/speech-service/get-started-text-to-speech&#34;&gt;快速入门：将文本转换为语音&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Roles：&lt;code&gt;&amp;lt;voice name=&#34;xx-XX-Xxx&#34;&amp;gt;&lt;/code&gt;这里的 name 应该填写 voice，即“发音人”的名字。具体的列表可以通过以下命令获取：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl https://eastus.tts.speech.microsoft.com/cognitiveservices/voices/list --header &#39;Ocp-Apim-Subscription-Key: xxx&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;我把请求的结果格式化放到了这个文件里，方便查找：&lt;a href=&#34;https://github.com/cdfmlr/externalsayer/raw/23e32a07de224d6ac19cf3aee0575a3e81e9836a/azuresayer/voices/voices-list.json&#34;&gt;&lt;code&gt;externalsayer/azuresayer/voices /voices-list.json&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;你可以在网页上的「&lt;a href=&#34;https://aka.ms/speechstudio/voicegallery&#34;&gt;Speech Studio&lt;/a&gt;」里试听、选择声音。然后在文件里找到对应 voice 的 &lt;code&gt;&#34;ShortName&#34;: &#34;xx-XX-Xxx&#34;&lt;/code&gt; 填写到 &lt;code&gt;&amp;lt;voice name=&#34;xx-XX-Xxx&#34;&amp;gt;&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;🌟 更推荐的一种方式是，在「&lt;a href=&#34;https://aka.ms/speechstudio/voicegallery&#34;&gt;Speech Studio&lt;/a&gt;」中随便写点内容，选择声音让它说，并微调各种参数，满意之后，把 SSML 导出出来，把内容替换为 &lt;code&gt;{{.}}&lt;/code&gt;，去掉换行（我写了个脚本帮助做这件事，&lt;a href=&#34;https://github.com/cdfmlr/externalsayer/tree/23e32a07de224d6ac19cf3aee0575a3e81e9836a/azuresayer/voices&#34;&gt;可以点这里找到&lt;/a&gt;）写到配置里。&lt;/p&gt; &#xA;&lt;h3&gt;OBS 配置详解&lt;/h3&gt; &#xA;&lt;p&gt;给新手的 OBS 配置详解：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;虚拟形象（Live2DView）：来源 &amp;gt; &lt;code&gt;+&lt;/code&gt; &amp;gt; 浏览器 &amp;gt; 新建 &amp;gt; URL: &lt;a href=&#34;http://localhost:9000/#/&#34;&gt;http://localhost:9000/#/&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;注意把「通过 OBS 控制音频」勾上哦，然后把那条声音关掉，不然有机会听到可爱捏鬼畜日语。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;弹幕框（blivechat）：来源 &amp;gt; &lt;code&gt;+&lt;/code&gt; &amp;gt; 浏览器 &amp;gt; 新建 &amp;gt; URL: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;先用浏览器打开 &lt;a href=&#34;http://localhost:12450&#34;&gt;http://localhost:12450&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;首页 &amp;gt; 房间号：设置为你的房间号 &amp;gt; 进入房间&lt;/li&gt; &#xA;   &lt;li&gt;弹出的窗口 -&amp;gt; 拷贝地址&lt;/li&gt; &#xA;   &lt;li&gt;粘贴到 OBS 的 URL&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;主播说话的音频（audioview）： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;来源 &amp;gt; &lt;code&gt;+&lt;/code&gt; &amp;gt; 浏览器 &amp;gt; 新建 &amp;gt; URL&lt;/li&gt; &#xA;   &lt;li&gt;填入 &lt;code&gt;http://127.0.0.1:51082/?controller=ws://127.0.0.1:51081/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;建议把「通过 OBS 控制音频」勾上，方便按需调节音量。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;其他音频（BGM）：来源 &amp;gt; &lt;code&gt;+&lt;/code&gt; &amp;gt;音频输入采集 &amp;gt; 新建 &amp;gt; 设备：BlackHole 2ch &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;要先安装一个虚拟声卡，这里以 mac 系统使用 &lt;a href=&#34;https://github.com/ExistentialAudio/BlackHole&#34;&gt;BlackHole&lt;/a&gt; 为例。&lt;/li&gt; &#xA;   &lt;li&gt;在开始直播前，控制中心 &amp;gt; 声音&amp;gt; 右边 AirPlay 图标 &amp;gt; 选 BlackHole。&lt;/li&gt; &#xA;   &lt;li&gt;然后电脑输出的声音就会 -&amp;gt; BlackHole -&amp;gt; OBS。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;B 站推流：设置（Preferences）&amp;gt; 直播 &amp;gt; 服务：选 &lt;code&gt;Bilibili Live ...&lt;/code&gt;，推流码填「B 站首页 &amp;gt; 头像 &amp;gt; 推荐服务 &amp;gt; 直播中心 &amp;gt; 左侧“我的直播间”&amp;gt; 填好直播分类、房间标题 &amp;gt; 开始直播，然后会显示的串流密钥」&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;暂无。&lt;/p&gt; &#xA;&lt;h2&gt;配置开发环境&lt;/h2&gt; &#xA;&lt;p&gt;目前仍不支持用 docker 作为开发环境。需要在本地开发，然后 docker 构建部署。&lt;/p&gt; &#xA;&lt;p&gt;-1. 本地开发环境：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ uname -mrs&#xA;Darwin 22.3.0 arm64&#xA;# 目前 TTS 模块还依赖于 macOS，其他系统可能不行。&#xA;$ go version  &#xA;go version go1.20.1 darwin/arm64&#xA;$ python3 --version&#xA;Python 3.9.16  # blivechat&#xA;Python 3.10.10 # others&#xA;$ poetry --version&#xA;Poetry (version 1.4.0)&#xA;$ node --version&#xA;v18.14.2&#xA;$ pyenv --version&#xA;pyenv 2.3.14&#xA;$ pnpm --version&#xA;7.29.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Node.js 和 Python 的包管理配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 前端统一使用 pnpm (珍爱硬盘，远离 npm)&#xA;pnpm config set auto-install-peers true -g&#xA;# python统一使用 pyenv + poetry&#xA;poetry config virtualenvs.prefer-active-python true&#xA;poetry config virtualenvs.in-project true  # 只是个人的保守偏好&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;现在可用 git submodule 一次性拉取整个项目，无需手动 clone 各个模块了:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recursive https://github.com/cdfmlr/muvtuber.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;接下来编译运行各个模块，可以预先开 7 个终端页，然后：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/blivechat/tree/muvtuber&#34;&gt;blivechat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd blivechat&#xA;&#xA;# 编译前端&#xA;cd frontend&#xA;pnpm install&#xA;pnpm run build&#xA;cd ..&#xA;&#xA;# 运行服务&#xA;pyenv local 3.9.16&#xA;poetry install&#xA;poetry run python main.py&#xA;# 服务运行在 http://localhost:12450，会自动在默认浏览器打开&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/emotext&#34;&gt;Emotext&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd emotext&#xA;&#xA;pyenv local 3.10.10&#xA;poetry install&#xA;poetry run python emotext/httpapi.py --port 9003&#xA;# emotext server: http://localhost:9003&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/chatgpt_chatbot&#34;&gt;ChatGPTChatbot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd chatgpt_chatbot&#xA;&#xA;pyenv local 3.10.10&#xA;poetry install&#xA;poetry run python chatgpt&#xA;# ChatGPTChatbot gRPC server: localhost:50052&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/musharing_chatbot&#34;&gt;MusharingChatbot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd musharing_chatbot&#xA;&#xA;pyenv local 3.10.10&#xA;poetry install&#xA;poetry run python -m spacy download en_core_web_sm  # 一个执行不到的依赖，但是不装跑不起来。&#xA;PYTHONPATH=$PYTHONPATH:. poetry run python musharing_chatbot&#xA;# MusharingChatbot gRPC server: localhost:50051&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/live2ddriver&#34;&gt;Live2dDriver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#git clone https://github.com/cdfmlr/live2ddriver.git&#xA;cd live2ddriver&#xA;&#xA;go run . -shizuku localhost:9004 -verbose&#xA;# live2d shizuku driver: localhost:9004&#xA;# websocket message forwarder: localhost:9001 # 前端会连这个&#xA;&#xA;# 不开发该模块也可以 build 出来再运行&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/live2dview&#34;&gt;Live2dView&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#git clone https://github.com/cdfmlr/live2dview.git&#xA;cd live2dview&#xA;&#xA;pnpm install&#xA;pnpm exec quasar dev&#xA;# 浏览器访问: 调试(戏)页: http://localhost:9000/#/debug&#xA;# 生产环境: OBS 添加浏览器源: http://localhost:9000/&#xA;&#xA;# 如果不开发这个模块可以 build &amp;amp; serve:&#xA;pnpm exec quasar build&#xA;httpstatic -d dist/spa/ -l :9000  # 你的某种静态网页服务工具，如 python -m http.server，如果开发环境最好有宽松的 CROS。这里用的是 https://github.com/cdfmlr/tools/#httpstatic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;audioview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd audioview&#xA;&#xA;pnpm install&#xA;pnpm run dev&#xA;# pnpm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/externalsayer&#34;&gt;externalsayer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd externalsayer&#xA;&#xA;go run . -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/muvtuberdriver&#34;&gt;muvtuberdriver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;muvtuberdriver 必须在前面所有服务正确启动后才能启动，否则会 panic 退出。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#git clone https://github.com/cdfmlr/muvtuberdriver.git&#xA;cd muvtuberdriver&#xA;&#xA;go run . -c config.yaml&#xA;# chatgpt_access_token: 浏览器访问https://chat.openai.com/api/auth/session获取&#xA;# roomid 你的 b 站直播间 id，https://live.bilibili.com/000000?... 中的000000&#xA;&#xA;# 不开发该模块也可以 build 出来再运行&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;OBS&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install obs&#xA;# 或：https://obsproject.com&#xA;&#xA;# 启动 OBS，设置：&#xA;# - blivechat 的弹幕框：localhost:12450/...&#xA;# - Live2DView：localhost:9000&#xA;# - 音频（say）的输出：你使用的音频设备&#xA;# 【开始直播】&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;本地构建镜像&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;从 v0.3.5 开始，本项目各个服务模块均采用 GitHub Actions 自动完成镜像构建、推送，终端用户直接从 Docker Hub 拉取镜像即可。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;如果出于开发或其他理由，需要手动构建镜像的话：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd muvtuberdriver   # 或其他服务&#xA;docker build -t cdfmlr/muvtuber-muvtuberdriver:v0.0.12-alpha.0 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠️ The default &lt;code&gt;Dockerfile&lt;/code&gt; is designed for Chinese mainland users. Please use &lt;code&gt;gh.Dockerfile&lt;/code&gt; instead if you are in other regions.&lt;/li&gt; &#xA; &lt;li&gt;💥 构建 musharing_chatbot 镜像时如果出现 ProxyError，或者 &lt;code&gt;Cannot connect to proxy: Name or service not known.&lt;/code&gt;，之类的网络代理问题，请参考 [#网络环境配置] 修改 musharing_chatbot/Dockerfile 中的代理设置。这个东西必须访问 GitHub，如果你的网络环境不允许直接访问 GitHub，可以使用代理。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;然后在 &lt;code&gt;docker-compose.yml&lt;/code&gt; 里将对应镜像修改成新构建镜像的 tag 即可。&lt;/p&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用前文的 docker compose 方式部署。不再提供散装微服务的部署文档了。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;我（个人/商业/以及任意情况）可以使用这个项目嘛？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以。在 MIT 协议下开放源代码，没有任何限制。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Permissions：✅ Commercial use ✅ Modification ✅ Distribution ✅ Private use&lt;/li&gt; &#xA;   &lt;li&gt;Limitations：❌ Liability ❌ Warranty&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;在 Microsoft Windows 系统中可以运行嘛？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以。v0.3.0 完成了完全 Docker 化，只要宿主机能装 docker 就行：所有服务都跑在容器中，所有客户端都是浏览器（可以嵌入 OBS）。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;作者寻求合作嘛？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ 你要和我一起写代码（贡献）&lt;/li&gt; &#xA; &lt;li&gt;✅ 你要给我钱让我写我想写的东西（捐赠）&lt;/li&gt; &#xA; &lt;li&gt;❌ 你要给我钱让我写你想要的东西（外包） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;非常抱歉，我的时间精力和能力有限。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;为何如此复杂？|| 这个项目的意义是什么？&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just for fun.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cdfmlr/muvtuber/issues&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/users/cdfmlr/projects/3&#34;&gt;project-muvtuber&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开放源代码&lt;/h2&gt; &#xA;&lt;p&gt;所有下属项目除非特别说明，一律在 MIT 协议下开放源代码。&lt;/p&gt; &#xA;&lt;p&gt;欢迎任何有关 Issue 问题、PR 贡献以及讨论。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rigtorp/awesome-modern-cpp</title>
    <updated>2023-07-01T01:37:42Z</updated>
    <id>tag:github.com,2023-07-01:/rigtorp/awesome-modern-cpp</id>
    <link href="https://github.com/rigtorp/awesome-modern-cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of resources on modern C++&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Awesome Modern C++&lt;/h1&gt; &#xA;&lt;p&gt;A collection of resources on modern C++.&lt;/p&gt; &#xA;&lt;p&gt;The goal is to collect a list of resources to help people learn about and leverage modern C++11 and beyond.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To add, remove or change things on the list: &lt;a href=&#34;https://github.com/rigtorp/awesome-modern-cpp&#34;&gt;please submit a pull request to the GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Tour-2nd-Depth-Bjarne-Stroustrup/dp/0134997832/&#34;&gt;A Tour of C++&lt;/a&gt; (Bjarne Stroustrup) [C++11/17/20]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/0321958322&#34;&gt;The C++ Programming Language&lt;/a&gt; (Bjarne Stroustrup) [C++11]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/1491903996&#34;&gt;Effective Modern C++&lt;/a&gt; (Scott Meyers) [C++11/14]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.artima.com/shop/overview_of_the_new_cpp&#34;&gt;Overview of the New C++&lt;/a&gt; (Scott Meyers) [C++11/14]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/isocpp/CppCoreGuidelines&#34;&gt;C++ Core Guidelines&lt;/a&gt; (Bjarne Stroustrup, Herb Sutter) [C++11/14/17] - Guidelines for using modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cplusplusconcurrencyinaction.com&#34;&gt;C++ Concurrency in Action&lt;/a&gt; (Anthony Williams) [C++11/14/17] - Reference and guide to writing multi-threaded code with standard C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cppstd17.com/&#34;&gt;C++17 - The Complete Guide&lt;/a&gt; (Nicolai M. Josuttis) [C++17] - Giving guidance on how to use Language and Library Features of C++17.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crascit.com/professional-cmake/&#34;&gt;Professional CMake&lt;/a&gt; (Craig Scott) - A practical guide for using CMake to build your C++ projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://changkun.de/modern-cpp/&#34;&gt;Modern C++ Tutorial: C++ 11/14/17/20 On the Fly&lt;/a&gt; (Changkun Ou) - The book claims to be &#34;On the Fly&#34;. Its intent is to provide a comprehensive introduction to the relevant features regarding modern C++ (before 2020s).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a comprehensive guide to C++ books see the &lt;a href=&#34;https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list&#34;&gt;Stackoverflow Definitive C++ Book Guide and List&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Find the latest C++ news and updates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://isocpp.org/&#34;&gt;News, Status &amp;amp; Discussion about Standard C++&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Listen to the latest C++ podcasts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cppcast.com/&#34;&gt;CppCast&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/channel/UCuCjADS4u3uJDTqUaG0H9dA&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/cppcast&#34;&gt;Twitter&lt;/a&gt;) - The first podcast by C++ developers for C++ developers!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cpp.chat/&#34;&gt;Cpp.chat&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/channel/UCsefcSZGxO9lTBqFbsV3sJg/featured&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/cppchat&#34;&gt;Twitter&lt;/a&gt;) - Comments on c++ and issues of interest to c++ programmers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/playlist?list=PLs3KjaCtOwSZ2tbuV1hx8Xz-rFZTan2J1&#34;&gt;C++ Weekly&lt;/a&gt; - Educational videos by Jason Turner.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read the latest C++ standard proposals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/&#34;&gt;C++ Standards Committee Papers&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Discuss everything related to C++:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/cpp/&#34;&gt;r/cpp&lt;/a&gt; - The C++ subreddit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cppalliance.org/slack/&#34;&gt;C++ Slack&lt;/a&gt; - The C++ Slack workspace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/corehard_by&#34;&gt;CoreHard Telegram group&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ask your C++ questions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/cpp_questions&#34;&gt;r/cpp_questions&lt;/a&gt; - A subreddit for C++ questions and answers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b&#34;&gt;Stackoverflow C++&lt;/a&gt; / &lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b11&#34;&gt;C++11&lt;/a&gt; / &lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b14&#34;&gt;C++14&lt;/a&gt; / &lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b17&#34;&gt;C++17&lt;/a&gt; / &lt;a href=&#34;https://stackoverflow.com/questions/tagged/c%2b%2b20&#34;&gt;C++20&lt;/a&gt; - Stackoverflow questions about C++.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Maybe your question was already answered in a FAQ?:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://isocpp.org/faq&#34;&gt;C++ Super-FAQ&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.stroustrup.com/C++11FAQ.html&#34;&gt;C++11 FAQ&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Go to one of the many C++ conferences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://isocpp.org/wiki/faq/conferences-worldwide&#34;&gt;List of upcoming and past C++ conferences&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find C++ user groups:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meetingcpp.com/usergroups/&#34;&gt;Meeting C++ list of user groups&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://isocpp.org/wiki/faq/user-groups-worldwide&#34;&gt;List of user groups in the C++ Super-FAQ&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.meetup.com/topics/c/&#34;&gt;C/C++ meetups&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Search for channels starting with &lt;code&gt;#ug&lt;/code&gt; in the &lt;a href=&#34;https://cppalliance.org/slack/&#34;&gt;C++ Slack&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Talks&lt;/h3&gt; &#xA;&lt;p&gt;TODO curate list of good talks on how to simplify code using C++11/17/20 features&lt;/p&gt; &#xA;&lt;p&gt;Start with &lt;a href=&#34;https://blog.cjdb.xyz/sg20-and-videos.html&#34;&gt;SG20 Education and Recommended Videos for Teaching C++&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/CppCon/videos&#34;&gt;CppCon Talks&lt;/a&gt; - Talks from the C++ Conference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=nesCaocNjtQ&#34;&gt;CppCon 2014: Bjarne Stroustrup &#34;Make Simple Tasks Simple!&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=c1gO9aB9nbs&#34;&gt;CppCon 2014: Herb Sutter &#34;Lock-Free Programming (or, Juggling Razor Blades), Part I&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CmxkPChOcvw&#34;&gt;CppCon 2014: Herb Sutter &#34;Lock-Free Programming (or, Juggling Razor Blades), Part II&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wQxj20X-tIU&#34;&gt;CppCon 2014: Scott Meyers &#34;Type Deduction and Why You Care&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1OEu9C51K2A&#34;&gt;CppCon 2015: Bjarne Stroustrup &#34;Writing Good C++14&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=hEx5DNLWGgA&#34;&gt;CppCon 2015: Herb Sutter &#34;Writing Good C++14... By Default&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/yG1OZ69H_-o&#34;&gt;CppCon 2016: Chandler Carruth “Garbage In, Garbage Out: Arguing about Undefined Behavior...&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/JfmTagWcqoE&#34;&gt;CppCon 2016: Herb Sutter &#34;Leak-Freedom in C++... By Default.&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=nnY4e4faNp0&#34;&gt;CppCon 2017: Jason Turner &#34;Practical C++17&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2olsGf6JIkU&#34;&gt;CppCon 2018: Jonathan Boccara “105 STL Algorithms in Less Than an Hour”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WDIkqP4JbkE&#34;&gt;code::dive conference 2014 - Scott Meyers: Cpu Caches and Why You Care&lt;/a&gt; (&lt;a href=&#34;https://www.aristeia.com/TalkNotes/codedive-CPUCachesHandouts.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vrfYLlR8X8k&#34;&gt;code::dive conference 2015 - Andrei Alexandrescu - Writing Fast Code I&lt;/a&gt; (&lt;a href=&#34;https://cdn2-ecros.pl/event/codedive/files/presentations/2015/FastCode-handouts.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9tvbz8CSI8M&#34;&gt;code::dive conference 2015 - Andrei Alexandrescu - Writing Fast Code II&lt;/a&gt; (&lt;a href=&#34;https://cdn2-ecros.pl/event/codedive/files/presentations/2015/FastCode-handouts.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/BoostCon/playlists&#34;&gt;C++Now Talks&lt;/a&gt; - Talks from the C++Now conference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_zgq6_zFNGY&#34;&gt;Going Native 2012: Variadic Templates are Funadic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AKtHxKJRwp4&#34;&gt;Going Native 2013: Stephan T Lavavej - &#34;Don&#39;t Help the Compiler&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qH6sSOr-yk8&#34;&gt;Going Native 2013: Sean Parent - &#34;C++ Seasoning&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Blogs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://akrzemi1.wordpress.com/&#34;&gt;Andrzej&#39;s C++ blog&lt;/a&gt; - Guidelines and thoughts about C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.justsoftwaresolutions.co.uk/blog/&#34;&gt;Anthony Williams&#39; blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.regehr.org/&#34;&gt;Embedded in Academia&lt;/a&gt; - John Regehr, Professor of Computer Science, University of Utah, USA.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ericniebler.com/&#34;&gt;Eric Niebler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fluentcpp.com/&#34;&gt;Fluent C++&lt;/a&gt; - Expressive Code in C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://herbsutter.com/gotw/&#34;&gt;Guru of the Week (new posts)&lt;/a&gt; - A regular series of C++ programming problems created and written by Herb Sutter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.gotw.ca/gotw/&#34;&gt;Guru of the Week (older posts)&lt;/a&gt; - Older Guru of the Week posts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cplusplusmusings.wordpress.com/&#34;&gt;Marshall&#39;s C++ Musings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pfultz2.com/blog/&#34;&gt;Paul Fultz II&#39;s Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://preshing.com/&#34;&gt;Preshing on Programming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arne-mertz.de/&#34;&gt;Simplify C++&lt;/a&gt; - Write clean and maintainable C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.feabhas.com/&#34;&gt;Sticky Bits&lt;/a&gt; - A blog looking at developing software for real-time and embedded systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://herbsutter.com/&#34;&gt;Sutter&#39;s Mill&lt;/a&gt; - Herb Sutter on software development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scottmeyers.blogspot.com/&#34;&gt;The View from Aristeia&lt;/a&gt; -Scott Meyers&#39; Professional Activities and Interests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/vcblog/&#34;&gt;Visual C++ Team Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.elbeno.com/blog/&#34;&gt;Why is a raven like a writing desk?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Websites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lefticus.gitbooks.io/cpp-best-practices/content/&#34;&gt;C++ Best Practices&lt;/a&gt; - Collaborative Collection of C++ Best Practices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cpppatterns.com/&#34;&gt;C++ Patterns&lt;/a&gt; - A repository of modern C++ patterns.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/&#34;&gt;C++ reference&lt;/a&gt;🔥 - C++ reference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cbyexample.com&#34;&gt;C++ By Example&lt;/a&gt; - Learn C++ by Example!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Starter Templates&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheLartians/ModernCppStarter&#34;&gt;ModernCppStarter&lt;/a&gt; - A template for kick-starting modern C++ projects using CMake, CI, code coverage, clang-format, reproducible dependency management and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filipdutescu/modern-cpp-template&#34;&gt;modern-cpp-template&lt;/a&gt; - A template for modern C++ projects using CMake, Clang-Format, CI, unit testing and more, with support for downstream inclusion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lefticus/cpp_starter_project/&#34;&gt;cpp_starter_project&lt;/a&gt; - A template CMake project to get you started with C++ and tooling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vector-of-bool/pitchfork&#34;&gt;Pitchfork&lt;/a&gt; - Pitchfork is a Set of C++ Project Conventions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Libraries&lt;/h2&gt; &#xA;&lt;p&gt;This is not supposed to be a comprehensive list of all C and C++ libraries. It is a list of high-quality modern libraries with general applicability (serialization, database, testing, etc) or high-quality libraries with novel use of new C++ features.&lt;/p&gt; &#xA;&lt;h3&gt;Kitchensink / Framework&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://abseil.io/&#34;&gt;abseil&lt;/a&gt; - Abseil is an open-source collection of C++ code (compliant to C++11) designed to augment the C++ standard library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.boost.org/&#34;&gt;Boost&lt;/a&gt; - Collection of C++ libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebook/folly&#34;&gt;Folly&lt;/a&gt; - Facebook Open-source Library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pocoproject.org/&#34;&gt;POCO&lt;/a&gt; - The POCO C++ Libraries are powerful cross-platform C++ libraries for building network- and internet-based applications that run on desktop, server, mobile, IoT, and embedded systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martinmoene/nonstd-lite&#34;&gt;nonstd-lite&lt;/a&gt; - Parent of *-lite repositories, a migration path to post-C++11 features for pre-C++11 environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gammasoft71/xtd&#34;&gt;xtd&lt;/a&gt; - Modern C++17/20 framework to create console (CLI), forms (GUI like WinForms) and tunit (unit tests like Microsoft Unit Testing Framework) applications on Windows, macOS, Linux, iOS and android.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/approvals/ApprovalTests.cpp&#34;&gt;Approval Tests for C++&lt;/a&gt; - Native ApprovalTests for C++ on Linux, Mac and Windows.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thejohnfreeman/autocheck&#34;&gt;autocheck&lt;/a&gt; - QuickCheck and SmallCheck clones for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://banditcpp.github.io/bandit/&#34;&gt;Bandit&lt;/a&gt; - A header-only framework for C++11 that wants to make working with unit tests a pleasant experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://boost-ext.github.io/ut/&#34;&gt;Boost:UT&lt;/a&gt; - C++20 μ(micro)/Unit Testing framework, single-header, without need for macros.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.boost.org/doc/libs/1_81_0/libs/test/doc/html/index.html&#34;&gt;Boost.Test&lt;/a&gt; - Boost testing framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catchorg/Catch2&#34;&gt;Catch&lt;/a&gt; 🔥 - A modern, C++-native, header-only, framework for unit-tests, TDD and BDD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clean-test/clean-test&#34;&gt;clean-test&lt;/a&gt; - A modern C++-20 testing framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt; 🚀 - The fastest feature-rich C++11/14/17/20 single-header testing framework for unit tests and TDD.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eranpeer/FakeIt&#34;&gt;Fakeit&lt;/a&gt; - C++ mocking made easy. A simple yet very expressive, headers only library for c++ mocking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Googletest&lt;/a&gt; - Google Testing and Mocking Framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mull-project/mull&#34;&gt;Mull&lt;/a&gt; - Practical mutation testing tool for C and C++&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emil-e/rapidcheck&#34;&gt;rapidcheck&lt;/a&gt; - QuickCheck clone for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cschreib/snitch&#34;&gt;snitch&lt;/a&gt; - Lightweight C++20 testing framework.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Benchmarking&lt;/h3&gt; &#xA;&lt;p&gt;Libraries and frameworks for creating micro-benchmarks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DigitalInBlue/Celero&#34;&gt;Celero&lt;/a&gt; - C++ Benchmark Authoring Library/Framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/benchmark&#34;&gt;Google Benchmark&lt;/a&gt; 🌟 - A microbenchmark support library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nickbruun/hayai&#34;&gt;hayai&lt;/a&gt; - the C++ benchmarking framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libnonius/nonius&#34;&gt;Nonius&lt;/a&gt; - A C++ micro-benchmarking framework. C++ Benchmark Authoring Library/Framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martinus/nanobench&#34;&gt;nanobench&lt;/a&gt; - Simple, fast, accurate single-header microbenchmarking functionality for C++11/14/17/20&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt; - A fmtlib-style logging library with latency in nanoseconds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt; - Fast C++ logging library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilk/loguru&#34;&gt;loguru&lt;/a&gt; - A lightweight and flexible C++ logging library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Threading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cameron314/concurrentqueue&#34;&gt;concurrentqueue&lt;/a&gt; - A fast multi-producer, multi-consumer lock-free concurrent queue for C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpp-taskflow/cpp-taskflow&#34;&gt;Cpp-Taskflow&lt;/a&gt; - Modern C++ Parallel Task Programming Library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/preshing/junction&#34;&gt;Junction&lt;/a&gt; - Concurrent data structures in C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rigtorp/MPMCQueue&#34;&gt;MPMCQueue&lt;/a&gt; - A bounded multi-producer multi-consumer lock-free queue written in C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rigtorp/SPSCQueue&#34;&gt;SPSCQueue&lt;/a&gt; - A bounded single-producer single-consumer wait-free and lock-free queue written in C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threadingbuildingblocks.org/&#34;&gt;Threading Building Blocks&lt;/a&gt; - Threading Building Blocks (TBB) is a C++ template library developed by Intel for parallel programming on multi-core processors. Using TBB, a computation is broken down into tasks that can run in parallel. The library manages and schedules threads to execute these tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alkenso/execq&#34;&gt;execq&lt;/a&gt; - Smart queue that executes tasks in threadpool-like manner (serial / concurrent) in C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/David-Haim/concurrencpp&#34;&gt;concurrencpp&lt;/a&gt; - A general concurrency library containing tasks, executors, timers and C++20 coroutines to rule them all.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Parsing &amp;amp; Serialization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nlohmann/json&#34;&gt;json&lt;/a&gt; 🥇 - JSON for Modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/open-source-parsers/jsoncpp&#34;&gt;jsoncpp&lt;/a&gt; - A C++ library for interacting with JSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marzer/tomlplusplus&#34;&gt;toml++&lt;/a&gt; - A header-only C++17 library for parsing TOML v0.5.0 and later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mayah/tinytoml&#34;&gt;tinytoml&lt;/a&gt; -A header only C++11 library for parsing TOML.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbeder/yaml-cpp&#34;&gt;yaml-cpp&lt;/a&gt; - A YAML parser and emitter in C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skystrife/cpptoml&#34;&gt;cpptoml&lt;/a&gt; - A header-only library for parsing TOML configuration files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/USCiLab/cereal&#34;&gt;cereal&lt;/a&gt; - A C++11 library for serialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felixguendling/cista&#34;&gt;cista&lt;/a&gt; - A C++17 library for high-performance zero-copy binary serialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lemire/simdjson&#34;&gt;simdjson&lt;/a&gt; - Accelerate the parsing of JSON per se using commonly available SIMD instructions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CPPAlliance/json&#34;&gt;Boost.JSON&lt;/a&gt; - A JSON library with robust support for custom allocators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hjson/hjson-cpp&#34;&gt;hjson-cpp&lt;/a&gt; - A C++11 library for reading and writing Hjson and/or JSON files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jorgen/json_struct&#34;&gt;json_struct&lt;/a&gt; - High performance, single header JSON parser, parsing directly to and from C++ structs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/beached/daw_json_link&#34;&gt;daw_json_link&lt;/a&gt; - Fast, convenient JSON serialization and parsing in C++&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;String formatting &amp;amp; templating&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fmt.dev&#34;&gt;{fmt}&lt;/a&gt; - Small, safe and fast formatting library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pantor/inja&#34;&gt;Inja&lt;/a&gt; - A Template Engine for Modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kainjow/Mustache&#34;&gt;Mustache&lt;/a&gt; - Mustache text templates in C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/c42f/tinyformat&#34;&gt;tinyformat.h&lt;/a&gt; - Minimal, type safe printf replacement library for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p-ranav/pprint&#34;&gt;pprint&lt;/a&gt; - Pretty Printer for Modern C++.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Scripting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ThePhD/sol2&#34;&gt;sol2&lt;/a&gt; - C++ library binding to Lua.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chaiscript.com/&#34;&gt;ChaiScript&lt;/a&gt; - An easy to use embedded scripting language for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pybind/pybind11&#34;&gt;pybind11&lt;/a&gt; - Seamless operability between C++11 and Python.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Web / HTTP&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boostorg/beast&#34;&gt;Beast&lt;/a&gt; - HTTP and WebSocket built on Boost.Asio in C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/cpprestsdk&#34;&gt;cpprestsdk&lt;/a&gt; - The C++ REST SDK is a Microsoft project for cloud-based client-server communication in native code using a modern asynchronous C++ API design. This project aims to help C++ developers connect to and interact with services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/whoshuu/cpr&#34;&gt;cpr&lt;/a&gt; - C++ Requests: Curl for People, a spiritual port of Python Requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crowcpp.org&#34;&gt;Crow&lt;/a&gt; - A Fast and Easy to use microframework for creating webservers (inspired by Python Flask).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rdmp.org/dmbcs/micro-server&#34;&gt;dmbcs-micro-server&lt;/a&gt; - C++20-based JSON, HTML, text and PNGs over HTTP; simple way to embed a server into your application to provide a web-based UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/an-tao/drogon&#34;&gt;Drogon&lt;/a&gt; - A C++14/17 based, high-performance HTTP application framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oatpp/oatpp&#34;&gt;oat++&lt;/a&gt; - High-performance Web framework (C++11, zero-dependency).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://pistache.io/&#34;&gt;pistache&lt;/a&gt; - An elegant C++ REST framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Corvusoft/restbed&#34;&gt;restbed&lt;/a&gt; - Restbed framework brings asynchronous RESTful functionality to C++11 applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/mongo-cxx-driver&#34;&gt;mongo-cxx-driver&lt;/a&gt; - C++ Driver for MongoDB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hmartiro/redox&#34;&gt;redox&lt;/a&gt; - Modern, asynchronous, and wicked fast C++11 client for Redis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fnc12/sqlite_orm&#34;&gt;sqlite_orm&lt;/a&gt; - powerful header only SQLite3 ORM library for C++14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iwongu/sqlite3pp&#34;&gt;sqlite3pp&lt;/a&gt; - C++ wrapper of SQLite3 API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rbock/sqlpp11&#34;&gt;sqlpp11&lt;/a&gt; - A type safe SQL template library for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jtv/libpqxx&#34;&gt;libpqxx&lt;/a&gt; - The official C++ client API for PostgreSQL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/silverqx/TinyORM&#34;&gt;TinyORM&lt;/a&gt; - Modern C++ ORM library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BioC++&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seqan/seqan3.git&#34;&gt;SeqAn&lt;/a&gt; - The modern C++ library for sequence analysis (C++17, C++20).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobius3/asap&#34;&gt;ASAP&lt;/a&gt; - header-only library to parse, display, operate and iterate on dates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ron4fun/BigIntegerCPP&#34;&gt;BigIntegerCPP&lt;/a&gt; - A C++11 large integer library with effective high performance, simplistic in nature and also clean in the eyes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.actor-framework.org/&#34;&gt;CAF&lt;/a&gt; - An Open Source Implementation of the Actor Model in C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libcinder.org/&#34;&gt;Cinder&lt;/a&gt; - Cinder is a free and open source library for professional-quality creative coding in C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LoopPerfect/conduit&#34;&gt;Conduit&lt;/a&gt; - High Performance Streams Based on Coroutine TS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanhaining/cppitertools&#34;&gt;cppitertools&lt;/a&gt; - itertools (python) implementation for C++14&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarro2783/cxxopts&#34;&gt;cxxopts&lt;/a&gt; - Lightweight C++ command line option parser.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HowardHinnant/date&#34;&gt;date&lt;/a&gt; - A date and time library based on the C++11/14/17 &#xA;  &lt;chrono&gt;&#xA;    header.&#xA;  &lt;/chrono&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docopt/docopt.cpp&#34;&gt;docopt.cpp&lt;/a&gt; - docopt creates beautiful command-line interfaces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skypjack/entt&#34;&gt;EnTT&lt;/a&gt; - A header-only, fast and, reliable entity-component system (ECS) for modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobius3/font-chef&#34;&gt;Font Chef&lt;/a&gt; - A C99 and C++14 library to cook fonts and render text&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ron4fun/HashLibPlus&#34;&gt;HashLibPlus&lt;/a&gt; - A C++11 library that provides an easy to use interface for computing hashes and checksums of strings, files, streams, bytearrays and untyped data to mention but a few. It also supports Incremental Hashing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ron4fun/IntXLib4CPP&#34;&gt;IntX&lt;/a&gt; - A C++11 port of IntX arbitrary precision Integer library with speed, about O(N * log N) multiplication/division algorithms implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matt-42/iod&#34;&gt;iod&lt;/a&gt; - Meta programming utilities for C++14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Neargye/magic_enum&#34;&gt;Magic Enum&lt;/a&gt; - Static reflection for enums (to string, from string, iteration) for modern C++, work with any enum type without any macro or boilerplate code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quicknir/wise_enum&#34;&gt;Wise Enum&lt;/a&gt; - Static reflection for enums similar to Magic Enum but works with C++ 11/14/17.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Neargye/nameof&#34;&gt;Nameof&lt;/a&gt; - A header-only C++17 library provides nameof macros and functions to obtain the simple name of variable, type, function, macro, and enum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taocpp/PEGTL&#34;&gt;PEGTL&lt;/a&gt; - Parsing Expression Grammar Template Library (C++11, header-only).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/effolkronium/random&#34;&gt;random&lt;/a&gt; - A simple, convenient, header only Random for modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/agauniyal/rang&#34;&gt;rang&lt;/a&gt; - A simple, modern &amp;amp; header only C++11 library for colors in your terminal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ericniebler/range-v3&#34;&gt;range-v3&lt;/a&gt; - Experimental range library for C++11/14/17.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ron4fun/SimpleBaseLib4CPP&#34;&gt;SimpleBaseLib4CPP&lt;/a&gt; - A simple C++11 Base Encoding library that provides at the moment support for encoding and decoding various bases such as Base16, Base32 (various variants), Base58 (various variants), Base64 (various variants). [MIT]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbandela/simple_match&#34;&gt;simple_match&lt;/a&gt; - Simple header only pattern matching for c++14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ron4fun/SRL-CPP&#34;&gt;SRL-CPP&lt;/a&gt; - A Simple Regex Language builder library written in C++11 that provides an easy to use interface for constructing both simple and complex regex expressions. [MIT]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mobius3/tweeny&#34;&gt;tweeny&lt;/a&gt; - A header only interpolation library with 30+ easing functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/vireo&#34;&gt;Vireo&lt;/a&gt; - A lightweight and versatile video processing library by Twitter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p-ranav/indicators&#34;&gt;indicators&lt;/a&gt; - Activity Indicators for Modern C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alkenso/asenum&#34;&gt;AssociatedEnum&lt;/a&gt; - header-only library for C++ for enumerations with associated values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openframeworks.cc/&#34;&gt;openFrameworks&lt;/a&gt; - an open source C++ toolkit for creative coding.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p-ranav/tabulate&#34;&gt;tabulate&lt;/a&gt; - Table Maker for Modern C++.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/docs/ClangFormat.html&#34;&gt;clang-format&lt;/a&gt; 🌟 - A tool to format C++ code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/extra/clangd/&#34;&gt;clangd&lt;/a&gt; - understands your C++ code and adds smart features to your editor: code completion, compile errors, go-to-definition and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gcc.godbolt.org/&#34;&gt;Compiler Explorer&lt;/a&gt; - Interactively explore the assembly output of your C++ code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cquery-project/cquery&#34;&gt;cquery&lt;/a&gt; - C/C++ language server supporting multi-million line code base, powered by libclang. Emacs, Vim, VSCode, and others with language server protocol support. Cross references, completion, diagnostics, semantic highlighting and more (No more commits since Nov 27, 2018)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaskRay/ccls&#34;&gt;ccls&lt;/a&gt; - C/C++/ObjC language server supporting cross references, hierarchies, completion and semantic highlighting, forked from cquery, which is under active development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sarcasm/irony-mode&#34;&gt;irony-mode&lt;/a&gt; - A C/C++ minor mode for Emacs powered by libclang.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ludwigpacifici/modern-cpp-font-lock&#34;&gt;modern-cpp-font-lock-mode&lt;/a&gt; - Syntax highlighting support for Modern C++ with emacs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_program_analysis&#34;&gt;Dynamic analysis&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/sanitizers&#34;&gt;sanitizers&lt;/a&gt; 🌟 - This project is the home for Sanitizers: AddressSanitizer, MemorySanitizer, ThreadSanitizer, LeakSanitizer, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.valgrind.org/&#34;&gt;Valgrind&lt;/a&gt; - is an instrumentation framework for building dynamic analysis tools. There are Valgrind tools that can automatically detect many memory management and threading bugs, and profile your programs in detail. You can also use Valgrind to build new tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34;&gt;Static analysis&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cppcheck.sourceforge.net/&#34;&gt;cppcheck&lt;/a&gt; - is a static analysis tool for C/C++ code. It provides unique code analysis to detect bugs and focuses on detecting undefined behaviour and dangerous coding constructs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/extra/clang-tidy/&#34;&gt;clang-tidy&lt;/a&gt; 🌟 - is a clang-based C++ “linter” tool. Its purpose is to provide an extensible framework for diagnosing and fixing typical programming errors, like style violations, interface misuse, or bugs that can be deduced via static analysis. clang-tidy is modular and provides a convenient interface for writing new checks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/docs/ClangStaticAnalyzer.html&#34;&gt;clang-analyzer&lt;/a&gt; - is a source code analysis tool that finds bugs in C, C++, and Objective-C programs. It implements path-sensitive, inter-procedural analysis based on symbolic execution technique.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Fuzzing&#34;&gt;Fuzzing&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lcamtuf.coredump.cx/afl/&#34;&gt;American fuzzy lop&lt;/a&gt; - American fuzzy lop is a security-oriented fuzzer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://honggfuzz.com/&#34;&gt;hongfuzz&lt;/a&gt; - A security oriented, feedback-driven, evolutionary, easy-to-use fuzzer with interesting analysis options.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://llvm.org/docs/LibFuzzer.html&#34;&gt;libFuzzer&lt;/a&gt; - A library for coverage-guided fuzz testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Build_automation&#34;&gt;Build system&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/&#34;&gt;Bazel&lt;/a&gt; - is a fast, scalable, multi-language and extensible build system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://build2.org/&#34;&gt;build2&lt;/a&gt; - is a cross-platform build toolchain for developing and packaging C and C++ code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; 🌟 - Cross-platform family of tools designed to build, test and package software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mesonbuild.com/&#34;&gt;Meson&lt;/a&gt; - is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xmake.io&#34;&gt;XMake&lt;/a&gt; - is a cross-platform build utility based on Lua.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Package_manager&#34;&gt;Package management&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LoopPerfect/buckaroo&#34;&gt;Buckaroo&lt;/a&gt; - Fully Decentralized Polyglot Package Manager for C++ and Friends&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfultz2/cget&#34;&gt;cget&lt;/a&gt; - CMake package retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.conan.io/&#34;&gt;conan&lt;/a&gt; - C/C++ package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheLartians/CPM&#34;&gt;CPM&lt;/a&gt; - A CMake script for setup-free cross-plattform dependency management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpp-pm/hunter&#34;&gt;Hunter&lt;/a&gt; - Cross-platform package manager for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; - C++ Library Manager for Windows, Linux, and MacOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xrepo.xmake.io&#34;&gt;xrepo&lt;/a&gt; - A cross-platform C/C++ package manager based on Xmake.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This list was compiled by &lt;strong&gt;Erik Rigtorp&lt;/strong&gt; with help from the C++ community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rigtorp.se&#34;&gt;rigtorp.se&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:erik@rigtorp.se&#34;&gt;erik@rigtorp.se&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rigtorp&#34;&gt;github.com/rigtorp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/rigtorp&#34;&gt;twitter.com/rigtorp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/rigtorp&#34;&gt;linkedin.com/in/rigtorp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>