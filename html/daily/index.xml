<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-09T01:30:14Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WeeJeWel/wg-easy</title>
    <updated>2022-07-09T01:30:14Z</updated>
    <id>tag:github.com,2022-07-09:/WeeJeWel/wg-easy</id>
    <link href="https://github.com/WeeJeWel/wg-easy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The easiest way to run WireGuard VPN + Web-based Admin UI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WireGuard Easy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/actions/workflows/deploy.yml&#34;&gt;&lt;img src=&#34;https://github.com/WeeJeWel/wg-easy/actions/workflows/deploy.yml/badge.svg?branch=production&#34; alt=&#34;Build &amp;amp; Publish Docker Image to Docker Hub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/WeeJeWel/wg-easy/actions/workflows/lint.yml/badge.svg?branch=master&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/weejewel/wg-easy&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/weejewel/wg-easy/latest&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/weejewel/wg-easy&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/weejewel/wg-easy.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/WeeJeWel&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/weejewel&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/weejewel/wg-easy&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You have found the easiest way to install &amp;amp; manage WireGuard on any Linux host!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WeeJeWel/wg-easy/master/assets/screenshot.png&#34; width=&#34;802&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All-in-one: WireGuard + Web UI.&lt;/li&gt; &#xA; &lt;li&gt;Easy installation, simple to use.&lt;/li&gt; &#xA; &lt;li&gt;List, create, edit, delete, enable &amp;amp; disable clients.&lt;/li&gt; &#xA; &lt;li&gt;Show a client&#39;s QR code.&lt;/li&gt; &#xA; &lt;li&gt;Download a client&#39;s configuration file.&lt;/li&gt; &#xA; &lt;li&gt;Statistics for which clients are connected.&lt;/li&gt; &#xA; &lt;li&gt;Tx/Rx charts for each connected client.&lt;/li&gt; &#xA; &lt;li&gt;Gravatar support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A host with a kernel that supports WireGuard (all modern kernels).&lt;/li&gt; &#xA; &lt;li&gt;A host with Docker installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;1. Install Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you haven&#39;t installed Docker yet, install it by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -sSL https://get.docker.com | sh&#xA;$ sudo usermod -aG docker $(whoami)&#xA;$ exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And log in again.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run WireGuard Easy&lt;/h3&gt; &#xA;&lt;p&gt;To automatically install &amp;amp; run wg-easy, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;$ docker run -d \&#xA;  --name=wg-easy \&#xA;  -e WG_HOST=&lt;b&gt;üö®YOUR_SERVER_IP&lt;/b&gt; \&#xA;  -e PASSWORD=&lt;b&gt;üö®YOUR_ADMIN_PASSWORD&lt;/b&gt; \&#xA;  -v ~/.wg-easy:/etc/wireguard \&#xA;  -p 51820:51820/udp \&#xA;  -p 51821:51821/tcp \&#xA;  --cap-add=NET_ADMIN \&#xA;  --cap-add=SYS_MODULE \&#xA;  --sysctl=&#34;net.ipv4.conf.all.src_valid_mark=1&#34; \&#xA;  --sysctl=&#34;net.ipv4.ip_forward=1&#34; \&#xA;  --restart unless-stopped \&#xA;  weejewel/wg-easy&#xA;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° Replace &lt;code&gt;YOUR_SERVER_IP&lt;/code&gt; with your WAN IP, or a Dynamic DNS hostname.&lt;/p&gt; &#xA; &lt;p&gt;üí° Replace &lt;code&gt;YOUR_ADMIN_PASSWORD&lt;/code&gt; with a password to log in on the Web UI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The Web UI will now be available on &lt;code&gt;http://0.0.0.0:51821&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° Your configuration files will be saved in &lt;code&gt;~/.wg-easy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;Are you enjoying this project? &lt;a href=&#34;https://github.com/sponsors/WeeJeWel&#34;&gt;Buy me a beer!&lt;/a&gt; üçª&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;These options can be configured by setting environment variables using &lt;code&gt;-e KEY=&#34;VALUE&#34;&lt;/code&gt; in the &lt;code&gt;docker run&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foobar123&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When set, requires a password when logging in to the Web UI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vpn.myserver.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The public hostname of your VPN server.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;12345&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The public UDP port of your VPN server. WireGuard will always listen on &lt;code&gt;51820&lt;/code&gt; inside the Docker container.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_MTU&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1420&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The MTU the clients will use. Server uses default WG MTU.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PERSISTENT_KEEPALIVE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Value in seconds to keep the &#34;connection&#34; open. If this value is 0, then connections won&#39;t be kept alive.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_DEFAULT_ADDRESS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10.8.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10.6.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Clients IP address range.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_DEFAULT_DNS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.1.1.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;8.8.8.8, 8.8.4.4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS server clients will use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_ALLOWED_IPS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.0.0.0/0, ::/0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;192.168.15.0/24, 10.0.1.0/24&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Allowed IPs clients will use.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PRE_UP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/raw/master/src/config.js#L19&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_POST_UP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iptables ...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/raw/master/src/config.js#L20&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_PRE_DOWN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/raw/master/src/config.js#L27&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;WG_POST_DOWN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iptables ...&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See &lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/raw/master/src/config.js#L28&#34;&gt;config.js&lt;/a&gt; for the default value.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you change &lt;code&gt;WG_PORT&lt;/code&gt;, make sure to also change the exposed port.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;p&gt;To update to the latest version, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop wg-easy&#xA;docker rm wg-easy&#xA;docker pull weejewel/wg-easy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then run the &lt;code&gt;docker run -d \ ...&lt;/code&gt; command above again.&lt;/p&gt; &#xA;&lt;h2&gt;Common Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/wiki/Using-WireGuard-Easy-with-Pi-Hole&#34;&gt;Using WireGuard-Easy with Pi-Hole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WeeJeWel/wg-easy/wiki/Using-WireGuard-Easy-with-nginx-SSL&#34;&gt;Using WireGuard-Easy with nginx/SSL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/blazor-samples</title>
    <updated>2022-07-09T01:30:14Z</updated>
    <id>tag:github.com,2022-07-09:/dotnet/blazor-samples</id>
    <link href="https://github.com/dotnet/blazor-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;description: &#34;Samples to accompany the official Microsoft Blazor documentation.&#34; page_type: sample languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;csharp&lt;/li&gt; &#xA; &lt;li&gt;cshtml name: &#34;Blazor sample applications&#34; products:&lt;/li&gt; &#xA; &lt;li&gt;aspnet-core&lt;/li&gt; &#xA; &lt;li&gt;blazor&lt;/li&gt; &#xA; &lt;li&gt;dotnet-core urlFragment: &#34;blazor-samples&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Samples to accompany the official Microsoft Blazor documentation&lt;/h1&gt; &#xA;&lt;p&gt;Samples in this repository accompany the &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/blazor/&#34;&gt;official Microsoft Blazor documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To obtain a local copy of the sample apps in this repository, use &lt;em&gt;&lt;strong&gt;either&lt;/strong&gt;&lt;/em&gt; of the following approaches:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/get-started/quickstart/fork-a-repo&#34;&gt;Fork this repository&lt;/a&gt; and &lt;a href=&#34;https://docs.github.com/repositories/creating-and-managing-repositories/cloning-a-repository&#34;&gt;clone it&lt;/a&gt; to your local system.&lt;/li&gt; &#xA; &lt;li&gt;Select the &lt;strong&gt;Code&lt;/strong&gt; button. Select &lt;strong&gt;Download ZIP&lt;/strong&gt; to save the repository locally. Extract the saved Zip archive (&lt;code&gt;.zip&lt;/code&gt;) to access the sample apps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Blazor Server with EF Core&lt;/h2&gt; &#xA;&lt;p&gt;Blazor Server EF Core sample app (ASP.NET Core 6.0): &lt;a href=&#34;https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorServerEFCoreSample&#34;&gt;Browse on GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/blazor/blazor-server-ef-core&#34;&gt;ASP.NET Core Blazor Server with Entity Framework Core (EFCore)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Blazor with SignalR&lt;/h2&gt; &#xA;&lt;p&gt;Blazor SignalR sample app (ASP.NET Core 6.0):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorServerSignalRApp&#34;&gt;Blazor Server sample: Browse on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorWebAssemblySignalRApp&#34;&gt;Blazor WebAssembly sample: Browse on GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, see &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/tutorials/signalr-blazor&#34;&gt;Use ASP.NET Core SignalR with Blazor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Snippet sample apps for article code examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: Always follow an article&#39;s security guidance when implementing sample code.&lt;/p&gt; &#xA;&lt;p&gt;Snippet sample apps for Blazor Server and Blazor WebAssembly provide the code examples that appear in Blazor articles. Snippet sample apps compile and run. However, several of the examples aren&#39;t fully working in their current form because either of the following are true for the article&#39;s examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The example requires extra Razor, C#, or other code to run correctly that the article&#39;s example doesn&#39;t require in order to explain Blazor concepts.&lt;/li&gt; &#xA; &lt;li&gt;The example requires additional packages to use additional API, sometimes third-party packages, an account (token or key) for an external service, or another app (for example, a separate running web API app to interact with over a network). Usually, the article associated with the example provides additional guidance on how to make the example work in a live test app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The primary purpose of the snippet sample apps is to supply code examples to documentation, not to illustrate Blazor best practices. The best use of the sample app code is to facilitate copying examples into local test apps for experimentation and further customization for use in production apps. Namespaces, names, and locations of app resources are contrived in order to maintain the code efficiently for articles and make sure that the code compiles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Folder names and folder locations throughout the snippet sample apps roughly match the type of example and article subject. They aren&#39;t meant to represent the folder names and layout of a real production app.&lt;/li&gt; &#xA; &lt;li&gt;C# files (&lt;code&gt;.cs&lt;/code&gt;) often appear in the root of the app&#39;s folder, which isn&#39;t normal for typical production apps.&lt;/li&gt; &#xA; &lt;li&gt;Some components create mock C# objects instead of using formal, correct code to create the objects. For example, a component that requires a list of &lt;code&gt;TodoItem&lt;/code&gt; items might include an &lt;code&gt;@code&lt;/code&gt; block as its first line (&lt;code&gt;@code{ private List&amp;lt;TodoItem&amp;gt; todos = new(); }&lt;/code&gt;) to create a variable for use in the example &lt;em&gt;&lt;strong&gt;that the article doesn&#39;t show to readers&lt;/strong&gt;&lt;/em&gt;. To implement these unfinished examples in a production app for users, finish the code and supply an &lt;code&gt;@code&lt;/code&gt; block with formal, correct code to create the required objects. The purpose of using these mocked C# objects in the snippet sample apps is to make sure that the code compiles correctly for the documentation.&lt;/li&gt; &#xA; &lt;li&gt;Some components only show a portion of their Razor markup in an article. This is accomplished by surrounding the code for display with snippet HTML comments (for example, &lt;code&gt;&amp;lt;!-- &amp;lt;snippet&amp;gt; --&amp;gt;...&amp;lt;!-- &amp;lt;/snippet&amp;gt; --&amp;gt;&lt;/code&gt;). These comments can be removed or ignored, as they have no purpose in an ordinary Blazor app outside of the documentation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Blazor snippet sample apps (ASP.NET Core 6.0):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorSample_Server&#34;&gt;Blazor Server: Browse on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/blazor-samples/tree/main/6.0/BlazorSample_WebAssembly&#34;&gt;Blazor WebAssembly: Browse on GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community help and support&lt;/h2&gt; &#xA;&lt;p&gt;For more information, see the &lt;em&gt;Support requests&lt;/em&gt; section in the &lt;a href=&#34;https://docs.microsoft.com/aspnet/core/blazor/fundamentals/#support-requests&#34;&gt;Blazor &lt;em&gt;Fundamentals&lt;/em&gt; overview article&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cod3rcursos/web-moderno</title>
    <updated>2022-07-09T01:30:14Z</updated>
    <id>tag:github.com,2022-07-09:/cod3rcursos/web-moderno</id>
    <link href="https://github.com/cod3rcursos/web-moderno" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web Moderno com JavaScript 2020 COMPLETO + Projetos&lt;/h1&gt; &#xA;&lt;p&gt;Para mais informa√ß√µes acessar &lt;a href=&#34;https://www.cod3r.com.br/courses/web-moderno&#34;&gt;https://www.cod3r.com.br/courses/web-moderno&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>