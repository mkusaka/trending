<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-27T01:37:28Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cmdr2/stable-diffusion-ui</title>
    <updated>2022-08-27T01:37:28Z</updated>
    <id>tag:github.com,2022-08-27:/cmdr2/stable-diffusion-ui</id>
    <link href="https://github.com/cmdr2/stable-diffusion-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple way to install and use Stable Diffusion on your own computer. Provides a browser UI for generating images from text prompts and images. Just enter your text prompt, and see the generated image.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stable Diffusion UI&lt;/h1&gt; &#xA;&lt;h3&gt;A simple way to install and use &lt;a href=&#34;https://replicate.com/stability-ai/stable-diffusion&#34;&gt;Stable Diffusion&lt;/a&gt; on your own computer&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;ðŸŽ‰ &lt;strong&gt;New!&lt;/strong&gt; &lt;code&gt;img2img&lt;/code&gt; and &lt;code&gt;inpaint&lt;/code&gt; (masking) are now supported! You can provide an image to generate new images based on it (and an optional text prompt). You can also use the generated image as the new input image in 1-click, to refine it further. (Thanks &lt;a href=&#34;https://github.com/andreasjansson&#34;&gt;Andreas&lt;/a&gt;!)&lt;/p&gt; &#xA;&lt;h1&gt;What does this do?&lt;/h1&gt; &#xA;&lt;p&gt;Two things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Automatically downloads and installs Stable Diffusion on your own computer (no need to mess with conda or environments)&lt;/li&gt; &#xA; &lt;li&gt;Gives you a simple browser-based UI to talk to your local Stable Diffusion. Enter text prompts and view the generated image. No API keys required.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All the processing will happen on your computer locally, it does not transmit your prompts or process on any remote server.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://github.com/cmdr2/stable-diffusion-ui/raw/main/media/shot-v3a.jpg&#34; height=&#34;500&#34;&gt; &lt;img src=&#34;https://github.com/cmdr2/stable-diffusion-ui/raw/main/media/shot-v6a.jpg&#34; height=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;System Requirements&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Computer capable of running Stable Diffusion.&lt;/li&gt; &#xA; &lt;li&gt;Linux or Windows 11 (with &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;) or Windows 10 v2004+ (Build 19041+) with &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Requires (a) &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt;, (b) &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;docker-compose v1.29&lt;/a&gt;, and (c) &lt;a href=&#34;https://stackoverflow.com/a/58432877&#34;&gt;nvidia-container-toolkit&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you&#39;re using Windows, please install docker inside your &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install&#34;&gt;WSL&lt;/a&gt;&#39;s Linux. Install docker for the Linux distro in your WSL. &lt;strong&gt;Don&#39;t install Docker for Windows.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository: &lt;code&gt;git clone https://github.com/cmdr2/stable-diffusion-ui.git&lt;/code&gt; or &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/archive/refs/heads/main.zip&#34;&gt;download the zip file&lt;/a&gt; and unzip.&lt;/li&gt; &#xA; &lt;li&gt;Open your terminal, and in the project directory run: &lt;code&gt;./server&lt;/code&gt; (warning: this will take some time during the first run, since it&#39;ll download Stable Diffusion&#39;s &lt;a href=&#34;https://replicate.com/stability-ai/stable-diffusion&#34;&gt;docker image&lt;/a&gt;, nearly 17 GiB)&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt; in your browser. That&#39;s it!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you&#39;re getting errors, please check the &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;To stop the server, please run &lt;code&gt;./server stop&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt; in your browser (after running &lt;code&gt;./server&lt;/code&gt; from step 2 previously).&lt;/p&gt; &#xA;&lt;h2&gt;With a text description&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter a text prompt, like &lt;code&gt;a photograph of an astronaut riding a horse&lt;/code&gt; in the textbox.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;Make Image&lt;/code&gt;. This will take some time, depending on your system&#39;s processing power.&lt;/li&gt; &#xA; &lt;li&gt;See the image generated using your prompt.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;With an image&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Browse..&lt;/code&gt; next to &lt;code&gt;Initial Image&lt;/code&gt;. Select your desired image.&lt;/li&gt; &#xA; &lt;li&gt;An optional text prompt can help you further describe the kind of image you want to generate.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;Make Image&lt;/code&gt;. See the image generated using your prompt.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also set an &lt;code&gt;Image Mask&lt;/code&gt; for telling Stable Diffusion to draw in only the black areas in your image mask. White areas in your mask will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pro tip:&lt;/strong&gt; You can also click &lt;code&gt;Use as Input&lt;/code&gt; on a generated image, to use it as the input image for your next generation. This can be useful for sequentially refining the generated image with a single click.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Another tip:&lt;/strong&gt; Images with the same aspect ratio of your generated image work best. E.g. 1:1 if you&#39;re generating images sized 512x512.&lt;/p&gt; &#xA;&lt;h2&gt;Problems?&lt;/h2&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/issues&#34;&gt;file an issue&lt;/a&gt; if this did not work for you (after trying the common &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/#troubleshooting&#34;&gt;troubleshooting&lt;/a&gt; steps)!&lt;/p&gt; &#xA;&lt;h1&gt;Advanced Settings&lt;/h1&gt; &#xA;&lt;p&gt;You can also set the configuration like &lt;code&gt;seed&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;num_outputs&lt;/code&gt;, &lt;code&gt;num_inference_steps&lt;/code&gt; and &lt;code&gt;guidance_scale&lt;/code&gt; using the &#39;show&#39; button next to &#39;Advanced settings&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Use the same &lt;code&gt;seed&lt;/code&gt; number to get the same image for a certain prompt. This is useful for refining a prompt without losing the basic image design. Enable the &lt;code&gt;random images&lt;/code&gt; checkbox to get random images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/media/config-v2.jpg?raw=true&#34; alt=&#34;Screenshot of advanced settings&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/wiki/Troubleshooting&#34;&gt;Troubleshooting wiki page&lt;/a&gt; contains some common errors and their solutions. Please check that, and if it doesn&#39;t work, feel free to &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Behind the scenes&lt;/h1&gt; &#xA;&lt;p&gt;This project is a quick way to get started with Stable Diffusion. You do not need to have Stable Diffusion already installed, and do not need any API keys. This project will automatically download Stable Diffusion&#39;s docker image, the first time it is run.&lt;/p&gt; &#xA;&lt;p&gt;This project runs Stable Diffusion in a docker container behind the scenes, using Stable Diffusion&#39;s &lt;a href=&#34;https://replicate.com/stability-ai/stable-diffusion&#34;&gt;Docker image&lt;/a&gt; on replicate.com.&lt;/p&gt; &#xA;&lt;h1&gt;Bugs reports and code contributions welcome&lt;/h1&gt; &#xA;&lt;p&gt;If there are any problems or suggestions, please feel free to &lt;a href=&#34;https://github.com/cmdr2/stable-diffusion-ui/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, please feel free to submit a pull request, if you have any code contributions in mind.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;The authors of this project are not responsible for any content generated using this interface.&lt;/p&gt; &#xA;&lt;p&gt;This license of this software forbids you from sharing any content that violates any laws, produce any harm to a person, disseminate any personal information that would be meant for harm, spread misinformation and target vulnerable groups. For the full list of restrictions please read &lt;a href=&#34;https://raw.githubusercontent.com/cmdr2/stable-diffusion-ui/main/LICENSE&#34;&gt;the license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ainfosec/FISSURE</title>
    <updated>2022-08-27T01:37:28Z</updated>
    <id>tag:github.com,2022-08-27:/ainfosec/FISSURE</id>
    <link href="https://github.com/ainfosec/FISSURE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The RF and reverse engineering framework for everyone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FISSURE - The RF Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Frequency Independent SDR-based Signal Understanding and Reverse Engineering&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;FISSURE is an open-source RF and reverse engineering framework designed for all skill levels with hooks for signal detection and classification, protocol discovery, attack execution, IQ manipulation, vulnerability analysis, automation, and AI/ML. The framework was built to promote the rapid integration of software modules, radios, protocols, signal data, scripts, flow graphs, reference material, and third-party tools. FISSURE is a workflow enabler that keeps software in one location and allows teams to effortlessly get up to speed while sharing the same proven baseline configuration for specific Linux distributions.&lt;/p&gt; &#xA;&lt;p&gt;The framework and tools included with FISSURE are designed to detect the presence of RF energy, understand the characteristics of a signal, collect and analyze samples, develop transmit and/or injection techniques, and craft custom payloads or messages. FISSURE contains a growing library of protocol and signal information to assist in identification, packet crafting, and fuzzing. Online archive capabilities exist to download signal files and build playlists to simulate traffic and test systems.&lt;/p&gt; &#xA;&lt;p&gt;The friendly Python codebase and user interface allows beginners to quickly learn about popular tools and techniques involving RF and reverse engineering. Educators in cybersecurity and engineering can take advantage of the built-in material or utilize the framework to demonstrate their own real-world applications. Developers and researchers can use FISSURE for their daily tasks or to expose their cutting-edge solutions to a wider audience. As awareness and usage of FISSURE grows in the community, so will the extent of its capabilities and the breadth of the technology it encompasses.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are two branches within FISSURE to make file navigation easier and reduce code redundancy. The Python2_maint-3.7 branch contains a codebase built around Python2, PyQt4, and GNU Radio 3.7; while the Python3_maint-3.8 branch is built around Python3, PyQt5, and GNU Radio 3.8.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Operating System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FISSURE Branch&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04.5 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 18.04.6 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 20.04.1 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 20.04.4 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;In-Progress (beta)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Operating System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FISSURE Branch&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 22.04 (x64)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: Certain software tools do not work for every OS. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Help/Markdown/SoftwareAndConflicts.md&#34;&gt;Software And Conflicts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ainfosec/fissure.git&#xA;cd FISSURE&#xA;git checkout &amp;lt;Python2_maint-3.7&amp;gt; or &amp;lt;Python3_maint-3.8&amp;gt;&#xA;./install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically install PyQt software dependencies required to launch the installation GUIs if they are not found.&lt;/p&gt; &#xA;&lt;p&gt;Next, select the option that best matches your operating system (should be detected automatically if your OS matches an option).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Python2_maint-3.7&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Python3_maint-3.8&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install1b.png&#34; alt=&#34;install1b&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install1a.png&#34; alt=&#34;install1a&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;It is recommended to install FISSURE on a clean operating system to avoid existing conflicts. Select all the recommended checkboxes (Default button) to avoid errors while operating the various tools within FISSURE. There will be multiple prompts throughout the installation, mostly asking for elevated permissions and user names. If an item contains a &#34;Verify&#34; section at the end, the installer will run the command that follows and highlight the checkbox item green or red depending on if any errors are produced by the command. Checked items without a &#34;Verify&#34; section will remain black following the installation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/install2.png&#34; alt=&#34;install2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fissure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the FISSURE Help menu for more details on usage.&lt;/p&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dashboard&lt;/li&gt; &#xA; &lt;li&gt;Central Hub (HIPRFISR)&lt;/li&gt; &#xA; &lt;li&gt;Target Signal Identification (TSI)&lt;/li&gt; &#xA; &lt;li&gt;Protocol Discovery (PD)&lt;/li&gt; &#xA; &lt;li&gt;Flow Graph &amp;amp; Script Executor (FGE)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/components.png&#34; alt=&#34;components&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Capabilities&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;padding:10px&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/detector.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Detector&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/iq.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;IQ Manipulation&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/library.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Lookup&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/pd.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Pattern Recognition&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/attack.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Attacks&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/fuzzing.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Fuzzing&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/archive.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Signal Playlists&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/gallery.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Image Gallery&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/packet.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Packet Crafting&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/scapy.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Scapy Integration&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/crc_calculator.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;CRC Calculator&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ainfosec/FISSURE/Python3_maint-3.8/Icons/README/log.png&#34; align=&#34;center&#34; width=&#34;200&#34; height=&#34;165&#34;&gt;&#xA;    &lt;dt align=&#34;center&#34;&gt;&#xA;     &lt;small&gt;&lt;i&gt;&lt;b&gt;Logging&lt;/b&gt;&lt;/i&gt;&lt;/small&gt;&#xA;    &lt;/dt&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Lessons&lt;/h2&gt; &#xA;&lt;p&gt;FISSURE comes with several helpful guides to become familiar with different technologies and techniques. Many include steps for using various tools that are integrated into FISSURE.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lesson1: OpenBTS&lt;/li&gt; &#xA; &lt;li&gt;Lesson2: Lua Dissectors&lt;/li&gt; &#xA; &lt;li&gt;Lesson3: Sound eXchange&lt;/li&gt; &#xA; &lt;li&gt;Lesson4: ESP Boards&lt;/li&gt; &#xA; &lt;li&gt;Lesson5: Radiosonde Tracking&lt;/li&gt; &#xA; &lt;li&gt;Lesson6: RFID&lt;/li&gt; &#xA; &lt;li&gt;Lesson7: Data Types&lt;/li&gt; &#xA; &lt;li&gt;Lesson8: Custom GNU Radio Blocks&lt;/li&gt; &#xA; &lt;li&gt;Lesson9: TPMS&lt;/li&gt; &#xA; &lt;li&gt;Lesson10: Ham Radio Exams&lt;/li&gt; &#xA; &lt;li&gt;Lesson11: Wi-Fi Tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add more hardware types, RF protocols, signal parameters, analysis tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support more operating systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create a signal conditioner, feature extractor, and signal classifier with selectable AI/ML techniques&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Develop class material around FISSURE (RF Attacks, Wi-Fi, GNU Radio, PyQt, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Transition the main FISSURE components to a generic sensor node deployment scheme&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Suggestions for improving FISSURE are strongly encouraged. Leave a comment in the &lt;a href=&#34;https://github.com/ainfosec/FISSURE/discussions&#34;&gt;Discussions&lt;/a&gt; page if you have any thoughts regarding the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New feature suggestions and design changes&lt;/li&gt; &#xA; &lt;li&gt;Software tools with installation steps&lt;/li&gt; &#xA; &lt;li&gt;New lessons or additional material for existing lessons&lt;/li&gt; &#xA; &lt;li&gt;RF protocols of interest&lt;/li&gt; &#xA; &lt;li&gt;More hardware and SDR types for integration&lt;/li&gt; &#xA; &lt;li&gt;IQ analysis scripts in Python&lt;/li&gt; &#xA; &lt;li&gt;Installation corrections and improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions to improve FISSURE are crucial to expediting its development. Any contributions you make are greatly appreciated. If you wish to contribute through code development, please fork the repo and create a pull request:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the project&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Creating &lt;a href=&#34;https://github.com/ainfosec/FISSURE/issues&#34;&gt;Issues&lt;/a&gt; to bring attention to bugs is also welcomed.&lt;/p&gt; &#xA;&lt;h2&gt;Collaborating&lt;/h2&gt; &#xA;&lt;p&gt;Contact Assured Information Security, Inc. (AIS) Business Development to propose and formalize any FISSURE collaboration opportunitiesâ€“whether that is through dedicating time towards integrating your software, having the talented people at AIS develop solutions for your technical challenges, or integrating FISSURE into other platforms/applications.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL-3.0&lt;/p&gt; &#xA;&lt;p&gt;For license details, see LICENSE file.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Follow on Twitter: &lt;a href=&#34;https://twitter.com/fissurerf&#34;&gt;@FissureRF&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/ainfosec&#34;&gt;@AinfoSec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chris Poore - Assured Information Security, Inc. - &lt;a href=&#34;mailto:poorec@ainfosec.com&#34;&gt;poorec@ainfosec.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Business Development - Assured Information Security, Inc. - &lt;a href=&#34;mailto:bd@ainfosec.com&#34;&gt;bd@ainfosec.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to Dr. Samuel Mantravadi and Joseph Reith for their contributions to this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fcwu/docker-ubuntu-vnc-desktop</title>
    <updated>2022-08-27T01:37:28Z</updated>
    <id>tag:github.com,2022-08-27:/fcwu/docker-ubuntu-vnc-desktop</id>
    <link href="https://github.com/fcwu/docker-ubuntu-vnc-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker image to provide web VNC interface to access Ubuntu LXDE/LxQT desktop environment.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-ubuntu-vnc-desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dorowu/ubuntu-desktop-lxde-vnc.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/dorowu/ubuntu-desktop-lxde-vnc.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;docker-ubuntu-vnc-desktop is a Docker image to provide web VNC interface to access Ubuntu LXDE/LxQT desktop environment.&lt;/p&gt; &#xA;&lt;!-- @import &#34;[TOC]&#34; {cmd=&#34;toc&#34; depthFrom=2 depthTo=2 orderedList=false} --&gt; &#xA;&lt;!-- code_chunk_output --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#vnc-viewer&#34;&gt;VNC Viewer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#http-base-authentication&#34;&gt;HTTP Base Authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#ssl&#34;&gt;SSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#screen-resolution&#34;&gt;Screen Resolution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#default-desktop-user&#34;&gt;Default Desktop User&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#deploy-to-a-subdirectory-relative-url-root&#34;&gt;Deploy to a subdirectory (relative url root)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#sound-preview-version-and-linux-only&#34;&gt;Sound (Preview version and Linux only)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#generate-dockerfile-from-jinja-template&#34;&gt;Generate Dockerfile from jinja template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#troubleshooting-and-faq&#34;&gt;Troubleshooting and FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fcwu/docker-ubuntu-vnc-desktop/develop/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /code_chunk_output --&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Run the docker container and access with port &lt;code&gt;6080&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;http://127.0.0.1:6080/&#34;&gt;http://127.0.0.1:6080/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.github.com/fcwu/docker-ubuntu-vnc-desktop/master/screenshots/lxde.png?v1&#34; width=&#34;700/&#34;&gt; &#xA;&lt;h3&gt;Ubuntu Flavors&lt;/h3&gt; &#xA;&lt;p&gt;Choose your favorite Ubuntu version with &lt;a href=&#34;https://hub.docker.com/r/dorowu/ubuntu-desktop-lxde-vnc/tags/&#34;&gt;tags&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;focal: Ubuntu 20.04 (latest)&lt;/li&gt; &#xA; &lt;li&gt;focal-lxqt: Ubuntu 20.04 LXQt&lt;/li&gt; &#xA; &lt;li&gt;bionic: Ubuntu 18.04&lt;/li&gt; &#xA; &lt;li&gt;bionic-lxqt: Ubuntu 18.04 LXQt&lt;/li&gt; &#xA; &lt;li&gt;xenial: Ubuntu 16.04 (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;trusty: Ubuntu 14.04 (deprecated)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VNC Viewer&lt;/h2&gt; &#xA;&lt;p&gt;Forward VNC service port 5900 to host by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -p 5900:5900 -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, open the vnc viewer and connect to port 5900. If you would like to protect vnc service by password, set environment variable &lt;code&gt;VNC_PASSWORD&lt;/code&gt;, for example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -p 5900:5900 -e VNC_PASSWORD=mypassword -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A prompt will ask password either in the browser or vnc viewer.&lt;/p&gt; &#xA;&lt;h2&gt;HTTP Base Authentication&lt;/h2&gt; &#xA;&lt;p&gt;This image provides base access authentication of HTTP via &lt;code&gt;HTTP_PASSWORD&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -e HTTP_PASSWORD=mypassword -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SSL&lt;/h2&gt; &#xA;&lt;p&gt;To connect with SSL, generate self signed SSL certificate first if you don&#39;t have it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p ssl&#xA;openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ssl/nginx.key -out ssl/nginx.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specify SSL port by &lt;code&gt;SSL_PORT&lt;/code&gt;, certificate path to &lt;code&gt;/etc/nginx/ssl&lt;/code&gt;, and forward it to 6081&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6081:443 -e SSL_PORT=443 -v ${PWD}/ssl:/etc/nginx/ssl -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Screen Resolution&lt;/h2&gt; &#xA;&lt;p&gt;The Resolution of virtual desktop adapts browser window size when first connecting the server. You may choose a fixed resolution by passing &lt;code&gt;RESOLUTION&lt;/code&gt; environment variable, for example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -e RESOLUTION=1920x1080 -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default Desktop User&lt;/h2&gt; &#xA;&lt;p&gt;The default user is &lt;code&gt;root&lt;/code&gt;. You may change the user and password respectively by &lt;code&gt;USER&lt;/code&gt; and &lt;code&gt;PASSWORD&lt;/code&gt; environment variable, for example,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -e USER=doro -e PASSWORD=password -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deploy to a subdirectory (relative url root)&lt;/h2&gt; &#xA;&lt;p&gt;You may deploy this application to a subdirectory, for example &lt;code&gt;/some-prefix/&lt;/code&gt;. You then can access application by &lt;code&gt;http://127.0.0.1:6080/some-prefix/&lt;/code&gt;. This can be specified using the &lt;code&gt;RELATIVE_URL_ROOT&lt;/code&gt; configuration option like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p 6080:80 -e RELATIVE_URL_ROOT=some-prefix dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: this variable should not have any leading and trailing splash (/)&lt;/p&gt; &#xA;&lt;h2&gt;Sound (Preview version and Linux only)&lt;/h2&gt; &#xA;&lt;p&gt;It only works in Linux.&lt;/p&gt; &#xA;&lt;p&gt;First of all, insert kernel module &lt;code&gt;snd-aloop&lt;/code&gt; and specify &lt;code&gt;2&lt;/code&gt; as the index of sound loop device&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo modprobe snd-aloop index=2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the container&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it --rm -p 6080:80 --device /dev/snd -e ALSADEV=hw:2,0 dorowu/ubuntu-desktop-lxde-vnc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;--device /dev/snd -e ALSADEV=hw:2,0&lt;/code&gt; means to grant sound device to container and set basic ASLA config to use card 2.&lt;/p&gt; &#xA;&lt;p&gt;Launch a browser with URL &lt;a href=&#34;http://127.0.0.1:6080/#/?video&#34;&gt;http://127.0.0.1:6080/#/?video&lt;/a&gt;, where &lt;code&gt;video&lt;/code&gt; means to start with video mode. Now you can start Chromium in start menu (Internet -&amp;gt; Chromium Web Browser Sound) and try to play some video.&lt;/p&gt; &#xA;&lt;p&gt;Following is the screen capture of these operations. Turn on your sound at the end of video!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=Kv9FGClP1-k&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/Kv9FGClP1-k/0.jpg&#34; alt=&#34;demo video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Generate Dockerfile from jinja template&lt;/h2&gt; &#xA;&lt;p&gt;WARNING: Deprecated&lt;/p&gt; &#xA;&lt;p&gt;Dockerfile and configuration can be generated by template.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;arch: one of &lt;code&gt;amd64&lt;/code&gt; or &lt;code&gt;armhf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;flavor: refer to file in flavor/&lt;code&gt;flavor&lt;/code&gt;.yml&lt;/li&gt; &#xA; &lt;li&gt;image: base image&lt;/li&gt; &#xA; &lt;li&gt;desktop: desktop environment which is set in flavor&lt;/li&gt; &#xA; &lt;li&gt;addon_package: Debian package to be installed which is set in flavor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dockerfile and configuration are re-generate if they do not exist. Or you may force to re-generate by removing them with the command &lt;code&gt;make clean&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting and FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;boot2docker connection issue, &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/2&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multi-language supports, &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/80&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/80&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Autostart, &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/85#issuecomment-466778407&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/85#issuecomment-466778407&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;x11vnc arguments(multiptr), &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/101&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/101&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;firefox/chrome crash (/dev/shm), &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/112&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/112&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;resize display size without destroying container, &lt;a href=&#34;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/115#issuecomment-522426037&#34;&gt;https://github.com/fcwu/docker-ubuntu-vnc-desktop/issues/115#issuecomment-522426037&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
</feed>