<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-11T01:29:34Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/BotFramework-WebChat</title>
    <updated>2024-04-11T01:29:34Z</updated>
    <id>tag:github.com,2024-04-11:/microsoft/BotFramework-WebChat</id>
    <link href="https://github.com/microsoft/BotFramework-WebChat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A highly-customizable web-based client for Azure Bot Services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/BotFramework-WebChat/main/media/BotFrameworkWebChat_header.png&#34; alt=&#34;Bot Framework Web Chat&#34;&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/CHANGELOG.md&#34;&gt;Click here to find out what is new in Web Chat&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Bot Framework Web Chat&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://badge.fury.io/js/botframework-webchat&#34;&gt;&lt;img src=&#34;https://badge.fury.io/js/botframework-webchat.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fuselabs.visualstudio.com/BotFramework-WebChat/_build/latest?definitionId=498&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://fuselabs.visualstudio.com/BotFramework-WebChat/_apis/build/status/BotFramework-WebChat-daily?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains code for the Bot Framework Web Chat component. The Bot Framework Web Chat component is a highly-customizable web-based client for the Bot Framework v4 SDK. The Bot Framework SDK v4 enables developers to model conversation and build sophisticated bot applications.&lt;/p&gt; &#xA;&lt;p&gt;This repository is part of the &lt;a href=&#34;https://github.com/microsoft/botframework&#34;&gt;Microsoft Bot Framework&lt;/a&gt; - a comprehensive framework for building enterprise-grade conversational AI experiences.&lt;/p&gt; &#xA;&lt;p&gt;Web Chat supports &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&#34;&gt;Content Security Policy (CSP)&lt;/a&gt;. Web developers are recommended to enable CSP to improve security and protect conversations. You can read more about CSP in &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/docs/CONTENT_SECURITY_POLICY.md&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Version notes&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This section points out important version notes. For further information, please see the related links and check the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/CHANGELOG.md&#34;&gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;4.16.1 notable changes&lt;/h3&gt; &#xA;&lt;p&gt;Web Chat now supports &lt;a href=&#34;https://adaptivecards.io/explorer/&#34;&gt;Adaptive Cards schema up to 1.6&lt;/a&gt;. Some features in Adaptive Cards are in preview or designed to use outside of Bot Framework. Web Chat does not support these features.&lt;/p&gt; &#xA;&lt;h3&gt;4.16.0 notable changes&lt;/h3&gt; &#xA;&lt;p&gt;Starting from 4.16.0, Internet Explorer is no longer supported. After more than a year of the Internet Explorer 11 officially retirement, we decided to stop supporting Internet Explorer. This will help us to bring new features to Web Chat. 4.15.9 is the last version which supports Internet Explorer in limited fashion.&lt;/p&gt; &#xA;&lt;h3&gt;4.12.1 patch: New style property &lt;code&gt;adaptiveCardsParserMaxVersion&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Web Chat 4.12.1 patch includes a new style property allowing developers to choose the max Adaptive Cards schema version. See &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/pull/3778&#34;&gt;PR #3778&lt;/a&gt; for code changes.&lt;/p&gt; &#xA;&lt;p&gt;To specify a different max version, you can adjust the style options, shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;window.WebChat.renderWebChat(&#xA;   {&#xA;      directLine,&#xA;      store,&#xA;      styleOptions: {&#xA;         adaptiveCardsParserMaxVersion: &#39;1.2&#39;&#xA;      }&#xA;   },&#xA;   document.getElementById(&#39;webchat&#39;)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web Chat will apply the maximum schema available according to the Adaptive Cards version (as of this patch, schema 1.3) by default.&lt;/li&gt; &#xA; &lt;li&gt;An invalid version will revert to Web Chat&#39;s default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Visual focus changes to transcript in Web Chat 4.12.0&lt;/h2&gt; &#xA;&lt;p&gt;A new accessibility update has been added to Web Chat from PR &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/pull/3703&#34;&gt;#3703&lt;/a&gt;. This change creates visual focus for the transcript (bold black border) and &lt;code&gt;aria-activedescendent&lt;/code&gt; focused activity (black dashed border) by default. Where applicable, &lt;code&gt;transcriptVisualKeyboardIndicator...&lt;/code&gt; values will also be applied to carousel (&lt;code&gt;CarouselFilmStrip.js&lt;/code&gt;) children. This is done in order to match current default focus styling for Adaptive Cards, which may be a child of a carousel.&lt;/p&gt; &#xA;&lt;p&gt;To modify these styles, you can change the following props via &lt;code&gt;styleOptions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  transcriptActivityVisualKeyboardIndicatorColor: DEFAULT_SUBTLE,&#xA;  transcriptActivityVisualKeyboardIndicatorStyle: &#39;dashed&#39;,&#xA;  transcriptActivityVisualKeyboardIndicatorWidth: 1,&#xA;  transcriptVisualKeyboardIndicatorColor: &#39;Black&#39;,&#xA;  transcriptVisualKeyboardIndicatorStyle: &#39;solid&#39;,&#xA;  transcriptVisualKeyboardIndicatorWidth: 2,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above code shows the default values you will see in Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;API refactor into new package in Web Chat 4.11.0&lt;/h2&gt; &#xA;&lt;p&gt;The Web Chat API has been refactored into a separate package. To learn more, check out the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/pull/3543&#34;&gt;API refactor summary&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Direct Line Speech support in Web Chat 4.7.0&lt;/h2&gt; &#xA;&lt;p&gt;Starting from Web Chat 4.7.0, Direct Line Speech is supported, and it is the preferred way to provide an integrated speech functionality in Web Chat. We are working on &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/labels/Direct%20Line%20Speech&#34;&gt;closing feature gaps&lt;/a&gt; between Direct Line Speech and Web Speech API (includes Cognitive Services and browser-provided speech functionality).&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading to 4.6.0&lt;/h2&gt; &#xA;&lt;p&gt;Starting from Web Chat 4.6.0, Web Chat requires React 16.8.6 or up.&lt;/p&gt; &#xA;&lt;p&gt;Although we recommend that you upgrade your host app at your earliest convenience, we understand that host app may need some time before its React dependencies are updated, especially in regards to huge applications.&lt;/p&gt; &#xA;&lt;p&gt;If your app is not ready for React 16.8.6 yet, you can follow the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/samples/01.getting-started/g.hybrid-react-npm&#34;&gt;hybrid React sample&lt;/a&gt; to dual-host React in your app.&lt;/p&gt; &#xA;&lt;h2&gt;Speech changes in Web Chat 4.5.0&lt;/h2&gt; &#xA;&lt;p&gt;There is a breaking change on behavior expectations regarding speech and input hint in Web Chat. Please refer to the section on &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/docs/SPEECH.md#input-hint-behavior-before-4-5-0&#34;&gt;input hint behavior before 4.5.0&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating from Web Chat v3 to v4&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/MIGRATION.md&#34;&gt;View migration docs&lt;/a&gt; to learn about migrating from Web Chat v3.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;p&gt;First, create a bot using &lt;a href=&#34;https://azure.microsoft.com/en-us/services/bot-service/&#34;&gt;Azure Bot Service&lt;/a&gt;. Once the bot is created, you will need to &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/bot-service/bot-service-channel-connect-webchat?view=azure-bot-service-3.0#step-1&#34;&gt;obtain the bot&#39;s Web Chat secret&lt;/a&gt; in Azure Portal. Then use the secret to &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-authentication?view=azure-bot-service-4.0&#34;&gt;generate a token&lt;/a&gt; and pass it to your Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;Connect a client app to bot&lt;/h2&gt; &#xA;&lt;p&gt;Web Chat provides UI on top of the Direct Line and Direct Line Speech Channels. There are two ways to connect to your bot through HTTP calls from the client: by sending the Bot secret or generating a token via the secret.&lt;/p&gt; &#xA;&lt;!-- TODO: https://github.com/microsoft/BotFramework-WebChat/issues/2151 (ongoing) --&gt; &#xA;&lt;!-- Update the following paragraph and the API table (`directline`) with new documentation when updated docs are published  --&gt; &#xA;&lt;p&gt;We strongly recommend using the token API instead of providing the app with your secret. To learn more about why, see the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-authentication?view=azure-bot-service-4.0&#34;&gt;authentication documentation&lt;/a&gt; on the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-api-reference?view=azure-bot-service-4.0&#34;&gt;token API&lt;/a&gt; and client security.&lt;/p&gt; &#xA;&lt;p&gt;For further reading, please see the following links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using Web Chat with &lt;a href=&#34;https://blog.botframework.com/2018/09/01/using-webchat-with-azure-bot-services-authentication/&#34;&gt;Azure Bot Services authentication&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.botframework.com/2018/09/25/enhanced-direct-line-authentication-features/&#34;&gt;Enhanced Direct Line authentication features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrate with JavaScript&lt;/h2&gt; &#xA;&lt;p&gt;Web Chat is designed to integrate with your existing website using JavaScript or React. Integrating with JavaScript will give you moderate styling and customizability options.&lt;/p&gt; &#xA;&lt;p&gt;You can use the full, typical Web Chat package (called full-feature bundle) that contains the most typically used features.&lt;/p&gt; &#xA;&lt;p&gt;Here is how how you can add Web Chat control to your website:&lt;/p&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;script&#xA;      crossorigin=&#34;anonymous&#34;&#xA;      src=&#34;https://cdn.botframework.com/botframework-webchat/latest/webchat.js&#34;&#xA;    &amp;gt;&amp;lt;/script&amp;gt;&#xA;    &amp;lt;style&amp;gt;&#xA;      html,&#xA;      body {&#xA;         height: 100%;&#xA;      }&#xA;&#xA;      body {&#xA;        margin: 0;&#xA;      }&#xA;&#xA;      #webchat {&#xA;        height: 100%;&#xA;        width: 100%;&#xA;      }&#xA;    &amp;lt;/style&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body&amp;gt;&#xA;    &amp;lt;div id=&#34;webchat&#34; role=&#34;main&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;    &amp;lt;script&amp;gt;&#xA;      window.WebChat.renderWebChat(&#xA;        {&#xA;          directLine: window.WebChat.createDirectLine({&#xA;            token: &#39;YOUR_DIRECT_LINE_TOKEN&#39;&#xA;          }),&#xA;          userID: &#39;YOUR_USER_ID&#39;,&#xA;          username: &#39;Web Chat User&#39;,&#xA;          locale: &#39;en-US&#39;&#xA;        },&#xA;        document.getElementById(&#39;webchat&#39;)&#xA;      );&#xA;    &amp;lt;/script&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;userID&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt;, and &lt;code&gt;locale&lt;/code&gt; are all optional parameters to pass into the &lt;code&gt;renderWebChat&lt;/code&gt; method. To learn more about Web Chat props, look at the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/API.md&#34;&gt;Web Chat API Reference&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Assigning &lt;code&gt;userID&lt;/code&gt; as a static value is not recommended since this will cause all users to share state. Please see the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/docs/API.md#userID&#34;&gt;&lt;code&gt;API userID entry&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;More information on localization can be found in the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/LOCALIZATION.md&#34;&gt;Localization&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/BotFramework-WebChat/main/media/weatherquery.png.jpg&#34; alt=&#34;Screenshot of Web Chat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the working sample of the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/samples/01.getting-started/a.full-bundle&#34;&gt;full Web Chat bundle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integrate with React&lt;/h2&gt; &#xA;&lt;p&gt;For full customizability, you can use React to recompose components of Web Chat.&lt;/p&gt; &#xA;&lt;p&gt;To install the production build from NPM, run &lt;code&gt;npm install botframework-webchat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React, { useMemo } from &#39;react&#39;;&#xA;import ReactWebChat, { createDirectLine } from &#39;botframework-webchat&#39;;&#xA;&#xA;export default () =&amp;gt; {&#xA;  const directLine = useMemo(() =&amp;gt; createDirectLine({ token: &#39;YOUR_DIRECT_LINE_TOKEN&#39; }), []);&#xA;&#xA;  return &amp;lt;ReactWebChat directLine={directLine} userID=&#34;YOUR_USER_ID&#34; /&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also run &lt;code&gt;npm install botframework-webchat@main&lt;/code&gt; to install a development build that is synced with Web Chat&#39;s GitHub &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See the working sample of &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/samples/01.getting-started/e.host-with-react/&#34;&gt;Web Chat rendered via React&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Experimental support for Redux DevTools&lt;/h3&gt; &#xA;&lt;p&gt;Web Chat internally use Redux for state management. &lt;a href=&#34;https://github.com/reduxjs/redux-devtools&#34;&gt;Redux DevTools&lt;/a&gt; is enabled in the NPM build as an opt-in feature.&lt;/p&gt; &#xA;&lt;p&gt;This is for glancing into how Web Chat works. This is not an API explorer and is not an endorsement of using the Redux store to programmatically access the UI. The &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/HOOKS.md&#34;&gt;hooks API&lt;/a&gt; should be used instead.&lt;/p&gt; &#xA;&lt;p&gt;To use Redux DevTools, use the &lt;code&gt;createStoreWithDevTools&lt;/code&gt; function for creating a Redux DevTools-enabled store.&lt;/p&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  import React, { useMemo } from &#39;react&#39;;&#xA;- import ReactWebChat, { createDirectLine, createStore } from &#39;botframework-webchat&#39;;&#xA;+ import ReactWebChat, { createDirectLine, createStoreWithDevTools } from &#39;botframework-webchat&#39;;&#xA;&#xA;  export default () =&amp;gt; {&#xA;    const directLine = useMemo(() =&amp;gt; createDirectLine({ token: &#39;YOUR_DIRECT_LINE_TOKEN&#39; }), []);&#xA;-   const store = useMemo(() =&amp;gt; createStore(), []);&#xA;+   const store = useMemo(() =&amp;gt; createStoreWithDevTools(), []);&#xA;&#xA;    return &amp;lt;ReactWebChat directLine={directLine} store={store} userID=&#34;YOUR_USER_ID&#34; /&amp;gt;;&#xA;  };&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;p&gt;There are some limitations when using the Redux DevTools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Redux store uses side-effects via &lt;a href=&#34;https://github.com/redux-saga/redux-saga&#34;&gt;&lt;code&gt;redux-saga&lt;/code&gt;&lt;/a&gt;. Time-traveling may break the UI.&lt;/li&gt; &#xA; &lt;li&gt;Many UI states are stored in React context and state. They are not exposed in the Redux store.&lt;/li&gt; &#xA; &lt;li&gt;Some time-sensitive UIs are based on real-time clock and not affected by time-traveling.&lt;/li&gt; &#xA; &lt;li&gt;Dispatching actions are not officially supported. Please use &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/HOOKS.md&#34;&gt;hooks API&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;Actions and reducers may move in and out of Redux store across versions. &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/HOOKS.md&#34;&gt;Hooks API&lt;/a&gt; is the official API for accessing the UI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Customizing the Web Chat UI&lt;/h1&gt; &#xA;&lt;p&gt;Web Chat is designed to be customizable without forking the source code. The table below outlines what kind of customizations you can achieve when you are importing Web Chat in different ways. This list is not exhaustive.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CDN bundle&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;React&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change colors&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Change sizes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Update/replace CSS styles&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Listen to events&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Interact with hosting webpage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custom render activities&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custom render attachments&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Add new UI components&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Recompose the whole UI&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See more about &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/samples/README.md&#34;&gt;customizing Web Chat&lt;/a&gt; to learn more on customization.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Activity Types on the Web Chat Client&lt;/h2&gt; &#xA;&lt;p&gt;Bot Framework has many activity types, but not all are supported in Web Chat. &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/ACTIVITYTYPES.md&#34;&gt;View activity types docs&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h1&gt;Samples list&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/samples&#34;&gt;View the complete list of Web Chat samples&lt;/a&gt; for more ideas on customizing Web Chat.&lt;/p&gt; &#xA;&lt;h1&gt;Further reading&lt;/h1&gt; &#xA;&lt;h2&gt;API Reference&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/API.md&#34;&gt;API documentation&lt;/a&gt; for implementing Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;Browser compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Web Chat supports the latest 2 versions of modern browsers like Chrome, Microsoft Edge, and FireFox. If you need Web Chat in Internet Explorer 11, please see the &lt;a href=&#34;https://microsoft.github.io/BotFramework-WebChat/01.getting-started/c.es5-bundle&#34;&gt;ES5 bundle demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note, however:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web Chat does not support Internet Explorer older than version 11&lt;/li&gt; &#xA; &lt;li&gt;Customization as shown in non-ES5 samples are not supported for Internet Explorer. Because IE11 is a non-modern browser, it does not support ES6, and many samples that use arrow functions and modern promises would need to be manually converted to ES5. If you are in need of heavy customization for your app, we strongly recommend developing your app for a modern browser like Google Chrome or Microsoft Edge.&lt;/li&gt; &#xA; &lt;li&gt;Web Chat has no plan to support samples for IE11 (ES5). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For customers who wish to manually rewrite our other samples to work in IE11, we recommend looking into converting code from ES6+ to ES5 using polyfills and transpilers like &lt;a href=&#34;https://babeljs.io/docs/en/next/babel-standalone.html&#34;&gt;&lt;code&gt;babel&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Accessibility&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/ACCESSIBILITY.md&#34;&gt;accessibility documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/LOCALIZATION.md&#34;&gt;localization documentation&lt;/a&gt; for implementing in Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;Notifications&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/NOTIFICATION.md&#34;&gt;notification documentation&lt;/a&gt; for implementing in Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/TELEMETRY.md&#34;&gt;telemetry documentation&lt;/a&gt; for implementing in Web Chat.&lt;/p&gt; &#xA;&lt;h2&gt;Technical Support Guide&lt;/h2&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/TECHNICAL_SUPPORT_GUIDE.md&#34;&gt;Technical Support Guide&lt;/a&gt; to get guidance and help on troubleshooting in the Web Chat repo for more information before filing a new issue.&lt;/p&gt; &#xA;&lt;h2&gt;Speech&lt;/h2&gt; &#xA;&lt;p&gt;Web Chat supports a wide-range of speech engines for a natural chat experience with a bot. This section outlines the different engines that are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/BotFramework-WebChat/main/#integrate-with-direct-line-speech&#34;&gt;Direct Line Speech&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/BotFramework-WebChat/main/#integrate-with-cognitive-services-speech-services&#34;&gt;Cognitive Services Speech Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/BotFramework-WebChat/main/#browser-provided-engine-or-other-engines&#34;&gt;Browser-provided engine or other engines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrate with Direct Line Speech&lt;/h3&gt; &#xA;&lt;p&gt;Direct Line Speech is the preferred way to add speech functionality in Web Chat. Please refer to the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/docs/DIRECT_LINE_SPEECH.md&#34;&gt;Direct Line Speech&lt;/a&gt; documentation for details.&lt;/p&gt; &#xA;&lt;h3&gt;Integrate with Cognitive Services Speech Services&lt;/h3&gt; &#xA;&lt;p&gt;You can use Cognitive Services Speech Services to add speech functionality to Web Chat. Please refer to the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/docs/SPEECH.md&#34;&gt;Cognitive Services Speech Services&lt;/a&gt; documentation for details.&lt;/p&gt; &#xA;&lt;h3&gt;Browser-provided engine or other engines&lt;/h3&gt; &#xA;&lt;p&gt;You can also use any speech engines which support &lt;a href=&#34;https://wicg.github.io/speech-api/&#34;&gt;W3C Web Speech API standard&lt;/a&gt;. Some browsers support the &lt;a href=&#34;https://caniuse.com/#feat=mdn-api_speechrecognition&#34;&gt;Speech Recognition API&lt;/a&gt; and the &lt;a href=&#34;https://caniuse.com/#feat=mdn-api_speechsynthesis&#34;&gt;Speech Synthesis API&lt;/a&gt;. You can mix-and-match different engines - including Cognitive Services Speech Services - to provide best user experience.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;How to test with Web Chat&#39;s latest bits&lt;/h1&gt; &#xA;&lt;p&gt;Web Chat latest bits are available on the &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/releases/daily&#34;&gt;Web Chat daily releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dailies will be released after 3:00AM Pacific Standard Time when changes have been committed to the main branch.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/.github/CONTRIBUTING.md&#34;&gt;Contributing page&lt;/a&gt; for details on how to build the project and our repository guidelines for Pull Requests.&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/raw/main/.github/CODE_OF_CONDUCT.md&#34;&gt;CODE OF CONDUCT page&lt;/a&gt; for details about the Microsoft Code of Conduct.&lt;/p&gt; &#xA;&lt;h1&gt;Reporting Security Issues&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/BotFramework-WebChat/tree/main/docs/SECURITY.md&#34;&gt;View the security documentation&lt;/a&gt; to learn more about reporting security issues.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alura-challenges/challenge-one-portfolio-br</title>
    <updated>2024-04-11T01:29:34Z</updated>
    <id>tag:github.com,2024-04-11:/alura-challenges/challenge-one-portfolio-br</id>
    <link href="https://github.com/alura-challenges/challenge-one-portfolio-br" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repositorio Base para desenvolvimento do Desafio 1 Crie seu próprio Portfólio do Challenge ONE Front end&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Challenge ONE | Front End - Portfólio&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; heigth=&#34;600&#34; src=&#34;https://user-images.githubusercontent.com/101413385/168887837-b6d26532-6782-48dc-92eb-e48bf6c57a15.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Primeiros Passos:&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;🔹Marque esse projeto com uma ⭐&lt;/h4&gt; &#xA;&lt;h4&gt;🔹Siga as orientações do que temos neste repositório 📚&lt;/h4&gt; &#xA;&lt;h3&gt;Analisando nosso repositório!&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Este é o repositório base do nosso projeto, nele voce encontrará:&lt;/h3&gt; &#xA;&lt;h4&gt;🔹index.html: Documento HTML finalizado que você pode utilizar em seu projeto. Fonte, CSS e JavaScript já linkado e todas as sessões comentadas. Sinta-se a vontade para executar o seu próprio HTML caso deseje;&lt;/h4&gt; &#xA;&lt;h4&gt;🔹style.css: Documento de CSS com instruções de estilo e também algumas sugestões para seu desenvolvimento&lt;/h4&gt; &#xA;&lt;h4&gt;🔹validacao.js: Documento vazio para que possa aplicar sua lógica de programação, trabalhando com a validação de formulário em JavaScript&lt;/h4&gt; &#xA;&lt;h4&gt;Ao clonar, ou realizar o download do projeto base, você tera essa apresentação:&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; heigth=&#34;600&#34; src=&#34;https://user-images.githubusercontent.com/101413385/168888313-d031e9e1-1449-4b73-bd3c-3102223097f3.png&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sunaku/glove80-keymaps</title>
    <updated>2024-04-11T01:29:34Z</updated>
    <id>tag:github.com,2024-04-11:/sunaku/glove80-keymaps</id>
    <link href="https://github.com/sunaku/glove80-keymaps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&#34;Glorious Engrammer&#34; keymap for Glove80 keyboard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#34;Glorious Engrammer&#34; keymap for MoErgo Glove80&lt;/h1&gt; &#xA;&lt;p&gt;This is &lt;a href=&#34;https://sunaku.github.io/moergo-glove80-keyboard.html&#34;&gt;my Glove80&lt;/a&gt; keymap featuring the &lt;a href=&#34;https://sunaku.github.io/engram-keyboard-layout.html&#34;&gt;Engram&lt;/a&gt; and &lt;a href=&#34;https://sunaku.github.io/engrammer-keyboard-layout.html&#34;&gt;Engrammer&lt;/a&gt; layouts with &lt;a href=&#34;https://github.com/manna-harbour/miryoku&#34;&gt;Miryoku&lt;/a&gt;-style layers and &lt;a href=&#34;https://sunaku.github.io/home-row-mods.html&#34;&gt;home row mods&lt;/a&gt;. Other layouts (&lt;strong&gt;QWERTY&lt;/strong&gt;, Dvorak, Colemak/DH, etc.) and familiar keys (arrows, pinky shifts, function row) are also provided as &#34;training wheels&#34; to aid your transition to the full glory.&lt;/p&gt; &#xA;&lt;h2&gt;Keymap&lt;/h2&gt; &#xA;&lt;p&gt;Version 36 (2024-03-21)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Changes: &lt;a href=&#34;https://github.com/sunaku/glove80-keymaps/releases/v36&#34;&gt;https://github.com/sunaku/glove80-keymaps/releases/v36&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Release: &lt;a href=&#34;https://my.glove80.com/#/layout/user/f4372744-fce9-4678-ac4b-3d8ef8768160&#34;&gt;https://my.glove80.com/#/layout/user/f4372744-fce9-4678-ac4b-3d8ef8768160&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Legend&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://sunaku.github.io/moergo-glove80-keyboard.html#layers&#34;&gt;interactive layer map&lt;/a&gt; for overview and documentation.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is also available as a &lt;a href=&#34;https://sunaku.github.io/moergo-glove80-keyboard-layers.pdf&#34;&gt;printable PDF document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/sunaku/glove80-keymaps/releases&#34;&gt;release notes&lt;/a&gt; for a visual overview of recent updates.&lt;/p&gt; &#xA;&lt;h3&gt;Contents&lt;/h3&gt; &#xA;&lt;!-- vim-markdown-toc GFM --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#guide&#34;&gt;Guide&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#factory-layout&#34;&gt;Factory layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#operating-system&#34;&gt;Operating system&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#home-row-mods&#34;&gt;Home row mods&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#difficulty-level&#34;&gt;Difficulty level&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#one-shot-shifts&#34;&gt;One-shot shifts&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#bilateral-combinations&#34;&gt;Bilateral combinations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#layer-access-keys&#34;&gt;Layer access keys&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#key-auto-repeat&#34;&gt;Key auto-repeat&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#alpha-layouts&#34;&gt;Alpha layouts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#unicode-and-emoji&#34;&gt;Unicode and Emoji&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#os-native-compose&#34;&gt;OS-native compose&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#installing&#34;&gt;Installing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#flashing&#34;&gt;Flashing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#upgrading&#34;&gt;Upgrading&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#customizing&#34;&gt;Customizing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#overriding-the-defaults&#34;&gt;Overriding the defaults&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#reordering-home-row-mods&#34;&gt;Reordering home row mods&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#fine-tuning-the-timing&#34;&gt;Fine-tuning the timing&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#compiling-from-source&#34;&gt;Compiling from source&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#unicodeemoji-characters&#34;&gt;Unicode/Emoji characters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#rearranging-the-base-layer&#34;&gt;Rearranging the base layer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#discussion&#34;&gt;Discussion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vim-markdown-toc --&gt; &#xA;&lt;h2&gt;Guide&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the &lt;em&gt;Glorious Engrammer&lt;/em&gt; keymap! 🧑‍🚀🚀✨ This introductory guide will orient you to the world of custom layouts, keymaps, and firmware. 💁&lt;/p&gt; &#xA;&lt;h3&gt;Factory layout&lt;/h3&gt; &#xA;&lt;p&gt;Before we get started, let&#39;s talk about your escape route back to familiarity.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re a new user (perhaps you&#39;ve just unboxed your Glove80 or you haven&#39;t customized its default keymap), you might find the Factory layer to be useful:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Press &amp;amp; hold the Magic key (bottom left corner key on left half of Glove80)&lt;/li&gt; &#xA; &lt;li&gt;Tap the left hand&#39;s T3 key (furthest key on the upper arc of thumb cluster)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This shortcut will toggle the Factory layer on/off and allow you to experiment with this keymap while maintaining an easy escape route to the factory default.&lt;/p&gt; &#xA;&lt;h3&gt;Operating system&lt;/h3&gt; &#xA;&lt;p&gt;First, let&#39;s configure this keymap to better suit your operating system by adding one of the following lines (just copy+paste whichever is appropriate) atop the &#34;Custom Defined Behaviors&#34; text box in your clone of this keymap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define OPERATING_SYSTEM &#39;L&#39; // Linux&#xA;#define OPERATING_SYSTEM &#39;M&#39; // macOS&#xA;#define OPERATING_SYSTEM &#39;W&#39; // Windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Home row mods&lt;/h3&gt; &#xA;&lt;p&gt;Next, let&#39;s become familiar with the concept of &lt;a href=&#34;https://sunaku.github.io/home-row-mods.html&#34;&gt;home row mods&lt;/a&gt;, which are dual-function keys that &lt;em&gt;either&lt;/em&gt; send normal keycodes (such as the letter &lt;code&gt;A&lt;/code&gt; or the number &lt;code&gt;1&lt;/code&gt;) when tapped or modifiers (such as Shift or Ctrl) when held.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://sunaku.github.io/home-row-mods.png&#34; alt=&#34;Concept diagram of home row mods on a row-staggered keyboard&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The diagram above shows the default &#34;GACS&#34; order of home row mods in this keymap:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;G&#34; means &lt;code&gt;LGUI&lt;/code&gt;, which is the Win key in Windows, Cmd in macOS, Super in Linux.&lt;/li&gt; &#xA; &lt;li&gt;&#34;A&#34; means &lt;code&gt;LALT&lt;/code&gt;, which is the Alt key in Windows and Linux, Option in macOS.&lt;/li&gt; &#xA; &lt;li&gt;&#34;C&#34; means &lt;code&gt;LCTL&lt;/code&gt;, which is the Control key in Windows, macOS, and Linux alike.&lt;/li&gt; &#xA; &lt;li&gt;&#34;S&#34; means &lt;code&gt;LSFT&lt;/code&gt;, which is the Shift key in Windows, macOS, and Linux alike.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you set your operating system to macOS in the preceding section, the home row mods order will be automatically rearranged into &#34;CAGS&#34; because macOS shortcuts tend to use the Cmd key like Windows/Linux use the Ctrl key.&lt;/p&gt; &#xA;&lt;h4&gt;Difficulty level&lt;/h4&gt; &#xA;&lt;p&gt;In order to help ease your transition to using &lt;a href=&#34;https://sunaku.github.io/home-row-mods.html&#34;&gt;home row mods&lt;/a&gt;, this keymap provides a difficulty level setting (like in a video game) that you can set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;//&#xA;// DIFFICULTY_LEVEL specifies your level of expertise with this keymap.&#xA;// It&#39;s meant to help newcomers gradually work their way up to mastery.&#xA;// You can disable this setting by omitting it or assigning a `0` zero.&#xA;//&#xA;#define DIFFICULTY_LEVEL 0 // custom (see defaults below)&#xA;#define DIFFICULTY_LEVEL 1 // novice (500ms)&#xA;#define DIFFICULTY_LEVEL 2 // slower (400ms)&#xA;#define DIFFICULTY_LEVEL 3 // normal (300ms)&#xA;#define DIFFICULTY_LEVEL 4 // faster (200ms)&#xA;#define DIFFICULTY_LEVEL 5 // expert (100ms)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless you&#39;re already proficient in using home row mods, you might consider choosing an appropriate difficulty level to match your current abilities and gradually increase the difficulty level as you work your way up to mastery.&lt;/p&gt; &#xA;&lt;p&gt;On the contrary, you can disable the difficulty level feature altogether by removing the &lt;code&gt;#define DIFFICULTY_LEVEL&lt;/code&gt; line or by setting its value to zero. Then, you can experience the default values of all settings (representing my personal fine-tuned configuration) or directly override them per your taste.&lt;/p&gt; &#xA;&lt;h4&gt;One-shot shifts&lt;/h4&gt; &#xA;&lt;p&gt;The Lower keys on the base layer provide one-shot sticky shift functionality, whereby tapping them temporarily activates a sticky Shift that applies itself to the next key you tap. This can be useful for single letter capitalization, such as for the frequent &#34;I&#34; in English or when typing camel/PascalCase names.&lt;/p&gt; &#xA;&lt;h4&gt;Bilateral combinations&lt;/h4&gt; &#xA;&lt;p&gt;In order to encourage proper touch-typing technique for shortcuts (where one hand holds modifiers while the other taps keys to be modified) and for a more natural typing experience that forgives &lt;a href=&#34;https://sunaku.github.io/home-row-mods.html#same-hand-chords&#34;&gt;same-hand chords&lt;/a&gt; and lingering holds, this keymap provides bilateral combinations enforcement as an optional feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;//&#xA;// ENFORCE_BILATERAL cancels out single-handed home row mods activation by&#xA;// releasing any currently pressed mods and replacing them with plain taps.&#xA;//&#xA;// NOTE: You may still encounter &#34;flashing mods&#34; where an operating system&#xA;// action is triggered by the release of mods, such as LGUI which launches&#xA;// the Windows Start Menu and LALT which opens the Microsoft Office Ribbon.&#xA;//&#xA;#define ENFORCE_BILATERAL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why not just use one-handed shortcuts? I visualize it this way: I&#39;m trying to reach a cookie jar that is high up on a kitchen shelf, so I place one hand on the kitchen counter (the modifier-holding hand) to stabilize myself while I reach up for the jar with my other hand (the modified-key tapping hand). 🙋✨ In contrast, one-handed shortcuts can be more strenuous as you have to contort your hand to hold a modifier &lt;em&gt;and&lt;/em&gt; tap modified keys; plus the act of holding a modifier limits the hand&#39;s range of motion when reaching for keys to be tapped.&lt;/p&gt; &#xA;&lt;p&gt;Nevertheless, if you still prefer using one-handed shortcuts, you can disable bilateral combinations enforcement by removing the &lt;code&gt;#define ENFORCE_BILATERAL&lt;/code&gt; line and, optionally, deleting the bilateral combinations layers in the keymap.&lt;/p&gt; &#xA;&lt;h3&gt;Layer access keys&lt;/h3&gt; &#xA;&lt;p&gt;This keymap borrows heavily from the legendary &lt;a href=&#34;https://github.com/manna-harbour/miryoku&#34;&gt;Miryoku&lt;/a&gt; system, featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Six specialized layers: Cursor, Number, Function, Symbol, Mouse, System&lt;/li&gt; &#xA; &lt;li&gt;Layer access via thumb keys: Backspace, Delete, Escape, Enter, Tab, Space&lt;/li&gt; &#xA; &lt;li&gt;Home row mods on the base layer and on same-hand of all layer access keys&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The idea is that you can always access modifiers with the same hand as the layer access key (which your thumb is holding down) to modify keystrokes on that respective layer. This way, you don&#39;t need to lift your hands off the keyboard or your fingers away from their home position to execute shortcuts.&lt;/p&gt; &#xA;&lt;h3&gt;Key auto-repeat&lt;/h3&gt; &#xA;&lt;p&gt;Since dual-function keys (such as home row mods and layer access keys) have a special effect when held, they won&#39;t auto-repeat when held like a normal key. Instead, you have two options for engaging auto-repeat on dual-function keys:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &#34;Tap then hold&#34; method: first tap (press and release) and then hold (press and don&#39;t release until the desired amount of repetition is reached).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using repetition access keys: first hold a &lt;code&gt;&amp;amp;plain&lt;/code&gt; layer access key and then hold the key you want to repeat for the desired amount of repetition.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sunaku/glove80-keymaps/assets/9863/de0078c5-eeda-40fc-8c5b-39b7c0338cdc&#34; alt=&#34;Using repetition access keys&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alpha layouts&lt;/h3&gt; &#xA;&lt;p&gt;This keymap lets you dynamically switch to alpha layouts (such as QWERTY and Dvorak) other than the one you chose for your base layer during installation, by holding the Magic key and tapping the respective number key for that layer.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Shortcut&lt;/th&gt; &#xA;   &lt;th&gt;Layer number&lt;/th&gt; &#xA;   &lt;th&gt;Alpha layout&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;Engrammer (base layer; your choice)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;Engram&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;Dvorak&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;ColemakDHm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;Colemak&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;QWERTY&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;6&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;Norman&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;7&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;Workman&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Magic+&lt;code&gt;8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;Halmak&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For the first 5 alpha layouts, the respective number key for each layout will illuminate when you tap the Magic key. For example, suppose that we activate the QWERTY layout by typing Magic+&lt;code&gt;5&lt;/code&gt; and that we&#39;ve forgotten about it after some time... 😅 how can we know which alpha layout is currently active? Well, by simply tapping the Magic key, we&#39;ll see that number 5 illuminates in pink 🚨 thereby indicating that the QWERTY alpha layout (at layer number 5) is active.&lt;/p&gt; &#xA;&lt;p&gt;However, note that number row illumination isn&#39;t available for layer 6 onwards. That&#39;s just how the Glove80&#39;s firmware is currently implemented today; you have the option of implementing such enhancements by editing its ZMK code if desired.&lt;/p&gt; &#xA;&lt;h3&gt;Unicode and Emoji&lt;/h3&gt; &#xA;&lt;p&gt;Unicode characters (including Emoji 🔥) are typed through ZMK macros (sequences of multiple keystrokes) generated from the &lt;code&gt;world.yaml&lt;/code&gt; and &lt;code&gt;emoji.yaml&lt;/code&gt; files by the &lt;code&gt;rake&lt;/code&gt; command. However, in order for these macros to take effect, you may need to enable support for Unicode hexadecimal character input in your OS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(macOS) &lt;a href=&#34;https://sevenseacat.net/posts/2018/unicode-in-qmk-on-osx/&#34;&gt;https://sevenseacat.net/posts/2018/unicode-in-qmk-on-osx/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Linux) &lt;a href=&#34;https://help.ubuntu.com/stable/ubuntu-help/tips-specialchars.html.en#ctrlshiftu&#34;&gt;https://help.ubuntu.com/stable/ubuntu-help/tips-specialchars.html.en#ctrlshiftu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Windows) &lt;a href=&#34;https://github.com/samhocevar/wincompose&#34;&gt;https://github.com/samhocevar/wincompose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also: the &lt;code&gt;UNICODE_*_DELAY&lt;/code&gt; settings and the &lt;code&gt;UNICODE_SEQ_*&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;h4&gt;OS-native compose&lt;/h4&gt; &#xA;&lt;p&gt;If you prefer using your operating system&#39;s built-in shortcuts (rather than Unicode) to type international characters in the World layer, activate this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;//&#xA;// WORLD_USE_COMPOSE uses OS-native Compose keycodes instead of Unicode&#xA;// for characters in the &#34;localizing&#34; section of the `world.yaml` file.&#xA;//&#xA;#define WORLD_USE_COMPOSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also: the &lt;code&gt;COMPOSE_KEY_LINUX&lt;/code&gt; setting and the &lt;code&gt;COMPOSE_SEQ_*&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Open the &lt;a href=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/#keymap&#34;&gt;keymap link above&lt;/a&gt; and follow these instructions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Log in (account is required)&lt;/li&gt; &#xA; &lt;li&gt;Clone the keymap to customize and/or build it!&lt;/li&gt; &#xA; &lt;li&gt;Choose your base layout (place at top as layer number #0) via drag &amp;amp; drop.&lt;/li&gt; &#xA; &lt;li&gt;Customize the keymap behavior in this text box.&lt;/li&gt; &#xA; &lt;li&gt;Build the firmware and download the &lt;code&gt;*.uf2&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sunaku/glove80-keymaps/assets/9863/4eeafe4c-0ab3-4900-b241-f62b0467a394&#34; alt=&#34;instructions&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flashing&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For the initial flash, see &lt;a href=&#34;https://docs.moergo.com/glove80-user-guide/customizing-key-layout/#loading-new-zmk-firmware-onto-your-glove80&#34;&gt;&#34;Loading new ZMK firmware onto your Glove80&#34;&lt;/a&gt; and use the &lt;a href=&#34;https://docs.moergo.com/glove80-user-guide/customizing-key-layout/#entering-bootloader-mass-storage-device-mode-on-power-up&#34;&gt;&#34;Entering bootloader mass storage device mode on power-up&#34;&lt;/a&gt; fail-safe on both halves. Subsequent flashes can target just the left half.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you&#39;re installing a different firmware version compared to what your keyboard currently has, then ⚠️ &lt;strong&gt;after flashing both halves&lt;/strong&gt; ⚠️ perform a &lt;a href=&#34;https://docs.moergo.com/glove80-user-guide/troubleshooting/#configuration-factory-reset-and-re-pairing-left-and-right-halves&#34;&gt;&#34;Configuration Factory Reset and re-pair left &amp;amp; right halves procedure&#34;&lt;/a&gt; on both halves and then turn RGB effects on, watch them illuminate, and finally turn them back off for the newly installed firmware to take effect.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the ZMK snippet from the &#34;Custom Defined Behaviors&#34; text box in either keymap linked above and paste into yours. The contents of that text box are also available in the &lt;code&gt;*.dtsi&lt;/code&gt; files provided in this Git repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can diff and copy changes between a JSON export of your keymap (via &#34;Advanced Settings&#34; &amp;gt; &#34;Enable local config&#34; then go back to &#34;Edit&#34; and click &#34;Download&#34;) and the &lt;code&gt;*.json&lt;/code&gt; files provided in this Git repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customizing&lt;/h2&gt; &#xA;&lt;h3&gt;Overriding the defaults&lt;/h3&gt; &#xA;&lt;p&gt;You can override the various &lt;code&gt;#define&lt;/code&gt; settings that govern this keymap by adding them above the snippet in the &#34;Custom Defined Behaviors&#34; text box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// add your overrides here, up at the very top:&#xA;#define OPERATING_SYSTEM &#39;W&#39; // windows&#xA;#define EMOJI_HAIR_STYLE_PRESET &#39;C&#39; // curly_hair&#xA;&#xA;// ... rest of snippet goes here, unchanged ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For your reference, the following diagram shows the default values for all settings and how they inherit from each other, so you can override them together as a group (by inheritance) or each individually (fine-grained).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sunaku/glove80-keymaps/main/define.svg?sanitize=true&#34; alt=&#34;Default values and inheritance for all #define settings&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Reordering home row mods&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;*_FINGER_MOD&lt;/code&gt; settings specify which modifiers are used by home row mod keys. Miryoku&#39;s &#34;GACS&#34; (Win, Alt, Ctrl, Shift) order is the default -- unless you set &lt;code&gt;OPERATING_SYSTEM&lt;/code&gt; to macOS, in which case Win and Ctrl are swapped.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define PINKY_FINGER_MOD LGUI&#xA;#define RING1_FINGER_MOD LALT&#xA;#define RING2_FINGER_MOD RALT&#xA;#define MIDDY_FINGER_MOD LCTL&#xA;#define INDEX_FINGER_MOD LSFT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above settings mirror finger-mod assignments across both hands, but you can also make them different through the following additional settings if you want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define  LEFT_PINKY_MOD RALT&#xA;#define RIGHT_PINKY_MOD LCTL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For completeness, here are all finger-mod settings available for customization:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define  LEFT_PINKY_MOD ...&#xA;#define RIGHT_PINKY_MOD ...&#xA;#define  LEFT_RING1_MOD ...&#xA;#define RIGHT_RING1_MOD ...&#xA;#define  LEFT_RING2_MOD ...&#xA;#define RIGHT_RING2_MOD ...&#xA;#define  LEFT_MIDDY_MOD ...&#xA;#define RIGHT_MIDDY_MOD ...&#xA;#define  LEFT_INDEX_MOD ...&#xA;#define RIGHT_INDEX_MOD ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fine-tuning the timing&lt;/h4&gt; &#xA;&lt;p&gt;Activate the typing layer, launch the &lt;a href=&#34;https://config.qmk.fm/#/test&#34;&gt;QMK Configurator&#39;s testing tool&lt;/a&gt;, and then pretend to use home row mods. Note the timing and duration of keystrokes reported by the tool and then use them to adjust the &lt;code&gt;#define&lt;/code&gt; time thresholds in the &#34;Custom Defined Behaviors&#34; snippet.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling from source&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you&#39;re on Windows, try using &lt;a href=&#34;https://ubuntu.com/desktop/wsl&#34;&gt;Ubuntu in WSL&lt;/a&gt; for the following.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone or download a copy of this Git repository (if you haven&#39;t already).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies OR skip this step if you have Docker on your system:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;add-apt-repository universe &amp;amp;&amp;amp; apt update # may be needed if using Ubuntu &#xA;apt install rake graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your copy of this repository, run &lt;code&gt;rake&lt;/code&gt; OR &lt;code&gt;./rake&lt;/code&gt; if using Docker.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Unicode/Emoji characters&lt;/h4&gt; &#xA;&lt;p&gt;You can customize the preset characters in the Emoji and World layers by editing their respective YAML source files in this repository. Afterwards, run the &lt;code&gt;rake&lt;/code&gt; command and then copy the new &lt;code&gt;keymap.dtsi&lt;/code&gt; contents back into the &#34;Custom Defined Behaviors&#34; text box in the Layout Editor for your keymap.&lt;/p&gt; &#xA;&lt;h4&gt;Rearranging the base layer&lt;/h4&gt; &#xA;&lt;p&gt;If you rearrange the base layer (say, for a custom or alternative layout) then:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Export your keymap as a JSON file (via &#34;Advanced Settings&#34; &amp;gt; &#34;Enable local config&#34; then go back to &#34;Edit&#34; and click &#34;Download&#34;) in the Layout Editor. &lt;img src=&#34;https://github.com/sunaku/glove80-keymaps/assets/9863/5bf7ff67-94bc-4d8e-9673-271863966dd2&#34; alt=&#34;Enable local config&#34;&gt; &lt;img src=&#34;https://github.com/sunaku/glove80-keymaps/assets/9863/a7ad7155-e0e6-47e1-ad4c-c89b4d8521b9&#34; alt=&#34;Download JSON export&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Overwrite the &lt;code&gt;keymap.json&lt;/code&gt; file in this repository with your exported file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;rake&lt;/code&gt; command in this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy the new &lt;code&gt;keymap.dtsi&lt;/code&gt; contents back into the &#34;Custom Defined Behaviors&#34; text box in the Layout Editor for your keymap.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You don&#39;t need to change the per-finger layers (such as &#34;LeftPinky&#34;) manually.&lt;/p&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.com/channels/877392805654306816/1111469812850380831&#34;&gt;&lt;code&gt;#glorious-engrammer&lt;/code&gt;&lt;/a&gt; channel on &lt;a href=&#34;https://www.moergo.com/discord&#34;&gt;MoErgo&#39;s discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Like my work? 👍 Please &lt;a href=&#34;https://sunaku.github.io/vegan-for-life.html&#34;&gt;spare a life&lt;/a&gt; today as thanks! 🐄🐖🐑🐔🐣🐟✨🙊✌&lt;br&gt; Why? For 💕 ethics, the 🌎 environment, and 💪 health; see link above. 🙇&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(the ISC license)&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2023 Suraj N. Kurapati &lt;a href=&#34;https://github.com/sunaku&#34;&gt;https://github.com/sunaku&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34; AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.&lt;/p&gt;</summary>
  </entry>
</feed>