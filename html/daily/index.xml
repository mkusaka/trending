<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-04T01:33:23Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fake-useragent/fake-useragent</title>
    <updated>2022-12-04T01:33:23Z</updated>
    <id>tag:github.com,2022-12-04:/fake-useragent/fake-useragent</id>
    <link href="https://github.com/fake-useragent/fake-useragent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Up-to-date simple useragent faker with real world database&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/fake-useragent/fake-useragent/actions/workflows/action.yml?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/fake-useragent/fake-useragent/actions/workflows/action.yml/badge.svg?branch=master&#34; alt=&#34;Test &amp;amp; Deploy fake-useragent&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;fake-useragent&lt;/h1&gt; &#xA;&lt;p&gt;Up-to-date simple useragent faker with real world database&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data is pre-downloaded from &lt;a href=&#34;http://useragentstring.com/&#34;&gt;useragentstring.com&lt;/a&gt; and part of the package&lt;/li&gt; &#xA; &lt;li&gt;Retrieves user-agent strings locally&lt;/li&gt; &#xA; &lt;li&gt;Supports Python 3.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Fallback&lt;/em&gt; to external resource (&lt;a href=&#34;http://useragentstring.com/&#34;&gt;useragentstring.com&lt;/a&gt;) + caching&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install fake-useragent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you have multiple Python / pip versions installed, use &lt;code&gt;pip3&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip3 install fake-useragent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from fake_useragent import UserAgent&#xA;ua = UserAgent()&#xA;&#xA;ua.ie&#xA;# Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US);&#xA;ua.msie&#xA;# Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)&#39;&#xA;ua[&#39;Internet Explorer&#39;]&#xA;# Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)&#xA;ua.opera&#xA;# Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11&#xA;ua.chrome&#xA;# Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1216.0 Safari/537.2&#39;&#xA;ua.google&#xA;# Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.13 (KHTML, like Gecko) Chrome/24.0.1290.1 Safari/537.13&#xA;ua[&#39;google chrome&#39;]&#xA;# Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11&#xA;ua.firefox&#xA;# Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1&#xA;ua.ff&#xA;# Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1&#xA;ua.safari&#xA;# Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25&#xA;&#xA;# and the best one, get a random browser user-agent string&#xA;ua.random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;p&gt;If you want to specify your own browser list, you can do that via the &lt;code&gt;browsers&lt;/code&gt; argument (default is: &lt;code&gt;[&#34;chrome&#34;, &#34;edge&#34;, &#34;internet explorer&#34;, &#34;firefox&#34;, &#34;safari&#34;, &#34;opera&#34;]&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from fake_useragent import UserAgent&#xA;ua = UserAgent(browsers=[&#39;edge&#39;, &#39;chrome&#39;])&#xA;ua.random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add your own fallback string using the &lt;code&gt;fallback&lt;/code&gt; parameter, in rare cases everything else failed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import fake_useragent&#xA;&#xA;ua = fake_useragent.UserAgent(fallback=&#39;your favorite Browser&#39;)&#xA;# in case if something went wrong, one more time it is REALLY!!! rare case&#xA;ua.random == &#39;your favorite Browser&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you will try to get unknown browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from fake_useragent import UserAgent&#xA;ua = UserAgent()&#xA;ua.unknown&#xA;# Traceback (most recent call last):&#xA;#   ...&#xA;# fake_useragent.errors.FakeUserAgentError: Error occurred during getting browser: unknown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default &lt;code&gt;fake-useragent&lt;/code&gt; will use it&#39;s local (&lt;a href=&#34;https://raw.githubusercontent.com/fake-useragent/fake-useragent/master/fake_useragent/data/browsers.json&#34;&gt;&lt;code&gt;browsers.json&lt;/code&gt;&lt;/a&gt;) data file as the data source.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t want to use the local data, but use the external data source to retrieve the user-agents. Set &lt;code&gt;use_external_data&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from fake_useragent import UserAgent&#xA;ua = UserAgent(use_external_data=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As a fallback method &lt;code&gt;fake-useragent&lt;/code&gt; will retrieve it&#39;s data from an external data source and stores in a cache file &lt;em&gt;or&lt;/em&gt; when you expcility set &lt;code&gt;use_external_data=True&lt;/code&gt; as parameter. You can trigger an update to the cache file by calling &lt;code&gt;update()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;from fake_useragent import UserAgent&#xA;ua = UserAgent()&#xA;ua.update()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default location of the external resource cache file is in your os temp dir, like &lt;code&gt;/tmp&lt;/code&gt;.&lt;br&gt; You can change the temp directory by changing &lt;code&gt;cache_path&lt;/code&gt; (mainly useful together when &lt;code&gt;use_external_data&lt;/code&gt; is set to True).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import fake_useragent&#xA;&#xA;# I am strongly! recommend using a version suffix&#xA;location = &#39;/home/user/fake_useragent%s.json&#39; % fake_useragent.VERSION&#xA;&#xA;ua = fake_useragent.UserAgent(use_external_data=True, cache_path=location)&#xA;ua.random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to safe some attributes from overriding them in UserAgent by &lt;code&gt;__getattr__&lt;/code&gt; method use &lt;code&gt;safe_attrs&lt;/code&gt; you can pass there attributes names. At least this will prevent you from raising FakeUserAgentError when attribute not found.&lt;/p&gt; &#xA;&lt;p&gt;For example, when using fake&lt;em&gt;useragent with &lt;code&gt;injections &amp;lt;https://github.com/tailhook/injections&amp;gt;&lt;/code&gt;&lt;/em&gt; you need to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import fake_useragent&#xA;&#xA;ua = fake_useragent.UserAgent(safe_attrs=(&#39;__injections__&#39;,))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please, do not use if you don&#39;t understand why you need this. This is magic for rarely extreme case.&lt;/p&gt; &#xA;&lt;h3&gt;Experiencing issues?&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you using latest version!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install --upgrade fake-useragent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check version via python console:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import fake_useragent&#xA;&#xA;print(fake_useragent.VERSION)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you are always welcome to post &lt;a href=&#34;https://github.com/fake-useragent/fake-useragent/issues&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please do not forget to mention the version that you are using.&lt;/p&gt; &#xA;&lt;h3&gt;Developers&lt;/h3&gt; &#xA;&lt;p&gt;Since GitHub Actions is unable to reach useragentstring.com. We can run the script below to automatically scrape the user-agent strings from the external data source. The script will copy the &lt;a href=&#34;https://jsonlines.org/&#34;&gt;JSONlines&lt;/a&gt; file to the &lt;code&gt;src/fake_useragent/data&lt;/code&gt; directory. Execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./update_data_file.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data JSON file is part of the Python package, see &lt;a href=&#34;https://raw.githubusercontent.com/fake-useragent/fake-useragent/master/pyproject.toml&#34;&gt;pyproject.toml&lt;/a&gt;. Read more about &lt;a href=&#34;https://setuptools.pypa.io/en/latest/userguide/datafiles.html&#34;&gt;Data files support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tests&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install -r requirements.txt&#xA;tox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changelog&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;1.1.0 November 26, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;pkg_resource&lt;/code&gt; as fallback mechanism in trying to retrieve the local JSON data file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;1.0.1 November 10, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;importlib-metadata&lt;/code&gt; &amp;amp; &lt;code&gt;importlib-resources&lt;/code&gt; as dependencies&lt;/li&gt; &#xA;   &lt;li&gt;Check on specific Python version regarding the importlib resources (python v3.10 or higher) in order to have &lt;code&gt;files()&lt;/code&gt; working&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;importlib_metadata&lt;/code&gt; should now also work on Python version before 3.8&lt;/li&gt; &#xA;   &lt;li&gt;Remove obsolete &lt;code&gt;MANIFEST.in&lt;/code&gt; file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;1.0.0 November 17, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make the JSON Lines data file part of the Python package, data is retrieved locally &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Extend the &lt;code&gt;myproject.toml&lt;/code&gt; file with &lt;code&gt;package-data&lt;/code&gt; support&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Remove centralized caching server implementation&lt;/li&gt; &#xA;   &lt;li&gt;Make real unit-tests which should run reliable, fast, independent and without Internet connection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.14 November 5, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Improve code quality standards using modern Python &amp;gt;=3.7 syntax&lt;/li&gt; &#xA;   &lt;li&gt;Migrated to &lt;code&gt;pyproject.toml&lt;/code&gt; build system format + syntax check&lt;/li&gt; &#xA;   &lt;li&gt;Add additional classifiers to the toml file&lt;/li&gt; &#xA;   &lt;li&gt;Improved &lt;code&gt;tox.ini&lt;/code&gt; file&lt;/li&gt; &#xA;   &lt;li&gt;Improved GitHub Actions job using pip cache&lt;/li&gt; &#xA;   &lt;li&gt;And various small fixes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.13 October 21, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Implement &lt;code&gt;browsers&lt;/code&gt; argument, allowing you to override the browser names you want to use&lt;/li&gt; &#xA;   &lt;li&gt;Fix browser listing of Internet Explorer and Edge&lt;/li&gt; &#xA;   &lt;li&gt;Don&#39;t depend on w3schools.com anymore&lt;/li&gt; &#xA;   &lt;li&gt;Clean-up data (temp) file format&lt;/li&gt; &#xA;   &lt;li&gt;Update fallback cache server URL / use JSON Lines as file format&lt;/li&gt; &#xA;   &lt;li&gt;Move to GitHub Actions instead of Travis&lt;/li&gt; &#xA;   &lt;li&gt;Using &lt;a href=&#34;https://pypi.org/project/black/&#34;&gt;&lt;code&gt;black&lt;/code&gt;&lt;/a&gt; Python formatter in favour of Flake&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.12 March 31, 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;forked&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.11 October 4, 2018&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;moved &lt;code&gt;s3 + cloudfront&lt;/code&gt; fallback to &lt;code&gt;heroku.com&lt;/code&gt;, cuz someone from Florida did ~25M requests last month&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.10 February 11, 2018&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Minor fix docs &lt;code&gt;cloudfront&lt;/code&gt; url&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.9 February 11, 2018&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;fix &lt;code&gt;w3schools.com&lt;/code&gt; renamed &lt;code&gt;IE/Edge&lt;/code&gt; to &lt;code&gt;Edge/IE&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;moved &lt;code&gt;heroku.com&lt;/code&gt; fallback to &lt;code&gt;s3 + cloudfront&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;stop testing Python3.3 and pypy&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.8 November 2, 2017&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;fix &lt;code&gt;useragentstring.com&lt;/code&gt; &lt;code&gt;Can&#39;t connect to local MySQL server through socket&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.7 April 2, 2017&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;fix broken README.rst&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.6 April 2, 2017&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;fixes bug &lt;code&gt;use_cache_server&lt;/code&gt; do not affected anything&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;w3schools.com &amp;lt;https://www.w3schools.com/browsers/browsers_stats.asp&amp;gt;&lt;/code&gt;_ moved to &lt;code&gt;https&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;verify_ssl&lt;/code&gt; options added, by default it is &lt;code&gt;True&lt;/code&gt; (&lt;code&gt;urllib.urlopen&lt;/code&gt; ssl context for Python 2.7.9- and 3.4.3- is not supported)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.5 February 28, 2017&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;added &lt;code&gt;ua.edge&lt;/code&gt; alias to Internet Explorer&lt;/li&gt; &#xA;   &lt;li&gt;w3schools.com starts displaying &lt;code&gt;Edge&lt;/code&gt; statistic&lt;/li&gt; &#xA;   &lt;li&gt;Python 2.6 is not tested anymore&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;use_cache_server&lt;/code&gt; option added&lt;/li&gt; &#xA;   &lt;li&gt;Increased &lt;code&gt;fake_useragent.settings.HTTP_TIMEOUT&lt;/code&gt; to 5 seconds&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.4 December 14, 2016&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added custom data file location support&lt;/li&gt; &#xA;   &lt;li&gt;Added &lt;code&gt;fallback&lt;/code&gt; browser support, in case of unavailable data sources&lt;/li&gt; &#xA;   &lt;li&gt;Added alias &lt;code&gt;fake_useragent.FakeUserAgent&lt;/code&gt; for &lt;code&gt;fake_useragent.UserAgent&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Added alias &lt;code&gt;fake_useragent.UserAgentError&lt;/code&gt; for &lt;code&gt;fake_useragent.FakeUserAgentError&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Reduced &lt;code&gt;fake_useragent.settings.HTTP_TIMEOUT&lt;/code&gt; to 3 seconds&lt;/li&gt; &#xA;   &lt;li&gt;Started migration to new data file format&lt;/li&gt; &#xA;   &lt;li&gt;Simplified a lot 4+ years out of date code&lt;/li&gt; &#xA;   &lt;li&gt;Better thread/greenlet safety&lt;/li&gt; &#xA;   &lt;li&gt;Added verbose logging&lt;/li&gt; &#xA;   &lt;li&gt;Added &lt;code&gt;safe_attrs&lt;/code&gt; for prevent overriding by &lt;code&gt;__getattr__&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;0.1.3 November 24, 2016&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Added hosted data file, when remote services is unavailable&lt;/li&gt; &#xA;   &lt;li&gt;Raises &lt;code&gt;fake_useragent.errors.FakeUserAgentError&lt;/code&gt; in case when there is not way to download data&lt;/li&gt; &#xA;   &lt;li&gt;Raises &lt;code&gt;fake_useragent.errors.FakeUserAgentError&lt;/code&gt; instead of &lt;code&gt;None&lt;/code&gt; in case of unknown browser&lt;/li&gt; &#xA;   &lt;li&gt;Added &lt;code&gt;gevent.sleep&lt;/code&gt; support in &lt;code&gt;gevent&lt;/code&gt; patched environment when trying to download data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;X.X.X xxxxxxx xx, xxxx&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;xxxxx ?????&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Authors&lt;/h3&gt; &#xA;&lt;p&gt;You can visit &lt;a href=&#34;https://github.com/fake-useragent/fake-useragent/raw/master/AUTHORS&#34;&gt;authors page&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tc39/proposal-set-methods</title>
    <updated>2022-12-04T01:33:23Z</updated>
    <id>tag:github.com,2022-12-04:/tc39/proposal-set-methods</id>
    <link href="https://github.com/tc39/proposal-set-methods" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proposal for new Set methods in JS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Set Methods for JavaScript&lt;/h1&gt; &#xA;&lt;p&gt;This is a proposal to add methods like union and intersection to JavaScript&#39;s built-in &lt;code&gt;Set&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;p&gt;It is currently at stage 3.&lt;/p&gt; &#xA;&lt;h2&gt;Proposal&lt;/h2&gt; &#xA;&lt;p&gt;This would add the following methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.intersection(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.union(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.difference(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.symmetricDifference(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.isSubsetOf(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.isSupersetOf(other)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Set.prototype.isDisjointFrom(other)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These methods would all require their arguments to be a Set, or at least something which looks like a Set in terms of having a numeric &lt;code&gt;size&lt;/code&gt; property as well as &lt;code&gt;keys&lt;/code&gt; and &lt;code&gt;has&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tc39/proposal-set-methods/main/details.md&#34;&gt;details.md&lt;/a&gt; for details of current decisions made in this proposal.&lt;/p&gt; &#xA;&lt;p&gt;Rendered spec text is available &lt;a href=&#34;https://tc39.es/proposal-set-methods/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;TC39 meeting notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/notes/raw/8711614630f631cb51dfb803caa087bedfc051a3/meetings/2018-05/may-22.md#set-methods&#34;&gt;May 2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/notes/raw/8711614630f631cb51dfb803caa087bedfc051a3/meetings/2019-01/jan-29.md#update-on-set-methods&#34;&gt;January 2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/notes/raw/6f7e075341e435f22777b07a3ee5141442d2d8a7/meetings/2022-03/mar-31.md#extending-built-ins&#34;&gt;March 2022&lt;/a&gt; - discussion of how to extend built-ins in general&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/notes/raw/6f7e075341e435f22777b07a3ee5141442d2d8a7/meetings/2022-07/jul-20.md#set-methods-how-to-access-properties-of-the-argument&#34;&gt;July 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/notes/raw/65a82252aa14c273082e7687c6712bb561bc087a/meetings/2022-09/sep-14.md#set-methods-part-iii&#34;&gt;September 2022&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;(Semi)relevant previous discussions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/proposal-rm-builtin-subclassing&#34;&gt;proposal-rm-builtin-subclassing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tc39/ecma262/pull/13&#34;&gt;Map#map and Map#filter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esdiscuss.org/notes/2014-11-19&#34;&gt;Map.prototype.map and Map.prototype.filter (spec) + Set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esdiscuss.org/topic/map-filter-map-and-more&#34;&gt;Map: filter/map and more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esdiscuss.org/topic/new-set-prototype-methods&#34;&gt;Original topic regarding this proposal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://esdiscuss.org/topic/new-set-methods-again&#34;&gt;Newer topic regarding this proposal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Comparison with other languages&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tc39/proposal-set-methods/main/other-languages.md&#34;&gt;other languages document&lt;/a&gt; to get overview of &lt;code&gt;Set&lt;/code&gt; methods in other languages.&lt;/p&gt; &#xA;&lt;h2&gt;Naming&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/tc39/proposal-set-methods/main/name-bikeshedding.md&#34;&gt;naming bikeshedding&lt;/a&gt; document for details.&lt;/p&gt; &#xA;&lt;p&gt;We decided to choose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Symmetric difference&lt;/strong&gt; - &lt;strong&gt;&lt;code&gt;symmetricDifference&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intersection&lt;/strong&gt; - &lt;strong&gt;&lt;code&gt;intersection&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Union&lt;/strong&gt; - &lt;strong&gt;&lt;code&gt;union&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Difference&lt;/strong&gt; - &lt;strong&gt;&lt;code&gt;difference&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Advent-Of-Vue/2022-gift-search-bar</title>
    <updated>2022-12-04T01:33:23Z</updated>
    <id>tag:github.com,2022-12-04:/Advent-Of-Vue/2022-gift-search-bar</id>
    <link href="https://github.com/Advent-Of-Vue/2022-gift-search-bar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Advent Of Vue 2022&#39;s Gift Search Bar Puzzle Starter + Solution&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Advent Of Vue 2022&lt;/h1&gt; &#xA;&lt;h2&gt;If you didn&#39;t get here from an email, read this section! Skip it otherwise.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://adventofvue.com&#34;&gt;Advent Of Vue&lt;/a&gt; is a series of 24 Vue coding challenges that are sent out every day from December 1 to December 24 via &lt;a href=&#34;https://www.getrevue.co/profile/AdventOfVue&#34;&gt;a dedicated newsletter&lt;/a&gt;. If you&#39;d like to receive more of these puzzles in the future, go ahead and sign up!&lt;/p&gt; &#xA;&lt;h2&gt;Problem description&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;re tasked with building a debounced search bar for products from &lt;a href=&#34;https://dummyjson.com/docs/products#search&#34;&gt;DummyJSON&#39;s product API&lt;/a&gt;. In case you&#39;re not familiar with the concept of &lt;em&gt;debouncing&lt;/em&gt;, it&#39;s a technique that allows one to delay a function&#39;s execution until a specific amount of time has elapsed since the last call.&lt;/p&gt; &#xA;&lt;p&gt;For this challenge, you&#39;ll need to add a 300-millisecond delay to the &lt;code&gt;findProducts&lt;/code&gt; function. You can make use of readily available debounce implementations, or try writing one yourself.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also need to display a generic loading spinner/message, and if the function executes successfully, place suggested products&#39; names and price tags inside an unordered list. Otherwise, use native &lt;code&gt;alert()&lt;/code&gt; to show a generic error message.&lt;/p&gt; &#xA;&lt;p&gt;If the search term gets reset back to an empty string, clear the search suggestions too.&lt;/p&gt; &#xA;&lt;h2&gt;Recording of an example solution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/avf8OyNDJfo&#34;&gt;https://youtu.be/avf8OyNDJfo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Maciej Pędzich (Mac):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maciejpedzich&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/MaciejPedzich&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://notacult.social/@maciejpedzich&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maciejpedzi.ch&#34;&gt;My website (coming next year)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Ovi/DummyJSON&#34;&gt;DummyJSON project&lt;/a&gt; by Muhammad Ovi.&lt;/p&gt; &#xA;&lt;p&gt;Based on &lt;a href=&#34;https://stackblitz.com/edit/vue3-vite-starter&#34;&gt;a Stackblitz project by tony19&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>