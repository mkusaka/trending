<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:36:37Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FireCubeStudios/Protecc</title>
    <updated>2022-09-04T01:36:37Z</updated>
    <id>tag:github.com,2022-09-04:/FireCubeStudios/Protecc</id>
    <link href="https://github.com/FireCubeStudios/Protecc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It protecc&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Protecc&lt;/h2&gt; &#xA;&lt;p&gt;Protecc is a modern open source 2FA TOTP code authenticator client for Windows with a wide range of customization and privacy features such as Windows Hello support, privacy filter and export.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apps.microsoft.com/store/detail/protecc-2fa-client/9PJX91M06TZS&#34;&gt;Store download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://store-images.s-microsoft.com/image/apps.36005.14273821654312693.614a2153-2264-4640-872a-02a2690944dd.0647a0bf-af72-4d44-b0c9-7e097abaa082&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kspearrin/Otp.NET&#34;&gt;https://github.com/kspearrin/Otp.NET&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you get an error of certificate not found go open Package Manifest &amp;gt; Certificates and generate your own new one&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>luckyzhz/Software-Designer</title>
    <updated>2022-09-04T01:36:37Z</updated>
    <id>tag:github.com,2022-09-04:/luckyzhz/Software-Designer</id>
    <link href="https://github.com/luckyzhz/Software-Designer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;软考中级教程-软件设计师&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;软考中级教程-软件设计师&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;这是一份“软件设计师”的学习路径。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;建立这个项目的原因&lt;/h2&gt; &#xA;&lt;p&gt;在下于 2021 年下半年参加了【软考中级-软件设计师】的考试。顺利一次性通过考试，分数是（满分 75）：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;上午（基础知识）：62 / 75&lt;/li&gt; &#xA; &lt;li&gt;下午（应用技术）：61 / 75&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;换算成百分制，刚好都超过了 80 分，因此记录下自己的学习经验，以飨后人。&lt;/p&gt; &#xA;&lt;h2&gt;1. 快速过一遍视频（5 天）&lt;/h2&gt; &#xA;&lt;strike&gt;&#xA;  视频教程推荐王勇老师讲授的。b 站链接： &#xA; &lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1rW411j7e7?from=search&amp;amp;seid=9540090189214316110&amp;amp;spm_id_from=333.337.0.0&#34;&gt;软件设计师考试教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/strike&gt;&#xA;&lt;p&gt;&#xA; &lt;strike&gt;&#xA;  &lt;em&gt;&lt;strong&gt;王勇老师语速较慢，建议 1.5 倍速以上播放。&lt;/strong&gt;&lt;/em&gt; &#xA; &lt;/strike&gt;&lt;/p&gt; &#xA;&lt;p&gt;王勇老师的网课视频已被下架，在下打算录制一份&lt;strong&gt;完全开源的软考网课&lt;/strong&gt;。敬请期待。&lt;/p&gt; &#xA;&lt;p&gt;当我们快速观看了一遍视频，我们就相对有底了，也能建立起基本的（尽管可能是模糊的）知识架构。&lt;/p&gt; &#xA;&lt;p&gt;这一步，我花了 3 天。&lt;strong&gt;建议 5 天内完成&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;2. 逐章细看视频，逐章刷选择题（45 天）&lt;/h2&gt; &#xA;&lt;p&gt;真题 app 推荐【软考通】。豌豆荚链接：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wandoujia.com/apps/8095598&#34;&gt;软考通&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;193 集视频，除了第一集的软考介绍，共分 16 章。在这一步，我们应该认真听讲完一章后，就完成对应章节的选择题（也就是上午题）。每一章【看视频 + 做题】，大约花费 2~3 天。因此&lt;strong&gt;建议 45 天内完成&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;真题 app 和视频的章节划分有所不同，但大致可以对应。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3. 分类攻破下午题（应用技术）（15 天）&lt;/h2&gt; &#xA;&lt;p&gt;下午的应用技术题型是固定的，共 6 道题，最后两道二选一：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;结构化分析与设计，考查数据流图 DFD&lt;/li&gt; &#xA; &lt;li&gt;数据库的分析和设计，考查 ER 图与关系模式&lt;/li&gt; &#xA; &lt;li&gt;面向对象分析与设计，考查常用 UML 图&lt;/li&gt; &#xA; &lt;li&gt;常用数据结构和算法（C 语言）&lt;/li&gt; &#xA; &lt;li&gt;设计模式（C++ 和 Java 二选一）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;在这一步，我们可以一次复习一种题型对应的视频，然后，一次大量练习攻克【&lt;strong&gt;一种题型&lt;/strong&gt;】。例如看了数据流图相关的视频后，我们可以把多年的数据流图真题都打印出来，一次性吃透数据流图题。每种题型花费 2~3 天，因此&lt;strong&gt;建议 15 天内完成&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;4. 熟悉 C 和 Java 的基本语法&lt;/h2&gt; &#xA;&lt;p&gt;有些同学可能没使用过 C 和 Java，这里推荐翁恺老师的课程：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.icourse163.org/course/0809ZJU007A-199001?outVendor=zw_mooc_pclszykctj_&#34;&gt;程序设计入门——C语言&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.icourse163.org/course/0809ZJU007B-200001?outVendor=zw_mooc_pclszykctj_&#34;&gt;C语言程序设计进阶&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.icourse163.org/course/0809ZJU013-1001541001?outVendor=zw_mooc_pclszykctj_&#34;&gt;零基础学Java语言&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.icourse163.org/course/0809ZJU012-1001542001?outVendor=zw_mooc_pclszykctj_&#34;&gt;面向对象程序设计——Java语言&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;因为在下选做的是 Java，所以没有 C++ 的推荐课程。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;5. 真题与答案可能有错谬&lt;/h2&gt; &#xA;&lt;p&gt;实际上，软考办官方从来没有公布过真题与答案。网上流传的真题与答案，是考友的回忆或是其他非常规渠道获得的。题目大致上没问题，但是答案真的仅仅是【参考答案】。当然，经过考友的讨论与整理，这些答案正确率还是比较高的。因此，对于参考答案，【&lt;strong&gt;不可不信，不可全信&lt;/strong&gt;】。&lt;/p&gt; &#xA;&lt;h2&gt;6. 课本可当作文档查阅&lt;/h2&gt; &#xA;&lt;p&gt;通读课本的时间成本相当高，相关知识点也比较难以理解。因此，我们可以把课本可当作文档查阅，遇到有疑义的地方，再查阅甄别。&lt;/p&gt; &#xA;&lt;h2&gt;7. 考前一周刷整卷&lt;/h2&gt; &#xA;&lt;p&gt;经过上面的步骤后，我们对“软件设计师”的知识点已经掌握得比较扎实。可在考前一周把近五年的真题试卷打印出来，给自己进行模拟考。这样既能熟悉试卷结构，又能保持题感。&lt;/p&gt; &#xA;&lt;p&gt;最后，祝大家都顺利一次过考。good luck 😁&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;别忘了 star ⭐ 本项目哦&lt;/em&gt; 😁&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;录制真题讲解视频 😁&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>