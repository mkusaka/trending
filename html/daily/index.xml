<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-27T01:32:32Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CTI-Driven/LOLBins</title>
    <updated>2023-09-27T01:32:32Z</updated>
    <id>tag:github.com,2023-09-27:/CTI-Driven/LOLBins</id>
    <link href="https://github.com/CTI-Driven/LOLBins" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The LOLBins CTI-Driven (Living-Off-the-Land Binaries Cyber Threat Intelligence Driven) is a project that aims to help cyber defenders understand how LOLBin binaries are used by threat actors during an intrusion in a graphical and digestible format for the TIPs platform using the STIX format.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LOLBins CTI-Driven&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CTI-Driven/LOLBins/main/logo.png&#34; style=&#34;border-radius:60px;width:20%;height:auto&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;The LOLBins CTI-Driven (Living-Off-the-Land Binaries Cyber Threat Intelligence Driven) is a project that aims to help cyber defenders understand how LOLBin binaries are used by threat actors during an intrusion in a graphical and digestible format for the TIPs platform using the STIX format. Therefore providing valuable insights and context about LOLBins from a Cyber threat Intel and Cyber defence perspective.&lt;/p&gt; &#xA;&lt;p&gt;This includes :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Associated campaigns&lt;/li&gt; &#xA; &lt;li&gt;Associated APTs&lt;/li&gt; &#xA; &lt;li&gt;Associated TTPs&lt;/li&gt; &#xA; &lt;li&gt;Associated Malware&lt;/li&gt; &#xA; &lt;li&gt;Associated commands&lt;/li&gt; &#xA; &lt;li&gt;Associated Mitigations&lt;/li&gt; &#xA; &lt;li&gt;Associated CVEs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Website: https://lolbins-ctidriven.vercel.app (Recommended browser: Firefox)&lt;/p&gt; &#xA;&lt;h2&gt;Workflow diagram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CTI-Driven/LOLBins/main/screenshots/workflow.png&#34; alt=&#34;Workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Output Samples:&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;code&gt;STIX2 Visualizer&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CTI-Driven/LOLBins/main/screenshots/stix2.png&#34; alt=&#34;STIX2.1&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;JSON Crack Visualizer&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CTI-Driven/LOLBins/main/screenshots/jsoncrack.png&#34; alt=&#34;JsonCrack&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;YouTube Video Demo:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/xiu17NC61J4&#34; title=&#34;LOLBins CTI-Driven Youtube Video&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CTI-Driven/LOLBins/main/screenshots/video.png&#34; alt=&#34;Youtube Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Agenda for 2023:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add the Top 15&amp;nbsp;LOLBins files&amp;nbsp;that are being used by&amp;nbsp;threat actors.&lt;/li&gt; &#xA; &lt;li&gt;Add an API to streamline the passing of LOLBinCTI-Driven JSON files&amp;nbsp;to the TIPs platform.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author:&lt;/h2&gt; &#xA;&lt;p&gt;Linkedin : &lt;a href=&#34;https://www.linkedin.com/in/nounou-mbeiri&#34;&gt;Nounou Mbeiri&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twitter : &lt;a href=&#34;https://twitter.com/Nounou_Mbeiri&#34;&gt;@Nounou Mbeiri&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related Living-Off-the-Land Binaries projects:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lolol.farm&#34;&gt;https://lolol.farm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/scott-small-20ba0164/&#34;&gt;Scott Small&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/carlos-d-980a3541/&#34;&gt;CARLOS DIAZ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/ivanportillomorales/&#34;&gt;Ivan Portillo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;&#34;&gt;Mark W&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>arm-university/Introduction-to-Computer-Architecture-Education-Kit</title>
    <updated>2023-09-27T01:32:32Z</updated>
    <id>tag:github.com,2023-09-27:/arm-university/Introduction-to-Computer-Architecture-Education-Kit</id>
    <link href="https://github.com/arm-university/Introduction-to-Computer-Architecture-Education-Kit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gain an understanding of the fundamental topics and concepts of computer architecture including the application of these with modern Arm processors&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction-to-Computer-Architecture-Education-Kit&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to our Introduction to Computer Architecture Education Kit!&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/arm-university/Introduction-to-Computer-Architecture-Education-Kit/archive/refs/heads/main.zip&#34;&gt;Download the EdKit here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Our flagship offering to universities worldwide is the Arm University Program Education Kit series.&lt;/p&gt; &#xA;&lt;p&gt;These self-contained educational materials offered exclusively and at no cost to academics and teaching staff worldwide. They’re designed to support your day-to-day teaching on core electronic engineering and computer science subjects. You have the freedom to choose which modules to teach – you can use all the modules in the Education Kit or only those that are most appropriate to your teaching outcomes.&lt;/p&gt; &#xA;&lt;p&gt;Our Introduction to Computer Architecture Education Kit equips your students with the fundamental concepts of computer architecture and how these concepts are applied and implemented in modern processors. This kit is suitable for introductory and mid-level computer architecture courses in Electronic and Computer Engineering, and Computer Science. A full description of the education kit can be found &lt;a href=&#34;https://www.arm.com/resources/education/education-kits/computer-architecture&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Kit specification:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A full set of lecture slides, ready for use in a typical 10-12 week undergraduate course (full syllabus below).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lab manual with solutions for faculty are available upon request from &lt;a href=&#34;https://www.arm.com/resources/education/education-kits/aup-donation-request-form&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt; The labs are based on a simple 5-stage processor for education purposes called the Arm Education Core, which is written in Verilog and can run a subset of the Armv8-A Assembly instructions. These labs provide a full hands-on experience of demonstrating and implementing Computer Architecture concepts such as pipelining, forwarding paths, stalls, control hazard solution using the Arm Education Core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: Digital electronics, basics of hardware description language (Verilog), and familiarity with basic Assembly programming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Course Aim&lt;/h2&gt; &#xA;&lt;p&gt;To produce students with knowledge of the fundamental topics and concepts of computer architecture including the application of these with modern Arm processors.&lt;/p&gt; &#xA;&lt;h2&gt;Syllabus&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;An Introduction to Computer Architecture&lt;/li&gt; &#xA; &lt;li&gt;Fundamentals of Computer Design&lt;/li&gt; &#xA; &lt;li&gt;Pipelining&lt;/li&gt; &#xA; &lt;li&gt;Branches and Limits to Pipelining&lt;/li&gt; &#xA; &lt;li&gt;Exploiting Instruction-Level Parallelism&lt;/li&gt; &#xA; &lt;li&gt;Memory&lt;/li&gt; &#xA; &lt;li&gt;Caches&lt;/li&gt; &#xA; &lt;li&gt;Multicore&lt;/li&gt; &#xA; &lt;li&gt;Multithreading&lt;/li&gt; &#xA; &lt;li&gt;Vector, SIMD, GPUs&lt;/li&gt; &#xA; &lt;li&gt;SoC Case Study&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;You are free to fork or clone this material. See &lt;a href=&#34;https://github.com/arm-university/Introduction-to-Computer-Architecture-Education-Kit/raw/main/License/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for the complete license.&lt;/p&gt; &#xA;&lt;h2&gt;Inclusive Language Commitment&lt;/h2&gt; &#xA;&lt;p&gt;Arm is committed to making the language we use inclusive, meaningful, and respectful. Our goal is to remove and replace non-inclusive language from our vocabulary to reflect our values and represent our global ecosystem.&lt;/p&gt; &#xA;&lt;p&gt;Arm is working actively with our partners, standards bodies, and the wider ecosystem to adopt a consistent approach to the use of inclusive language and to eradicate and replace offensive terms. We recognise that this will take time. This course has been updated to replace references to non-inclusive language. We recognise that some of you will be accustomed to using the previous terms and may not immediately recognise their replacements. Please refer to the following examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When introducing the AMBA AXI Protocols, we will use the term ‘Manager’ instead of ‘Master’ and ‘Subordinate’ instead of ‘Slave’.&lt;/li&gt; &#xA; &lt;li&gt;When introducing the architecture, we will use the term ‘Requester’ instead of ‘Master’ and ‘Completer’ instead of ‘Slave’.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This course may still contain other references to non-inclusive language; it will be updated with newer terms as those terms are agreed and ratified with the wider community.&lt;/p&gt; &#xA;&lt;p&gt;Contact us at &lt;a href=&#34;mailto:education@arm.com&#34;&gt;education@arm.com&lt;/a&gt; with questions or comments about this course. You can also report non-inclusive and offensive terminology usage in Arm content at &lt;a href=&#34;mailto:terms@arm.com&#34;&gt;terms@arm.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>msojocs/fiddler-everywhere-enhance</title>
    <updated>2023-09-27T01:32:32Z</updated>
    <id>tag:github.com,2023-09-27:/msojocs/fiddler-everywhere-enhance</id>
    <link href="https://github.com/msojocs/fiddler-everywhere-enhance" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get Latest Version&lt;/h1&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;p&gt;api(dot)getfiddler(dot)com/linux/latest-linux&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;api(dot)getfiddler(dot)com/win/latest&lt;/p&gt; &#xA;&lt;h2&gt;NOTICE&lt;/h2&gt; &#xA;&lt;p&gt;If you are using windows, just try &lt;a href=&#34;https://github.com/dnSpyEx/dnSpy&#34;&gt;https://github.com/dnSpyEx/dnSpy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;get ilasm (ildasm)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;dotnet new console -n test&lt;/li&gt; &#xA; &lt;li&gt;cd test&lt;/li&gt; &#xA; &lt;li&gt;dotnet add package Microsoft.NETCore.ILAsm (ILDAsm)&lt;/li&gt; &#xA; &lt;li&gt;dotnet publish -c Release --self-contained --runtime linux-x64&lt;/li&gt; &#xA; &lt;li&gt;export PATH=$(pwd)/bin/Release/netcoreapp3.1/linux-x64/publish:$PATH&lt;/li&gt; &#xA; &lt;li&gt;ilasm (ildasm)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;for v4.6.1&lt;/h1&gt; &#xA;&lt;h2&gt;Patch&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载Electron &lt;a href=&#34;https://github.com/electron/electron/releases&#34;&gt;https://github.com/electron/electron/releases&lt;/a&gt; , 解压到&lt;code&gt;Electron&lt;/code&gt;文件夹&lt;/li&gt; &#xA; &lt;li&gt;复制 &lt;code&gt;Fiddler Everywhere/resources&lt;/code&gt; -&amp;gt; &lt;code&gt;Electron/resources&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;复制 &lt;code&gt;v4.6.1/Fiddler.WebUi/Fiddler.WebUi.dll&lt;/code&gt; -&amp;gt; &lt;code&gt;Electron/resources/app/out/WebServer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;复制 &lt;code&gt;v4.6.1/FiddlerBackendSDK/FiddlerBackendSDK.dll&lt;/code&gt; -&amp;gt; &lt;code&gt;Electron/resources/app/out/WebServer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;复制 &lt;code&gt;v4.6.1/server/file&lt;/code&gt; -&amp;gt; &lt;code&gt;Electron/resources/app/out/file&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;修改 main.js&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开 &lt;code&gt;resources/app/out/main.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v4.6.1/server/index.js&lt;/code&gt; 的内容添加到 &lt;code&gt;resources/app/out/main.js&lt;/code&gt; 开头&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;修改 main.xxx.js&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开 &lt;code&gt;resources/app/out/WebServer/ClientApp/dist/main.xxx.js&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;替换所有 &lt;code&gt;https://api.getfiddler.com&lt;/code&gt; 为 &lt;code&gt;http://127.0.0.1:5678/api.getfiddler.com&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;搜索并删除 &lt;code&gt;.then(c=&amp;gt;t.verifyResponse(c?.headers,c?.body))&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Some Detail&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/msojocs/fiddler-everywhere-enhance/master/v4.6.2/readme.md&#34;&gt;Let me see new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/msojocs/fiddler-everywhere-enhance/master/DETAIL.MD&#34;&gt;Let me see old&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本仓库仅供技术学习交流使用，如有下载相关文件，请在学习后24小时内删除相关内容。&lt;/p&gt; &#xA;&lt;p&gt;请勿将本项目内容用于非法用途，使用者在使用时即视为对行为可能产生的任何不良后果负责。&lt;/p&gt; &#xA;&lt;p&gt;由于传播、利用此工具所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任。&lt;/p&gt;</summary>
  </entry>
</feed>