<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T01:30:16Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Huxpro/huxpro.github.io</title>
    <updated>2022-06-04T01:30:16Z</updated>
    <id>tag:github.com,2022-06-04:/Huxpro/huxpro.github.io</id>
    <link href="https://github.com/Huxpro/huxpro.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My Blog / Jekyll Themes / PWA&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://huangxuan.me&#34;&gt;Hux Blog&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I never expect this becomes popular.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://huangxuan.me/img/blog-desktop.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Huxpro/huxpro.github.io/master/_doc/Manual.md&#34;&gt;User Manual 👉&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You will need &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt; and &lt;a href=&#34;https://bundler.io/&#34;&gt;Bundler&lt;/a&gt; to use &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;. Following &lt;a href=&#34;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&#34;&gt;Using Jekyll with Bundler&lt;/a&gt; to fullfill the enviromental requirement.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Installed dependencies in the &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bundle install &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Serve the website (&lt;code&gt;localhost:4000&lt;/code&gt; by default):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bundle exec jekyll serve  # alternatively, npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development (Build From Source)&lt;/h3&gt; &#xA;&lt;p&gt;To modify the theme, you will need &lt;a href=&#34;https://gruntjs.com/&#34;&gt;Grunt&lt;/a&gt;. There are numbers of tasks you can find in the &lt;code&gt;Gruntfile.js&lt;/code&gt;, includes minifing JavaScript, compiling &lt;code&gt;.less&lt;/code&gt; to &lt;code&gt;.css&lt;/code&gt;, adding banners to keep the Apache 2.0 license intact, watching for changes, etc.&lt;/p&gt; &#xA;&lt;p&gt;Yes, they were inherited and are extremely old-fashioned. There is no modularization and transpilation, etc.&lt;/p&gt; &#xA;&lt;p&gt;Critical Jekyll-related code are located in &lt;code&gt;_include/&lt;/code&gt; and &lt;code&gt;_layouts/&lt;/code&gt;. Most of them are &lt;a href=&#34;https://github.com/Shopify/liquid/wiki&#34;&gt;Liquid&lt;/a&gt; templates.&lt;/p&gt; &#xA;&lt;p&gt;This theme uses the default code syntax highlighter of jekyll, &lt;a href=&#34;http://rouge.jneen.net/&#34;&gt;Rouge&lt;/a&gt;, which is compatible with Pygments theme so just pick any pygments theme css (e.g. from &lt;a href=&#34;http://jwarby.github.io/jekyll-pygments-themes/languages/javascript.html&#34;&gt;here&lt;/a&gt; and replace the content of &lt;code&gt;highlight.less&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Interesting to know more? Checkout the &lt;a href=&#34;https://raw.githubusercontent.com/Huxpro/huxpro.github.io/master/_doc/Manual.md&#34;&gt;full user manual&lt;/a&gt;!&lt;/h3&gt; &#xA;&lt;h2&gt;Other Resources&lt;/h2&gt; &#xA;&lt;p&gt;Ports&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kaijun/hexo-theme-huxblog&#34;&gt;&lt;strong&gt;Hexo&lt;/strong&gt;&lt;/a&gt; by @kaijun&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LucasIcarus/huxpro.github.io/tree/ssr&#34;&gt;&lt;strong&gt;React-SSR&lt;/strong&gt;&lt;/a&gt; by @LucasIcarus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/huxpro/huxblog-boilerplate&#34;&gt;Starter/Boilerplate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Out of date. Helps wanted for updating it on par with the main repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Translation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Huxpro/huxpro.github.io/raw/master/_doc/README.zh.md&#34;&gt;🇨🇳 中文文档（有点过时）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0. Copyright (c) 2015-present Huxpro&lt;/p&gt; &#xA;&lt;p&gt;Hux Blog is derived from &lt;a href=&#34;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll/&#34;&gt;Clean Blog Jekyll Theme (MIT License)&lt;/a&gt; Copyright (c) 2013-2016 Blackrock Digital LLC.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LAX1DUDE/eaglercraft</title>
    <updated>2022-06-04T01:30:16Z</updated>
    <id>tag:github.com,2022-06-04:/LAX1DUDE/eaglercraft</id>
    <link href="https://github.com/LAX1DUDE/eaglercraft" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Eaglercraft is real Minecraft 1.5.2 that you can play in any regular web browser. That includes school chromebooks, it works on all chromebooks. You can join real Minecraft 1.5.2 servers with it through a custom proxy based on Bungeecord.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eaglercraft&lt;/h1&gt; &#xA;&lt;h3&gt;Regular Client: &lt;a href=&#34;https://g.eags.us/eaglercraft/&#34;&gt;https://g.eags.us/eaglercraft/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&#39;Secure&#39; Client: &lt;a href=&#34;https://g.eags.us/eaglercraft/secure.html&#34;&gt;https://g.eags.us/eaglercraft/secure.html&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Secure mode Offline Download: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version_SECURE.html&#34;&gt;Offline_Download_Version_SECURE.html&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;Regular Offline Download: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;Offline_Download_Version.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Download secure mode server: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/stable-download-SECURE.zip&#34;&gt;stable-download-SECURE.zip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Note: we will be transitioning away from Eaglercraft being standalone &#39;free browser minecraft&#39; to Eaglercraft being a bukkit/bungee plugin for servers to allow &#39;online access&#39; to players who register with a command as their real online-mode Minecraft account on the server. Server owners can still elect to set &lt;code&gt;online-mode=false&lt;/code&gt; in their server.properties to allow free login but now that&#39;s their legal screw up instead of mine&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/378764518081429506/964047481849643018/new_github_screenshot.png&#34; alt=&#34;eaglercraft&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Official Demo URL: &lt;a href=&#34;https://g.eags.us/eaglercraft/&#34;&gt;https://g.eags.us/eaglercraft/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Download Locally: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;stable-download/Offline_Download_Version.html&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;(right click the link and press &#39;Save link as...&#39; to download the file)&lt;/p&gt; &#xA;&lt;h3&gt;You can play Minecraft Beta singleplayer here: &lt;a href=&#34;https://g.eags.us/eaglercraft/singleplayer_test/&#34;&gt;https://g.eags.us/eaglercraft/singleplayer_test/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;For any questions you can join the discord server and hit me up there &lt;a href=&#34;https://discord.gg/KMQW9Uvjyq&#34;&gt;https://discord.gg/KMQW9Uvjyq&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Eaglercraft?&lt;/h2&gt; &#xA;&lt;p&gt;Eaglercraft is real Minecraft 1.5.2 that you can play in any regular web browser. That includes school chromebooks, it works on all chromebooks. You can join real Minecraft 1.5.2 servers with it through a custom proxy based on Bungeecord.&lt;/p&gt; &#xA;&lt;h3&gt;Ayonull runs a FAQ site: &lt;a href=&#34;https://eagler.nully.tech/&#34;&gt;https://eagler.nully.tech/&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;How to make a server&lt;/h2&gt; &#xA;&lt;h3&gt;If replit is acceptable, you can use this:&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://replit.com/@ayunami2000/eaglercraft-server&#34;&gt;https://replit.com/@ayunami2000/eaglercraft-server&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Manual setup instructions:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check if Java is installed.&lt;/strong&gt; You can download it from &lt;a href=&#34;https://www.java.com/en/download/&#34;&gt;https://www.java.com/en/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/stable-download-new.zip&#34;&gt;stable-download/stable-download-new.zip&lt;/a&gt; file from this repository&lt;/li&gt; &#xA; &lt;li&gt;Extract the ZIP file you downloaded to a new folder&lt;/li&gt; &#xA; &lt;li&gt;Open the new folder, go into the &lt;code&gt;java/bungee_command&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;In Windows, double-click &lt;code&gt;run.bat&lt;/code&gt;. It should open a new terminal window&lt;br&gt; &lt;img src=&#34;https://i.gyazo.com/2b0f6b3e5b2e5a5a102c62ea5b6fba3f.png&#34; alt=&#34;run.bat&#34;&gt;&lt;br&gt; &lt;strong&gt;Some computers may just say &#39;run&#39; instead of &#39;run.bat&#39;, both are correct&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;On macOS or Linux, google how to open the terminal and use the &lt;code&gt;cd&lt;/code&gt; command to navigate to &lt;code&gt;java/bungee_command&lt;/code&gt;&lt;br&gt; Then, in that folder, run &lt;code&gt;chmod +x run_unix.sh&lt;/code&gt; and then run &lt;code&gt;./run_unix.sh&lt;/code&gt;. It should start the same server&lt;/li&gt; &#xA; &lt;li&gt;Go to the other &lt;code&gt;java/bukkit_command&lt;/code&gt; folder that was also extracted from the ZIP&lt;/li&gt; &#xA; &lt;li&gt;Again, on Windows, double-click &lt;code&gt;run.bat&lt;/code&gt; in the folder. It should open a second terminal window.&lt;br&gt; Keep both the first and second terminal window you opened, just minimize them don&#39;t close&lt;/li&gt; &#xA; &lt;li&gt;Again, on macOS or Linux, repeat step 7 except in the &lt;code&gt;java/bukkit_command&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Your server is now ready.&lt;/strong&gt; Download and open &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;stable-download/Offline_Download_Version.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &#39;Multiplayer&#39; from the main menu. Select &#39;Direct Connect&#39;, type &lt;code&gt;127.0.0.1:25565&lt;/code&gt; and press &#39;Join Server&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;It should allow you to connect, if not, check the two terminal windows for errors&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are okay with regularly checking for updates to &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;Offline_Download_Version.html&lt;/a&gt;, you are now finished&lt;/li&gt; &#xA; &lt;li&gt;If you are playing with friends and want a shared website that can be updated, see the &lt;code&gt;stable-download/web&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;To install, create a website and upload the contents of &lt;code&gt;stable-download/web&lt;/code&gt; to the URL you want to have Eaglercraft on&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;The &#39;web&#39; folder will not work if you open it in your browser locally! If you see &#39;file:///&#39; in the URL you are doing it wrong. You need to upload the folder to an HTTP or HTTPS server and access it over the internet via http:// or https://. The game will not load otherwise, this is not a bug&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;To modify the default list of servers, download &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/servers_template.dat&#34;&gt;servers_template.dat&lt;/a&gt; and open it in &lt;a href=&#34;https://github.com/jaquadro/NBTExplorer/releases&#34;&gt;NBTExplorer&lt;/a&gt;. Make your changes and then save&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If you can&#39;t install NBTExplorer, try &lt;a href=&#34;https://irath96.github.io/webNBT/&#34;&gt;WebNBT&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Upload your modified &lt;code&gt;servers_template.dat&lt;/code&gt; to &lt;a href=&#34;https://www.base64encode.org/&#34;&gt;base64encode.org&lt;/a&gt; and press &#39;Encode&#39;.&lt;/li&gt; &#xA; &lt;li&gt;Download and open the encoded file, copy and paste the text in the file back between the quotes in &lt;code&gt;index.html&lt;/code&gt; at line 21 (or 22) in place of the old text that also begins with &lt;code&gt;CgAACQAHc2Vydm&lt;/code&gt; between the quotes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;To create a link to your site that automatically joins the server,&lt;/strong&gt; add a &lt;code&gt;?server=&lt;/code&gt; variable to the URL, like (for example): &lt;a href=&#34;https://g.eags.us/eaglercraft/?server=127.0.0.1:25565&#34;&gt;https://g.eags.us/eaglercraft/?server=127.0.0.1:25565&lt;/a&gt; will automatically join &lt;code&gt;ws://127.0.0.1:25565/&lt;/code&gt; as soon as the player finishes setting their username and skin&lt;/li&gt; &#xA; &lt;li&gt;To change your server&#39;s MOTD and icon, edit the &lt;code&gt;motd1:&lt;/code&gt; tag of the listener config in &lt;code&gt;java/bungee_command/config.yml&lt;/code&gt;, and replace &lt;code&gt;server-icon.png&lt;/code&gt; in the folder where the config file is. Use &lt;code&gt;&amp;amp;&lt;/code&gt; to add color/formatting codes. The server list will downscale your icon to 64x64 pixels&lt;/li&gt; &#xA; &lt;li&gt;You can give your MOTD multiple lines, add a &lt;code&gt;motd2:&lt;/code&gt; to define a second line&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For an animated MOTD and icon, install EaglerMOTD: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft-motd/&#34;&gt;https://github.com/LAX1DUDE/eaglercraft-motd/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;To add some bukkit plugins, download the plugin&#39;s JAR file for CraftBukkit 1.5.2 and place it in &lt;code&gt;java/bukkit_command/plugins&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To add some bungee plugins, download the plugin&#39;s JAR file and place it in &lt;code&gt;java/bungee_command/plugins&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft-plugins/&#34;&gt;https://github.com/LAX1DUDE/eaglercraft-plugins/&lt;/a&gt; to download some supported plugins&lt;/li&gt; &#xA; &lt;li&gt;To add &lt;code&gt;/login&lt;/code&gt; and &lt;code&gt;/register&lt;/code&gt;, install &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft-plugins/tree/main/AuthMe&#34;&gt;AuthMe&lt;/a&gt; and carefully &lt;a href=&#34;https://github.com/AuthMe/AuthMeReloaded/wiki&#34;&gt;read it&#39;s documentation&lt;/a&gt; to set it up correctly&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;To ban a username on Eaglercraftbungee, use:&lt;/strong&gt; &lt;code&gt;eag-ban &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;To ban an IP on Eaglercraftbungee, use:&lt;/strong&gt; &lt;code&gt;eag-ban-ip &amp;lt;ip&amp;gt;&lt;/code&gt;, or &lt;code&gt;eag-ban-ip &amp;lt;name&amp;gt;&lt;/code&gt; to ban the IP of a player automatically&lt;/li&gt; &#xA; &lt;li&gt;To ban a range of IP addresses, use slash notation to define a subnet. Example: &lt;code&gt;eag-ban-ip 192.168.0.0/8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To ban users by wildcard (*) use: &lt;code&gt;eag-ban-wildcard &amp;lt;text&amp;gt;*&lt;/code&gt; or &lt;code&gt;eag-ban-wildcard *&amp;lt;text&amp;gt;&lt;/code&gt; or &lt;code&gt;eag-ban-wildcard *&amp;lt;text&amp;gt;*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;You can edit bans.txt in your EaglercraftBungee folder, the server automatically reloads the file when it is saved&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;To ban users by regular expression, use: &lt;code&gt;eag-ban-regex &amp;lt;regex&amp;gt;&lt;/code&gt; with a regular expression to match the username in &lt;strong&gt;lowercase&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;If you use /op on your server, keep in mind that if you &#34;/op LAX1DUDE&#34;, a player joining as &#39;laX1DUDE&#39; or &#39;LaX1dUdE&#39; or &#39;lax1dude&#39; will all have /op too. To solve this problem, force all operators to only be able to join with all lowercase (&#39;lax1dude&#39;) letters in their usernames by moving &#39;BitchFilterPlugin.jar&#34; into &#34;java/bukkit_command/plugins&#34; and then register every op username lowercase&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;To connect to your server through a &lt;code&gt;ws://&lt;/code&gt; or &lt;code&gt;wss://&lt;/code&gt; URL instead of &lt;code&gt;ip:port&lt;/code&gt;, set up &lt;a href=&#34;https://nginx.org/&#34;&gt;nginx&lt;/a&gt; as a reverse proxy to the &lt;code&gt;ip:port&lt;/code&gt; of you EaglercraftBungee server you want the URL to connect to. Use a location URL template with the &lt;code&gt;proxy_pass&lt;/code&gt; directive.&lt;/li&gt; &#xA; &lt;li&gt;Eaglercraft uses port 80 for IP connections by default, typing &lt;code&gt;127.0.0.1&lt;/code&gt; is the same as typing &lt;code&gt;ws://127.0.0.1:80/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To forward a client&#39;s remote IP address from a request on nginx to EaglercraftBungee for enforcing IP bans, set the &lt;code&gt;X-Real-IP&lt;/code&gt; header on the request to websocket when it is proxied&lt;/li&gt; &#xA; &lt;li&gt;To make a custom resource pack for your site, clone this repository and edit the files in &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/tree/main/lwjgl-rundir/resources&#34;&gt;lwjgl-rundir/resources&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;When you are done, navigate to &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/tree/main/epkcompiler&#34;&gt;epkcompiler/&lt;/a&gt; and double-click &lt;code&gt;run.bat&lt;/code&gt;. Wait for the window to say &lt;code&gt;Press any key to continue...&lt;/code&gt; and close it. Then, go to &lt;code&gt;../javascript&lt;/code&gt; in the repository and copy &lt;code&gt;javascript/assets.epk&lt;/code&gt; to the &lt;code&gt;assets.epk&lt;/code&gt; on your website&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re on mac or linux, navigate to the epkcompiler folder via &lt;code&gt;cd&lt;/code&gt; and run &lt;code&gt;chmod +x run_unix.sh&lt;/code&gt; and then &lt;code&gt;./run_unix.sh&lt;/code&gt; to do this, then copy the same &lt;code&gt;javascript/assets.epk&lt;/code&gt; to the &lt;code&gt;assets.epk&lt;/code&gt; on your website&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Singleplayer?&lt;/h2&gt; &#xA;&lt;p&gt;I successfully created Singleplayer for this version of eaglercraft and it works 100%, &lt;strong&gt;but after many rounds of very thorough testing&lt;/strong&gt;, I found that TeaVM is unable to optimize certain aspects of terrain generation and world ticking as well as it can optimize the rendering for a multiplayer-only build. On an &lt;a href=&#34;https://www.cpubenchmark.net/cpu.php?cpu=Intel+Core+i9-11900K+%40+3.50GHz&amp;amp;id=3904&#34;&gt;i9-11900K&lt;/a&gt; a render distance of &#39;Tiny&#39; struggles to pass 12 TPS while standing still, and drops below 1 TPS as soon as a couple new chunks have to be generated and trigger lighting updates. The playerbase of this game &lt;strong&gt;will bother me every f**king day if what I release as singleplayer is not perfect&lt;/strong&gt; and therefore singleplayer will remain private indefinetly and I will not answer any further questions about it or share the source code unless you are just looking to repurpose some of the base OS emulation code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can play Minecraft Beta singleplayer here: &lt;a href=&#34;https://g.eags.us/eaglercraft/singleplayer_test/&#34;&gt;https://g.eags.us/eaglercraft/singleplayer_test/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;Eaglercraft uses the decompiled source code of the official build of Minecraft 1.5.2 direct from Mojang. It is decompiled by &lt;a href=&#34;http://www.modcoderpack.com/&#34;&gt;MCP&lt;/a&gt; and then recompiled to Javascript using &lt;a href=&#34;https://teavm.org/&#34;&gt;TeaVM&lt;/a&gt;. Therefore it can join real Minecraft 1.5.2 servers, as it is really running Minecraft 1.5.2 in the browser. However, due to security limitations in modern browsers, it must use javascript Websocket objects for multiplayer instead of direct TCP connections to it&#39;s servers. A modified version of Bungeecord is included with Eaglercraft which accepts browser HTTP Websocket connections from Eaglercraft clients and unwraps the streams internally to regular TCP so they can be forwarded to regular Bukkit servers with no plugins. For graphics, a custom GPU compatibility layer allows Mojang&#39;s fixed function OpenGL 1.3 based rendering engine to render directly to an HTML5 WebGL 2.0 canvas on the page with minimal changes to the source, preserving the game&#39;s graphics to look exactly the same as desktop vanilla Minecraft 1.5.2.&lt;/p&gt; &#xA;&lt;h2&gt;Issues?&lt;/h2&gt; &#xA;&lt;p&gt;I got tired of closing duplicate &#39;how to maek sever&#39; and &#39;add single player&#39; issues almost every day so I disabled it because honestly I don&#39;t really care anymore, &lt;a href=&#34;https://discord.gg/KMQW9Uvjyq&#34;&gt;join discord&lt;/a&gt; if you&#39;ve got an issue to report that you are confident can be backed up with source code&lt;/p&gt; &#xA;&lt;h2&gt;EaglercraftBungee&lt;/h2&gt; &#xA;&lt;p&gt;EaglercraftBungee translates WebSockets to a raw Minecraft 1.5.2 TCP connection. It is just regular BungeeCord with more &lt;code&gt;config.yml&lt;/code&gt; options, and a built in plugin for syncing people&#39;s custom skins between clients so people can see each other&#39;s skins&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;EaglercraftBungee has a built in domain blacklist that updates automatically, you can disable it by setting this in config.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;enable_web_origin_blacklist: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To block all clients on replit from joining, set this to true in config.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;origin_blacklist_block_replit_clients: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To block all offline-download clients, set this to true in config.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;origin_blacklist_block_offline_download: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To block the debug runtime (or other desktop clients), set this to true in config.yml:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;origin_blacklist_block_missing_origin_header: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To add your own blacklisted domains&lt;/strong&gt;, create a file called &lt;code&gt;origin_blacklist.txt&lt;/code&gt; in your bungeecord directory and put the regular expressions inside, one on each line. There &#39;s also a &lt;code&gt;domain&lt;/code&gt; command in the console to view a player&#39;s domain, and a &lt;code&gt;block-domain&lt;/code&gt; and &lt;code&gt;block-domain-name&lt;/code&gt; and &lt;code&gt;unblock-domain&lt;/code&gt; command to manage the local &lt;code&gt;origin_blacklist.txt&lt;/code&gt; from the bungee console (if you don&#39;t know how to edit a file on your own). The list reloads automatically when changes to the file are detected.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enable&lt;/strong&gt; &lt;code&gt;forward_ip&lt;/code&gt; &lt;strong&gt;and pass a X-Real-IP header from your proxy to use rate limiting and IP bans on a URL&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nginx example: add &lt;code&gt;proxy_set_header X-Real-IP $remote_addr&lt;/code&gt; to your proxy configuration&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The server has built in DoS protection, reset it via typing &#39;eag-ratelimit reset&#39; in the bungee console&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;ratelimit:&#xA;  ip:&#xA;    enable: true&#xA;    period: 90&#xA;    limit: 60&#xA;    limit_lockout: 80&#xA;    lockout_duration: 1200&#xA;    exceptions: []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;enable&lt;/code&gt; enable rate limiting&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;period&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; set the number of requests (&lt;code&gt;limit&lt;/code&gt;) can be made in (&lt;code&gt;period&lt;/code&gt;) number of seconds&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;limit_lockout&lt;/code&gt; and &lt;code&gt;lockout_duration&lt;/code&gt; set the number of requests (&lt;code&gt;limit_lockout&lt;/code&gt;) that can be made in (&lt;code&gt;period&lt;/code&gt;) seconds before the IP is blocked for &lt;code&gt;lockout_duration&lt;/code&gt; number of seconds&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exceptions&lt;/code&gt; a list of IP addresses that should never get rate limited. &lt;strong&gt;Local IPs like 127.0.0.1 and 192.168.*.* and such are set as exceptions by default&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;To develop a plugin, download &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/java/bungee_command/bungee-dist.jar&#34;&gt;stable-download/java/bungee_command/bungee_dist.jar&lt;/a&gt; and add it to the Build Path of your Java IDE. Develop the plugin just like a regular BungeeCord plugin, see &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft-motd/&#34;&gt;EaglerMOTD&lt;/a&gt; for an example.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Test your plugin by exporting it as a jar and putting it in the &#39;/plugins&#39; directory of EaglercraftBungee and then clicking &#39;run.bat&#39;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;New Events:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/eaglercraftbungee/src/main/java/net/md_5/bungee/api/event/WebsocketMOTDEvent.java&#34;&gt;net.md_5.bungee.api.event.WebsocketMOTDEvent&lt;/a&gt;&lt;/strong&gt;: Triggered when a client or website requests the MOTD&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/eaglercraftbungee/src/main/java/net/md_5/bungee/api/event/WebsocketQueryEvent.java&#34;&gt;net.md_5.bungee.api.event.WebsocketQueryEvent&lt;/a&gt;&lt;/strong&gt;: Triggered when a client or website requests a query. This happens when a site opens a text WebSocket to a listener and sends a single string &lt;code&gt;Accept: &amp;lt;query&amp;gt;&lt;/code&gt; packet. Can be used to provide additional custom statistics to server list sites supporting integrated WebSocket queries&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Register event handlers using the standard BungeeCord&lt;/strong&gt; &lt;code&gt;@EventHandler&lt;/code&gt; &lt;strong&gt;annotation in your&lt;/strong&gt; &lt;code&gt;Listener&lt;/code&gt; &lt;strong&gt;class&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing (detailed)&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use this project but don&#39;t want to compile it from scratch, download &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/stable-download-new.zip&#34;&gt;stable-download/stable-download-new.zip&lt;/a&gt; and extract&lt;/p&gt; &#xA;&lt;p&gt;Within stable-download-new.zip there is a &#39;java&#39; and a &#39;web&#39; folder. Upload the contents of the web folder to your web server. &lt;strong&gt;The web folder will not work if it is opened locally via file:///, it needs to be opened on an http:// or https:// page. Try &lt;a href=&#34;https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb/&#34;&gt;this extensions&lt;/a&gt; if you are on chrome or if that&#39;s not possible then download the alternative single-file html &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;offline version&lt;/a&gt; that does work on file URLs.&lt;/strong&gt; If you use this alternative version, please make sure you and your peers keep your copies up to date by regularly downloading any newer versions of the html file at &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/Offline_Download_Version.html&#34;&gt;this link&lt;/a&gt; to avoid getting stuck with a version that has a game-breaking glitch or mistake. The eaglercraft bungeecord executable is in the java/bungee_command folder along with the sample configuration file and a run.bat script to launch it. CraftBukkit for minecraft 1.5.2 configured to work with the eaglercraft bungee executable is in java/bukkit_command. The available version of Spigot 1.5.2 has a bug when used with bungee so you are limited to CraftBukkit and CraftBukkit plugins only on your servers&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Here are some Bukkit plugins compatible with Eaglercraft: &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft-plugins&#34;&gt;https://github.com/LAX1DUDE/eaglercraft-plugins&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To play the game, launch the run.bat script in both the bungee_command and bukkit_command folders. Then navigate to the URL where the contents of the web folder ended up. The game should load without any issues. Go to the Multiplayer screen and select &#39;Direct Connect&#39;. &lt;strong&gt;Type 127.0.0.1:25565.&lt;/strong&gt; Press connect or whatever and enjoy, the default port configured in the bungeecord config.yml is 25565 instead of 80 to avoid any potential conflict with the local web server or the OS (and linux desktop users can&#39;t use port numbers under 1024 without sudo).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The default behavior in Eaglercraft if no :port is provided when connecting to a server is to use port 80, not port 25565. This is so the game&#39;s multiplayer connections in a production environment do not default to a port that is currently blocked by any firewalls. Also this enables you to use Cloudflare and nginx to create reverse proxy connections on your site to host multiple servers on the same domain using different ws:// URLs for each socket.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want SSL, set up &lt;a href=&#34;https://www.nginx.com/&#34;&gt;nginx&lt;/a&gt; as a reverse proxy from port 443 to the port on the bungeecord server. You can very easily configure SSL on an nginx virtual host when it is in proxy mode, much more easily than you could if I created my own websocket SSL config option in bungee. To connect to a server running an SSL websocket on the multiplayer screen, use this format: &lt;code&gt;wss://[url]/&lt;/code&gt;. You can also add the :port option again after the domain or ip address at the beggining of the URL to change the port and connect with SSL. &lt;strong&gt;If you set up the Eaglercraft index.html on an https:// URL, Chrome will only allow you to make wss:// connections from the multiplayer screen. It is a security feature in Chrome, if you want to support both ws:// and wss:// you have to host the Eaglercraft index.html on an http:// URL&lt;/strong&gt;. The best advice I have for security is to use Cloudflare to proxy both the site and the websocket, because you can use http and ws on your servers locally and then you can configure cloudflare to do the SSL for you when the connections are proxied. And it conceils your IP address to the max and you can also set up a content delivery network for the big assets.epk and classes.js files all for free on their little starter package&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To change the default servers on the server list, download &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/raw/main/stable-download/servers_template.dat&#34;&gt;stable-download/servers_template.dat&lt;/a&gt; and open the file with NBTExplorer (the minecraft one). You will see the list of default servers in a &#39;servers&#39; tag stored as NBT components, and you can edit them and add more as long as you follow the same format the existing servers have. When you&#39;re done, save the file and encode the file back to base64 using the upload option on &lt;a href=&#34;https://raw.githubusercontent.com/LAX1DUDE/eaglercraft/main/base64encode.org&#34;&gt;base64encode.org&lt;/a&gt;, then download the encoded file and open it and replace the base64 between the quotes on line 8 of your index.html with the new base64 in the encoded file you downloaded.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is a plugin hard coded into the bungeecord server to auto synchronize the eaglercraft profile skins between players and worlds&lt;/p&gt; &#xA;&lt;p&gt;You should probably use a plugin like &lt;a href=&#34;https://dev.bukkit.org/projects/authme-reloaded/files/682502&#34;&gt;AuthMe&lt;/a&gt; to keep griefers from logging in to other people&#39;s profiles&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;To compile for the web, run the gradle &#39;teavm&#39; compile target to generate the classes.js file.&lt;/p&gt; &#xA;&lt;p&gt;To complile to regular desktop Java for quick debugging, using native OpenGL for rendering instead of WebGL:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new empty eclipse project&lt;/li&gt; &#xA; &lt;li&gt;Link the src/main/java and src/lwjgl/java as source folders and add the jars in lwjgl-rundir as dependencies&lt;/li&gt; &#xA; &lt;li&gt;Create a run configuration and add a jvm argument pointing to the lwjgl natives folder (lwjgl-rundir/natives) like this: &lt;code&gt;-Djava.library.path=natives&lt;/code&gt;, and make sure the working directory for the run configuration is the lwjgl-rundir folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To modify the game&#39;s resource pack (javascript/assets.epk), view the readme in the &lt;a href=&#34;https://github.com/LAX1DUDE/eaglercraft/tree/main/epkcompiler&#34;&gt;/epkcompiler&lt;/a&gt; directory&lt;/p&gt; &#xA;&lt;p&gt;this project is just a proof of concept to show what can be accomplished when using TeaVM to cross compile an existing java program to javascript. It is not very fast or stable, and the only real useful portion is the emulator code which creates a makeshift fixed function OpenGL 1.3 context using webgl (based on OpenGL 3.3) operational in the browser. Maybe it can be used to port other games in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All I really have to say is, tabs not spaces, and format the code to be like the eclipse auto format tool on factory settings, but also run-on lines of code long enough to go off the screen and single line if statements and other format violations in that category are welcome if it helps enhance the contrast between the less important code and the more important code in a file. Don&#39;t commit changes to &lt;code&gt;javascript/classes.js&lt;/code&gt; or &lt;code&gt;javascript/assets.epk&lt;/code&gt; or anything in &lt;code&gt;stable-download/&lt;/code&gt;. I&#39;ll recompile those myself when I merge the pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tabler/tabler</title>
    <updated>2022-06-04T01:30:16Z</updated>
    <id>tag:github.com,2022-06-04:/tabler/tabler</id>
    <link href="https://github.com/tabler/tabler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tabler is free and open-source HTML Dashboard UI Kit built on Bootstrap&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tabler/tabler&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler/dev/src/static/logo.svg?sanitize=true&#34; alt=&#34;A premium and open source dashboard template with a responsive and high-quality UI.&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt; A premium and open source dashboard template with a responsive and high-quality UI. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/@tabler/core&#34; target=&#34;__blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@tabler/core?color=1864ab&amp;amp;label=Latest+version&#34; alt=&#34;NPM version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/@tabler/core&#34; target=&#34;__blank&#34;&gt;&lt;img alt=&#34;NPM Downloads&#34; src=&#34;https://img.shields.io/npm/dm/@tabler/core?color=1971c2&amp;amp;label=Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://preview.tabler.io&#34; target=&#34;__blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Demo&amp;amp;message=preview&amp;amp;color=228be6&#34; alt=&#34;Tabler preview&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tabler/tabler/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/tabler.svg?label=License&amp;amp;message=MIT&amp;amp;color=1c7ed6&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tabler/tabler/archive/dev.zip&#34; target=&#34;__blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Download&amp;amp;message=ZIP&amp;amp;color=339af0&#34; alt=&#34;Tabler preview&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tabler/tabler/actions/workflows/preview.yml&#34; target=&#34;__blank&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://github.com/tabler/tabler/actions/workflows/preview.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tabler/tabler&#34; target=&#34;__blank&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/tabler/tabler?style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/codecalm&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tabler/static/main/sponsors.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;Tabler is fully responsive and compatible with all modern browsers. Thanks to its modern, user-friendly design you can create a fully functional interface that users will love! Choose the layouts and components you need and customize them to make your design consistent and eye-catching. Every component has been created with attention to detail to make your interface beautiful! &lt;a href=&#34;https://preview.tabler.io&#34;&gt;Show me demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://preview.tabler.io&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler/dev/src/static/tabler-preview.png&#34; alt=&#34;Tabler preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve created this admin panel for everyone who wants to create templates based on our pre-made components. Our mission is to deliver a user-friendly, clear and easy administration panel that can be used by both simple websites and sophisticated systems. The only requirement is basic HTML and CSS (and some &lt;a href=&#34;https://github.com/Shopify/liquid/wiki&#34;&gt;Liquid&lt;/a&gt;) knowledge — as a reward, you&#39;ll be able to manage and visualise different types of data in the easiest possible way!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive:&lt;/strong&gt; With the support for mobile, tablet and desktop displays, it doesn’t matter what device you’re using. Tabler is responsive in all major browsers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross Browser:&lt;/strong&gt; Our theme works perfectly with the latest Chrome, Firefox+, latest Safari, Opera, Edge and mobile browsers. We work hard to to provide continuous support for them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTML5 &amp;amp; CSS3:&lt;/strong&gt; We use only modern web technologies, such as HTML5 and CSS3. Our theme includes some subtle CSS3 animations, which will help you attract attention.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clean Code:&lt;/strong&gt; We followed Bootstrap’s guidelines carefully to make your integration as easy as possible. All code is handwritten and W3C valid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Demo pages&lt;/strong&gt;: Tabler features over 20 individual pages using various components, which gives you the freedom to choose and combine. All components can vary in color and styling that you can easily modify using Sass. Sky is the limit!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Single Page Application versions:&lt;/strong&gt; &lt;a href=&#34;https://github.com/tabler/tabler-react&#34;&gt;Tabler React&lt;/a&gt; has React components for Tabler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation is available as a part of Tabler preview: &lt;a href=&#34;https://preview.tabler.io/docs/&#34;&gt;https://preview.tabler.io/docs/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor Tabler&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/codecalm&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tabler/tabler/main/src/static/sponsor-banner-readme.png?raw=true&#34; alt=&#34;Sponsor Tabler&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&#34;https://opencollective.com/tabler#sponsor&#34;&gt;Become a sponsor!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/tabler/tiers/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup environment&lt;/h2&gt; &#xA;&lt;p&gt;To use our build system and run our documentation locally, you&#39;ll need a copy of Tabler&#39;s source files. Follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/download/&#34;&gt;Install Node.js&lt;/a&gt;, which we use to manage our dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the root &lt;code&gt;/tabler&lt;/code&gt; directory and run &lt;code&gt;npm install&lt;/code&gt; to install our local dependencies listed in &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/documentation/installation/&#34;&gt;Install Ruby&lt;/a&gt; - the recommended version is &lt;a href=&#34;https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.6.tar.gz&#34;&gt;2.7.6&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bundler.io&#34;&gt;Install Bundler&lt;/a&gt; with &lt;code&gt;gem install bundler&lt;/code&gt; and finally run &lt;code&gt;bundle install&lt;/code&gt;. It will install all Ruby dependencies, such as &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll and plugins&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;OSX users&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;NPM &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;install Ruby (2.5.* recommended) &lt;code&gt;brew install ruby @2.5&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;install bundler &lt;code&gt;gem install bundler&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;install &lt;code&gt;bundle install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if bundler get any errors try&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo rm -rf /Library/Developer/CommandLineTools&#xA;sudo xcode-select --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Run NPM &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows users&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Install Git&lt;/a&gt; in &lt;code&gt;C:\Program Files\git\bin&lt;/code&gt; directory and run &lt;code&gt;npm config set script-shell &#34;C:\\Program Files\\git\\bin\\bash.exe&#34;&lt;/code&gt; to change the default shell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rubyinstaller.org/downloads/&#34;&gt;Install Ruby+Devkit&lt;/a&gt; - the recommended version is &lt;a href=&#34;https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.7.6-1/rubyinstaller-devkit-2.7.6-1-x64.exe&#34;&gt;2.7.6&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/docs/installation/windows/&#34;&gt;Read guide&lt;/a&gt; to get Jekyll up and running without problems.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Once you complete the setup, you&#39;ll be able to run the various commands provided from the command line.&lt;/p&gt; &#xA;&lt;h2&gt;Build locally&lt;/h2&gt; &#xA;&lt;p&gt;You need to have &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; installed.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;From the root &lt;code&gt;/tabler&lt;/code&gt; directory, run installation in the command line:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bundler install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Then execute &lt;code&gt;npm run start-plugins&lt;/code&gt; to start up the application stack.&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; in your browser, and voilà.&lt;/li&gt; &#xA; &lt;li&gt;Any change in the &lt;code&gt;/src&lt;/code&gt; directory will build the application and refresh the page.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Run &lt;code&gt;npm run build&lt;/code&gt; for reforms a one off build application without refresh. Open &lt;a href=&#34;http://localhost:3001&#34;&gt;http://localhost:3001&lt;/a&gt; to configure the Web server.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Tabler is distributed via npm.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save @tabler/core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CDN support&lt;/h3&gt; &#xA;&lt;p&gt;All files included in &lt;code&gt;@tabler/core&lt;/code&gt; npm package are available over a CDN.&lt;/p&gt; &#xA;&lt;h4&gt;Javascript&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://unpkg.com/@tabler/core@latest/dist/js/tabler.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Styles&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/@tabler/core@latest/dist/css/tabler.min.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feature requests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tabler.canny.io/feature-requests&#34;&gt;https://tabler.canny.io/feature-requests&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bugs and feature requests&lt;/h2&gt; &#xA;&lt;p&gt;Found a bug or have a feature request? &lt;a href=&#34;https://github.com/tabler/tabler/issues/new&#34;&gt;Please open a new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Creators&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Paweł Kuna&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/codecalm&#34;&gt;https://twitter.com/codecalm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/codecalm&#34;&gt;https://github.com/codecalm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codecalm.net&#34;&gt;https://codecalm.net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt; &#xA;&lt;img src=&#34;https://opencollective.com/tabler/contributors.svg?width=890&amp;amp;button=false&#34;&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏 &lt;a href=&#34;https://opencollective.com/tabler#backer&#34;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/tabler#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/tabler/tiers/backer.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.chromatic.com/&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png&#34; width=&#34;153&#34; height=&#34;30&#34; alt=&#34;Chromatic&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.chromatic.com/&#34;&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/tabler/tabler/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>