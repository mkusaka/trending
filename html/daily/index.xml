<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-30T01:33:08Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>platzi/curso-programacion-basica</title>
    <updated>2022-07-30T01:33:08Z</updated>
    <id>tag:github.com,2022-07-30:/platzi/curso-programacion-basica</id>
    <link href="https://github.com/platzi/curso-programacion-basica" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>rstudio/rstudio-conf</title>
    <updated>2022-07-30T01:33:08Z</updated>
    <id>tag:github.com,2022-07-30:/rstudio/rstudio-conf</id>
    <link href="https://github.com/rstudio/rstudio-conf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Materials for rstudio::conf&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rstudio-conf&lt;/h1&gt; &#xA;&lt;p&gt;This is where we will store all of the materials for rstudio::conf!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>phalconer/fladminvue</title>
    <updated>2022-07-30T01:33:08Z</updated>
    <id>tag:github.com,2022-07-30:/phalconer/fladminvue</id>
    <link href="https://github.com/phalconer/fladminvue" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fenglei admin developed by tp6 and vue3&lt;/p&gt;&lt;hr&gt;&lt;p&gt;FlAdmin是一款基于ThinkPHP+Vue的稳健智能后台开发框架， FlAdmin后端微服务解耦级解决方案 FlAdmin是蜂雷自研发系统后端框架， FlAdmin主要用于构建 蜂雷直播基地产业园pass平台， FlAdmin 是 FengleiAdmin 简称 FlAdmin 版权归 © 蜂雷 京ICP证030173号 科权科技（上海）有限公司 所有 © 2022 上海蜂雷网络科技有限公司 版权所有 All Rights Reserved 沪ICP备15022866号-2&lt;/p&gt; &#xA;&lt;h2&gt;主要特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基于&lt;code&gt;Auth&lt;/code&gt;验证的权限管理系统 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持基于 RSA对称加密算法基础上的 Auth 2.0 token授权安全机制&lt;/li&gt; &#xA;   &lt;li&gt;支持无限级父子级权限继承，父级的管理员可任意增删改子级管理员及权限设置&lt;/li&gt; &#xA;   &lt;li&gt;支持单管理员多角色&lt;/li&gt; &#xA;   &lt;li&gt;支持管理子级数据或个人数据&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;强大的一键生成功能 GII 开发者规范 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;一键生成CRUD,包括控制器、模型、视图、JS、语言包、菜单、回收站等&lt;/li&gt; &#xA;   &lt;li&gt;一键压缩打包JS和CSS文件，一键CDN静态资源部署&lt;/li&gt; &#xA;   &lt;li&gt;一键生成控制器菜单和规则&lt;/li&gt; &#xA;   &lt;li&gt;一键生成API接口文档&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;强大的后台前端支持 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;基于复用原理，完善的前端功能组件开发&lt;/li&gt; &#xA;   &lt;li&gt;基于&lt;code&gt;AdminLTE&lt;/code&gt;二次开发&lt;/li&gt; &#xA;   &lt;li&gt;基于&lt;code&gt;Bootstrap&lt;/code&gt;开发，自适应手机、平板、PC&lt;/li&gt; &#xA;   &lt;li&gt;基于&lt;code&gt;RequireJS&lt;/code&gt;进行JS模块管理，按需加载&lt;/li&gt; &#xA;   &lt;li&gt;基于&lt;code&gt;Less&lt;/code&gt;进行样式开发&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;强大的服务扩展功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装使用&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doc.FlAdmin.net&#34;&gt;https://doc.FlAdmin.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;在线演示&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://demo.FlAdmin.net&#34;&gt;https://demo.FlAdmin.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;用户名：admin&lt;/p&gt; &#xA;&lt;p&gt;密　码：123456&lt;/p&gt; &#xA;&lt;p&gt;提　示：演示站数据无法进行修改，请下载源码安装体验全部功能&lt;/p&gt; &#xA;&lt;h2&gt;界面截图&lt;/h2&gt; &#xA;&lt;h2&gt;问题反馈&lt;/h2&gt; &#xA;&lt;p&gt;在使用中有任何问题，请使用以下联系方式联系我们&lt;/p&gt; &#xA;&lt;p&gt;交流社区: &lt;a href=&#34;https://ask.FlAdmin.net&#34;&gt;https://ask.FlAdmin.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QQ群: &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=487PNBb&#34;&gt;1276789849&lt;/a&gt;(满) &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5ObjtwM&#34;&gt;1154638287&lt;/a&gt;(群2)&lt;/p&gt; &#xA;&lt;p&gt;Github: &lt;a href=&#34;https://github.com/karsonzhang/FlAdmin&#34;&gt;https://github.com/karsonzhang/FlAdmin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Gitee: &lt;a href=&#34;https://gitee.com/karson/FlAdmin&#34;&gt;https://gitee.com/karson/FlAdmin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特别鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下的项目,排名不分先后&lt;/p&gt; &#xA;&lt;p&gt;ThinkPHP：&lt;a href=&#34;http://www.thinkphp.cn&#34;&gt;http://www.thinkphp.cn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AdminLTE：&lt;a href=&#34;https://adminlte.io&#34;&gt;https://adminlte.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bootstrap：&lt;a href=&#34;http://getbootstrap.com&#34;&gt;http://getbootstrap.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;jQuery：&lt;a href=&#34;http://jquery.com&#34;&gt;http://jquery.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bootstrap-table：&lt;a href=&#34;https://github.com/wenzhixin/bootstrap-table&#34;&gt;https://github.com/wenzhixin/bootstrap-table&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nice-validator: &lt;a href=&#34;https://validator.niceue.com&#34;&gt;https://validator.niceue.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SelectPage: &lt;a href=&#34;https://github.com/TerryZ/SelectPage&#34;&gt;https://github.com/TerryZ/SelectPage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Layer: &lt;a href=&#34;https://layer.layui.com&#34;&gt;https://layer.layui.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DropzoneJS: &lt;a href=&#34;https://www.dropzonejs.com&#34;&gt;https://www.dropzonejs.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;版权信息&lt;/h2&gt; &#xA;&lt;p&gt;FlAdmin遵循Apache2开源协议发布，并提供免费使用。&lt;/p&gt; &#xA;&lt;p&gt;本项目包含的第三方源码和二进制文件之版权信息另行标注。&lt;/p&gt; &#xA;&lt;p&gt;版权所有Copyright © 2017-2022 by FlAdmin （&lt;a href=&#34;http://www.fenglei.shop/%EF%BC%89&#34;&gt;http://www.fenglei.shop/）&lt;/a&gt; © 2022 上海蜂雷网络科技有限公司 版权所有 All Rights Reserved 沪ICP备15022866号-2 All rights reserved。(&lt;a href=&#34;https://www.fladmin.net&#34;&gt;https://www.fladmin.net&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;架构 架构总览 FlAdmin基于MSP的设计模式，将我们的应用分为三层（模型M、服务S（API）、控制器C）。&lt;/p&gt; &#xA;&lt;p&gt;目录结构 FlAdmin目录结构遵循ThinkPHP5,Thinkphp6官方建议的模块设计：&lt;/p&gt; &#xA;&lt;p&gt;FlAdmin项目目录 ├── addons //扩展服务存放目录 ├── application //应用目录 │ ├── admin //后台管理应用模块 │ ├── api //API应用模块 │ ├── common //通用应用模块 │ ├── extra //扩展配置目录 │ ├── index //前台应用模块 │ ├── build.php │ ├── command.php //命令行配置 │ ├── common.php //通用辅助函数 │ ├── config.php //基础配置 │ ├── database.php //数据库配置 │ ├── route.php //路由配置 │ ├── tags.php //行为配置 ├── extend │ └── fast //FlAdmin扩展辅助类目录 ├── public //框架入口目录 │ ├── assets │ │ ├── build //打包JS、CSS的资源目录 │ │ ├── css //CSS样式目录 │ │ ├── fonts //字体目录 │ │ ├── img //图片资源目录 │ │ ├── js │ │ │ ├── backend │ │ │ └── frontend //后台功能模块JS文件存放目录 │ │ ├── libs //Bower资源包位置 │ │ └── less //Less资源目录 │ └── uploads //上传文件目录 │ ├── index.php //应用入口主文件 │ ├── install.php //FlAdmin安装引导 │ ├── admin.php //后台入口文件(自动安装后会被修改为随机文件名） │ ├── robots.txt │ └── router.php ├── runtime //缓存目录 ├── thinkphp //ThinkPHP5,ThinkPHP6框架核心目录 ├── vendor //Compposer资源包位置 ├── .bowerrc //Bower目录配置文件 ├── .env.sample //环境配置模板（可复制一份为 .env 生效） ├── LICENSE ├── README.md //项目介绍 ├── bower.json //Bower前端包配置 ├── build.php ├── composer.json //Composer包配置 └── think //命令行控制台入口（使用 php think 命令进入）&lt;/p&gt; &#xA;&lt;p&gt;一键生成API文档 FlAdmin中的一键生成API文档可以在命令行或后台一键生成我们API接口的接口测试文档，可以直接在线模拟接口请求，查看参数示例和返回示例。&lt;/p&gt; &#xA;&lt;p&gt;准备工作 请确保你的API模块下的控制器代码没有语法错误，控制器类注释、方法名注释完整，注释规则请参考下方注释规则。&lt;/p&gt; &#xA;&lt;p&gt;请确保你的FlAdmin已经安装成功且能正常登录后台。&lt;/p&gt; &#xA;&lt;p&gt;请确保php所在的目录已经加入到系统环境变量，否则会提示找不到该命令。&lt;/p&gt; &#xA;&lt;p&gt;打开命令行控制台进入到你的站点根目录，也就是think文件所在的目录。&lt;/p&gt; &#xA;&lt;p&gt;常用命令 //一键生成API文档 php think api --force=true //指定&lt;a href=&#34;https://www.example.com%E4%B8%BAAPI%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82%E5%9F%9F%E5%90%8D,%E9%BB%98%E8%AE%A4%E4%B8%BA%E7%A9%BA&#34;&gt;https://www.example.com为API接口请求域名,默认为空&lt;/a&gt; php think api -u &lt;a href=&#34;https://www.example.com&#34;&gt;https://www.example.com&lt;/a&gt; --force=true //输出自定义文件为myapi.html,默认为api.html php think api -o myapi.html --force=true //修改API模板为mytemplate.html，默认为index.html php think api -e mytemplate.html --force=true //修改标题为Demo,作者为Lily php think api -t Demo -a Lily --force=true //生成服务标识为cms的API文档 php think api -a cms -o cmsapi.html --force=true //查看API接口命令行帮助 php think api -h 参数介绍 -u, --url[=URL] 默认API请求URL地址 [default: &#34;&#34;] -m, --module[=MODULE] 模块名(admin/index/api) [default: &#34;api&#34;] -a, --addon[=ADDON] 服务标识(addons目录下的服务标识) [default: &#34;&#34;] -o, --output[=OUTPUT] 输出文件 [default: &#34;api.html&#34;] -e, --template[=TEMPLATE] 模板文件 [default: &#34;index.html&#34;] -f, --force[=FORCE] 覆盖模式 [default: false] -t, --title[=TITLE] 文档标题 [default: &#34;FlAdmin&#34;] -c, --class[=CLASS] 扩展类 (multiple values allowed) -l, --language[=LANGUAGE] 语言 [default: &#34;zh-cn&#34;] 注释规则 在我们的控制器中通常分为两部分注释，一是控制器头部的注释，二是控制器方法的注释。&lt;/p&gt; &#xA;&lt;p&gt;控制器注释&lt;/p&gt; &#xA;&lt;p&gt;名称 描述 示例 @ApiSector API分组名称 (测试分组) @ApiRoute API接口URL，此@ApiRoute只是基础URL (/api/test) @ApiInternal 忽略的控制器,表示此控制将不加入API文档 无 @ApiWeigh API方法的排序,值越大越靠前 (99) 控制器方法注释&lt;/p&gt; &#xA;&lt;p&gt;名称 描述 示例 @ApiTitle API接口的标题,为空时将自动匹配注释的文本信息 (测试标题) @ApiSummary API接口描述 (测试描述) @ApiRoute API接口地址,为空时将自动计算请求地址 (/api/test/index) @ApiMethod API接口请求方法,默认为GET (POST) @ApiSector API分组,默认按钮控制器或控制器的@ApiSector进行分组 (测试分组) @ApiParams API请求参数,如果在@ApiRoute中有对应的{@参数名}，将进行替换 (name=&#34;id&#34;, type=&#34;integer&#34;, required=true, description=&#34;会员ID&#34;) @ApiHeaders API请求传递的Headers信息 (name=token, type=string, required=true, description=&#34;请求的Token&#34;) @ApiReturn API返回的结果示例 ({&#34;code&#34;:1,&#34;msg&#34;:&#34;返回成功&#34;}) @ApiReturnParams API返回的结果参数介绍 (name=&#34;code&#34;, type=&#34;integer&#34;, required=true, sample=&#34;0&#34;) @ApiReturnHeaders API返回的Headers信息 (name=&#34;token&#34;, type=&#34;integer&#34;, required=true, sample=&#34;123456&#34;) @ApiInternal 忽略的方法,表示此方法将不加入文档 无 @ApiWeigh API方法的排序,值越大越靠前 (99) 标准范例&lt;/p&gt; &#xA;&lt;!--?php&#xA;&#xA;namespace app\api\controller;&#xA;&#xA;/**&#xA; * 测试API控制器&#xA; */&#xA;class Test extends \app\common\controller\Api&#xA;{&#xA;&#xA;    // 无需验证登录的方法&#xA;    protected $noNeedLogin = [&#39;test&#39;];&#xA;    // 无需要判断权限规则的方法&#xA;    protected $noNeedRight = [&#39;*&#39;];&#xA;&#xA;    /**&#xA;     * 首页&#xA;     *&#xA;     * 可以通过@ApiInternal忽略请求的方法&#xA;     * @ApiInternal&#xA;     */&#xA;    public function index()&#xA;    {&#xA;        return &#39;index&#39;;&#xA;    }&#xA;&#xA;    /**&#xA;     * 私有方法&#xA;     * 私有的方法将不会出现在文档列表&#xA;     */&#xA;    private function privatetest()&#xA;    {&#xA;        return &#39;private&#39;;&#xA;    }&#xA;&#xA;    /**&#xA;     * 测试方法&#xA;     *&#xA;     * @ApiTitle    (测试名称)&#xA;     * @ApiSummary  (测试描述信息)&#xA;     * @ApiSector   (测试分组)&#xA;     * @ApiMethod   (POST)&#xA;     * @ApiRoute    (/api/test/test/id/{id}/name/{name})&#xA;     * @ApiHeaders  (name=token, type=string, required=true, description=&#34;请求的Token&#34;)&#xA;     * @ApiParams   (name=&#34;id&#34;, type=&#34;integer&#34;, required=true, description=&#34;会员ID&#34;)&#xA;     * @ApiParams   (name=&#34;name&#34;, type=&#34;string&#34;, required=true, description=&#34;用户名&#34;)&#xA;     * @ApiParams   (name=&#34;data&#34;, type=&#34;object&#34;, sample=&#34;{&#39;user_id&#39;:&#39;int&#39;,&#39;user_name&#39;:&#39;string&#39;,&#39;profile&#39;:{&#39;email&#39;:&#39;string&#39;,&#39;age&#39;:&#39;integer&#39;}}&#34;, description=&#34;扩展数据&#34;)&#xA;     * @ApiReturnParams   (name=&#34;code&#34;, type=&#34;integer&#34;, required=true, sample=&#34;0&#34;)&#xA;     * @ApiReturnParams   (name=&#34;msg&#34;, type=&#34;string&#34;, required=true, sample=&#34;返回成功&#34;)&#xA;     * @ApiReturnParams   (name=&#34;data&#34;, type=&#34;object&#34;, sample=&#34;{&#39;user_id&#39;:&#39;int&#39;,&#39;user_name&#39;:&#39;string&#39;,&#39;profile&#39;:{&#39;email&#39;:&#39;string&#39;,&#39;age&#39;:&#39;integer&#39;}}&#34;, description=&#34;扩展数据返回&#34;)&#xA;     * @ApiReturn   ({&#xA;        &#39;code&#39;:&#39;1&#39;,&#xA;        &#39;mesg&#39;:&#39;返回成功&#39;&#xA;     * })&#xA;     */&#xA;    public function test($id = &#39;&#39;, $name = &#39;&#39;)&#xA;    {&#xA;        $this---&gt;success(&#34;返回成功&#34;, $this-&amp;gt;request-&amp;gt;request()); } } 常见问题 如果控制器的方法是private或protected的，则将不会生成相应的API文档。 如果注释不生效，请检查注释文本是否正确。 一键管理服务 FlAdmin中的服务可以通过命令行快速的进行安装、卸载、禁用和启用。 准备工作 请确保你的FlAdmin已经能正常登录后台。 请确保php所在的目录已经加入到系统环境变量，否则会提示找不到该命令。 打开命令行控制台进入到你的站点根目录，也就是think文件所在的目录。 常用命令 //创建一个myaddon本地服务，常用于开发自己的服务时使用 php think addon -a myaddon -c create //刷新服务缓存，如果禁用启用了服务，部分文件需要刷新才会生效 php think addon -a example -c refresh //卸载本地的example服务 php think addon -a example -c uninstall //启用本地的example服务 php think addon -a example -c enable //禁用本地的example服务 php think addon -a example -c disable //将本地的example服务打包成zip文件 php think addon -a example -c package 常见问题 如果管理服务后不生效，请在后台右上角清除缓存重试。 更多一键管理服务的参数请使用php think addon --help查看。 文档最后更新时间：2022-06-21 09:30:37 一键生成菜单 FlAdmin可通过命令控制台快速的一键生成后台的权限节点菜单规则，同时后台的管理菜单也会同步改变，操作非常简单。 准备工作 首先确保已经将FlAdmin配置好，数据库连接正确，同时确保已经通过上一步的一键生成CRUD已经生成了test的CRUD。 请确保php所在的目录已经加入到系统环境变量，否则会提示找不到该命令。 打开命令行控制台进入到你的站点根目录，也就是think文件所在的目录。 常用命令 //一键生成test控制器的权限菜单 php think menu -c test //一键生成mydir/test控制器的权限菜单 php think menu -c mydir/test //删除test控制器生成的菜单 php think menu -c test -d 1 //一键生成所有控制器的权限菜单，执行前请备份数据库。 php think menu -c all-controller 常见问题 在使用php think menu前确保你的控制器已经添加或通过php think crud生成好。 如果之前已经生成了菜单,需要再次生成,请登录后台手动删除之前生成的菜单或使用php think menu -c 控制器名 -d 1来删除。 如果生成层级目录的菜单，在后台展示时父级菜单会以目录名称显示，如果需要修改可以在application/admin/lang/zh-cn.php中追加相应的语言包即可。 使用范例 示例 更多CRUD一键生成可使用的参数请使用php think menu --help查看。 文档最后更新时间：2022-06-20 15:29:21 关联字段 //生成fa_fltest表的CRUD php think crud -t fltest //生成fa_fltest表的CRUD且一键生成菜单 php think crud -t fltest -u 1 //删除fa_fltest表生成的CRUD php think crud -t fltest -d 1 //生成fa_fltest表的CRUD且控制器生成在二级目录下 php think crud -t fltest -c mydir/fltest //生成fa_fltest_log表的CRUD且生成对应的控制器为fltestlog php think crud -t fltest_log -c fltestlog //生成fa_fltest表的CRUD且对应的模型名为fltestmodel php think crud -t fltest -m fltestmodel //生成fa_fltest表的CRUD且生成关联模型category，外链为category_id，关联表主键为id php think crud -t fltest -r category -k category_id -p id //生成fa_fltest表的CRUD且所有以list或data结尾的字段都生成复选框 php think crud -t fltest --setcheckboxsuffix=list --setcheckboxsuffix=data //生成fa_fltest表的CRUD且所有以image和img结尾的字段都生成图片上传组件 php think crud -t fltest --imagefield=image --imagefield=img //关联多个表,参数传递时请按顺序依次传递，支持以下几个参数relation/relationmodel/relationforeignkey/relationprimarykey/relationfields/relationmode php think crud -t fltest --relation=category --relation=admin --relationforeignkey=category_id --relationforeignkey=admin_id //生成v_phealth_db2数据库下的fa_fltest表的CRUD php think crud -t fltest --db=v_phealth_db2</summary>
  </entry>
</feed>