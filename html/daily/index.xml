<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-20T01:28:02Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>capjamesg/cv-book-svg</title>
    <updated>2024-02-20T01:28:02Z</updated>
    <id>tag:github.com,2024-02-20:/capjamesg/cv-book-svg</id>
    <link href="https://github.com/capjamesg/cv-book-svg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turn an image of a bookshelf into an interactive SVG.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Make your bookshelf clickable&lt;/h1&gt; &#xA;&lt;p&gt;Use computer vision to generate an SVG that you can overlay onto a photo of your bookshelf that lets you click on each book to find out more information.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://capjamesg.github.io/cv-book-svg/annotations.html&#34;&gt;Try the demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/capjamesg/cv-book-svg/assets/37276661/ec57bf18-4182-4dce-870f-6bef81809e80&#34;&gt;https://github.com/capjamesg/cv-book-svg/assets/37276661/ec57bf18-4182-4dce-870f-6bef81809e80&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;This tool uses computer vision to identify and segment each book spine in an image of a bookshelf. Then, each book spine is sent to GPT-4 with Vision to read the book title and, if possible, the author.&lt;/p&gt; &#xA;&lt;p&gt;This information is then sent to the Google Books API. The book ISBN, author name, and other meta information is retrieved from this API.&lt;/p&gt; &#xA;&lt;p&gt;An SVG is then created using the segmented book spines. Each book is assigned a polygon which, when clicked, takes you to the Google Books page associated with a book.&lt;/p&gt; &#xA;&lt;p&gt;This script uses the following vision tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grounding DINO (zero-shot object detection model)&lt;/li&gt; &#xA; &lt;li&gt;Segment Anything (image segmentation model)&lt;/li&gt; &#xA; &lt;li&gt;GPT-4 with Vision API&lt;/li&gt; &#xA; &lt;li&gt;OpenCV Python&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It takes around 20 seconds to generate the polygons that map to the location of each book on an M1 Macbook Air. It then takes a few seconds to process each book with the OpenAI GPT-4 with Vision API.&lt;/p&gt; &#xA;&lt;p&gt;For a bookshelf with 11 books, the script takes around one minute to run.&lt;/p&gt; &#xA;&lt;p&gt;The script returns a HTML file with an SVG file that is overlaid onto the source image.&lt;/p&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;p&gt;First, clone this project and install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/capjamesg/cv-book-svg&#xA;cd cv-book-svg&#xA;pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run the main script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 grounded.py --image=example.jpg --output=annotation.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script takes an image as input (PNG, JPEG) and outputs a HTML document.&lt;/p&gt; &#xA;&lt;h2&gt;Limitations&lt;/h2&gt; &#xA;&lt;p&gt;This system may:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not identify all books on a bookshelf (thin books are more likely to not be identified).&lt;/li&gt; &#xA; &lt;li&gt;Generate a link to the wrong Google Books URL (which will happen if a book is not available on Google Books, or if a book has a generic title like &#34;Poems of Emily Dickinson&#34;, which could on its own refer to several publications).&lt;/li&gt; &#xA; &lt;li&gt;Mis-identify some books.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under an &lt;a href=&#34;https://raw.githubusercontent.com/capjamesg/cv-book-svg/main/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Found a bug? Have an idea that you&#39;d like to see in the project? Open an Issue in this GitHub repository.&lt;/p&gt;</summary>
  </entry>
</feed>