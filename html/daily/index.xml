<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-20T01:31:41Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>geekan/MetaGPT</title>
    <updated>2023-09-20T01:31:41Z</updated>
    <id>tag:github.com,2023-09-20:/geekan/MetaGPT</id>
    <link href="https://github.com/geekan/MetaGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌟 The Multi-Agent Framework: Given one line Requirement, return PRD, Design, Tasks, Repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaGPT: The Multi-Agent Framework&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/resources/MetaGPT-logo.jpeg&#34; alt=&#34;MetaGPT logo: Enable GPT to work in software company, collaborating to tackle more complex tasks.&#34; width=&#34;150px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Assign different roles to GPTs to form a collaborative software entity for complex tasks.&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/README_CN.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/文档-中文版-blue.svg&#34; alt=&#34;CN doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/README_JA.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ドキュメント-日本語-blue.svg&#34; alt=&#34;JA doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/wCp6Q3fsAk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Join-blue?logo=discord&amp;amp;logoColor=white&amp;amp;color=blue&#34; alt=&#34;Discord Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/ROADMAP.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ROADMAP-路线图-blue&#34; alt=&#34;roadmap&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/DeepWisdom2019&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/MetaGPT?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://airtable.com/appInfdG0eJ9J4NNL/shrEd9DrwVE3jX6oz&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/AgentStore-Waitlist-ffc107?logoColor=white&#34; alt=&#34;AgentStore Waitlist&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/geekan/MetaGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Dev%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Dev Containers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codespaces.new/geekan/MetaGPT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Github_Codespace-Open-blue?logo=github&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces/deepwisdom/MetaGPT&#34; target=&#34;_blank&#34;&gt;&lt;img alt=&#34;Hugging Face&#34; src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20-Hugging%20Face-blue?color=blue&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;MetaGPT takes a &lt;strong&gt;one line requirement&lt;/strong&gt; as input and outputs &lt;strong&gt;user stories / competitive analysis / requirements / data structures / APIs / documents, etc.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Internally, MetaGPT includes &lt;strong&gt;product managers / architects / project managers / engineers.&lt;/strong&gt; It provides the entire process of a &lt;strong&gt;software company along with carefully orchestrated SOPs.&lt;/strong&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;Code = SOP(Team)&lt;/code&gt; is the core philosophy. We materialize SOP and apply it to teams composed of LLMs.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/resources/software_company_cd.jpeg&#34; alt=&#34;A software company consists of LLM-based roles&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Software Company Multi-Role Schematic (Gradually Implementing)&lt;/p&gt; &#xA;&lt;h2&gt;MetaGPT&#39;s Abilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/geekan/MetaGPT/assets/34952977/34345016-5d13-489d-b9f9-b82ace413419&#34;&gt;https://github.com/geekan/MetaGPT/assets/34952977/34345016-5d13-489d-b9f9-b82ace413419&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples (fully generated by GPT-4)&lt;/h2&gt; &#xA;&lt;p&gt;For example, if you type &lt;code&gt;python startup.py &#34;Design a RecSys like Toutiao&#34;&lt;/code&gt;, you would get many outputs, one of them is data &amp;amp; api design&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/geekan/MetaGPT/main/docs/resources/workspace/content_rec_sys/resources/data_api_design.png&#34; alt=&#34;Jinri Toutiao Recsys Data &amp;amp; API Design&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It costs approximately &lt;strong&gt;$0.2&lt;/strong&gt; (in GPT-4 API fees) to generate one example with analysis and design, and around &lt;strong&gt;$2.0&lt;/strong&gt; for a full project.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Installation Video Guide&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/uT75J_KG_aY&#34;&gt;Matthew Berman: How To Install MetaGPT - Build A Startup With One Prompt!!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Traditional Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Step 1: Ensure that NPM is installed on your system. Then install mermaid-js. (If you don&#39;t have npm in your computer, please go to the Node.js offical website to install Node.js https://nodejs.org/ and then you will have npm tool in your computer.)&#xA;npm --version&#xA;sudo npm install -g @mermaid-js/mermaid-cli&#xA;&#xA;# Step 2: Ensure that Python 3.9+ is installed on your system. You can check this by using:&#xA;python --version&#xA;&#xA;# Step 3: Clone the repository to your local machine, and install it.&#xA;git clone https://github.com/geekan/metagpt&#xA;cd metagpt&#xA;pip install -e.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If already have Chrome, Chromium, or MS Edge installed, you can skip downloading Chromium by setting the environment variable &lt;code&gt;PUPPETEER_SKIP_CHROMIUM_DOWNLOAD&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Some people are &lt;a href=&#34;https://github.com/mermaidjs/mermaid.cli/issues/15&#34;&gt;having issues&lt;/a&gt; installing this tool globally. Installing it locally is an alternative solution,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @mermaid-js/mermaid-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;don&#39;t forget to the configuration for mmdc in config.yml&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;PUPPETEER_CONFIG: &#34;./config/puppeteer-config.json&#34;&#xA;MMDC: &#34;./node_modules/.bin/mmdc&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;if &lt;code&gt;pip install -e.&lt;/code&gt; fails with error &lt;code&gt;[Errno 13] Permission denied: &#39;/usr/local/lib/python3.11/dist-packages/test-easy-install-13129.write-test&#39;&lt;/code&gt;, try instead running &lt;code&gt;pip install -e. --user&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To convert Mermaid charts to SVG, PNG, and PDF formats. In addition to the Node.js version of Mermaid-CLI, you now have the option to use Python version Playwright, pyppeteer or mermaid.ink for this task.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Playwright&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Install Playwright&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install playwright&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Install the Required Browsers&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;to support PDF conversion, please install Chrominum.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;playwright install --with-deps chromium&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;modify &lt;code&gt;config.yaml&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;uncomment MERMAID_ENGINE from config.yaml and change it to &lt;code&gt;playwright&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;MERMAID_ENGINE: playwright&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;pyppeteer&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Install pyppeteer&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pyppeteer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Use your own Browsers&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;pyppeteer alow you use installed browsers, please set the following envirment&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PUPPETEER_EXECUTABLE_PATH = /path/to/your/chromium or edge or chrome&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;please do not use this command to install browser, it is too old&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pyppeteer-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;modify &lt;code&gt;config.yaml&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;uncomment MERMAID_ENGINE from config.yaml and change it to &lt;code&gt;pyppeteer&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;MERMAID_ENGINE: pyppeteer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;mermaid.ink&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;modify &lt;code&gt;config.yaml&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;uncomment MERMAID_ENGINE from config.yaml and change it to &lt;code&gt;ink&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;MERMAID_ENGINE: ink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: this method does not support pdf export.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation by Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Step 1: Download metagpt official image and prepare config.yaml&#xA;docker pull metagpt/metagpt:v0.3.1&#xA;mkdir -p /opt/metagpt/{config,workspace}&#xA;docker run --rm metagpt/metagpt:v0.3.1 cat /app/metagpt/config/config.yaml &amp;gt; /opt/metagpt/config/key.yaml&#xA;vim /opt/metagpt/config/key.yaml # Change the config&#xA;&#xA;# Step 2: Run metagpt demo with container&#xA;docker run --rm \&#xA;    --privileged \&#xA;    -v /opt/metagpt/config/key.yaml:/app/metagpt/config/key.yaml \&#xA;    -v /opt/metagpt/workspace:/app/metagpt/workspace \&#xA;    metagpt/metagpt:v0.3.1 \&#xA;    python startup.py &#34;Write a cli snake game&#34;&#xA;&#xA;# You can also start a container and execute commands in it&#xA;docker run --name metagpt -d \&#xA;    --privileged \&#xA;    -v /opt/metagpt/config/key.yaml:/app/metagpt/config/key.yaml \&#xA;    -v /opt/metagpt/workspace:/app/metagpt/workspace \&#xA;    metagpt/metagpt:v0.3.1&#xA;&#xA;docker exec -it metagpt /bin/bash&#xA;$ python startup.py &#34;Write a cli snake game&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command &lt;code&gt;docker run ...&lt;/code&gt; do the following things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run in privileged mode to have permission to run the browser&lt;/li&gt; &#xA; &lt;li&gt;Map host directory &lt;code&gt;/opt/metagpt/config&lt;/code&gt; to container directory &lt;code&gt;/app/metagpt/config&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Map host directory &lt;code&gt;/opt/metagpt/workspace&lt;/code&gt; to container directory &lt;code&gt;/app/metagpt/workspace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute the demo command &lt;code&gt;python startup.py &#34;Write a cli snake game&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build image by yourself&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# You can also build metagpt image by yourself.&#xA;git clone https://github.com/geekan/MetaGPT.git&#xA;cd MetaGPT &amp;amp;&amp;amp; docker build -t metagpt:custom .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configure your &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; in any of &lt;code&gt;config/key.yaml / config/config.yaml / env&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Priority order: &lt;code&gt;config/key.yaml &amp;gt; config/config.yaml &amp;gt; env&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Copy the configuration file and make the necessary modifications.&#xA;cp config/config.yaml config/key.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable Name&lt;/th&gt; &#xA;   &lt;th&gt;config/key.yaml&lt;/th&gt; &#xA;   &lt;th&gt;env&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY # Replace with your own key&lt;/td&gt; &#xA;   &lt;td&gt;OPENAI_API_KEY: &#34;sk-...&#34;&lt;/td&gt; &#xA;   &lt;td&gt;export OPENAI_API_KEY=&#34;sk-...&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPENAI_API_BASE # Optional&lt;/td&gt; &#xA;   &lt;td&gt;OPENAI_API_BASE: &#34;https://&amp;lt;YOUR_SITE&amp;gt;/v1&#34;&lt;/td&gt; &#xA;   &lt;td&gt;export OPENAI_API_BASE=&#34;https://&amp;lt;YOUR_SITE&amp;gt;/v1&#34;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Tutorial: Initiating a startup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Run the script&#xA;python startup.py &#34;Write a cli snake game&#34;&#xA;# Do not hire an engineer to implement the project&#xA;python startup.py &#34;Write a cli snake game&#34; --implement False&#xA;# Hire an engineer and perform code reviews&#xA;python startup.py &#34;Write a cli snake game&#34; --code_review True&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the script, you can find your new project in the &lt;code&gt;workspace/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Preference of Platform or Tool&lt;/h3&gt; &#xA;&lt;p&gt;You can tell which platform or tool you want to use when stating your requirements.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python startup.py &#34;Write a cli snake game based on pygame&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;NAME&#xA;    startup.py - We are a software startup comprised of AI. By investing in us, you are empowering a future filled with limitless possibilities.&#xA;&#xA;SYNOPSIS&#xA;    startup.py IDEA &amp;lt;flags&amp;gt;&#xA;&#xA;DESCRIPTION&#xA;    We are a software startup comprised of AI. By investing in us, you are empowering a future filled with limitless possibilities.&#xA;&#xA;POSITIONAL ARGUMENTS&#xA;    IDEA&#xA;        Type: str&#xA;        Your innovative idea, such as &#34;Creating a snake game.&#34;&#xA;&#xA;FLAGS&#xA;    --investment=INVESTMENT&#xA;        Type: float&#xA;        Default: 3.0&#xA;        As an investor, you have the opportunity to contribute a certain dollar amount to this AI company.&#xA;    --n_round=N_ROUND&#xA;        Type: int&#xA;        Default: 5&#xA;&#xA;NOTES&#xA;    You can also use flags syntax for POSITIONAL ARGUMENTS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code walkthrough&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from metagpt.software_company import SoftwareCompany&#xA;from metagpt.roles import ProjectManager, ProductManager, Architect, Engineer&#xA;&#xA;async def startup(idea: str, investment: float = 3.0, n_round: int = 5):&#xA;    &#34;&#34;&#34;Run a startup. Be a boss.&#34;&#34;&#34;&#xA;    company = SoftwareCompany()&#xA;    company.hire([ProductManager(), Architect(), ProjectManager(), Engineer()])&#xA;    company.invest(investment)&#xA;    company.start_project(idea)&#xA;    await company.run(n_round=n_round)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check &lt;code&gt;examples&lt;/code&gt; for more details on single role (with knowledge base) and LLM only examples.&lt;/p&gt; &#xA;&lt;h2&gt;QuickStart&lt;/h2&gt; &#xA;&lt;p&gt;It is difficult to install and configure the local environment for some users. The following tutorials will allow you to quickly experience the charm of MetaGPT.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deepwisdom.feishu.cn/wiki/CyY9wdJc4iNqArku3Lncl4v8n2b&#34;&gt;MetaGPT quickstart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Try it on Huggingface Space&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/spaces/deepwisdom/MetaGPT&#34;&gt;https://huggingface.co/spaces/deepwisdom/MetaGPT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;For now, cite the &lt;a href=&#34;https://arxiv.org/abs/2308.00352&#34;&gt;Arxiv paper&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{hong2023metagpt,&#xA;      title={MetaGPT: Meta Programming for Multi-Agent Collaborative Framework},&#xA;      author={Sirui Hong and Xiawu Zheng and Jonathan Chen and Yuheng Cheng and Jinlin Wang and Ceyao Zhang and Zili Wang and Steven Ka Shing Yau and Zijuan Lin and Liyang Zhou and Chenyu Ran and Lingfeng Xiao and Chenglin Wu},&#xA;      year={2023},&#xA;      eprint={2308.00352},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.AI}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contact Information&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions or feedback about this project, please feel free to contact us. We highly appreciate your suggestions!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email:&lt;/strong&gt; &lt;a href=&#34;mailto:alexanderwu@fuzhi.ai&#34;&gt;alexanderwu@fuzhi.ai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Issues:&lt;/strong&gt; For more technical inquiries, you can also create a new issue in our &lt;a href=&#34;https://github.com/geekan/metagpt/issues&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We will respond to all questions within 2-3 business days.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/geekan/MetaGPT/assets/2707039/5e8c1062-8c35-440f-bb20-2b0320f8d27d&#34;&gt;https://github.com/geekan/MetaGPT/assets/2707039/5e8c1062-8c35-440f-bb20-2b0320f8d27d&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Join us&lt;/h2&gt; &#xA;&lt;p&gt;📢 Join Our Discord Channel! &lt;a href=&#34;https://discord.gg/ZRHeExS6xv&#34;&gt;https://discord.gg/ZRHeExS6xv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Looking forward to seeing you there! 🎉&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>posit-conf-2023/quarto-r</title>
    <updated>2023-09-20T01:31:41Z</updated>
    <id>tag:github.com,2023-09-20:/posit-conf-2023/quarto-r</id>
    <link href="https://github.com/posit-conf-2023/quarto-r" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quarto with R &amp;amp; RStudio&lt;/h1&gt; &#xA;&lt;h3&gt;posit::conf 2023&lt;/h3&gt; &#xA;&lt;h4&gt;Teaching Team&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Andrew Bray&lt;/li&gt; &#xA; &lt;li&gt;Amelia McNamara&lt;/li&gt; &#xA; &lt;li&gt;Emil Hvitfeldt&lt;/li&gt; &#xA; &lt;li&gt;Mouna Belaid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;span&gt;🗓&lt;/span&gt; September 16 and 17, 2022&lt;br&gt; &lt;span&gt;⏰&lt;/span&gt; 09:00 - 17:00&lt;br&gt; &lt;span&gt;🏨&lt;/span&gt; Hyatt Regency, Chicago &lt;span&gt;✍&lt;/span&gt; &lt;a href=&#34;http://pos.it/conf&#34;&gt;pos.it/conf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;These workshops will prepare you to author a rich array of documents in Quarto, the next generation of R Markdown. Quarto is an open-source scientific and technical publishing system that offers multilingual programming language support to create dynamic and static documents, books, presentations, blogs, and other online resources.&lt;/p&gt; &#xA;&lt;p&gt;The focus of the introductory workshop will be on single documents. You will learn to create static documents, to add interactivity to them with Shiny and htmlwidgets, or steer them in the direction of sophisticated scientific documents. In the afternoon you’ll take the same authoring approaches to create slide presentations in various formats such as reveal.js, beamer, and pptx.&lt;/p&gt; &#xA;&lt;p&gt;The focus of the advanced workshop will be on projects that weave together multiple documents and allow you to write books and build websites. You will also learn various ways to deploy and publish your Quarto projects on the web.&lt;/p&gt; &#xA;&lt;h2&gt;Prework&lt;/h2&gt; &#xA;&lt;p&gt;There is no need to install software or packages on your machine. All you&#39;ll need for the workshop is a laptop and a browser. We will set up RStudio environments for all participants on Posit Cloud that will have all of the software that you&#39;ll need.&lt;/p&gt; &#xA;&lt;h2&gt;Schedule&lt;/h2&gt; &#xA;&lt;h3&gt;Day 1: Introduction to Quarto&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;9-10:30 am &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/1-single-docs/1-welcome-to-quarto&#34;&gt;Welcome to Quarto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;10:30-11 am Coffee Break&lt;/li&gt; &#xA; &lt;li&gt;11-12:30 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/1-single-docs/2-polishing-docs&#34;&gt;Polishing Documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;12:30-1:30 pm Lunch&lt;/li&gt; &#xA; &lt;li&gt;1:30-3 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/1-single-docs/3-presentations&#34;&gt;Presentations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;3-3:30 pm Coffee Break&lt;/li&gt; &#xA; &lt;li&gt;3:30-5:00 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/1-single-docs/4-sharing-your-work&#34;&gt;Sharing your Work&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Day 2: Advanced Quarto&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;9-10:30 am &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/2-projects/1-docs-to-projects&#34;&gt;From Docs to Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;10:30-11 am Coffee Break&lt;/li&gt; &#xA; &lt;li&gt;11-12:30 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/2-projects/2-websites&#34;&gt;Websites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;12:30-1:30 pm Lunch&lt;/li&gt; &#xA; &lt;li&gt;1:30-2 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/2-projects/3-slidecraft&#34;&gt;Advanced Slidecraft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2-3 pm &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/2-projects/4-books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;3-3:30 pm Coffee Break&lt;/li&gt; &#xA; &lt;li&gt;3:30-4:30 &lt;a href=&#34;https://raw.githubusercontent.com/posit-conf-2023/quarto-r/main/materials/2-projects/5-extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;4:30-5 pm Panel Discussion with the Quarto Dev Team&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instructor&lt;/h2&gt; &#xA;&lt;p&gt;Andrew Bray is an Associate Teaching Professor in the Department of Statistics at UC Berkeley where he develops and teaches courses in statistics and data science. His research interests include statistical computing, data privacy, and applications of statistical models to environmental science. He was previously an Associate Professor of Statistics in the Department of Mathematics at Reed College and an NSF Five Colleges postdoctoral fellow in western Massachusetts.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.creativecommons.org/l/by/4.0/88x31.png&#34; alt=&#34;&#34;&gt; This work is licensed under a &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>