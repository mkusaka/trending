<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-29T01:30:27Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>a1ex4/ownfoil</title>
    <updated>2024-07-29T01:30:27Z</updated>
    <id>tag:github.com,2024-07-29:/a1ex4/ownfoil</id>
    <link href="https://github.com/a1ex4/ownfoil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight and customizable Tinfoil Shop manager, with automatic saves backup.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ownfoil&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/a1ex4/ownfoil&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/a1ex4/ownfoil&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/a1ex4/ownfoil/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/a1ex4/ownfoil&#34; alt=&#34;Docker Image Size (latest semver)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ownfoil is a Nintendo Switch library manager, that will also turn your library into a fully customizable and self-hosted Tinfoil Shop. The goal of this project is to manage your library, identify any missing content (DLCs or updates) and provide a user friendly way to browse your content. Some of the features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;multi user authentication&lt;/li&gt; &#xA; &lt;li&gt;web interface for configuration&lt;/li&gt; &#xA; &lt;li&gt;web interface for browsing the library&lt;/li&gt; &#xA; &lt;li&gt;content identification using decryption or filename&lt;/li&gt; &#xA; &lt;li&gt;Tinfoil shop customization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The project is still in development, expect things to break or change without notice.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/a1ex4/ownfoil/develop/#nstallation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/a1ex4/ownfoil/develop/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/a1ex4/ownfoil/develop/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/a1ex4/ownfoil/develop/#similar-projects&#34;&gt;Similar Projects&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Using Docker&lt;/h2&gt; &#xA;&lt;h3&gt;Docker run&lt;/h3&gt; &#xA;&lt;p&gt;Running this command will start the shop on port &lt;code&gt;8465&lt;/code&gt; with the library in &lt;code&gt;/your/game/directory&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -p 8465:8465 -v /your/game/directory:/games /your/config/directory:/app/config --name ownfoil a1ex4/ownfoil&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The shop is now accessible with your computer/server IP and port, i.e. &lt;code&gt;http://localhost:8465&lt;/code&gt; from the same computer or &lt;code&gt;http://192.168.1.100:8465&lt;/code&gt; from a device in your network.&lt;/p&gt; &#xA;&lt;h3&gt;Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;Create a file named &lt;code&gt;docker-compose.yml&lt;/code&gt; with the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;version: &#34;3&#34;&#xA;&#xA;services:&#xA;  ownfoil:&#xA;    container_name: ownfoil&#xA;    image: a1ex4/ownfoil&#xA;    environment:&#xA;      # For write permission in config directory&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;    volumes:&#xA;      - /your/game/directory:/games&#xA;      - ./config:/app/config&#xA;    ports:&#xA;      - &#34;8465:8465&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then create and start the container with the command (executed in the same directory as the docker-compose file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is usefull if you don&#39;t want to remember the &lt;code&gt;docker run&lt;/code&gt; command and have a persistent and reproductible container configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Using Python&lt;/h2&gt; &#xA;&lt;p&gt;Clone or download the Github repository (&lt;a href=&#34;https://github.com/a1ex4/ownfoil/archive/refs/heads/develop.zip&#34;&gt;here&lt;/a&gt;), then open a command line inside the &lt;code&gt;ownfoil&lt;/code&gt; folder and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pip install -r requirements&#xA;$ python app/app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update the app you will need to pull the latest commits if using git or download the repository as a zip again.&lt;/p&gt; &#xA;&lt;h2&gt;Tinfoil setup&lt;/h2&gt; &#xA;&lt;p&gt;In Tinfoil, add a shop with the following settings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protocol: &lt;code&gt;http&lt;/code&gt; (or &lt;code&gt;https&lt;/code&gt; if using a SSL enabled reverse proxy)&lt;/li&gt; &#xA; &lt;li&gt;Host: server/computer IP, i.e. &lt;code&gt;192.168.1.100&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Port: host port of the container, i.e. &lt;code&gt;8000&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Username: username as created in Ownfoil settings (if the shop is set to Private)&lt;/li&gt; &#xA; &lt;li&gt;Password: password as created in Ownfoil settings (if the shop is set to Private)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Once Ownfoil is running you can access the Shop Web UI by navigating to the &lt;code&gt;http://&amp;lt;computer/server IP&amp;gt;:8465&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;User administration&lt;/h2&gt; &#xA;&lt;p&gt;Ownfoil requires an &lt;code&gt;admin&lt;/code&gt; user to be created to enable Authentication for your Shop. Go to the &lt;code&gt;Settings&lt;/code&gt; to create a first user that will have admin rights. Then you can add more users to your shop the same way.&lt;/p&gt; &#xA;&lt;h2&gt;Library administration&lt;/h2&gt; &#xA;&lt;p&gt;In the &lt;code&gt;Settings&lt;/code&gt; page under the &lt;code&gt;Library&lt;/code&gt; section, you can add directories containing your content. You can then manually trigger the library scan: Ownfoil will scan the content of the directories and try to identify every supported file (currently &lt;code&gt;nsp&lt;/code&gt;, &lt;code&gt;nsz&lt;/code&gt;, &lt;code&gt;xci&lt;/code&gt;, &lt;code&gt;xcz&lt;/code&gt;). There is watchdog in place for all your added directories: files moved, renamed, added or removed will be reflected directly in your library.&lt;/p&gt; &#xA;&lt;h2&gt;Titles configuration&lt;/h2&gt; &#xA;&lt;p&gt;In the &lt;code&gt;Settings&lt;/code&gt; page under the &lt;code&gt;Titles&lt;/code&gt; section is where you specify the language of your Shop (currently the same for all users).&lt;/p&gt; &#xA;&lt;p&gt;This is where you can also upload your &lt;code&gt;console keys&lt;/code&gt; file to enable content identification using decryption, instead of only using filenames. If you do not provide keys, Ownfoil expects the files to be named &lt;code&gt;[APP_ID][vVERSION]&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Shop customization&lt;/h2&gt; &#xA;&lt;p&gt;In the &lt;code&gt;Settings&lt;/code&gt; page under the &lt;code&gt;Shop&lt;/code&gt; section is where you customize your Shop, like the message displayed when successfully accessing the shop from Tinfoil or if the shop is private or public.&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;Planned feature, in no particular order.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Library browser: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add &#34;details&#34; view for every content, to display versions etc&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Library management: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Rename and organize library after content identification&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Delete older updates&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatic nsp/xci -&amp;gt; nsz conversion&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Shop customization: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Encrypt shop&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support emulator Roms &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Scrape box arts&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatically create NSP forwarders&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Saves manager: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatically discover Swicth device based on Tinfoil connection&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Only backup and serve saves based on the user/Switch&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;External services: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrate torrent indexer Jackett to download updates automatically&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Similar Projects&lt;/h1&gt; &#xA;&lt;p&gt;If you want to create your personal NSP Shop then check out these other similar projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eXhumer/pyTinGen&#34;&gt;eXhumer/pyTinGen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JackInTheShop/FT-SCEP&#34;&gt;JackInTheShop/FT-SCEP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gianemi2/tinson-node&#34;&gt;gianemi2/tinson-node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BigBrainAFK/tinfoil_gdrive_generator&#34;&gt;BigBrainAFK/tinfoil_gdrive_generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ibnux/php-tinfoil-server&#34;&gt;ibnux/php-tinfoil-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ramdock/nut-server&#34;&gt;ramdock/nut-server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Myster-Tee/TinfoilWebServer&#34;&gt;Myster-Tee/TinfoilWebServer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DevYukine/rustfoil&#34;&gt;DevYukine/rustfoil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Orygin/gofoil&#34;&gt;Orygin/gofoil&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>