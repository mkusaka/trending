<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:30:26Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>elifgazioglu/doyouwannagooutwithme</title>
    <updated>2023-12-26T01:30:26Z</updated>
    <id>tag:github.com,2023-12-26:/elifgazioglu/doyouwannagooutwithme</id>
    <link href="https://github.com/elifgazioglu/doyouwannagooutwithme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;âœ¨&lt;a href=&#34;http://doyouwannagooutwithme.com&#34;&gt;doyouwannagooutwithme.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A website to invite your lover for a date ðŸ¥°&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>0atman/noboilerplate</title>
    <updated>2023-12-26T01:30:26Z</updated>
    <id>tag:github.com,2023-12-26:/0atman/noboilerplate</id>
    <link href="https://github.com/0atman/noboilerplate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code for my talks on the No Boilerplate channel&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Code for my talks on the No Boilerplate channel is in &lt;code&gt;scripts/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;I build these using &lt;a href=&#34;https://obsidian.md/&#34;&gt;obsidian.md&lt;/a&gt; and the &lt;a href=&#34;https://github.com/MSzturc/obsidian-advanced-slides&#34;&gt;advanced-slides plugin&lt;/a&gt;: I take each slide, printscreen it, and splice it with my audio using &lt;a href=&#34;http://reaper.fm/&#34;&gt;reaper.fm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/c/NoBoilerplate&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/114097/178788174-86a6e745-a5cb-4d0c-820f-85cedfe9618d.png&#34; alt=&#34;Screenshot from 2022-07-13 17-49-52&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Recommended Rust Reading&lt;/h1&gt; &#xA;&lt;p&gt;Here are some great resources that I used to teach myself:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The Book &lt;a href=&#34;https://doc.rust-lang.org/stable/book/&#34;&gt;https://doc.rust-lang.org/stable/book/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Everything on fasterthanli.me, starting with &lt;a href=&#34;https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep&#34;&gt;https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rust By Example (follows the same chapter ordering to The Book) &lt;a href=&#34;https://doc.rust-lang.org/rust-by-example/&#34;&gt;https://doc.rust-lang.org/rust-by-example/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rustlings code kata, learn by fixing tiny failing tests &lt;a href=&#34;https://github.com/rust-lang/rustlings&#34;&gt;https://github.com/rust-lang/rustlings&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;My video series on Rust (of course!) playlist here, watch RUST-6 first (my recommended set up) and then the rest in any order: &lt;a href=&#34;https://www.youtube.com/watch?v=ifaLk5v3W90&amp;amp;list=PLZaoyhMXgBzoM9bfb5pyUOT3zjnaDdSEP&amp;amp;index=6&#34;&gt;https://www.youtube.com/watch?v=ifaLk5v3W90&amp;amp;list=PLZaoyhMXgBzoM9bfb5pyUOT3zjnaDdSEP&amp;amp;index=6&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;My Discord server, especially #programming and #newbie-advice. There&#39;s a huge community of friendly folks here, answering questions on Rust all day every day. Do tag me and say hi! &lt;a href=&#34;https://discord.gg/mCY2bBmDKZ&#34;&gt;https://discord.gg/mCY2bBmDKZ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Have fun, and good luck!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Spandan-Madan/DeepLearningProject</title>
    <updated>2023-12-26T01:30:26Z</updated>
    <id>tag:github.com,2023-12-26:/Spandan-Madan/DeepLearningProject</id>
    <link href="https://github.com/Spandan-Madan/DeepLearningProject" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An in-depth machine learning tutorial introducing readers to a whole machine learning pipeline from scratch.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;http://logonoid.com/images/harvard-logo.png&#34; alt=&#34;harvard-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;An end to end tutorial of a machine learning pipeline&lt;/h1&gt; &#xA;&lt;p&gt;This tutorial tries to do what most Most Machine Learning tutorials available online do not. It is not a 30 minute tutorial which teaches you how to &#34;Train your own neural network&#34; or &#34;Learn deep learning in under 30 minutes&#34;. It&#39;s a full pipeline which you would need to do if you actually work with machine learning - introducing you to all the parts, and all the implementation decisions and details that need to be made. The dataset is not one of the standard sets like MNIST or CIFAR, you will make you very own dataset. Then you will go through a couple conventional machine learning algorithms, before finally getting to deep learning!&lt;/p&gt; &#xA;&lt;p&gt;In the fall of 2016, I was a Teaching Fellow (Harvard&#39;s version of TA) for the graduate class on &#34;Advanced Topics in Data Science (CS209/109)&#34; at Harvard University. I was in-charge of designing the class project given to the students, and this tutorial has been built on top of the project I designed for the class.&lt;/p&gt; &#xA;&lt;h1&gt;UPDATE 24th October 2018&lt;/h1&gt; &#xA;&lt;p&gt;The tutorial has now been re-written in PyTorch thanks to Anshul Basia (&lt;a href=&#34;https://github.com/AnshulBasia&#34;&gt;https://github.com/AnshulBasia&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;You can access the HTML here: &lt;a href=&#34;https://spandan-madan.github.io/DeepLearningProject/PyTorch_version/Deep_Learning_Project-Pytorch.html&#34;&gt;https://spandan-madan.github.io/DeepLearningProject/PyTorch_version/Deep_Learning_Project-Pytorch.html&lt;/a&gt; and the IPython Notebook with the code in PyTorch here:&lt;a href=&#34;https://github.com/Spandan-Madan/DeepLearningProject/raw/master/PyTorch_version/Deep_Learning_Project-Pytorch.ipynb&#34;&gt;https://github.com/Spandan-Madan/DeepLearningProject/blob/master/PyTorch_version/Deep_Learning_Project-Pytorch.ipynb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Citing if you use the work here&lt;/h1&gt; &#xA;&lt;p&gt;If you would like to use this work, please cite the work using the doi - &lt;a href=&#34;http://dx.doi.org/10.5281/zenodo.830003&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/doi/10.5281/zenodo.830003.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Reading/Viewing the Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;To view the project as an HTML file, visit - &lt;a href=&#34;https://spandan-madan.github.io/DeepLearningProject/&#34;&gt;https://spandan-madan.github.io/DeepLearningProject/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The Code&lt;/h1&gt; &#xA;&lt;p&gt;If you would like to access to Code, please go through the ipython notebook &lt;code&gt;Deep_Learning_Project.ipynb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SETUP&lt;/h1&gt; &#xA;&lt;p&gt;Python&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We will be using Python 2.7. Primary reason is that Tensorflow is not compatible with python &amp;gt; 3.5, and some other libraries are not compatible with python 3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To make setup easy, we are going to use conda.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please install conda 3 from &lt;a href=&#34;https://www.continuum.io/downloads&#34;&gt;https://www.continuum.io/downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The repository has a conda config file which will make setting up super easy. It&#39;s the file &lt;code&gt;deeplearningproject_environment.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Then create a new conda environment using the command with &lt;code&gt;conda env create -f deeplearningproject_environment.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now, you can activate the environment with: &lt;code&gt;source activate deeplearningproject&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jupyter notebook&lt;/code&gt; If all the isntallations go through, you are good to go! If not, here is a list of packages that need to be installed: &lt;code&gt;requests imDbPy wget tmdbsimple seaborn sklearn Pillow keras tensorflow h5py gensim nltk stop_words&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please install imdbpy using &#39;pip install imdbpy==6.6&#39; since earlier versions are broken&lt;/p&gt; &#xA;&lt;h3&gt;Setting up conda environment in jupyter notebook&lt;/h3&gt; &#xA;&lt;p&gt;To be able to run the environment you just created on a juputer notebook, first check that you have the python package &lt;code&gt;ipykernel&lt;/code&gt; installed. If you don&#39;t simply install it using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install ipykernel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, add this to your jupyter notebook using the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m ipykernel install --user --name deeplearningproject --display-name &#34;deeplearningproject&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Needless to say, remove all single quotes before running commands.&lt;/p&gt; &#xA;&lt;p&gt;Go to the directory and run jupyter notbeook by &#34;jupyter notebook&#34; and open the respective notebook on browser. TO install TMDB: pip install tmdbsimple Use &#34;import tmdbsimple as tmdb&#34;&lt;/p&gt; &#xA;&lt;h3&gt;Setting up a docker container with docker-compose&lt;/h3&gt; &#xA;&lt;h4&gt;Prerequisites&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;https://docs.docker.com/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;docker compose &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Run docker-compose&lt;/h4&gt; &#xA;&lt;p&gt;To work with an isolate environment and be able to run it on many systems without troubles, you can run this docker-compose command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will build &lt;code&gt;deeplearningproject&lt;/code&gt; image according to Dockerfile. And then run dokcer container via docker-compose. See Docker and docker-compose docs for more informations :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;https://docs.docker.com/compose/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then access notebooks through your web browser at &lt;a href=&#34;http://localhost:8888&#34;&gt;http://localhost:8888&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should notice that notebooks have been copied from root to notebooks folder to mount them into container via bind volume. Any changes you make, will be saved on host (notebooks dir).&lt;/p&gt; &#xA;&lt;h4&gt;Add packages&lt;/h4&gt; &#xA;&lt;p&gt;You can add conda or pip packages to image (and thus, container) by updating &lt;code&gt;deeplearningproject_environment.yml&lt;/code&gt; file and then run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will build a new &lt;code&gt;deeplearningproject&lt;/code&gt; image with new conda/pip packages installed. Stop your running container (&lt;code&gt;CTRL-C&lt;/code&gt;) and then &lt;code&gt;docker-compose up&lt;/code&gt; to rerun a fresh new container.&lt;/p&gt; &#xA;&lt;h1&gt;Known common bugs&lt;/h1&gt; &#xA;&lt;p&gt;I will keep updating this as issues pop up on this repository.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;One known bug is because Keras 2.0 is not compatible with some Keras 1.2 functionalities. You may run into errors with importing &lt;code&gt;VGG16&lt;/code&gt;. If so, just update keras using the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install git+git://github.com/fchollet/keras.git --upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;-OS Error: Too Many Open Files Refer to: &lt;a href=&#34;https://stackoverflow.com/questions/16526783/python-subprocess-too-many-open-files&#34;&gt;https://stackoverflow.com/questions/16526783/python-subprocess-too-many-open-files&lt;/a&gt; or, shut down notebook and execute following the the same terminal ``bash ulimit -Sn 10000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;And restart the jupyter notebook.&#xA;&#xA;Hope this repo helps introduce you to a full machine learning pipeline! If you spot an error, please create an issue to help out others using this resource!&#xA;&#xA;To prevent problems with installation and setting up, this repository comes with a conda environment profile. The only thing you will need is to install the newest version of conda, and use this profile to create a new environment and it will come set up with all the libraries you will need for the tutorial.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>