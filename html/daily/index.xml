<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-25T01:32:06Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jmortega/python-pentesting</title>
    <updated>2023-12-25T01:32:06Z</updated>
    <id>tag:github.com,2023-12-25:/jmortega/python-pentesting</id>
    <link href="https://github.com/jmortega/python-pentesting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;python-pentesting-tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;=============================== Tool pentesting with Python&lt;/h1&gt; &#xA;&lt;p&gt;The main script is pentesting-tool.py and you need execute with python 2.7 Also you need install requeriments.txt and other modules like python-msfrpc&lt;/p&gt; &#xA;&lt;h1&gt;Install dependences from requeriments.txt&lt;/h1&gt; &#xA;&lt;p&gt;pip install -r requirements.txt&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;h2&gt;This tool allows obtain information about a specific ip or domain.&lt;/h2&gt; &#xA;&lt;p&gt;It has options like port scanning and detect vulnerabilities in some ports like ftp or mysql&lt;/p&gt; &#xA;&lt;p&gt;It has another advanced features like connecting with metasploit and nexpose for extracting information about vulnerabilities discovered in specific servers.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/jmortega/python-pentesting/raw/master/tool.png&#34; alt=&#34;python-pentesting-tool&#34;&gt; &#xA;&lt;h1&gt;Using The tool&lt;/h1&gt; &#xA;&lt;p&gt;The first step is introduce the target ip or domain These are the options we can view when we have introduced a ip or domain:&lt;/p&gt; &#xA;&lt;h2&gt;1.Check Open Ports&lt;/h2&gt; &#xA;&lt;p&gt;This option checks the ports open for a target ip or domain&lt;/p&gt; &#xA;&lt;h2&gt;2.Port Scanning&lt;/h2&gt; &#xA;&lt;p&gt;This option checks the ports for a target ip or domain&lt;/p&gt; &#xA;&lt;h2&gt;3.Nmap Scanning advanced&lt;/h2&gt; &#xA;&lt;p&gt;Check ports in more advanced mode&lt;/p&gt; &#xA;&lt;h2&gt;4.Check Option methods&lt;/h2&gt; &#xA;&lt;p&gt;This option checks the methods(GET,POST,PUT,DELETE) a target ip or domain&lt;/p&gt; &#xA;&lt;p&gt;If the server doesn&#39;t support this option methods,it show an message error&lt;/p&gt; &#xA;&lt;h2&gt;5.Check DNS Servers Info&lt;/h2&gt; &#xA;&lt;p&gt;This options show the info about DNS server for a target ip or domain&lt;/p&gt; &#xA;&lt;h2&gt;6.Check Host info fron Shodan Service&lt;/h2&gt; &#xA;&lt;p&gt;This option obtain info about the target ip from shodan services&lt;/p&gt; &#xA;&lt;p&gt;For get info from Shodan services in the class ShodanSearch you can put your own shodanKey in the init method&lt;/p&gt; &#xA;&lt;h2&gt;7.NMAP Scanning&lt;/h2&gt; &#xA;&lt;p&gt;This option makes a port scanning with python-nmap and for each port checks if the port is open&lt;/p&gt; &#xA;&lt;p&gt;If the port is open,checks the nmap scripts for detecting some vulnerability in the port or in the service&lt;/p&gt; &#xA;&lt;p&gt;The ports to analyze are: 21,22,80,8080,443,5432,3306,27017,55553,1241,9160,5900&lt;/p&gt; &#xA;&lt;p&gt;21--&amp;gt;FTP&lt;/p&gt; &#xA;&lt;p&gt;22-&amp;gt;SSH&lt;/p&gt; &#xA;&lt;p&gt;80,8080--&amp;gt;HTTP&lt;/p&gt; &#xA;&lt;p&gt;443--&amp;gt;SSL&lt;/p&gt; &#xA;&lt;p&gt;5432--&amp;gt;POSTGRES SQL&lt;/p&gt; &#xA;&lt;p&gt;3306--&amp;gt;MySQL&lt;/p&gt; &#xA;&lt;p&gt;27017--&amp;gt;MongoDB&lt;/p&gt; &#xA;&lt;p&gt;9160--&amp;gt;CASSANDRA&lt;/p&gt; &#xA;&lt;p&gt;5900--&amp;gt;VNC&lt;/p&gt; &#xA;&lt;h2&gt;8.Host Info by Socket Call&lt;/h2&gt; &#xA;&lt;p&gt;Shows info about the call socket.gethostbyname(hostname)&lt;/p&gt; &#xA;&lt;h2&gt;9.GeoLocation Host Info&lt;/h2&gt; &#xA;&lt;p&gt;Shows server geolocation info with the pygeocoder library This options uses the &#39;GeoLiteCity.dat&#39; file for obtain the geolocation info&lt;/p&gt; &#xA;&lt;h2&gt;10.Scraping for images and pdf &amp;amp; obtain metadata&lt;/h2&gt; &#xA;&lt;p&gt;Obtain images and pdfs from the server and metadata info that could be found inside images and pdfs&lt;/p&gt; &#xA;&lt;p&gt;When images and pdfs are found in the server,a local folder is created for storing these items&lt;/p&gt; &#xA;&lt;h2&gt;11.Get Headers info&lt;/h2&gt; &#xA;&lt;p&gt;Check request headers info from ip and hostname&lt;/p&gt; &#xA;&lt;h2&gt;12.Get SSH user/password Brute Force&lt;/h2&gt; &#xA;&lt;p&gt;If the server has the port 22 open,we can try a brute force process with dictionary for users and passwords&lt;/p&gt; &#xA;&lt;p&gt;The script is using 2 files,users.txt and passwords.txt&lt;/p&gt; &#xA;&lt;p&gt;This files and other dictionaries can be download from repository&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd/unix-os&#34;&gt;https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd/unix-os&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These files can be found in the FuzzDB project: &lt;a href=&#34;https://code.google.com/p/fuzzdb&#34;&gt;https://code.google.com/p/fuzzdb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;13.Get FTP Anonymous access&lt;/h2&gt; &#xA;&lt;p&gt;If the server has the port 21 open,we can check if it has anonymous access activated&lt;/p&gt; &#xA;&lt;h2&gt;14.MetaSploitFrameWork&lt;/h2&gt; &#xA;&lt;p&gt;You must enter information about the server where metasploit is running&lt;/p&gt; &#xA;&lt;p&gt;Introduce IP server where MetaSploit is running:&lt;/p&gt; &#xA;&lt;p&gt;Introduce Port server where MetaSploit is running:&lt;/p&gt; &#xA;&lt;p&gt;Introduce user for MetaSploit:&lt;/p&gt; &#xA;&lt;p&gt;Introduce password for MetaSploit:&lt;/p&gt; &#xA;&lt;h2&gt;15.NexposeFramework&lt;/h2&gt; &#xA;&lt;p&gt;You must enter information about the server where nexpose is running&lt;/p&gt; &#xA;&lt;p&gt;Introduce IP server where Nexpose is running:&lt;/p&gt; &#xA;&lt;p&gt;Introduce Port server where Nexpose is running:&lt;/p&gt; &#xA;&lt;p&gt;Introduce user for Nexpose:&lt;/p&gt; &#xA;&lt;p&gt;Introduce password for Nexpose:&lt;/p&gt; &#xA;&lt;h1&gt;Logs&lt;/h1&gt; &#xA;&lt;p&gt;For each option ,a log file is generated&lt;/p&gt; &#xA;&lt;p&gt;1.logOpenPorts.txt&lt;/p&gt; &#xA;&lt;p&gt;2.logOptionMethods.txt&lt;/p&gt; &#xA;&lt;p&gt;3.logDnsInfo.txt&lt;/p&gt; &#xA;&lt;p&gt;4.logHostInfo.txt&lt;/p&gt; &#xA;&lt;p&gt;5.logNScanningNmap.txt&lt;/p&gt; &#xA;&lt;p&gt;6.logHostByName.txt&lt;/p&gt; &#xA;&lt;p&gt;7.logGeoLocationInfo.txt&lt;/p&gt; &#xA;&lt;p&gt;8.logScraping.txt&lt;/p&gt; &#xA;&lt;p&gt;9.logCheckHeaders.txt&lt;/p&gt; &#xA;&lt;p&gt;10.logSSHBruteForce.txt&lt;/p&gt; &#xA;&lt;p&gt;11.logFTP.txt&lt;/p&gt; &#xA;&lt;p&gt;12.metaSploit_log.txt&lt;/p&gt; &#xA;&lt;p&gt;13.nexpose_log.txt&lt;/p&gt; &#xA;&lt;h1&gt;Libraries&lt;/h1&gt; &#xA;&lt;p&gt;These are the main libraries that we have to install in order to execute the program&lt;/p&gt; &#xA;&lt;p&gt;Some libraries are easy install with pip and others like python-msfprc for metasploit framework must be install with the source code&lt;/p&gt; &#xA;&lt;h1&gt;Install requirements&lt;/h1&gt; &#xA;&lt;p&gt;pip install -r requirements.txt&lt;/p&gt; &#xA;&lt;h1&gt;pythonwhois&lt;/h1&gt; &#xA;&lt;p&gt;pip install pythonwhois&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cryto.net/pythonwhois/install.html&#34;&gt;http://cryto.net/pythonwhois/install.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ipwhois&lt;/h1&gt; &#xA;&lt;p&gt;pip install ipwhois&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/ipwhois&#34;&gt;https://pypi.python.org/pypi/ipwhois&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;python-nmap&lt;/h1&gt; &#xA;&lt;p&gt;pip install python-nmap&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/python-nmap&#34;&gt;https://pypi.python.org/pypi/python-nmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;pygeoip&lt;/h1&gt; &#xA;&lt;p&gt;pip install pygeoip&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/pygeoip&#34;&gt;https://pypi.python.org/pypi/pygeoip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;pygeocoder&lt;/h1&gt; &#xA;&lt;p&gt;pip install pygeocoder&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/pygeocoder&#34;&gt;https://pypi.python.org/pypi/pygeocoder&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;shodan&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shodan.readthedocs.org/en/latest/tutorial.html#installation&#34;&gt;https://shodan.readthedocs.org/en/latest/tutorial.html#installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;dnspython&lt;/h1&gt; &#xA;&lt;p&gt;pip install dnspython&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/dnspython/1.12.0&#34;&gt;https://pypi.python.org/pypi/dnspython/1.12.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;paramiko&lt;/h1&gt; &#xA;&lt;p&gt;pip install paramiko&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/paramiko/1.15.2&#34;&gt;https://pypi.python.org/pypi/paramiko/1.15.2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Paramiko also requires pyCrypto&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/pycrypto&#34;&gt;https://pypi.python.org/pypi/pycrypto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;requests&lt;/h1&gt; &#xA;&lt;p&gt;pip install requests&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.python-requests.org/en/latest/user/install/#install&#34;&gt;http://www.python-requests.org/en/latest/user/install/#install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;msgpack&lt;/h1&gt; &#xA;&lt;p&gt;pip install msgpack-python&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/msgpack-python&#34;&gt;https://pypi.python.org/pypi/msgpack-python&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;python-msfrpc&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SpiderLabs/msfrpc/tree/master/python-msfrpc&#34;&gt;https://github.com/SpiderLabs/msfrpc/tree/master/python-msfrpc&lt;/a&gt; python setup install&lt;/p&gt; &#xA;&lt;h1&gt;PyPDF2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/PyPDF2&#34;&gt;https://pypi.python.org/pypi/PyPDF2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;lxml&lt;/h1&gt; &#xA;&lt;p&gt;pip install lxml&lt;/p&gt; &#xA;&lt;h1&gt;BeautifulSoup&lt;/h1&gt; &#xA;&lt;p&gt;pip install beautifulsoup4&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.crummy.com/software/BeautifulSoup&#34;&gt;http://www.crummy.com/software/BeautifulSoup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Selenium&lt;/h1&gt; &#xA;&lt;p&gt;pip install selenium&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/selenium&#34;&gt;https://pypi.python.org/pypi/selenium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Pillow&lt;/h1&gt; &#xA;&lt;p&gt;Python Imaging Library&lt;/p&gt; &#xA;&lt;p&gt;pip install Pillow&lt;/p&gt; &#xA;&lt;h1&gt;FTPLib&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/2/library/ftplib.html&#34;&gt;https://docs.python.org/2/library/ftplib.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Scapy&lt;/h1&gt; &#xA;&lt;p&gt;It is used in an option for port scanning&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.secdev.org/projects/scapy&#34;&gt;http://www.secdev.org/projects/scapy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ghost.py&lt;/h1&gt; &#xA;&lt;p&gt;It is used in check Headers &amp;amp;&amp;amp; Clicjacking as webkit web client&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jeanphix.me/Ghost.py/&#34;&gt;http://jeanphix.me/Ghost.py/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;Twitter&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://twitter.com/jmortegac&#34;&gt;http://twitter.com/jmortegac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Web&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://about.me/jmortegac&#34;&gt;http://about.me/jmortegac&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>