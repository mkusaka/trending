<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-07T01:31:00Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jwasham/computer-science-flash-cards</title>
    <updated>2022-06-07T01:31:00Z</updated>
    <id>tag:github.com,2022-06-07:/jwasham/computer-science-flash-cards</id>
    <link href="https://github.com/jwasham/computer-science-flash-cards" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mini website for testing both general CS knowledge and enforce coding practice and common algorithm/data structure memorization.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Computer Science Flash Cards&lt;/h1&gt; &#xA;&lt;p&gt;This is a little website I&#39;ve put together to allow me to easily make flash cards and quiz myself for memorization of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;General cs knowledge &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;vocabulary&lt;/li&gt; &#xA;   &lt;li&gt;definitions of processes&lt;/li&gt; &#xA;   &lt;li&gt;powers of 2&lt;/li&gt; &#xA;   &lt;li&gt;design patterns&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Code &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;data structures&lt;/li&gt; &#xA;   &lt;li&gt;algorithms&lt;/li&gt; &#xA;   &lt;li&gt;solving problems&lt;/li&gt; &#xA;   &lt;li&gt;bitwise operations&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Will be able to use it on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;desktop&lt;/li&gt; &#xA; &lt;li&gt;mobile (phone and tablet)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;Flask&lt;/li&gt; &#xA; &lt;li&gt;SQLite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;About the Site&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a brief rundown: &lt;a href=&#34;https://startupnextdoor.com/flash-cards-site-complete/&#34;&gt;https://startupnextdoor.com/flash-cards-site-complete/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;UI for listing cards. From here you can add and edit cards.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jwasham/computer-science-flash-cards/main/screenshots/cards_ui-1467754141259.png&#34; alt=&#34;Card UI&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The front of a General flash card.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jwasham/computer-science-flash-cards/main/screenshots/memorize_ui-1467754306971.png&#34; alt=&#34;Memorizing general knowledge&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The reverse (answer side) of a Code flash card.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jwasham/computer-science-flash-cards/main/screenshots/memorize_code-1467754962142.png&#34; alt=&#34;Code view&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Important Note&lt;/h2&gt; &#xA;&lt;p&gt;The set included in this project (&lt;strong&gt;cards-jwasham.db&lt;/strong&gt;) is not my full set, and is way too big already.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for asking for my list of 1,792 cards. But &lt;strong&gt;it’s too much.&lt;/strong&gt; I even printed them out. It’s 50 pages, front and back, in tiny text. It would take about 8 hours to just read them all.&lt;/p&gt; &#xA;&lt;p&gt;My set includes a lot of obscure info from books I’ve read, Python trivia, machine learning knowledge, assembly language, etc.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ve added it to the project if you want it (&lt;strong&gt;cards-jwasham-extreme.db&lt;/strong&gt;). You&#39;ve been warned.&lt;/p&gt; &#xA;&lt;p&gt;Please make your own set, and while you’re making them, only make cards for what you need to know. Otherwise, it gets out of hand.&lt;/p&gt; &#xA;&lt;h2&gt;How to convert to Anki or CSV&lt;/h2&gt; &#xA;&lt;p&gt;If you don&#39;t want to run a server, you can simply use Anki or a similar service/app. Use this script to convert from my sets (SQLite .db file), or yours, to CSV:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eyedol/tools/raw/master/anki_data_builder.py&#34;&gt;https://github.com/eyedol/tools/blob/master/anki_data_builder.py&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks &lt;a href=&#34;https://github.com/eyedol&#34;&gt;@eyedol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Anki Flashcards:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/1782040640&#34;&gt;computer science flash cards - (basic)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ankiweb.net/shared/info/1691396127&#34;&gt;computer science flash cards - (extreme)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks &lt;a href=&#34;https://github.com/JackKuo-tw&#34;&gt;@JackKuo-tw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to run it on a server&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone project to a directory on your web server.&lt;/li&gt; &#xA; &lt;li&gt;Edit the config.txt file. Change the secret key, username and password. The username and password will be the login for your site. There is only one user - you.&lt;/li&gt; &#xA; &lt;li&gt;Follow this long tutorial to get Flask running. It was way more work than it should be: &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uwsgi-and-nginx-on-ubuntu-16-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uwsgi-and-nginx-on-ubuntu-16-04&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;wsgi.py&lt;/code&gt; is the entry point. It calls &lt;code&gt;flash_cards.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This is my systemd file &lt;code&gt;/etc/systemd/system/flash_cards.service&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/jwasham/computer-science-flash-cards/main/flash_cards.service&#34;&gt;view&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;you can see the paths where I installed it, and the name of my virtualenv directory&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;when done with tutorial:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo systemctl restart flash_cards&#xA;sudo systemctl daemon-reload&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;When you see a login page, you&#39;re good to go.&lt;/li&gt; &#xA; &lt;li&gt;Log in.&lt;/li&gt; &#xA; &lt;li&gt;Click the &#34;General&#34; or &#34;Code&#34; button and make a card!&lt;/li&gt; &#xA; &lt;li&gt;When you&#39;re ready to start memorizing, click either &#34;General&#34; or &#34;Code&#34; in the top menu.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run it on local host (Quick Guide)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Provided by &lt;a href=&#34;https://github.com/devyash&#34;&gt;@devyash&lt;/a&gt; - &lt;a href=&#34;mailto:devyashsanghai@gmail.com&#34;&gt;devyashsanghai@gmail.com&lt;/a&gt; - Reach out to this contributor if you have trouble.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install dependencies: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Install &lt;a href=&#34;https://www.python.org/download/releases&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add python as environment variable &lt;a href=&#34;http://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-7&#34;&gt;windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;To install pip, securely download &lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&#34;&gt;get-pip.py&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;python get-pip.py&lt;/code&gt; in terminal&lt;/li&gt; &#xA;   &lt;li&gt;Add pip to your PATH system variable &lt;a href=&#34;https://stackoverflow.com/questions/23708898/pip-is-not-recognized-as-an-internal-or-external-command&#34;&gt;windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; in terminal after going to correct folder&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;python flash_cards.py&lt;/code&gt; - if you get error for flask then use &lt;code&gt;python -m pip install Flask&lt;/code&gt; first then run &lt;code&gt;flash_card.py&lt;/code&gt; file&lt;/li&gt; &#xA; &lt;li&gt;Open localhost:5000/&lt;/li&gt; &#xA; &lt;li&gt;Login using &#39;admin&#39; and &#39;default&#39; for the username and password, respectively.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you wish to use John&#39;s flash cards then also do following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy db files such as &lt;code&gt;cards-jwasham-extreme&lt;/code&gt; OR &lt;code&gt;cards-jwasham&lt;/code&gt; and paste them in db folder&lt;/li&gt; &#xA; &lt;li&gt;Edit file &lt;code&gt;flash_cards.py&lt;/code&gt; line 8 and replace &#39;cards.db&#39; with any of the other database files e.g.(&#39;cards-jwasham.db&#39;)&lt;/li&gt; &#xA; &lt;li&gt;Repeat the above steps from step 3&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Every time you wish to run your db just open folder in terminal and run &lt;code&gt;python flash_cards.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to run with Docker&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Provided by &lt;a href=&#34;https://github.com/tinpee&#34;&gt;@Tinpee&lt;/a&gt; - &lt;a href=&#34;mailto:tinpee.dev@gmail.com&#34;&gt;tinpee.dev@gmail.com&lt;/a&gt; - Reach out to this contributor if you have trouble.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure you already installed &lt;a href=&#34;https://www.docker.com&#34;&gt;docker&lt;/a&gt; and optionally &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;docker-compose&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone project to any where you want and go to source folder.&lt;/li&gt; &#xA; &lt;li&gt;Edit the &lt;code&gt;config.txt&lt;/code&gt; file. Change the secret key, username and password. The username and password will be the login for your site. There is only one user - you.&lt;/li&gt; &#xA; &lt;li&gt;Build image: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker: &lt;code&gt;docker build . -t cs-flash-cards&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Compose: &lt;code&gt;docker-compose build&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run container: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker: &lt;code&gt;docker run -d -p 8000:8000 --name cs-flash-cards cs-flash-cards&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Compose: &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go your browser and type &lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you already had a backup file &lt;code&gt;cards.db&lt;/code&gt;. Run following command:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: We don&#39;t need to rebuild image, just delete old container if you already built.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d -p 8000:8000 --name cs-flash-cards -v &amp;lt;path_to_folder_contains_cards_db&amp;gt;:/src/db cs-flash-cards&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;path_to_folder_contains_cards_db&amp;gt;&lt;/code&gt;: is the full path contains &lt;code&gt;cards.db&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Example: &lt;code&gt;/home/tinpee/cs-flash-cards/db&lt;/code&gt;, and &lt;code&gt;cards.db&lt;/code&gt; is inside this folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For convenience, if you don&#39;t have &lt;code&gt;cards.db&lt;/code&gt;, this container will auto copy a new one from &lt;code&gt;cards-empty.db&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How to backup data ?&lt;/h3&gt; &#xA;&lt;p&gt;We just need store &lt;code&gt;cards.db&lt;/code&gt; file, and don&#39;t need any sql command.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you run container with &lt;code&gt;-v &amp;lt;folder_db&amp;gt;:/src/db&lt;/code&gt; just go to &lt;code&gt;folder_db&lt;/code&gt; and store &lt;code&gt;cards.db&lt;/code&gt; anywhere you want.&lt;/li&gt; &#xA; &lt;li&gt;Without &lt;code&gt;-v flag&lt;/code&gt;. Type: &lt;code&gt;docker cp &amp;lt;name_of_container&amp;gt;:/src/db/cards.db /path/to/save&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to restore data ?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete old container (not image): &lt;code&gt;docker rm cs-flash-cards&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build a new one with &lt;code&gt;-v flag&lt;/code&gt;: &lt;code&gt;docker run -d -p 8000:8000 --name cs-flash-cards -v &amp;lt;path_to_folder_contains_cards_db&amp;gt;:/src/db cs-flash-cards&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Voila :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to deploy docker file on heroku&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;first install &lt;a href=&#34;https://devcenter.heroku.com/articles/heroku-cli&#34;&gt;heroku CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;change &lt;code&gt;entrypoint.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;- export CARDS_SETTINGS=/src/config.txt&#xA;gunicorn --bind  0.0.0.0:$8000 flash_cards:app&#xA;+ export CARDS_SETTINGS=/src/config.txt&#xA;gunicorn --bind  0.0.0.0:$PORT flash_cards:app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;deploy docker file with following commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;heroku login&#xA;heroku container:login&#xA;heroku create&#xA;# Creating app... done, ⬢ your-app-name&#xA;heroku container:push web --app your-app-name&#xA;heroku container:release web --app your-app-name&#xA;heroku open --app your-app-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Alternative for Node fans&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ashwanikumar04&#34;&gt;@ashwanikumar04&lt;/a&gt; put together an alternative flash cards site running Node: &lt;a href=&#34;https://github.com/ashwanikumar04/flash-cards&#34;&gt;https://github.com/ashwanikumar04/flash-cards&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the demo!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>webstoryboy/portfolio</title>
    <updated>2022-06-07T01:31:00Z</updated>
    <id>tag:github.com,2022-06-07:/webstoryboy/portfolio</id>
    <link href="https://github.com/webstoryboy/portfolio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;포트폴리오 샘플 소스입니다.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;portfolio&lt;/h1&gt; &#xA;&lt;p&gt;학생 포트폴리오 작업&lt;/p&gt; &#xA;&lt;p&gt;임경* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port2/&#34;&gt;https://webstoryboy.github.io/portfolio/port2/&lt;/a&gt; &lt;br&gt; 유석* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port1/&#34;&gt;https://webstoryboy.github.io/portfolio/port1/&lt;/a&gt; &lt;br&gt; 최하* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port3/pf03.html&#34;&gt;https://webstoryboy.github.io/portfolio/port3/pf03.html&lt;/a&gt;&lt;br&gt; 김주* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port4/index4.html&#34;&gt;https://webstoryboy.github.io/portfolio/port4/index4.html&lt;/a&gt;&lt;br&gt; 이재* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port5/indexs/main.html&#34;&gt;https://webstoryboy.github.io/portfolio/port5/indexs/main.html&lt;/a&gt;&lt;br&gt; 이진* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port6/port05.html&#34;&gt;https://webstoryboy.github.io/portfolio/port6/port05.html&lt;/a&gt;&lt;br&gt;&lt;br&gt; 손지* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port7/&#34;&gt;https://webstoryboy.github.io/portfolio/port7/&lt;/a&gt;&lt;br&gt; 최한* 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port8/index4.html&#34;&gt;https://webstoryboy.github.io/portfolio/port8/index4.html&lt;/a&gt;&lt;br&gt; 이정아 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port9/index5.html&#34;&gt;https://webstoryboy.github.io/portfolio/port9/index5.html&lt;/a&gt;&lt;br&gt; 김강산 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port10/portfolio/index.html&#34;&gt;https://webstoryboy.github.io/portfolio/port10/portfolio/index.html&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;*소연 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port11/index20.html&#34;&gt;https://webstoryboy.github.io/portfolio/port11/index20.html&lt;/a&gt;&lt;br&gt; *지현 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port12/index17.html&#34;&gt;https://webstoryboy.github.io/portfolio/port12/index17.html&lt;/a&gt;&lt;br&gt; *상한 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port13/index5.html&#34;&gt;https://webstoryboy.github.io/portfolio/port13/index5.html&lt;/a&gt;&lt;br&gt; *다빈 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port14/index7.html&#34;&gt;https://webstoryboy.github.io/portfolio/port14/index7.html&lt;/a&gt;&lt;br&gt; *지선 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port15/index6.html&#34;&gt;https://webstoryboy.github.io/portfolio/port15/index6.html&lt;/a&gt;&lt;br&gt; *민정 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port16/index6.html&#34;&gt;https://webstoryboy.github.io/portfolio/port16/index6.html&lt;/a&gt;&lt;br&gt; *민정 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port17/index4.html&#34;&gt;https://webstoryboy.github.io/portfolio/port17/index4.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;윤현정 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port18/index.html&#34;&gt;https://webstoryboy.github.io/portfolio/port18/index.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port19/index7.html&#34;&gt;https://webstoryboy.github.io/portfolio/port19/index7.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port20/index5.html&#34;&gt;https://webstoryboy.github.io/portfolio/port20/index5.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port21/index.html&#34;&gt;https://webstoryboy.github.io/portfolio/port21/index.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port22/index7.html&#34;&gt;https://webstoryboy.github.io/portfolio/port22/index7.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port23/index11.html&#34;&gt;https://webstoryboy.github.io/portfolio/port23/index11.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port24/index5.html&#34;&gt;https://webstoryboy.github.io/portfolio/port24/index5.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port25/index.html&#34;&gt;https://webstoryboy.github.io/portfolio/port25/index.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port26/index102.html&#34;&gt;https://webstoryboy.github.io/portfolio/port26/index102.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port27/index4.html&#34;&gt;https://webstoryboy.github.io/portfolio/port27/index4.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port28/index7.html&#34;&gt;https://webstoryboy.github.io/portfolio/port28/index7.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port29/port/index03.html&#34;&gt;https://webstoryboy.github.io/portfolio/port29/port/index03.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port30/index12.html&#34;&gt;https://webstoryboy.github.io/portfolio/port30/index12.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port31/index10.html&#34;&gt;https://webstoryboy.github.io/portfolio/port31/index10.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port32/index6.html&#34;&gt;https://webstoryboy.github.io/portfolio/port32/index6.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port33/index5.html&#34;&gt;https://webstoryboy.github.io/portfolio/port33/index5.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port34/index3.html&#34;&gt;https://webstoryboy.github.io/portfolio/port34/index3.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port35/index9.html&#34;&gt;https://webstoryboy.github.io/portfolio/port35/index9.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port36/index3.html&#34;&gt;https://webstoryboy.github.io/portfolio/port36/index3.html&lt;/a&gt;&lt;br&gt; 주하나 포트폴리오 &lt;a href=&#34;https://webstoryboy.github.io/portfolio/port37/index6.html&#34;&gt;https://webstoryboy.github.io/portfolio/port37/index6.html&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wesbos/JavaScript30</title>
    <updated>2022-06-07T01:31:00Z</updated>
    <id>tag:github.com,2022-06-07:/wesbos/JavaScript30</id>
    <link href="https://github.com/wesbos/JavaScript30" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 Day Vanilla JS Challenge&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://javascript30.com/images/JS3-social-share.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;JavaScript30&lt;/h1&gt; &#xA;&lt;p&gt;Starter Files + Completed solutions for the JavaScript 30 Day Challenge.&lt;/p&gt; &#xA;&lt;p&gt;Grab the course at &lt;a href=&#34;https://JavaScript30.com&#34;&gt;https://JavaScript30.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community #JavaScript30 Content&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to submit a PR adding a link to your own recaps, guides or reviews!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thesagittariusme.blogspot.com/search/label/JS30&#34;&gt;Arjun Khode’s blog&lt;/a&gt; about summaries for each day, including fixed glitches, bugs and extra features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nitishdayal/JavaScript30&#34;&gt;Nitish Dayal&#39;s Text Guides&lt;/a&gt; are great for those who like reading over watching&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://meredithunderell.com/tag/javascript30/&#34;&gt;Meredith Underell&#39;s&lt;/a&gt; Quick Lessons Learned&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://rowanweismiller.com/blog/javascript-30/&#34;&gt;Rowan Weismiller&#39;s&lt;/a&gt; Recaps + Lessons Learned&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tfrommen.de/tag/javascript-30/&#34;&gt;Thorsten Frommen&lt;/a&gt; shares how he solved the exercises before viewing the answers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soyaine/JavaScript30&#34;&gt;Soyaine 写的中文指南&lt;/a&gt;包含了过程记录和难点解释&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freshman.tech/archive/#javascript30&#34;&gt;Ayo Isaiah&#39;s&lt;/a&gt; Recaps and Lessons Learned&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stpcollabr8nlstn.github.io/JavaScript30/&#34;&gt;Adriana Rios&lt;/a&gt; shares her alternative solutions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://30daysofjs.michaeleinsohn.com&#34;&gt;Michael Einsohn&lt;/a&gt; publishes each challenge after watching the video once&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mike_ekkel/javascript-30-a-30-day-vanilla-js-challenge-6a733fc9f62c#.9frjtaje9&#34;&gt;Mike Ekkel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yhabib/JavaScript30&#34;&gt;Yusef Habib&lt;/a&gt; lessons and tricks learned, and a &lt;a href=&#34;https://yhabib.github.io/JavaScript30/&#34;&gt;gh-page&lt;/a&gt; to see working all the mini-projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amelieyeh/JS30&#34;&gt;Amelie Yeh&lt;/a&gt; 30 lessons notes with things I&#39;ve learned, and those important recaps. and directly view my demos &lt;a href=&#34;https://amelieyeh.github.io/JS30/&#34;&gt;here&lt;/a&gt; 🇹🇼😄&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/winar-jin/JavaScript30-Challenge&#34;&gt;Winar&lt;/a&gt;的JavaScript30天挑战，记录练习过程，重难点和其他的解决方案。🎨&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rayhatron.github.io/blog/&#34;&gt;Rayhatron&lt;/a&gt; - walkthroughs, recaps and lessons learned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andreidbr/JS30&#34;&gt;Andrei Dobra&lt;/a&gt; Full repo with lessons learned and a &lt;a href=&#34;https://andreidbr.github.io/JS30/&#34;&gt;gh-page&lt;/a&gt; with all the exercises.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liyuechun/JavaScript30-liyuechun&#34;&gt;从零到壹全栈部落&lt;/a&gt;,春哥发起的从零到壹全栈部落，旨在带领大家一起学习，一起输出，文档化，代码化，中文视频化，全栈部落口号：输出是最好的学习方式。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usyyy/javascript/raw/master/JavaScript30/analysis.md&#34;&gt;Usmaan Ali&#39;s&lt;/a&gt; summary of the technical skills learned from each project. He&#39;s also posting them as separate blog posts &lt;a href=&#34;https://medium.com/@usyyy&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/afuh/js30&#34;&gt;Axel&lt;/a&gt;&#39;s lessons learned and a &lt;a href=&#34;https://afuh.github.io/js30/&#34;&gt;showcase&lt;/a&gt; with the projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dwatow/JavaScript30&#34;&gt;Chris&lt;/a&gt; 中文實戰，目標描述、過程紀錄。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://miayam.github.io&#34;&gt;Muhammad D. Ramadhan&#39;s&lt;/a&gt; blog. He shamlesly mixed his personal life with 30 day JavaScript challenge so as to increase his learning retention. He also summarised the challenge on &lt;a href=&#34;https://miayam.github.io/js30&#34;&gt;one single page&lt;/a&gt;. Do not read his blog!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.keitel.xyz/categories/javascript30/&#34;&gt;Lee Keitel&#39;s Blog&lt;/a&gt; includes summaries of each lesson, what I learned from each one, and my thoughts about the topic taught and using them in the future.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dustinhsiao21/Javascript30-dustin&#34;&gt;Dustin Hsiao&lt;/a&gt; 包含了各篇介紹、 效果Demo、各篇詳解及記錄過程，附上部分延伸閱讀及&lt;a href=&#34;https://dustinhsiao21.github.io/Javascript30-dustin/&#34;&gt;gh-page&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guahsu/JavaScript30&#34;&gt;GuaHsu&lt;/a&gt; - 紀錄各篇練習過程與心得，並嘗試擴充部分練習，也做了一個包含全部練習的&lt;a href=&#34;http://guahsu.io/JavaScript30/&#34;&gt;介紹站&lt;/a&gt;🇹🇼&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/misslild&#34;&gt;Daniela&lt;/a&gt;&#39;s completed challenges on &lt;a href=&#34;https://misslild.github.io/WesBos-30day-Coding-challenge/&#34;&gt;GitHub Pages&lt;/a&gt; and &lt;a href=&#34;https://codepen.io/collection/DapZeP/&#34;&gt;Codepen&lt;/a&gt; &lt;span&gt;🙌&lt;/span&gt; &lt;span&gt;💪&lt;/span&gt; &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guar47&#34;&gt;Dmitrii Pashutskii&#39;s&lt;/a&gt; code of all challenges on &lt;a href=&#34;https://github.com/guar47/javascript30Summary&#34;&gt;GitHub with Pages&lt;/a&gt; and review &lt;a href=&#34;https://blog.dpashutskii.com/tag/javascript30/&#34;&gt;blog posts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sabidhasan/javascript-30&#34;&gt;Abid Hasan&#39;s&lt;/a&gt; completion of all challenges. This was awesome!! Learned so much! &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sky172839465.github.io/course/js30&#34;&gt;Yusong Notes&lt;/a&gt; Records Yusong JS 30 days note and demo &lt;span&gt;🌟&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ding-Fan/javascript30&#34;&gt;Ding&#39;s Implementation&lt;/a&gt; code and online demo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/herminiotorres/JavaScript30&#34;&gt;Herminio Torres&lt;/a&gt; lessons and tricks learned, and a &lt;a href=&#34;https://herminiotorres.github.io/JavaScript30/&#34;&gt;gh-page&lt;/a&gt; to see working all the mini-projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dimabory&#34;&gt;Dmytro Borysovskyi&lt;/a&gt; says many thanks to for the course to Wes 🤝 It was incredible challenge 👌 The full repository with code available &lt;a href=&#34;https://github.com/dimabory/dimabory.github.io/tree/gh-pages/src/components/JavaScript30Days&#34;&gt;here&lt;/a&gt; and demos can be reached by the link to &lt;a href=&#34;https://dimabory.github.io/#/js30days&#34;&gt;gh-pages&lt;/a&gt; 👍👍👍&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akhilome/&#34;&gt;Kizito&lt;/a&gt;&#39;s follow along &lt;a href=&#34;https://github.com/akhilome/js30&#34;&gt;repo&lt;/a&gt; with &lt;a href=&#34;https://akhilome.github.io/js30&#34;&gt;completed challenges&lt;/a&gt; and &lt;a href=&#34;https://akhilome.github.io/js30/notes&#34;&gt;notes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanntile&#34;&gt;VannTile&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/vanntile/JavaScript30&#34;&gt;repository&lt;/a&gt; and &lt;a href=&#34;https://vanntile.github.io/JavaScript30/&#34;&gt;GitHub Pages showcase&lt;/a&gt;. Thank you for a great ⌨️ experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alex-K1m/js30-challenge&#34;&gt;Alex Kim&lt;/a&gt; completed all the challenges. You can check them out at &lt;a href=&#34;https://alex-k1m.github.io/js30-challenge/&#34;&gt;github pages&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seckela&#34;&gt;Mikhail Thomas&lt;/a&gt; created &lt;a href=&#34;https://github.com/seckela/js30plusplus&#34;&gt;JS30++&lt;/a&gt; to add another level of challenge ontop of this already great course.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reymon359/JavaScript30&#34;&gt;Ramon Morcillo&lt;/a&gt; finished this awesome challenge!. You can see the showcase of his implementations on &lt;a href=&#34;https://reymon359.github.io/JavaScript30/&#34;&gt;this link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sescobar99&#34;&gt;Santiago Escobar&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/sescobar99/javascript30-challenge&#34;&gt;repository&lt;/a&gt; and &lt;a href=&#34;https://sescobar99.github.io/javascript30-challenge/&#34;&gt;GitHub Pages showcase&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/a90100/JavaScript30&#34;&gt;Harry Xie&lt;/a&gt; 紀錄 30 天的練習筆記在 &lt;a href=&#34;https://github.com/a90100/JavaScript30&#34;&gt;此連結&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vanribeiro-30daysofjavascript.netlify.app/&#34;&gt; Van Ribeiro&#39;s &lt;/a&gt; about demos and recaps. On &lt;a href=&#34;https://github.com/vanribeiro/30days-Of-JavaScript&#34;&gt;GitHub Repo&lt;/a&gt; there&#39;s a summary about what was learned and researched.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mugilan-Codes&#34;&gt;Mugilan&lt;/a&gt; is currently doing this challenge. Check out his &lt;a href=&#34;https://github.com/Mugilan-Codes/javascript-30&#34;&gt;Repo&lt;/a&gt; and the &lt;a href=&#34;https://mugilan-codes.github.io/javascript-30/&#34;&gt;Live Demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eshanvohra&#34;&gt;Eshan Vohra&lt;/a&gt; is currently doing this challenge. Check out my repo &lt;a href=&#34;https://github.com/eshanvohra/JavaScript30&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RegusAl&#34;&gt;RegusAl&lt;/a&gt; is currently doing this challenge. Check out my repo &lt;a href=&#34;https://github.com/RegusAl/JavaScript30&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascript30.ayushgupta.tech/&#34;&gt;Ayush Gupta&#39;s&lt;/a&gt; implementation of JavaScript30 challenge with some add-ons &amp;amp; updated design.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filipkowal/JS30-05-Flex-Panels-Deactivate&#34;&gt;filipkowal&lt;/a&gt; Fix to flex panels (5th day) so the panels deactivate when clicked on another one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoSaif00&#34;&gt;Mo. Saif&#39;s&lt;/a&gt;note on lessons learned and a &lt;a href=&#34;https://mosaif00.github.io/30-Days-JavaScript-Challenge/&#34;&gt;gh-pages showcase&lt;/a&gt; for the projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stiaannel.co.za/my-projects/javascript30&#34;&gt;Stiaannel&#39;s&lt;/a&gt; implementation of the Javascript30 challenge, with small design changes and a couple of extra features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternative Implementations&lt;/h2&gt; &#xA;&lt;p&gt;Here are some links of people who have done the tutorials, but in a different language or framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tkjone/clojurescript-30&#34;&gt;Thomas Mattacchione&lt;/a&gt; JavaScript 30 written in ClojureScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davefollett&#34;&gt;Dave Follett&#39;s&lt;/a&gt; blog series, &lt;a href=&#34;https://davefollett.io/categories/a-new-vue-on-javascript30/&#34;&gt;A New Vue on #JavaScript30&lt;/a&gt;, where he explores re-implementing #JavaScript30 projects using &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinjide/JS30days&#34;&gt;Akinjide Bankole&lt;/a&gt; used Node.js with &lt;a href=&#34;http://jadelang.net&#34;&gt;Jade&lt;/a&gt; to solve the exercises&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adrienpoly/javascript30-stimulus&#34;&gt;Adrien Poly&lt;/a&gt; a modest attempt to convert Drum Kit, Video Player, Local Tapas, TypeHead to &lt;a href=&#34;https://stimulusjs.org/&#34;&gt;Stimulus JS&lt;/a&gt; framework in a Rails App.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tricinel/TypeScript30&#34;&gt;Bogdan Lazar&lt;/a&gt; all the JavaScript 30 written in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wwags33/JavaScript30&#34;&gt;Will Wager&lt;/a&gt; another &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; implementation!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marcoSven&#34;&gt;marcoSven&lt;/a&gt; solution suggestion for &lt;a href=&#34;https://github.com/marcoSven/JavaScript30/raw/master/10%20-%20Hold%20Shift%20and%20Check%20Checkboxes/index-FINISHED.html&#34;&gt;10 - Hold Shift and Check Checkboxes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/almaclaine&#34;&gt;ALMaclaine&lt;/a&gt; Javascript 30 written in &lt;a href=&#34;https://github.com/ALMaclaine/Dart30&#34;&gt;Dart 2.0&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A note on Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;These are meant to be 1:1 copies of what is done in the video. If you found a better / different way to do things, great, but I will be keeping them the same as the videos.&lt;/p&gt; &#xA;&lt;p&gt;The starter files + solutions will be updated if/when the videos are updated.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt;</summary>
  </entry>
</feed>