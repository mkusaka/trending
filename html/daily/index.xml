<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-19T01:33:28Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dorneanu/gocial</title>
    <updated>2022-12-19T01:33:28Z</updated>
    <id>tag:github.com,2022-12-19:/dorneanu/gocial</id>
    <link href="https://github.com/dorneanu/gocial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Social media interactions - The Gopher way&lt;/p&gt;&lt;hr&gt;&lt;p&gt;#+EXPORT_FILE_NAME: readme.html&lt;/p&gt; &#xA;&lt;p&gt;#+caption: Screnshot from December 2022 [[file:docs/images/2022-12-screenshot.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;About TL;DR Share articles and comments via different social media platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some while ago I was heavily using services like buffer, zapier and ifttt to automatically share interesting articles on social media. All sharing services had great functionalities (e.g. automated workflows) but you&#39;re always limited in the number of shares you can distribute within a time frame without paying for the premium account. At the same time they all lacked support for sharing via LinkedIn. I had a brief look at the LinkedIn API documentation and decided I&#39;ll implement my own service using Golang for the backend.&lt;/p&gt; &#xA;&lt;p&gt;Here is the full [[https://gocial.netlify.app][DEMO]].&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Architecture&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Serverless &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Currently I use [[https://www.netlify.com/][netlify.com]] to serve my Golang binary as a [[https://docs.netlify.com/functions/build/?fn-language=go][netlify build function]].&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Hexagonal Architecture (also known as Ports &amp;amp; Adapters) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;I /try/ to encapsulate business logic in its own domain and have clear boundaries between my components (also see [[*Architecture][Architecture]])&lt;/li&gt; &#xA;     &lt;li&gt;I started working on &lt;del&gt;gocial&lt;/del&gt; long before I have released my presentation on [[https://slides.dornea.nu/2022/hexagonal-architecture/][Hexagonal Architecture]] (in Python).&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Backend&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Obvisouly, I use Golang as a core language üòé&lt;/li&gt; &#xA;   &lt;li&gt;I use the [[https://echo.labstack.com/][echo]] web framework for implementing most of the HTTP stuff (server, REST API, OAuth workflows)&lt;/li&gt; &#xA;   &lt;li&gt;for the OAuth part I&#39;ve mainly used [[https://github.com/markbates/goth][goth]] to do the authentication via the /identity providers/&lt;/li&gt; &#xA;   &lt;li&gt;I use /stateless authentication/ and no authentication data (like access tokens) is stored server-side &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;I use /JWT tokens/ for /authorization/ and /secure/, /httpOnly/ cookies as storage mechanism&lt;/li&gt; &#xA;     &lt;li&gt;I don&#39;t use /localStorage/ nor /sessionStorage/ since in the case of XSS, an attacker could easily access the tokens.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Frontend&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Initially I&#39;ve implemented the frontend in /Vue.js/ but I switched over to &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;[[https://pkg.go.dev/html/template][Golang HTML templates]] (server side rendering) and&lt;/li&gt; &#xA;     &lt;li&gt;[[https://tailwindcss.com/][TailwindCSS]] (for styling) and&lt;/li&gt; &#xA;     &lt;li&gt;[[https://alpinejs.dev/][Alpine.js]] (modern jQuery) &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;syntax very similar to /Vue.js/&lt;/li&gt; &#xA;       &lt;li&gt;also very powerful without the &lt;del&gt;npm&lt;/del&gt; headaches&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;I really like the /TailwindCSS/ and /Alpine.js/ combo as it&#39;s quite minimalistic and feature-rich at the same time&lt;/li&gt; &#xA;   &lt;li&gt;I do plan to migrate to /Vue.js/ in the future&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Architecture #+begin_src plantuml :file docs/images/architecture.png :results file replace :cmdline -charset UTF-8 :exports none :eval never-export&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;@startuml &#39;skinparam dpi 300 scale 1600 width skinparam nodesep 20&lt;/p&gt; &#xA;&lt;p&gt;&#39;top to bottom direction left to right direction&lt;/p&gt; &#xA;&lt;p&gt;skinparam SameClassWidth true&lt;/p&gt; &#xA;&lt;p&gt;package &#34;Business Domain(s) ‚ù∂&#34; as app_core { package Entities { entity &#34;entity.IdentityProvider&#34; as IdentityProvider { // Stores information about identity providers (e.g. Twitter) string Provider string UserName string UserID string UserDescription string UserAvatarURL string AccessToken string AccessTokenSecret string RefreshToken time.Time ExpiresAt } entity &#34;entity.ArticleShare&#34; as ArticleShare { string URL string Title string Comment string Providers // Holds information about an article to be shared&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    }&#xA;    entity &#34;entity.CommentShare&#34; as CommentShare {&#xA;        string Comment&#xA;        // Holds information about a comment to be shared&#xA;&#xA;    }&#xA;    entity &#34;entity.AuthProviderIndex&#34; as AuthProviderIndex {&#xA;        []string Providers&#xA;        map[string]string ProvidersMap&#xA;        // Holds list of available (identity) providers&#xA;    }&#xA;}&#xA;&#xA;package Identity {&#xA;    interface identityRepository as &#34;identity.Repository&#34; {&#xA;        Storage for available identities&#xA;        + Add (entity.IdentityProvider, echo.Context) error&#xA;        + GetByProvider(string, echo.Context) (entity.IdentityProvider, error)&#xA;        + Delete (string, echo.Context) error&#xA;        + Save() error&#xA;        + Load() error&#xA;    }&#xA;}&#xA;&#xA;package OAuth {&#xA;    interface oauthRepository as &#34;oauth.Repository&#34; {&#xA;        Authentication handler&#xA;        + HandleAuth (echo.Context) error&#xA;        + HandleAuthCallback (echo.Context) error&#xA;    }&#xA;    class oauthService as &#34;oauth.Service&#34; {&#xA;        + Repo: oauth.Repository&#xA;        + ProviderIndex: entity.AuthProviderIndex&#xA;    }&#xA;}&#xA;&#xA;package Share {&#xA;    interface shareRepository as &#34;share.Repository&#34; {&#xA;        Defines how an article should be shared&#xA;        + ShareArticle(context.Context, entity.ArticleShare) error&#xA;    }&#xA;&#xA;    class shareService as &#34;share.Service&#34; {&#xA;        + ShareArticle(entity.ArticleShare, share.Repository) error&#xA;        + ShareComment(entity.CommentShare, share.Repository) error&#xA;        + GetShareRepo(entity.IdentityProvider) (share.Repository, error)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;}&lt;/p&gt; &#xA;&lt;p&gt;package &#34;Services ‚ù∑&#34; as services { class HTTPServer { // Exposes API and functionalities via HTTP }&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class Lambda {&#xA;    // Exposes functionalities in a Serverless environment&#xA;}&#xA;&#xA;&#39; class CLICommand as &#34;CLI&#34; {&#xA;&#39; &#39;    // Interact with gocial via CLI&#xA;&#39; &#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;}&lt;/p&gt; &#xA;&lt;p&gt;package &#34;OAuth Repositories&#34; as oauthRepoImpl { class GothRepository { Handles OAuth workflow between gocial and identity providers\nusing 3rd-party library called goth. } }&lt;/p&gt; &#xA;&lt;p&gt;package &#34;Identity Repositories&#34; as identityRepoImpl { class CookieIdentityRepository { Reads, stores and handles authentication data via cookies.\nJWT tokens are used and stored as secure and httpOnly cookies. }&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class FileIdentityRepository {&#xA;    Reads, stores and handles authentication data via files&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;}&lt;/p&gt; &#xA;&lt;p&gt;package &#34;Share Repositories&#34; as shareRepoImpl { class LinkedinShareRepository { Shares articles via LinkedIn }&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class TwitterShareRepository  {&#xA;    Shares articles via Twitter&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;}&lt;/p&gt; &#xA;&lt;p&gt;&#39; ----------- Connections HTTPServer -up-&amp;gt; oauthService: uses HTTPServer -up-&amp;gt; shareService : uses HTTPServer -up-&amp;gt; identityRepository : uses Lambda ---left---&amp;gt; HTTPServer: uses&lt;/p&gt; &#xA;&lt;p&gt;&#39;CLICommand --&amp;gt; oauthService: uses&lt;/p&gt; &#xA;&lt;p&gt;GothRepository ..&amp;gt; oauthRepository: implements LinkedinShareRepository ..&amp;gt; shareRepository: implements TwitterShareRepository ..&amp;gt; shareRepository: implements&lt;/p&gt; &#xA;&lt;p&gt;CookieIdentityRepository ..&amp;gt; identityRepository: implements FileIdentityRepository ..&amp;gt; identityRepository: implements&lt;/p&gt; &#xA;&lt;p&gt;&#39; ----------- Alignment &#39; All entities below each other IdentityProvider -[hidden]left- ArticleShare ArticleShare -[hidden]left- AuthProviderIndex CommentShare -[hidden]left- AuthProviderIndex&lt;/p&gt; &#xA;&lt;p&gt;&#39; Services right of entities Entities -[hidden]up- services&lt;/p&gt; &#xA;&lt;p&gt;@enduml #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+caption: Overal software architecture [[file:docs/images/architecture.png]]&lt;/p&gt; &#xA;&lt;p&gt;** Business domain&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;everything related to the &lt;em&gt;business case&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;user wants to allow /gocial/ to make posts and his/her behalf&lt;/li&gt; &#xA;   &lt;li&gt;user can share articles/comments to multiple social media platforms&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;contains &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;/Entities/&lt;/li&gt; &#xA;   &lt;li&gt;Different /other/ domains related to the business case &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;each one might contain &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;/Services/&lt;/li&gt; &#xA;       &lt;li&gt;/Repositories/Interfaces/ ** Identity An /identity/ is something you get after successful authentication. After allowing /gocial/ to interact with Twitter/LinkedIn this /struct/ will be used to hold information about an /identity provider/:&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+caption: Structure for an identity provider #+begin_src go type IdentityProvider struct { Provider string &lt;code&gt;yaml:&#34;provider&#34;&lt;/code&gt; UserName string &lt;code&gt;yaml:&#34;name&#34;&lt;/code&gt; UserID string &lt;code&gt;yaml:&#34;id&#34;&lt;/code&gt; UserDescription string &lt;code&gt;yaml:&#34;description&#34;&lt;/code&gt; UserAvatarURL string &lt;code&gt;yaml:&#34;userAvatarURL&#34;&lt;/code&gt; AccessToken string &lt;code&gt;yaml:&#34;accessToken&#34;&lt;/code&gt; AccessTokenSecret string &lt;code&gt;yaml:&#34;accessTokenSecret&#34;&lt;/code&gt; RefreshToken string &lt;code&gt;yaml:&#34;refreshToken&#34;&lt;/code&gt; ExpiresAt *time.Time &lt;code&gt;yaml:&#34;expiry&#34;&lt;/code&gt; } #+end_src ** OAuth The /oauth/ package uses [[https://github.com/markbates/goth][goth]] to implement the OAuth workflow. /goth/ basically implements this interface:&lt;/p&gt; &#xA;&lt;p&gt;#+caption: The oauth.Repository interface #+begin_src go type Repository interface { HandleAuth(echo.Context) error HandleAuthCallback(echo.Context) error } #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;HandleAuth&lt;/del&gt; defines how authentication should be done for different identity providers&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;HandleAuthCallback&lt;/del&gt; is a /callback/ called by the identity providers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;this is where the access tokens (among additional data) are sent to ** Share A /share/ is the most basic entity used within /gocial/. A &lt;del&gt;Share&lt;/del&gt; is something that will be shared via different identity providers. At the moment you can share&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;an article &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;contains an URL, a comment, a title and a list of providers where the article should be shared to&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;a comment &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;not implemented yet&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_src go // ArticleShare is an article to be shared via the share service type ArticleShare struct { URL string &lt;code&gt;json:&#34;url&#34; form:&#34;url&#34; validate:&#34;required&#34;&lt;/code&gt; Title string &lt;code&gt;json:&#34;title&#34; form:&#34;title&#34; validate:&#34;required&#34;&lt;/code&gt; Comment string &lt;code&gt;json:&#34;comment&#34; form:&#34;comment&#34; validate:&#34;required&#34;&lt;/code&gt; Providers string &lt;code&gt;json:&#34;providers&#34; form:&#34;providers&#34; validate:&#34;required&#34;&lt;/code&gt; }&lt;/p&gt; &#xA;&lt;p&gt;// CommentShare is a comment to be shared via the share service type CommentShare struct { // TODO: Any other fields needed? Comment string } #+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project layout&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+begin_src sh :results output :exports results :eval never-export tree -L 1 -d . #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+caption: Overall project layout #+RESULTS: #+begin_example gocial:&lt;/p&gt; &#xA;&lt;p&gt;‚îú‚îÄ‚îÄ cli ‚îú‚îÄ‚îÄ docs ‚îú‚îÄ‚îÄ internal ‚îú‚îÄ‚îÄ lambda ‚îî‚îÄ‚îÄ server #+end_example&lt;/p&gt; &#xA;&lt;p&gt;** &lt;del&gt;/internal&lt;/del&gt; This is where the /gocial/ specific domain code goes to. This includes /entities/, different /services/ and the /authentication/ part.&lt;/p&gt; &#xA;&lt;p&gt;#+begin_src sh :results output :exports results :eval never-export tree -L 2 ./internal #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+RESULTS: #+begin_example ./internal ‚îú‚îÄ‚îÄ config ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ config.go ‚îú‚îÄ‚îÄ entity ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ identity.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ providers.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ share.go ‚îú‚îÄ‚îÄ identity ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ cookie_repository.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ file_repository.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ repository.go ‚îú‚îÄ‚îÄ jwt ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ token.go ‚îú‚îÄ‚îÄ oauth ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ goth_repository.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ repository.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ service.go ‚îî‚îÄ‚îÄ share ‚îú‚îÄ‚îÄ linkedin_repository.go ‚îú‚îÄ‚îÄ repository.go ‚îú‚îÄ‚îÄ service.go ‚îî‚îÄ‚îÄ twitter_repository.go #+end_example ** &lt;del&gt;/server&lt;/del&gt; #+begin_src sh :results output :exports results :eval never-export tree -L 3 ./server #+end_src&lt;/p&gt; &#xA;&lt;p&gt;#+RESULTS: #+begin_example ./server ‚îú‚îÄ‚îÄ api.go ‚îú‚îÄ‚îÄ html ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ html.go ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ package.json ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ package-lock.json ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ postcss.config.js ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ static ‚îÇ&amp;nbsp;&amp;nbsp; ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ main.css ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ tailwind.config.js ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ tailwind.css ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ tailwind.js ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ templates ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ about.html ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ auth ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ base.html ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ index.html ‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ partials ‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ share ‚îú‚îÄ‚îÄ http.go ‚îú‚îÄ‚îÄ oauth.go ‚îî‚îÄ‚îÄ share.go #+end_example&lt;/p&gt; &#xA;&lt;p&gt;This folder contains HTTP server specific functionalities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;/html&lt;/del&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;here I put all the HTML templates and components (partials)&lt;/li&gt; &#xA;   &lt;li&gt;I use [[https://tailwindcss.com/][tailwindCSS]] so there is a little bit of &lt;del&gt;npm&lt;/del&gt; foo&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;http.go&lt;/del&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;responsible for launching the HTTP server and setting up API routes&lt;/li&gt; &#xA;   &lt;li&gt;renders HTML templates&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;api.go&lt;/del&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;handles different API routes (e.g. sharing articles/comments)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;oauth.go&lt;/del&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;defines API endpoints for doing OAuth ** &lt;del&gt;/cli&lt;/del&gt; Provides all &lt;del&gt;gocial&lt;/del&gt; functionalities via a CLI tool. ** &lt;del&gt;/lambda&lt;/del&gt; Runs the HTTP server as a Lambda function (hosted at [[https://www.netlify.com/][netlify.com]]).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run it You can of course run it locally. However you&#39;ll need to create Twitter and LinkedIn accordingly. Then you&#39;ll need to set following /environment variables/ (in &lt;del&gt;.env&lt;/del&gt; in the same folder): #+begin_src sh export LINKEDIN_CLIENT_ID=xxx export LINKEDIN_CLIENT_SECRET=xxx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;export TWITTER_CLIENT_KEY=xxx export TWITTER_CLIENT_SECRET=xxx export TWITTER_ACCESS_TOKEN=xxx export TWITTER_ACCESS_SECRET=xxx #+end_src&lt;/p&gt; &#xA;&lt;p&gt;Then you run &lt;del&gt;make&lt;/del&gt; #+begin_src sh $ make build $ ./gocial --help NAME: gocial - A new cli application&lt;/p&gt; &#xA;&lt;p&gt;USAGE: gocial [global options] command [command options] [arguments...]&lt;/p&gt; &#xA;&lt;p&gt;VERSION: v0.1&lt;/p&gt; &#xA;&lt;p&gt;AUTHOR: Victor Dorneanu&lt;/p&gt; &#xA;&lt;p&gt;COMMANDS: authenticate, a Authenticate against identity providers post, p Post some article help, h Shows a list of commands or help for one command&lt;/p&gt; &#xA;&lt;p&gt;GLOBAL OPTIONS: --help, -h show help (default: false) --version, -v print the version (default: false)&lt;/p&gt; &#xA;&lt;p&gt;$ ./gocial a&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;/ &lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;/ / ___ / &lt;em&gt;// &lt;strong&gt;/ _ / _ &lt;br&gt; /&lt;/strong&gt;&lt;/em&gt;/_&lt;/em&gt;/&lt;em&gt;//&lt;/em&gt;/___/ v4.7.2 High performance, minimalist Go web framework &lt;a href=&#34;https://echo.labstack.com&#34;&gt;https://echo.labstack.com&lt;/a&gt; _____________________________&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;O/&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/em&gt; O&lt;br&gt; ‚á® http server started on 127.0.0.1:3000&lt;/p&gt; &#xA;&lt;p&gt;#+end_src&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More screenshots &lt;del&gt;gocial&lt;/del&gt; connects to twitter:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[file:docs/images/gocial-connects-to-twitter.png]]&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;gocial&lt;/del&gt; after successful logins:&lt;/p&gt; &#xA;&lt;p&gt;[[file:docs/images/gocial-after-successful-logins.png]]&lt;/p&gt; &#xA;&lt;p&gt;Sharing an article:&lt;/p&gt; &#xA;&lt;p&gt;[[file:docs/images/gocial-share-article.png]]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;COMMENT Local Variables :noexport:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Local Variables:&lt;/h1&gt; &#xA;&lt;h1&gt;after-save-hook: org-html-export-to-html&lt;/h1&gt; &#xA;&lt;h1&gt;End:&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>fatih-yavuz/links.dev</title>
    <updated>2022-12-19T01:33:28Z</updated>
    <id>tag:github.com,2022-12-19:/fatih-yavuz/links.dev</id>
    <link href="https://github.com/fatih-yavuz/links.dev" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simplify your online presence&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simplify Your Online Presence&lt;/h1&gt; &#xA;&lt;p&gt;Are you tired of having to constantly update your CV, social media profiles, and other online platforms with your latest links and information? With links.dev, you can simplify your online presence and make it easier for potential employers, clients, and followers to find and access all your important links in one place.&lt;/p&gt; &#xA;&lt;h2&gt;Benefits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add all your links to one simple page&lt;/li&gt; &#xA; &lt;li&gt;Get a professional, easy-to-remember URL&lt;/li&gt; &#xA; &lt;li&gt;No more updating individual platforms - just add your Link in Bio URL to your CV, social media bios, and anywhere else you want to share your links&lt;/li&gt; &#xA; &lt;li&gt;You have the full control over your links - you can change them at any time from your GitHub repository&lt;/li&gt; &#xA; &lt;li&gt;You have the full control over how your page looks - you can customize the page&#39;s design and from your GitHub repository&lt;/li&gt; &#xA; &lt;li&gt;It is completely free!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to sign up&lt;/h2&gt; &#xA;&lt;p&gt;To register for links.dev, you need to do two things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a pull request to add yourself (&lt;a href=&#34;https://github.com/fatih-yavuz/links.dev/pull/2&#34;&gt;Example PR&lt;/a&gt;) &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;To the registry.yaml file.&lt;/li&gt; &#xA;   &lt;li&gt;To the README.md file.&lt;/li&gt; &#xA;   &lt;li&gt;To the early-adopters.js file (This will add you to the homepage of the site).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a new public repository called &#34;my-links&#34;. (You can also fork &lt;a href=&#34;https://github.com/fatih-yavuz/my-links&#34;&gt;this&lt;/a&gt;) This repository should contain two files: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;page.json, which contains the content of your page. An example can be found &lt;a href=&#34;https://github.com/fatih-yavuz/my-links/raw/main/page.json&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;[Optional] custom.css, which allows you to customize the look of your page. An example file can be found &lt;a href=&#34;https://github.com/fatih-yavuz/my-links/raw/main/custom.css&#34;&gt;here&lt;/a&gt;. If you don&#39;t add this file, your theme will be the default.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Once you have created your &#34;my-links&#34; repository and opened your pull request, wait for it to be reviewed and approved. Once it is merged to the master branch, your page will be visible at: &lt;a href=&#34;https://links.dev/username&#34;&gt;https://links.dev/username&lt;/a&gt; (If you are an early adopter, please update README.md&#39;s Early Adopters section to include your name in your PR)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Profile Picture Tips&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use and image url which has 1:1 aspect ratio for your profile picture. This will make sure that your profile picture is displayed correctly.&lt;/li&gt; &#xA; &lt;li&gt;You can use your Twitter or LinkedIn profile picture image url as your profile picture.&lt;/li&gt; &#xA; &lt;li&gt;Do not use a url which contains the image in a web page. This will not work. You need to use the direct image url (which most probably will have .jpg or .png extension). You can get this url by right clicking on the image and selecting &#34;Copy image address&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Available Icons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can use any of the icons listed &lt;a href=&#34;https://github.com/fatih-yavuz/links.dev/tree/main/user-page/icons&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you are a designer, feel free to create a pull request to add more icons to the list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nice to haves&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a link to your page in your social media bios&lt;/li&gt; &#xA; &lt;li&gt;Add your page to your CV&lt;/li&gt; &#xA; &lt;li&gt;Add your page to your email signature&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Restrictions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your username must be unique. If your username is already taken, you will be asked to choose a different one.&lt;/li&gt; &#xA; &lt;li&gt;Your page cannot contain any offensive content.&lt;/li&gt; &#xA; &lt;li&gt;Your page cannot contain any links to illegal content.&lt;/li&gt; &#xA; &lt;li&gt;You cannot register reserved usernames. Here is a list of reserved usernames: [admin, api, blog, contact, dashboard, docs, faq, help, home, index, login, logout, mail, mailto, privacy, register, signup, support, terms, test, cdn, api-auth, themes]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for using my service! I hope you have a great time creating your own page and sharing it with others. Let me know if you have any questions or need any assistance along the way.&lt;/p&gt; &#xA;&lt;p&gt;Once you have your page set up, you can share the link with your friends and colleagues so they can see what you&#39;ve created.&lt;/p&gt; &#xA;&lt;h2&gt;Support My Work&lt;/h2&gt; &#xA;&lt;p&gt;If you like this project and want to support my work, you can do so by starring this repo or buying me a coffee. Thank you for your support!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fthdev&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy me a coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Early Adopters&lt;/h2&gt; &#xA;&lt;p&gt;First 1000 users will get early adopters badge on their profile. Here is a list of early adopters who have already signed up and created their own pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/fatih&#34;&gt;Fatih Yavuz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/sila&#34;&gt;Sila Eryilmaz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/a&#34;&gt;Ali Goktas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/birkan&#34;&gt;Birkan Atici&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/ali&#34;&gt;Ali Yilmaz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/kodman&#34;&gt;Ufuk Kodaman&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/iltekin&#34;&gt;Sezer ƒ∞ltekin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/riza&#34;&gt;Rƒ±za Sabuncu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/ahmet&#34;&gt;Ahmet Buƒüra √áakƒ±cƒ±&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/o&#34;&gt;Oƒüuz Albayrak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/erhan&#34;&gt;Erhan B√ºte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/onur&#34;&gt;Onur ≈ûuyal√ßƒ±nkaya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/zeynep&#34;&gt;Zeynep Nur Aktas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/codingwithdidem&#34;&gt;Didem K√º√ß√ºkkaraaslan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/t&#34;&gt;Tolga Gezgini≈ü&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/furkan&#34;&gt;Furkan Kapukaya&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/melih&#34;&gt;Melih Sivri&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/j&#34;&gt;Joshua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://links.dev/alperen&#34;&gt;Alperen √áetin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hachyderm/community</title>
    <updated>2022-12-19T01:33:28Z</updated>
    <id>tag:github.com,2022-12-19:/hachyderm/community</id>
    <link href="https://github.com/hachyderm/community" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hachyderm Community Resources&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Hachyderm Community&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the Hachyderm community. We have agreed to the &lt;a href=&#34;https://joinmastodon.org/covenant&#34;&gt;Mastodon Server Covenant&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to check our status page: &lt;a href=&#34;https://status.hachyderm.io&#34;&gt;status.hachyderm.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here you will find information and resources on how we manage things at Hachyderm.&lt;/p&gt; &#xA;&lt;h2&gt;Status: Is Hachyderm down or is it just me?&lt;/h2&gt; &#xA;&lt;p&gt;Check the status page: &lt;a href=&#34;https://status.hachyderm.io&#34;&gt;status.hachyderm.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additionally check: &lt;a href=&#34;https://grafana.hachyderm.io/public-dashboards/445bbb0e169f4e86b1d1eeee7e50c92a&#34;&gt;our public Grafana dashboard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mission&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Here we are trying to build a curated network of respectful professionals in the tech industry around the globe. Welcome anyone who follows the rules and needs a safe home or fresh start.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We are hackers, professionals, enthusiasts, and are passionate about life, respect, and digital freedom. We believe in peace and balance.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Safe space. Tech Industry. Economics. OSINT. News. Rust. Linux. Aurae. Kubernetes. Go. C. Infrastructure. Security. LGTBQIA+. Pets. Hobbies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;New to Hachyderm and Mastodon?&lt;/h2&gt; &#xA;&lt;p&gt;If you have recently joined Hachyderm and/or Mastodon, please see the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/welcome/README.md&#34;&gt;Welcome Guide&lt;/a&gt; for Mastodon 101 and getting started.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YnWdbchSwA&#34;&gt;Unofficial Nivenly Discord&lt;/a&gt; is used for real-time communications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Donations can be made directly to Kris N√≥va on &lt;a href=&#34;https://ko-fi.com/krisnovalive&#34;&gt;ko-fi.com/krisnovalive&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Understanding Account Types&lt;/h2&gt; &#xA;&lt;p&gt;We identify a few types of accounts that are useful for understanding the minutia for things such as corporate accounts, bot accounts, event accounts, and open source project accounts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/README.md&#34;&gt;General Account Detail&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/general-accounts.md&#34;&gt;General Accounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/open-source-accounts.md&#34;&gt;Open Source Accounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/influencer-accounts.md&#34;&gt;Influencer Accounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/corporate-accounts.md&#34;&gt;Corporate Accounts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/accounts/bot-accounts.md&#34;&gt;Bot Accounts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Disallowed Account Types&lt;/h3&gt; &#xA;&lt;p&gt;The primary purpose of Hachyderm is to provide a place where IT (and adjacent) professionals to network. To be clear: this is not a &#34;LinkedIn&#34; type of instance. With that in mind we have a few account types that we explicitly do not allow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fundraising Accounts&lt;/li&gt; &#xA; &lt;li&gt;Ad / Marketing Accounts &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This includes promos, discount codes, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;18+ / NSFW Accounts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To be clear: our users may engage with the above types of content if they wish, we just aren&#39;t geared for supporting the above account types. An account will be considered one of the above if all / mostly all of their posts and re-posts are in the above categories.&lt;/p&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://hachyderm.io/about/more#rules&#34;&gt;official rules&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is your first and final warning to take our rules seriously.&lt;/p&gt; &#xA;&lt;h3&gt;&#34;Don&#39;t Be A Dick&#34; Policy&lt;/h3&gt; &#xA;&lt;p&gt;Hachyderm and its surrounding community have found safety and value in a primary guiding principle, that is often hard to interpret.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Don&#39;t be a dick.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We believe that everyone knows when they are &#34;being a dick&#34;, and we do not tolerate this level of aggression towards our community.&lt;/p&gt; &#xA;&lt;p&gt;In short, we believe that you know if you are being a dick, and therefore you should be able to stop. If you do not stop, you will no longer be welcome on Hachyderm.&lt;/p&gt; &#xA;&lt;p&gt;Being a dick is measured by &#34;self control&#34; and &#34;intent&#34;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Are you able to restrain yourself? What are your intentions?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If your intentions are to hurt, brandish, intimidate, slander, diminish, insult, or offend someone you are likely being a dick. If you are commenting on anyone&#39;s &#34;tone&#34;, whether or not they are &#34;having a civilized&#34; discussion, or offering apologetics in response to one or more of the various forms of extremism, you are &lt;em&gt;also&lt;/em&gt; likely being a dick. We believe you should be able to restrain yourself in these situations. If you do not restrain yourself, we believe that you are likely being a dick.&lt;/p&gt; &#xA;&lt;p&gt;Being a dick is the opposite of respect. We believe all &#34;bad takes&#34; on a topic can be voiced with respect. We hold each member of the community accountable for managing themselves and finding a respectful way of communicating their contrarian views.&lt;/p&gt; &#xA;&lt;p&gt;We expect all members to be respectful and thus, not be a dick.&lt;/p&gt; &#xA;&lt;h3&gt;What about &#34;shitposting&#34;?&lt;/h3&gt; &#xA;&lt;p&gt;Oxford dictionary defines shitposting as:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;the activity of posting deliberately provocative or off-topic comments on social media, typically in order to upset others or distract from the main conversation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In short shitposting is allowed on Hachyderm.&lt;/p&gt; &#xA;&lt;p&gt;However, shitposting can easily violate our &#34;don&#39;t be a dick policy&#34; if it turns into offensive trolling at the expense of others.&lt;/p&gt; &#xA;&lt;p&gt;The key factor in distinguishing between shitposting and being a dick is &#34;at the expense of others&#34;.&lt;/p&gt; &#xA;&lt;p&gt;We believe that any time clout, attention, credibility, fortune, or fame is gained &#34;at the expense of others&#34; it is likely close to a violation of our &#34;no colonialism&#34; rule or a violation of our &#34;don&#39;t be a dick&#34; policy.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t want to be the &#34;shitpost&#34; police. We encourage you to shitpost, just not at the expense of others.&lt;/p&gt; &#xA;&lt;h3&gt;Changing or Modifying a Rule.&lt;/h3&gt; &#xA;&lt;p&gt;In general we try not to change our rules. If we do, we need to give the community time to understand the impact of the change and move away from our server if they chose.&lt;/p&gt; &#xA;&lt;h4&gt;Creating a New Rule&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Draft the new rule. Write the &#34;headline&#34; and then write a few sentences to elaborate on the rule.&lt;/li&gt; &#xA; &lt;li&gt;Publish the draft (GitHub, HackMD, etc).&lt;/li&gt; &#xA; &lt;li&gt;Advertise the draft (This is similar to publishing an obituary or a name change in a newspaper). a. Our admins, mods, and leadership should all be encouraged to share the new change.&lt;/li&gt; &#xA; &lt;li&gt;Gain feedback, make adjustments, work with the community, hear concerns, give space for alternative opinions. Pause. Reflect.&lt;/li&gt; &#xA; &lt;li&gt;Make the decision to institute the new rule, and publish a &#34;goes in effect&#34; date.&lt;/li&gt; &#xA; &lt;li&gt;Institute the new rule.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Removing a Rule.&lt;/h4&gt; &#xA;&lt;p&gt;Only Kris N√≥va can remove a rule at this time.&lt;/p&gt; &#xA;&lt;h3&gt;Dealing with Trolls, being targeted, and doxxing.&lt;/h3&gt; &#xA;&lt;p&gt;We understand there are nasty people on the internet, and we will do everything we can to protect our community from them.&lt;/p&gt; &#xA;&lt;p&gt;We ask that all community members respect our mission to remain peaceful, and deescalate in times of conflict.&lt;/p&gt; &#xA;&lt;p&gt;If ever there clearly is a targeted attack, doxxing attempt, troll, or otherwise aggressive situation on Hachyderm our advice is to report it and deescalate the situation. Do not engage. Do not respond.&lt;/p&gt; &#xA;&lt;p&gt;Our experience dealing with bad-actors, trolls, and aggressive accounts is that engagement is what they are looking for. Our primary weapon against them is a silent block (our mods are very responsive!) and moving on as if nothing happened.&lt;/p&gt; &#xA;&lt;p&gt;In the event this is not possible, we ask that you host your own infrastructure to forge such a counter maneuver against a group. Keep it off Hachyderm.&lt;/p&gt; &#xA;&lt;p&gt;We will remove any account who gains a reputation for &#34;stirring the pot&#34; or &#34;engaging with conflict&#34; on our site, despite how virtuous or noble the effort may be. Hachyderm is not the place for this.&lt;/p&gt; &#xA;&lt;h2&gt;Moderation&lt;/h2&gt; &#xA;&lt;p&gt;Our moderators are not the fediverse police. Your presence on Hachyderm should not become a burden to our moderators. We expect all community members to make our moderators jobs easier.&lt;/p&gt; &#xA;&lt;p&gt;We expect everyone to understand that our moderators are volunteers who work tirelessly around the clock to keep deliberate bad-actors away from our community.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t expect our moderators to also have to chase around our community members who are violating rules or need to be reminded of our policy.&lt;/p&gt; &#xA;&lt;p&gt;As a community member if you get on our moderators radar you are likely doing something very offensive.&lt;/p&gt; &#xA;&lt;p&gt;We believe in patience and understanding. There is a good chance that expectations have not been set or a policy has not been made clear.&lt;/p&gt; &#xA;&lt;p&gt;We will work with you to find a happy path, however if it becomes a pattern we will ask you to leave Hachyderm.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hachyderm/community/main/mods/README.md&#34;&gt;Moderator Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting, Support, and Issues&lt;/h2&gt; &#xA;&lt;p&gt;The most critical thing you can do to help us help you (even more so than a donation) is to &lt;strong&gt;reduce noise&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The best way for you to help reduce noise is to leverage our issue tracker instead of independent one-off requests for help. It is a full time job sifting through requests and making sense of them. If you want to help, leverage the issue tracker and &lt;a href=&#34;https://github.com/hachyderm/community/issues/new&#34;&gt;create a new issue&lt;/a&gt; or better yet find one that already exists.&lt;/p&gt; &#xA;&lt;h3&gt;Do Not&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please do not DM on Mastodon.&lt;/li&gt; &#xA; &lt;li&gt;Please do not reach out on Twitter.&lt;/li&gt; &#xA; &lt;li&gt;Please do not join the Discord just to report an issue, bug, or feature request.&lt;/li&gt; &#xA; &lt;li&gt;Please do not send us emails (we get too many emails).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Do&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File an issue in this repository&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>