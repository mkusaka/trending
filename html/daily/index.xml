<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-08T01:38:16Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>reorx/cht-colors</title>
    <updated>2022-09-08T01:38:16Z</updated>
    <id>tag:github.com,2022-09-08:/reorx/cht-colors</id>
    <link href="https://github.com/reorx/cht-colors" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chinese Traditional Colors&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chinese Traditional Colors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cht-colors.pages.dev/&#34;&gt;Chinese traditional colors&lt;/a&gt; is a collection of colors from Chinese traditional culture.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also a sub page about &lt;a href=&#34;https://cht-colors.pages.dev/painting/&#34;&gt;China painting colors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The website was originaly created by &lt;a href=&#34;http://twitter.com/aj_oo&#34;&gt;aj_oo&lt;/a&gt; 12 years ago. This is the thread he announced the project: &lt;a href=&#34;https://v2ex.com/t/481&#34;&gt;https://v2ex.com/t/481&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;At the time I was a student in school, I was keen on saving anything I like on the web, that&#39;s how the website was kept.&lt;/p&gt; &#xA;&lt;p&gt;As time goes by, it went down and got abandoned, just like many other good things on the Internet.&lt;/p&gt; &#xA;&lt;p&gt;I always hate &lt;a href=&#34;https://en.wikipedia.org/wiki/Link_rot&#34;&gt;link rot&lt;/a&gt;, and since I now have the skill of making website, it&#39;s time to refine this website and make it accessible again.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; responsive &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; main&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; painting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; remove shade&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; click to &lt;del&gt;copy&lt;/del&gt; select color code&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nousr/koi</title>
    <updated>2022-09-08T01:38:16Z</updated>
    <id>tag:github.com,2022-09-08:/nousr/koi</id>
    <link href="https://github.com/nousr/koi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A plug-in for Krita that enables the use of AI models for img2img generation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;koi üé£&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/nousr/koi/blob/main/koi_colab_backend.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/hDBbsXDd6K&#34;&gt;&lt;img alt=&#34;Join us on Discord&#34; src=&#34;https://img.shields.io/discord/1015817150608453732?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nousr/koi&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/github?icon=github&amp;amp;label&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;koi is an open source plug-in for &lt;a href=&#34;https://krita.org/&#34;&gt;Krita&lt;/a&gt; that allows you to use AI to accelerate your art workflow!&lt;/p&gt; &#xA;&lt;h4&gt;Disclaimer ‚úã&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In the interest of getting the open source community on board--I have released this plug-in early. In its current state you may run into issues (particularly during the setup process). If you do, I encourage you to open an issue here on GitHub and describe your problems so that it can be fixed it for you and others!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview üòÑ&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The goal of this repository is to serve as a starting point for building increasingly useful tools for artists of all levels of experience to use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/nousr_/status/1564797121412210688&#34;&gt;Link to original twitter thread&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plug-in serves as a working example of how new A.I. models like Stable Diffusion can lower the barrier of entry to art so that anyone can enjoy making their dreams a reality!&lt;/p&gt; &#xA;&lt;p&gt;Because this is an open source project I encourage you to try it out, break things, and come back with suggestions!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started üèÅ&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to git, or get stuck during the installation process, &lt;a href=&#34;https://github.com/Lewington-pitsos&#34;&gt;Lewington&lt;/a&gt; made a nice &lt;a href=&#34;https://www.youtube.com/watch?v=rIhQakm4Efk&#34;&gt;step-by-step video&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to get started is to follow the plug-in installation process for krita. Then use the google colab backend server &lt;em&gt;(button at the top of this readme)&lt;/em&gt;! This should give you a good introduction to the setup process and get you up and running fast!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation üî®&lt;/h2&gt; &#xA;&lt;h3&gt;Krita has a few plug-in installation methods, however, I will refer you to the one I use.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Find your operating system&#39;s &lt;code&gt;pykrita&lt;/code&gt; folder &lt;a href=&#34;https://docs.krita.org/en/reference_manual/resource_management.html#resource-management&#34;&gt;reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Clone the repository, and copy the &lt;code&gt;koi&lt;/code&gt; folder and &lt;code&gt;koi.desktop&lt;/code&gt; to &lt;code&gt;pykrita&lt;/code&gt;. (restart krita now if it is open)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Open Krita and navigate to the python plug-in menu &lt;a href=&#34;https://scripting.krita.org/lessons/plugins-introduction&#34;&gt;reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Enable the &lt;code&gt;koi&lt;/code&gt; plugin and restart Krita to load the plug-in.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The next thing you will need to do is setup the backend server that do all the computation!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 0&lt;/strong&gt;: Ensure you have a GPU-accelerated installation of &lt;code&gt;pytorch&lt;/code&gt;. &lt;em&gt;(You can skip this step if you are using Colab or already have it)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the installation instructions on pytorch&#39;s official &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;getting started&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Get the latest version of HuggingFace&#39;s &lt;code&gt;diffusers&lt;/code&gt; from source by going to the &lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;GitHub repo&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;From here you can clone the repo &lt;code&gt;git clone https://github.com/huggingface/diffusers.git&lt;/code&gt; &amp;amp; &lt;code&gt;cd diffusers&lt;/code&gt; to move into the directory.&lt;/li&gt; &#xA;   &lt;li&gt;Install the package with &lt;code&gt;pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: Install this package! I recommend moving out of the diffusers folder if you haven&#39;t already (eg. &lt;code&gt;cd ..&lt;/code&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/nousr/koi.git&lt;/code&gt;, then &lt;code&gt;cd koi&lt;/code&gt; and &lt;code&gt;pip install -e .&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note &lt;span&gt;üôã&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;Before continuing, make sure you accept the terms of service for the &lt;code&gt;diffusers&lt;/code&gt; model &lt;a href=&#34;https://huggingface.co/CompVis/stable-diffusion-v1-4&#34;&gt;link to do so here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Next, inside your terminal run the &lt;code&gt;huggingface-cli login&lt;/code&gt; command and paste a token generated from &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;here&lt;/a&gt;. If you don&#39;t want to repeat this step in the future you can then run &lt;code&gt;git config --global credential.helper store&lt;/code&gt;. &lt;em&gt;(note: only do this on a computer you trust)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 3&lt;/strong&gt;: Run the server by typing &lt;code&gt;python server.py&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you did everything correctly you should see an address spit out after some time (eg. 127.0.0.1:8888)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Step 4&lt;/strong&gt;: Open Krita, if you haven&#39;t already, and paste your address into the &lt;code&gt;endpoint&lt;/code&gt; field of the plugin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You will also need to append the actual API endpoint you are using. By default this is &lt;code&gt;/api/img2img&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If you are using all of the default settings your endpoint field will look something like this &lt;code&gt;http://127.0.0.1:8888/api/img2img&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Inference üñåÔ∏è&lt;/h2&gt; &#xA;&lt;p&gt;This part is easy!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Create a new canvas that is &lt;strong&gt;512 x 512&lt;/strong&gt; (px) in size and make a &lt;strong&gt;single-layer&lt;/strong&gt; sketch &lt;em&gt;(note: these are temporary restrictions)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Step 2: Fill out the prompt field in the &lt;code&gt;koi&lt;/code&gt; panel (default location is somewhere on the right of your screen).&lt;/li&gt; &#xA; &lt;li&gt;Step 3: Make any additional changes you would like to the inference parameters (strength, steps, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Step 4: Copy and paste your server&#39;s endpoint to the associated field&lt;/li&gt; &#xA; &lt;li&gt;Step 5: Click &lt;code&gt;dream&lt;/code&gt;!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ ‚ùî&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;What does &lt;code&gt;koi&lt;/code&gt; stand for?&lt;/strong&gt;&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Krita Open(source) Img2Img: While support for StableDiffusion is first, the goal is to have this plug-in be compatible with any model!&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;Why the client/server setup?&lt;/strong&gt;&lt;/em&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;The goal is to make this as widely available as possible. The server can be run anywhere with a GPU (i.e. colab) and allow those with low-powered hardware to still use the plug-in!&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;I&#39;m getting an error with &#34;set-size&#34;&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This usually happens when you either forget &#34;/api/img2img&#34; at the end of your endpoint when copying it into the plugin OR you have some issue with your backend server (check the output on your server for more information).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;TODO&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add colab backend example&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Flesh out UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Move to CompVis repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add CI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Abstract away drop-in models for the server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Improve documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add DreamStudio API support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for arbitrary canvas size &amp;amp; selection-based img2img&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for masks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Offer more configuration options&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>thinkst/canarytokens</title>
    <updated>2022-09-08T01:38:16Z</updated>
    <id>tag:github.com,2022-09-08:/thinkst/canarytokens</id>
    <link href="https://github.com/thinkst/canarytokens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Canarytokens helps track activity and actions on your network.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;http://canarytokens.org/resources/logo.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;h1&gt;Canarytokens&lt;/h1&gt; &#xA;&lt;p&gt;by Thinkst Applied Research&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Canarytokens helps track activity and actions on your network.&lt;/p&gt; &#xA;&lt;p&gt;If you have any issues please check out our FAQ over &lt;a href=&#34;https://github.com/thinkst/canarytokens/wiki#&#34;&gt;here&lt;/a&gt;, or create an issue and we&#39;ll try to get back to you as soon as possible.&lt;/p&gt; &#xA;&lt;h2&gt;Deprecations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Slack API Token is deprecated and it&#39;s no longer possible to create new ones. Old tokens will still work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;We recommend &lt;a href=&#34;https://github.com/thinkst/canarytokens-docker&#34;&gt;the Docker image installation process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The Canarytokens server can use many different settings configurations. You can find them in &lt;code&gt;settings.py&lt;/code&gt;. There are two main settings files: &lt;code&gt;frontend.env&lt;/code&gt; and &lt;code&gt;switchboard.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;frontend.env&lt;/code&gt; contains the frontend process settings such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CANARY_DOMAINS=mytesttokensdomain.com&lt;/li&gt; &#xA; &lt;li&gt;CANARY_NXDOMAINS=pdf.demo.canarytokens.net&lt;/li&gt; &#xA; &lt;li&gt;CANARY_AWSID_URL=&#xA;  &lt;custom awsid url&gt;&lt;/custom&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_WEB_IMAGE_UPLOAD_PATH=/uploads&lt;/li&gt; &#xA; &lt;li&gt;CANARY_GOOGLE_API_KEY=&#xA;  &lt;custom google maps api key&gt;&lt;/custom&gt;&lt;/li&gt; &#xA; &lt;li&gt;LOG_FILE=frontend.log&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;switchboard.env&lt;/code&gt; contains the switchboard process settings such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CANARY_MAILGUN_DOMAIN_NAME=&#xA;  &lt;mailgun domain&gt;&lt;/mailgun&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_MAILGUN_API_KEY=&lt;/li&gt; &#xA; &lt;li&gt;CANARY_MANDRILL_API_KEY=&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SENDGRID_API_KEY=&lt;/li&gt; &#xA; &lt;li&gt;CANARY_PUBLIC_IP=&#xA;  &lt;instead of using a domain&gt;&lt;/instead&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_PUBLIC_DOMAIN=&#xA;  &lt;instead of using an ip&gt;&lt;/instead&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_ALERT_EMAIL_FROM_ADDRESS=&lt;a href=&#34;mailto:noreply@yourdomain.com&#34;&gt;noreply@yourdomain.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_ALERT_EMAIL_FROM_DISPLAY=&#34;Canarytoken Mailer&#34;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_ALERT_EMAIL_SUBJECT=&#34;Alert&#34;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_MAX_ALERTS_PER_MINUTE=1000&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_USERNAME=&#xA;  &lt;smtp username&gt;&lt;/smtp&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_PASSWORD=&#xA;  &lt;smtp password&gt;&lt;/smtp&gt;&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_SERVER=smtp.gmail.com&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_PORT=587&lt;/li&gt; &#xA; &lt;li&gt;CANARY_WEB_IMAGE_UPLOAD_PATH=/uploads&lt;/li&gt; &#xA; &lt;li&gt;LOG_FILE=switchboard.log&lt;/li&gt; &#xA; &lt;li&gt;ERROR_LOG_WEBHOOK=&#xA;  &lt;uri of a webhook you want error logs posted to&gt;&lt;/uri&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that when choosing which email provider you would like to use, you &lt;strong&gt;MUST&lt;/strong&gt; only provide information related to that provider. E.g. if you have &lt;code&gt;CANARY_MAILGUN_API_KEY&lt;/code&gt; then you must remove the others such as &lt;code&gt;CANARY_SENDGRID_API_KEY&lt;/code&gt; and &lt;code&gt;CANARY_MANDRILL_API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Mailgun&#39;s European infrastructure for your Canarytokens Server, you will need to add &lt;code&gt;CANARY_MAILGUN_BASE_URL=https://api.eu.mailgun.net&lt;/code&gt; to your &lt;code&gt;switchboard.env&lt;/code&gt;. If you do not specify that, we will use the regular url as &#39;&lt;a href=&#34;https://api.mailgun.net&#34;&gt;https://api.mailgun.net&lt;/a&gt;&#39; as the default.&lt;/p&gt; &#xA;&lt;p&gt;Lastly, we have added the ability to specify your own AWSID lambda so that you may host your own. The setting is placed in &lt;code&gt;frontend.env&lt;/code&gt; under &lt;code&gt;CANARY_AWSID_URL&lt;/code&gt;. If this value is not specified, it will use our default hosted lambda.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration of Outgoing SMTP&lt;/h3&gt; &#xA;&lt;p&gt;When configuring outgoing SMTP please consider the following:&lt;/p&gt; &#xA;&lt;p&gt;Restrictions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;no other provider like Mailgun or Sendgrid must be configured for this to work&lt;/li&gt; &#xA; &lt;li&gt;only supports StartTLS right now (you have to use the corresponding port)&lt;/li&gt; &#xA; &lt;li&gt;no anonymous SMTP is supported right now (you have to use a username/password to authenticate)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following settings have to be configured in &lt;code&gt;switchboard.env&lt;/code&gt; for SMTP to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CANARY_SMTP_SERVER: the SMTP server&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_PORT: the port number of the SMTP server (must be a StartTLS enabled port!)&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_USERNAME: Username for the SMTP server (no anonymous SMTP supported right now)&lt;/li&gt; &#xA; &lt;li&gt;CANARY_SMTP_PASSWORD: the password that corresponds to the username&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A complete example config in &lt;code&gt;switchboard.env&lt;/code&gt; then looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CANARY_SMTP_SERVER=smtp.yourserver.com&#xA;CANARY_SMTP_PORT=587&#xA;CANARY_SMTP_USERNAME=&amp;lt;your smtp username&amp;gt;&#xA;CANARY_SMTP_PASSWORD=&amp;lt;your smtp password&amp;gt;&#xA;CANARY_ALERT_EMAIL_FROM_ADDRESS=canary@yourdomain.com&#xA;CANARY_ALERT_EMAIL_SUBJECT=&#34;Canary Alert via SMTP&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alert throttling&lt;/h3&gt; &#xA;&lt;p&gt;By default, unless running in DEBUG mode, no more than 1 alert per unique calling IP per minute is permitted. Activity will still be recorded in the database, and visible in the token management console, but alerts will not be generated (email and/or webhook).&lt;/p&gt; &#xA;&lt;p&gt;This is tunable with the switchboard ENV variable &lt;code&gt;CANARY_MAX_ALERTS_PER_MINUTE&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>