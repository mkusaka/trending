<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:30:26Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>onecloudemoji/CVE-2022-30190</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/onecloudemoji/CVE-2022-30190</id>
    <link href="https://github.com/onecloudemoji/CVE-2022-30190" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2022-30190 Follina POC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2022-30190&lt;/h1&gt; &#xA;&lt;p&gt;CVE-2022-30190 Follina POC&lt;/p&gt; &#xA;&lt;p&gt;Host exploit.html on localhost, port 80. Open the docx to pop calc.&lt;/p&gt; &#xA;&lt;p&gt;To change the remote address the doc points to, open in 7Z and edit word\rels\document.xml.rels to point to a new location. YOU MUST keep the exclamation mark. It will literally not run if you omit this from the end of the URL.&lt;/p&gt; &#xA;&lt;p&gt;The exploit must contain at least 3541 characters before the window.location.href, and they must be within the script tag. There is about 6000 or so included in the exploit.html&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/onecloudemoji/CVE-2022-30190/main/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leemunroe/responsive-html-email-template</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/leemunroe/responsive-html-email-template</id>
    <link href="https://github.com/leemunroe/responsive-html-email-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free simple responsive HTML email template&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Free Responsive HTML Email Template&lt;/h1&gt; &#xA;&lt;p&gt;Sometimes all you want is a really simple responsive HTML email template with a clear call-to-action button. Here it is.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://leemunroe.github.io/responsive-html-email-template/email.html&#34;&gt;See live preview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/15963/29055956-8dcca38e-7bb4-11e7-8a86-7b056ebf673d.png&#34; alt=&#34;Simple HTML Email&#34; width=&#34;500&#34;&gt; &#xA;&lt;h2&gt;Inline your CSS before sending&lt;/h2&gt; &#xA;&lt;p&gt;Email is notorious for inconsistent CSS support. Therefore you should always inline your CSS and send a test to yourself before sending.&lt;/p&gt; &#xA;&lt;h3&gt;Sending emails directly from your codebase or using a developer service?&lt;/h3&gt; &#xA;&lt;p&gt;For an API service (like Mailgun, SendGrid, Postmark) &lt;strong&gt;you need to inline the CSS before sending&lt;/strong&gt;. See &lt;code&gt;email-inlined.html&lt;/code&gt; for an example.&lt;/p&gt; &#xA;&lt;p&gt;You can use this &lt;a href=&#34;https://htmlemail.io/inline/&#34;&gt;Email CSS Inliner&lt;/a&gt; and then &lt;a href=&#34;https://postdrop.io&#34;&gt;send a test email to yourself&lt;/a&gt; to verify it works as expected.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy all of email.html&lt;/li&gt; &#xA; &lt;li&gt;Paste the HTML as the source into the inliner&lt;/li&gt; &#xA; &lt;li&gt;Copy the HTML output and use this as the email template you send&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sending emails using a marketing service like Mailchimp?&lt;/h3&gt; &#xA;&lt;p&gt;Use the template &lt;code&gt;email.html&lt;/code&gt; as is. They&#39;ll put the CSS inline for you when you put together your campaign.&lt;/p&gt; &#xA;&lt;h2&gt;Images in email&lt;/h2&gt; &#xA;&lt;p&gt;When inserting images remember to include the following attributes or risk them breaking in different clients:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;src&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;width&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;height&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;border&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;img src=&#34;https://absolute-path-to-image.jpg&#34; alt=&#34;Useful alt text&#34; width=&#34;500&#34; height=&#34;300&#34; border=&#34;0&#34; style=&#34;border:0; outline:none; text-decoration:none; display:block;&#34;&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2017/01/introduction-building-sending-html-email-for-web-developers/&#34;&gt;More information here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tried and tested on all major email clients&lt;/h2&gt; &#xA;&lt;p&gt;Tested on mobile, desktop and web.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/15963/17391543/bc289abe-59cb-11e6-9946-605a85f8c522.jpg&#34; alt=&#34;Templates Tested on Email Clients&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://litmus.com/checklist/emails/public/233ded7&#34;&gt;See the Litmus test results&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;More HTML email resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://htmlemail.io&#34;&gt;10 HTML Email Templates for Developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2017/01/introduction-building-sending-html-email-for-web-developers/&#34;&gt;An Introduction To Building And Sending HTML Email&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leemunroe/grunt-email-design&#34;&gt;Grunt Email Design Workflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webdesign.tutsplus.com/articles/everything-developers-need-to-know-about-sending-transactional-email--cms-31759&#34;&gt;Everything Web Developers Need To Know About Transactional Email&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://postdrop.io&#34;&gt;Manage and Send Email Templates To Yourself&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This free template is part of a pack of responsive email templates for developers and startups available on &lt;a href=&#34;https://htmlemail.io&#34;&gt;HTML Email&lt;/a&gt;. &lt;a href=&#34;https://htmlemail.io&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15963/111846354-df393280-88c3-11eb-959c-10a3916d5733.png&#34; alt=&#34;image&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gsanchezd/fdsw-github</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/gsanchezd/fdsw-github</id>
    <link href="https://github.com/gsanchezd/fdsw-github" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fdsw-github&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>PKUanonym/REKCARC-TSC-UHT</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/PKUanonym/REKCARC-TSC-UHT</id>
    <link href="https://github.com/PKUanonym/REKCARC-TSC-UHT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;清华大学计算机系课程攻略 Guidance for courses in Department of Computer Science and Technology, Tsinghua University&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;清华大学计算机系课程攻略&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PKUanonym/REKCARC-TSC-UHT/watchers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/PKUanonym/REKCARC-TSC-UHT.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PKUanonym/REKCARC-TSC-UHT/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PKUanonym/REKCARC-TSC-UHT.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PKUanonym/REKCARC-TSC-UHT/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/PKUanonym/REKCARC-TSC-UHT.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PKUanonym/REKCARC-TSC-UHT/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed-raw/PKUanonym/REKCARC-TSC-UHT.svg?style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/PKUanonym/REKCARC-TSC-UHT.svg?style=flat&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://rekcarc-tsc-uht.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/rekcarc-tsc-uht/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Web page: &lt;a href=&#34;https://REKCARC-TSC-UHT.readthedocs.io&#34;&gt;REKCARC-TSC-UHT.readthedocs.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;受&lt;a href=&#34;https://github.com/QSCTech/zju-icicles&#34;&gt;浙江大学相关项目&lt;/a&gt;启发，创立了本项目。&lt;/p&gt; &#xA;&lt;p&gt;由于本仓库未启用&lt;code&gt;git-lfs&lt;/code&gt;，因此请不要上传单个超过100M的文件，否则commit无效。&lt;/p&gt; &#xA;&lt;p&gt;若要下载单个文件夹，复制该文件夹的网址，粘贴入&lt;a href=&#34;https://minhaskamal.github.io/DownGit/#/home&#34;&gt;DownGit&lt;/a&gt;中，选择download即可。&lt;/p&gt; &#xA;&lt;p&gt;如果您是清华大学学生，可移步 &lt;a href=&#34;https://git.tsinghua.edu.cn/pkuanonym/REKCARC-TSC-UHT&#34;&gt;https://git.tsinghua.edu.cn/pkuanonym/REKCARC-TSC-UHT&lt;/a&gt; 进行查看并且能节约不少流量。&lt;/p&gt; &#xA;&lt;p&gt;感谢对本项目贡献的同学：&lt;a href=&#34;https://github.com/trinkle23897&#34;&gt;Trinkle23897&lt;/a&gt;、&lt;a href=&#34;https://github.com/ljsthu&#34;&gt;LJSthu&lt;/a&gt;、&lt;a href=&#34;https://github.com/shyoshyo&#34;&gt;shyoshyo&lt;/a&gt;、&lt;a href=&#34;https://github.com/wuhaozhe&#34;&gt;wuhaozhe&lt;/a&gt;、&lt;a href=&#34;https://github.com/choumartin1234&#34;&gt;choumartin1234&lt;/a&gt;、&lt;a href=&#34;https://github.com/FztTony/&#34;&gt;FztTony&lt;/a&gt;、&lt;a href=&#34;https://github.com/VicaYang/&#34;&gt;VicaYang&lt;/a&gt;、&lt;a href=&#34;https://github.com/duzx16/&#34;&gt;duzx16&lt;/a&gt;、&lt;a href=&#34;https://github.com/zerotrac&#34;&gt;zerotrac&lt;/a&gt;、&lt;a href=&#34;https://github.com/gjz010/&#34;&gt;gjz010&lt;/a&gt;、&lt;a href=&#34;https://github.com/RecursionSheep&#34;&gt;Recursion&lt;/a&gt;、&lt;a href=&#34;https://github.com/linusboyle&#34;&gt;linusboyle&lt;/a&gt;、&lt;a href=&#34;https://github.com/namasikanam&#34;&gt;namasikanam&lt;/a&gt;、&lt;a href=&#34;https://github.com/JamesZhengYuyu&#34;&gt;JamesZhengYuyu&lt;/a&gt;、&lt;a href=&#34;https://github.com/zx1239856&#34;&gt;zx1239856&lt;/a&gt;、&lt;a href=&#34;https://github.com/yaoqs&#34;&gt;yaoqs&lt;/a&gt;、&lt;a href=&#34;https://github.com/heheda12345&#34;&gt;heheda12345&lt;/a&gt;、&lt;a href=&#34;https://github.com/MashPlant&#34;&gt;MashPlant&lt;/a&gt;、&lt;a href=&#34;https://github.com/lwpie&#34;&gt;lwpie&lt;/a&gt;、&lt;a href=&#34;https://github.com/cht33&#34;&gt;cht33&lt;/a&gt;、&lt;a href=&#34;https://github.com/chenweize1998&#34;&gt;chenweize1998&lt;/a&gt;、&lt;a href=&#34;https://github.com/will7101&#34;&gt;will7101&lt;/a&gt;、&lt;a href=&#34;https://github.com/UNIDY2002&#34;&gt;UNIDY2002&lt;/a&gt;、&lt;a href=&#34;https://github.com/yinhaoxuan&#34;&gt;yinhaoxuan&lt;/a&gt;、&lt;a href=&#34;https://github.com/zhengkw18&#34;&gt;zhengkw18&lt;/a&gt;、&lt;a href=&#34;https://github.com/rcy17&#34;&gt;rcy17&lt;/a&gt;、&lt;a href=&#34;https://github.com/prnake&#34;&gt;prnake&lt;/a&gt;、&lt;a href=&#34;https://github.com/qky18&#34;&gt;qky18&lt;/a&gt;、&lt;a href=&#34;https://github.com/JamesZFS&#34;&gt;JamesZFS&lt;/a&gt;、&lt;a href=&#34;https://github.com/EnjoyColin&#34;&gt;EnjoyColin&lt;/a&gt;、&lt;a href=&#34;https://github.com/3ToThe6&#34;&gt;3ToThe6&lt;/a&gt;、&lt;a href=&#34;https://github.com/c7w&#34;&gt;c7w&lt;/a&gt;, ……以及电脑前的您！&lt;/p&gt; &#xA;&lt;h2&gt;前言&lt;/h2&gt; &#xA;&lt;p&gt;继承自&lt;a href=&#34;https://github.com/Trinkle23897/thu-cst-cracker&#34;&gt;Trinkle23897的项目&lt;/a&gt;，删去了其中侵权内容。若还有任何侵权内容请在issues下指出，非常感谢。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;p&gt;本项目收录的内容见 &lt;a href=&#34;https://raw.githubusercontent.com/PKUanonym/REKCARC-TSC-UHT/master/%E6%94%B6%E5%BD%95%E5%86%85%E5%AE%B9.md&#34;&gt;收录内容&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目大部分课程的参考书目见 &lt;a href=&#34;https://raw.githubusercontent.com/PKUanonym/REKCARC-TSC-UHT/master/%E5%8F%82%E8%80%83%E4%B9%A6%E7%9B%AE.md&#34;&gt;参考书目&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;贡献&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;欢迎贡献！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Issue、PR、纠错、资料、选课/考试攻略，完全欢迎！来自大家的关注、维护和贡献，才是让这个攻略继续存在的动力~&lt;/p&gt; &#xA;&lt;p&gt;如果希望匿名贡献，可以email至此邮箱，注明&#34;REKCARC-TSC-UHT&#34;即可：&lt;a href=&#34;mailto:PKUanonymous@qq.com&#34;&gt;PKUanonymous@qq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;贡献方法见 &lt;a href=&#34;https://raw.githubusercontent.com/PKUanonym/REKCARC-TSC-UHT/master/%E8%B4%A1%E7%8C%AE%E6%96%B9%E6%B3%95.md&#34;&gt;贡献方法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;许可&lt;/h2&gt; &#xA;&lt;p&gt;由贡献者编写部分的许可如下：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34;&gt;(Creative Commons BY-SA 4.0) 知识共享署名 - 相同方式共享 4.0 国际许可协议&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;其他部分的版权归属于其各自的作者。资料仅供参考，请自己判断其适用性。&lt;/p&gt; &#xA;&lt;h2&gt;附录&lt;/h2&gt; &#xA;&lt;h3&gt;清华大学学生纪律处分管理规定实施细则&lt;/h3&gt; &#xA;&lt;h4&gt;第六章　学术不端、违反学习纪律的行为与处分&lt;/h4&gt; &#xA;&lt;p&gt;第二十一条 有下列违反课程学习纪律情形之一的，给予警告以上、留校察看以下处分：&lt;/p&gt; &#xA;&lt;p&gt;（一）课程作业抄袭严重的；&lt;/p&gt; &#xA;&lt;p&gt;（二）实验报告抄袭严重或者篡改实验数据的；&lt;/p&gt; &#xA;&lt;p&gt;（三）期中、期末课程论文抄袭严重的；&lt;/p&gt; &#xA;&lt;p&gt;（四）在课程学习过程中严重弄虚作假的其他情形。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>klezVirus/CVE-2021-40444</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/klezVirus/CVE-2021-40444</id>
    <link href="https://github.com/klezVirus/CVE-2021-40444" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2021-40444 - Fully Weaponized Microsoft Office Word RCE Exploit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fully Weaponized CVE-2021-40444&lt;/h1&gt; &#xA;&lt;p&gt;Malicious docx generator to exploit CVE-2021-40444 (Microsoft Office Word Remote Code Execution), works with arbitrary DLL files.&lt;/p&gt; &#xA;&lt;h3&gt;Update 31/05/2022 - CVE-2022-30190 - Follina&lt;/h3&gt; &#xA;&lt;p&gt;Now the generator is able to generate the document required to exploit also the &#34;Follina&#34; attack (leveraging ms-msdt).&lt;/p&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;Although many PoC are already around the internet, I guessed to give myself a run to weaponizing this vulnerability, as what I found available lacked valuable information that it&#39;s worth sharing, also considering Microsoft already released a patch for this vulnerability.&lt;/p&gt; &#xA;&lt;p&gt;So far, the only valuable resources I&#39;ve seen to create a fully working generator are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xret2pwn.github.io//CVE-2021-40444-Analysis-and-Exploit/&#34;&gt;Blog by Ret2Pwn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/j00sean/status/1437390861499838466&#34;&gt;Twit by j00sean&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/wdormann/status/1531250993127739392&#34;&gt;Twit by wdormann&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The above resources outline a lot of the requirements needed to create a full chain. To avoid repeating too much unnecessary information, I&#39;ll just summarize the relevant details.&lt;/p&gt; &#xA;&lt;h3&gt;Exploit Chain&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Docx opened&lt;/li&gt; &#xA; &lt;li&gt;Relationship stored in document.xml.rels points to malicious html&lt;/li&gt; &#xA; &lt;li&gt;IE preview is launched to open the HTML link&lt;/li&gt; &#xA; &lt;li&gt;JScript within the HTML contains an object pointing to a CAB file, and an iframe pointing to an INF file, prefixed with the &#34;.cpl:&#34; directive&lt;/li&gt; &#xA; &lt;li&gt;The cab file is opened, the INF file stored in the %TEMP%\Low directory&lt;/li&gt; &#xA; &lt;li&gt;Due to a Path traversal (ZipSlip) vulnerability in the CAB, it&#39;s possible to store the INF in %TEMP%&lt;/li&gt; &#xA; &lt;li&gt;Then, the INF file is opened with the &#34;.cpl:&#34; directive, causing the side-loading of the INF file via rundll32 (if this is a DLL)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Overlooked Requirements&lt;/h3&gt; &#xA;&lt;p&gt;There are quite a bit of overlooked requirements for this exploit to work, which caused even good PoCs, like &lt;a href=&#34;https://github.com/lockedbyte/CVE-2021-40444&#34;&gt;the one by lockedbyte&lt;/a&gt;, to fail working properly.&lt;/p&gt; &#xA;&lt;p&gt;Maybe nobody explicitly &#34;released&#34; them to avoid the vulnerability to be exploited more. But now it&#39;s patched, so it should not cause a lot of troubles to release the details.&lt;/p&gt; &#xA;&lt;h4&gt;HTML File&lt;/h4&gt; &#xA;&lt;p&gt;As for this &lt;a href=&#34;https://twitter.com/wdormann/status/1440036541112328199&#34;&gt;tweet&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/wdormann&#34;&gt;Will Dormann&lt;/a&gt;, the HTML should be at least 4096 bytes in size in order to trigger the &#34;Preview&#34; within MS Word.&lt;/p&gt; &#xA;&lt;h4&gt;CAB File&lt;/h4&gt; &#xA;&lt;p&gt;The CAB file needs to be byte-patched to avoid extraction errors and to achieve the ZipSlip:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;filename.inf&lt;/code&gt; should become &lt;code&gt;../filename.inf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;filename.inf&lt;/code&gt; &lt;del&gt;should be exactly &amp;lt;12-char&amp;gt;.inf&lt;/del&gt; Not really true, the important bit is to modify &lt;code&gt;coffCabStart&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFFOLDER.typeCompress&lt;/code&gt; &lt;del&gt;should be 0 (not compressed)&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFFOLDER.coffCabStart&lt;/code&gt; should be increased by 3 (due to the added &#39;../&#39;&#39;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFFOLDER.cCfData&lt;/code&gt; &lt;del&gt;should be 2&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFFILE.cbFile&lt;/code&gt; should be greater than the whole &lt;code&gt;CFHEADER.cbCabinet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CFDATA.csum&lt;/code&gt; &lt;del&gt;should be recalculated (or zeroed out)&lt;/del&gt; [OPTIONAL]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The reason for these constraints are many, and I didn&#39;t spend enough time to deeply understand all of them, but let&#39;s see the most important:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;TypeCompress&lt;/strong&gt;: &lt;del&gt;If the CAB is compressed, the trick to open it within an object file to trigger the INF write will fail&lt;/del&gt; False, I managed to achieve the same result with a MSZIP compressed sample&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CoffCabStart&lt;/strong&gt;: CoffCabStart gives the absolute position of the first CFDATA structure, as we added a &#39;../&#39;, we would need to increase this by 3 to point to the file (this is more like a guess)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cCfData&lt;/strong&gt;: &lt;del&gt;As there is only 1 file, we should have just 1 CFDATA, I&#39;m not too sure why this has to be set to 2&lt;/del&gt; Indeed, we can leave it as 1&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cbFile&lt;/strong&gt;: Interestingly, if the CAB extraction concludes without any error, the INF file will be marked for deletion by WORD, ruining the exploit. The only way to prevent this is to make WORD believe the extraction failed. If the cbFile value is defined as greater than the cabinet file itself, the extractor will reach an EOF before reading all the bytes defined in cbFile, raising an extraction error.&lt;/li&gt; &#xA; &lt;li&gt;[OPTIONAL] This value seems to not be checked by MS Word. Anyway, to have a correct CAB, the &lt;strong&gt;csum&lt;/strong&gt; value should be recalculated. Luckily, as noted by &lt;a href=&#34;https://twitter.com/j00sean&#34;&gt;j00sean&lt;/a&gt; and according to &lt;a href=&#34;http://download.microsoft.com/download/4/d/a/4da14f27-b4ef-4170-a6e6-5b1ef85b1baa/%5Bms-cab%5D.pdf&#34;&gt;MS documentation&lt;/a&gt;, this value can be 0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE1&lt;/strong&gt;: Defender now detects if the CAB file contains a PE by using the &lt;code&gt;_IMAGE_DOS_HEADER.e_magic&lt;/code&gt; value as a signature, potentially avoiding PE files to be embedded in the CAB. Can this signature be bypassed? I&#39;m not sure but, as observed before, this is a patched vulnerability, so I&#39;m not planning to invest much more time on this. Up to the curious reader to develop this further.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE2&lt;/strong&gt;: Microsoft Patch blocks arbitrary URI schemes, apparently using a blacklist approach (this is just a supposition)&lt;/p&gt; &#xA;&lt;h1&gt;DLL Attack&lt;/h1&gt; &#xA;&lt;p&gt;The main attack chain associated with CVE-2021-40444 is the DLL attack loaded via the &lt;code&gt;.cpl&lt;/code&gt; URI scheme. In order to exploit that, an attacker needs to generate a specially crafted DLL. If you want to test it out, try my &lt;a href=&#34;https://gist.github.com/klezVirus/e24c94d7061f5736e2452eee022f4011&#34;&gt;evildll-gen&lt;/a&gt; script.&lt;/p&gt; &#xA;&lt;h1&gt;JScript, VBScript, Javaw, MSIexec, ...&lt;/h1&gt; &#xA;&lt;p&gt;As noted by &lt;a href=&#34;https://twitter.com/Max_Mal_&#34;&gt;Max Maluin&lt;/a&gt;, it is possible to interact with several filetypes abusing IE and the associated file extension based URI. While this is might be a good way to exploit IE, it has limitations.&lt;/p&gt; &#xA;&lt;p&gt;Indeed, it should be noted that the method used in the exploit to download files is based on ActiveX control updates, and cannot be used to download arbitrary files. As per Microsoft &lt;a href=&#34;https://docs.microsoft.com/it-it/cpp/mfc/upgrading-an-existing-activex-control?view=msvc-160&#34;&gt;documentation&lt;/a&gt;, the &lt;code&gt;codebase&lt;/code&gt; tag can point just to a few filetypes: OCX, INF and CAB.&lt;/p&gt; &#xA;&lt;p&gt;Even if we can directly download an OCX or INF file, we still can&#39;t be sure to download the file in the right location within the system. With the cab exploit, it is possible to move the &lt;code&gt;.inf&lt;/code&gt; file in a well-known path using the path traversal, but in any other case the file will be stored in a random directory, making it virtually impossible to reference it.&lt;/p&gt; &#xA;&lt;p&gt;As of today, I didn&#39;t find a way to chain download and execution WITHOUT a CAB file.&lt;/p&gt; &#xA;&lt;p&gt;Note: Talking about IE alone, HTML smuggling could be a possible scenario to exploit the vulnerability.&lt;/p&gt; &#xA;&lt;h1&gt;Cab-less file attack using hybrid RAR file&lt;/h1&gt; &#xA;&lt;p&gt;This technique was firstly disclosed by &lt;a href=&#34;https://twitter.com/Edu_Braun_0day&#34;&gt;Eduardo Braun&lt;/a&gt; on Twitter and further explained in &lt;a href=&#34;https://github.com/Edubr2020/CVE-2021-40444--CABless/raw/main/MS_Windows_CVE-2021-40444%20-%20&#39;Ext2Prot&#39;%20Vulnerability%20&#39;CABless&#39;%20version.pdf&#34;&gt;this&lt;/a&gt; paper.&lt;/p&gt; &#xA;&lt;p&gt;Please note that using this technique, the attack chain is a bit different. This attack requires the user to download a specially crafted RAR file, obtained by chaining a valid WSF script and a valid RAR file. Once opened, the RAR will contain a DOCX with a reference to an HTML, which in turn will try to load the RAR file as a WSF script.&lt;/p&gt; &#xA;&lt;p&gt;To summarise:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Specially crafted RAR file is downloaded (likely Download folder)&lt;/li&gt; &#xA; &lt;li&gt;DOCX extracted and opened&lt;/li&gt; &#xA; &lt;li&gt;Relationship stored in document.xml.rels points to malicious html&lt;/li&gt; &#xA; &lt;li&gt;IE preview is launched to open the HTML link&lt;/li&gt; &#xA; &lt;li&gt;JScript within the HTML contains a script/iframe pointing to the RAR file, prefixed with the &#34;.wsf:&#34; URI scheme&lt;/li&gt; &#xA; &lt;li&gt;As the RAR was designed to be contemporaneously a valid RAR and a valid WSF script, the script is executed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;What are the exploits PoC implemented by the tool&lt;/h1&gt; &#xA;&lt;p&gt;The generator utility can currently reproduce the following attacks:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Attack&lt;/th&gt; &#xA;   &lt;th&gt;HTML Templates&lt;/th&gt; &#xA;   &lt;th&gt;Target&lt;/th&gt; &#xA;   &lt;th&gt;Delivery Method&lt;/th&gt; &#xA;   &lt;th&gt;Execution Method&lt;/th&gt; &#xA;   &lt;th&gt;Working&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Original version of the attack&lt;/td&gt; &#xA;   &lt;td&gt;cab-orig-*&lt;/td&gt; &#xA;   &lt;td&gt;WORD&lt;/td&gt; &#xA;   &lt;td&gt;DOCX&lt;/td&gt; &#xA;   &lt;td&gt;CAB + DLL&lt;/td&gt; &#xA;   &lt;td&gt;YES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;j00sean IE-only attack&lt;/td&gt; &#xA;   &lt;td&gt;cab-orig-j00san&lt;/td&gt; &#xA;   &lt;td&gt;IE&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;CAB + DLL&lt;/td&gt; &#xA;   &lt;td&gt;YES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;My version without DLL&lt;/td&gt; &#xA;   &lt;td&gt;cab-uri-*&lt;/td&gt; &#xA;   &lt;td&gt;WORD&lt;/td&gt; &#xA;   &lt;td&gt;DOCX&lt;/td&gt; &#xA;   &lt;td&gt;CAB + JS/VBS&lt;/td&gt; &#xA;   &lt;td&gt;NO&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Eduardo B. &#34;CABless&#34; attack using RAR&lt;/td&gt; &#xA;   &lt;td&gt;cabless-rar-*&lt;/td&gt; &#xA;   &lt;td&gt;WORD&lt;/td&gt; &#xA;   &lt;td&gt;RAR&lt;/td&gt; &#xA;   &lt;td&gt;WSF&lt;/td&gt; &#xA;   &lt;td&gt;YES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Modified j00sean attack + HTML smuggling&lt;/td&gt; &#xA;   &lt;td&gt;cabless-smuggling-*&lt;/td&gt; &#xA;   &lt;td&gt;IE&lt;/td&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;JS/VBS&lt;/td&gt; &#xA;   &lt;td&gt;YES&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Follina attack&lt;/td&gt; &#xA;   &lt;td&gt;cabless-msdt-*&lt;/td&gt; &#xA;   &lt;td&gt;WORD&lt;/td&gt; &#xA;   &lt;td&gt;DOCX/RTF&lt;/td&gt; &#xA;   &lt;td&gt;MSDT + PS&lt;/td&gt; &#xA;   &lt;td&gt;YES&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;sup&gt;1&lt;/sup&gt;The CAB is not downloaded properly in some environments&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;sup&gt;2&lt;/sup&gt;The user needs to click on &#34;Save&#34; to download the file on IE&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;sup&gt;3&lt;/sup&gt;Not really working on all Windows/MS Word versions&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CAB file parser&lt;/h1&gt; &#xA;&lt;p&gt;The utility &lt;code&gt;cab_parser.py&lt;/code&gt; can be used to see the headers of the exploit file, but don&#39;t consider this a full parser. It&#39;s a very quick and dirty CAB header viewer I developed to understand what was going on.&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;The generator is designed to work on Windows, as it uses the &lt;code&gt;makecab&lt;/code&gt; utility. Before usage, be sure to install required dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With Virtualenv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/klezVirus/CVE-2021-40444&#xA;cd CVE-2021-40444&#xA;pip install virtualenv&#xA;python -m virtualenv venv&#xA;venv\Scripts\activate.bat &#xA;pip install -r requirements&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Without Virtualenv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/klezVirus/CVE-2021-40444&#xA;cd CVE-2021-40444&#xA;pip install -r requirements&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The generator is trivial to use, and even if it has been tested with a number of different payloads and Windows versions, it is not fail-proof. I&#39;m encountering different behaviours across different Windows builds. As soon as I have more details to share, I&#39;ll post them here.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;usage: generator.py [-h] -P PAYLOAD -u URL [-o OUTPUT] [--host] [-c COPY_TO] [-nc] [-t]&#xA;&#xA;[%] CVE-2021-40444 - MS Office Word RCE Exploit [%]&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  -P PAYLOAD, --payload PAYLOAD&#xA;                        DLL payload to use for the exploit&#xA;  -u URL, --url URL     Server URL for malicious references (CAB-&amp;gt;INF)&#xA;  -o OUTPUT, --output OUTPUT&#xA;                        Output files basename (no extension)&#xA;  --host                If set, will host the payload after creation&#xA;  -c COPY_TO, --copy-to COPY_TO&#xA;                        Copy payload to an alternate path&#xA;  -nc, --no-cab         Use the CAB-less version of the exploit&#xA;  -t, --test            Open IExplorer to test the final HTML file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate the original exploit and test it locally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python generator.py -u http://127.0.0.1 -P test\calc.dll --host &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: the port is selected by the URL, and the exploit is generated basing on the payload file extension&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate the CABless exploit with RAR and test it locally via IE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python generator.py -u http://127.0.0.1 -P test\job-jscript.wsf --no-cab --host -t &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate the CABless exploit (IE-only) with HTML smuggling and test it locally via IE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python generator.py -u http://127.0.0.1 -P test\calc.js --no-cab --host -t &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate the CABless exploit leveraging MS-MSDT (Follina attack), in both DOCX and RTF docs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;python generator.py -u http://127.0.0.1 -P test\calc.ps1 --no-cab --host --convert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/RET2_pwn&#34;&gt;RET2_pwn&lt;/a&gt; for the amazing blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/j00sean&#34;&gt;j00sean&lt;/a&gt; for the good hints&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lockedbyte/CVE-2021-40444&#34;&gt;lockedbyte&lt;/a&gt; for the first decent poc&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Max_Mal&#34;&gt;Max_Mal&lt;/a&gt; for the hint on the alternate URI schemes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/wdormann&#34;&gt;wdormann&lt;/a&gt; for the hint on the HTML file size restrictions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Edu_Braun_0day&#34;&gt;Edu_Braun_0day&lt;/a&gt; for the cool CAB-less version of the exploit&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/GossiTheDog&#34;&gt;Kevin Beaumont&lt;/a&gt; for the research on CVE-2022-30190 (Follina)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>GoogleChrome/developer.chrome.com</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/GoogleChrome/developer.chrome.com</id>
    <link href="https://github.com/GoogleChrome/developer.chrome.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chrome Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;developer.chrome.com&lt;/h1&gt; &#xA;&lt;p&gt;developer.chrome.com is the ultimate resource for developers of all backgrounds to learn about what&#39;s new in Chrome!&lt;/p&gt; &#xA;&lt;h2&gt;Found a bug? 👷‍♀️&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for letting us know! &lt;a href=&#34;https://github.com/GoogleChrome/developer.chrome.com/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=&#34;&gt;File an issue&lt;/a&gt; and a team member should reply shortly.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re submitting a pull request to fix a bug, read the &lt;a href=&#34;https://github.com/GoogleChrome/developer.chrome.com/raw/main/CONTRIBUTING.md&#34;&gt;Contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authoring content ✍️&lt;/h2&gt; &#xA;&lt;p&gt;Before you start writing take a moment to look over the &lt;a href=&#34;https://developer.chrome.com/docs/handbook&#34;&gt;developer.chrome.com handbook&lt;/a&gt; and familiarize yourself with the process.&lt;/p&gt; &#xA;&lt;h2&gt;Building the site 🏗&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll need a recent version of &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node&lt;/a&gt;: v14 (LTS) or higher. To check your node version run &lt;code&gt;node -v&lt;/code&gt; in your terminal.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have node, or if you need to upgrade, we recommend using the &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;Node Version Manager (nvm)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Clone the repo&lt;/h3&gt; &#xA;&lt;p&gt;⚠️ If you&#39;d like to contribute (and you&#39;re not a member of the core team), be sure to fork the repo first, and clone the fork.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/GoogleChrome/developer.chrome.com.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm ci&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set up build flags&lt;/h3&gt; &#xA;&lt;p&gt;Building the entire site can take a while because it&#39;s over a thousand pages. If you want to &lt;em&gt;massively&lt;/em&gt; speed up your build times, we suggest setting some build flags to ignore certain sections.&lt;/p&gt; &#xA;&lt;p&gt;WARNING: By default, in dev we ignore all translated docs (all docs outside of /en/ directory). To include them back, use &lt;code&gt;ELEVENTY_INCLUDE_TRANSLATED=true&lt;/code&gt; env variable.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file at the root of your project&lt;/li&gt; &#xA; &lt;li&gt;Optionally add the following:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# Ignore ALL /docs/&#xA;ELEVENTY_IGNORE_DOCS=true&#xA;&#xA;# Only ignore /docs/android/&#xA;ELEVENTY_IGNORE_ANDROID=true&#xA;&#xA;# Only ignore /docs/apps/&#xA;ELEVENTY_IGNORE_APPS=true&#xA;&#xA;# Only ignore /docs/devtools/&#xA;ELEVENTY_IGNORE_DEVTOOLS=true&#xA;&#xA;# Only ignore /docs/extensions/&#xA;ELEVENTY_IGNORE_EXTENSIONS=true&#xA;&#xA;# Only ignore /docs/handbook/&#xA;ELEVENTY_IGNORE_HANDBOOK=true&#xA;&#xA;# Only ignore /docs/lighthouse/&#xA;ELEVENTY_IGNORE_LIGHTHOUSE=true&#xA;&#xA;# Only ignore /docs/multidevice/&#xA;ELEVENTY_IGNORE_MULTIDEVICE=true&#xA;&#xA;# Only ignore /docs/native-client/&#xA;ELEVENTY_IGNORE_NACL=true&#xA;&#xA;# Only ignore /docs/privacy-sandbox/&#xA;ELEVENTY_IGNORE_PRIVACY_SANDBOX=true&#xA;&#xA;# Only ignore /docs/versionhistory/&#xA;ELEVENTY_IGNORE_VERSIONHISTORY=true&#xA;&#xA;# Only ignore /docs/webstore/&#xA;ELEVENTY_IGNORE_WEBSTORE=true&#xA;&#xA;# Only ignore /docs/workbox/&#xA;ELEVENTY_IGNORE_WORKBOX=true&#xA;&#xA;# Ignore BLOG /blog/&#xA;ELEVENTY_IGNORE_BLOG=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start a local server to preview the site&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;code&gt;http://localhost:8080/&lt;/code&gt; to see the site locally. Changes to assets will rebuild the site. Refresh to see your changes.&lt;/p&gt; &#xA;&lt;h3&gt;Run linters to address bugs&lt;/h3&gt; &#xA;&lt;p&gt;Before you push your branch, find and address any errors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Environments 🌳&lt;/h2&gt; &#xA;&lt;p&gt;To do a production build of the site and start the local server run &lt;code&gt;npm run production &amp;amp;&amp;amp; npm start&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Staging 🕺&lt;/h2&gt; &#xA;&lt;p&gt;When you send in a pull request it will be automatically staged for you. Keep an eye out for the netlify bot to comment on the pull request with your unique URL.&lt;/p&gt; &#xA;&lt;p&gt;(Googlers only) If you would like to stage your &lt;em&gt;local&lt;/em&gt; changes to a unique URL, run the command &lt;code&gt;npm run stage:personal&lt;/code&gt;. This can be useful if you&#39;re not ready to create a pull request yet, or if you need to stage something private.&lt;/p&gt; &#xA;&lt;p&gt;☝️ You will need to be a member of our GCP project for this command to work.&lt;/p&gt; &#xA;&lt;h2&gt;Deploying the site 🚀&lt;/h2&gt; &#xA;&lt;h3&gt;Automatic deploys&lt;/h3&gt; &#xA;&lt;p&gt;The site will build and deploy the &lt;code&gt;main&lt;/code&gt; branch automatically every hour, Mon–Fri. If you&#39;ve just merged an article then it should go live at the top of the next hour.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>phil-opp/blog_os</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/phil-opp/blog_os</id>
    <link href="https://github.com/phil-opp/blog_os" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Writing an OS in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blog OS&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for the &lt;em&gt;Writing an OS in Rust&lt;/em&gt; series at &lt;a href=&#34;https://os.phil-opp.com&#34;&gt;os.phil-opp.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, open an issue or chat with us &lt;a href=&#34;https://gitter.im/phil-opp/blog_os&#34;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Where is the code?&lt;/h2&gt; &#xA;&lt;p&gt;The code for each post lives in a separate git branch. This makes it possible to see the intermediate state after each post.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The code for the latest post is available &lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-12&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find the branch for each post by following the &lt;code&gt;(source code)&lt;/code&gt; link in the &lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/#posts&#34;&gt;post list&lt;/a&gt; below. The branches are named &lt;code&gt;post-XX&lt;/code&gt; where &lt;code&gt;XX&lt;/code&gt; is the post number, for example &lt;code&gt;post-03&lt;/code&gt; for the &lt;em&gt;VGA Text Mode&lt;/em&gt; post or &lt;code&gt;post-07&lt;/code&gt; for the &lt;em&gt;Hardware Interrupts&lt;/em&gt; post. For build instructions, see the Readme of the respective branch.&lt;/p&gt; &#xA;&lt;p&gt;You can check out a branch in a subdirectory using &lt;a href=&#34;https://git-scm.com/docs/git-worktree&#34;&gt;git worktree&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git worktree add code post-10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command creates a subdirectory named &lt;code&gt;code&lt;/code&gt; that contains the code for the 10th post (&#34;Heap Allocation&#34;).&lt;/p&gt; &#xA;&lt;h2&gt;Posts&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is to provide step-by-step tutorials in individual blog posts. We currently have the following set of posts:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bare Bones:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/freestanding-rust-binary/&#34;&gt;A Freestanding Rust Binary&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-01&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/minimal-rust-kernel/&#34;&gt;A Minimal Rust Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-02&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/vga-text-mode/&#34;&gt;VGA Text Mode&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-03&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/testing/&#34;&gt;Testing&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-04&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Interrupts:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cpu-exceptions/&#34;&gt;CPU Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-05&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/double-fault-exceptions/&#34;&gt;Double Faults&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-06&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/hardware-interrupts/&#34;&gt;Hardware Interrupts&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-07&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Memory Management:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/paging-introduction/&#34;&gt;Introduction to Paging&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-08&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/paging-implementation/&#34;&gt;Paging Implementation&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-09&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/heap-allocation/&#34;&gt;Heap Allocation&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-10&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/allocator-designs/&#34;&gt;Allocator Designs&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-11&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multitasking&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/async-await/&#34;&gt;Async/Await&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-12&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;First Edition Posts&lt;/h2&gt; &#xA;&lt;p&gt;The current version of the blog is already the second edition. The first edition is outdated and no longer maintained, but might still be useful. The posts of the first edition are:&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Bare Bones:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/multiboot-kernel.html&#34;&gt;A Minimal x86 Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_1&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/entering-longmode.html&#34;&gt;Entering Long Mode&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_2&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/set-up-rust.html&#34;&gt;Set Up Rust&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_3&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/printing-to-screen.html&#34;&gt;Printing to Screen&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_4&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Memory Management:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/allocating-frames.html&#34;&gt;Allocating Frames&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_5&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/modifying-page-tables.html&#34;&gt;Page Tables&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_6&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/remap-the-kernel.html&#34;&gt;Remap the Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_7&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/kernel-heap.html&#34;&gt;Kernel Heap&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_8&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/handling-exceptions.html&#34;&gt;Handling Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_9&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/double-faults.html&#34;&gt;Double Faults&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_10&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Additional Resources:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cross-compile-binutils.html&#34;&gt;Cross Compile Binutils&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cross-compile-libcore.html&#34;&gt;Cross Compile libcore&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/set-up-gdb&#34;&gt;Set Up GDB&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/handling-exceptions-with-naked-fns.html&#34;&gt;Handling Exceptions using Naked Functions&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/catching-exceptions.html&#34;&gt;Catching Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/catching_exceptions&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/better-exception-messages.html&#34;&gt;Better Exception Messages&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/better_exception_messages&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/returning-from-exceptions.html&#34;&gt;Returning from Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/returning_from_exceptions&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project, with exception of the &lt;code&gt;blog/content&lt;/code&gt; folder, is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;For licensing of the &lt;code&gt;blog/content&lt;/code&gt; folder, see the &lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/blog/content/README.md&#34;&gt;&lt;code&gt;blog/content/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mr-r3b00t/msdt_pwn</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/mr-r3b00t/msdt_pwn</id>
    <link href="https://github.com/mr-r3b00t/msdt_pwn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ok likely doesn&#39;t work on office 365 version of Office.. possibly works on 2016 etc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firebase/quickstart-js</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/firebase/quickstart-js</id>
    <link href="https://github.com/firebase/quickstart-js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firebase Quickstart Samples for Web&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firebase Quickstarts for Javascript&lt;/h1&gt; &#xA;&lt;p&gt;A collection of quickstart samples demonstrating the Firebase APIs using the Javascript SDK. For more information, see &lt;a href=&#34;https://firebase.google.com/docs/web/setup&#34;&gt;firebase.google.com/docs/web/setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Samples are organized into the following subdirectories and include README.md files with instructions for getting started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/auth/README.md&#34;&gt;Auth&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Anonymous Auth&lt;/li&gt; &#xA;   &lt;li&gt;Custom Auth&lt;/li&gt; &#xA;   &lt;li&gt;Email and Password auth&lt;/li&gt; &#xA;   &lt;li&gt;Email Link auth&lt;/li&gt; &#xA;   &lt;li&gt;Phone Auth using a visible ReCaptcha&lt;/li&gt; &#xA;   &lt;li&gt;Phone Auth using an invisible ReCaptcha&lt;/li&gt; &#xA;   &lt;li&gt;Phone Auth using popup&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/auth/chromextension/README.md&#34;&gt;Google Auth in a Chrome Extension&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Facebook auth using Facebook login button&lt;/li&gt; &#xA;   &lt;li&gt;Facebook auth using Firebase popup&lt;/li&gt; &#xA;   &lt;li&gt;Facebook auth using Firebase redirect&lt;/li&gt; &#xA;   &lt;li&gt;Google auth using Google sign-in button&lt;/li&gt; &#xA;   &lt;li&gt;Google auth using Firebase popup&lt;/li&gt; &#xA;   &lt;li&gt;Google auth using Firebase redirect&lt;/li&gt; &#xA;   &lt;li&gt;Twitter auth using Firebase popup&lt;/li&gt; &#xA;   &lt;li&gt;Twitter auth using Firebase redirect&lt;/li&gt; &#xA;   &lt;li&gt;Microsoft auth using Firebase popup&lt;/li&gt; &#xA;   &lt;li&gt;Microsoft auth using Firebase redirect&lt;/li&gt; &#xA;   &lt;li&gt;GitHub auth using Firebase popup&lt;/li&gt; &#xA;   &lt;li&gt;GitHub auth using Firebase redirect&lt;/li&gt; &#xA;   &lt;li&gt;Multi-factor authentication with SMS(currently only available for &lt;a href=&#34;https://cloud.google.com/identity-platform/docs/web/mfa&#34;&gt;Google Cloud Identity Platform&lt;/a&gt; projects)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/database/README.md&#34;&gt;Database&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Simple Social Blogging app&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/firestore/README.md&#34;&gt;Firestore&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Simple Rating App&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/functions/README.md&#34;&gt;Functions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Send requests to a Functions server-side instance and get back results.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/storage/README.md&#34;&gt;Storage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Upload a file to Firebase Storage and display its URL&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/messaging/README.md&#34;&gt;Messaging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Send notifications&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to make contributions?&lt;/h2&gt; &#xA;&lt;p&gt;Please read and follow the steps in the &lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/quickstart-js/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/firebase/quickstart-js/actions&#34;&gt;&lt;img src=&#34;https://github.com/firebase/quickstart-js/workflows/CI%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github/opensource.guide</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/github/opensource.guide</id>
    <link href="https://github.com/github/opensource.guide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📚 Community guides for open source creators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Source Guides&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/github/opensource.guide/actions&#34;&gt;&lt;img src=&#34;https://github.com/github/opensource.guide/workflows/GitHub%20Actions%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Source Guides (&lt;a href=&#34;https://opensource.guide/&#34;&gt;https://opensource.guide/&lt;/a&gt;) are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open source project.&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is because we felt that there weren&#39;t enough resources for people creating open source projects.&lt;/p&gt; &#xA;&lt;p&gt;Our goal was to aggregate community best practices, &lt;em&gt;not&lt;/em&gt; what GitHub (or any other individual or entity) thinks is best. Therefore, we used examples and quotations from others to illustrate our points.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This site is powered by &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;. Check out our &lt;a href=&#34;https://raw.githubusercontent.com/github/opensource.guide/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for ways to offer feedback and contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;Content is released under &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;CC-BY-4.0&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md&#34;&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;The initial release of these guides were authored by &lt;strong&gt;&lt;a href=&#34;https://github.com/nayafia&#34;&gt;@nayafia&lt;/a&gt;, &lt;a href=&#34;https://github.com/bkeepers&#34;&gt;@bkeepers&lt;/a&gt;, &lt;a href=&#34;https://github.com/stephbwills&#34;&gt;@stephbwills&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/mlinksva&#34;&gt;@mlinksva&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;strong&gt;&lt;a href=&#34;https://github.com/aitchabee&#34;&gt;@aitchabee&lt;/a&gt;, &lt;a href=&#34;https://github.com/benbalter&#34;&gt;@benbalter&lt;/a&gt;, &lt;a href=&#34;https://github.com/brettcannon&#34;&gt;@brettcannon&lt;/a&gt;, &lt;a href=&#34;https://github.com/caabernathy&#34;&gt;@caabernathy&lt;/a&gt;, &lt;a href=&#34;https://github.com/CoralineAda&#34;&gt;@coralineada&lt;/a&gt;, &lt;a href=&#34;https://github.com/dmleong&#34;&gt;@dmleong&lt;/a&gt;, &lt;a href=&#34;https://github.com/ericholscher&#34;&gt;@ericholscher&lt;/a&gt;, &lt;a href=&#34;https://github.com/gr2m&#34;&gt;@gr2m&lt;/a&gt;, &lt;a href=&#34;https://github.com/janl&#34;&gt;@janl&lt;/a&gt;, &lt;a href=&#34;https://github.com/jessfraz&#34;&gt;@jessfraz&lt;/a&gt;, &lt;a href=&#34;https://github.com/joshsimmons&#34;&gt;@joshsimmons&lt;/a&gt;, &lt;a href=&#34;https://github.com/kfogel&#34;&gt;@kfogel&lt;/a&gt;, &lt;a href=&#34;https://github.com/kytrinyx&#34;&gt;@kytrinyx&lt;/a&gt;, &lt;a href=&#34;https://github.com/lee-dohm&#34;&gt;@lee-dohm&lt;/a&gt;, &lt;a href=&#34;https://github.com/mikeal&#34;&gt;@mikeal&lt;/a&gt;, &lt;a href=&#34;https://github.com/MikeMcQuaid&#34;&gt;@mikemcquaid&lt;/a&gt;, &lt;a href=&#34;https://github.com/nathansobo&#34;&gt;@nathansobo&lt;/a&gt;, &lt;a href=&#34;https://github.com/nruff&#34;&gt;@nruff&lt;/a&gt;, &lt;a href=&#34;https://github.com/nsqe&#34;&gt;@nsqe&lt;/a&gt;, &lt;a href=&#34;https://github.com/orta&#34;&gt;@orta&lt;/a&gt;, &lt;a href=&#34;https://github.com/parkr&#34;&gt;@parkr&lt;/a&gt;, &lt;a href=&#34;https://github.com/shazow&#34;&gt;@shazow&lt;/a&gt;, &lt;a href=&#34;https://github.com/steveklabnik&#34;&gt;@steveklabnik&lt;/a&gt;,&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/wooorm&#34;&gt;@wooorm&lt;/a&gt;&lt;/strong&gt; for lending their valuable input and expertise leading up to the initial release, and to &lt;strong&gt;&lt;a href=&#34;https://github.com/sophshep&#34;&gt;@sophshep&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://github.com/jeejkang&#34;&gt;@jeejkang&lt;/a&gt;&lt;/strong&gt; for designing and illustrating the guides.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;While we&#39;ve got advice about running an open source project, we&#39;re not lawyers. Be sure to read our &lt;a href=&#34;https://raw.githubusercontent.com/github/opensource.guide/main/notices.md#legal-disclaimer&#34;&gt;disclaimer&lt;/a&gt; before diving in.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openshift/openshift-docs</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/openshift/openshift-docs</id>
    <link href="https://github.com/openshift/openshift-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenShift 3 and 4 product and community documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenShift documentation&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.okd.io/&#34;&gt;OKD&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.openshift.com/products/online/&#34;&gt;OpenShift Online&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.openshift.com/products/container-platform/&#34;&gt;OpenShift Container Platform&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.openshift.com/products/dedicated/&#34;&gt;OpenShift Dedicated&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;All OpenShift documentation is sourced in &lt;a href=&#34;https://www.methods.co.nz/asciidoc/&#34;&gt;AsciiDoc&lt;/a&gt; and transformed into HTML/CSS and other formats through automation that is based on &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;AsciiDoctor&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The documentation published from these source files can be viewed at &lt;a href=&#34;https://docs.openshift.com&#34; class=&#34;bare&#34;&gt;https://docs.openshift.com&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contributing_to_openshift_documentation&#34;&gt;Contributing to OpenShift documentation&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you are interested in contributing to OpenShift technical documentation, you can view all our &lt;a href=&#34;https://raw.githubusercontent.com/openshift/openshift-docs/main/contributing_to_docs&#34;&gt;resources&lt;/a&gt; that will help you get set up and provide more information.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The following table provides quick links to help you get started.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt; &#xA;   &lt;colgroup&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;    &lt;col style=&#34;width: 50%;&#34;&gt; &#xA;   &lt;/colgroup&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Question&lt;/th&gt; &#xA;     &lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Link&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;I’m interested, how do I contribute?&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/openshift-docs/main/contributing_to_docs/contributing.adoc&#34;&gt;contributing&lt;/a&gt; topic to learn more about this repository and how you can contribute.&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Are there any basic guidelines to help me?&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openshift/openshift-docs/main/contributing_to_docs/doc_guidelines.adoc&#34;&gt;documentation guidelines&lt;/a&gt; topic provides some basic guidelines to help us keep our content consistent, and includes other style information.&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;How do I set up my workstation?&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/openshift-docs/main/contributing_to_docs/tools_and_setup.adoc&#34;&gt;tools and setup&lt;/a&gt; topic to set up your workstation.&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;How do I edit an existing topic, or create new content?&lt;/p&gt;&lt;/td&gt; &#xA;     &lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/openshift/openshift-docs/main/contributing_to_docs/create_or_edit_content.adoc&#34;&gt;create or edit content&lt;/a&gt; topic to get started.&lt;/p&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contacts&#34;&gt;Contacts&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For questions or comments about OpenShift documentation:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Send an email to the OpenShift documentation team at &lt;a href=&#34;mailto:openshift-docs@redhat.com&#34;&gt;openshift-docs@redhat.com&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/python-sample-vscode-flask-tutorial</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/microsoft/python-sample-vscode-flask-tutorial</id>
    <link href="https://github.com/microsoft/python-sample-vscode-flask-tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample code for the Flask tutorial in the VS Code documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Python/Flask Tutorial for Visual Studio Code&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;This sample contains the completed program from the tutorial, make sure to visit the link: &lt;a href=&#34;https://code.visualstudio.com/docs/python/tutorial-flask&#34;&gt;Using Flask in Visual Studio Code&lt;/a&gt;. Intermediate steps are not included.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It also contains the &lt;em&gt;Dockerfile&lt;/em&gt; and &lt;em&gt;uwsgi.ini&lt;/em&gt; files necessary to build a container with a production server. The resulting image works both locally and when deployed to Azure App Service. See &lt;a href=&#34;https://code.visualstudio.com/docs/python/tutorial-deploy-containers&#34;&gt;Deploy Python using Docker containers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run the app locally:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run the command &lt;code&gt;cd hello_app&lt;/code&gt;, to change into the folder that contains the Flask app.&lt;/li&gt; &#xA;   &lt;li&gt;Run the command &lt;code&gt;set FLASK_APP=webapp&lt;/code&gt; (Windows cmd) or &lt;code&gt;FLASK_APP=webapp&lt;/code&gt; (macOS/Linux) to point to the app module.&lt;/li&gt; &#xA;   &lt;li&gt;Start the Flask server with &lt;code&gt;flask run&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The startup.py file&lt;/h2&gt; &#xA;&lt;p&gt;In the root folder, the &lt;code&gt;startup.py&lt;/code&gt; file is specifically for deploying to Azure App Service on Linux without using a containerized version of the app (that is, deploying the code directly, not as a container).&lt;/p&gt; &#xA;&lt;p&gt;Because the app code is in its own &lt;em&gt;module&lt;/em&gt; in the &lt;code&gt;hello_app&lt;/code&gt; folder (which has an &lt;code&gt;__init__.py&lt;/code&gt;), trying to start the Gunicorn server within App Service on Linux produces an &#34;Attempted relative import in non-package&#34; error.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;startup.py&lt;/code&gt; file, therefore, is a shim to import the app object from the &lt;code&gt;hello_app&lt;/code&gt; module, which then allows you to use startup:app in the Gunicorn command line (see &lt;code&gt;startup.txt&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to the sample are welcome. When submitting changes, also consider submitting matching changes to the tutorial, the source file for which is &lt;a href=&#34;https://github.com/Microsoft/vscode-docs/raw/master/docs/python/tutorial-flask.md&#34;&gt;tutorial-flask.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot automatically determines whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;h2&gt;Additional details&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or&lt;/li&gt; &#xA; &lt;li&gt;Contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alienzhou/frontend-tech-list</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/alienzhou/frontend-tech-list</id>
    <link href="https://github.com/alienzhou/frontend-tech-list" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📝 Frontend Tech List for Developers 💡&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前端技术清单&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;最后更新：2019/10/09 &lt;a href=&#34;https://github.com/alienzhou/frontend-tech-list/commit/9e73eb648cb1b7413ecca0c5fe3ebb81f4dea0fe?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8&#34;&gt;新增内容 (diff) &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;学习文章的知识往往是碎片化的。而前端涉及到的面很广，这些知识如果不进行有效梳理，则无法相互串联、形成体系。因此，我结合工作体会将抽象出了一些前端基础能力，并将看过、写过的一些不错的文章进行整理，形成了一份（纯）前端技术清单。&lt;/p&gt; &#xA;&lt;p&gt;不论你是正在自学前端，还是对前端某些技术熟练掌握但某些还未涉足，我都希望这份清单能帮助你 review 一些前端的基础能力。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#0-%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A&#34;&gt;0. 年度报告&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#1-%E5%9F%BA%E7%A1%80%E6%8B%BE%E9%81%97&#34;&gt;1. 基础拾遗&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#11-javascript&#34;&gt;1.1. JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#12-css&#34;&gt;1.2. CSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#13-%E6%B5%8F%E8%A7%88%E5%99%A8&#34;&gt;1.3. 浏览器&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#2-%E5%B7%A5%E7%A8%8B%E5%8C%96%E4%B8%8E%E5%B7%A5%E5%85%B7&#34;&gt;2. 工程化与工具&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#21-webpack&#34;&gt;2.1. webpack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#22-gulp&#34;&gt;2.2. Gulp&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#23-linter&#34;&gt;2.3. Linter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#24-%E9%9D%99%E6%80%81%E7%B1%BB%E5%9E%8Btypescriptflow&#34;&gt;2.4. 静态类型（Typescript/Flow）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#25-babel&#34;&gt;2.5. Babel&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#26-css%E9%A2%84%E5%A4%84%E7%90%86%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96&#34;&gt;2.6. CSS预处理与模块化&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#3-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96&#34;&gt;3. 性能优化&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#31-%E5%8A%A0%E8%BD%BD%E6%80%A7%E8%83%BD&#34;&gt;3.1. 加载性能&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#32-%E8%BF%90%E8%A1%8C%E6%97%B6%E6%80%A7%E8%83%BD&#34;&gt;3.2. 运行时性能&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#33-%E5%89%8D%E7%AB%AF%E7%BC%93%E5%AD%98&#34;&gt;3.3. 前端缓存&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#34-%E6%80%A7%E8%83%BD%E8%B0%83%E8%AF%95%E4%B8%8E%E5%AE%9E%E8%B7%B5&#34;&gt;3.4. 性能调试与实践&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#35-%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87&#34;&gt;3.5. 性能指标&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#4-%E5%AE%89%E5%85%A8&#34;&gt;4. 安全&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#41-xss&#34;&gt;4.1. XSS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#42-csrf&#34;&gt;4.2. CSRF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#43-csp&#34;&gt;4.3. CSP&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#44-https&#34;&gt;4.4. HTTPS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#45-%E5%AE%89%E5%85%A8%E5%AE%9E%E5%BD%95&#34;&gt;4.5. 安全实录&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#46-%E4%BB%A3%E7%A0%81%E4%BF%9D%E6%8A%A4&#34;&gt;4.6. 代码保护&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#47-js%E6%B2%99%E7%9B%92&#34;&gt;4.7. JS沙盒&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#48-%E5%85%B6%E4%BB%96&#34;&gt;4.8. 其他&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#5-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95&#34;&gt;5. 自动化测试&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#51-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95&#34;&gt;5.1. 单元测试&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#52-%E7%AB%AF%E5%88%B0%E7%AB%AF%E6%B5%8B%E8%AF%95-e2e&#34;&gt;5.2. 端到端测试 (E2E)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#53-%E5%85%B6%E4%BB%96&#34;&gt;5.3. 其他&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#6-%E6%A1%86%E6%9E%B6%E4%B8%8E%E7%B1%BB%E5%BA%93&#34;&gt;6. 框架与类库&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#61-react&#34;&gt;6.1. React&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#62-vue&#34;&gt;6.2. Vue&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#63-redux&#34;&gt;6.3. Redux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#64-rxjs&#34;&gt;6.4. RxJS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#7-%E6%96%B0%E6%8A%80%E6%9C%AF%E6%96%B9%E5%90%91&#34;&gt;7. 新技术/方向&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#71-pwa&#34;&gt;7.1. PWA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#72-css-houdini&#34;&gt;7.2. CSS Houdini&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#73-web-components&#34;&gt;7.3. Web Components&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#74-%E5%BE%AE%E5%89%8D%E7%AB%AFmicro-frontends&#34;&gt;7.4. 微前端（Micro Frontends）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#75-http2&#34;&gt;7.5. HTTP/2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#76-webassembly&#34;&gt;7.6. WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#77-%E5%B0%8F%E7%A8%8B%E5%BA%8F&#34;&gt;7.7. 小程序&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#78-serverless&#34;&gt;7.8. Serverless&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#8-%E4%B8%9A%E5%8A%A1%E7%9B%B8%E5%85%B3&#34;&gt;8. 业务相关&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#81-%E6%95%B0%E6%8D%AE%E6%89%93%E7%82%B9%E4%B8%8A%E6%8A%A5&#34;&gt;8.1. 数据打点上报&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#82-%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7&#34;&gt;8.2. 前端监控&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#83-ab%E6%B5%8B%E8%AF%95&#34;&gt;8.3. A/B测试&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#84-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8&#34;&gt;8.4. “服务端推”&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#85-%E5%8A%A8%E6%95%88&#34;&gt;8.5. 动效&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alienzhou/frontend-tech-list/master/#9-%E5%85%B6%E4%BB%96&#34;&gt;9. 其他&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;0. 年度报告&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2018-results&#34;&gt;2018 前端工具调查报告&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://2018.stateofjs.com/&#34;&gt;2018 JavaScript 调查报告&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1. 基础拾遗&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;温故而知新，不知则习之，是以牢固根基。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;1.1. JavaScript&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS&#34;&gt;You-Dont-Know-JS [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JavaScript 基础运行机制： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf&#34;&gt;JS 引擎、运行时与调用栈概述 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-inside-the-v8-engine-5-tips-on-how-to-write-optimized-code-ac089e62b12e&#34;&gt;V8 引擎简介 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-memory-management-how-to-handle-4-common-memory-leaks-3f28b94cfbec&#34;&gt;内存管理与4中常见的泄漏 [英]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Event Loop（面试里总会有一题 Event Loop…）： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/aooy/blog/issues/5&#34;&gt;从 Event Loop 规范探究 JavaScript 异步及浏览器更新渲染时机&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5&#34;&gt;异步之 Event Loop [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/&#34;&gt;NodeJS 中的 Event Loop、Timers 与 &lt;code&gt;process.nextTick()&lt;/code&gt; [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&#34;&gt;Tasks、Microtasks、Queues 与Schedules [英]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-the-building-blocks-of-web-workers-5-cases-when-you-should-use-them-a547c0757f6a&#34;&gt;Web Workers 及其5个常见使用场景 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c&#34;&gt;如何避免 async/await 地狱 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/bc7b8d542dcd&#34;&gt;“回调地狱”的解决思路汇总&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.2. CSS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lhammer.cn/You-need-to-know-css/#/&#34;&gt;You-Need-to-Know-CSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/&#34;&gt;CSSOM 及其相关浏览器 API 使用指南 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5b3b56a1e51d4519646204bb&#34;&gt;CSS布局指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/where-lines-break-is-complicated-heres-all-the-related-css-and-html/&#34;&gt;CSS 中的各类换行处理方式 [英]&lt;/a&gt;：处理经典的换行问题&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/264372456&#34;&gt;浏览器将rem转成px时有精度误差怎么办？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5ba079e86fb9a05d1227fddb&#34;&gt;精准操控的滚动体验，浅谈新标准 Scroll Snap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.scottohara.me/blog/2018/10/03/unbutton-buttons.html&#34;&gt;如何完美实现一个非&lt;code&gt;button&lt;/code&gt;元素的按钮 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uxdesign.cc/creating-horizontal-scrolling-containers-the-right-way-css-grid-c256f64fc585&#34;&gt;巧用 CSS Grid 来创建横向滚动容器 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/fighting-the-space-between-inline-block-elements/&#34;&gt;如何处理内联元素中的空隙 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000002783265&#34;&gt;CSS Stacking Context 里那些鲜为人知的坑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5c0feb3bf265da616d5409a5&#34;&gt;在 (S)CSS 中实现主题功能的 4½ 种方法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.3. 浏览器&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/&#34;&gt;浏览器的工作原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;现代浏览器内部是如何运行的： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/09/inside-browser-part1&#34;&gt;Chrome浏览器概览&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/09/inside-browser-part2&#34;&gt;浏览时发生了什么？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/09/inside-browser-part3&#34;&gt;渲染进程的内部工作原理&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/09/inside-browser-part4&#34;&gt;compositor是如何来提高交互性能的？&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&#34;&gt;完整的页面生命周期 API 介绍 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zeolearn.com/magazine/different-types-of-observers-supported-by-modern-browsers&#34;&gt;四个新的观察者：Intersection / Mutation / Resize / Performance (Observer)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-the-rendering-engine-and-tips-to-optimize-its-performance-7b95553baeda&#34;&gt;渲染引擎工作方式及优化建议 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5bbaa7da6fb9a05d3761aafe&#34;&gt;浏览器内核渲染：重建引擎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/438183ddcea8&#34;&gt;跨域解决方案汇总&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2. 工程化与工具&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;软件规模的扩大带来了工程化的需求，前端也不例外。随着 NodeJS 的出现，前端工程师可以使用熟悉的 JS 快速开发所需的工具。工具链生态的繁荣也是前端圈繁荣的一个写照。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;2.1. webpack&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/webpack/the-chunk-graph-algorithm-week-26-29-7c88aa5e4b4e&#34;&gt;webpack 中的 Chunk 关系图算法 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5bc1a73df265da0a8d36b74f#heading-13&#34;&gt;webpack 进阶系列文章&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;编译优化： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AifDI71uqF0&#34;&gt;如何提升大型项目中 webpack 的性能 🎥 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://survivejs.com/webpack/optimizing/separating-manifest&#34;&gt;运行时优化：Separating a Manifest [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://medium.com/webpack/link-rel-prefetch-preload-in-webpack-51a52358f84c&#34;&gt;在 webpack 中使用 &amp;lt;link rel=”prefetch/preload”&amp;gt; [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5b8ce49df265da438151b468&#34;&gt;如何更好使用 webpack tree-shaking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;关于 webpack 编译缓存的讨论： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/webpack/webpack/issues/250#issuecomment-240643985&#34;&gt;mzgoddard&#39;s comment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/webpack/webpack/issues/6527&#34;&gt;[spec: webpack 5] - A module disk cache between build processes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.2. Gulp&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fettblog.eu/gulp-4-parallel-and-series/&#34;&gt;Gulp 4 简介 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/35571124770f&#34;&gt;基于Gulp的多页面应用实践指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.3. Linter&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/34656263&#34;&gt;JS Linter 进化史&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/the-node-js-collection/why-and-how-to-use-eslint-in-your-project-742d0bc61ed7&#34;&gt;为何要在项目汇总使用 ESLint [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.4. 静态类型（Typescript/Flow）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/TypeScript/wiki/Architectural-Overview&#34;&gt;Typescript 总体架构 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;为什么要在 JavaScript 中进行静态类型检查： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/bda750e2d15e&#34;&gt;第一部分&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/289b3c734a9f&#34;&gt;第二、三部分&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/d23f93be8821&#34;&gt;第四部分&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.5. Babel&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamiebuilds/babel-handbook/raw/master/translations/zh-Hans/user-handbook.md&#34;&gt;Babel 用户手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jamiebuilds/babel-handbook/raw/master/translations/zh-Hans/plugin-handbook.md&#34;&gt;Babel 插件手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lihautan.com/creating-custom-javascript-syntax-with-babel/&#34;&gt;如何通过 Babel 实现你的自定义 JS 语法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.6. CSS预处理与模块化&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@perezpriego7/css-evolution-from-css-sass-bem-css-modules-to-styled-components-d4c1da3a659b&#34;&gt;CSS 进化史 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5b20e8e0e51d4506c60e47f5&#34;&gt;CSS 模块化方案系列&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3. 性能优化&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;性能优化其实就是在理解浏览器的基础上“因地制宜”，因此可以配合1.3节“浏览器”部分进行理解。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;强烈推荐把 &lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/why-performance-matters/&#34;&gt;Google Web 上性能优化&lt;/a&gt; Tab 中的文章都通读一遍，其基本涵盖了现代浏览器中性能优化的所有点。笔者也梳理了一份&lt;a href=&#34;https://alienzhou.github.io/fe-performance-journey/&#34;&gt;「前端性能优化指南 🚀」&lt;/a&gt;，可以帮助大家系统地了解和学习前端性能优化。&lt;/p&gt; &#xA;&lt;p&gt;下面也摘录了其中一些个人认为非常不错的文章。&lt;/p&gt; &#xA;&lt;h3&gt;3.1. 加载性能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/prpl-pattern/&#34;&gt;PRPL 模式 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/the-complete-guide-to-lazy-loading-images&#34;&gt;图片懒加载完全指南 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deanhume.com/lazy-loading-images-using-intersection-observer/&#34;&gt;使用 Intersection Observer 来懒加载图片 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/&#34;&gt;图片与视频懒加载的详细指南 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2015/11/app-shell&#34;&gt;使用 Application Shell 架构来实现秒开应用 [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.2. 运行时性能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing?hl=zh-cn#avoid-forced-synchronous-layouts&#34;&gt;避免大型、复杂的布局和布局抖动 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/paulirish/5d52fb081b3570c81e3a&#34;&gt;什么导致强制同步布局（reflow）？ [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/rendering-tools/forced-synchronous-layouts?hl=zh-cn&#34;&gt;如何诊断强制同步布局 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://taobaofed.org/blog/2016/04/25/performance-composite/&#34;&gt;无线性能优化：Composite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/30078937&#34;&gt;如何不择手段提升scroll事件的性能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WICG/EventListenerOptions/raw/gh-pages/explainer.md&#34;&gt;使用 passive event listener 来提高滚动流畅性 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;节流和去抖（throttle &amp;amp; debounce） &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hanzichi/underscore-analysis/issues/20&#34;&gt;JavaScript 函数节流和函数去抖应用场景辨析&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hanzichi/underscore-analysis/issues/21&#34;&gt;underscore 函数去抖的实现&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;requestIdleCallback &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2015/08/using-requestidlecallback&#34;&gt;requestIdleCallback使用入门 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://philipwalton.com/articles/idle-until-urgent&#34;&gt;Idle Until Urgent [英]&lt;/a&gt;：requestIdleCallback的妙用&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.3. 前端缓存&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.to/kbk0125/web-caching-explained-by-buying-milk-at-the-supermarket-9k4&#34;&gt;Web 缓存简介：以购买牛奶的为例 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2016/a-tale-of-four-caches/&#34;&gt;大话前端缓存 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amandakelake/blog/issues/43&#34;&gt;缓存（一）—— 缓存总览：从性能优化的角度看缓存&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amandakelake/blog/issues/41&#34;&gt;缓存（二）—— 浏览器缓存机制：强缓存、协商缓存&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amandakelake/blog/issues/13&#34;&gt;缓存（三）—— 数据存储：cookie、Storage、indexedDB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.4. 性能调试与实践&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/speed/get-started&#34;&gt;使用 Chrome DevTools 提升页面速度 [英]&lt;/a&gt;：Chrome DevTools实操讲解&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing&#34;&gt;了解 DevTools 中的 Resource Timing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000014359615&#34;&gt;淘宝新势力周H5性能优化实战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5aed037b6fb9a07aa047e1e1&#34;&gt;优化打包策略来提升页面加载速度&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/42059158&#34;&gt;Chrome DevTools 中你可能不知道的调试技巧&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://speedcurve.com/blog/user-timing-and-custom-metrics/&#34;&gt;前端性能测量 [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.5. 性能指标&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics&#34;&gt;以用户为中心的前端性能指标 [英]&lt;/a&gt;：前端性能指标的来龙去脉&lt;/li&gt; &#xA; &lt;li&gt;DOMContentLoaded: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/25876048&#34;&gt;你不知道的 DOMContentLoaded&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2012/deciphering-the-critical-rendering-path/&#34;&gt;Deciphering the Critical Rendering Path [英]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FP (First Paint)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://eux.baidu.com/blog/fe/Chrome%E7%9A%84First%20Paint&#34;&gt;Chrome的First Paint&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FCP (First Contentful Paint)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gtmetrix.com/blog/first-contentful-paint-explained/&#34;&gt;First Contentful Paint Explained [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/tools/lighthouse/audits/first-contentful-paint&#34;&gt;First Contentful Paint [英]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FMP (First Meaningful Paint)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://juejin.im/entry/598080226fb9a03c5d535cd5&#34;&gt;Chrome 中的 First Meaningful Paint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1BR94tJdZLsin5poeet0XoTW60M0SjvOJQttKT-JK8HI/view?hl=zh-cn#heading=h.k50nnyhtptq0&#34;&gt;Time to First Meaningful Paint&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TTI (Time to interactive)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/WICG/time-to-interactive&#34;&gt;Time to Interactive Explainer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2017/time-to-interactive-measuring-more-of-the-user-experience/&#34;&gt;衡量用户体验的新标准&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;TTFB (Time To First Byte)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/23588780&#34;&gt;TTFB，以及页面加载的时间节点&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FID (First Input Delay)： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/05/first-input-delay&#34;&gt;First Input Delay&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Speed Index： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index&#34;&gt;WebPagetest: Speed Index&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;4. 安全&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;很多安全风险老生常谈，但是往往到出现问题时，才会被重视或者意识到。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://insights.thoughtworks.cn/eight-security-problems-in-front-end/&#34;&gt;8大前端安全问题上篇&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://insights.thoughtworks.cn/eight-security-problems-in-front-end-2/&#34;&gt;8大前端安全问题下篇&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation&#34;&gt;概念讲解：编码、加密、哈希与混淆 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zoumiaojiang.com/article/common-web-security/&#34;&gt;常见 Web 安全攻防总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.1. XSS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.meituan.com/fe_security.html&#34;&gt;如何防止XSS攻击？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.2. CSRF&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5bc009996fb9a05d0a055192&#34;&gt;如何防止CSRF攻击？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/07/site-isolation&#34;&gt;Site Isolation [英]&lt;/a&gt;：Chrome的新特性&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.3. CSP&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/09/csp.html&#34;&gt;Content Security Policy 入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&#34;&gt;Content Security Policy (CSP) [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.4. HTTPS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3NKOCOeIUF2SGJnY7II9hA&#34;&gt;图文还原 HTTPS 原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000013635363&#34;&gt;浅谈有赞全站 HTTPS 推进&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.5. 安全实录&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mathiasbynens.github.io/rel-noopener/&#34;&gt;About &lt;code&gt;rel=noopener&lt;/code&gt; [英]&lt;/a&gt;：打开一个新页面是如何带来安全隐患的&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.azarask.in/blog/post/a-new-type-of-phishing-attack/&#34;&gt;一种新型的“钓鱼”方式 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jakearchibald.com/2018/i-discovered-a-browser-bug&#34;&gt;一个媒体文件请求引发的跨站风险 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.googleblog.com/2018/07/mitigating-spectre-with-site-isolation.html&#34;&gt;Mitigating Spectre [英]&lt;/a&gt;： Chrome 中的跨站安全问题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.6. 代码保护&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000019423501&#34;&gt;JavaScript 混淆安全加固&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/61651310&#34;&gt;前端核心代码保护技术面面观&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.7. JS沙盒&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/blog/how-we-built-the-figma-plugin-system/&#34;&gt;如何在 Web 上实现一个插件系统 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/46571509&#34;&gt;如何安全地运行用户的 JavaScript 脚本&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.8. 其他&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://imququ.com/post/web-security-and-response-header.html&#34;&gt;一些安全相关的HTTP响应头&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;5. 自动化测试&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;自动化测试是软件工程的重要部分之一，但却极容易被忽视。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3&#34;&gt;2018 前端自动化测试综述 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/testing-your-frontend-code-part-i-introduction-7e307eac4446&#34;&gt;测试你的前端代码（介绍篇）[英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.1. 单元测试&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/testing-your-frontend-code-part-ii-unit-testing-1d05f8d50859&#34;&gt;测试你的前端代码（单元测试篇）[英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/26942686&#34;&gt;Fakes、Mocks 以及 Stubs 概念明晰&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/test-coverage-rate-role&#34;&gt;测试覆盖（率）到底有什么用？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.2. 端到端测试 (E2E)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475&#34;&gt;测试你的前端代码（E2E 测试篇）[英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing.googleblog.com/2016/09/testing-on-toilet-what-makes-good-end.html&#34;&gt;什么是一个好的 E2E 测试？[英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/balancing-unit-and-end-to-end-tests&#34;&gt;平衡单元测试和端到端测试&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html&#34;&gt;对过多的 E2E 测试说“不” [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.3. 其他&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/testing-your-frontend-code-part-iv-integration-testing-f1f4609dc4d9&#34;&gt;测试你的前端代码（集成测试篇）[英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@giltayar/testing-your-frontend-code-part-v-visual-testing-935864cfb5c7&#34;&gt;测试你的前端代码（可视化测试篇）[英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/criteo-labs/introduction-to-property-based-testing-f5236229d237&#34;&gt;关于 Property Based Testing 的介绍 [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;6. 框架与类库&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果说基础知识是道，那框架与工具可能就是术；学习与理解它们，但千万不要成为它们的奴隶。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;6.1. React&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5&#34;&gt;手把手教你如何实现一个简易的 React [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bogdan-lyashenko.github.io/Under-the-hood-ReactJS/&#34;&gt;React 底层揭秘 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hateonion/react-bits-CN&#34;&gt;你所需要知道的 React 细节&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/37095662&#34;&gt;React Fiber 架构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://zxc0328.github.io/2017/09/28/react-16-source/&#34;&gt;React 16 Fiber 源码速览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000013365426&#34;&gt;React 是怎样炼成的&lt;/a&gt;：React早期的进化之路&lt;/li&gt; &#xA; &lt;li&gt;从零开始实现一个React： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hujiulong/blog/issues/4&#34;&gt;1. JSX和虚拟DOM&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hujiulong/blog/issues/5&#34;&gt;2. 组件和生命周期&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hujiulong/blog/issues/6&#34;&gt;3. diff算法&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hujiulong/blog/issues/7&#34;&gt;4. 异步的setState&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/0b2acb50f321&#34;&gt;「react技术栈」单页应用实践快速入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&#34;&gt;React 生命周期图示&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.2. Vue&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berwin/Blog/issues/17&#34;&gt;深入浅出 - vue变化侦测原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berwin/Blog/issues/18&#34;&gt;Vue 模板编译原理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.3. Redux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/redesigning-redux-b2baee8b8a38&#34;&gt;重新设计 Redux [英]&lt;/a&gt;：Rematch&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hackernoon.com/how-graphql-replaces-redux-3fff8289221d&#34;&gt;如何用 GraphQL 来替代 Redux [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://div.io/topic/1309&#34;&gt;解读 Redux 的设计思路与用法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jaysoo.ca/2016/02/28/organizing-redux-application/#rule-1-organize-by-feature&#34;&gt;(Redux)应用构建的三个原则 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/&#34;&gt;React-Redux 的发展历史与实现 [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6.4. RxJS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://reactivex.io/&#34;&gt;ReactiveX 官网&lt;/a&gt;：宝石图真的非常形象易读&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/android-blogs/p/5586395.html&#34;&gt;响应式编程，是明智的选择&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.angularindepth.com/learn-to-combine-rxjs-sequences-with-super-intuitive-interactive-diagrams-20fce8e6511&#34;&gt;图解RxJS [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.angularindepth.com/debugging-rxjs-4f0340286dd3&#34;&gt;调试RxJS：Tooling [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.angularindepth.com/debugging-rxjs-part-2-logging-56904459f144&#34;&gt;调试RxJS：Logging [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;7. 新技术/方向&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;前端领域新技术、新方向层出不穷，这里汇总一些新技术方向；作为开发者需要多了解但是不要盲从&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;7.1. PWA&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5ac8a67c5188255c5668b0b8#heading-3&#34;&gt;PWA 学习与实践系列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.freecodecamp.org/service-workers-the-little-heroes-behind-progressive-web-apps-431cc22d0f16&#34;&gt;Service Worker 入门简介 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@firt/pwas-are-coming-to-ios-11-3-cupertino-we-have-a-problem-2ff49fd7d6ea&#34;&gt;PWA 在 iOS 平台上的特殊问题 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@firt/dont-use-ios-web-app-meta-tag-irresponsibly-in-your-progressive-web-apps-85d70f4438cb&#34;&gt;在你的 PWA 中小心使用 iOS 的 meta 标签 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/elemefe/upgrading-ele-me-to-progressive-web-app-2a446832e509&#34;&gt;饿了么的 PWA 升级实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/&#34;&gt;离线指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.cn/web/fundamentals/integration/webapks?hl=zh-cn&#34;&gt;Android 中的 WebAPKs [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@Pinterest_Engineering/a-one-year-pwa-retrospective-f4a2f4129e05&#34;&gt;Pinterest 的 PWA 实践 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2018/09/asynchronous-access-to-http-cookies&#34;&gt;异步 HTTP Cookies API [英]&lt;/a&gt;：赋能Service Worker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.2. CSS Houdini&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codersblock.com/blog/say-hello-to-houdini-and-the-css-paint-api/&#34;&gt;认识 Houdini 与 CSS Paint API [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://philipwalton.com/articles/the-dark-side-of-polyfilling-css/&#34;&gt;用 Houdini 来拯救 CSS Polyfill [英]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.3. Web Components&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Web_Components&#34;&gt;Web Components 基本概念和用法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://css-tricks.com/modular-future-web-components/&#34;&gt;Web Components 指南 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://web.jobbole.com/87088/&#34;&gt;Shadow DOM 使用简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/2018/03/htmlunknownelement-html5-custom-elements/&#34;&gt;HTMLUnknownElement 与 HTML5 自定义元素的故事&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.4. 微前端（Micro Frontends）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://micro-frontends.org/&#34;&gt;微前端主页 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microfrontend.cn/&#34;&gt;微前端的那些事儿&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/32378432&#34;&gt;技术雷达之「微前端」- 将微服务理念扩展到前端开发&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.5. HTTP/2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/web/wa-http2-under-the-hood/index.html&#34;&gt;HTTP/2 幕后原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hpbn.co/http2/&#34;&gt;全面介绍的 HTTP/2 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://http2.github.io/&#34;&gt;HTTP/2 主页&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://httpwg.org/specs/rfc7540.html&#34;&gt;HTTP/2 协议 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://httpwg.org/specs/rfc7541.html&#34;&gt;HPACK: HTTP/2 Header压缩 [英]&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.6. WebAssembly&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webassembly.org/&#34;&gt;WebAssembly 官网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/web/wa-lo-webassembly-status-and-reality/index.html&#34;&gt;WebAssembly 现状与实战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WebAssembly 系列： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008714589&#34;&gt;一、生动形象地介绍 WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008632441&#34;&gt;二、JavaScript Just-in-time (JIT) 工作原理&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008664761&#34;&gt;三、编译器如何生成汇编&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008686643&#34;&gt;四、WebAssembly 工作原理&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008699213&#34;&gt;五、为什么 WebAssembly 更快？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008714515&#34;&gt;六、WebAssembly 的现在与未来&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.7. 小程序&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000018631528&#34;&gt;微信，支付宝小程序实现原理概述&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/berwin/Blog/issues/43&#34;&gt;小程序底层实现原理及一些思考&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.8. Serverless&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/58877583&#34;&gt;Serverless 给前端带来了什么&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.infoq.cn/article/KFNcm7Pbq*eIV2dQIpRX&#34;&gt;基于 Serverless 的淘宝前端研发模式升级&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ooX7uMFjxFfSai9URo6kYw&#34;&gt;Serverless，将给前端发展带来大变革的技术？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://thenewstack.io/why-netflix-rolled-its-own-node-js-functions-as-a-service-runtime?utm_source=mybridge&amp;amp;utm_medium=blog&amp;amp;utm_campaign=read_more&#34;&gt;Why Netflix Rolled Its Own Node.js Functions-as-a-Service for its API Platform&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;8. 业务相关&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;在业务中往往还有一些与“业务无关”的场景需求 —— 不论是什么业务几乎都会遇到；因此，在变与不变中，我们更需要去抽象出这些问题。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;8.1. 数据打点上报&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techblog.toutiao.com/2018/06/05/ru-he-jing-que-tong-ji-ye-mian-ting-liu-shi-chang/&#34;&gt;如何精确统计页面停留时长&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://unclechen.github.io/2018/06/24/%E6%8F%AD%E5%BC%80JS%E6%97%A0%E5%9F%8B%E7%82%B9%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A5%9E%E7%A7%98%E9%9D%A2%E7%BA%B1/&#34;&gt;揭开JS无埋点技术的神秘面纱&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;8.2. 前端监控&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cdc.tencent.com/2018/09/13/frontend-exception-monitor-research/&#34;&gt;前端异常监控解决方案研究&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.meituan.com/hunt_sdk_practice.html&#34;&gt;监控平台前端SDK开发实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/32262716&#34;&gt;把前端监控做到极致&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5a3e121451882533f01ec66d&#34;&gt;前端监控系统探索总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5d8d9eeaf265da5b783ef45c&#34;&gt;60 天急速自研-搭建前端埋点监控系统&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;8.3. A/B测试&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter的A/B测试实践： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/twitter-ab-test-practise-part01&#34;&gt;一、为什么要测试以及测试的意义&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/twitter-ab-test-practise-part02&#34;&gt;二、技术概述&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/twitter-ab-test-practise-part03&#34;&gt;三、检测和避免 A/B Test中 bucket不平衡问题&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/twitter-ab-test-practise-part04&#34;&gt;四、A/B Test中使用多个控制的启示&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/netflix-techblog/its-all-a-bout-testing-the-netflix-experimentation-platform-4e1ca458c15&#34;&gt;Netflix A/B Test 实验平台实践 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;指导方法 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.exp-platform.com/Documents/2009-ExPpitfalls.pdf&#34;&gt;实验中容易遇到的七种问题 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.exp-platform.com/Documents/2014%20experimentersRulesOfThumb.pdf&#34;&gt;实验的七个准则 [英]&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/3ab537f16b81&#34;&gt;小流量如何进行AB测试&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;案例分享 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.csdn.net/article/2015-03-24/2824303&#34;&gt;大众点评AB测试框架Gemini&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000012377139&#34;&gt;新浪新闻客户端AB测试与灰度发布&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/tmall-app-ab-test&#34;&gt;天猫App A/B测试实践&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;工具 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.eyeofcloud.com/124.html&#34;&gt;AB测试样本数量计算器&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.eyeofcloud.com/126.html&#34;&gt;AB测试结果有效性分析工具&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;8.4. “服务端推”&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.im/post/5b135b78f265da6e420eab7d&#34;&gt;各类“服务器推”技术原理与实例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/31297574&#34;&gt;长连接/websocket/SSE等主流服务器推送技术比较&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/web/wa-lo-comet/&#34;&gt;Comet：基于 HTTP 长连接的“服务器推”技术&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-deep-dive-into-websockets-and-http-2-with-sse-how-to-pick-the-right-path-584e6b8e3bf7&#34;&gt;深入 WebSockets、HTTP/2 SSE [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://security.tencent.com/index.php/blog/msg/119&#34;&gt;WebSocket 应用安全问题分析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;8.5. 动效&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uDqjIdI4bF4&#34;&gt;动画设计的12个原则🎥 [英]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.html-js.com/article/1628&#34;&gt;贝塞尔曲线扫盲&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aotu.io/notes/2018/03/06/ae2web/&#34;&gt;动画：从 AE 到 Web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;最全最好用的动效落地方法： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/34501702&#34;&gt;基础知识&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/34815524&#34;&gt;落地方式&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;9. 其他&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;开卷有益。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://raganwald.com/2018/05/20/we-dont-need-no-stinking-recursion.html&#34;&gt;Recursion? We don&#39;t need no stinking recursion!&lt;/a&gt;：如何将一些递归改为循环&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ben.akrin.com/?p=5997&#34;&gt;Turning your web traffic into a Super Computer&lt;/a&gt;：通过 Web Worker 和 WebSocket 来将全世界的电脑连接成超级计算机&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@cramforce/designing-very-large-javascript-applications-6e013a3291a3&#34;&gt;Designing very large (JavaScript) applications&lt;/a&gt;：高屋建瓴&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.figma.com/blog/building-a-professional-design-tool-on-the-web/&#34;&gt;Building a professional design tool on the web&lt;/a&gt;：如何使用 Web 技术来创建一个设计/渲染系统&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://craftinginterpreters.com/&#34;&gt;Crafting Interpreters&lt;/a&gt;：详细介绍了如何实现一个解释器&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Masterminds/html5-php</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/Masterminds/html5-php</id>
    <link href="https://github.com/Masterminds/html5-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An HTML5 parser and serializer for PHP.&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;h1&gt;UKRAINE NEEDS YOUR HELP NOW!&lt;/h1&gt; &#xA; &lt;p&gt;On 24 February 2022, Russian &lt;a href=&#34;https://www.bbc.com/news/world-europe-60504334&#34;&gt;President Vladimir Putin ordered an invasion of Ukraine by Russian Armed Forces&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Your support is urgently needed.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Donate to the volunteers. Here is the volunteer fund helping the Ukrainian army to provide all the necessary equipment: &lt;a href=&#34;https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi&#34;&gt;https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi&lt;/a&gt; or &lt;a href=&#34;https://savelife.in.ua/en/donate/&#34;&gt;https://savelife.in.ua/en/donate/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Triple-check social media sources. Russian disinformation is attempting to coverup and distort the reality in Ukraine.&lt;/li&gt; &#xA;  &lt;li&gt;Help Ukrainian refugees who are fleeing Russian attacks and shellings: &lt;a href=&#34;https://www.globalcitizen.org/en/content/ways-to-help-ukraine-conflict/&#34;&gt;https://www.globalcitizen.org/en/content/ways-to-help-ukraine-conflict/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Put pressure on your political representatives to provide help to Ukraine.&lt;/li&gt; &#xA;  &lt;li&gt;Believe in the Ukrainian people, they will not surrender, they don&#39;t have another Ukraine.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;THANK YOU!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;HTML5-PHP&lt;/h1&gt; &#xA;&lt;p&gt;HTML5 is a standards-compliant HTML5 parser and writer written entirely in PHP. It is stable and used in many production websites, and has well over &lt;a href=&#34;https://packagist.org/packages/masterminds/html5&#34;&gt;five million downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;HTML5 provides the following features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An HTML5 serializer&lt;/li&gt; &#xA; &lt;li&gt;Support for PHP namespaces&lt;/li&gt; &#xA; &lt;li&gt;Composer support&lt;/li&gt; &#xA; &lt;li&gt;Event-based (SAX-like) parser&lt;/li&gt; &#xA; &lt;li&gt;A DOM tree builder&lt;/li&gt; &#xA; &lt;li&gt;Interoperability with &lt;a href=&#34;https://github.com/technosophos/querypath&#34;&gt;QueryPath&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Runs on &lt;strong&gt;PHP&lt;/strong&gt; 5.3.0 or newer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/Masterminds/html5-php&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Masterminds/html5-php.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://packagist.org/packages/masterminds/html5&#34;&gt;&lt;img src=&#34;https://poser.pugx.org/masterminds/html5/v/stable.png&#34; alt=&#34;Latest Stable Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/Masterminds/html5-php/?branch=master&#34;&gt;&lt;img src=&#34;https://scrutinizer-ci.com/g/Masterminds/html5-php/badges/coverage.png?b=master&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/Masterminds/html5-php/?branch=master&#34;&gt;&lt;img src=&#34;https://scrutinizer-ci.com/g/Masterminds/html5-php/badges/quality-score.png?b=master&#34; alt=&#34;Scrutinizer Code Quality&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://masterminds.github.io/stability/sustained.html&#34;&gt;&lt;img src=&#34;https://masterminds.github.io/stability/sustained.svg?sanitize=true&#34; alt=&#34;Stability: Sustained&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install HTML5-PHP using &lt;a href=&#34;http://getcomposer.org/&#34;&gt;composer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By adding the &lt;code&gt;masterminds/html5&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;require&#34; : {&#xA;    &#34;masterminds/html5&#34;: &#34;^2.0&#34;&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By invoking require command via composer executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require masterminds/html5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Usage&lt;/h2&gt; &#xA;&lt;p&gt;HTML5-PHP has a high-level API and a low-level API.&lt;/p&gt; &#xA;&lt;p&gt;Here is how you use the high-level &lt;code&gt;HTML5&lt;/code&gt; library API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php&#xA;// Assuming you installed from Composer:&#xA;require &#34;vendor/autoload.php&#34;;&#xA;&#xA;use Masterminds\HTML5;&#xA;&#xA;// An example HTML document:&#xA;$html = &amp;lt;&amp;lt;&amp;lt; &#39;HERE&#39;&#xA;  &amp;lt;html&amp;gt;&#xA;  &amp;lt;head&amp;gt;&#xA;    &amp;lt;title&amp;gt;TEST&amp;lt;/title&amp;gt;&#xA;  &amp;lt;/head&amp;gt;&#xA;  &amp;lt;body id=&#39;foo&#39;&amp;gt;&#xA;    &amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;p&amp;gt;This is a test of the HTML5 parser.&amp;lt;/p&amp;gt;&#xA;  &amp;lt;/body&amp;gt;&#xA;  &amp;lt;/html&amp;gt;&#xA;HERE;&#xA;&#xA;// Parse the document. $dom is a DOMDocument.&#xA;$html5 = new HTML5();&#xA;$dom = $html5-&amp;gt;loadHTML($html);&#xA;&#xA;// Render it as HTML5:&#xA;print $html5-&amp;gt;saveHTML($dom);&#xA;&#xA;// Or save it to a file:&#xA;$html5-&amp;gt;save($dom, &#39;out.html&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;$dom&lt;/code&gt; created by the parser is a full &lt;code&gt;DOMDocument&lt;/code&gt; object. And the &lt;code&gt;save()&lt;/code&gt; and &lt;code&gt;saveHTML()&lt;/code&gt; methods will take any DOMDocument.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;It is possible to pass in an array of configuration options when loading an HTML5 document.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// An associative array of options&#xA;$options = array(&#xA;  &#39;option_name&#39; =&amp;gt; &#39;option_value&#39;,&#xA;);&#xA;&#xA;// Provide the options to the constructor&#xA;$html5 = new HTML5($options);&#xA;&#xA;$dom = $html5-&amp;gt;loadHTML($html);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following options are supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;encode_entities&lt;/code&gt; (boolean): Indicates that the serializer should aggressively encode characters as entities. Without this, it only encodes the bare minimum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disable_html_ns&lt;/code&gt; (boolean): Prevents the parser from automatically assigning the HTML5 namespace to the DOM document. This is for non-namespace aware DOM tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;target_document&lt;/code&gt; (\DOMDocument): A DOM document that will be used as the destination for the parsed nodes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;implicit_namespaces&lt;/code&gt; (array): An assoc array of namespaces that should be used by the parser. Name is tag prefix, value is NS URI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Low-Level API&lt;/h2&gt; &#xA;&lt;p&gt;This library provides the following low-level APIs that you can use to create more customized HTML5 tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A SAX-like event-based parser that you can hook into for special kinds of parsing.&lt;/li&gt; &#xA; &lt;li&gt;A flexible error-reporting mechanism that can be tuned to document syntax checking.&lt;/li&gt; &#xA; &lt;li&gt;A DOM implementation that uses PHP&#39;s built-in DOM library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The unit tests exercise each piece of the API, and every public function is well-documented.&lt;/p&gt; &#xA;&lt;h3&gt;Parser Design&lt;/h3&gt; &#xA;&lt;p&gt;The parser is designed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;Scanner&lt;/code&gt; handles scanning on behalf of the parser.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;Tokenizer&lt;/code&gt; requests data off of the scanner, parses it, clasifies it, and sends it to an &lt;code&gt;EventHandler&lt;/code&gt;. It is a &lt;em&gt;recursive descent parser.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;EventHandler&lt;/code&gt; receives notifications and data for each specific semantic event that occurs during tokenization.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;DOMBuilder&lt;/code&gt; is an &lt;code&gt;EventHandler&lt;/code&gt; that listens for tokenizing events and builds a document tree (&lt;code&gt;DOMDocument&lt;/code&gt;) based on the events.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Serializer Design&lt;/h3&gt; &#xA;&lt;p&gt;The serializer takes a data structure (the &lt;code&gt;DOMDocument&lt;/code&gt;) and transforms it into a character representation -- an HTML5 document.&lt;/p&gt; &#xA;&lt;p&gt;The serializer is broken into three parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;OutputRules&lt;/code&gt; contain the rules to turn DOM elements into strings. The rules are an implementation of the interface &lt;code&gt;RulesInterface&lt;/code&gt; allowing for different rule sets to be used.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;Traverser&lt;/code&gt;, which is a special-purpose tree walker. It visits each node node in the tree and uses the &lt;code&gt;OutputRules&lt;/code&gt; to transform the node into a string.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;HTML5&lt;/code&gt; manages the &lt;code&gt;Traverser&lt;/code&gt; and stores the resultant data in the correct place.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The serializer (&lt;code&gt;save()&lt;/code&gt;, &lt;code&gt;saveHTML()&lt;/code&gt;) follows the &lt;a href=&#34;http://www.w3.org/TR/2012/CR-html5-20121217/syntax.html#serializing-html-fragments&#34;&gt;section 8.9 of the HTML 5.0 spec&lt;/a&gt;. So tags are serialized according to these rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A tag with children: &amp;lt;foo&amp;gt;CHILDREN&amp;lt;/foo&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;A tag that cannot have content: &amp;lt;foo&amp;gt; (no closing tag)&lt;/li&gt; &#xA; &lt;li&gt;A tag that could have content, but doesn&#39;t: &amp;lt;foo&amp;gt;&amp;lt;/foo&amp;gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues (Or, Things We Designed Against the Spec)&lt;/h2&gt; &#xA;&lt;p&gt;Please check the issue queue for a full list, but the following are issues known issues that are not presently on the roadmap:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Namespaces: HTML5 only &lt;a href=&#34;http://www.w3.org/TR/html5/infrastructure.html#namespaces&#34;&gt;supports a selected list of namespaces&lt;/a&gt; and they do not operate in the same way as XML namespaces. A &lt;code&gt;:&lt;/code&gt; has no special meaning. By default the parser does not support XML style namespaces via &lt;code&gt;:&lt;/code&gt;; to enable the XML namespaces see the &lt;a href=&#34;https://raw.githubusercontent.com/Masterminds/html5-php/master/#xml-namespaces&#34;&gt;XML Namespaces section&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scripts: This parser does not contain a JavaScript or a CSS interpreter. While one may be supplied, not all features will be supported.&lt;/li&gt; &#xA; &lt;li&gt;Rentrance: The current parser is not re-entrant. (Thus you can&#39;t pause the parser to modify the HTML string mid-parse.)&lt;/li&gt; &#xA; &lt;li&gt;Validation: The current tree builder is &lt;strong&gt;not&lt;/strong&gt; a validating parser. While it will correct some HTML, it does not check that the HTML conforms to the standard. (Should you wish, you can build a validating parser by extending DOMTree or building your own EventHandler implementation.) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;There is limited support for insertion modes.&lt;/li&gt; &#xA;   &lt;li&gt;Some autocorrection is done automatically.&lt;/li&gt; &#xA;   &lt;li&gt;Per the spec, many legacy tags are admitted and correctly handled, even though they are technically not part of HTML5.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Attribute names and values: Due to the implementation details of the PHP implementation of DOM, attribute names that do not follow the XML 1.0 standard are not inserted into the DOM. (Effectively, they are ignored.) If you&#39;ve got a clever fix for this, jump in!&lt;/li&gt; &#xA; &lt;li&gt;Processor Instructions: The HTML5 spec does not allow processor instructions. We do. Since this is a server-side library, we think this is useful. And that means, dear reader, that in some cases you can parse the HTML from a mixed PHP/HTML document. This, however, is an incidental feature, not a core feature.&lt;/li&gt; &#xA; &lt;li&gt;HTML manifests: Unsupported.&lt;/li&gt; &#xA; &lt;li&gt;PLAINTEXT: Unsupported.&lt;/li&gt; &#xA; &lt;li&gt;Adoption Agency Algorithm: Not yet implemented. (8.2.5.4.7)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;XML Namespaces&lt;/h2&gt; &#xA;&lt;p&gt;To use XML style namespaces you have to configure well the main &lt;code&gt;HTML5&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Masterminds\HTML5;&#xA;$html = new HTML5(array(&#xA;    &#34;xmlNamespaces&#34; =&amp;gt; true&#xA;));&#xA;&#xA;$dom = $html-&amp;gt;loadHTML(&#39;&amp;lt;t:tag xmlns:t=&#34;http://www.example.com&#34;/&amp;gt;&#39;);&#xA;&#xA;$dom-&amp;gt;documentElement-&amp;gt;namespaceURI; // http://www.example.com&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also add some default prefixes that will not require the namespace declaration, but its elements will be namespaced.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use Masterminds\HTML5;&#xA;$html = new HTML5(array(&#xA;    &#34;implicitNamespaces&#34;=&amp;gt;array(&#xA;        &#34;t&#34;=&amp;gt;&#34;http://www.example.com&#34;&#xA;    )&#xA;));&#xA;&#xA;$dom = $html-&amp;gt;loadHTML(&#39;&amp;lt;t:tag/&amp;gt;&#39;);&#xA;&#xA;$dom-&amp;gt;documentElement-&amp;gt;namespaceURI; // http://www.example.com&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks to...&lt;/h2&gt; &#xA;&lt;p&gt;The dedicated (and patient) contributors of patches small and large, who have already made this library better.See the CREDITS file for a list of contributors.&lt;/p&gt; &#xA;&lt;p&gt;We owe a huge debt of gratitude to the original authors of html5lib.&lt;/p&gt; &#xA;&lt;p&gt;While not much of the original parser remains, we learned a lot from reading the html5lib library. And some pieces remain here. In particular, much of the UTF-8 and Unicode handling is derived from the html5lib project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is released under the MIT license. The original html5lib library was also released under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;See LICENSE.txt&lt;/p&gt; &#xA;&lt;p&gt;Certain files contain copyright assertions by specific individuals involved with html5lib. Those have been retained where appropriate.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheCaduceus/WARP-UNLIMITED-ADVANCED</title>
    <updated>2022-06-03T01:30:26Z</updated>
    <id>tag:github.com,2022-06-03:/TheCaduceus/WARP-UNLIMITED-ADVANCED</id>
    <link href="https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get Unlimited amount of Data in Cloudflare&#39;s WARP+ VPN🔥&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WARP+ UNLIMITED (New Methods!😊)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;b&gt;Get Unlimited amount of Data in Cloudflare&#39;s WARP/WARP+ VPN, most versatile Script translated in our beloved Python!😍&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;b&gt;📑 INDEX&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;Easily navigate through out the guide and pick the best method that suits you and your requirements!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#warp-unlimited-new-methods&#34;&gt;WARP UNLIMITED ADVANCED&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#whats-new&#34;&gt;🆕What&#39;s New&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#-features&#34;&gt;📑 Features&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#before-you-proceed&#34;&gt;🪧Before you Proceed&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#%EF%B8%8F-how-to-use-&#34;&gt;⚙️ How to use ?&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#0first-get-your-warpwarp-id-by-going-into-settings--advanced--diagnostics-and-copy-the-id-under-client-configuration-section&#34;&gt;-&amp;gt;😅How to get WARP/WARP+ ID?&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/main/README.md#%EF%B8%8F-run-on-google-colab&#34;&gt;-&amp;gt;🕹️ Run on Google Colab&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#host-on-heroku&#34;&gt;-&amp;gt;⚡Host on Heroku (24*7)&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#-host-on-railway-app&#34;&gt;-&amp;gt;🧿 Host on Railway App (24*7)&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#-host-on-okteto&#34;&gt;-&amp;gt;🪬 Host on Okteto (24*7)&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/main/README.md#-run-on-kaggle&#34;&gt;-&amp;gt;🧩 Run on Kaggle&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#%EF%B8%8F-run-on-computer&#34;&gt;-&amp;gt;🖥️ Run on Computer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#-deploy-through-github-actions&#34;&gt;-&amp;gt;🧫 Deploy through GitHub Actions&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#-run-on-mobile-phone&#34;&gt;-&amp;gt;📲 Run on Mobile Phone&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#run-on-replit&#34;&gt;-&amp;gt;🎲Run on Replit&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#run-on-jupyter-server&#34;&gt;-&amp;gt;🧰Run on Jupyter Server&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#update-values&#34;&gt;📈Update Values&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#for-mobile&#34;&gt;-&amp;gt;📲For Mobile&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#%EF%B8%8Ffor-pc&#34;&gt;-&amp;gt;🖥️For PC&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#points-to-be-remembered&#34;&gt;🎯Points to be Remembered&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED#faq&#34;&gt;❓FAQ&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/main/README.md#%EF%B8%8Fhow-to-use-this-data-on-pc&#34;&gt;🖥️How to use this Data on PC?&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/main/README.md#contact-us&#34;&gt;⛑Contact Us!&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/main/README.md#%EF%B8%8Fcredits--thanks&#34;&gt;❤️Credits &amp;amp; Thanks&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;b&gt;🆕What&#39;s New&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;b&gt;1.Now get Hosted Script info on Telegram itself!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;2.Added Jupyter Server deployment method!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;3.Termux http/SSL Error now resolved!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;4.Railway app deployment will now not cause false ban.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;5.FAQ is now added to clear your doubts.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;6.Now you can set Variables in config.env also.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;7.HIDE ID option now added to choose if hide your WARP ID or not in log message send to Telegram.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;8.Okteto Deployment method now fixed!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;9.Run on Kaggle method now added!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;b&gt;📑 Features&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.Get 1GB Per 10 Seconds!🔥&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Run this almost everywhere!🤗&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🪧Before you Proceed&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;b&gt;1.Using this code on Google Colab will only work for 24 Hours if Time out preventer is used and that Tab is opened in your Phone or PC.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;2.If you deploy this Code through Heroku or Railway app and Okteto then it will run for lifetime!&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;3.It does not matter this trick works on both that&#39;s on WARP or WARP+.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;b&gt;⚙️ How to use ?&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;0.First Get your WARP/WARP+ ID by going into Settings &amp;gt; Advanced &amp;gt; Diagnostics and copy the ID under CLIENT CONFIGURATION section&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/1.jpg&#34; height=&#34;50%&#34; width=&#34;40%&#34; alt=&#34;1&#34;&gt; &#xA;&lt;h2&gt;&lt;b&gt;🕹️ Run on Google Colab&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First Open this Code on Google Colab:&lt;a href=&#34;https://colab.research.google.com/github/TheCaduceus/WARP-UNLIMITED-ADVANCED/blob/main/Wrap_Unlimited_Advanced.ipynb&#34; alt=&#34;Open-Colab&#34;&gt; Open Code!&lt;/a&gt; &lt;h4&gt;&lt;b&gt;2.Now Run the Timeout Preventer to prevent Google Colab from getting timeout&lt;/b&gt;&lt;/h4&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/2.png&#34; alt=&#34;2&#34;&gt; &lt;h4&gt;&lt;b&gt;3.Then Run The WARP+ (1.1.1.1) Code and Enter your Warp ID (Also Hit Enter after it!) as shown in the Image&lt;/b&gt;&lt;/h4&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/3.png&#34; alt=&#34;3&#34;&gt; &lt;h4&gt;&lt;b&gt;4.After that! Let the code run, It will give you 1GB per 10 Seconds. But you have to update the value in the app! To do it&lt;br&gt;Go to Settings &amp;gt; Advanced &amp;gt; Connection options and press on Reset security keys&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;&lt;i&gt;❗You have to manually update the Value in the app as written in above step❗&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt; &lt;h2&gt;&lt;b&gt;⚡Host on Heroku&lt;/b&gt;&lt;/h2&gt; &lt;h4&gt;&lt;b&gt;1.First Click the below Deploy button.&lt;/b&gt;&lt;/h4&gt; &lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/tree/Heroku&#34;&gt;&lt;img src=&#34;Img/Heroku Deployment Button.png&#34; alt=&#34;Deploy on Heroku&#34;&gt;&lt;/a&gt; &lt;h4&gt;&lt;b&gt;2.Now Enter the following values and click &#34;Deploy&#34; button:&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;b&gt; App Name: Give a unique name to your app name.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;b&gt; WARP_ID: Enter your WARP/WARP+ ID.&lt;br&gt; &lt;p&gt;&lt;/p&gt; SEND_LOG: If you want to receive info about your deployed script like script working?,amount of data generated or number of failed attempts. 0 for No and 1 for Yes.&lt;br&gt; &lt;p&gt;&lt;/p&gt; BOT_TOKEN: Enter BOT API TOKEN from Bot father which will send you the log in your channel or group. Bot must be admin in specific channel or group to send log. Required if SEND_LOG is 1.&lt;br&gt; &lt;p&gt;&lt;/p&gt; CHANNEL_ID: Enter Channel/Group ID (Channel/Group must be Public) with @ in which you want log to be send. Like @example or @mychannel.&lt;br&gt; &lt;p&gt;&lt;/p&gt; HIDE_ID: To hide WARP_ID in the log message send to Telegram Channel or Group. 0 for No and 1 for Yes. &lt;/b&gt;&lt;p&gt;&lt;/p&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/87380104/169662727-d4c012d6-ff6a-4505-bc7a-5307b240a186.png&#34; alt=&#34;4&#34;&gt; &lt;h4&gt;&lt;b&gt;3.After Deployment! Click &#34;Manage App&#34; button and then click &#34;Resources&#34; Tab and enable the dyno.&lt;/b&gt;&lt;/h4&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/5.png&#34; alt=&#34;5&#34;&gt; &lt;h4&gt;&lt;b&gt;4.Enjoy! Now you will get 1GB per 10 Seconds for Lifetime until your Heroku Account exist and you will start getting info about your script if SEND_LOG is enabled.&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;&lt;i&gt;❗You have to manually update the Value in the app To do it&lt;br&gt;Go to Settings &amp;gt; Advanced &amp;gt; Connection options and press on Reset security keys&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt;&lt;i&gt;❗&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🧿 Host on Railway App&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First Create Account or Login on &lt;a href=&#34;https://railway.app/&#34;&gt;Railway App&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/3.1.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now click the following Railway deployment button:&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;a href=&#34;https://railway.app/new/template/M78z7V?referralCode=PFHpF8&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Railway deploy button&#34;&gt;&lt;/a&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After it! Enter the following values:&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt; WARP_ID: Enter your WARP/WARP+ ID.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;b&gt; SEND_LOG: If you want to receive info about your deployed script like script working?,amount of data generated or number of failed attempts. 0 for No and 1 for Yes.&lt;br&gt; &lt;p&gt;&lt;/p&gt; BOT_TOKEN: Enter BOT API TOKEN from Bot father which will send you the log in your channel or group. Bot must be admin in specific channel or group to send log. Required if SEND_LOG is 1.&lt;br&gt; &lt;p&gt;&lt;/p&gt; CHANNEL_ID: Enter Channel/Group ID (Channel/Group must be Public) with @ in which you want log to be send. Like @example or @mychannel.&lt;br&gt; &lt;p&gt;&lt;/p&gt; HIDE_ID: To hide WARP_ID in the log message send to Telegram Channel or Group. 0 for No and 1 for Yes. &lt;/b&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;b&gt;&lt;i&gt;❗The Major Advantage of the Railway app is that, it never restarts. So it will generate more Amount of Data in 24 Hours if compared with Heroku.❗&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🪬 Host on Okteto&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;Okteto is also a best Platform like Railway, people like it because it does not restart your deployed app after 24 Hours unlike Heroku do. There are only some points we need to keep in our mind to use it effectively you will see it in this Section!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First Create your okteto Account, You need one GitHub account as okteto supports only one Method to either Create or Login: &lt;a href=&#34;https://cloud.okteto.com/#/login&#34;&gt;Create Account&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/1.1.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now import this Repository (keep the repository private) and go to Okteto branch and open config.env file.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/87380104/169828657-d5070f64-bea9-4295-832a-6ba570d9aa52.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After that, carefully fill the values of given variables:&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt; WARP_ID: Enter your WARP/WARP+ ID.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;b&gt; SEND_LOG: If you want to receive info about your deployed script like script working?,amount of data generated or number of failed attempts. 0 for No and 1 for Yes.&lt;br&gt; &lt;p&gt;&lt;/p&gt; BOT_TOKEN: Enter BOT API TOKEN from Bot father which will send you the log in your channel or group. Bot must be admin in specific channel or group to send log. Required if SEND_LOG is 1.&lt;br&gt; &lt;p&gt;&lt;/p&gt; CHANNEL_ID: Enter Channel/Group ID (Channel/Group must be Public) with @ in which you want log to be send. Like @example or @mychannel.&lt;br&gt; &lt;p&gt;&lt;/p&gt; HIDE_ID: To hide WARP_ID in the log message send to Telegram Channel or Group. 0 for No and 1 for Yes. &lt;/b&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/87380104/169828983-ffb5dd31-fe3d-45e2-b81b-5ef940e54e11.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;4.Then go to Okteto click on &#34;Launch Dev Environment&#34;, select your repository and change branch from main to okteto.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/87380104/169829816-932a51f6-8cbf-4d20-975c-dfc62e2b3b62.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;5.Finally! Click on Launch button to deploy your repository and Enjoy!😘 and whenever you have to change values then just update config.env file and redeploy it.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🧩 Run on Kaggle&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;b&gt;Kaggle gives you ability to execute your script at scheduled intervals (if logged in) and it is best alternative of Google Colab.&lt;/b&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First open my code on Kaggle:&lt;a href=&#34;https://www.kaggle.com/code/drcaduceus/warp-unlimited-advanced?scriptVersionId=96821593&#34;&gt; Open Code!&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now click on the &#34;Copy &amp;amp; Edit&#34; button as shown in the image.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/87380104/170821579-db3cc7ce-3f38-4949-9b47-23c953ba2008.png&#34; alt=&#34;Run on Kaggle&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After it! click on &#34;Run&#34; button and Enter your WARP/WARP+ ID as shown in the image.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/87380104/170821758-3cc6942c-6558-4811-b76e-dcbf0ebdeec3.png&#34;&gt; &#xA;&lt;h2&gt;&lt;b&gt;🖥️ Run on Computer&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;Running this script on your Computer is simple than ABC!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.If your PC not have python, then install it first: &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Download Python&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now first open the WRAP+ Unlimited Script code and paste it in notepad and save it as &#34;warp.py&#34; don&#39;t forget to type &#34;.py&#34;:&lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/raw/View-Script/Warp.md&#34;&gt; Show Code&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After it run the code as shown in the Image and Enter WARP ID and Hit Enter and Enjoy!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/6.png&#34; alt=&#34;6&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;&lt;i&gt;❗The Script will run and give you 1GB data / 10 Second until your PC is on and the Window is open. Make sure that your PC or Local System is connected to INTERNET CONNECTION.❗&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🧫 Deploy through GitHub Actions&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;This Method is too much easier and best for users who want to deploy this script multiple times on Heroku without login on Heroku again and again!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First fork my different Repository &lt;a href=&#34;https://github.com/TheCaduceus/GA-1OFM-&#34;&gt;here&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/1.9.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now open the settings of your Forked Repository and click Secrets-&amp;gt;Actions.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/2.0.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After doing that, create Following Secrets:&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt; HEROKU_API_KEY - Enter your Heroku API Key as value.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;b&gt;HEROKU_APP_NAME - A unique app name in small letters only.&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;b&gt; &lt;p&gt;HEROKU_EMAIL - Your Heroku Email ID.&lt;br&gt;&lt;/p&gt; &lt;p&gt;WARP_ID - Enter your WARP/WARP+ ID. In capital only!&lt;br&gt;&lt;/p&gt; &lt;p&gt;SEND_LOG - If you want to receive info about your deployed script like script working?,amount of data generated or number of failed attempts. 0 for No and 1 for Yes.&lt;br&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; BOT_TOKEN: Enter BOT API TOKEN from Bot father which will send you the log in your channel or group. Bot must be admin in specific channel or group to send log. Required if SEND_LOG is 1.&lt;br&gt; &lt;p&gt;&lt;/p&gt; CHANNEL_ID: Enter Channel/Group ID (Channel/Group must be Public) with @ in which you want log to be send. Like @example or @mychannel.&lt;br&gt; &lt;p&gt;&lt;/p&gt; HIDE_ID: To hide WARP_ID in the log message send to Telegram Channel or Group. 0 for No and 1 for Yes. &lt;/b&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/2.1.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;4.If you want! then at place of creating secrets of WARP_ID, SEND_LOG, BOT_TOKEN,CHANNEL_ID and HIDE_ID just write their values in the &lt;a href=&#34;https://github.com/TheCaduceus/GA-1OFM-/raw/Heroku/config.env&#34;&gt;config.env file&lt;/a&gt; given in the repository and directly deploy it by just providing HEROKU_API_KEY, HEROKU_APP_NAME and HEROKU_EMAIL.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;5.Go to Actions Tab then click &#34;Deploy on Heroku&#34; and &#34;Run Workflow&#34;. Now it will be automatically got deployed on given Heroku Account!😉&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/2.2.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;5.It will take maximum 10 Seconds to start the Workflow and minimum 1-2 Minutes to get deployed!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;📲 Run on Mobile Phone&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First Download the Termux app &lt;a href=&#34;https://github.com/termux/termux-app/releases&#34;&gt;from here&lt;/a&gt;.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now run the following commands in it one by one!&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt; 1.pkg install python - This Command will Download Python.&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;&#xA;&lt;b&gt; 2.pkg install git - This Command will Download Git.&lt;br&gt; &lt;p&gt;&lt;/p&gt; 3.git clone https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED - This Command will clone this Repository in your Device.&lt;br&gt; &lt;p&gt;&lt;/p&gt; 4.cd WARP-UNLIMITED-ADVANCED - This Command will set Directory to this Repository&#39;s created Folder.&lt;br&gt; &lt;p&gt;&lt;/p&gt; 5.python3 warp.py - This Command will run the main Script.&lt;br&gt; &lt;p&gt;&lt;/p&gt; &#xA; &lt;!--SSL is by default never comes---&gt; 6.Getting http/SSL Error? Run following code to fix it:&lt;br&gt; termux-setup-storage &amp;amp;&amp;amp; pkg update &amp;amp;&amp;amp; pkg i git python wget -y &amp;amp;&amp;amp; pkg upgrade &amp;amp;&amp;amp; pip install --upgrade pip &lt;p&gt;&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/Termux-Error-1.jpeg&#34;&gt; &lt;/b&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.After above! Now Enter your WARP ID and get started.😚&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;&lt;b&gt;🎲Run on Replit&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.Open the &#34;WARP UNLIMITED&#34; repl:&lt;a href=&#34;https://replit.com/@TheCaduceus/WARP-UNLIMITED&#34;&gt; Open it&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Enter your WARP/WARP+ ID and press Enter to run the script. Enjoy!🙃&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/repl-1.png&#34;&gt; &#xA;&lt;h2&gt;&lt;b&gt;🧰Run on Jupyter Server&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;This method is best &amp;amp; effective alternative of &#34;Run on Computer&#34; method! Before using this method, let see how to Download &amp;amp; Setup Jupyter server which is too lightweight.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;b&gt;Setting up the Jupyter Server:&lt;/b&gt;&lt;/h5&gt; &#xA;&lt;h4&gt;&lt;b&gt;1.First install Python:&lt;a href=&#34;https://www.python.org/downloads/&#34; alt=&#34;Download Python&#34;&gt; From Here&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;2.Now run the CMD as Administrator and execute following commands one-by-one:&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;b&gt;1.pip install jupyter - To install Jupyter&lt;br&gt; &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;b&gt;2.pip install notebook - To install Notebook&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&#xA;&lt;b&gt; &lt;p&gt;3.pip install voila - To install Voila&lt;br&gt;&lt;/p&gt; &lt;/b&gt;&#xA;&lt;p&gt;&lt;b&gt;4.python -m notebook - Start Jupyter Server &lt;/b&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;b&gt;3.Once you start your Server! Then Jupyter will give you its link (as shown in Image), just open it on your Browser.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/jp-1.png&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/jp-2.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;4.Now Download the &#34;Warp-on-Jupyter-Server.ipynb&#34; file:&lt;a href=&#34;https://www.caduceus.ml/files/Warp-on-Jupyter-Server.ipynb&#34; alt=&#34;Warp-on-Juypter-Server&#34;&gt; From Here only&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;b&gt;5.After downloading it! Locate that file through your Jupyter server and open it as shown in the image and click Run.&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/jp-3.png&#34;&gt; &#xA;&lt;h4&gt;&lt;b&gt;6.Now enter your WARP/WARP+ ID and press Enter to continue.Enjoy!😉&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/jp-4.png&#34;&gt; &#xA;&lt;h2&gt;&lt;b&gt;📈Update Values&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;b&gt;After Successfully Deploying or Running your Script! You have to update the &#34;Data Remaining Value in your App.&#34;&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;&lt;b&gt;📲For Mobile:&lt;/b&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;b&gt;Go to Settings--&amp;gt;Advanced--&amp;gt;Connection Options--&amp;gt;Press Reset Security Keys&lt;/b&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;&lt;b&gt;🖥️For PC:&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/h3&gt;&#xA;&lt;b&gt;&lt;b&gt; &lt;h4&gt;&lt;b&gt;Just again Enter your Activation key! For getting Activation key, Open App in Mobile--&amp;gt;Settings--&amp;gt;Account--&amp;gt;Copy Key&lt;/b&gt;&lt;/h4&gt; &lt;h2&gt;&lt;b&gt;🎯Points to be Remembered&lt;/b&gt;&lt;/h2&gt; &lt;h4&gt;&lt;b&gt;1.You have to manually update the Value in the app.&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;2.The Major Advantage of the Railway app is that, it never restarts. So it will generate more Amount of Data in 24 Hours if compared with Heroku&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;3.On your Computer,The Script will run and give you 1GB data / 10 Second until your PC is on and the Window is open.&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;4.This Tricks works on both! That&#39;s WARP or WARP+.&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;5.If you are hosting this Script on your PC or Local System then confirm that it is connected to INTERNET CONNECTION.&lt;/b&gt;&lt;/h4&gt; &lt;h2&gt;&lt;b&gt;❓FAQ&lt;/b&gt;&lt;/h2&gt; &lt;h4&gt;&lt;b&gt;1.How much scripts can I host/run for same account?&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;b&gt;I will recommend to host/run 3 or less than 3 (&amp;lt;3) scripts for each account because Cloudflare is API have request limits. Hosting/Running too many scripts can cause &#34;Too many Requests&#34; error which indicates that API getting too many requestes from same account and that is why there is a cooldown timer of 10 seconds to prevent this.&lt;/b&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;2.How to resolve &#34;Too many request&#34; Error?&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;b&gt;As already discussed above! Hosting/Running too many scripts for same account cause this. So just switch off the scripts and bring down the number to 3 or &amp;gt;3 scripts for same account. Please refer to &lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/issues/3&#34;&gt;Issue #3&lt;/a&gt; for more details on this.&lt;/b&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;3.Will this script cause any type of ban from Cloudflare?&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;b&gt;No, this script don&#39;t cause ban because it just use the API provided by Cloudflare for referral system. Neither this script create any type of load or bypass any limit set by Cloudflare for there API nor it hack anything or changes any official record.&lt;/b&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;4.Script not working &amp;amp; producing error as shown in the image in Termux. How to solve?&lt;/b&gt;&lt;/h4&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/main/Img/Termux-Error-1.jpeg&#34;&gt; &lt;p&gt;&lt;b&gt;This problem happens due to missing files! you can run the below given command in Termux to fix it easily:&lt;br&gt;termux-setup-storage &amp;amp;&amp;amp; pkg update &amp;amp;&amp;amp; pkg i git python wget -y &amp;amp;&amp;amp; pkg upgrade &amp;amp;&amp;amp; pip install --upgrade pip&lt;/b&gt;&lt;/p&gt; &lt;h4&gt;&lt;b&gt;5.Deploying this on Heroku/Railway/Okteto/Vercel cause any ban?&lt;/b&gt;&lt;/h4&gt; &lt;p&gt;&lt;b&gt;No, this script comes in category of Cron-Job because this script just take the WARP/WARP+ ID from user and arrange it in a particular format and start pining it in an interval of 10 seconds.This script is lightweight and don&#39;t have any load on system. You can refer to &lt;a href=&#34;https://github.com/TheCaduceus/WARP-UNLIMITED-ADVANCED/issues/5&#34;&gt;issue #5&lt;/a&gt; for more details on this.&lt;/b&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;🖥️How to use this Data on PC?&lt;/b&gt;&lt;/h2&gt; &lt;h4&gt;&lt;b&gt;Open the WARP or 1.1.1.1 app in your Phone and go to Settings &amp;gt; Account &amp;gt; Key and copy the License Key | Now paste that Key in your Warp app in Windows or MacOS&lt;/b&gt;&lt;/h4&gt; &lt;h2&gt;&lt;b&gt;⛑Contact Us!&lt;/b&gt;&lt;/h2&gt; &lt;h4&gt;&lt;b&gt;Join our Update Channel at Telegram:&lt;a href=&#34;https://telegram.me/TheCaduceusUPDATE&#34;&gt; Join Now!&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &lt;h4&gt;&lt;b&gt;Directly Contact the Developer using Telegram &lt;a href=&#34;https://telegram.me/HelpAutomatted_Bot&#34;&gt;@HelpAutomatted_Bot&lt;/a&gt;&lt;/b&gt;&lt;/h4&gt; &lt;h2&gt;&lt;b&gt;❤️Credits &amp;amp; Thanks&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TheCaduceus&#34;&gt;Dr.Caduceus&lt;/a&gt;: For heavy modification as well as making New 10 Methods and this all in one Guide.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ALIILAPRO&#34;&gt;ALI-B&lt;/a&gt;: The Original Developer of the Base Script&lt;/b&gt;&lt;/p&gt; &lt;/b&gt;&lt;/b&gt;</summary>
  </entry>
</feed>