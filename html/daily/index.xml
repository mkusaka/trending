<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-18T01:34:29Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ysx88/openwrt-packages</title>
    <updated>2023-11-18T01:34:29Z</updated>
    <id>tag:github.com,2023-11-18:/ysx88/openwrt-packages</id>
    <link href="https://github.com/ysx88/openwrt-packages" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenWrt 常用插件(含科学上网插件及依赖)&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&#34;center&#34;&gt;访客数 &lt;span&gt;👀&lt;/span&gt;&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://profile-counter.glitch.me/ysx88/count.svg?sanitize=true&#34; alt=&#34;ysx88 :: Visitor&#39;s Count&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ysx88/ysx88/main/assets/github-snake.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;OpenWrt — 常用插件包合集&lt;/h1&gt; &#xA; &lt;h3&gt;项目说明&lt;/h3&gt; &#xA; &lt;p&gt;OpenWrt 常用插件包源码合集，适用于 &lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;Lean&lt;/a&gt; 源码&lt;/p&gt; &#xA; &lt;p&gt;自动同步上游源码，一键拉取直接编译，不用再一个个找插件&lt;/p&gt; &#xA; &lt;p&gt;PassWall 依赖全部同步在 &lt;code&gt;openwrt-passwall&lt;/code&gt; 目录内，无需再额外拉取&lt;/p&gt; &#xA; &lt;p&gt;所有插件都为 GITHUB 上收集的开源插件，感谢作者们的付出&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;使用方法（以下二选一）&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;添加到 feeds.conf.default 文件&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;sed -i &#39;$a src-git pkgs https://github.com/ysx88/openwrt-packages&#39; feeds.conf.default&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;make menuconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;在源码目录内直接拉取&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;git clone https://github.com/ysx88/openwrt-packages package/openwrt-packages&#xA;make menuconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;插件中英文名称对照表&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;以下是全部：           注：应用后面标记 “ * ” 为最近新添加；标记“ ! ”与其他插件依赖或冲突。&#xA;-------------------------------------------------------------------------------------------------------------------&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-accesscontrol  #访问时间控制&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-acme  #ACME自动化证书管理环境（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-adblock   #ADB广告过滤&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-adbyby-plus  #广告屏蔽大师Plus +&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-adbyby   #广告过滤大师（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-adguardhome  #AdGuard home广告过滤（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-adkill   #广告过滤（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-advanced-reboot  #Linksys高级重启&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-advancedsetting  #系统高级设置（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ahcp  #Ad-Hoc配置协议(AHCP) ipv6 and 双栈 自动配置协议 !&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-airplay2   #Apple AirPlay2 无损音频接收服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-aliddns   #阿里DDNS客户端（丢弃，集成至ddns）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-aliyundrive-webdav  #阿里云盘 WebDAV 服务&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-amule  #aMule下载工具 !&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-argon-config  #Argon主题配置插件（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-aria2 # Aria2下载工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-arpbind  #IP/MAC绑定&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-asterisk  #支持Asterisk电话服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-attendedsysupgrade  #固件更新升级相关&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-autoreboot  #支持计划重启&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-baidupcs-web  #百度网盘管理&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bcp38  #BCP38网络入口过滤（不确定）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bird1-ipv4  #对Bird1-ipv4的支持&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bird1-ipv6  #对Bird1-ipv6的支持&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bird4   #Bird 4（未知）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bird6   #Bird 6（未知）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bmx6  #BMX6路由协议&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-bmx7  #BMX7路由协议（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-caldav  #联系人（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-cifs-mount   #CIFS/SMB挂载设置&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-cifsd  #CIFS/SMB网络共享&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-cjdns  #加密IPV6网络相关&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-clamav  #ClamAV杀毒软件&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-clash  #Clash客户端（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-commands  #Shell命令模块&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-cshark  #CloudShark捕获工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dawn  #分布式AP管理程序&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ddns   #动态域名 DNS（集成阿里DDNS客户端）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-diag-core   #core诊断工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-diskman   #磁盘管理工具&#xA;    luci-app-diskman ---&amp;gt; Include btrfs-progs   #新型的写时复制 (COW)&#xA;    luci-app-diskman ---&amp;gt; Include lsblk   #lsblk命令 用于列出所有可用块设备的信息&#xA;    luci-app-diskman ---&amp;gt; Include mdadm   #mdadm命令 用于创建、管理、监控RAID设备的工具&#xA;    luci-app-diskman ---&amp;gt; Include kmod-md-raid456   #RAID 4,5,6 驱动程序模块（丢弃）&#xA;    luci-app-diskman ---&amp;gt; Include kmod-md-linear   #RAID 驱动程序模块（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dnscrypt-proxy  #DNSCrypt解决DNS污染&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dnsfilter  #DNSFilter基于DNS的广告过滤&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dnsforwarder  #DNSForwarder防DNS污染&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dnspod  #DNSPod动态域名解析（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-docker  #Docker容器(dockerman更名为docker)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dump1090  #民航无线频率（不确定）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-dynapoint  #DynaPoint（未知）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-e2guardian   #Web内容过滤器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-easymesh   #简单MESH(可有线+无线回程)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-eqos  #基于IP地址限速（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-familycloud   #家庭云盘&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-fileassistant   #文件管理助手（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-filetransfer  #文件传输（可web安装ipk包）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-firewall   #添加防火墙&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-flowoffload  #Turbo ACC网络加速（集成FLOW,BBR,NAT,DNS（丢弃，移至TurboACC）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-freifunk-diagnostics   #freifunk组件 诊断（未知）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-freifunk-policyrouting  #freifunk组件 策略路由（未知）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-freifunk-widgets  #freifunk组件 索引（未知）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-frpc   #内网穿透Frp客户端&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-frps   #内网穿透Frp服务端&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-fwknopd  #Firewall Knock Operator服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-guest-wifi   #WiFi访客网络&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-gfwlist   #GFW域名列表（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-go-aliyundrive-webdav   #阿里云盘webdav协议(文件管理/同步等)  *&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-gost  #隐蔽的https代理（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-haproxy-tcp   #HAProxy负载均衡-TCP&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-hd-idle  #硬盘休眠&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-hnet  #Homenet Status家庭网络控制协议&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-https-dns-proxy  #通过HTTPS代理为DNS提供Web UI&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ipsec-vpnd  #VPN服务器 IPSec&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-jd-dailybonus  #京东签到服务&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-kodexplorer  #KOD可道云私人网盘（与vnStat冲突 ! ）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-kooldns  #VPN服务器 ddns替代方案（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-koolproxy  #KP去广告（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-lxc   #LXC容器管理&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-meshwizard #网络设置向导（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-minidlna   #完全兼容DLNA / UPnP-AV客户端的服务器软件&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mjpg-streamer   #兼容Linux-UVC的摄像头程序&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mtwifi  #MTWiFi驱动的支持 （丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mmc-over-gpio   #添加SD卡操作界面（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-multiwan   #多拨虚拟网卡（丢弃，移至syncdial）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mwan   #MWAN负载均衡（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-music-remote-center   #PCHiFi 数字转盘遥控&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mwan3   #MWAN3负载均衡&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-mwan3helper   #MWAN3分流助手&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-n2n_v2   #N2N内网穿透 N2N v2 VPN服务&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-netdata  #Netdata实时监控（图形化）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-nfs   #NFS网络共享&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-nft-qos  #QOS流控 Nftables版&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ngrokc  #Ngrok 内网穿透（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-nlbwmon   #网络带宽监视器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-noddos  #NodDOS Clients 阻止DDoS攻击&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-nps   #内网穿透nps&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ntpc   #NTP时间同步服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ocserv  #OpenConnect VPN服务&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-olsr  #OLSR配置和状态模块&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-olsr-services  #OLSR服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-olsr-viz   #OLSR可视化&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ocserv   #OpenConnect VPN服务（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-openclash  #运行在OpenWrt上的Clash代理客户端（Le库以外的插件）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-openvpn  #OpenVPN客户端&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-openvpn-server  #易于使用的OpenVPN服务器 Web-UI&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-oscam   #OSCAM服务器（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-p910nd   #打印服务器模块&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-pagekitec   #Pagekitec内网穿透客户端&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-passwall  #科学上网（Li大佬插件）&#xA;    Configuration ---&amp;gt; Include Brook  #Brook代理(跨平台强加密且不可检测代理)&#xA;    Configuration ---&amp;gt; Include ChinaDNS-NG  #防污染DNS服务&#xA;    Configuration ---&amp;gt; Include Haproxy  #HAProxy  #HAProxy负载均衡&#xA;    Configuration ---&amp;gt; Include Hysteria  #Hysteria双边加速工具&#xA;    Configuration ---&amp;gt; Include Kcptun  #Kcptun双边加速工具&#xA;    Configuration ---&amp;gt; Include NaiveProxy  #NaiveProxy代理(Chrome网络堆栈伪装流量)&#xA;    Configuration ---&amp;gt; Include PDNSD  #DNS服务器&#xA;    Configuration ---&amp;gt; Include Shadowsocks Libev Client  #SS Libev客户端(轻量级)&#xA;    Configuration ---&amp;gt; Include Shadowsocks Libev Server  #SS Libev服务端(轻量级)&#xA;    Configuration ---&amp;gt; Include Shadowsocks Rust Client  #SS Rust客户端(负载均衡/探测延迟)&#xA;    Configuration ---&amp;gt; Include ShadowsocksR Libev Client  #SSR Libev客户端(轻量级)&#xA;    Configuration ---&amp;gt; Include ShadowsocksR Libev Server  #SSR Libev服务端(轻量级)&#xA;    Configuration ---&amp;gt; Include Simple-Obfs (Shadowsocks plugin)  #simple-Obfs简单混淆工具(Nginx)&#xA;    Configuration ---&amp;gt; Include Trojan_GO  #Trojan_GO代理(直接模仿协议HTTPS)&#xA;    Configuration ---&amp;gt; Include Trojan_Plus  #Trojan_Plus代理(直接模仿协议HTTPS)&#xA;    Configuration ---&amp;gt; Include V2ray  #V2Ray代理&#xA;    Configuration ---&amp;gt; Include v2ray-plugin (Shadowsocks plugin)  #SS V2ray插件(WebSocket+TLS )&#xA;    Configuration ---&amp;gt; Include Xray  #Xray代理(XTLS)&#xA;    Configuration ---&amp;gt; Include Xray-Plugin (Shadowsocks Plugin)  #SS Xray插件(WebSocket+TLS )   *&#xA;    Configuration ---&amp;gt; Include Dns2socks  #DNS服务器（丢弃）&#xA;    Configuration ---&amp;gt; Include Redsocks2  #Redsocks2代理(透明TCP定向Socks/HTTPS代理服务器)（丢弃）&#xA;    Configuration ---&amp;gt; Include Shadowsocks  #SS代理（丢弃）&#xA;    Configuration ---&amp;gt; Include Shadowsocks Server  #SS服务器（丢弃）&#xA;    Configuration ---&amp;gt; Include Shadowsocks Rust (AEAD ciphers only)  #SS-RUST代理(AEAD加密)（丢弃）&#xA;    Configuration ---&amp;gt; Include ShadowsocksR   #SSR代理（丢弃）&#xA;    Configuration ---&amp;gt; Include ShadowsocksR Server  #SSR服务器（丢弃）&#xA;    Configuration ---&amp;gt; Include Https DNS Proxy(DoH)  #HttpsDNS服务（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-polipo  #Polipo代理(是一个小型且快速的网页缓存代理)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-pppoe-relay  #PPPoE NAT穿透 点对点协议（PPP）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-pptp-server  #VPN服务器 PPTP&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-privoxy  #Privoxy网络代理(带过滤无缓存)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ps3netsrv  #PS3 NET服务器(用于加载蓝光/游戏ISO/PKG)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-pushbot  #全能推送(钉钉推送,企业微信推送,Bark,PushPlus推送)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-qbittorrent  #BT下载工具(qBittorrent)&#xA;    Build Version Selection (Static Build)  ---&amp;gt; Static Build  #选择静态编译版本&#xA;    Build Version Selection (Static Build)  ---&amp;gt; Dynamic Build  #选择动态编译版本&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-qos   #流量服务质量(QoS)流控&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-radicale   #CalDAV/CardDAV同步工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ramfree  #释放内存&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-rclone  #命令行云端同步工具&#xA;    Include rclone-webui  #Rclone界面&#xA;    Include rclone-ng (another webui)  #Rclone另一个界面&#xA;    Include fuse-utils (mount cloud storage)  #fuse-utils（挂载云存储）（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-rp-pppoe-server  #Roaring Penguin PPPoE Server 服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-samba   #网络共享（Samba）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-samba4   #网络共享（Samba4）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-serverchan   #微信/Telegram推送的插件&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-sfe  #Turbo ACC网络加速（丢弃，移至TurboACC）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-shadowsocks   #SS科学上网（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-shadowsocks-libes  #SS-libev服务端&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-shairplay  #支持AirPlay功能&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-siitwizard  #SIIT配置向导  SIIT-Wizzard&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-simple-adblock  #简单的广告拦截&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-smartdns  #SmartDNS本地服务器（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-softethervpn  #SoftEther VPN服务器  NAT穿透&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-splash  #Client-Splash是无线MESH网络的一个热点认证系统&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-sqm  #流量智能队列管理（QOS）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-squid   #Squid代理服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ssr-plus   #SSR科学上网Plus+（Le大佬插件）&#xA;    Include libustream-ssl  ---&amp;gt; Include libustream-wolfssl  #选择wolfSSL库(传输层安全协议)&#xA;    Include libustream-ssl  ---&amp;gt; Include libustream-openssl  #选择OpenSSL库(传输层安全协议)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Kcptun  #Kcptun双边加速工具&#xA;    luci-app-ssr-plus ---&amp;gt; Include NaiveProxy  #NaiveProxy代理(Chrome网络堆栈伪装流量)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Redsocks2  #Redsocks2代理(透明TCP定向Socks/HTTPS代理服务器)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Libev Client  #SS Libev客户端(轻量级)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Libev Server  #SS Libev服务端(轻量级)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Rust Client  #SS Rust客户端(负载均衡/探测延迟)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Rust Server  #SS Rust服务端(负载均衡/探测延迟)&#xA;    luci-app-ssr-plus ---&amp;gt; Include ShadowsocksR Libev Client  #SSR Libev客户端(轻量级)&#xA;    luci-app-ssr-plus ---&amp;gt; Include ShadowsocksR Libev Server  #SSR Libev服务端(轻量级)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Simple-Obfs Plugin  #SS Simple-Obfs混淆代理(Nginx)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Trojan  #Trojan代理(直接模仿协议HTTPS)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks V2ray Plugin  #SS V2ray代理(WebSocket+TLS )&#xA;    luci-app-ssr-plus ---&amp;gt; Include Xray  #Xray代理(XTLS)&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks New Version  #新SS代理（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks  #SS代理（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Rust (AEAD ciphers only)  #SS-RUST代理(AEAD密码)  （丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include V2ray  #V2Ray代理（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Xray (V2RAY/Trojan-GO implemented)  #Xray代理（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Trojan-go  #Trojan-go代理（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Server  #SS服务器（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Shadowsocks Rust Server  #SS Rust服务器（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include ShadowsocksR Server  #SSR服务器（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include DNS2SOCKS  #DNS服务器（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include ShadowsocksR Socks and Tunnel（丢弃）&#xA;    luci-app-ssr-plus ---&amp;gt; Include Socks Server  #socks代理服务器（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ssr-pro  #SSR-Pro（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ssrserver-python  #ShadowsocksR Python服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-statistics  #流量监控工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-syncdial  #多拨虚拟网卡（原macvlan）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-tinyproxy  #Tinyproxy是 HTTP(S)代理服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-transmission   #BT下载工具&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-travelmate  #旅行路由器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-ttyd   #网页终端命令行&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-turboacc   #Turbo ACC 网络加速(支持 Fast Path 或者 硬件 NAT)&#xA;    luci-app-turboacc ---&amp;gt; Include Shortcut-FE  #Shortcut-FE 流量分载&#xA;    luci-app-turboacc ---&amp;gt; Include BBR CCA  #BBR拥塞控制算法提升TCP网络性能&#xA;    luci-app-turboacc ---&amp;gt; Include DNSForwarder  #DNS防污染 Forwarder&#xA;    luci-app-turboacc ---&amp;gt; Include DNSProxy  #DNS防污染 Proxy&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-udpxy  #udpxy做组播服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-uhttpd  #uHTTPd Web服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-unblockmusic  #解锁网易云灰色歌曲3合1新版本&#xA;    UnblockNeteaseMusic Golang Version  #Golang版本&#xA;    UnblockNeteaseMusic NodeJS Version  #NodeJS版本&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-unblockneteasemusic-go  #解除网易云音乐（合并）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-unblockneteasemusic-mini  #解除网易云音乐（合并）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-unbound  #Unbound DNS解析器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-upnp   #通用即插即用UPnP（端口自动转发）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-usb-printer  #USB 打印服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-uugamebooster  #UU网游加速器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-v2ray-server   #V2Ray 服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-v2ray-pro  #V2Ray透明代理（丢弃，集成SSR）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-verysync  #微力同步&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-vlmcsd  #KMS服务器设置&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-vnstat   #vnStat网络监控（图表）（与kodexplorer冲突 ! ）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-vpnbypass  #VPN BypassWebUI  绕过VPN设置&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-vsftpd  #FTP服务器&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-vssr  #VSSR科学上网（je大佬插件）&#xA;    luci-app-vssr ---&amp;gt; Include Xray  #Xray代理(XTLS)&#xA;    luci-app-vssr ---&amp;gt; Include Trojan  #Trojan代理(直接模仿协议HTTPS)&#xA;    luci-app-vssr ---&amp;gt; Include Kcptun  #Kcptun双边加速工具&#xA;    luci-app-vssr ---&amp;gt; Include Shadowsocks Xray Plugin  #SS Xray代理&#xA;    luci-app-vssr ---&amp;gt; Include ShadowsocksR Libev Server  #SSR Libev服务端(轻量级)&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-watchcat  #断网检测功能与定时重启&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-webadmin  #Web管理页面设置&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-webshell  #网页命令行终端（丢弃）&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-wifischedule  #WiFi 计划&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-wireguard  #VPN服务器 WireGuard状态&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-wireless-regdb  #WiFi无线&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-wol   #WOL网络唤醒&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-wrtbwmon  #实时流量监测&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-xlnetacc  #迅雷快鸟&#xA;LuCI ---&amp;gt; Applications ---&amp;gt; luci-app-zerotier  #ZeroTier内网穿透&#xA;----------------------------------------------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>steveruizok/perfect-freehand</title>
    <updated>2023-11-18T01:34:29Z</updated>
    <id>tag:github.com,2023-11-18:/steveruizok/perfect-freehand</id>
    <link href="https://github.com/steveruizok/perfect-freehand" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Draw perfect pressure-sensitive freehand lines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/assets/perfect-freehand-logo.svg?sanitize=true&#34; alt=&#34;Screenshot&#34; title=&#34;Perfect Freehand&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Draw perfect pressure-sensitive freehand lines.&lt;/p&gt; &#xA;&lt;p&gt;🔗 Curious? Try out a &lt;a href=&#34;https://perfect-freehand-example.vercel.app/&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;💅 Designer? Check out the &lt;a href=&#34;https://www.figma.com/community/plugin/950892731860805817&#34;&gt;Figma Plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;💕 Love this library? Consider &lt;a href=&#34;https://github.com/sponsors/steveruizok?frequency=recurring&amp;amp;sponsor=steveruizok&#34;&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also available in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🎯 &lt;a href=&#34;https://pub.dev/packages/perfect_freehand&#34;&gt;Flutter / Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐍 &lt;a href=&#34;https://github.com/bigbluebutton/perfect-freehand-python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#author&#34;&gt;Author&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install perfect-freehand&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn add perfect-freehand&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This package exports a function named &lt;code&gt;getStroke&lt;/code&gt; that will generate the points for a polygon based on an array of points.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/assets/process.gif&#34; alt=&#34;Screenshot&#34; title=&#34;A GIF showing a stroke with input points, outline points, and a curved path connecting these points&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To do this work, &lt;code&gt;getStroke&lt;/code&gt; first creates a set of spline points (red) based on the input points (grey) and then creates outline points (blue). You can render the result any way you like, using whichever technology you prefer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/s/perfect-freehand-example-biwyi?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark&#34;&gt;&lt;img src=&#34;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&#34; alt=&#34;Edit perfect-freehand-example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use this library, import the &lt;code&gt;getStroke&lt;/code&gt; function and pass it an array of &lt;strong&gt;input points&lt;/strong&gt;, such as those recorded from a user&#39;s mouse movement. The &lt;code&gt;getStroke&lt;/code&gt; function will return a new array of &lt;strong&gt;outline points&lt;/strong&gt;. These outline points will form a polygon (called a &#34;stroke&#34;) that surrounds the input points.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { getStroke } from &#39;perfect-freehand&#39;&#xA;&#xA;const inputPoints = [&#xA;  [0, 0],&#xA;  [10, 5],&#xA;  [20, 8],&#xA;  // ...&#xA;]&#xA;&#xA;const outlinePoints = getStroke(inputPoints)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You then can &lt;strong&gt;render&lt;/strong&gt; your stroke points using your technology of choice. See the &lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#rendering&#34;&gt;Rendering&lt;/a&gt; section for examples in SVG and HTML Canvas.&lt;/p&gt; &#xA;&lt;p&gt;You can &lt;strong&gt;customize&lt;/strong&gt; the appearance of the stroke shape by passing &lt;code&gt;getStroke&lt;/code&gt; a second parameter: an options object containing one or more options. See the &lt;a href=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/#options&#34;&gt;Options&lt;/a&gt; section for a full list of available options.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const stroke = getStroke(myPoints, {&#xA;  size: 32,&#xA;  thinning: 0.7,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The appearance of a stroke is effected by the &lt;strong&gt;pressure&lt;/strong&gt; associated with each input point. By default, the &lt;code&gt;getStroke&lt;/code&gt; function will simulate pressure based on the distance between input points.&lt;/p&gt; &#xA;&lt;p&gt;To use &lt;strong&gt;real pressure&lt;/strong&gt;, such as that from a pen or stylus, provide the pressure as the third number for each input point, and set the &lt;code&gt;simulatePressure&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const inputPoints = [&#xA;  [0, 0, 0.5],&#xA;  [10, 5, 0.7],&#xA;  [20, 8, 0.8],&#xA;  // ...&#xA;]&#xA;&#xA;const outlinePoints = getStroke(inputPoints, {&#xA;  simulatePressure: false,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition to providing points as an array of arrays, you may also provide your points as an &lt;strong&gt;array of objects&lt;/strong&gt; as show in the example below. In both cases, the value for pressure is optional (it will default to &lt;code&gt;.5&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const inputPoints = [&#xA;  { x: 0, y: 0, pressure: 0.5 },&#xA;  { x: 10, y: 5, pressure: 0.7 },&#xA;  { x: 20, y: 8, pressure: 0.8 },&#xA;  // ...&#xA;]&#xA;&#xA;const outlinePoints = getStroke(inputPoints, {&#xA;  simulatePressure: false,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Internally, the &lt;code&gt;getStroke&lt;/code&gt; function will convert your object points to array points, which will have an effect on performance. If you&#39;re using this library ambitiously and want to format your points as objects, consider modifying this library&#39;s &lt;code&gt;getStrokeOutlinePoints&lt;/code&gt; to use the object syntax instead (e.g. replacing all &lt;code&gt;[0]&lt;/code&gt; with &lt;code&gt;.x&lt;/code&gt;, &lt;code&gt;[1]&lt;/code&gt; with &lt;code&gt;.y&lt;/code&gt;, and &lt;code&gt;[2]&lt;/code&gt; with &lt;code&gt;.pressure&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import * as React from &#39;react&#39;&#xA;import { getStroke } from &#39;perfect-freehand&#39;&#xA;import { getSvgPathFromStroke } from &#39;./utils&#39;&#xA;&#xA;export default function Example() {&#xA;  const [points, setPoints] = React.useState([])&#xA;&#xA;  function handlePointerDown(e) {&#xA;    e.target.setPointerCapture(e.pointerId)&#xA;    setPoints([[e.pageX, e.pageY, e.pressure]])&#xA;  }&#xA;&#xA;  function handlePointerMove(e) {&#xA;    if (e.buttons !== 1) return&#xA;    setPoints([...points, [e.pageX, e.pageY, e.pressure]])&#xA;  }&#xA;&#xA;  const stroke = getStroke(points, {&#xA;    size: 16,&#xA;    thinning: 0.5,&#xA;    smoothing: 0.5,&#xA;    streamline: 0.5,&#xA;  })&#xA;&#xA;  const pathData = getSvgPathFromStroke(stroke)&#xA;&#xA;  return (&#xA;    &amp;lt;svg&#xA;      onPointerDown={handlePointerDown}&#xA;      onPointerMove={handlePointerMove}&#xA;      style={{ touchAction: &#39;none&#39; }}&#xA;    &amp;gt;&#xA;      {points &amp;amp;&amp;amp; &amp;lt;path d={pathData} /&amp;gt;}&#xA;    &amp;lt;/svg&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; For implementations in Typescript, see the example project included in this repository.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codesandbox.io/s/perfect-freehand-example-biwyi?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark&#34;&gt;&lt;img src=&#34;https://codesandbox.io/static/img/play-codesandbox.svg?sanitize=true&#34; alt=&#34;Edit perfect-freehand-example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;The options object is optional, as are each of its properties.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;The base size (diameter) of the stroke.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;thinning&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;.5&lt;/td&gt; &#xA;   &lt;td&gt;The effect of pressure on the stroke&#39;s size.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;smoothing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;.5&lt;/td&gt; &#xA;   &lt;td&gt;How much to soften the stroke&#39;s edges.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;streamline&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number&lt;/td&gt; &#xA;   &lt;td&gt;.5&lt;/td&gt; &#xA;   &lt;td&gt;How much to streamline the stroke.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;simulatePressure&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Whether to simulate pressure based on velocity.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;easing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;function&lt;/td&gt; &#xA;   &lt;td&gt;t =&amp;gt; t&lt;/td&gt; &#xA;   &lt;td&gt;An easing function to apply to each point&#39;s pressure.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;start&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;{ }&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tapering options for the start of the line.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;end&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;{ }&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tapering options for the end of the line.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;last&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Whether the stroke is complete.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When the &lt;code&gt;last&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, the line&#39;s end will be drawn at the last input point, rather than slightly behind it.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; options accept an object:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cap&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;Whether to draw a cap.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;taper&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;number or boolean&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;The distance to taper. If set to true, the taper will be the total length of the stroke.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;easing&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;function&lt;/td&gt; &#xA;   &lt;td&gt;t =&amp;gt; t&lt;/td&gt; &#xA;   &lt;td&gt;An easing function for the tapering effect.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;cap&lt;/code&gt; property has no effect when &lt;code&gt;taper&lt;/code&gt; is more than zero.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;getStroke(myPoints, {&#xA;  size: 8,&#xA;  thinning: 0.5,&#xA;  smoothing: 0.5,&#xA;  streamline: 0.5,&#xA;  easing: (t) =&amp;gt; t,&#xA;  simulatePressure: true,&#xA;  last: true,&#xA;  start: {&#xA;    cap: true,&#xA;    taper: 0,&#xA;    easing: (t) =&amp;gt; t,&#xA;  },&#xA;  end: {&#xA;    cap: true,&#xA;    taper: 0,&#xA;    easing: (t) =&amp;gt; t,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To create a stroke with a steady line, set the &lt;code&gt;thinning&lt;/code&gt; option to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To create a stroke that gets thinner with pressure instead of thicker, use a negative number for the &lt;code&gt;thinning&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Other Exports&lt;/h3&gt; &#xA;&lt;p&gt;For advanced usage, the library also exports smaller functions that &lt;code&gt;getStroke&lt;/code&gt; uses to generate its outline points.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;getStrokePoints&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A function that accepts an array of points (formatted either as &lt;code&gt;[x, y, pressure]&lt;/code&gt; or &lt;code&gt;{ x: number, y: number, pressure: number}&lt;/code&gt;) and (optionally) an options object. Returns a set of adjusted points as &lt;code&gt;{ point, pressure, vector, distance, runningLength }&lt;/code&gt;. The path&#39;s total length will be the &lt;code&gt;runningLength&lt;/code&gt; of the last point in the array.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { getStrokePoints } from &#39;perfect-freehand&#39;&#xA;import samplePoints from &#34;./samplePoints.json&#39;&#xA;&#xA;const strokePoints = getStrokePoints(samplePoints)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;getOutlinePoints&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A function that accepts an array of points (formatted as &lt;code&gt;{ point, pressure, vector, distance, runningLength }&lt;/code&gt;, i.e. the output of &lt;code&gt;getStrokePoints&lt;/code&gt;) and (optionally) an options object, and returns an array of points (&lt;code&gt;[x, y]&lt;/code&gt;) defining the outline of a pressure-sensitive stroke.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { getStrokePoints, getOutlinePoints } from &#39;perfect-freehand&#39;&#xA;import samplePoints from &#34;./samplePoints.json&#39;&#xA;&#xA;const strokePoints = getStrokePoints(samplePoints)&#xA;&#xA;const outlinePoints = getOutlinePoints(strokePoints)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Internally, the &lt;code&gt;getStroke&lt;/code&gt; function passes the result of &lt;code&gt;getStrokePoints&lt;/code&gt; to &lt;code&gt;getStrokeOutlinePoints&lt;/code&gt;, just as shown in this example. This means that, in this example, the result of &lt;code&gt;myOutlinePoints&lt;/code&gt; will be the same as if the &lt;code&gt;samplePoints&lt;/code&gt; array had been passed to &lt;code&gt;getStroke&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;StrokeOptions&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A TypeScript type for the options object. Useful if you&#39;re defining your options outside of the &lt;code&gt;getStroke&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { StrokeOptions, getStroke } from &#39;perfect-freehand&#39;&#xA;&#xA;const options: StrokeOptions = {&#xA;  size: 16,&#xA;}&#xA;&#xA;const stroke = getStroke(options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tips &amp;amp; Tricks&lt;/h2&gt; &#xA;&lt;h3&gt;Freehand Anything&lt;/h3&gt; &#xA;&lt;p&gt;While this library was designed for rendering the types of input points generated by the movement of a human hand, you can pass any set of points into the library&#39;s functions. For example, here&#39;s what you get when running &lt;a href=&#34;https://feathericons.com/&#34;&gt;Feather Icons&lt;/a&gt; through &lt;code&gt;getStroke&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/steveruizok/perfect-freehand/main/assets/icons.png&#34; alt=&#34;Icons&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Rendering&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;code&gt;getStroke&lt;/code&gt; returns an array of points representing the outline of a stroke, it&#39;s up to you to decide how you will render these points.&lt;/p&gt; &#xA;&lt;p&gt;The function below will turn the points returned by &lt;code&gt;getStroke&lt;/code&gt; into SVG path data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const average = (a, b) =&amp;gt; (a + b) / 2&#xA;&#xA;function getSvgPathFromStroke(points, closed = true) {&#xA;  const len = points.length&#xA;&#xA;  if (len &amp;lt; 4) {&#xA;    return ``&#xA;  }&#xA;&#xA;  let a = points[0]&#xA;  let b = points[1]&#xA;  const c = points[2]&#xA;&#xA;  let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(&#xA;    2&#xA;  )} ${average(b[0], c[0]).toFixed(2)},${average(b[1], c[1]).toFixed(2)} T`&#xA;&#xA;  for (let i = 2, max = len - 1; i &amp;lt; max; i++) {&#xA;    a = points[i]&#xA;    b = points[i + 1]&#xA;    result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `&#xA;  }&#xA;&#xA;  if (closed) {&#xA;    result += &#39;Z&#39;&#xA;  }&#xA;&#xA;  return result&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use this function, first run your input points through &lt;code&gt;getStroke&lt;/code&gt;, then pass the result to &lt;code&gt;getSvgPathFromStroke&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const outlinePoints = getStroke(inputPoints)&#xA;&#xA;const pathData = getSvgPathFromStroke(outlinePoints)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You could then pass this string of SVG path data either to an &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d&#34;&gt;SVG path&lt;/a&gt; element:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;path d={pathData} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you are rendering with HTML Canvas, you can pass the string to a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Path2D/Path2D#using_svg_paths&#34;&gt;&lt;code&gt;Path2D&lt;/code&gt; constructor&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const myPath = new Path2D(pathData)&#xA;&#xA;ctx.fill(myPath)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flattening&lt;/h3&gt; &#xA;&lt;p&gt;By default, the polygon&#39;s paths include self-crossings. You may wish to remove these crossings and render a stroke as a &#34;flattened&#34; polygon. To do this, install the &lt;a href=&#34;https://github.com/mfogel/polygon-clipping&#34;&gt;&lt;code&gt;polygon-clipping&lt;/code&gt;&lt;/a&gt; package and use the following function together with the &lt;code&gt;getSvgPathFromStroke&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import polygonClipping from &#39;polygon-clipping&#39;&#xA;&#xA;function getFlatSvgPathFromStroke(stroke) {&#xA;  const faces = polygonClipping.union([stroke])&#xA;&#xA;  const d = []&#xA;&#xA;  faces.forEach((face) =&amp;gt;&#xA;    face.forEach((points) =&amp;gt; {&#xA;      d.push(getSvgPathFromStroke(points))&#xA;    })&#xA;  )&#xA;&#xA;  return d.join(&#39; &#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development &amp;amp; Contributions&lt;/h2&gt; &#xA;&lt;p&gt;To work on this library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone this repo&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;yarn&lt;/code&gt; in the folder root to install dependencies&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;yarn start&lt;/code&gt; to start the local development server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The development server is located at &lt;code&gt;packages/dev&lt;/code&gt;. The library and its tests are located at &lt;code&gt;packages/perfect-freehand&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests are very welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;h3&gt;Support&lt;/h3&gt; &#xA;&lt;p&gt;Need help? Please &lt;a href=&#34;https://github.com/steveruizok/perfect-freehand/issues/new&#34;&gt;open an issue&lt;/a&gt; for support.&lt;/p&gt; &#xA;&lt;h3&gt;Discussion&lt;/h3&gt; &#xA;&lt;p&gt;Have an idea or casual question? Visit the &lt;a href=&#34;https://github.com/steveruizok/perfect-freehand/discussions&#34;&gt;discussion page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT&lt;/li&gt; &#xA; &lt;li&gt;...but if you&#39;re using &lt;code&gt;perfect-freehand&lt;/code&gt; in a commercial product, consider &lt;a href=&#34;https://github.com/sponsors/steveruizok?frequency=recurring&amp;amp;sponsor=steveruizok&#34;&gt;becoming a sponsor&lt;/a&gt;. 💰&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/steveruizok&#34;&gt;@steveruizok&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>