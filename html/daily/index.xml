<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-08T01:32:22Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>w3c/webauthn</title>
    <updated>2025-08-08T01:32:22Z</updated>
    <id>tag:github.com,2025-08-08:/w3c/webauthn</id>
    <link href="https://github.com/w3c/webauthn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web Authentication: An API for accessing Public Key Credentials&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Web Authentication Specification&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the W3C WebAuthn Working Group, producing the draft &lt;strong&gt;&#34;Web Authentication&#34;&lt;/strong&gt; specification.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://w3c.github.io/webauthn/&#34;&gt;The editor&#39;s copy is available at https://w3c.github.io/webauthn/&lt;/a&gt;, or in the &lt;a href=&#34;https://github.com/w3c/webauthn/raw/gh-pages/index.html&#34;&gt;&lt;code&gt;gh-pages&lt;/code&gt; branch of this repository&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The current &lt;em&gt;offically published working-draft snapshot&lt;/em&gt; &lt;a href=&#34;https://www.w3.org/TR/webauthn/&#34;&gt;is here: https://www.w3.org/TR/webauthn/&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/w3c/webauthn/actions&#34;&gt;The build history is available from the repo Actions tab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3.org/blog/webauthn/&#34;&gt;W3C WebAuthn Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/web-platform-tests/wpt/tree/master/webauthn&#34;&gt;Web platform tests repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;To materially contribute to this specification, you must meet the requirements outlined in &lt;a href=&#34;https://raw.githubusercontent.com/w3c/webauthn/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;. Also, before submitting feedback, please familiarize yourself with &lt;a href=&#34;https://github.com/w3c/webauthn/issues&#34;&gt;our current issues list&lt;/a&gt; and review the &lt;a href=&#34;https://lists.w3.org/Archives/Public/public-webauthn/&#34;&gt;mailing list discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Building the Draft&lt;/h1&gt; &#xA;&lt;p&gt;Formatted HTML for the draft can be built using &lt;code&gt;bikeshed&lt;/code&gt; (see below for instructions for &lt;code&gt;bikeshed&lt;/code&gt; installation):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bikeshed spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also want to use the &lt;code&gt;watch&lt;/code&gt; functionality to automatically regenerate as you make changes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bikeshed watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Bikeshed Installation and Setup&lt;/h1&gt; &#xA;&lt;p&gt;See the full instructions at &lt;a href=&#34;https://tabatkins.github.io/bikeshed/#installing&#34;&gt;https://tabatkins.github.io/bikeshed/#installing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need to have the Python 3.7 or later installed. Once you do have Python 3.7 or later installed, to install Bikeshed itself, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip3 install bikeshed &amp;amp;&amp;amp; bikeshed update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When that is completed, Bikeshed should be installed, and the &lt;code&gt;bikeshed&lt;/code&gt; command should work in your shell.&lt;/p&gt; &#xA;&lt;h1&gt;Continuous Integration &amp;amp; Branches&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://w3c.github.io/webauthn/&#34;&gt;https://w3c.github.io/webauthn/&lt;/a&gt; is autopublished from the &lt;code&gt;gh-pages&lt;/code&gt; branch on every push to the &lt;code&gt;main&lt;/code&gt; branch, using &lt;a href=&#34;https://github.com/w3c/webauthn/raw/main/.github/workflows/build-validate-publish.yml&#34;&gt;https://github.com/w3c/webauthn/blob/main/.github/workflows/build-validate-publish.yml&lt;/a&gt; to configure the autopublishing behavior.&lt;/p&gt; &#xA;&lt;h1&gt;Creating a new Working Draft&lt;/h1&gt; &#xA;&lt;p&gt;To build a new WD and upload it to the W3C publishing system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Register as a W3C member and join the Web Authentication working group. Note down your W3C USERNAME and PASSWORD to use in the command below. If you don&#39;t remember either one, please go &lt;a href=&#34;https://www.w3.org/accounts/recover&#34;&gt;here&lt;/a&gt; to retrieve it.&lt;/li&gt; &#xA; &lt;li&gt;Copy the url of the meeting minutes in which the working group decided to publish a new draft as the DECISION_URL to be used below&lt;/li&gt; &#xA; &lt;li&gt;Make sure Bikeshed is installed locally (follow the Bikeshed Installation and Setup section above)&lt;/li&gt; &#xA; &lt;li&gt;Go into the ./bikeshed directory and use git pull to update Bikeshed.&lt;/li&gt; &#xA; &lt;li&gt;Run the following command to update Bikeshed&#39;s datafiles:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bikeshed update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit the Bikeshed metadata to change the status from ED to WD (do not commit this change)&lt;/li&gt; &#xA; &lt;li&gt;Ensure Bikeshed can compile without any error or warning by running through the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bikeshed spec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build and upload the new draft with&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bikeshed echidna --u USERNAME --p PASSWORD --d DECISION_URL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command above will create a tarball of the HTML and images, and upload to Echidna, W3C&#39;s automated publishing system. The command should return a url, through which you can know whether you successfully publish the draft. Status of the request can also be tracked through the &lt;a href=&#34;https://lists.w3.org/Archives/Public/public-tr-notifications/&#34;&gt;Mailing List Archive&lt;/a&gt;. You can also use W3C API &lt;a href=&#34;https://github.com/w3c/echidna/wiki/How-to-use-Echidna&#34;&gt;as described in the Echidna documentation&lt;/a&gt;. Note that on Windows, this will give an error about failing to delete a temporary file because it is in use by a different process. This error is harmless; it happens after the submission has completed.&lt;/p&gt; &#xA;&lt;p&gt;If the publication through the process is unsuccessful, it&#39;s likely because of &lt;a href=&#34;https://github.com/w3c/specberus&#34;&gt;Specberus&lt;/a&gt;, a spec compliance checker. Echidna automatically runs through Specberus and will reject the publication if any error is reported by Specberus. You can run your document through &lt;a href=&#34;https://www.w3.org/pubrules/&#34;&gt;Pubrules&lt;/a&gt; to understand why your document is rejected. You may modify either the index.bs file or the index.html file to ensure compliance.&lt;/p&gt; &#xA;&lt;p&gt;More often than not, you will discover the &lt;a href=&#34;https://www.w3.org/pubrules/&#34;&gt;Pubrules&lt;/a&gt; errors are due to bugs in either Bikeshed or Specberus. If so, you will have to modify the compiled index.html file to bypass Echidna and use the &lt;a href=&#34;https://github.com/w3c/echidna/wiki/How-to-use-Echidna&#34;&gt;manual process&lt;/a&gt; to publish. While you are editing the html file to avoid errors, you should also check to ensure the document still renders correctly.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/w3c/echidna/wiki/How-to-use-Echidna&#34;&gt;manual process&lt;/a&gt; requires you to first create a tar file. To create the tar file, you need to first copy the index.html file and rename the copied file as Overview.html. This is because Echidna doesn&#39;t recognize index.html. You can then use the following command to create a tar file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -cvf WD.tar Overview.html image1 image2 image3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can run the following command curl to publish to Echidna (use the command at the same directory as your tar file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl &#39;https://labs.w3.org/echidna/api/request&#39; --user &#39;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&#39; -F &#34;tar=@WD.tar&#34; -F &#34;decision=&amp;lt;decisionUrl&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to contact your chair or any W3C staff when you are stuck. Overall info on echidna is here: &lt;a href=&#34;https://github.com/w3c/echidna/wiki&#34;&gt;https://github.com/w3c/echidna/wiki&lt;/a&gt; and here &lt;a href=&#34;https://labs.w3.org/echidna/&#34;&gt;https://labs.w3.org/echidna/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Taking meeting minutes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3.org/2008/04/scribe.html&#34;&gt;Scribe instructions from the W3C Guidebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3.org/2008/xmlsec/Group/Scribe-Instructions.html&#34;&gt;Alternate instructions from the XML Security WG&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>