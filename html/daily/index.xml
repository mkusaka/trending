<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-02T01:31:40Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uswds/uswds-site</title>
    <updated>2025-02-02T01:31:40Z</updated>
    <id>tag:github.com,2025-02-02:/uswds/uswds-site</id>
    <link href="https://github.com/uswds/uswds-site" rel="alternate"></link>
    <summary type="html">&lt;p&gt;USWDS website and documentation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;U.S. Web Design System documentation&lt;/h1&gt; &#xA;&lt;p&gt;This repo includes code and documentation for the U.S. Web Design System website. For information on the USWDS components and codebase, please visit our &lt;a href=&#34;https://github.com/uswds/uswds&#34;&gt;uswds&lt;/a&gt; Github repo.&lt;/p&gt; &#xA;&lt;p&gt;Note that this README includes steps to pull the latest version of USWDS into your local instance of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Running locally&lt;/h2&gt; &#xA;&lt;p&gt;The U.S. Web Design System documentation is built using Jekyll for the file framework, gulp for task management, and the node module for USWDS.&lt;/p&gt; &#xA;&lt;h3&gt;Before you start&lt;/h3&gt; &#xA;&lt;p&gt;Recommended before install:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ruby Version Manager - RVM &lt;a href=&#34;https://rvm.io/rvm/install&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node Version Manager - NVM &lt;a href=&#34;https://github.com/nvm-sh/nvm#installing-and-updating&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You will need to have the following installed on your machine before following the commands below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Ruby (see &lt;a href=&#34;https://github.com/uswds/uswds-site/raw/main/.ruby-version&#34;&gt;.ruby-version&lt;/a&gt; or &lt;a href=&#34;https://github.com/uswds/uswds-site/raw/main/.tool-versions&#34;&gt;.tool-versions&lt;/a&gt; for version number), &lt;a href=&#34;https://www.ruby-lang.org/en/documentation/installation/&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node (see &lt;a href=&#34;https://github.com/uswds/uswds-site/raw/main/.nvmrc&#34;&gt;.nvmrc&lt;/a&gt; or &lt;a href=&#34;https://github.com/uswds/uswds-site/raw/main/.tool-versions&#34;&gt;.tool-versions&lt;/a&gt; for version number), &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bundler (see &lt;a href=&#34;https://github.com/uswds/uswds-site/raw/main/.bundler-version&#34;&gt;.bundler-version&lt;/a&gt; for version number), &lt;a href=&#34;https://bundler.io/guides/using_bundler_in_applications.html#getting-started---installing-bundler-and-bundle-init&#34;&gt;Installation guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome v59 or higher (v60 if on Windows)&lt;/li&gt; &#xA; &lt;li&gt;Python v2.7* (For node-gyp dependency)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;⚠️ Potential issues and workarounds&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you&#39;re running into node-gyp issues on &lt;code&gt;npm install&lt;/code&gt; you&#39;ll need to install python v2.7, which is the recommended version as of &lt;code&gt;node-gyp@3.8.0&lt;/code&gt;. Once installed you can reference it via &lt;code&gt;npm config set python /usr/bin/python2.7&lt;/code&gt; or wherever you have installed. You can find that with &lt;code&gt;whereis python&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04 users might run into: &lt;code&gt;bundler: failed to load command: jekyll (/usr/share/rvm/gems/ruby-3.0.2/bin/jekyll)&lt;/code&gt;. Install ffi with the following flag to work around it &lt;code&gt;gem install ffi -- --disable-system-libffi&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building the documentation with gulp&lt;/h3&gt; &#xA;&lt;p&gt;Some parts of the documentation are built using &lt;a href=&#34;http://gulpjs.com/&#34;&gt;gulp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To work on the site, switch to your local copy of the repository in terminal then run the following commands to install project dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that all of your dependencies are installed, you can run your local server by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to &lt;code&gt;127.0.0.1:4000&lt;/code&gt; in your browser — you should be viewing a local instance of &lt;a href=&#34;https://designsystem.digital.gov&#34;&gt;designsystem.digital.gov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few other utility commands you may find useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm run clean&lt;/code&gt;: Cleans out copied-over dependency assets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm run lint&lt;/code&gt;: Runs &lt;code&gt;eslint&lt;/code&gt; and &lt;code&gt;sass-lint&lt;/code&gt; against JavaScript and Sass files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm test&lt;/code&gt;: Runs all tests and linters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm run watch&lt;/code&gt;: Runs a series of commands that watches for any changes in both USWDS node module and the root level asset folders in this repo.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm start -- --incremental&lt;/code&gt; or &lt;code&gt;npm run serve&lt;/code&gt;: Runs your local server with incremental regeneration enabled to greatly improve build time. Use instead of &lt;code&gt;npm start&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using the latest version of the &lt;code&gt;uswds&lt;/code&gt; package&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes you will want to use the latest version of the &lt;code&gt;uswds&lt;/code&gt; repo. Follow these steps to do so:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the latest version of the &lt;a href=&#34;https://github.com/uswds/uswds/tree/develop&#34;&gt;&lt;code&gt;uswds&lt;/code&gt; repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install the dependencies required for the package in the &lt;code&gt;uswds&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run build&lt;/code&gt; to create the built version of USWDS in the &lt;code&gt;uswds&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm link&lt;/code&gt; in the &lt;em&gt;root level&lt;/em&gt; of the &lt;code&gt;uswds&lt;/code&gt; directory on your local machine.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm link uswds&lt;/code&gt; in the &lt;em&gt;root level&lt;/em&gt; of the &lt;code&gt;uswds-site&lt;/code&gt; directory on your local machine.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm start&lt;/code&gt; in the &lt;code&gt;uswds&lt;/code&gt; directory, and make a note of the &lt;code&gt;Local URL&lt;/code&gt; that is being served.&lt;/li&gt; &#xA; &lt;li&gt;In another terminal window, set the &lt;code&gt;LIBRARY_BASE_URL&lt;/code&gt; env var to the running instance of &lt;code&gt;uswds&lt;/code&gt;. In your terminal window in the &lt;code&gt;uswds-site&lt;/code&gt; directory, enter &lt;code&gt;export LIBRARY_BASE_URL=&#34;http://127.0.0.1:6006&#34;&lt;/code&gt; (or the &lt;code&gt;Local URL&lt;/code&gt; noted above).&lt;/li&gt; &#xA; &lt;li&gt;In the &lt;code&gt;uswds-site&lt;/code&gt; window, run &lt;code&gt;npm run serve&lt;/code&gt; in the &lt;code&gt;uswds-site&lt;/code&gt; directory to start the Jekyll server.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run watch&lt;/code&gt; in the &lt;code&gt;uswds-site&lt;/code&gt; directory to have changes to that repo automatically built and compiled. Note: &lt;code&gt;uswds-site&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; automatically rebuild when there are changes in &lt;code&gt;uswds&lt;/code&gt;, you&#39;ll need to trigger a site rebuild manually to reflect changes in the &lt;code&gt;uswds&lt;/code&gt; repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You are now linked and using the local version of USWDS. To unlink this version, type &lt;code&gt;npm unlink uswds&lt;/code&gt; from the &lt;em&gt;root level&lt;/em&gt; of the &lt;code&gt;uswds&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Components&lt;/h3&gt; &#xA;&lt;p&gt;This documentation site showcases USWDS components by pulling in pre-built HTML from the USWDS &lt;code&gt;html-templates&lt;/code&gt; directory. This HTML is pulled in via a custom &lt;code&gt;library_component&lt;/code&gt; Jekyll tag, which takes the full name of the component as a parameter.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment and previews&lt;/h3&gt; &#xA;&lt;p&gt;This site is deployed on &lt;a href=&#34;https://cloud.gov/pages/&#34;&gt;cloud.gov Pages&lt;/a&gt;, which automatically builds the public site whenever commits are pushed to &lt;code&gt;main&lt;/code&gt;. Pages also builds public previews for each branch pushed to GitHub.&lt;/p&gt; &#xA;&lt;p&gt;⚠️ When generating new sections, sometimes they fail to build on Pages. You can clear the cache by running a simple &lt;code&gt;bundle update&lt;/code&gt;, which will trigger a fresh build.&lt;/p&gt; &#xA;&lt;h3&gt;Updating the USWDS version&lt;/h3&gt; &#xA;&lt;p&gt;To update the version of USWDS being used, change the version that &lt;code&gt;package.json&lt;/code&gt; specifies in its &lt;code&gt;dependencies&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;We currently pull USWDS via git rather than npm, as it allows us to use any tag or commit during development. To install a specific commit, you can use e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --save &#34;uswds/uswds#fb49e4f&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, to use a specific version tag, use e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --save &#34;uswds/uswds#v1.3.1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This version number or commit hash is automatically parsed when the site is built and used for display on the site (see &lt;code&gt;_plugins/uswds_version.rb&lt;/code&gt; for details). Therefore, be sure to use an actual version tag on all &lt;code&gt;main&lt;/code&gt; branch commits--otherwise a commit hash will show up as the version on the production site, which would be confusing.&lt;/p&gt; &#xA;&lt;h3&gt;Adding content to the &#34;Updates&#34; section&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/uswds/uswds-site/main/_posts/#readme&#34;&gt;&lt;code&gt;_posts&lt;/code&gt; directory&lt;/a&gt; for instructions on adding updates.&lt;/p&gt; &#xA;&lt;h3&gt;Dynamic content&lt;/h3&gt; &#xA;&lt;p&gt;Some of the content on the documentation site is dynamically fetched from GitHub. If you want to ensure that its API won&#39;t rate-limit you, you may want to &lt;a href=&#34;https://github.com/blog/1509-personal-api-tokens&#34;&gt;create an access token&lt;/a&gt; and assign it to your &lt;code&gt;GITHUB_ACCESS_TOKEN&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;The dynamic content is stored in the &lt;code&gt;.jekyll_get_cache&lt;/code&gt; directory and won&#39;t be re-fetched once it&#39;s cached there. However, this means that your data can get stale over time, so if you want to ensure that your site is using the very latest data, you&#39;ll want to clear the cache by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf .jekyll_get_cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read through our &lt;a href=&#34;https://raw.githubusercontent.com/uswds/uswds-site/main/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. These guidelines are directions for opening issues and submitting pull requests, and they also detail the coding and design standards we follow.&lt;/p&gt;</summary>
  </entry>
</feed>