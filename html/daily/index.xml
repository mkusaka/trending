<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-21T01:35:17Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jerry-git/learn-python3</title>
    <updated>2023-05-21T01:35:17Z</updated>
    <id>tag:github.com,2023-05-21:/jerry-git/learn-python3</id>
    <link href="https://github.com/jerry-git/learn-python3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jupyter notebooks for teaching/learning Python 3&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/jerry-git/learn-python3/master/logo.png&#34; alt=&#34;logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Learn Python 3&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains a collection of materials for teaching/learning Python 3 (3.10+).&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Have Python 3.10 or newer installed. You can check the version by typing &lt;code&gt;python3 --version&lt;/code&gt; in your command line. You can download the latest Python version from &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Have &lt;a href=&#34;http://jupyter.readthedocs.io/en/latest/install.html&#34;&gt;Jupyter Notebook installed&lt;/a&gt;. &lt;code&gt;pip install jupyter&lt;/code&gt; is sufficient in most cases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you can not access Python and/or Jupyter Notebook on your machine, you can still follow the web based materials. However, you should be able to use Jupyter Notebook in order to complete the exercises.&lt;/p&gt; &#xA;&lt;h4&gt;Usage (locally)&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone or download this repository.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;jupyter notebook&lt;/code&gt; command in your command line in the repository directory.&lt;/li&gt; &#xA; &lt;li&gt;Jupyter Notebook session will open in the browser and you can start navigating through the materials.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Usage (Binder in the cloud)&lt;/h4&gt; &#xA;&lt;p&gt;You can also just use &lt;a href=&#34;https://mybinder.org/&#34;&gt;Binder:&lt;/a&gt; By clicking of this &lt;a href=&#34;https://mybinder.org/v2/gh/jerry-git/learn-python3/master&#34;&gt;&lt;img src=&#34;https://mybinder.org/badge_logo.svg?sanitize=true&#34; alt=&#34;Binder&#34;&gt;&lt;/a&gt; badge, the project is opened in a Jupyter instance in the cloud and you can then navigate to the folders containing the notebooks and start them each and interactively explore them!&lt;/p&gt; &#xA;&lt;h4&gt;Contributing&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jerry-git/learn-python3/raw/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Beginner&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/01_strings.html&#34;&gt;Strings&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/01_strings.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/01_strings_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/02_numbers.html&#34;&gt;Numbers&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/02_numbers.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/02_numbers_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/03_conditionals.html&#34;&gt;Conditionals&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/03_conditionals.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/03_conditionals_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/04_lists.html&#34;&gt;Lists&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/04_lists.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/04_lists_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/05_dictionaries.html&#34;&gt;Dictionaries&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/05_dictionaries.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/05_dictionaries_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/06_for_loops.html&#34;&gt;For loops&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/06_for_loops.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/06_for_loops_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/07_functions.html&#34;&gt;Functions&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/07_functions.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/07_functions_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/08_testing1.html&#34;&gt;Testing with pytest - part 1&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/08_testing1.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/08_testing1_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recap exercise 1 &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/09_recap1_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/10_file_io.html&#34;&gt;File I\O&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/10_file_io.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/10_file_io_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/11_classes.html&#34;&gt;Classes&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/11_classes.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/11_classes_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/12_exceptions.html&#34;&gt;Exceptions&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/12_exceptions.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/12_exceptions_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/13_modules_and_packages.html&#34;&gt;Modules and packages&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/13_modules_and_packages.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/14_debugging.html&#34;&gt;Debugging&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/14_debugging.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/14_debugging_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/15_std_lib.html&#34;&gt;Goodies of the Standard Library - part 1&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/15_std_lib.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/15_std_lib1_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/16_testing2.html&#34;&gt;Testing with pytest - part 2&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/16_testing2.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/16_testing2_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/17_venv.html&#34;&gt;Virtual environment&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/17_venv.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/beginner/html/18_project_structure.html&#34;&gt;Project structure&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/notebooks/18_project_structure.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recap exercise 2 &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/beginner/exercises/19_recap2_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Intermediate&lt;/h2&gt; &#xA;&lt;h4&gt;Idiomatic Python&lt;/h4&gt; &#xA;&lt;p&gt;Python is a powerful language which contains many features not presented in most other programming languages. Idiomatic section will cover some of these Pythonic features in detail. These materials are especially useful for people with background in other programming languages.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/01_idiomatic_loops.html&#34;&gt;Idiomatic loops&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/01_idiomatic_loops.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/02_idiomatic_dicts.html&#34;&gt;Idiomatic dictionaries&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/02_idiomatic_dicts.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/03_idiomatic_misc1.html&#34;&gt;Idiomatic Python - miscellaneous part 1&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/03_idiomatic_misc1.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/04_idiomatic_misc2.html&#34;&gt;Idiomatic Python - miscellaneous part 2&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/04_idiomatic_misc2.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Idiomatic Python exercise &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/exercises/05_idiomatic_python_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Step up your &lt;code&gt;pytest&lt;/code&gt; game&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/01_pytest_fixtures.html&#34;&gt;Efficient use of fixtures&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/01_pytest_fixtures.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Best practices&lt;/h4&gt; &#xA;&lt;p&gt;A list of best development practices for Python projects. Most of the practices listed here are also applicable for other languages, however the presented tooling focuses mainly on Python.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/01_best_practices.html&#34;&gt;Best practices&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/01_best_practices.ipynb&#34;&gt;[notebook]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;General topics&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jerry-git.github.io/learn-python3/notebooks/intermediate/html/01_std_lib2.html&#34;&gt;Goodies of the Standard Library - part 2&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/notebooks/01_std_lib2.ipynb&#34;&gt;[notebook]&lt;/a&gt; &lt;a href=&#34;http://nbviewer.jupyter.org/github/jerry-git/learn-python3/blob/master/notebooks/intermediate/exercises/01_std_lib2_exercise.ipynb&#34;&gt;[exercise]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logo: Abdur-Rahmaan Janhangeer, &lt;a href=&#34;https://github.com/Abdur-rahmaanJ&#34;&gt;@Abdur-rahmaanJ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rocketseat-education/nlw12-spacetime-explorer</title>
    <updated>2023-05-21T01:35:17Z</updated>
    <id>tag:github.com,2023-05-21:/rocketseat-education/nlw12-spacetime-explorer</id>
    <link href="https://github.com/rocketseat-education/nlw12-spacetime-explorer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aplicação de recordação de memórias desenvolvida no NLW 12&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Rocketseat Education&#34; src=&#34;https://avatars.githubusercontent.com/u/69590972?s=200&amp;amp;v=4&#34; width=&#34;100px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Rocketseat&amp;amp;message=Education&amp;amp;color=8257e5&amp;amp;labelColor=202024&#34; alt=&#34;Rocketseat Project&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rocketseat-education/nlw12-spacetime-explorer/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=License&amp;amp;message=MIT&amp;amp;color=8257e5&amp;amp;labelColor=202024&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;💻 Projeto&lt;/h2&gt; &#xA;&lt;p&gt;Aplicação de recordação de memórias, onde o usuário poderá adicionar à uma timeline textos, fotos e vídeos de acontecimentos marcantes da sua vida, organizados por mês e ano.&lt;/p&gt; &#xA;&lt;h2&gt;📝 Licença&lt;/h2&gt; &#xA;&lt;p&gt;Esse projeto está sob a licença MIT. Veja o arquivo &lt;a href=&#34;https://raw.githubusercontent.com/rocketseat-education/nlw12-spacetime-explorer/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; para mais detalhes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Feito com 💜 by Rocketseat &lt;/p&gt; &#xA;&lt;!--START_SECTION:footer--&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/rocketseat&#34; target=&#34;_blank&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://storage.googleapis.com/golden-wind/comunidade/rodape.svg?sanitize=true&#34; alt=&#34;banner&#34;&gt; &lt;/a&gt; &lt;/p&gt; ---</summary>
  </entry>
  <entry>
    <title>tc39/proposal-promise-with-resolvers</title>
    <updated>2023-05-21T01:35:17Z</updated>
    <id>tag:github.com,2023-05-21:/tc39/proposal-promise-with-resolvers</id>
    <link href="https://github.com/tc39/proposal-promise-with-resolvers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;Promise.withResolvers&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Stage: 2&lt;/p&gt; &#xA;&lt;p&gt;Champions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Peter Klecha (&lt;a href=&#34;https://github.com/peetklecha&#34;&gt;@peetklecha&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Chris de Almeida (&lt;a href=&#34;https://github.com/ctcpip&#34;&gt;@ctcpip&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Authors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Peter Klecha (&lt;a href=&#34;https://github.com/peetklecha&#34;&gt;@peetklecha&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1CEh2xgW-KB0Tpz2GQtcJ8nDbWq99d3y8NCwYJw-laSI&#34;&gt;Stage 2 slides&lt;/a&gt; &lt;a href=&#34;https://docs.google.com/presentation/d/18CqQc6GfZJBWmT7li2nqfvrSFhpNwtQWPfSXhAwo-Bo&#34;&gt;Stage 1 slides&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Synopsis&lt;/h2&gt; &#xA;&lt;p&gt;When hand-rolling a Promise, the user must pass an executor callback which takes two arguments: a resolve function, which triggers resolution of the promise, and a reject function, which triggers rejection. This works well if the callback can embed a call to an asynchronous function which will eventually trigger the resolution or rejection, e.g., the registration of an event listener.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const promise = new Promise((resolve, reject) =&amp;gt; {&#xA;  asyncRequest(config, response =&amp;gt; {&#xA;    const buffer = [];&#xA;    response.on(&#39;data&#39;, data =&amp;gt; buffer.push(data));&#xA;    response.on(&#39;end&#39;, () =&amp;gt; resolve(buffer));&#xA;    response.on(&#39;error&#39;, reason =&amp;gt; reject(reason));&#xA;  });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Often however developers would like to configure the promise&#39;s resolution and rejection behavior after instantiating it. Today this requires a cumbersome workaround to extract the resolve and reject functions from the callback scope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let resolve, reject;&#xA;const promise = new Promise((res, rej) =&amp;gt; {&#xA;  resolve = res;&#xA;  reject = rej;&#xA;});&#xA;asyncRequest(config, response =&amp;gt; {&#xA;  const buffer = [];&#xA;  response.on(&#39;callback-request&#39;, id =&amp;gt; {&#xA;    promise.then(data =&amp;gt; callback(id, data));&#xA;  });&#xA;  response.on(&#39;data&#39;, data =&amp;gt; buffer.push(data));&#xA;  response.on(&#39;end&#39;, () =&amp;gt; resolve(buffer));&#xA;  response.on(&#39;error&#39;, reason =&amp;gt; reject(reason));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Developers may also have requirements that necessitate passing resolve/reject to more than one caller, so they MUST implement it this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let resolve = () =&amp;gt; { };&#xA;let reject = () =&amp;gt; { };&#xA;&#xA;function request(type, message) {&#xA;  if (socket) {&#xA;    const promise = new Promise((res, rej) =&amp;gt; {&#xA;      resolve = res;&#xA;      reject = rej;&#xA;    });&#xA;    socket.emit(type, message);&#xA;    return promise;&#xA;  }&#xA;&#xA;  return Promise.reject(new Error(&#39;Socket unavailable&#39;));&#xA;}&#xA;&#xA;socket.on(&#39;response&#39;, response =&amp;gt; {&#xA;  if (response.status === 200) {&#xA;    resolve(response);&#xA;  }&#xA;  else {&#xA;    reject(new Error(response));&#xA;  }&#xA;});&#xA;&#xA;socket.on(&#39;error&#39;, err =&amp;gt; {&#xA;  reject(err);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is boilerplate code that is very frequently re-written by developers. This proposal simply seeks to add a static method, tentatively called &lt;code&gt;withResolvers&lt;/code&gt;, to the &lt;code&gt;Promise&lt;/code&gt; constructor which returns a promise along with its resolution and rejection functions conveniently exposed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const { promise, resolve, reject } = Promise.withResolvers();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method or something like it may be known to some committee members under the name &lt;code&gt;defer&lt;/code&gt; or &lt;code&gt;deferred&lt;/code&gt;, names also sometimes applied to utility functions in the ecosystem. This proposal adopts a more descriptive name for now, but awaits bikeshedding.&lt;/p&gt; &#xA;&lt;h2&gt;Existing implementations&lt;/h2&gt; &#xA;&lt;p&gt;Libraries and applications continually re-invent this wheel. Below are just a handful of examples.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;React&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/facebook/react/raw/d9e0485c84b45055ba86629dc20870faca9b5973/packages/react-dom/src/__tests__/ReactDOMFizzStaticBrowser-test.js#L95&#34;&gt;inline example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vuejs/core/raw/9c304bfe7942a20264235865b4bb5f6e53fdee0d/packages/runtime-core/src/compat/componentAsync.ts#L32&#34;&gt;inline example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Axios&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/axios/axios/raw/bdf493cf8b84eb3e3440e72d5725ba0f138e0451/lib/cancel/CancelToken.js#L20&#34;&gt;inline example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/1d96eb489e559f4f61522edb3c8b5987bbe948af/src/harness/util.ts#L121&#34;&gt;utility&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vite&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vitejs/vite/raw/134ce6817984bad0f5fb043481502531fee9b1db/playground/test-utils.ts#L225&#34;&gt;inline example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deno stdlib&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://deno.land/std@0.178.0/async/deferred.ts?source&#34;&gt;utility&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Choice points&lt;/h2&gt; &#xA;&lt;p&gt;There is the question of how this method should behave in cases of subclassing. There are two options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On subclasses of &lt;code&gt;Promise&lt;/code&gt;, the &lt;code&gt;withResolvers&lt;/code&gt; method should produce instances of the subclass.&lt;/li&gt; &#xA; &lt;li&gt;On subclasses of &lt;code&gt;Promise&lt;/code&gt;, the &lt;code&gt;withResolvers&lt;/code&gt; method should produce plain Promises.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The current spec describes option 1.&lt;/p&gt;</summary>
  </entry>
</feed>