<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-09T01:39:14Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>joshhighet/ransomwatch</title>
    <updated>2023-06-09T01:39:14Z</updated>
    <id>tag:github.com,2023-06-09:/joshhighet/ransomwatch</id>
    <link href="https://github.com/joshhighet/ransomwatch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;the original, transparent ransomware claim tracker ü•∑üèºüßÖüñ•Ô∏è&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; &lt;a href=&#34;https://ransomwatch.telemetry.ltd&#34;&gt; ransomwatch üëÄ ü¶Ö &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/ransomwatch.yml&#34;&gt; &lt;img src=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/ransomwatch.yml/badge.svg?sanitize=true&#34; alt=&#34;ransomwatch engine&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/ransomwatch-build.yml&#34;&gt; &lt;img src=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/ransomwatch-build.yml/badge.svg?sanitize=true&#34; alt=&#34;ransomwatch dockerimage builder&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/codeql-analysis.yml&#34;&gt; &lt;img src=&#34;https://github.com/joshhighet/ransomwatch/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;ransomwatch codeql analysis&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;ransomwatch trails the extortion sites used by ransomware groups and surfaces an aggregated feed of claims&lt;/p&gt; &#xA;&lt;p&gt;please use the &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/issues/new?assignees=&amp;amp;labels=%E2%9C%A8+enhancement&amp;amp;template=newgroup.yml&amp;amp;title=new+group%3A+&#34;&gt;&lt;em&gt;issue template&lt;/em&gt;&lt;/a&gt; when making submissions for new groups&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;‚ö†Ô∏è&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;content within &lt;code&gt;ransomwatch.telemetry.ltd&lt;/code&gt;, &lt;code&gt;posts.json&lt;/code&gt;, &lt;code&gt;groups.json&lt;/code&gt; alongside the &lt;code&gt;docs/&lt;/code&gt; &amp;amp; &lt;code&gt;source/&lt;/code&gt; directories is dynamically generated based on hosting choices of real-world threat actors in near-real-time.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;whilst sanitisation efforts have been taken, by viewing or accessing ransomwatch you acknowledge you are doing so at your own risk&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h5&gt;if you leverage ransomwatch in commercial platforms, please consider becoming a &lt;a href=&#34;https://github.com/sponsors/joshhighet&#34;&gt;sponsor&lt;/a&gt; üíû&lt;/h5&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;key outputs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;web://&lt;/code&gt; &lt;a href=&#34;https://ransomwatch.telemetry.ltd&#34;&gt;&lt;code&gt;ransomwatch.telemetry.ltd&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;json://&lt;/code&gt; &lt;a href=&#34;https://ransomwhat.telemetry.ltd/posts&#34;&gt;&lt;code&gt;ransomwhat.telemetry.ltd/posts&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;json://&lt;/code&gt; &lt;a href=&#34;https://ransomwhat.telemetry.ltd/groups&#34;&gt;&lt;code&gt;ransomwhat.telemetry.ltd/groups&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;code&gt;groups.json&lt;/code&gt; contains hosts, nodes, relays and mirrors for a tracked group or actor&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;code&gt;posts.json&lt;/code&gt; contains extracted posts, noted by their discovery time and accountable group&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;technicals&lt;/h2&gt; &#xA;&lt;p&gt;this is a live repository which leverages a combination of github actions and a &lt;a href=&#34;https://docs.github.com/en/actions/using-containerized-services/about-service-containers&#34;&gt;service container&lt;/a&gt; to visit, parse &amp;amp; report on monitored hosts in near-realtime in a self-contained manor.&lt;/p&gt; &#xA;&lt;p&gt;content fetching is done with &lt;a href=&#34;https://github.com/psf/requests&#34;&gt;psf/requests&lt;/a&gt; - if rendering is required &lt;a href=&#34;https://github.com/mozilla/geckodriver&#34;&gt;mozilla/geckodriver&lt;/a&gt; and &lt;a href=&#34;https://github.com/SeleniumHQ/selenium&#34;&gt;seleniumhq/selenium&lt;/a&gt; are leveraged.&lt;/p&gt; &#xA;&lt;p&gt;the frontend is ultimatley markdown, generated with &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/markdown.py&#34;&gt;markdown.py&lt;/a&gt; and served with &lt;a href=&#34;https://github.com/docsifyjs/docsify&#34;&gt;docsifyjs/docsify&lt;/a&gt; thanks to &lt;a href=&#34;https://pages.github.com&#34;&gt;pages.github.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;graphs or visualisations are generated with &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/plotting.py&#34;&gt;plotting.py&lt;/a&gt; with the help of &lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;matplotlib/matplotlib&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;post indexing is done with a mix of &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; within &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/parsers.py&#34;&gt;parsers.py&lt;/a&gt; - it&#39;s brittle and like any Ã¥Ã≠ÃÅHÃ∂Ã§ÃìTÃ∏ÃôÃÖMÃ∂ÕáÃæLÃ∑ÕëÕÖ Ã¥ÃôÃèpÃ∏Ã°ÕÜaÃ∑ÃõÃ¶rÃµÃ¨ÃøsÃ¥ÃôÕõƒ©Ã¥Ã∫nÃ∏ÃîÕúgÃ∏ÃòÃà, has a limited lifetime.&lt;/p&gt; &#xA;&lt;h2&gt;tools&lt;/h2&gt; &#xA;&lt;p&gt;rendered HTML for each page is viewable within the &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/tree/main/source&#34;&gt;source&lt;/a&gt; directory&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/screenshotter.py&#34;&gt;screenshotter.py&lt;/a&gt; &lt;em&gt;a playwright script to generate high-resolution screenshots of online hosts&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/srcanalyser.py&#34;&gt;srcanalyser.py&lt;/a&gt; &lt;em&gt;a basic extractor for emails, internal and external links found within page source&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/browse-hosts.sh&#34;&gt;browse-hosts.sh&lt;/a&gt; &lt;em&gt;a simple cURL based iterator for sweeping URL checks&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/sources.zsh&#34;&gt;sources.zsh&lt;/a&gt; &lt;em&gt;an aggregator of various locations that surface new groups for ransomwatch&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/uptimekuma-importer.py&#34;&gt;uptimekuma-importer.py&lt;/a&gt; &lt;em&gt;a script to convert the group data into a &lt;a href=&#34;https://github.com/louislam/uptime-kuma&#34;&gt;uptime-kuma&lt;/a&gt; configuration file&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/assets/parsers.sh&#34;&gt;parsers.sh&lt;/a&gt; &lt;em&gt;a health-check script that provides details on parsers that are returning no fields&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;cli operations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;fetching hidden services requires a tor circuit! establish one with;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -p9050:9050 ghcr.io/joshhighet/torsocc:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;‚ûú  ransomwatch git:(main) ‚úó ./ransomwatch.py --help&#xA;&#xA;       _______________                        |*\_/*|________&#xA;      |  ___________  |                      ||_/-\_|______  |&#xA;      | |           | |                      | |           | |&#xA;      | |   0   0   | |                      | |   0   0   | |&#xA;      | |     -     | |                      | |     -     | |&#xA;      | |   \___/   | |                      | |   \___/   | |&#xA;      | |___     ___| |                      | |___________| |&#xA;      |_____|\_/|_____|                      |_______________|&#xA;        _|__|/ \|_|_.............üíî.............._|________|_&#xA;       / ********** \                          / ********** \&#xA;     /  ************  \     ransomwhat?      /  ************  \&#xA;    --------------------                    --------------------&#xA;&#xA;usage: ransomwatch.py [-h] [--name NAME] [--location LOCATION]&#xA;                      [--append APPEND]&#xA;                      {add,append,scrape,parse,list,markdown,check}&#xA;&#xA;üëÄ ü¶Ö ransomwatch&#xA;&#xA;positional arguments:&#xA;  {add,append,scrape,parse,list,markdown,check}&#xA;                        operation to execute&#xA;&#xA;options:&#xA;  -h, --help            show this help message and exit&#xA;  --name NAME           provider name&#xA;  --location LOCATION   onionsite fqdn&#xA;  --append APPEND       add onionsite fqdn to existing record&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;newly indexed posts can be sent to discord by providing a &lt;code&gt;DISCORD_WEBHOOK&lt;/code&gt; var when running &lt;code&gt;parse&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DISCORD_WEBHOOK=https://discord.com/api/webhooks/xxxxx/xxx ./ransomwatch.py parse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;381&#34; src=&#34;https://github.com/joshhighet/ransomwatch/assets/17993143/53226d1e-475b-4e80-8af5-727c153e6b4c&#34;&gt; &#xA;&lt;h2&gt;datamap&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;erDiagram&#xA;    groups_json ||--|{ group : contains&#xA;    group {&#xA;        string name &#34;group name&#34;&#xA;        boolean captcha &#34;captcha status&#34;&#xA;        boolean parser &#34;parser status&#34;&#xA;        boolean javascript_render &#34;javascript status&#34;&#xA;        string meta &#34;freeform text&#34;&#xA;        string url &#34;notable articles and references&#34;&#xA;    }&#xA;    group ||--|{ locations : has&#xA;    locations {&#xA;        string fqdn &#34;fully qualified domain name&#34;&#xA;        string title &#34;page title&#34;&#xA;        int version &#34;hidden service version&#34;&#xA;        string slug &#34;full URI&#34;&#xA;        boolean available &#34;availability status&#34;&#xA;        datetime updated &#34;timestamp of last update&#34;&#xA;        datetime lastscrape &#34;timestamp of last scrape&#34;&#xA;        boolean enabled &#34;status&#34;&#xA;    }&#xA;    group ||--|{ post : references&#xA;    post {&#xA;        string post_title &#34;post title&#34;&#xA;        string group_name &#34;associated group name&#34;&#xA;        datetime discovered &#34;timestamp of discovery&#34;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;ransomwatch is &lt;a href=&#34;https://github.com/joshhighet/ransomwatch/raw/main/LICENSE&#34;&gt;licensed&lt;/a&gt; under &lt;a href=&#34;https://unlicense.org&#34;&gt;unlicense.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/pulsar-site</title>
    <updated>2023-06-09T01:39:14Z</updated>
    <id>tag:github.com,2023-06-09:/apache/pulsar-site</id>
    <link href="https://github.com/apache/pulsar-site" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Pulsar Site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Pulsar Site&lt;/h1&gt; &#xA;&lt;p&gt;This repository will be used to store the generated Apache Pulsar website in the asf-site-next branch.&lt;/p&gt; &#xA;&lt;h1&gt;How to contribute?&lt;/h1&gt; &#xA;&lt;p&gt;You can the full details explaining how this website is built, how to make changes, preview them and more &lt;a href=&#34;https://pulsar.apache.org/contribute/site-intro/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Submit &lt;a href=&#34;https://github.com/apache/pulsar/issues/new&#34;&gt;an issue&lt;/a&gt; on the &lt;a href=&#34;http://github.com/apache/pulsar&#34;&gt;main repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send an email to the &lt;a href=&#34;mailto:dev@pulsar.apache.org&#34;&gt;dev mailing list&lt;/a&gt; (&lt;a href=&#34;mailto:dev-subscribe@pulsar.apache.org&#34;&gt;subscribe&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ask on the &lt;a href=&#34;https://apache-pulsar.slack.com/channels/contributors&#34;&gt;#contributors channel on Pulsar Slack&lt;/a&gt; (&lt;a href=&#34;https://pulsar.apache.org/community#section-discussions&#34;&gt;join&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>beejjorgensen/bgnet</title>
    <updated>2023-06-09T01:39:14Z</updated>
    <id>tag:github.com,2023-06-09:/beejjorgensen/bgnet</id>
    <link href="https://github.com/beejjorgensen/bgnet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Beej&#39;s Guide to Network Programming source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Beej&#39;s Guide to Network Programming&lt;/h1&gt; &#xA;&lt;p&gt;This is the source for Beej&#39;s Guide to Network Programming.&lt;/p&gt; &#xA;&lt;p&gt;If you merely wish to read the guide, please visit the &lt;a href=&#34;https://beej.us/guide/bgnet/&#34;&gt;Beej&#39;s Guide to Network Programming&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;p&gt;This is here so that Beej has everything in a repo and so translators can easily clone it.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Gnu make&lt;/a&gt; (XCode make works, too)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python 3+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc 2.7.3+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;XeLaTeX (can be found in &lt;a href=&#34;https://www.tug.org/texlive/&#34;&gt;TeX Live&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Liberation_fonts&#34;&gt;Liberation fonts&lt;/a&gt; (sans, serif, mono)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mac dependencies install (reopen terminal after doing this):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xcode-select --install                  # installs make&#xA;brew install python                     # installs Python3&#xA;brew install pandoc&#xA;brew install mactex --cask              # installs XeLaTeX&#xA;brew tap homebrew/cask-fonts&#xA;brew install font-liberation            # installs sans, serif, and mono&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &lt;code&gt;make&lt;/code&gt; from the top-level directory.&lt;/p&gt; &lt;p&gt;If you have Gnu Make, it should work fine. Other makes might work as well. Windows users might want to check out Cygwin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Type &lt;code&gt;make stage&lt;/code&gt; to copy all the build products and website to the &lt;code&gt;stage&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There is no step three.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also &lt;code&gt;cd&lt;/code&gt; to the &lt;code&gt;src&lt;/code&gt; directory and &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make clean&lt;/code&gt; cleans, and &lt;code&gt;make pristine&lt;/code&gt; cleans to &#34;original&#34; state.&lt;/p&gt; &#xA;&lt;p&gt;To embed your own fonts in the PDFs, see the &lt;code&gt;src/Makefile&lt;/code&gt; for examples.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;upload&lt;/code&gt; target in the root &lt;code&gt;Makefile&lt;/code&gt; demonstrates the build steps for a complete release. You&#39;ll need to change the &lt;code&gt;UPLOADDIR&lt;/code&gt; macro in the top-level &lt;code&gt;Makefile&lt;/code&gt; to point to your host if you want to use that. You&#39;re free to upload whatever versions you desire individually, as well.&lt;/p&gt; &#xA;&lt;h3&gt;Build via Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to mess with a local setup, you can build via Docker.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;docker build -t beej-bgnet-builder .&lt;/code&gt; from the top-level directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;docker run --rm -v &#34;$PWD&#34;:/guide -ti beej-bgnet-builder&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This will mount the project where the image expects it, and run &lt;code&gt;make pristine all stage&lt;/code&gt;, leaving your &lt;code&gt;./stage&lt;/code&gt; directory ready to be published.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;Please keep these on the scale of typo and bug fixes. That way I don&#39;t have to consider any copyright issues when merging changes.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;h3&gt;Content&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File transfer example maybe in son of data encapsulation&lt;/li&gt; &#xA; &lt;li&gt;Multicast?&lt;/li&gt; &#xA; &lt;li&gt;Event IO?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bug fixes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When pandoc 2.8 comes up, switch all man page subheaders to h3 and supress them from the table of contents.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>