<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T01:35:02Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aurora-develop/aurora</title>
    <updated>2024-04-07T01:35:02Z</updated>
    <id>tag:github.com,2024-04-07:/aurora-develop/aurora</id>
    <link href="https://github.com/aurora-develop/aurora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;free&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AURORA&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aurora-develop/aurora/raw/main/README_EN.md&#34;&gt;README_EN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;（带UI）免费的GPT3.5，支持使用3.5的access 调用&lt;/p&gt; &#xA;&lt;h1&gt;交流群&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/aurora_develop&#34;&gt;https://t.me/aurora_develop&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Web端&lt;/h1&gt; &#xA;&lt;p&gt;访问 &lt;a href=&#34;http://%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8ip:8080/web&#34;&gt;http://你的服务器ip:8080/web&lt;/a&gt; 即可 在web设置页面的填写服务器的&lt;a href=&#34;http://%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8ip:8080&#34;&gt;http://你的服务器ip:8080&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;注：仅ip属地支持免登录使用ChatGpt可以使用(也可以自定义Baseurl来绕过限制)&lt;/h3&gt; &#xA;&lt;h2&gt;Deploy&lt;/h2&gt; &#xA;&lt;h3&gt;Vercel部署&lt;/h3&gt; &#xA;&lt;p&gt;由于vercel不支持流式，如果在vercel部署请在STREAM_MODE中填False，不支持任何默认流式的客户端，支持沉浸式翻译。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Faurora-develop%2Faurora&amp;amp;env=STREAM_MODE&amp;amp;project-name=aurora&amp;amp;repository-name=aurora&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Render部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Koyeb部署&lt;/h3&gt; &#xA;&lt;p&gt;地区选美国&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.koyeb.com/deploy?type=docker&amp;amp;name=aurora&amp;amp;ports=8080;http;/&amp;amp;image=ghcr.io/aurora-develop/aurora&#34;&gt;&lt;img src=&#34;https://www.koyeb.com/static/images/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Koyeb&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Railway部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/template/jcl2Es?referralCode=XXqY_5&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zeabur部署&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zeabur.com/templates/JF3EFW&#34;&gt;&lt;img src=&#34;https://zeabur.com/button.svg?sanitize=true&#34; alt=&#34;Deploy on Zeabur&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;编译部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aurora-develop/aurora&#xA;cd aurora&#xA;go build -o aurora&#xA;chmod +x ./aurora&#xA;./aurora&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker部署&lt;/h3&gt; &#xA;&lt;h2&gt;Docker部署&lt;/h2&gt; &#xA;&lt;p&gt;您需要安装Docker和Docker Compose。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name aurora \&#xA;  -p 8080:8080 \&#xA;  ghcr.io/aurora-develop/aurora:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Compose部署&lt;/h2&gt; &#xA;&lt;p&gt;创建一个新的目录，例如aurora-app，并进入该目录：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir aurora&#xA;cd aurora&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在此目录中下载库中的docker-compose.yml文件：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location &#39;http://你的服务器ip:8080/v1/chat/completions&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;     &#34;model&#34;: &#34;gpt-3.5-turbo&#34;,&#xA;     &#34;messages&#34;: [{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;Say this is a test!&#34;}],&#xA;     &#34;stream&#34;: true&#xA;   }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;高级设置&lt;/h2&gt; &#xA;&lt;p&gt;默认情况不需要设置，除非你有需求&lt;/p&gt; &#xA;&lt;h3&gt;环境变量&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;BASE_URL=&#34;https://auroraxf.glitch.me/api&#34; 代理网关&#xA;Authorization=your_authorization  用户认证 key。&#xA;TLS_CERT=path_to_your_tls_cert 存储TLS（传输层安全协议）证书的路径。&#xA;TLS_KEY=path_to_your_tls_key 存储TLS（传输层安全协议）证书的路径。&#xA;PROXY_URL=your_proxy_url 添加代理池来。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢各位大佬的pr支持，感谢。&lt;/p&gt; &#xA;&lt;h2&gt;参考项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xqdoo00o/ChatGPT-to-API&#34;&gt;https://github.com/xqdoo00o/ChatGPT-to-API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
</feed>