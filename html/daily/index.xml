<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-10T01:37:32Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>slippersheepig/chatgpt-web</title>
    <updated>2023-02-10T01:37:32Z</updated>
    <id>tag:github.com,2023-02-10:/slippersheepig/chatgpt-web</id>
    <link href="https://github.com/slippersheepig/chatgpt-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用GPT-3.5中的text-davinci-003模型，利用OpenAI API实现简单HTML网页版在线聊天&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chatgpt-web&lt;/h1&gt; &#xA;&lt;h3&gt;使用GPT-3.5中的text-davinci-003模型，利用OpenAI API实现简单HTML网页版在线聊天（基于&lt;a href=&#34;https://github.com/AlliotTech/chatgpt-web&#34;&gt;此项目&lt;/a&gt;调整而来）&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;该版本基于OPENAI API KEY开发，想使用&lt;code&gt;ChatGPT&lt;/code&gt;的请访问&lt;a href=&#34;https://github.com/slippersheepig/chatgpt-html&#34;&gt;chatgpt-html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/58287293/207792987-a0a781df-8273-4148-a369-aa4a2379686a.png&#34; alt=&#34;G L%7VF I~{@83}SVRI_WPN&#34;&gt;（重要）ChatGPT与GPT-3.5（OpenAI API）的区别&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;OpenAI官方网页&lt;/a&gt;中，我们可以看到官方对ChatGPT的描述为“ChatGPT is fine-tuned from a model in the GPT-3.5 series, which finished training in early 2022. You can learn more about the 3.5 series &lt;a href=&#34;https://beta.openai.com/docs/model-index-for-researchers&#34;&gt;here&lt;/a&gt;. ChatGPT and GPT 3.5 were trained on an Azure AI supercomputing infrastructure”，从而得知ChatGPT与GPT-3.5是两个不同产品&lt;/li&gt; &#xA; &lt;li&gt;官方对GPT-3.5系列的&lt;a href=&#34;https://beta.openai.com/docs/model-index-for-researchers&#34;&gt;介绍&lt;/a&gt;里，&lt;code&gt;text-davinci-003&lt;/code&gt;是其中的模型之一&lt;/li&gt; &#xA; &lt;li&gt;我们再查阅官方对OpenAI API KEY的&lt;a href=&#34;https://beta.openai.com/docs/introduction/key-concepts&#34;&gt;介绍&lt;/a&gt;，其中有一句“The API is powered by a set of models with different capabilities and price points. Our base GPT-3 models are called Davinci, Curie, Babbage and Ada”，davinci赫然在列&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/58287293/207798807-a4dce6d3-14a0-40af-8008-30de8a55d513.png&#34; alt=&#34;I4{CU~ G( OH$WR_ T_1JWF&#34;&gt; 至此，我们可以得出结论：现在所有使用OpenAI API KEY的项目，&lt;code&gt;都不是基于ChatGPT开发的项目&lt;/code&gt;，官方并未发布ChatGPT的API接口&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;事实上，ChatGPT最近发生过登录认证风波，想了解详细过程的可以查看这个&lt;a href=&#34;https://github.com/acheong08/ChatGPT/issues/261&#34;&gt;issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果你自己有分别使用过ChatGPT的官方chat和OpenAI的API接口chat，你会发现API接口chat比ChatGPT的官方chat“笨”得多&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;获取OpenAI API KEY&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;建议参考&lt;a href=&#34;https://blog.csdn.net/hekaiyou/article/details/128303729&#34;&gt;此教程&lt;/a&gt;获取&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置&lt;/h3&gt; &#xA;&lt;h4&gt;从源码配置&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;请参考原作者&lt;a href=&#34;https://github.com/AlliotTech/chatgpt-web&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;使用Docker Compose&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;chat.html&lt;/code&gt;网页文件，粘贴以下代码并保存（UI很丑，建议各自美化）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;&#xA;&amp;lt;!--自适应屏幕大小--&amp;gt;&#xA;&amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width,initial-scale=1&#34; /&amp;gt;&#xA;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;!-- &amp;lt;link rel=&#34;shortcut icon&#34; href=&#34;&#34; type=&#34;image/x-icon&#34; /&amp;gt; --&amp;gt;&#xA;    &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;&#xA;    &amp;lt;title&amp;gt;OpenAI&amp;lt;/title&amp;gt;&#xA;    &amp;lt;style&amp;gt;&#xA;      body {&#xA;        color: #333;&#xA;        background-color: #eee;&#xA;      }&#xA;    @media (prefers-color-scheme: dark) {&#xA;      body {&#xA;        background: black;&#xA;        color: white;&#xA;      }&#xA;    }&#xA;    &amp;lt;/style&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&#xA;&amp;lt;body&amp;gt;&#xA;    &amp;lt;div align=&#34;center&#34;&amp;gt;&#xA;        &amp;lt;h2&amp;gt;Fake ChatGPT&amp;lt;/h2&amp;gt;&#xA;        &amp;lt;div&amp;gt;注意：接口返回可能比较慢（服务在国外，并且OpenAI返回速度也比较慢），提交后需要等待处理完成，请勿重复提交！！！&amp;lt;/div&amp;gt;&#xA;        &amp;lt;div&amp;gt;~接口返回有长度限制~&amp;lt;/div&amp;gt;&#xA;        &amp;lt;hr /&amp;gt;&#xA;        {% if message %} {{ message }} {% endif %}&#xA;        &amp;lt;form method=&#34;post&#34; onsubmit=&#34;submit.disabled=true&#34;&amp;gt;&#xA;            &amp;lt;textarea style=&#34;width:35%;&#34; name=&#34;question&#34; placeholder=&#34;点击这里输入问题&#34; rows=&#34;11&#34; id=&#34;form&#34;&amp;gt;&amp;lt;/textarea&amp;gt;&#xA;            &amp;lt;br&amp;gt;&#xA;            &amp;lt;input type=&#34;submit&#34; style=&#34;width:150px;height:50px;background-color:green;font-size:30px&#34; value=&#34;提交&#34; id=&#34;submit&#34; /&amp;gt;&#xA;        &amp;lt;/form&amp;gt;&#xA;        &amp;lt;div id=&#34;loading&#34; style=&#34;display:none; color:red&#34;&amp;gt;&amp;lt;b&amp;gt;后端正在处理，请稍等...&amp;lt;/b&amp;gt;&amp;lt;/div&amp;gt;&#xA;        {% if question %}&#xA;        &amp;lt;div style=&#34;text-align: left&#34;&amp;gt;&amp;lt;b&amp;gt;人类:&amp;lt;/b&amp;gt;&#xA;            &amp;lt;pre id=&#34;question&#34;&amp;gt;{{ question }}&amp;lt;/pre&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;        &amp;lt;hr /&amp;gt;&#xA;        &amp;lt;div style=&#34;text-align: left&#34;&amp;gt;&amp;lt;b&amp;gt;人工智障:&amp;lt;/b&amp;gt;&#xA;            &amp;lt;pre style=&#34;text-align:left; white-space: pre-wrap;&#34; id=&#34;res&#34;&amp;gt;{{ res }}&amp;lt;/pre&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;        {% endif %}&#xA;    &amp;lt;/div&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;script&amp;gt;&#xA;    let loading = document.getElementById(&#39;loading&#39;);&#xA;    let form = document.querySelector(&#39;form&#39;);&#xA;    form.addEventListener(&#39;submit&#39;, () =&amp;gt; {&#xA;        loading.style.display = &#39;block&#39;;&#xA;    });&#xA;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;docker-compose.yml&lt;/code&gt;配置文件，粘贴以下内容并保存，放在与&lt;code&gt;chat.html&lt;/code&gt;文件相同的目录下&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;version: &#39;3&#39;&#xA;services:&#xA;  chatgpt:&#xA;    image: sheepgreen/chatgpt-web #如果是arm架构，需要改成chatgpt-web:arm&#xA;    container_name: webchat&#xA;    environment:&#xA;      - OPENAI_API_KEY=前面你获取到的OpenAI API KEY&#xA;    volumes:&#xA;      - ./chat.html:/chatgpt-web/templates/chat.html&#xA;    ports:&#xA;      - &#34;8888:80&#34; #80为容器内部端口，不可更改；8888为外部映射端口，可自行更改&#xA;    restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;输入&lt;code&gt;docker-compose up -d&lt;/code&gt;即启动成功&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;访问地址为&lt;a href=&#34;http://ip:port/chat&#34;&gt;http://ip:port/chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;修改&lt;code&gt;chat.html&lt;/code&gt;文件后，需要docker restart webchat才能生效&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PaloAltoNetworks/prisma-cloud-docs</title>
    <updated>2023-02-10T01:37:32Z</updated>
    <id>tag:github.com,2023-02-10:/PaloAltoNetworks/prisma-cloud-docs</id>
    <link href="https://github.com/PaloAltoNetworks/prisma-cloud-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prisma Cloud docs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6518946/80754514-c7628f80-8af4-11ea-9e28-77b05d05bbaa.jpg&#34; alt=&#34;prisma_cloud_logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Prisma Cloud Community Docs&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the docs project for &lt;a href=&#34;https://www.paloaltonetworks.com/prisma/cloud&#34;&gt;Prisma Cloud&lt;/a&gt;. Docs are a core part of the product and we build them just like we build the software in it - using modern collaboration platforms like GitHub and publishing them through a CI/CD pipeline with Jenkins. As of May 2020, we&#39;ve open sourced the docs so that anyone can contribute directly to them and see their work quickly go live for the whole community&#39;s benefit. This repo is where that happens.&lt;/p&gt; &#xA;&lt;h1&gt;Who?&lt;/h1&gt; &#xA;&lt;p&gt;Anyone can contribute the docs with simple pull requests. All PRs are reviewed by product team members for accuracy and consistency and we&#39;ll collaborate with you on any questions or suggestions. Because everything happens on GitHub, all your contributions are clearly visible and recognized.&lt;/p&gt; &#xA;&lt;h1&gt;What?&lt;/h1&gt; &#xA;&lt;p&gt;PRs of any size or form are welcome, from simple clarifications of wording to entirely new how-to articles. All content is in the open source &lt;a href=&#34;https://asciidoctor.org/&#34;&gt;AsciiDoctor&lt;/a&gt; format, which can be edited right in the GitHub browser IDE or any other text editor of your choice.&lt;/p&gt; &#xA;&lt;p&gt;The Prisma Cloud product team will continue to author docs for all new features and changes in each release.&lt;/p&gt; &#xA;&lt;h1&gt;When?&lt;/h1&gt; &#xA;&lt;p&gt;We review PRs weekly. If there are no questions or further discussion, you&#39;ll see your changes live the next week.&lt;/p&gt; &#xA;&lt;!-- A build job runs nightly to publish the latest content. --&gt; &#xA;&lt;h1&gt;Where?&lt;/h1&gt; &#xA;&lt;p&gt;All Prisma Cloud documentation is included in this repo. Because the entire docs source is just text files in GitHub, it&#39;s easy to work with the way you want. Official docs are published here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.paloaltonetworks.com/prisma/prisma-cloud.html&#34;&gt;https://docs.paloaltonetworks.com/prisma/prisma-cloud.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Why?&lt;/h1&gt; &#xA;&lt;p&gt;The best docs are written by people that really use and understand the technology. While we on the product team are still intimately involved in creating and maintaining the docs, we know that everyone will benefit from the experiences and knowledge of the overall community.&lt;/p&gt; &#xA;&lt;h1&gt;How?&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes directly in the GitHub UI, or with your editor of choice and the git command line tool.&lt;/li&gt; &#xA; &lt;li&gt;Submit your changes back to the repo as a pull request (PR).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - If you are a Palo Alto Networks employee and wants to assign reviewers to your PRs, please open an IT Service Request to add your GH ID to the github.com/PaloAltoNetworks org. From there, reach out to Prisma Cloud TechDocs, and we can add you to our repo.&lt;/p&gt; &#xA;&lt;h1&gt;Structure&lt;/h1&gt; &#xA;&lt;p&gt;Each guide has its own dedicated directory. For example, the Administrator&#39;s Guide can be found in the top level &lt;code&gt;admin_guide/&lt;/code&gt; dir.&lt;/p&gt; &#xA;&lt;p&gt;Each guide has a topic map, named book.yml, written in YAML format. Topic maps reference all the individual source files that make up a document. They&#39;re also used to generate a document&#39;s navigation menu.&lt;/p&gt; &#xA;&lt;p&gt;Source files are written in AsciiDoctor and have the &lt;code&gt;.adoc&lt;/code&gt; extension. Each source file holds one &#34;article&#34;, which is rendered as a single page on the doc site.&lt;/p&gt; &#xA;&lt;p&gt;Source for the Administrator&#39;s Guide uses conditional content to target either Compute Edition (self-hosted) or Enterprise Edition (SaaS). Content that only applies to one or the other is fenced with AsciiDoctor&#39;s &lt;code&gt;ifdef&lt;/code&gt; and &lt;code&gt;endif&lt;/code&gt; directives.&lt;/p&gt; &#xA;&lt;p&gt;For Compute Edition-specific content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ifdef::compute_edition[]&#xA;Download and run Console in your own environment.&#xA;endif::compute_edition[]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Enterprise Edition-specific content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ifdef::prisma_cloud[]&#xA;Palo Alto Networks runs Console for you.&#xA;endif::prisma_cloud[]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>getpelican/pelican</title>
    <updated>2023-02-10T01:37:32Z</updated>
    <id>tag:github.com,2023-02-10:/getpelican/pelican</id>
    <link href="https://github.com/getpelican/pelican" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Static site generator that supports Markdown and reST syntax. Powered by Python.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pelican |build-status| |pypi-version| |repology|&lt;/h1&gt; &#xA;&lt;p&gt;Pelican is a static site generator, written in Python_.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compose content in Markdown_ or reStructuredText_ using your editor of choice&lt;/li&gt; &#xA; &lt;li&gt;Simple command-line tool (re)generates HTML, CSS, and JS from your source content&lt;/li&gt; &#xA; &lt;li&gt;Easy to interface with version control systems and web hooks&lt;/li&gt; &#xA; &lt;li&gt;Completely static output is simple to host anywhere&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Pelican’s feature highlights include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chronological content (e.g., articles, blog posts) as well as static pages&lt;/li&gt; &#xA; &lt;li&gt;Integration with external services&lt;/li&gt; &#xA; &lt;li&gt;Site themes (created using Jinja2_ templates)&lt;/li&gt; &#xA; &lt;li&gt;Publication of articles in multiple languages&lt;/li&gt; &#xA; &lt;li&gt;Generation of Atom and RSS feeds&lt;/li&gt; &#xA; &lt;li&gt;Code syntax highlighting via Pygments_&lt;/li&gt; &#xA; &lt;li&gt;Import existing content from WordPress, Dotclear, or RSS feeds&lt;/li&gt; &#xA; &lt;li&gt;Fast rebuild times due to content caching and selective output writing&lt;/li&gt; &#xA; &lt;li&gt;Extensible via a rich plugin ecosystem: &lt;code&gt;Pelican Plugins&lt;/code&gt;_&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out the &lt;code&gt;Pelican documentation&lt;/code&gt;_ for further information.&lt;/p&gt; &#xA;&lt;h2&gt;How to get help, contribute, or provide feedback&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;code&gt;contribution submission and feedback guidelines &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;h2&gt;Source code&lt;/h2&gt; &#xA;&lt;p&gt;Pelican’s source code is &lt;code&gt;hosted on GitHub&lt;/code&gt;&lt;em&gt;. For information on how it works, have a look at &lt;code&gt;Pelican&#39;s internals&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why the name “Pelican”?&lt;/h2&gt; &#xA;&lt;p&gt;“Pelican” is an anagram of &lt;em&gt;calepin&lt;/em&gt;, which means “notebook” in French.&lt;/p&gt; &#xA;&lt;p&gt;.. Links&lt;/p&gt; &#xA;&lt;p&gt;.. _Python: &lt;a href=&#34;https://www.python.org/&#34;&gt;https://www.python.org/&lt;/a&gt; .. _reStructuredText: &lt;a href=&#34;http://docutils.sourceforge.net/rst.html&#34;&gt;http://docutils.sourceforge.net/rst.html&lt;/a&gt; .. _Markdown: &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;https://daringfireball.net/projects/markdown/&lt;/a&gt; .. _Jinja2: &lt;a href=&#34;https://palletsprojects.com/p/jinja/&#34;&gt;https://palletsprojects.com/p/jinja/&lt;/a&gt; .. _Pygments: &lt;a href=&#34;https://pygments.org/&#34;&gt;https://pygments.org/&lt;/a&gt; .. _&lt;code&gt;Pelican Plugins&lt;/code&gt;: &lt;a href=&#34;https://github.com/pelican-plugins&#34;&gt;https://github.com/pelican-plugins&lt;/a&gt; .. _&lt;code&gt;Pelican documentation&lt;/code&gt;: &lt;a href=&#34;https://docs.getpelican.com/&#34;&gt;https://docs.getpelican.com/&lt;/a&gt; .. _&lt;code&gt;Pelican&#39;s internals&lt;/code&gt;: &lt;a href=&#34;https://docs.getpelican.com/en/latest/internals.html&#34;&gt;https://docs.getpelican.com/en/latest/internals.html&lt;/a&gt; .. _&lt;code&gt;hosted on GitHub&lt;/code&gt;: &lt;a href=&#34;https://github.com/getpelican/pelican&#34;&gt;https://github.com/getpelican/pelican&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. |build-status| image:: &lt;a href=&#34;https://img.shields.io/github/actions/workflow/status/getpelican/pelican/main.yml?branch=master&#34;&gt;https://img.shields.io/github/actions/workflow/status/getpelican/pelican/main.yml?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/getpelican/pelican/actions/workflows/main.yml?query=branch%3Amaster&#34;&gt;https://github.com/getpelican/pelican/actions/workflows/main.yml?query=branch%3Amaster&lt;/a&gt; :alt: GitHub Actions CI: continuous integration status .. |pypi-version| image:: &lt;a href=&#34;https://img.shields.io/pypi/v/pelican.svg&#34;&gt;https://img.shields.io/pypi/v/pelican.svg&lt;/a&gt; :target: &lt;a href=&#34;https://pypi.org/project/pelican/&#34;&gt;https://pypi.org/project/pelican/&lt;/a&gt; :alt: PyPI: the Python Package Index .. |repology| image:: &lt;a href=&#34;https://repology.org/badge/tiny-repos/pelican.svg&#34;&gt;https://repology.org/badge/tiny-repos/pelican.svg&lt;/a&gt; :target: &lt;a href=&#34;https://repology.org/project/pelican/versions&#34;&gt;https://repology.org/project/pelican/versions&lt;/a&gt; :alt: Repology: the packaging hub&lt;/p&gt;</summary>
  </entry>
</feed>