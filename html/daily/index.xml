<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-22T01:33:33Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uikit/uikit</title>
    <updated>2022-12-22T01:33:33Z</updated>
    <id>tag:github.com,2022-12-22:/uikit/uikit</id>
    <link href="https://github.com/uikit/uikit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight and modular front-end framework for developing fast and powerful web interfaces&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://getuikit.com/&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/321047/21769911/474d7d9e-d681-11e6-9fe0-d95f8ccfd3a9.jpg&#34; alt=&#34;uikit banner&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;UIkit&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/NEt4Pv7&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/uikit/uikit&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/uikit/uikit.svg?style=shield&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jsdelivr.com/package/npm/uikit&#34;&gt;&lt;img src=&#34;https://data.jsdelivr.com/v1/package/npm/uikit/badge?style=rounded&#34; alt=&#34;jsdelivr&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;UIkit is a lightweight and modular front-end framework for developing fast and powerful web interfaces.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getuikit.com&#34;&gt;Homepage&lt;/a&gt; - Learn more about UIkit&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/getuikit&#34;&gt;@getuikit&lt;/a&gt; - Get the latest buzz on Twitter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/NEt4Pv7&#34;&gt;Discord Chat&lt;/a&gt; - Join our developer chat on Discord.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;UIkit is an Open Source project developed by YOOtheme.&lt;/b&gt; &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://yootheme.com&#34; align=&#34;center&#34;&gt; &lt;img width=&#34;134&#34; height=&#34;30&#34; src=&#34;https://yootheme.com/site/images/yootheme-logo.svg?sanitize=true&#34; alt=&#34;YOOtheme&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;You have the following options to get UIkit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/uikit/uikit/releases/latest&#34;&gt;latest release&lt;/a&gt; with pre-built CSS and JS.&lt;/li&gt; &#xA; &lt;li&gt;Install with &lt;a href=&#34;https://npmjs.com&#34;&gt;npm&lt;/a&gt; to get all source files as they are available on GitHub: &lt;code&gt;npm install uikit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install with &lt;a href=&#34;https://yarnpkg.com/&#34;&gt;yarn&lt;/a&gt; to get all source files as they are available on GitHub: &lt;code&gt;yarn add uikit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Directly load UIkit from &lt;a href=&#34;https://www.jsdelivr.com&#34;&gt;jsDelivr&lt;/a&gt;: &lt;a href=&#34;https://www.jsdelivr.com/package/npm/uikit&#34;&gt;https://www.jsdelivr.com/package/npm/uikit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo to get all source files including build scripts: &lt;code&gt;git clone git@github.com:uikit/uikit.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;To always have the latest development version of UIkit, even before a release, you may want to use npm or yarn with the &lt;code&gt;dev&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using npm: &lt;code&gt;npm install uikit@dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using yarn: &lt;code&gt;yarn add uikit@dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://raw.githubusercontent.com/uikit/uikit/develop/cdn.jsdelivr.net&#34;&gt;cdn&lt;/a&gt;: &lt;a href=&#34;https://cdn.jsdelivr.net/npm/uikit@dev&#34;&gt;https://cdn.jsdelivr.net/npm/uikit@dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Finding bugs, sending pull requests or improving our docs - any contribution is welcome and highly appreciated. To get started, head over to our &lt;a href=&#34;https://raw.githubusercontent.com/uikit/uikit/develop/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. Thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;UIkit is maintained by using the &lt;a href=&#34;https://semver.org&#34;&gt;Semantic Versioning Specification (SemVer)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Browser Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.github.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png&#34; alt=&#34;Firefox&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.github.com/alrra/browser-logos/main/src/safari/safari_48x48.png&#34; alt=&#34;Safari&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.github.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png&#34; alt=&#34;Chrome&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.github.com/alrra/browser-logos/main/src/edge/edge_48x48.png&#34; alt=&#34;Edge&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.github.com/alrra/browser-logos/main/src/opera/opera_48x48.png&#34; alt=&#34;Opera&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Latest ✔&lt;/td&gt; &#xA;   &lt;td&gt;Latest ✔&lt;/td&gt; &#xA;   &lt;td&gt;Latest ✔&lt;/td&gt; &#xA;   &lt;td&gt;Latest ✔&lt;/td&gt; &#xA;   &lt;td&gt;Latest ✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Tested With&lt;br&gt;&lt;a href=&#34;https://www.browserstack.com&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/355427/27389060-9f716c82-569d-11e7-923c-bd5fe7f1c55a.png&#34; alt=&#34;BrowserStack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright &lt;a href=&#34;https://yootheme.com&#34;&gt;YOOtheme&lt;/a&gt; GmbH under the &lt;a href=&#34;https://raw.githubusercontent.com/uikit/uikit/develop/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>telerik/kendo-themes</title>
    <updated>2022-12-22T01:33:33Z</updated>
    <id>tag:github.com,2022-12-22:/telerik/kendo-themes</id>
    <link href="https://github.com/telerik/kendo-themes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monorepo for SASS-based Kendo UI themes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kendo UI Themes Monorepo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://open.vscode.dev/telerik/kendo-themes&#34;&gt;&lt;img src=&#34;https://open.vscode.dev/badges/open-in-vscode.svg?sanitize=true&#34; alt=&#34;Open in Visual Studio Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/telerik/kendo-themes/actions/workflows/ci_dev.yml&#34;&gt;&lt;img src=&#34;https://github.com/telerik/kendo-themes/actions/workflows/ci_dev.yml/badge.svg?branch=develop&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kendo-themes&lt;/code&gt; is a &lt;a href=&#34;https://github.com/lerna/lerna/&#34;&gt;lerna&lt;/a&gt; managed monorepo project for all Kendo UI themes that are used across the Kendo UI suites and Telerik UI for Blazor. The themes are built with sass using scss syntax. The syntax is compatible with both &lt;code&gt;node-sass&lt;/code&gt; and &lt;code&gt;dart-sass&lt;/code&gt;, as we currently does not use sass module system. Browser-specific properties are generated at build-time through &lt;a href=&#34;https://github.com/postcss/autoprefixer&#34;&gt;PostCSS autoprefixer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To setup to monorepo run in the root directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;  npm run setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following npm commands are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To build all themes with node-sass, run &lt;code&gt;npm run sass&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To build all swatches with node-sass, run &lt;code&gt;npm run sass:swatches&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To build all themes with dart-sass, run &lt;code&gt;npm run dart&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To build all swatches with dart-sass, run &lt;code&gt;npm run dart:swatches&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To lint all themes, run &lt;code&gt;npm run sasslint&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are additional commands, which can be found in &lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/gulpfile.js&#34;&gt;&lt;code&gt;gulpfile.js&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/build&#34;&gt;build&lt;/a&gt; -- various bash scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/docs&#34;&gt;docs&lt;/a&gt; -- seed for documentation site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/lib&#34;&gt;lib&lt;/a&gt; -- files which we didn&#39;t put elsewhere&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/packages&#34;&gt;packages&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;theme-name &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;build -- theme specific files needed for building&lt;/li&gt; &#xA;     &lt;li&gt;docs -- per theme documentation&lt;/li&gt; &#xA;     &lt;li&gt;lib -- files that are not strictly scss, like swatches in json format&lt;/li&gt; &#xA;     &lt;li&gt;scripts -- theme specific javascript files&lt;/li&gt; &#xA;     &lt;li&gt;scss -- source of the themes&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/scripts&#34;&gt;scripts&lt;/a&gt; -- various javascript files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/telerik/kendo-themes/develop/tests&#34;&gt;tests&lt;/a&gt; -- unit and visual tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Inside each theme source directory, there is a per-component directory containing the respective styles.&lt;/p&gt; &#xA;&lt;p&gt;Note: we mostly have aptly named direcotries, so they match component names. In few cases, however, we chose different names. For example, &lt;code&gt;multicolumncombobox&lt;/code&gt; is a mouthful, so its directory is &lt;code&gt;dropdowngrid&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each component consists of &lt;code&gt;index&lt;/code&gt; file that is the entry points for component styles. Inside, we import &lt;code&gt;core&lt;/code&gt; files, all dependencies (for example, datepicker needs calendar) and the components &lt;code&gt;layout&lt;/code&gt; (metrics) and &lt;code&gt;theme&lt;/code&gt; (appearance) files.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: We list all dependencies is because we want components to be compiled standalone without the developer needing to know which component depends on which other component. However, recursive importing creates exponentially large dist files, unles handled.&lt;/p&gt; &#xA; &lt;p&gt;To workaround this limitation, we use a mixin -- &lt;code&gt;import-once&lt;/code&gt; -- which takes care to output only once!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;During development, the scss files are linted on every &lt;code&gt;commit&lt;/code&gt; and built on every &lt;code&gt;push&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Changes in &lt;code&gt;develop&lt;/code&gt; branch release a new package version every monday in the &lt;code&gt;dev&lt;/code&gt; channel and in &lt;code&gt;(version)-dev.(integer)&lt;/code&gt; format. To install the latest development version of a given theme, run &lt;code&gt;npm install (themename)@dev&lt;/code&gt; -- for example, &lt;code&gt;npm install @progress/kendo-theme-default@dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Stable channel is released manually trough a github action.&lt;/p&gt; &#xA;&lt;h3&gt;Visual tests&lt;/h3&gt; &#xA;&lt;p&gt;To guard against regressions and make pull request reviews easier, the CI build makes screenshots of the sample pages in &lt;code&gt;packages/html/src/[component]/tests/*.html&lt;/code&gt;. This happens automatically for all feature branches. The sample pages contain static HTML that is the recommended rendering for components that use the theme.&lt;/p&gt; &#xA;&lt;p&gt;To generate screenshots for a specific theme:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build the theme with &lt;code&gt;npm run sass&lt;/code&gt; or &lt;code&gt;npm run dart&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run create-screenshots &amp;lt;theme&amp;gt;&lt;/code&gt;, substituting &lt;code&gt;&amp;lt;theme&amp;gt;&lt;/code&gt; with a theme name.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These steps will create new screenshots in &lt;code&gt;tests/_output&lt;/code&gt;. Note that due to platform differences, all of the files will be marked as changed.&lt;/p&gt; &#xA;&lt;h3&gt;Embedding Resources&lt;/h3&gt; &#xA;&lt;p&gt;To avoid hosting-related issues in projects that use the themes, the resources are embedded by encoding them in the output CSS. For more details, refer to &lt;a href=&#34;https://github.com/telerik/kendo-theme-default/issues/41#issuecomment-258472183&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To embed the latest resources:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;npm run embed-assets&lt;/code&gt; task. The task generates a file with the same name which registers a Base64-encoded version in the &lt;code&gt;$data-uris&lt;/code&gt; SCSS map. For example, the &lt;code&gt;foo.woff&lt;/code&gt; font file will be encoded in a &lt;code&gt;foo.scss&lt;/code&gt; file which can later be imported through &lt;code&gt;@import &#39;./font/foo&#39;;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Inline the encoded file inside the CSS through &lt;code&gt;map-get( $data-uris, &#39;foo.woff&#39; )&lt;/code&gt;. For example:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;$web-font-uri: map-get( $data-uris, &#39;WebComponentsIcons.woff&#39; );&#xA;&#xA;@font-face {&#xA;    font-family: &#39;WebComponentsIcons&#39;;&#xA;    src: url( $web-font-uri ) format( &#34;woff&#34; );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Documenting Variables&lt;/h3&gt; &#xA;&lt;p&gt;The available variables for customizing each theme are listed in the article on customization for each theme (&lt;code&gt;docs/customization.md&lt;/code&gt;) The file is generated from the SCSS source files by running the &lt;code&gt;npm run docs&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;To document a variable, use triple-slash comments (&lt;code&gt;///&lt;/code&gt;) before its definition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;/// Variable description&#xA;$foo: 42 !default;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To group variables, use the &lt;code&gt;@group&lt;/code&gt; directive.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-scss&#34;&gt;/// Variable description&#xA;/// @group random&#xA;$foo: 42 !default;&#xA;&#xA;/// Another variable description&#xA;/// @group random&#xA;$bar: 1024 !default;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the layout or the front meter of the generated help topic, change the &lt;code&gt;docs/_templates/customization.md.njk&lt;/code&gt; source file.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This package is part of the following suites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.telerik.com/kendo-angular-ui&#34;&gt;Kendo UI for Angular&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.telerik.com/kendo-react-ui&#34;&gt;KendoReact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.telerik.com/kendo-ui&#34;&gt;Kendo UI for jQuery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.telerik.com/aspnet-mvc&#34;&gt;UI for ASP.NET MVC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.telerik.com/aspnet-core-ui&#34;&gt;UI for ASP.NET Core&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All available Kendo UI commercial licenses may be obtained at &lt;a href=&#34;http://www.telerik.com/purchase/kendo-ui&#34;&gt;http://www.telerik.com/purchase/kendo-ui&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you do not own a commercial license, the usage of this software shall be governed by the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Copyright © 2021 Progress Software Corporation and/or one of its subsidiaries or affiliates. All rights reserved.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Progress, Telerik, and certain product names used herein are trademarks or registered trademarks of Progress Software Corporation and/or one of its subsidiaries or affiliates in the U.S. and/or other countries.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>