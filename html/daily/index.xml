<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-31T01:29:52Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LouisBear123a/LouisBear123a.github.io</title>
    <updated>2023-10-31T01:29:52Z</updated>
    <id>tag:github.com,2023-10-31:/LouisBear123a/LouisBear123a.github.io</id>
    <link href="https://github.com/LouisBear123a/LouisBear123a.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Custom website design&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt; ✅&#34;Download FL Studio 21: Create Music Professionally!&#34;✅&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;FL Studio&lt;/strong&gt; is a new version of the world&#39;s best program for creating your own music, with its help you can create your own tracks of any style, also record vocals, reduce it, edit, cut, modify and a million more different functions for working with sound.&lt;/p&gt; &#xA;&lt;p&gt;It is a complete music software, which is more than 14 years of innovative developments. Everything you need in one package to compose, arrange, record, edit, mix. FL Studio is the fastest way from your brain to the speakers.&lt;/p&gt; &#xA;&lt;p&gt;Now the program interface is easy to scale for any screen resolution of your monitor. New, more convenient installation sorting and launching of VST plugins and tools. The browser has new tabs and categories, as well as the ability to delete content with the right mouse button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/LouisBear123a/LouisBear123a.github.io/assets/30087267/4d731a60-8838-43ec-828f-e3d4af95ecc0&#34; alt=&#34;quantize-tool&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🔧Features of the program:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern engine for excellent sound quality;&lt;/li&gt; &#xA; &lt;li&gt;Mixing channels and setting up the necessary tracks;&lt;/li&gt; &#xA; &lt;li&gt;A large selection of virtual instruments and sounds;&lt;/li&gt; &#xA; &lt;li&gt;Voice recording and processing;&lt;/li&gt; &#xA; &lt;li&gt;Built-in equalizer;&lt;/li&gt; &#xA; &lt;li&gt;A large set of sound effects;&lt;/li&gt; &#xA; &lt;li&gt;Import audio files;&lt;/li&gt; &#xA; &lt;li&gt;Export projects to audio files of any format; and much more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;a href=&#34;https://thetinyengine.world/axz2wa&#34;&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/1157256319020044300/1167432866666381373/FL_STUDIO_2023_24.gif&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Password🔐 - 4️⃣4️⃣5️⃣5️⃣ &lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>Hellohistory/EbookDatabase</title>
    <updated>2023-10-31T01:29:52Z</updated>
    <id>tag:github.com,2023-10-31:/Hellohistory/EbookDatabase</id>
    <link href="https://github.com/Hellohistory/EbookDatabase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DX书库网页检索版&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EbookDatabase - 电子书籍检索系统&lt;/h1&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;这是本地化检索的电子数据。该项目使用 FastAPI 和 SQLite 数据库构建，并可以通过 本地 与 Docker 轻松部署。&lt;/p&gt; &#xA;&lt;p&gt;目前本项目包含的数据库：&lt;/p&gt; &#xA;&lt;p&gt;读秀2.0-5.0&lt;/p&gt; &#xA;&lt;p&gt;这个数据库是通过很多渠道汇集到一起形成的，所以会出现信息不全等种种情况发生，还望谅解。&lt;/p&gt; &#xA;&lt;p&gt;如果你发现数据库内容错误或者有好的内容想要与大家分享，请与本人联系，&lt;/p&gt; &#xA;&lt;p&gt;如果参与的人多，数据库会定期更新，人人为我，我为人人。&lt;/p&gt; &#xA;&lt;p&gt;可以添加群聊与同好一起交流&lt;/p&gt; &#xA;&lt;p&gt;QQ群：942385978&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Hellohistory/EbookDatabase/main/image/img.png&#34; alt=&#34;主页页面&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;数据库备份&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Hellohistory/EbookDatabase/main/Markdown/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8B%E8%BD%BD%E6%96%87%E6%A1%A3.md&#34;&gt;点击查看数据库列表&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;p&gt;视频：&lt;/p&gt; &#xA;&lt;p&gt;YouTube：&lt;a href=&#34;https://youtu.be/-jD8OsF6di4&#34;&gt;https://youtu.be/-jD8OsF6di4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;bilibili：&lt;a href=&#34;https://www.bilibili.com/video/BV1fN4y1r7fP/&#34;&gt;https://www.bilibili.com/video/BV1fN4y1r7fP/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;其他仓库地址：&lt;a href=&#34;https://gitee.com/etojsyc/EbookDatabase&#34;&gt;https://gitee.com/etojsyc/EbookDatabase&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;本地运行&lt;/h3&gt; &#xA;&lt;h4&gt;方法一&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;打开终端或命令提示符，并导航到您项目的根目录。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;创建一个新的虚拟环境，您可以使用以下命令：&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python -m venv venv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这将在项目根目录中创建一个名为&lt;code&gt;venv&lt;/code&gt;的新虚拟环境。&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;激活虚拟环境。在 Windows 上，使用以下命令：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;venv\Scripts\activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在 macOS 和 Linux 上，使用以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;激活虚拟环境后，终端前面的提示符会显示虚拟环境名称，表示虚拟环境已经激活。&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;接下来，安装项目所需的依赖。使用以下命令在虚拟环境中安装依赖：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这将会根据&lt;code&gt;requirements.txt&lt;/code&gt;文件安装项目所需的所有依赖，而且这些依赖将仅在虚拟环境中可用。&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;最后，运行应用程序。使用以下命令启动应用程序：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python app.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这将在虚拟环境中运行应用程序，然后在 &lt;a href=&#34;http://localhost:10223/&#34;&gt;http://localhost:10223/&lt;/a&gt; 上使用它。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;方法二&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;下载本项目发布的软件包&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;解压下载下来的软件包&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载本项目的数据库文件并且存放到instance文件夹&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;双击exe一键启动本项目&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;然后在 &lt;a href=&#34;http://127.0.0.1:10223/&#34;&gt;http://127.0.0.1:10223/&lt;/a&gt; 上使用它。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;使用 Docker 运行&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;首先，确保您已经安装了 &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;克隆此仓库：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Hellohistory/DX2_5.git&#xA;cd your-repo-dir&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;构建 Docker 镜像：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t dx2_5 .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;运行 Docker 容器：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 10223:10223 dx2_5&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;这样就可以在 &lt;code&gt;http://localhost:10223/&lt;/code&gt;当中使用&lt;/p&gt; &#xA;&lt;h2&gt;Docker 容器存储设置&lt;/h2&gt; &#xA;&lt;p&gt;在 Dockerfile 中，使用 &lt;code&gt;RUN mkdir /app/instance&lt;/code&gt; 命令来在容器的 &lt;code&gt;/app&lt;/code&gt; 工作目录下创建一个名为 &lt;code&gt;instance&lt;/code&gt; 的文件夹。这个文件夹用于存放 SQLite 数据库。&lt;/p&gt; &#xA;&lt;p&gt;为了使这个数据库文件夹能够从外部访问并持久化存储，可以在运行 Docker 容器时使用 &lt;code&gt;-v&lt;/code&gt; 参数来将这个 &lt;code&gt;instance&lt;/code&gt; 文件夹映射到宿主机的一个特定目录。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -v /path/to/instance:/app/instance -v /path/to/log:/app/log your-image-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这里，&lt;code&gt;/path/to/instance&lt;/code&gt; 和 &lt;code&gt;/path/to/logs&lt;/code&gt; 是在宿主机上用于存放数据库和日志的目录。&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本地化检索&lt;/li&gt; &#xA; &lt;li&gt;支持模糊搜索和准确搜索&lt;/li&gt; &#xA; &lt;li&gt;分页显示结果&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Hellohistory/EbookDatabase/main/image/img_1.png&#34; alt=&#34;检索结果页&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Hellohistory/EbookDatabase/main/image/img_2.png&#34; alt=&#34;检索结果页&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bug反馈&lt;/h2&gt; &#xA;&lt;p&gt;在运行本项目的时候出现问题，请提交issues反馈，反馈格式如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;1.运行环境&#xA;&#xA;2.使用的查询条件&#xA;&#xA;3.错误界面截图&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;本项目仅用于学习交流，禁止使用到任何的商业场景当中&#xA;&#xA;本项目绝对不会以任何形式授权任何人用于商业用途，任何商业场景申明使用到本项目均为造谣&#xA;&#xA;如若侵犯权益，请联系本项目删除&#xA;&#xA;本项目不承担任何责任，责任均由使用者负责，详情请阅读许可证文件&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>