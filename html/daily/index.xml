<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-19T01:33:20Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Zie619/n8n-workflows</title>
    <updated>2025-08-19T01:33:20Z</updated>
    <id>tag:github.com,2025-08-19:/Zie619/n8n-workflows</id>
    <link href="https://github.com/Zie619/n8n-workflows" rel="alternate"></link>
    <summary type="html">&lt;p&gt;all of the workflows of n8n i could find (also from the site itself)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ö° N8N Workflow Collection &amp;amp; Documentation&lt;/h1&gt; &#xA;&lt;p&gt;A professionally organized collection of &lt;strong&gt;2,053 n8n workflows&lt;/strong&gt; with a lightning-fast documentation system that provides instant search, analysis, and browsing capabilities.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;‚ö†Ô∏è IMPORTANT NOTICE (Aug 14, 2025):&lt;/strong&gt; Repository history has been rewritten due to DMCA compliance. If you have a fork or local clone, please see &lt;a href=&#34;https://github.com/Zie619/n8n-workflows/issues&#34;&gt;Issue #X&lt;/a&gt; for instructions on syncing your copy.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Support My Work&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/zie619&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Buy%20Me%20a%20Coffee-ffdd00?logo=buy-me-a-coffee&amp;amp;logoColor=black&amp;amp;style=flat&#34; alt=&#34;Buy Me a Coffee&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to say thanks, consider buying me a coffee‚Äîyour support helps me keep improving this project!&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ &lt;strong&gt;NEW: High-Performance Documentation System&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Experience 100x performance improvement over traditional documentation!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start - Fast Documentation System&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install dependencies&#xA;pip install -r requirements.txt&#xA;&#xA;# Start the fast API server&#xA;python run.py&#xA;&#xA;# Open in browser&#xA;http://localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö° &lt;strong&gt;Sub-100ms response times&lt;/strong&gt; with SQLite FTS5 search&lt;/li&gt; &#xA; &lt;li&gt;üîç &lt;strong&gt;Instant full-text search&lt;/strong&gt; with advanced filtering&lt;/li&gt; &#xA; &lt;li&gt;üì± &lt;strong&gt;Responsive design&lt;/strong&gt; - works perfectly on mobile&lt;/li&gt; &#xA; &lt;li&gt;üåô &lt;strong&gt;Dark/light themes&lt;/strong&gt; with system preference detection&lt;/li&gt; &#xA; &lt;li&gt;üìä &lt;strong&gt;Live statistics&lt;/strong&gt; - 365 unique integrations, 29,445 total nodes&lt;/li&gt; &#xA; &lt;li&gt;üéØ &lt;strong&gt;Smart categorization&lt;/strong&gt; by trigger type and complexity&lt;/li&gt; &#xA; &lt;li&gt;üéØ &lt;strong&gt;Use case categorization&lt;/strong&gt; by service name mapped to categories&lt;/li&gt; &#xA; &lt;li&gt;üìÑ &lt;strong&gt;On-demand JSON viewing&lt;/strong&gt; and download&lt;/li&gt; &#xA; &lt;li&gt;üîó &lt;strong&gt;Mermaid diagram generation&lt;/strong&gt; for workflow visualization&lt;/li&gt; &#xA; &lt;li&gt;üîÑ &lt;strong&gt;Real-time workflow naming&lt;/strong&gt; with intelligent formatting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Comparison&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Metric&lt;/th&gt; &#xA;   &lt;th&gt;Old System&lt;/th&gt; &#xA;   &lt;th&gt;New System&lt;/th&gt; &#xA;   &lt;th&gt;Improvement&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;File Size&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;71MB HTML&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;100KB&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;700x smaller&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Load Time&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;10+ seconds&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;1 second&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;10x faster&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Search&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Client-side only&lt;/td&gt; &#xA;   &lt;td&gt;Full-text with FTS5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Instant&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;~2GB RAM&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;50MB RAM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;40x less&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Mobile Support&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Poor&lt;/td&gt; &#xA;   &lt;td&gt;Excellent&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Fully responsive&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üìÇ Repository Organization&lt;/h2&gt; &#xA;&lt;h3&gt;Workflow Collection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2,053 workflows&lt;/strong&gt; with meaningful, searchable names&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;365 unique integrations&lt;/strong&gt; across popular platforms&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29,445 total nodes&lt;/strong&gt; with professional categorization&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Quality assurance&lt;/strong&gt; - All workflows analyzed and categorized&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced Naming System ‚ú®&lt;/h3&gt; &#xA;&lt;p&gt;Our intelligent naming system converts technical filenames into readable titles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: &lt;code&gt;2051_Telegram_Webhook_Automation_Webhook.json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: &lt;code&gt;Telegram Webhook Automation&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;100% meaningful names&lt;/strong&gt; with smart capitalization&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic integration detection&lt;/strong&gt; from node analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use Case Category ‚ú®&lt;/h3&gt; &#xA;&lt;p&gt;The search interface includes a dropdown filter that lets you browse 2,000+ workflows by category.&lt;/p&gt; &#xA;&lt;p&gt;The system includes an automated categorization feature that organizes workflows by service categories to make them easier to discover and filter.&lt;/p&gt; &#xA;&lt;h3&gt;How Categorization Works&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the categorization script&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python create_categories.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Name Recognition&lt;/strong&gt; The script analyzes each workflow JSON filename to identify recognized service names (e.g., &#34;Twilio&#34;, &#34;Slack&#34;, &#34;Gmail&#34;, etc.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Category Mapping&lt;/strong&gt; Each recognized service name is matched to its corresponding category using the definitions in &lt;code&gt;context/def_categories.json&lt;/code&gt;. For example:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Twilio ‚Üí Communication &amp;amp; Messaging&lt;/li&gt; &#xA;   &lt;li&gt;Gmail ‚Üí Communication &amp;amp; Messaging&lt;/li&gt; &#xA;   &lt;li&gt;Airtable ‚Üí Data Processing &amp;amp; Analysis&lt;/li&gt; &#xA;   &lt;li&gt;Salesforce ‚Üí CRM &amp;amp; Sales&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search Categories Generation&lt;/strong&gt; The script produces a &lt;code&gt;search_categories.json&lt;/code&gt; file that contains the categorized workflow data&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Filter Interface&lt;/strong&gt; Users can then filter workflows by category in the search interface, making it easier to find workflows for specific use cases&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Available Categories&lt;/h3&gt; &#xA;&lt;p&gt;The categorization system includes the following main categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AI Agent Development&lt;/li&gt; &#xA; &lt;li&gt;Business Process Automation&lt;/li&gt; &#xA; &lt;li&gt;Cloud Storage &amp;amp; File Management&lt;/li&gt; &#xA; &lt;li&gt;Communication &amp;amp; Messaging&lt;/li&gt; &#xA; &lt;li&gt;Creative Content &amp;amp; Video Automation&lt;/li&gt; &#xA; &lt;li&gt;Creative Design Automation&lt;/li&gt; &#xA; &lt;li&gt;CRM &amp;amp; Sales&lt;/li&gt; &#xA; &lt;li&gt;Data Processing &amp;amp; Analysis&lt;/li&gt; &#xA; &lt;li&gt;E-commerce &amp;amp; Retail&lt;/li&gt; &#xA; &lt;li&gt;Financial &amp;amp; Accounting&lt;/li&gt; &#xA; &lt;li&gt;Marketing &amp;amp; Advertising Automation&lt;/li&gt; &#xA; &lt;li&gt;Project Management&lt;/li&gt; &#xA; &lt;li&gt;Social Media Management&lt;/li&gt; &#xA; &lt;li&gt;Technical Infrastructure &amp;amp; DevOps&lt;/li&gt; &#xA; &lt;li&gt;Web Scraping &amp;amp; Data Extraction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contribute Categories&lt;/h3&gt; &#xA;&lt;p&gt;You can help expand the categorization by adding more service-to-category mappings (e.g., Twilio ‚Üí Communication &amp;amp; Messaging) in context/defs_categories.json.&lt;/p&gt; &#xA;&lt;p&gt;Many workflow JSON files are conveniently named with the service name, often separated by underscores (_).&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üõ† Usage Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Modern Fast System (Recommended)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone repository&#xA;git clone &amp;lt;repo-url&amp;gt;&#xA;cd n8n-workflows&#xA;&#xA;# Install Python dependencies&#xA;pip install -r requirements.txt&#xA;&#xA;# Start the documentation server&#xA;python run.py&#xA;&#xA;# Browse workflows at http://localhost:8000&#xA;# - Instant search across 2,053 workflows&#xA;# - Professional responsive interface&#xA;# - Real-time workflow statistics&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 2: Development Mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Start with auto-reload for development&#xA;python run.py --dev&#xA;&#xA;# Or specify custom host/port&#xA;python run.py --host 0.0.0.0 --port 3000&#xA;&#xA;# Force database reindexing&#xA;python run.py --reindex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Import Workflows into n8n&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Use the Python importer (recommended)&#xA;python import_workflows.py&#xA;&#xA;# Or manually import individual workflows:&#xA;# 1. Open your n8n Editor UI&#xA;# 2. Click menu (‚ò∞) ‚Üí Import workflow&#xA;# 3. Choose any .json file from the workflows/ folder&#xA;# 4. Update credentials/webhook URLs before running&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üìä Workflow Statistics&lt;/h2&gt; &#xA;&lt;h3&gt;Current Collection Stats&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Total Workflows&lt;/strong&gt;: 2,053 automation workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Active Workflows&lt;/strong&gt;: 215 (10.5% active rate)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Total Nodes&lt;/strong&gt;: 29,445 (avg 14.3 nodes per workflow)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unique Integrations&lt;/strong&gt;: 365 different services and APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: SQLite with FTS5 full-text search&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Trigger Distribution&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Complex&lt;/strong&gt;: 831 workflows (40.5%) - Multi-trigger systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Webhook&lt;/strong&gt;: 519 workflows (25.3%) - API-triggered automations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manual&lt;/strong&gt;: 477 workflows (23.2%) - User-initiated workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scheduled&lt;/strong&gt;: 226 workflows (11.0%) - Time-based executions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Complexity Analysis&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low (‚â§5 nodes)&lt;/strong&gt;: ~35% - Simple automations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Medium (6-15 nodes)&lt;/strong&gt;: ~45% - Standard workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High (16+ nodes)&lt;/strong&gt;: ~20% - Complex enterprise systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Popular Integrations&lt;/h3&gt; &#xA;&lt;p&gt;Top services by usage frequency:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt;: Telegram, Discord, Slack, WhatsApp&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Storage&lt;/strong&gt;: Google Drive, Google Sheets, Dropbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: PostgreSQL, MySQL, MongoDB, Airtable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AI/ML&lt;/strong&gt;: OpenAI, Anthropic, Hugging Face&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;: HTTP Request, Webhook, GraphQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üîç Advanced Search Features&lt;/h2&gt; &#xA;&lt;h3&gt;Smart Search Categories&lt;/h3&gt; &#xA;&lt;p&gt;Our system automatically categorizes workflows into 12 service categories:&lt;/p&gt; &#xA;&lt;h4&gt;Available Categories:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;messaging&lt;/strong&gt;: Telegram, Discord, Slack, WhatsApp, Teams&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ai_ml&lt;/strong&gt;: OpenAI, Anthropic, Hugging Face&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;database&lt;/strong&gt;: PostgreSQL, MySQL, MongoDB, Redis, Airtable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;email&lt;/strong&gt;: Gmail, Mailjet, Outlook, SMTP/IMAP&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cloud_storage&lt;/strong&gt;: Google Drive, Google Docs, Dropbox, OneDrive&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;project_management&lt;/strong&gt;: Jira, GitHub, GitLab, Trello, Asana&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;social_media&lt;/strong&gt;: LinkedIn, Twitter/X, Facebook, Instagram&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ecommerce&lt;/strong&gt;: Shopify, Stripe, PayPal&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;analytics&lt;/strong&gt;: Google Analytics, Mixpanel&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;calendar_tasks&lt;/strong&gt;: Google Calendar, Cal.com, Calendly&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;forms&lt;/strong&gt;: Typeform, Google Forms, Form Triggers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;development&lt;/strong&gt;: Webhook, HTTP Request, GraphQL, SSE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API Usage Examples&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Search workflows by text&#xA;curl &#34;http://localhost:8000/api/workflows?q=telegram+automation&#34;&#xA;&#xA;# Filter by trigger type and complexity&#xA;curl &#34;http://localhost:8000/api/workflows?trigger=Webhook&amp;amp;complexity=high&#34;&#xA;&#xA;# Find all messaging workflows&#xA;curl &#34;http://localhost:8000/api/workflows/category/messaging&#34;&#xA;&#xA;# Get database statistics&#xA;curl &#34;http://localhost:8000/api/stats&#34;&#xA;&#xA;# Browse available categories&#xA;curl &#34;http://localhost:8000/api/categories&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üèó Technical Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;Modern Stack&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQLite Database&lt;/strong&gt; - FTS5 full-text search with 365 indexed integrations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FastAPI Backend&lt;/strong&gt; - RESTful API with automatic OpenAPI documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Responsive Frontend&lt;/strong&gt; - Modern HTML5 with embedded CSS/JavaScript&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smart Analysis&lt;/strong&gt; - Automatic workflow categorization and naming&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Key Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change Detection&lt;/strong&gt; - MD5 hashing for efficient re-indexing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Background Processing&lt;/strong&gt; - Non-blocking workflow analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compressed Responses&lt;/strong&gt; - Gzip middleware for optimal speed&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt; - Graceful degradation and comprehensive logging&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile Optimization&lt;/strong&gt; - Touch-friendly interface design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Database Performance&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Optimized schema for lightning-fast queries&#xA;CREATE TABLE workflows (&#xA;    id INTEGER PRIMARY KEY,&#xA;    filename TEXT UNIQUE,&#xA;    name TEXT,&#xA;    active BOOLEAN,&#xA;    trigger_type TEXT,&#xA;    complexity TEXT,&#xA;    node_count INTEGER,&#xA;    integrations TEXT,  -- JSON array of 365 unique services&#xA;    description TEXT,&#xA;    file_hash TEXT,     -- MD5 for change detection&#xA;    analyzed_at TIMESTAMP&#xA;);&#xA;&#xA;-- Full-text search with ranking&#xA;CREATE VIRTUAL TABLE workflows_fts USING fts5(&#xA;    filename, name, description, integrations, tags,&#xA;    content=&#39;workflows&#39;, content_rowid=&#39;id&#39;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üîß Setup &amp;amp; Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python 3.7+&lt;/strong&gt; - For running the documentation system&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Browser&lt;/strong&gt; - Chrome, Firefox, Safari, Edge&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;50MB Storage&lt;/strong&gt; - For SQLite database and indexes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;n8n Instance&lt;/strong&gt; - For importing and running workflows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone repository&#xA;git clone &amp;lt;repo-url&amp;gt;&#xA;cd n8n-workflows&#xA;&#xA;# Install dependencies&#xA;pip install -r requirements.txt&#xA;&#xA;# Start documentation server&#xA;python run.py&#xA;&#xA;# Access at http://localhost:8000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Development Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Create virtual environment&#xA;python3 -m venv .venv&#xA;source .venv/bin/activate  # Linux/Mac&#xA;# or .venv\Scripts\activate  # Windows&#xA;&#xA;# Install dependencies&#xA;pip install -r requirements.txt&#xA;&#xA;# Run with auto-reload for development&#xA;python api_server.py --reload&#xA;&#xA;# Force database reindexing&#xA;python workflow_db.py --index --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üìã Naming Convention&lt;/h2&gt; &#xA;&lt;h3&gt;Intelligent Formatting System&lt;/h3&gt; &#xA;&lt;p&gt;Our system automatically converts technical filenames to user-friendly names:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Automatic transformations:&#xA;2051_Telegram_Webhook_Automation_Webhook.json ‚Üí &#34;Telegram Webhook Automation&#34;&#xA;0250_HTTP_Discord_Import_Scheduled.json ‚Üí &#34;HTTP Discord Import Scheduled&#34;  &#xA;0966_OpenAI_Data_Processing_Manual.json ‚Üí &#34;OpenAI Data Processing Manual&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Technical Format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ID]_[Service1]_[Service2]_[Purpose]_[Trigger].json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Smart Capitalization Rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;HTTP&lt;/strong&gt; ‚Üí HTTP (not Http)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; ‚Üí API (not Api)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;webhook&lt;/strong&gt; ‚Üí Webhook&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;automation&lt;/strong&gt; ‚Üí Automation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;scheduled&lt;/strong&gt; ‚Üí Scheduled&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üöÄ API Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Core Endpoints&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /&lt;/code&gt; - Main workflow browser interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/stats&lt;/code&gt; - Database statistics and metrics&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/workflows&lt;/code&gt; - Search with filters and pagination&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}&lt;/code&gt; - Detailed workflow information&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}/download&lt;/code&gt; - Download workflow JSON&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}/diagram&lt;/code&gt; - Generate Mermaid diagram&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced Search&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/workflows/category/{category}&lt;/code&gt; - Search by service category&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/categories&lt;/code&gt; - List all available categories&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /api/integrations&lt;/code&gt; - Get integration statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POST /api/reindex&lt;/code&gt; - Trigger background reindexing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Response Examples&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// GET /api/stats&#xA;{&#xA;  &#34;total&#34;: 2053,&#xA;  &#34;active&#34;: 215,&#xA;  &#34;inactive&#34;: 1838,&#xA;  &#34;triggers&#34;: {&#xA;    &#34;Complex&#34;: 831,&#xA;    &#34;Webhook&#34;: 519,&#xA;    &#34;Manual&#34;: 477,&#xA;    &#34;Scheduled&#34;: 226&#xA;  },&#xA;  &#34;total_nodes&#34;: 29445,&#xA;  &#34;unique_integrations&#34;: 365&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;Adding New Workflows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Export workflow&lt;/strong&gt; as JSON from n8n&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Name descriptively&lt;/strong&gt; following the established pattern&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add to workflows/&lt;/strong&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remove sensitive data&lt;/strong&gt; (credentials, personal URLs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run reindexing&lt;/strong&gt; to update the database&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Quality Standards&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚úÖ Workflow must be functional and tested&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Remove all credentials and sensitive data&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Follow naming convention for consistency&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Verify compatibility with recent n8n versions&lt;/li&gt; &#xA; &lt;li&gt;‚úÖ Include meaningful description or comments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Important Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Security &amp;amp; Privacy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Review before use&lt;/strong&gt; - All workflows shared as-is for educational purposes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Update credentials&lt;/strong&gt; - Replace API keys, tokens, and webhooks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Test safely&lt;/strong&gt; - Verify in development environment first&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check permissions&lt;/strong&gt; - Ensure proper access rights for integrations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compatibility&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;n8n Version&lt;/strong&gt; - Compatible with n8n 1.0+ (most workflows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community Nodes&lt;/strong&gt; - Some workflows may require additional node installations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API Changes&lt;/strong&gt; - External services may have updated their APIs since creation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dependencies&lt;/strong&gt; - Verify required integrations before importing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üìö Resources &amp;amp; References&lt;/h2&gt; &#xA;&lt;h3&gt;Workflow Sources&lt;/h3&gt; &#xA;&lt;p&gt;This comprehensive collection includes workflows from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Official n8n.io&lt;/strong&gt; - Documentation and community examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub repositories&lt;/strong&gt; - Open source community contributions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blog posts &amp;amp; tutorials&lt;/strong&gt; - Real-world automation patterns&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User submissions&lt;/strong&gt; - Tested and verified workflows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Enterprise use cases&lt;/strong&gt; - Business process automations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Learn More&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.n8n.io/&#34;&gt;n8n Documentation&lt;/a&gt; - Official documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.n8n.io/&#34;&gt;n8n Community&lt;/a&gt; - Community forum and support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://n8n.io/workflows/&#34;&gt;Workflow Templates&lt;/a&gt; - Official template library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.n8n.io/integrations/&#34;&gt;Integration Docs&lt;/a&gt; - Service-specific guides&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h2&gt;üèÜ Project Achievements&lt;/h2&gt; &#xA;&lt;h3&gt;Repository Transformation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2,053 workflows&lt;/strong&gt; professionally organized and named&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;365 unique integrations&lt;/strong&gt; automatically detected and categorized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;100% meaningful names&lt;/strong&gt; (improved from basic filename patterns)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero data loss&lt;/strong&gt; during intelligent renaming process&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Advanced search&lt;/strong&gt; with 12 service categories&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Performance Revolution&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sub-100ms search&lt;/strong&gt; with SQLite FTS5 full-text indexing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Instant filtering&lt;/strong&gt; across 29,445 workflow nodes&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile-optimized&lt;/strong&gt; responsive design for all devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time statistics&lt;/strong&gt; with live database queries&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Professional interface&lt;/strong&gt; with modern UX principles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;System Reliability&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robust error handling&lt;/strong&gt; with graceful degradation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change detection&lt;/strong&gt; for efficient database updates&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Background processing&lt;/strong&gt; for non-blocking operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive logging&lt;/strong&gt; for debugging and monitoring&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Production-ready&lt;/strong&gt; with proper middleware and security&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;p&gt;&lt;em&gt;This repository represents the most comprehensive and well-organized collection of n8n workflows available, featuring cutting-edge search technology and professional documentation that makes workflow discovery and usage a delightful experience.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üéØ Perfect for&lt;/strong&gt;: Developers, automation engineers, business analysts, and anyone looking to streamline their workflows with proven n8n automations.&lt;/p&gt; &#xA;&lt;hr /&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Zie619/n8n-workflows/main/README_ZH.md&#34;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>