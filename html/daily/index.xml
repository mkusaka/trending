<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-23T01:36:29Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>codrops/ScrollBasedLayoutAnimations</title>
    <updated>2023-07-23T01:36:29Z</updated>
    <id>tag:github.com,2023-07-23:/codrops/ScrollBasedLayoutAnimations</id>
    <link href="https://github.com/codrops/ScrollBasedLayoutAnimations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An exploration of different scroll based layout switch animations using GSAP&#39;s ScrollTrigger and Flip.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;On-Scroll Image Layout Animations&lt;/h1&gt; &#xA;&lt;p&gt;An exploration of different scroll based layout switch animations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://tympanus.net/codrops/wp-content/uploads/2023/07/scrollbased.jpg?x27628&#34; alt=&#34;On-Scroll Image Layout Animations&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tympanus.net/codrops/?p=72941&#34;&gt;Article on Codrops&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://tympanus.net/Development/ScrollBasedLayoutAnimations/&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Run this demo on a &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Tools_and_setup/set_up_a_local_testing_server&#34;&gt;local server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Images generated with &lt;a href=&#34;https://midjourney.com&#34;&gt;Midjourney&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;p&gt;Follow Codrops: &lt;a href=&#34;http://www.twitter.com/codrops&#34;&gt;Twitter&lt;/a&gt;, &lt;a href=&#34;http://www.facebook.com/codrops&#34;&gt;Facebook&lt;/a&gt;, &lt;a href=&#34;https://github.com/codrops&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://www.instagram.com/codropsss/&#34;&gt;Instagram&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/codrops/ScrollBasedLayoutAnimations/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;span&gt;💙&lt;/span&gt; by &lt;a href=&#34;http://www.codrops.com&#34;&gt;Codrops&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>guifaChild/text_to_vedio</title>
    <updated>2023-07-23T01:36:29Z</updated>
    <id>tag:github.com,2023-07-23:/guifaChild/text_to_vedio</id>
    <link href="https://github.com/guifaChild/text_to_vedio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;这是一个由文本直接生成视频的项目&lt;/p&gt;&lt;hr&gt;&lt;center&gt;&#xA; &lt;h1&gt;Text_To_Video &lt;/h1&gt;&#xA;&lt;/center&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;Text_To_Video 是一个利用本文直接生成视频的项目，可以帮助广大自媒体应用者快速批量生产视频，用户可以在本地进行部署。该项目主要是集成了chatglm-6b、stable diffusion、免费的tts服务，最终利用moviepy合成视频。&lt;/p&gt; &#xA;&lt;p&gt;Text_To_Video 项目旨在与开源社区一起推动智能项目的工程落地与发展，恳请开发者和大家遵守开源协议，勿将项目代码及基于项目产生的衍生物用于任何可能给国家和社会带来危害的用途以及用于任何未经过安全评估和备案的服务。 该项目后续会出网页版本、windows应用以及os应用和安卓应用&lt;/p&gt; &#xA;&lt;h2&gt;更新信息&lt;/h2&gt; &#xA;&lt;p&gt;使用教程视频：&lt;a href=&#34;https://space.bilibili.com/1593224315&#34;&gt;https://space.bilibili.com/1593224315&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;[2023/07/16] 发布本地部署，可以支持web网页形式，方便文件的管理，只需要启动根目录下的web_app.py&lt;/p&gt; &#xA;&lt;p&gt;[2023/07/20] 发布打包的版本，没基础的同学，可以双击即可使用。&lt;/p&gt; &#xA;&lt;h2&gt;使用方式&lt;/h2&gt; &#xA;&lt;h3&gt;硬件要求&lt;/h3&gt; 想要批量生成，建议显卡16g+比较合适 &#xA;&lt;h3&gt;环境准备&lt;/h3&gt; 1、 chatglm的安装，直接访问 [chatglm](https://github.com/THUDM/ChatGLM-6B) 。安装即可。 &#xA;&lt;p&gt;2、stable diffusion准备，下载可能比较慢，直接上传百度网盘了。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;链接：https://pan.baidu.com/s/1OEi3nVLS-COZP5Qkmj6b-w   &#xA;提取码：204f   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3、 chatglm、stable diffusion都要启动api服务&lt;/p&gt; &#xA;&lt;p&gt;4、 在data_tts.py中替换你自己的api-key&lt;/p&gt; &#xA;&lt;h3&gt;数据准备&lt;/h3&gt; 具体的数据可以是爬取的小说内容，也可以是利用chatglm或者chatgpt直接生成的内容，但是文本格式要满足一下要求。 &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/guifaChild/text_to_vedio/master/image/img.png&#34; alt=&#34;image/img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;格式说明：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;content是具体的文本信息&lt;/li&gt; &#xA; &lt;li&gt;每一行生成一个视频&lt;/li&gt; &#xA; &lt;li&gt;如果你批量为小说生成视频，type可以是名称，en_name不能重复，直接story+（递增数字）就可以&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;程序运行&lt;/h3&gt; &#xA;&lt;p&gt;直接运行main.py中的main方法即可&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;if __name__ == &#39;__main__&#39;:&#xA;    # 定义源文件的路径&#xA;    # 这里是你自己的源文件路径，一般需要放在data/source_data目录下&#xA;    vedio_path = batch_merge(&#39;data/source_data/example1.csv&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;代码阅读&lt;/h2&gt; &#xA;&lt;p&gt;代码执行逻辑流程如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0、准备语料。&lt;/li&gt; &#xA; &lt;li&gt;1、切割源文件，句号分割语料，形成新的文件。&lt;/li&gt; &#xA; &lt;li&gt;2、利用chatglm生成提示词，prompt negative。&lt;/li&gt; &#xA; &lt;li&gt;3、利用第1步的语料，调用tts的api生成语音。&lt;/li&gt; &#xA; &lt;li&gt;4、利用第2步生成提示词，调用stable diffusion的api生成图片。&lt;/li&gt; &#xA; &lt;li&gt;5、将第3步的语音和第4步的图片合成视频。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;分别对应：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;data_prepare.py&#xA;data_split.py&#xA;data_promt_words.py&#xA;data_tts.py&#xA;data_to_image.py&#xA;data_to_vedio.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;协议&lt;/h2&gt; &#xA;&lt;p&gt;本仓库的代码依照 Apache-2.0 协议开源。&lt;/p&gt; &#xA;&lt;h2&gt;严禁&lt;/h2&gt; &#xA;&lt;p&gt;未经许可，严禁商用。&lt;/p&gt; &#xA;&lt;h2&gt;欢迎关注公众号与知识星球&lt;/h2&gt;QQ群：1083992954 &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/guifaChild/text_to_vedio/master/image/img_1.png&#34; alt=&#34;image/img_1.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/guifaChild/text_to_vedio/master/image/zhishi.jpg&#34; alt=&#34;微信图片_20230612191801.jpg&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zhangwenboi/daimaiqr</title>
    <updated>2023-07-23T01:36:29Z</updated>
    <id>tag:github.com,2023-07-23:/zhangwenboi/daimaiqr</id>
    <link href="https://github.com/zhangwenboi/daimaiqr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;抢票助手,将大麦要抢得场次复制转换为二维码,大麦app扫码进入&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;daimaiqr&lt;/h1&gt; &#xA;&lt;h1&gt;抢票助手&lt;/h1&gt; &#xA;&lt;p&gt;将大麦要抢得场次复制 使用此工具 转换为二维码,大麦app扫码进入,推荐安卓,ios要选观影人.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://daimaiqr.vercel.app/&#34;&gt;直接使用&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;提前十分左右扫码,到点直接点击确认!提交订单就行&lt;/p&gt; &#xA;&lt;p&gt;此工具只提供bp链接的生成,想找全自动的不要想了.&lt;/p&gt; &#xA;&lt;p&gt;全自动的全都是收费的,如果你有时间,善于专研,可以自己尝试下.&lt;/p&gt; &#xA;&lt;p&gt;只提供链接的转换,进抢票群 代抢 出票 +v:&lt;/p&gt; &#xA;&lt;p&gt;同时也回收茅台 数码.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;oooosize&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>