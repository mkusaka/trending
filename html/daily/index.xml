<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-27T01:32:36Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yoheinakajima/instagraph</title>
    <updated>2023-10-27T01:32:36Z</updated>
    <id>tag:github.com,2023-10-27:/yoheinakajima/instagraph</id>
    <link href="https://github.com/yoheinakajima/instagraph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Converts text input or URL into knowledge graph and displays&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Note for non-coders: you can sign up for the waitlist at &lt;a href=&#34;https://instagraph.ai&#34;&gt;instagraph.ai&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;InstaGraph üåê&lt;/h1&gt; &#xA;&lt;p&gt;Hello there, adventurous coder! Welcome to InstaGraph, your go-to application for converting text or URLs into insightful knowledge graphs. Curious about the relationships between entities in a complex topic? Feed the text to InstaGraph and voila! A beautiful knowledge graph is at your fingertips.&lt;/p&gt; &#xA;&lt;p&gt;See example flowcharts generated by InstaGraph &lt;a href=&#34;https://twitter.com/yoheinakajima/status/1701351068817301922&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Powered by OpenAI&#39;s GPT-3.5, this Flask application turns your text into a vividly colored graph, making it easier to visualize relationships between various entities. Enough talking‚Äîlet&#39;s get started!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Author&#39;s TL;DR&lt;/strong&gt;: If you&#39;re just looking for how the knowledge graph is generated, check out the function call parameters taking up half of main.py.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents üìö&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#features-&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#installation-%EF%B8%8F&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#usage-&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#contributing-&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#license-&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features üåü&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic Text to Graph conversion.&lt;/li&gt; &#xA; &lt;li&gt;Color-coded graph nodes and edges.&lt;/li&gt; &#xA; &lt;li&gt;Responsive design‚Äîuse it on any device.&lt;/li&gt; &#xA; &lt;li&gt;Super-duper user-friendly!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;To get started, you&#39;ll need Python and pip installed.&lt;/p&gt; &#xA;&lt;h4&gt;1. Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yoheinakajima/instagraph.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Navigate to the project directory&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd instagraph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Install the required Python packages&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Set up your OpenAI API Key&lt;/h4&gt; &#xA;&lt;p&gt;Change .env.example to .env&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;mv .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add your OpenAI API key to .env file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;OPENAI_API_KEY=your-api-key-here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Optional&lt;/h5&gt; &#xA;&lt;p&gt;Add Neo4J username, password and URL in the &lt;code&gt;*.env&lt;/code&gt; file as well.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;NEO4J_USERNAME=&#xA;NEO4J_PASSWORD=&#xA;NEO4J_URI=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Run the Flask app&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; to see your app running.&lt;/p&gt; &#xA;&lt;h2&gt;Run as Container&lt;/h2&gt; &#xA;&lt;h4&gt;1. Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yoheinakajima/instagraph.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Navigate to the project docker directory&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd instagraph/docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.1 Run in Dev mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose-dev.yml up # Add -d flag at the end to run in background/daemon mode.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.2 Run in Prod - Create the docker image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;gunicorn==21.2.0&lt;/code&gt; to run the application in production mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose.yml up --build -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage üéâ&lt;/h2&gt; &#xA;&lt;h3&gt;Web Interface&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your web browser and navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Type your text or paste a URL in the input box.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Submit&#34; and wait for the magic to happen!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API Endpoints&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET Response Data&lt;/strong&gt;: &lt;code&gt;/get_response_data&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data Params: &lt;code&gt;{&#34;user_input&#34;: &#34;Your text here&#34;}&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: GPT-3.5 processed data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET Graph Data&lt;/strong&gt;: &lt;code&gt;/get_graph_data&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: Graph Data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET History Data&lt;/strong&gt;: &lt;code&gt;/get_graph_history&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: Graph Data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing ü§ù&lt;/h2&gt; &#xA;&lt;p&gt;Best way to chat with me is on Twitter at &lt;a href=&#34;https://twitter.com/yoheinakajima&#34;&gt;@yoheinakajima&lt;/a&gt;. I usually only code on the weekends or at night, and in pretty small chunks. I have lots ideas on what I want to add here, but obviously this would move faster with everyone. Not sure I can manage Github well given my time constraints, so please reach out if you want to help me run the Github. Now, here are a few ideas on what I think we should add based on comments...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;Store knowledge graph&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Pull knowledge graph from storage&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;Show history&lt;/li&gt; &#xA; &lt;li&gt;Ability to combine two graphs&lt;/li&gt; &#xA; &lt;li&gt;Ability to combine 2+ graphs from history&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Ability to expand on a graph&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;Ability to expand on graph from specific nodes&lt;/li&gt; &#xA; &lt;li&gt;Fuzzy matching of nodes for combining graphs (vector match + LLM confirmation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are a lot of &#34;build a chart&#34; tools out there, so instead of doing user account and custom charts, it sounds more fun for me to work on building the largest knowledge graph ever...&lt;/p&gt; &#xA;&lt;p&gt;Before creating an Issue please refer the &lt;a href=&#34;https://github.com/yoheinakajima/instagraph/tree/main/.github/ISSUE_TEMPLATE&#34;&gt;ISSUE_TEMPLATE&lt;/a&gt; provided.&lt;/p&gt; &#xA;&lt;h2&gt;License üìù&lt;/h2&gt; &#xA;&lt;p&gt;MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Enjoy using InstaGraph! üéâ&lt;/p&gt;</summary>
  </entry>
</feed>