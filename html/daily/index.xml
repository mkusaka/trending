<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:34:58Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rafaballerini/Formulario</title>
    <updated>2022-09-11T01:34:58Z</updated>
    <id>tag:github.com,2022-09-11:/rafaballerini/Formulario</id>
    <link href="https://github.com/rafaballerini/Formulario" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Página de formulário com HTML e CSS&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>vmware-tanzu/tanzu-dev-portal</title>
    <updated>2022-09-11T01:34:58Z</updated>
    <id>tag:github.com,2022-09-11:/vmware-tanzu/tanzu-dev-portal</id>
    <link href="https://github.com/vmware-tanzu/tanzu-dev-portal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Content for Tanzu dev portal&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/sites/tanzu-dev-portal/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/b28c2754-da62-4450-951b-d4dbd97710d1/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#about-the-project&#34;&gt;About The Project&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#site-built-with&#34;&gt;Site Built With&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#getting-started-building-a-local-deployment-of-the-tanzu-developer-center&#34;&gt;Getting Started Building a Local Deployment of the Tanzu Developer Center&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#software-installation-prerequisites&#34;&gt;Software Installation Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#run-a-local-copy-of-the-tanzu-developer-center&#34;&gt;Run a Local Copy of the Tanzu Developer Center&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#q-im-receiving-an-error-about-cloning-themesdocsy&#34;&gt;Q. I&#39;m receiving an error about cloning &lt;code&gt;themes/docsy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#q-make-preview-is-throwing-a-fatal-error-pipe-failed-error&#34;&gt;Q. &lt;code&gt;make preview&lt;/code&gt; is throwing a &lt;code&gt;fatal error: pipe failed&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#q-i-am-on-windows-and-make-preview-doesnt-work&#34;&gt;Q. I am on Windows and &lt;code&gt;make preview&lt;/code&gt; doesn&#39;t work&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#open-projects-issues-and-content-backlog&#34;&gt;Open Projects, Issues, and Content Backlog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#contributing-code&#34;&gt;Contributing Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#contributing-content&#34;&gt;Contributing Content&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#code-of-conduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/#tanzu-developer-center-open-source-license&#34;&gt;Tanzu Developer Center Open Source License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vmware-tanzu/tanzu-dev-portal/main/static/images/github/homepage-screenshot.png&#34; alt=&#34;Tanzu Developer Center Screen Shot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The VMware Tanzu Developer Center is a site specifically built to be a great resource for software development teams. The contributions on the Tanzu Developer Center are from teams across VMware, as well as individuals without.&lt;/p&gt; &#xA;&lt;p&gt;Our guiding principle is to ensure readers have free, immediate access to all the content on the Tanzu Developer Center. No purchase is ever necessary to access content on the Tanzu Developer Center because it is either open source or an easily accessible trial.&lt;/p&gt; &#xA;&lt;h3&gt;Site Built With&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netlify.com&#34;&gt;Netlify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nektos/act&#34;&gt;act&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started Building a Local Deployment of the Tanzu Developer Center&lt;/h2&gt; &#xA;&lt;p&gt;Before you can build a local copy of the Tanzu Developer Center, there are software prerequisites that you’re going to need to install.&lt;/p&gt; &#xA;&lt;h3&gt;Software Installation Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Hugo&lt;/strong&gt; — The VMware Tanzu Developer Center uses &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; to build the site from Markdown files. You&#39;ll need to &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;get Hugo&lt;/a&gt; if you want to build and run the site locally. Make sure you install the extended version with built in SCSS/SASS support. This site pins hugo to a specific version (currently &lt;strong&gt;0.82.0&lt;/strong&gt;) to build so if you&#39;re using a different version, your experience may vary. To install this version:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download the correct binary for your OS from &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.82.0&#34;&gt;gohugo GitHub releases page for 0.82.0&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Move the &lt;code&gt;hugo&lt;/code&gt; binary to an appropriate location and/or add it to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install NPM&lt;/strong&gt; — Hugo uses NPM to manage its local packages. If you don’t already have it installed, you’ll need it to move further.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install npm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;act&lt;/a&gt;&lt;/strong&gt; — Used to runs GitHub Action’s tests locally. The Tanzu Developer Center uses GitHub Actions to perform automated testing periodically, and on pull requests.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The tests currently break on &lt;code&gt;act&lt;/code&gt; &amp;gt; &lt;a href=&#34;https://github.com/nektos/act/releases/tag/v0.2.20&#34;&gt;v0.2.20, be sure to install v0.2.20&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt; — Used to build images for local automated tests.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; (Mac OS X requires Docker Desktop 2.4, or later)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install docker --cask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run a Local Copy of the Tanzu Developer Center&lt;/h3&gt; &#xA;&lt;p&gt;To get a local copy of the Tanzu Developer Center up and running follow these steps.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recurse-submodules https://github.com/vmware-tanzu/tanzu-dev-portal.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build a preview of the website. The website will be available at &lt;a href=&#34;http://localhost:1313/developer&#34;&gt;&lt;code&gt;http://localhost:1313/developer&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make preview&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Q. I&#39;m receiving an error about cloning &lt;code&gt;themes/docsy&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;With the change with how the theme files are overridden, the first time you update your branch you may see the following issue when running &lt;code&gt;make preview&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive&#xA;Submodule &#39;themes/docsy&#39; (https://github.com/google/docsy.git) registered for path &#39;themes/docsy&#39;&#xA;fatal: not a git repository: /private/tmp/tanzu-dev-portal/themes/docsy/../../.git/modules/themes/docsy&#xA;Failed to clone &#39;themes/docsy&#39;. Retry scheduled&#xA;BUG: submodule considered for cloning, doesn&#39;t need cloning any more?&#xA;fatal: could not get a repository handle for submodule &#39;themes/docsy&#39;&#xA;make: *** [theme] Error 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run the following command for a one-time fix:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf .git/modules &amp;amp;&amp;amp; rm -rf themes/docsy &amp;amp;&amp;amp; mkdir themes/docsy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Q. &lt;code&gt;make preview&lt;/code&gt; is throwing a &lt;code&gt;fatal error: pipe failed&lt;/code&gt; error&lt;/h3&gt; &#xA;&lt;p&gt;This is due to the number of files that are opened during the process of building the site. If you&#39;re on OSX, this can be addressed with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo launchctl limit maxfiles 65535 200000&#xA;ulimit -n 65535&#xA;sudo sysctl -w kern.maxfiles=100000&#xA;sudo sysctl -w kern.maxfilesperproc=65535&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Q. I am on Windows and &lt;code&gt;make preview&lt;/code&gt; doesn&#39;t work&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, you may need to use &lt;code&gt;hugo server -D&lt;/code&gt; to start the application. The site will then be available on &lt;code&gt;http://localhost:1313/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open Projects, Issues, and Content Backlog&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/issues&#34;&gt;open issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/projects&#34;&gt;project boards&lt;/a&gt; for a list of proposed features, content backlog, and known issues.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Content contributions are what make open source and the developer community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing Code&lt;/h3&gt; &#xA;&lt;p&gt;The code contribution process is documented in &lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing Content&lt;/h3&gt; &#xA;&lt;p&gt;The content contribution process is documented fully on our GitHub &lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/wiki&#34;&gt;wiki site&lt;/a&gt; and includes methods for both VMware employees as well as non-employees to contribute to content or bug fixes.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;We, the Admin team of the Tanzu Developer Center adhere to a code of conduct that you can read more about here: &lt;code&gt;&lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/raw/main/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tanzu Developer Center Open Source License&lt;/h2&gt; &#xA;&lt;p&gt;The Tanzu Developer Center is distributed under the Apache License .For more information, see &lt;code&gt;&lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitter/twemoji</title>
    <updated>2022-09-11T01:34:58Z</updated>
    <id>tag:github.com,2022-09-11:/twitter/twemoji</id>
    <link href="https://github.com/twitter/twemoji" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emoji for everyone. https://twemoji.twitter.com/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twitter Emoji (Twemoji) &lt;a href=&#34;https://travis-ci.org/twitter/twemoji&#34;&gt;&lt;img src=&#34;https://travis-ci.org/twitter/twemoji.svg?branch=gh-pages&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A simple library that provides standard Unicode &lt;a href=&#34;http://en.wikipedia.org/wiki/Emoji&#34;&gt;emoji&lt;/a&gt; support across all platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Twemoji v14.0&lt;/strong&gt; adheres to the &lt;a href=&#34;https://unicode.org/versions/Unicode14.0.0/&#34;&gt;Unicode 14.0 spec&lt;/a&gt; and supports the &lt;a href=&#34;https://www.unicode.org/reports/tr51/tr51-21.html&#34;&gt;Emoji 14.0 spec&lt;/a&gt;. &lt;em&gt;We do not support custom emoji.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Twemoji library offers support for all Unicode-defined emoji which are recommended for general interchange (RGI).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;CDN Support&lt;/h3&gt; &#xA;&lt;p&gt;The folks over at &lt;a href=&#34;https://www.maxcdn.com&#34;&gt;MaxCDN&lt;/a&gt; have graciously provided CDN support.&lt;/p&gt; &#xA;&lt;p&gt;Use the following in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag of your HTML document(s):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://twemoji.maxcdn.com/v/latest/twemoji.min.js&#34; crossorigin=&#34;anonymous&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This guarantees that you will always use the latest version of the library.&lt;/p&gt; &#xA;&lt;p&gt;If, instead, you&#39;d like to include the latest version explicitly, you can add the following tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://twemoji.maxcdn.com/v/14.0.2/twemoji.min.js&#34; integrity=&#34;sha384-32KMvAMS4DUBcQtHG6fzADguo/tpN1Nh6BAJa2QqZc6/i0K+YPQE+bWiqBRAWuFs&#34; crossorigin=&#34;anonymous&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;If instead you want to download a specific version, please look at the &lt;code&gt;gh-pages&lt;/code&gt; branch, where you will find the built assets for both our latest and older versions.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;Following are all the methods exposed in the &lt;code&gt;twemoji&lt;/code&gt; namespace.&lt;/p&gt; &#xA;&lt;h3&gt;twemoji.parse( ... ) V1&lt;/h3&gt; &#xA;&lt;p&gt;This is the main parsing utility and has 3 overloads per parsing type.&lt;/p&gt; &#xA;&lt;p&gt;Although there are two kinds of parsing supported by this utility, we recommend you use &lt;a href=&#34;https://github.com/twitter/twemoji#dom-parsing&#34;&gt;DOM parsing&lt;/a&gt;, explained below. Each type of parsing accepts a callback to generate an image source or an options object with parsing info.&lt;/p&gt; &#xA;&lt;p&gt;The second kind of parsing is string parsing, explained in the legacy documentation &lt;a href=&#34;https://github.com/twitter/twemoji/raw/master/LEGACY.md#string-parsing&#34;&gt;here&lt;/a&gt;. This is unrecommended because this method does not sanitize the string or otherwise prevent malicious code from being executed; such sanitization is out of scope.&lt;/p&gt; &#xA;&lt;h4&gt;DOM parsing&lt;/h4&gt; &#xA;&lt;p&gt;If the first argument to &lt;code&gt;twemoji.parse&lt;/code&gt; is an &lt;code&gt;HTMLElement&lt;/code&gt;, generated image tags will replace emoji that are &lt;strong&gt;inside &lt;code&gt;#text&lt;/code&gt; nodes only&lt;/strong&gt; without compromising surrounding nodes or listeners, and completely avoiding the usage of &lt;code&gt;innerHTML&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If security is a major concern, this parsing can be considered the safest option but with a slight performance penalty due to DOM operations that are inevitably &lt;em&gt;costly&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var div = document.createElement(&#39;div&#39;);&#xA;div.textContent = &#39;I \u2764\uFE0F emoji!&#39;;&#xA;document.body.appendChild(div);&#xA;&#xA;twemoji.parse(document.body);&#xA;&#xA;var img = div.querySelector(&#39;img&#39;);&#xA;&#xA;// note the div is preserved&#xA;img.parentNode === div; // true&#xA;&#xA;img.src;        // https://twemoji.maxcdn.com/v/latest/72x72/2764.png&#xA;img.alt;        // \u2764\uFE0F&#xA;img.className;  // emoji&#xA;img.draggable;  // false&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All other overloads described for &lt;code&gt;string&lt;/code&gt; are available in exactly the same way for DOM parsing.&lt;/p&gt; &#xA;&lt;h3&gt;Object as parameter&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s the list of properties accepted by the optional object that can be passed to the &lt;code&gt;parse&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  {&#xA;    callback: Function,   // default the common replacer&#xA;    attributes: Function, // default returns {}&#xA;    base: string,         // default MaxCDN&#xA;    ext: string,          // default &#34;.png&#34;&#xA;    className: string,    // default &#34;emoji&#34;&#xA;    size: string|number,  // default &#34;72x72&#34;&#xA;    folder: string        // in case it&#39;s specified&#xA;                          // it replaces .size info, if any&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;callback&lt;/h4&gt; &#xA;&lt;p&gt;The function to invoke in order to generate image &lt;code&gt;src&lt;/code&gt;(s).&lt;/p&gt; &#xA;&lt;p&gt;By default it is a function like the following one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function imageSourceGenerator(icon, options) {&#xA;  return &#39;&#39;.concat(&#xA;    options.base, // by default Twitter Inc. CDN&#xA;    options.size, // by default &#34;72x72&#34; string&#xA;    &#39;/&#39;,&#xA;    icon,         // the found emoji as code point&#xA;    options.ext   // by default &#34;.png&#34;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;base&lt;/h4&gt; &#xA;&lt;p&gt;The default url is the same as &lt;code&gt;twemoji.base&lt;/code&gt;, so if you modify the former, it will reflect as default for all parsed strings or nodes.&lt;/p&gt; &#xA;&lt;h4&gt;ext&lt;/h4&gt; &#xA;&lt;p&gt;The default image extension is the same as &lt;code&gt;twemoji.ext&lt;/code&gt; which is &lt;code&gt;&#34;.png&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you modify the former, it will reflect as default for all parsed strings or nodes.&lt;/p&gt; &#xA;&lt;h4&gt;className&lt;/h4&gt; &#xA;&lt;p&gt;The default &lt;code&gt;class&lt;/code&gt; for each generated image is &lt;code&gt;emoji&lt;/code&gt;. It is possible to specify a different one through this property.&lt;/p&gt; &#xA;&lt;h5&gt;size&lt;/h5&gt; &#xA;&lt;p&gt;The default asset size is the same as &lt;code&gt;twemoji.size&lt;/code&gt; which is &lt;code&gt;&#34;72x72&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you modify the former, it will reflect as default for all parsed strings or nodes.&lt;/p&gt; &#xA;&lt;h4&gt;folder&lt;/h4&gt; &#xA;&lt;p&gt;In case you don&#39;t want to specify a size for the image. It is possible to choose a folder, as in the case of SVG emoji.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;twemoji.parse(genericNode, {&#xA;  folder: &#39;svg&#39;,&#xA;  ext: &#39;.svg&#39;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate urls such &lt;code&gt;https://twemoji.maxcdn.com/svg/2764.svg&lt;/code&gt; instead of using a specific size based image.&lt;/p&gt; &#xA;&lt;h2&gt;Utilities&lt;/h2&gt; &#xA;&lt;p&gt;Basic utilities / helpers to convert code points to JavaScript surrogates and vice versa.&lt;/p&gt; &#xA;&lt;h3&gt;twemoji.convert.fromCodePoint()&lt;/h3&gt; &#xA;&lt;p&gt;For a given HEX codepoint, returns UTF-16 surrogate pairs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;twemoji.convert.fromCodePoint(&#39;1f1e8&#39;);&#xA; // &#34;\ud83c\udde8&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;twemoji.convert.toCodePoint()&lt;/h3&gt; &#xA;&lt;p&gt;For given UTF-16 surrogate pairs, returns the equivalent HEX codepoint.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt; twemoji.convert.toCodePoint(&#39;\ud83c\udde8\ud83c\uddf3&#39;);&#xA; // &#34;1f1e8-1f1f3&#34;&#xA;&#xA; twemoji.convert.toCodePoint(&#39;\ud83c\udde8\ud83c\uddf3&#39;, &#39;~&#39;);&#xA; // &#34;1f1e8~1f1f3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;h3&gt;Inline Styles&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like to size the emoji according to the surrounding text, you can add the following CSS to your stylesheet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;img.emoji {&#xA;   height: 1em;&#xA;   width: 1em;&#xA;   margin: 0 .05em 0 .1em;&#xA;   vertical-align: -0.1em;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will make sure emoji derive their width and height from the &lt;code&gt;font-size&lt;/code&gt; of the text they&#39;re shown with. It also adds just a little bit of space before and after each emoji, and pulls them upwards a little bit for better optical alignment.&lt;/p&gt; &#xA;&lt;h3&gt;UTF-8 Character Set&lt;/h3&gt; &#xA;&lt;p&gt;To properly support emoji, the document character set must be set to UTF-8. This can be done by including the following meta tag in the document &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;meta charset=&#34;utf-8&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exclude Characters (V1)&lt;/h3&gt; &#xA;&lt;p&gt;To exclude certain characters from being replaced by twemoji.js, call twemoji.parse() with a callback, returning false for the specific unicode icon. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;twemoji.parse(document.body, {&#xA;    callback: function(icon, options, variant) {&#xA;        switch ( icon ) {&#xA;            case &#39;a9&#39;:      // © copyright&#xA;            case &#39;ae&#39;:      // ® registered trademark&#xA;            case &#39;2122&#39;:    // ™ trademark&#xA;                return false;&#xA;        }&#xA;        return &#39;&#39;.concat(options.base, options.size, &#39;/&#39;, icon, options.ext);&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Legacy API (V1)&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re still using our V1 API, you can read our legacy documentation &lt;a href=&#34;https://github.com/twitter/twemoji/tree/master/LEGACY.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The contributing documentation can be found &lt;a href=&#34;https://github.com/twitter/twemoji/tree/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Attribution Requirements&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project, attribution is critical from a legal, practical and motivational perspective in our opinion. The graphics are licensed under the CC-BY 4.0 which has a pretty good guide on &lt;a href=&#34;https://wiki.creativecommons.org/Best_practices_for_attribution&#34;&gt;best practices for attribution&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;However, we consider the guide a bit onerous and as a project, will accept a mention in a project README or an &#39;About&#39; section or footer on a website. In mobile applications, a common place would be in the Settings/About section (for example, see the mobile Twitter application Settings-&amp;gt;About-&amp;gt;Legal section). We would consider a mention in the HTML/JS source sufficient also.&lt;/p&gt; &#xA;&lt;h2&gt;Community Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twemoji-cheatsheet.vercel.app&#34;&gt;Twemoji Cheatsheet&lt;/a&gt; by &lt;a href=&#34;https://github.com/ShahriarKh&#34;&gt;@ShahriarKh&lt;/a&gt;: An easy-to-use cheatsheet for exploring, copying and downloading emojis!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SebastianAigner/twemoji-amazing&#34;&gt;Twemoji Amazing&lt;/a&gt; by &lt;a href=&#34;https://github.com/SebastianAigner&#34;&gt;@SebastianAigner&lt;/a&gt;: Use Twemoji using CSS classes (like &lt;a href=&#34;http://fortawesome.github.io/Font-Awesome/&#34;&gt;Font Awesome&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jollygoodcode/twemoji&#34;&gt;Twemoji Ruby&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jollygoodcode&#34;&gt;@JollyGoodCode&lt;/a&gt;: Use Twemoji in Ruby.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gustavwilliam/twemoji-utils&#34;&gt;Twemoji Utils&lt;/a&gt; by &lt;a href=&#34;https://github.com/gustavwilliam&#34;&gt;@gustavwilliam&lt;/a&gt;: Utilities for finding and downloading Twemoji source files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nathanielw/Twemoji-for-Pencil&#34;&gt;Twemoji for Pencil&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/nathanielnw&#34;&gt;@Nathanielnw&lt;/a&gt;: Use Twemoji in Pencil.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.frenchw.net/FrwTwemoji/&#34;&gt;FrwTwemoji - Twemoji in dotnet&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/frenchw&#34;&gt;@FrenchW&lt;/a&gt;: Use Twemoji in any dotnet project (C#, asp.net ...).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datenstrom/yellow-extensions/tree/master/source/emojiawesome&#34;&gt;Emojiawesome - Twemoji for Yellow&lt;/a&gt; by &lt;a href=&#34;https://github.com/datenstrom/&#34;&gt;@datenstrom&lt;/a&gt;: Use Twemoji on your website.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danbovey/EmojiPanel&#34;&gt;EmojiPanel for Twitter&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/danielbovey/status/749580050274582528&#34;&gt;@danielbovey&lt;/a&gt;: Insert Twemoji into your tweets on twitter.com.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eosrei/twemoji-color-font&#34;&gt;Twitter Color Emoji font&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/bderickson&#34;&gt;@bderickson&lt;/a&gt;: Use Twemoji as your system default font on Linux &amp;amp; OS X.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xoudini/emojica&#34;&gt;Emojica&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/xoudini&#34;&gt;@xoudini&lt;/a&gt;: An iOS framework allowing you to replace all standard emoji in strings with Twemoji.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phpmonkeys-de/gwt-twemoji&#34;&gt;gwt-twemoji&lt;/a&gt; by &lt;a href=&#34;https://github.com/nbartels&#34;&gt;@nbartels&lt;/a&gt;: Use Twemoji in GWT&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pavlobu/emoji-text-flow-javafx&#34;&gt;JavaFXEmojiTextFlow&lt;/a&gt; by &lt;a href=&#34;https://github.com/pavlobu&#34;&gt;@pavlobu&lt;/a&gt;: A JavaFX library allowing you to replace all standard emoji in extended EmojiTextFlow with Twemoji.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevinfaguiar/vue-twemoji-picker&#34;&gt;Vue Twemoji Picker&lt;/a&gt; by &lt;a href=&#34;https://github.com/kevinfaguiar&#34;&gt;@kevinfaguiar&lt;/a&gt;: A fast plug-n-play Twemoji Picker (+textarea for Twemoji rendering) for Vue.&lt;/li&gt; &#xA; &lt;li&gt;[Unmaintained] &lt;a href=&#34;http://ellekasai.github.io/twemoji-awesome/&#34;&gt;Twemoji Awesome&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/ellekasai/&#34;&gt;@ellekasai&lt;/a&gt;: Use Twemoji using CSS classes (like &lt;a href=&#34;http://fortawesome.github.io/Font-Awesome/&#34;&gt;Font Awesome&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KasperGam/EmojiOnRoku&#34;&gt;EmojiOnRoku&lt;/a&gt; by &lt;a href=&#34;https://github.com/KasperGam&#34;&gt;@KasperGam&lt;/a&gt;: Use Twemoji on Roku!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/rossel.jost/latex-twemojis&#34;&gt;LaTeX Twemoji&lt;/a&gt; by &lt;a href=&#34;https://gitlab.com/rossel.jost&#34;&gt;@rossel.jost&lt;/a&gt;: Use Twemoji in LaTeX.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Astrotomic/php-twemoji&#34;&gt;PHP Twemoji&lt;/a&gt; by &lt;a href=&#34;https://github.com/Astrotomic&#34;&gt;@Astrotomic&lt;/a&gt;: Use twemoji within your PHP website project&#39;s by replacing standard Emoji with twemoji urls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Committers and Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Justine De Caires (Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Jason Sofonia (Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Bryan Haggerty (ex-Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Nathan Downs (ex-Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Tom Wuttke (ex-Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Andrea Giammarchi (ex-Twitter)&lt;/li&gt; &#xA; &lt;li&gt;Joen Asmussen (WordPress)&lt;/li&gt; &#xA; &lt;li&gt;Marcus Kazmierczak (WordPress)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The goal of this project is to simply provide emoji for everyone. We definitely welcome improvements and fixes, but we may not merge every pull request suggested by the community due to the simple nature of the project.&lt;/p&gt; &#xA;&lt;p&gt;The rules for contributing are available in the &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Thank you to all of our &lt;a href=&#34;https://github.com/twitter/twemoji/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2019 Twitter, Inc and other contributors&lt;/p&gt; &#xA;&lt;p&gt;Code licensed under the MIT License: &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Graphics licensed under CC-BY 4.0: &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;https://creativecommons.org/licenses/by/4.0/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>