<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-17T01:30:56Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>steve-downey/papers</title>
    <updated>2022-06-17T01:30:56Z</updated>
    <id>tag:github.com,2022-06-17:/steve-downey/papers</id>
    <link href="https://github.com/steve-downey/papers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source for papers and proposals&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>Alpha-Yang/CS-BAOYAN-2022</title>
    <updated>2022-06-17T01:30:56Z</updated>
    <id>tag:github.com,2022-06-17:/Alpha-Yang/CS-BAOYAN-2022</id>
    <link href="https://github.com/Alpha-Yang/CS-BAOYAN-2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;计算机保研交流群（QQ群号：605176069）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CS-BAOYAN-2022&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;全国最大非商业用爱交流计算机保研交流群&lt;/strong&gt;（QQ群号：605176069）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;全国最大非商业用爱交流计算机保研交流群2&lt;/strong&gt;（QQ群号：943826679）&lt;/p&gt; &#xA;&lt;p&gt;关于 &lt;a href=&#34;https://github.com/LinghaoChan/CSSummerCamp2022&#34;&gt;2022年CS保研夏令营通知&lt;/a&gt; 公告汇总。欢迎大家积极分享夏令营信息，资瓷一下互联网精神吼不吼啊？&lt;/p&gt; &#xA;&lt;h2&gt;CONTRIBUTION&lt;/h2&gt; &#xA;&lt;p&gt;我们正在收集2018级同学保研经验贴，欢迎大家star &amp;amp; fork！&lt;/p&gt; &#xA;&lt;p&gt;为了能给学弟学妹们更详细的参考与帮助，现在面向全群征集大家公开在社交媒体平台的保研经验贴（知乎、CSDN等均可）&lt;/p&gt; &#xA;&lt;p&gt;熟悉 Github Pull requests 的同学可以直接把自己经验贴添加了后pr给我们，记得保证版本与我的仓库一致。&lt;/p&gt; &#xA;&lt;p&gt;对PR不熟悉的同学，可以查阅 &lt;a href=&#34;https://github.com/firstcontributions/first-contributions/raw/master/translations/README.chs.md&#34;&gt;第一次参与开源&lt;/a&gt; 中的流程；也可以进群，选择把经验贴网络链接发至群公告中的邮箱，我们会之后统一整理。&lt;/p&gt; &#xA;&lt;p&gt;当然，如果你对本仓库的任何板块，例如复习资料、推荐资料等，想要贡献或者提建议，我们也十分欢迎 pr 和 issue 。&lt;/p&gt; &#xA;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;p&gt;本仓库的资料来源网络及群友贡献，如果你认为本仓库的任何资料有著作权、引用上的争议，欢迎向我们提出 issue 我们会及时整改。&lt;/p&gt; &#xA;&lt;p&gt;2群是扩充容量的作用，请加入1群的群友别加入2群，如果1群无法加入说明容量满了，请加入2群。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fengdu78/deeplearning_ai_books</title>
    <updated>2022-06-17T01:30:56Z</updated>
    <id>tag:github.com,2022-06-17:/fengdu78/deeplearning_ai_books</id>
    <link href="https://github.com/fengdu78/deeplearning_ai_books" rel="alternate"></link>
    <summary type="html">&lt;p&gt;deeplearning.ai（吴恩达老师的深度学习课程笔记及资源）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deeplearning.ai深度学习教程中文笔记&lt;/h1&gt; &#xA;&lt;p&gt;课程概述&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mooc.study.163.com/university/deeplearning_ai#/c&#34;&gt;https://mooc.study.163.com/university/deeplearning_ai#/c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.ai-start.com/dl2017&#34;&gt;&lt;strong&gt;笔记在线阅读&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;这些课程专为已有一定基础（基本的编程知识，熟悉&lt;strong&gt;Python&lt;/strong&gt;、对机器学习有基本了解），想要尝试进入人工智能领域的计算机专业人士准备。介绍显示：“深度学习是科技业最热门的技能之一，本课程将帮你掌握深度学习。”&lt;/p&gt; &#xA;&lt;p&gt;在这5堂课中，学生将可以学习到深度学习的基础，学会构建神经网络，并用在包括吴恩达本人在内的多位业界顶尖专家指导下创建自己的机器学习项目。&lt;strong&gt;Deep Learning Specialization&lt;/strong&gt;对卷积神经网络 (&lt;strong&gt;CNN&lt;/strong&gt;)、递归神经网络 (&lt;strong&gt;RNN&lt;/strong&gt;)、长短期记忆 (&lt;strong&gt;LSTM&lt;/strong&gt;) 等深度学习常用的网络结构、工具和知识都有涉及。&lt;/p&gt; &#xA;&lt;p&gt;课程中也会有很多实操项目，帮助学生更好地应用自己学到的深度学习技术，解决真实世界问题。这些项目将涵盖医疗、自动驾驶、和自然语言处理等时髦领域，以及音乐生成等等。&lt;strong&gt;Coursera&lt;/strong&gt;上有一些特定方向和知识的资料，但一直没有比较全面、深入浅出的深度学习课程——《深度学习专业》的推出补上了这一空缺。&lt;/p&gt; &#xA;&lt;p&gt;课程的语言是&lt;strong&gt;Python&lt;/strong&gt;，使用的框架是&lt;strong&gt;Google&lt;/strong&gt;开源的&lt;strong&gt;TensorFlow&lt;/strong&gt;。最吸引人之处在于，课程导师就是吴恩达本人，两名助教均来自斯坦福计算机系。完成课程所需时间根据不同的学习进度，大约需要3-4个月左右。学生结课后，&lt;strong&gt;Coursera&lt;/strong&gt;将授予他们&lt;strong&gt;Deep Learning Specialization&lt;/strong&gt;结业证书。&lt;/p&gt; &#xA;&lt;p&gt;“我们将帮助你掌握深度学习，理解如何应用深度学习，在人工智能业界开启你的职业生涯。”吴恩达在课程页面中提到。&lt;/p&gt; &#xA;&lt;p&gt;本人黄海广博士，以前写过吴恩达老师的机器学习个人笔记。目前我正在组织团队整理中文笔记，由热心的朋友无偿帮忙制作整理，并持续更新。我们的团队的工作致力于&lt;strong&gt;AI&lt;/strong&gt;在国内的推广，不会损害&lt;strong&gt;Coursera&lt;/strong&gt;以及吴恩达老师的商业利益。&lt;/p&gt; &#xA;&lt;p&gt;本人水平有限，如有公式、算法错误，请及时指出，发邮件给我。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;笔记是根据视频和字幕写的，没有技术含量，只需要专注和严谨。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;黄海广&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/people/fengdu78/activities&#34;&gt;我的知乎&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;机器学习qq群：955171419（我们有13个群，加过一个就不需要加了）&lt;/p&gt; &#xA;&lt;p&gt;微信公众号：机器学习初学者 &lt;img src=&#34;https://raw.githubusercontent.com/fengdu78/deeplearning_ai_books/master/images/gongzhong.jpg&#34; alt=&#34;gongzhong&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/people/fengdu78/&#34;&gt;我的知乎&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;主要编写人员&lt;/strong&gt;：黄海广、林兴木（第四所有底稿，第五课第一二周，第三周前三节）、祝彦森:（第三课所有底稿）、贺志尧（第五课第三周底稿）、张笑钦、覃立波、王翔、胡瀚文、 余笑、 郑浩、李怀松、 朱越鹏、陈伟贺、 曹越、 路皓翔、邱牧宸、 唐天泽、 张浩、 陈志豪、 游忍、 泽霖、沈伟臣、 贾红顺、 时超、 陈哲、赵一帆、 胡潇杨、段希、于冲、张鑫倩&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;参与编辑人员&lt;/strong&gt;：黄海广、陈康凯、石晴路、钟博彦、向伟、严凤龙、刘成 、贺志尧、段希、陈瑶、林家泳、王翔、 谢士晨、蒋鹏&lt;/p&gt; &#xA;&lt;p&gt;2018-04-14&lt;/p&gt; &#xA;&lt;p&gt;本课程视频教程地址（B站）：&lt;a href=&#34;https://www.bilibili.com/video/BV16r4y1Y7jv&#34;&gt;https://www.bilibili.com/video/BV16r4y1Y7jv&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.ai-start.com&#34;&gt;笔记网站(适合手机阅读)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;吴恩达老师的机器学习课程笔记和视频：&lt;a href=&#34;https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes&#34;&gt;https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;此文档免费，请不要用于商业用途，可以自由传播。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;赠人玫瑰，手有余香！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:haiguang2000@qq.com&#34;&gt;haiguang2000@qq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;转载请注明出处&lt;/strong&gt;：&lt;a href=&#34;https://github.com/fengdu78/deeplearning_ai_books&#34;&gt;https://github.com/fengdu78/deeplearning_ai_books&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;深度学习笔记目录&lt;/h1&gt; &#xA;&lt;h2&gt;第一门课 神经网络和深度学习(Neural Networks and Deep Learning)&lt;/h2&gt; &#xA;&lt;p&gt;第一周：深度学习引言(Introduction to Deep Learning)&lt;/p&gt; &#xA;&lt;p&gt;1.1 欢迎(Welcome)&lt;/p&gt; &#xA;&lt;p&gt;1.2 什么是神经网络？(What is a Neural Network)&lt;/p&gt; &#xA;&lt;p&gt;1.3 神经网络的监督学习(Supervised Learning with Neural Networks)&lt;/p&gt; &#xA;&lt;p&gt;1.4 为什么神经网络会流行？(Why is Deep Learning taking off?)&lt;/p&gt; &#xA;&lt;p&gt;1.5 关于本课程(About this Course)&lt;/p&gt; &#xA;&lt;p&gt;1.6 课程资源(Course Resources)&lt;/p&gt; &#xA;&lt;p&gt;1.7 Geoffery Hinton 专访(Geoffery Hinton interview)&lt;/p&gt; &#xA;&lt;p&gt;第二周：神经网络的编程基础(Basics of Neural Network programming)&lt;/p&gt; &#xA;&lt;p&gt;2.1 二分类(Binary Classification)&lt;/p&gt; &#xA;&lt;p&gt;2.2 逻辑回归(Logistic Regression)&lt;/p&gt; &#xA;&lt;p&gt;2.3 逻辑回归的代价函数（Logistic Regression Cost Function）&lt;/p&gt; &#xA;&lt;p&gt;2.4 梯度下降（Gradient Descent）&lt;/p&gt; &#xA;&lt;p&gt;2.5 导数（Derivatives）&lt;/p&gt; &#xA;&lt;p&gt;2.6 更多的导数例子（More Derivative Examples）&lt;/p&gt; &#xA;&lt;p&gt;2.7 计算图（Computation Graph）&lt;/p&gt; &#xA;&lt;p&gt;2.8 计算图导数（Derivatives with a Computation Graph）&lt;/p&gt; &#xA;&lt;p&gt;2.9 逻辑回归的梯度下降（Logistic Regression Gradient Descent）&lt;/p&gt; &#xA;&lt;p&gt;2.10 梯度下降的例子(Gradient Descent on m Examples)&lt;/p&gt; &#xA;&lt;p&gt;2.11 向量化(Vectorization)&lt;/p&gt; &#xA;&lt;p&gt;2.12 更多的向量化例子（More Examples of Vectorization）&lt;/p&gt; &#xA;&lt;p&gt;2.13 向量化逻辑回归(Vectorizing Logistic Regression)&lt;/p&gt; &#xA;&lt;p&gt;2.14 向量化逻辑回归的梯度计算（Vectorizing Logistic Regression&#39;s Gradient）&lt;/p&gt; &#xA;&lt;p&gt;2.15 Python中的广播机制（Broadcasting in Python）&lt;/p&gt; &#xA;&lt;p&gt;2.16 关于 Python与numpy向量的使用（A note on python or numpy vectors）&lt;/p&gt; &#xA;&lt;p&gt;2.17 Jupyter/iPython Notebooks快速入门（Quick tour of Jupyter/iPython Notebooks）&lt;/p&gt; &#xA;&lt;p&gt;2.18 逻辑回归损失函数详解（Explanation of logistic regression cost function）&lt;/p&gt; &#xA;&lt;p&gt;第三周：浅层神经网络(Shallow neural networks)&lt;/p&gt; &#xA;&lt;p&gt;3.1 神经网络概述（Neural Network Overview）&lt;/p&gt; &#xA;&lt;p&gt;3.2 神经网络的表示（Neural Network Representation）&lt;/p&gt; &#xA;&lt;p&gt;3.3 计算一个神经网络的输出（Computing a Neural Network&#39;s output）&lt;/p&gt; &#xA;&lt;p&gt;3.4 多样本向量化（Vectorizing across multiple examples）&lt;/p&gt; &#xA;&lt;p&gt;3.5 向量化实现的解释（Justification for vectorized implementation）&lt;/p&gt; &#xA;&lt;p&gt;3.6 激活函数（Activation functions）&lt;/p&gt; &#xA;&lt;p&gt;3.7 为什么需要非线性激活函数？（why need a nonlinear activation function?）&lt;/p&gt; &#xA;&lt;p&gt;3.8 激活函数的导数（Derivatives of activation functions）&lt;/p&gt; &#xA;&lt;p&gt;3.9 神经网络的梯度下降（Gradient descent for neural networks）&lt;/p&gt; &#xA;&lt;p&gt;3.10（选修）直观理解反向传播（Backpropagation intuition）&lt;/p&gt; &#xA;&lt;p&gt;3.11 随机初始化（Random+Initialization）&lt;/p&gt; &#xA;&lt;p&gt;第四周：深层神经网络(Deep Neural Networks)&lt;/p&gt; &#xA;&lt;p&gt;4.1 深层神经网络（Deep L-layer neural network）&lt;/p&gt; &#xA;&lt;p&gt;4.2 前向传播和反向传播（Forward and backward propagation）&lt;/p&gt; &#xA;&lt;p&gt;4.3 深层网络中的前向和反向传播（Forward propagation in a Deep Network）&lt;/p&gt; &#xA;&lt;p&gt;4.4 核对矩阵的维数（Getting your matrix dimensions right）&lt;/p&gt; &#xA;&lt;p&gt;4.5 为什么使用深层表示？（Why deep representations?）&lt;/p&gt; &#xA;&lt;p&gt;4.6 搭建神经网络块（Building blocks of deep neural networks）&lt;/p&gt; &#xA;&lt;p&gt;4.7 参数VS超参数（Parameters vs Hyperparameters）&lt;/p&gt; &#xA;&lt;p&gt;4.8 深度学习和大脑的关联性（What does this have to do with the brain?）&lt;/p&gt; &#xA;&lt;h2&gt;第二门课 改善深层神经网络：超参数调试、正则化以及优化(Improving Deep Neural Networks:Hyperparameter tuning, Regularization and Optimization)&lt;/h2&gt; &#xA;&lt;p&gt;第一周：深度学习的实用层面(Practical aspects of Deep Learning)&lt;/p&gt; &#xA;&lt;p&gt;1.1 训练，验证，测试集（Train / Dev / Test sets）&lt;/p&gt; &#xA;&lt;p&gt;1.2 偏差，方差（Bias /Variance）&lt;/p&gt; &#xA;&lt;p&gt;1.3 机器学习基础（Basic Recipe for Machine Learning）&lt;/p&gt; &#xA;&lt;p&gt;1.4 正则化（Regularization）&lt;/p&gt; &#xA;&lt;p&gt;1.5 为什么正则化有利于预防过拟合呢？（Why regularization reduces overfitting?）&lt;/p&gt; &#xA;&lt;p&gt;1.6 dropout 正则化（Dropout Regularization）&lt;/p&gt; &#xA;&lt;p&gt;1.7 理解 dropout（Understanding Dropout）&lt;/p&gt; &#xA;&lt;p&gt;1.8 其他正则化方法（Other regularization methods）&lt;/p&gt; &#xA;&lt;p&gt;1.9 标准化输入（Normalizing inputs）&lt;/p&gt; &#xA;&lt;p&gt;1.10 梯度消失/梯度爆炸（Vanishing / Exploding gradients）&lt;/p&gt; &#xA;&lt;p&gt;1.11 神经网络的权重初始化（Weight Initialization for Deep NetworksVanishing /Exploding gradients）&lt;/p&gt; &#xA;&lt;p&gt;1.12 梯度的数值逼近（Numerical approximation of gradients）&lt;/p&gt; &#xA;&lt;p&gt;1.13 梯度检验（Gradient checking）&lt;/p&gt; &#xA;&lt;p&gt;1.14 梯度检验应用的注意事项（Gradient Checking Implementation Notes）&lt;/p&gt; &#xA;&lt;p&gt;第二周：优化算法 (Optimization algorithms)&lt;/p&gt; &#xA;&lt;p&gt;2.1 Mini-batch 梯度下降（Mini-batch gradient descent）&lt;/p&gt; &#xA;&lt;p&gt;2.2 理解Mini-batch 梯度下降（Understanding Mini-batch gradient descent）&lt;/p&gt; &#xA;&lt;p&gt;2.3 指数加权平均（Exponentially weighted averages）&lt;/p&gt; &#xA;&lt;p&gt;2.4 理解指数加权平均（Understanding Exponentially weighted averages）&lt;/p&gt; &#xA;&lt;p&gt;2.5 指数加权平均的偏差修正（Bias correction in exponentially weighted averages）&lt;/p&gt; &#xA;&lt;p&gt;2.6 momentum梯度下降（Gradient descent with momentum）&lt;/p&gt; &#xA;&lt;p&gt;2.7 RMSprop——root mean square prop（RMSprop）&lt;/p&gt; &#xA;&lt;p&gt;2.8 Adam优化算法（Adam optimization algorithm）&lt;/p&gt; &#xA;&lt;p&gt;2.9 学习率衰减（Learning rate decay）&lt;/p&gt; &#xA;&lt;p&gt;2.10 局部最优问题（The problem of local optima）&lt;/p&gt; &#xA;&lt;p&gt;第三周超参数调试，batch正则化和程序框架（Hyperparameter tuning, Batch Normalization and Programming Frameworks)&lt;/p&gt; &#xA;&lt;p&gt;3.1 调试处理（Tuning process）&lt;/p&gt; &#xA;&lt;p&gt;3.2 为超参数选择和适合范围（Using an appropriate scale to pick hyperparameters）&lt;/p&gt; &#xA;&lt;p&gt;3.3 超参数训练的实践：Pandas vs. Caviar（Hyperparameters tuning in practice: Pandas vs. Caviar）&lt;/p&gt; &#xA;&lt;p&gt;3.4 网络中的正则化激活函数（Normalizing activations in a network）&lt;/p&gt; &#xA;&lt;p&gt;3.5 将 Batch Norm拟合进神经网络（Fitting Batch Norm into a neural network）&lt;/p&gt; &#xA;&lt;p&gt;3.6 为什么Batch Norm奏效？（Why does Batch Norm work?）&lt;/p&gt; &#xA;&lt;p&gt;3.7 测试时的Batch Norm（Batch Norm at test time）&lt;/p&gt; &#xA;&lt;p&gt;3.8 Softmax 回归（Softmax Regression）&lt;/p&gt; &#xA;&lt;p&gt;3.9 训练一个Softmax 分类器（Training a softmax classifier）&lt;/p&gt; &#xA;&lt;p&gt;3.10 深度学习框架（Deep learning frameworks）&lt;/p&gt; &#xA;&lt;p&gt;3.11 TensorFlow（TensorFlow）&lt;/p&gt; &#xA;&lt;h2&gt;第三门课 结构化机器学习项目 (Structuring Machine Learning Projects)&lt;/h2&gt; &#xA;&lt;p&gt;第一周：机器学习策略（1）(ML Strategy (1))&lt;/p&gt; &#xA;&lt;p&gt;1.1 为什么是ML策略？ (Why ML Strategy)&lt;/p&gt; &#xA;&lt;p&gt;1.2 正交化(Orthogonalization)&lt;/p&gt; &#xA;&lt;p&gt;1.3 单一数字评估指标(Single number evaluation metric)&lt;/p&gt; &#xA;&lt;p&gt;1.4 满足和优化指标 (Satisficing and Optimizing metric)&lt;/p&gt; &#xA;&lt;p&gt;1.5 训练集、开发集、测试集的划分(Train/dev/test distributions)&lt;/p&gt; &#xA;&lt;p&gt;1.6 开发集和测试集的大小 (Size of the dev and test sets)&lt;/p&gt; &#xA;&lt;p&gt;1.7 什么时候改变开发集/测试集和评估指标(When to change dev/test sets and metrics)&lt;/p&gt; &#xA;&lt;p&gt;1.8 为什么是人的表现 (Why human-level performance?)&lt;/p&gt; &#xA;&lt;p&gt;1.9 可避免偏差(Avoidable bias)&lt;/p&gt; &#xA;&lt;p&gt;1.10 理解人类的表现 (Understanding human-level performance)&lt;/p&gt; &#xA;&lt;p&gt;1.11 超过人类的表现(Surpassing human-level performance)&lt;/p&gt; &#xA;&lt;p&gt;1.12 改善你的模型表现 (Improving your model performance)&lt;/p&gt; &#xA;&lt;p&gt;第二周：机器学习策略（2）(ML Strategy (2))&lt;/p&gt; &#xA;&lt;p&gt;2.1 误差分析 (Carrying out error analysis)&lt;/p&gt; &#xA;&lt;p&gt;2.2 清除标注错误的数据(Cleaning up incorrectly labeled data)&lt;/p&gt; &#xA;&lt;p&gt;2.3 快速搭建你的第一个系统，并进行迭代(Build your first system quickly, then iterate)&lt;/p&gt; &#xA;&lt;p&gt;2.4 在不同的分布上的训练集和测试集 (Training and testing on different distributions)&lt;/p&gt; &#xA;&lt;p&gt;2.5 数据分布不匹配的偏差与方差分析 (Bias and Variance with mismatched data distributions)&lt;/p&gt; &#xA;&lt;p&gt;2.6 处理数据不匹配问题(Addressing data mismatch)&lt;/p&gt; &#xA;&lt;p&gt;2.7 迁移学习 (Transfer learning)&lt;/p&gt; &#xA;&lt;p&gt;2.8 多任务学习(Multi-task learning)&lt;/p&gt; &#xA;&lt;p&gt;2.9 什么是端到端的深度学习？ (What is end-to-end deep learning?)&lt;/p&gt; &#xA;&lt;p&gt;2.10 是否使用端到端的深度学习方法 (Whether to use end-to-end deep learning)&lt;/p&gt; &#xA;&lt;h2&gt;第四门课 卷积神经网络（Convolutional Neural Networks）&lt;/h2&gt; &#xA;&lt;p&gt;第一周 卷积神经网络(Foundations of Convolutional Neural Networks)&lt;/p&gt; &#xA;&lt;p&gt;1.1 计算机视觉（Computer vision）&lt;/p&gt; &#xA;&lt;p&gt;1.2 边缘检测示例（Edge detection example）&lt;/p&gt; &#xA;&lt;p&gt;1.3 更多边缘检测内容（More edge detection）&lt;/p&gt; &#xA;&lt;p&gt;1.4 Padding&lt;/p&gt; &#xA;&lt;p&gt;1.5 卷积步长（Strided convolutions）&lt;/p&gt; &#xA;&lt;p&gt;1.6 三维卷积（Convolutions over volumes）&lt;/p&gt; &#xA;&lt;p&gt;1.7 单层卷积网络（One layer of a convolutional network）&lt;/p&gt; &#xA;&lt;p&gt;1.8 简单卷积网络示例（A simple convolution network example）&lt;/p&gt; &#xA;&lt;p&gt;1.9 池化层（Pooling layers）&lt;/p&gt; &#xA;&lt;p&gt;1.10 卷积神经网络示例（Convolutional neural network example）&lt;/p&gt; &#xA;&lt;p&gt;1.11 为什么使用卷积？（Why convolutions?）&lt;/p&gt; &#xA;&lt;p&gt;第二周 深度卷积网络：实例探究(Deep convolutional models: case studies)&lt;/p&gt; &#xA;&lt;p&gt;2.1 为什么要进行实例探究？（Why look at case studies?）&lt;/p&gt; &#xA;&lt;p&gt;2.2 经典网络（Classic networks）&lt;/p&gt; &#xA;&lt;p&gt;2.3 残差网络（Residual Networks (ResNets)）&lt;/p&gt; &#xA;&lt;p&gt;2.4 残差网络为什么有用？（Why ResNets work?）&lt;/p&gt; &#xA;&lt;p&gt;2.5 网络中的网络以及 1×1 卷积（Network in Network and 1×1 convolutions）&lt;/p&gt; &#xA;&lt;p&gt;2.6 谷歌 Inception 网络简介（Inception network motivation）&lt;/p&gt; &#xA;&lt;p&gt;2.7 Inception 网络（Inception network）&lt;/p&gt; &#xA;&lt;p&gt;2.8 使用开源的实现方案（Using open-source implementations）&lt;/p&gt; &#xA;&lt;p&gt;2.9 迁移学习（Transfer Learning）&lt;/p&gt; &#xA;&lt;p&gt;2.10 数据扩充（Data augmentation）&lt;/p&gt; &#xA;&lt;p&gt;2.11 计算机视觉现状（The state of computer vision）&lt;/p&gt; &#xA;&lt;p&gt;第三周 目标检测（Object detection）&lt;/p&gt; &#xA;&lt;p&gt;3.1 目标定位（Object localization）&lt;/p&gt; &#xA;&lt;p&gt;3.2 特征点检测（Landmark detection）&lt;/p&gt; &#xA;&lt;p&gt;3.3 目标检测（Object detection）&lt;/p&gt; &#xA;&lt;p&gt;3.4 卷积的滑动窗口实现（Convolutional implementation of sliding windows）&lt;/p&gt; &#xA;&lt;p&gt;3.5 Bounding Box预测（Bounding box predictions）&lt;/p&gt; &#xA;&lt;p&gt;3.6 交并比（Intersection over union）&lt;/p&gt; &#xA;&lt;p&gt;3.7 非极大值抑制（Non-max suppression）&lt;/p&gt; &#xA;&lt;p&gt;3.8 Anchor Boxes&lt;/p&gt; &#xA;&lt;p&gt;3.9 YOLO 算法（Putting it together: YOLO algorithm）&lt;/p&gt; &#xA;&lt;p&gt;3.10 候选区域（选修）（Region proposals (Optional)）&lt;/p&gt; &#xA;&lt;p&gt;第四周 特殊应用：人脸识别和神经风格转换（Special applications: Face recognition &amp;amp;Neural style transfer）&lt;/p&gt; &#xA;&lt;p&gt;4.1 什么是人脸识别？(What is face recognition?)&lt;/p&gt; &#xA;&lt;p&gt;4.2 One-Shot学习（One-shot learning）&lt;/p&gt; &#xA;&lt;p&gt;4.3 Siamese 网络（Siamese network）&lt;/p&gt; &#xA;&lt;p&gt;4.4 Triplet 损失（Triplet 损失）&lt;/p&gt; &#xA;&lt;p&gt;4.5 面部验证与二分类（Face verification and binary classification）&lt;/p&gt; &#xA;&lt;p&gt;4.6 什么是神经风格转换？（What is neural style transfer?）&lt;/p&gt; &#xA;&lt;p&gt;4.7 什么是深度卷积网络？（What are deep ConvNets learning?）&lt;/p&gt; &#xA;&lt;p&gt;4.8 代价函数（Cost function）&lt;/p&gt; &#xA;&lt;p&gt;4.9 内容代价函数（Content cost function）&lt;/p&gt; &#xA;&lt;p&gt;4.10 风格代价函数（Style cost function）&lt;/p&gt; &#xA;&lt;p&gt;4.11 一维到三维推广（1D and 3D generalizations of models）&lt;/p&gt; &#xA;&lt;h1&gt;第五门课 序列模型(Sequence Models)&lt;/h1&gt; &#xA;&lt;p&gt;第一周 循环序列模型（Recurrent Neural Networks） 1.1 为什么选择序列模型？（Why Sequence Models?）&lt;/p&gt; &#xA;&lt;p&gt;1.2 数学符号（Notation）&lt;/p&gt; &#xA;&lt;p&gt;1.3 循环神经网络模型（Recurrent Neural Network Model）&lt;/p&gt; &#xA;&lt;p&gt;1.4 通过时间的反向传播（Backpropagation through time）&lt;/p&gt; &#xA;&lt;p&gt;1.5 不同类型的循环神经网络（Different types of RNNs）&lt;/p&gt; &#xA;&lt;p&gt;1.6 语言模型和序列生成（Language model and sequence generation）&lt;/p&gt; &#xA;&lt;p&gt;1.7 对新序列采样（Sampling novel sequences）&lt;/p&gt; &#xA;&lt;p&gt;1.8 循环神经网络的梯度消失（Vanishing gradients with RNNs）&lt;/p&gt; &#xA;&lt;p&gt;1.9 GRU单元（Gated Recurrent Unit（GRU））&lt;/p&gt; &#xA;&lt;p&gt;1.10 长短期记忆（LSTM（long short term memory）unit）&lt;/p&gt; &#xA;&lt;p&gt;1.11 双向循环神经网络（Bidirectional RNN）&lt;/p&gt; &#xA;&lt;p&gt;1.12 深层循环神经网络（Deep RNNs）&lt;/p&gt; &#xA;&lt;p&gt;第二周 自然语言处理与词嵌入（Natural Language Processing and Word Embeddings）&lt;/p&gt; &#xA;&lt;p&gt;2.1 词汇表征（Word Representation）&lt;/p&gt; &#xA;&lt;p&gt;2.2 使用词嵌入（Using Word Embeddings）&lt;/p&gt; &#xA;&lt;p&gt;2.3 词嵌入的特性（Properties of Word Embeddings）&lt;/p&gt; &#xA;&lt;p&gt;2.4 嵌入矩阵（Embedding Matrix）&lt;/p&gt; &#xA;&lt;p&gt;2.5 学习词嵌入（Learning Word Embeddings）&lt;/p&gt; &#xA;&lt;p&gt;2.6 Word2Vec&lt;/p&gt; &#xA;&lt;p&gt;2.7 负采样（Negative Sampling）&lt;/p&gt; &#xA;&lt;p&gt;2.8 GloVe 词向量（GloVe Word Vectors）&lt;/p&gt; &#xA;&lt;p&gt;2.9 情绪分类（Sentiment Classification）&lt;/p&gt; &#xA;&lt;p&gt;2.10 词嵌入除偏（Debiasing Word Embeddings）&lt;/p&gt; &#xA;&lt;p&gt;第三周 序列模型和注意力机制（Sequence models &amp;amp; Attention mechanism）&lt;/p&gt; &#xA;&lt;p&gt;3.1 基础模型（Basic Models）&lt;/p&gt; &#xA;&lt;p&gt;3.2 选择最可能的句子（Picking the most likely sentence）&lt;/p&gt; &#xA;&lt;p&gt;3.3 集束搜索（Beam Search）&lt;/p&gt; &#xA;&lt;p&gt;3.4 改进集束搜索（Refinements to Beam Search）&lt;/p&gt; &#xA;&lt;p&gt;3.5 集束搜索的误差分析（Error analysis in beam search）&lt;/p&gt; &#xA;&lt;p&gt;3.6 Bleu 得分（选修）（Bleu Score (optional)）&lt;/p&gt; &#xA;&lt;p&gt;3.7 注意力模型直观理解（Attention Model Intuition）&lt;/p&gt; &#xA;&lt;p&gt;3.8注意力模型（Attention Model）&lt;/p&gt; &#xA;&lt;p&gt;3.9语音识别（Speech recognition）&lt;/p&gt; &#xA;&lt;p&gt;3.10触发字检测（Trigger Word Detection）&lt;/p&gt; &#xA;&lt;p&gt;3.11结论和致谢（Conclusion and thank you）&lt;/p&gt; &#xA;&lt;p&gt;人工智能大师访谈&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Geoffery Hinton&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Ian Goodfellow&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Ruslan Salakhutdinov&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Yoshua Bengio&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 林元庆&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Pieter Abbeel&lt;/p&gt; &#xA;&lt;p&gt;吴恩达采访 Andrej Karpathy&lt;/p&gt; &#xA;&lt;p&gt;附件&lt;/p&gt; &#xA;&lt;p&gt;深度学习符号指南（原课程翻译）&lt;/p&gt;</summary>
  </entry>
</feed>