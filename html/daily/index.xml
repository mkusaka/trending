<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-20T01:31:34Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xlang-ai/Spider2</title>
    <updated>2025-01-20T01:31:34Z</updated>
    <id>tag:github.com,2025-01-20:/xlang-ai/Spider2</id>
    <link href="https://github.com/xlang-ai/Spider2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spider 2.0: Evaluating Language Models on Real-World Enterprise Text-to-SQL Workflows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spider 2.0: Evaluating Language Models on Real-World Enterprise Text-to-SQL Workflows&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://spider2-sql.github.io/&#34;&gt;Website&lt;/a&gt; • &lt;a href=&#34;https://arxiv.org/abs/2411.07763&#34;&gt;Paper&lt;/a&gt; • &lt;a href=&#34;https://github.com/xlang-ai/Spider2/raw/main/spider2/README.md&#34;&gt;Data&lt;/a&gt; • &lt;a href=&#34;https://docs.google.com/document/d/1a69mxO7m1nMndXp8H_-aggvYDbcbiS3rV9GPXEw-DeM/edit?usp=sharing&#34;&gt;Data Update Log&lt;/a&gt; • &lt;a href=&#34;https://docs.google.com/document/d/1sCobAqJZcko-Vl3biOycwvCIR7kTwBPrhsgVfvaX1Fg/edit?usp=sharing&#34;&gt;Submission Guidance&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;📰 News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2025-01-10&lt;/strong&gt;: Please refer to the &lt;a href=&#34;https://docs.google.com/document/d/1a69mxO7m1nMndXp8H_-aggvYDbcbiS3rV9GPXEw-DeM/edit?usp=sharing&#34;&gt;data update log&lt;/a&gt; to track changes in the evaluation examples. The &lt;a href=&#34;https://spider2-sql.github.io/&#34;&gt;leaderboard&lt;/a&gt; results will also change dynamically accordingly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2025-01-07&lt;/strong&gt;: Please note that we do not recommend using the Spider 2.0 Gold SQL we released for SFT, as it may affect the fairness of evaluation and hinder better benchmarking of the model&#39;s SQL capabilities. The release of Gold SQL is intended to help users design prompts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2024-12-26&lt;/strong&gt;: &lt;strong&gt;Using Spider-Agent to benchmark your LLMs!&lt;/strong&gt; Considering the widespread attention to the traditional text-to-SQL setting, we now recommend using &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent-lite&#34;&gt;spider-agent-lite&lt;/a&gt; and &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent-snow&#34;&gt;spider-agent-snow&lt;/a&gt; to work with &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-lite/evaluation_suite&#34;&gt;spider2-lite&lt;/a&gt; and &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-snow/evaluation_suite&#34;&gt;spider2-snow&lt;/a&gt; for benchmarking your LLMs. The final output should be CSV files, not SQLs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2024-12-24&lt;/strong&gt;: Considering the many evaluation requirements, we have decided to &lt;strong&gt;release all examples and gold answers for self-evaluation&lt;/strong&gt;. However, only a small amount of gold SQL is available. The leaderboard is still active. To have your method officially validated and upload your scores to the leaderboard, please follow the &lt;a href=&#34;https://docs.google.com/document/d/1sCobAqJZcko-Vl3biOycwvCIR7kTwBPrhsgVfvaX1Fg/edit?usp=sharing&#34;&gt;submission guidance&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👋 Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/assets/Spider2.png&#34; alt=&#34;Local Image&#34;&gt;&lt;/p&gt; &#xA;&lt;div style=&#34;width: 10%; margin: auto;&#34;&gt; &#xA; &lt;table style=&#34;font-size: 12px; width: 100%;&#34;&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Setting&lt;/th&gt; &#xA;    &lt;th&gt;Task Type&lt;/th&gt; &#xA;    &lt;th&gt;#Examples&lt;/th&gt; &#xA;    &lt;th&gt;Databases&lt;/th&gt; &#xA;    &lt;th&gt;Cost&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Spider 2.0-Snow&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text-to-SQL task&lt;/td&gt; &#xA;    &lt;td&gt;547&lt;/td&gt; &#xA;    &lt;td&gt;Snowflake(547)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;span style=&#34;color: red;&#34;&gt;NO COST!😊&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Spider 2.0-Lite&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Text-to-SQL task&lt;/td&gt; &#xA;    &lt;td&gt;547&lt;/td&gt; &#xA;    &lt;td&gt;BigQuery(214), Snowflake(198), SQLite(135)&lt;/td&gt; &#xA;    &lt;td&gt;Some cost incurred&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Spider 2.0&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Code agent task&lt;/td&gt; &#xA;    &lt;td&gt;632&lt;/td&gt; &#xA;    &lt;td&gt;BigQuery(214), Snowflake(198), Postgres(10), ClickHouse(7), SQLite(135), DuckDB (DBT)(68)&lt;/td&gt; &#xA;    &lt;td&gt;Some cost incurred&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Why Spider 2.0?&lt;/h3&gt; &#xA;&lt;p&gt;In 2018, we introduced &lt;a href=&#34;https://yale-lily.github.io/spider&#34;&gt;Spider 1.0&lt;/a&gt;, &lt;a href=&#34;https://yale-lily.github.io/sparc&#34;&gt;SParC&lt;/a&gt;, and &lt;a href=&#34;https://yale-lily.github.io/cosql&#34;&gt;CoSQL&lt;/a&gt; as part of the Yale Semantic Parsing and Text-to-SQL Challenge Series, attracting over 300 submissions from leading research labs worldwide.&lt;/p&gt; &#xA;&lt;p&gt;Now, in the era of Large Language Models (LLMs), we present Spider 2.0 to advance code generation, particularly text-to-SQL capabilities.&lt;/p&gt; &#xA;&lt;p&gt;This new benchmark offers a more realistic and challenging test of LLMs&#39; performance on complex enterprise-level text-to-SQL workflows, involving complex data environments (e.g., &amp;gt;3000 columns), multiple SQL dialects (e.g., BigQuery, Snowflake), and diverse operations (e.g., transformation, analytics).&lt;/p&gt; &#xA;&lt;p&gt;Notably, as shown below, even the most advanced LLMs, including GPT-4, solve only 6.0% of Spider 2.0 tasks, compared to 86.6% on Spider 1.0 and 57.4% on BIRD, highlighting the significant challenges posed by Spider 2.0.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Spider 1.0 dev&lt;/th&gt; &#xA;   &lt;th&gt;Spider 1.0 test&lt;/th&gt; &#xA;   &lt;th&gt;BIRD test&lt;/th&gt; &#xA;   &lt;th&gt;Spider 2.0-lite&lt;/th&gt; &#xA;   &lt;th&gt;Spider 2.0-snow&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DailSQL + GPT-4&lt;/td&gt; &#xA;   &lt;td&gt;82.4&lt;/td&gt; &#xA;   &lt;td&gt;86.6&lt;/td&gt; &#xA;   &lt;td&gt;57.4&lt;/td&gt; &#xA;   &lt;td&gt;5.6&lt;/td&gt; &#xA;   &lt;td&gt;2.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CodeS-15B&lt;/td&gt; &#xA;   &lt;td&gt;85.4&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;59.3&lt;/td&gt; &#xA;   &lt;td&gt;0.7&lt;/td&gt; &#xA;   &lt;td&gt;0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Sign Up for Your Own BigQuery and Snowflake Accounts&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;To sign up for a BigQuery account, please follow this &lt;a href=&#34;https://github.com/xlang-ai/Spider2/raw/main/assets/Bigquery_Guideline.md&#34;&gt;guideline&lt;/a&gt;, get your own credentials.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Follow this &lt;a href=&#34;https://github.com/xlang-ai/Spider2/raw/main/assets/Snowflake_Guideline.md&#34;&gt;guideline&lt;/a&gt; and fill out this &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLScbVIYcBkADVr-NcYm9fLMhlxR7zBAzg-jaew1VNRj6B8yD3Q/viewform?usp=sf_link&#34;&gt;Spider2 Snowflake Access&lt;/a&gt;, and we will send you an account sign-up email, which will allow you to access the Snowflake database.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to access the &lt;strong&gt;FULL dataset&lt;/strong&gt; of Spider 2.0 or Spider 2.0-Lite, you must complete &lt;strong&gt;Step1&lt;/strong&gt; and &lt;strong&gt;Step2&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you only want access to the &lt;strong&gt;FULL dataset&lt;/strong&gt; of Spider 2.0-Snow, you only need to complete &lt;strong&gt;Step2&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spider 2.0-Snow and Spider 2.0-Lite (UPDATE 2024-12-26)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;We highly recommend that you directly use Spider2-snow and Spider2-lite for benchmarking and research. First, run the Spider-Agent Framework!!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details, please refer to the following links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent-lite&#34;&gt;spider-agent-lite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent-snow&#34;&gt;spider-agent-snow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Quickstart (Old Version)&lt;/h2&gt; &#xA;&lt;h3&gt;Spider 2.0-Snow&lt;/h3&gt; &#xA;&lt;p&gt;We would like to thank Snowflake for sponsoring our project. To better align with the research interests of the text-to-SQL community, we are offering &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-snow&#34;&gt;Spider 2.0-Snow&lt;/a&gt;, which hosts all databases from Spider 2.0 in the Snowflake data warehouse. This arrangement facilitates users in developing advanced text-to-SQL systems more conveniently.&lt;/p&gt; &#xA;&lt;p&gt;We adapt &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent-snow&#34;&gt;Spider-Agent&lt;/a&gt; and other text-to-SQL baselines to this setting.&lt;/p&gt; &#xA;&lt;h3&gt;Spider 2.0-Lite&lt;/h3&gt; &#xA;&lt;p&gt;To align with research interests in &lt;strong&gt;traditional Text2SQL settings&lt;/strong&gt;, we also release &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-lite#spider-20-lite&#34;&gt;&lt;code&gt;Spider 2.0-Lite&lt;/code&gt;&lt;/a&gt;. This set is more self-contained, with well-prepared database metadata and documentation, making it a text-in, text-out task that supports faster development and evaluation.&lt;/p&gt; &#xA;&lt;p&gt;You can also access the Spider 2.0-Lite by &lt;a href=&#34;https://huggingface.co/datasets/xlangai/spider2-lite&#34;&gt;huggingface dataset&lt;/a&gt;.🤗&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;from datasets import load_dataset&#xA;ds = load_dataset(&#34;xlangai/spider2-lite&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Each file in &lt;code&gt;spider2-lite.json&lt;/code&gt; contains the following fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;instance_id&lt;/code&gt;: the unique example id&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;db&lt;/code&gt;: the database id to which this question is addressed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;question&lt;/code&gt;: the natural language question&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;external_knowledge&lt;/code&gt;: the filenames of external knowledge, documentation, and information required to answer this question are stored in documents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We proposed baselines based on the widely used text2sql methods: &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-lite/baselines/dailsql#installation&#34;&gt;&lt;code&gt;Dail-SQL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2-lite/baselines/codes#installation&#34;&gt;&lt;code&gt;CodeS&lt;/code&gt;&lt;/a&gt;, with evaluation results reported &lt;span&gt;🧪&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Spider 2.0&lt;/h3&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/README.md&#34;&gt;&lt;code&gt;Spider 2.0&lt;/code&gt;&lt;/a&gt;, all evaluation examples are aggregated in file &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/spider2.jsonl&#34;&gt;&lt;code&gt;spider2.jsonl&lt;/code&gt;&lt;/a&gt;, where each data point contains the following field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;instance_id&#34;: &#34;ga001&#34;,&#xA;    &#34;instruction&#34;: &#34;I want to know the preferences of customers who purchased the Google Navy Speckled Tee in December 2020. What other product was purchased with the highest total quantity alongside this item?&#34;,&#xA;    &#34;type&#34;: &#34;Bigquery&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For each instance, we also provide a separate folder &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/&#34;&gt;&lt;code&gt;./spider2/examples/{instruction_id}&lt;/code&gt;&lt;/a&gt; as its &lt;strong&gt;Execution Context&lt;/strong&gt; to simulate the agentic setting. Each folder may have the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;: detailed requirements of the &lt;code&gt;instruction&lt;/code&gt; field for the current example with &lt;code&gt;instance_id&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;*_credential.json&lt;/code&gt;: credential file connecting to realistic enterprise-level databases, e.g., BigQuery. Can be replaced with your OWN;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;result.csv&lt;/code&gt;: CSV file to store the execution results;&lt;/li&gt; &#xA; &lt;li&gt;other instance-specific materials which assist in finishing the current task: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🏗️ partial project, e.g., &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/airbnb001/&#34;&gt;&lt;code&gt;dbt_project/&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;📝 reference documentation: &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/ga010/ga4_dimensions_and_metrics.md&#34;&gt;&lt;code&gt;ga4_dimensions_and_metrics.md&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/ga022/retention_rate.md&#34;&gt;&lt;code&gt;retention_rate.md&lt;/code&gt;&lt;/a&gt;, etc.&lt;/li&gt; &#xA;   &lt;li&gt;🔍 query interface: We have predefined how to access the diverse database systems.&lt;/li&gt; &#xA;   &lt;li&gt;🎞️ query history or samples, e.g., &lt;a href=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/spider2/examples/ga003/FIREBASE_QUERY_HISTORY/&#34;&gt;&lt;code&gt;QUERY_HISTORY/&lt;/code&gt;&lt;/a&gt;, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The agent has to interact with complex SQL workflows, process extremely long contexts, perform intricate reasoning, and generate multiple SQL queries with diverse operations, often exceeding 100 lines across multiple turns. --&amp;gt;&lt;/p&gt; &#xA;&lt;h4&gt;Run Spider-Agent&lt;/h4&gt; &#xA;&lt;p&gt;For Spider 2.0, we proposed an agent framework &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/methods/spider-agent&#34;&gt;Spider-Agent&lt;/a&gt; based on Docker environment.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;. Follow the instructions in the &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker setup guide&lt;/a&gt; to install Docker on your machine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install conda environment&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/xlang-ai/Spider2.git&#xA;cd methods/spider-agent&#xA;&#xA;# Optional: Create a Conda environment for Spider 2.0&#xA;# conda create -n spider2 python=3.11&#xA;# conda activate spider2&#xA;&#xA;# Install required dependencies&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure credential&lt;/strong&gt;: follow this &lt;a href=&#34;https://github.com/xlang-ai/Spider2/tree/main/spider2#configure-credential&#34;&gt;instruction&lt;/a&gt; to configure BigQuery for running the SQL queries. follow this &lt;a href=&#34;https://github.com/xlang-ai/Spider2/raw/main/assets/Snowflake_Guideline.md&#34;&gt;guideline&lt;/a&gt; to get your own Snowflake username and password in our snowflake database. You must update &lt;code&gt;bigquery_credential.json&lt;/code&gt; and &lt;code&gt;snowflake_credential.json&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download Spider 2.0 Database Source&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd spider2&#xA;&#xA;gdown &#39;https://drive.google.com/uc?id=1OxF-OuPwgb2miQxzftGLZBzPRQtLsyoV&#39;&#xA;gdown &#39;https://drive.google.com/uc?id=1coEVsCZq-Xvj9p2TnhBFoFTsY-UoYGmG&#39;&#xA;gdown &#39;https://drive.google.com/uc?id=1N3f7BSWC4foj-V-1C9n8M2XmgV7FOcqL&#39;&#xA;gdown &#39;https://drive.google.com/uc?id=1s0USV_iQLo4oe05QqAMnhGGp5jeejCzp&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spider 2.0 Setup&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;python setup.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run agent&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ../../methods/spider-agent&#xA;export OPENAI_API_KEY=your_openai_api_key&#xA;python run.py --model gpt-4o -s test1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;📋 Leaderboard Submission&lt;/h1&gt; &#xA;&lt;p&gt;We only release the gold answer of about partial examples of Spider 2.0, Spider 2.0-Lite and Spider 2.0-Snow. You must follow this &lt;a href=&#34;https://docs.google.com/document/d/1sCobAqJZcko-Vl3biOycwvCIR7kTwBPrhsgVfvaX1Fg/edit?usp=sharing&#34;&gt;submission guidance&lt;/a&gt; to upload your score to leaderboard.&lt;/p&gt; &#xA;&lt;h1&gt;🙇‍♂️ Acknowledgement&lt;/h1&gt; &#xA;&lt;p&gt;We thank Snowflake for their generous support in hosting the Spider 2.0 Challenge. We also thank Tianbao Xie, Yiheng Xu, Fan Zhou, Yuting Lan, Per Jacobsson, Yiming Huang, Canwen Xu, Zhewei Yao, and Binyuan Hui for their helpful feedback on this work. The leaderboard submission guidelines are greatly inspired by &lt;a href=&#34;https://bird-bench.github.io/&#34;&gt;BIRD-SQL&lt;/a&gt;, and we thank them for their contributions.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xlang-ai/Spider2/main/assets/Snowflake.png&#34; width=&#34;35%&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;✍️ Citation&lt;/h1&gt; &#xA;&lt;p&gt;If you find our work helpful, please cite as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{lei2024spider2,&#xA;      title={Spider 2.0: Evaluating Language Models on Real-World Enterprise Text-to-SQL Workflows}, &#xA;      author={Fangyu Lei and Jixuan Chen and Yuxiao Ye and Ruisheng Cao and Dongchan Shin and Hongjin Su and Zhaoqing Suo and Hongcheng Gao and Wenjing Hu and Pengcheng Yin and Victor Zhong and Caiming Xiong and Ruoxi Sun and Qian Liu and Sida Wang and Tao Yu},&#xA;      year={2024},&#xA;      eprint={2411.07763},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.CL},&#xA;      url={https://arxiv.org/abs/2411.07763}, &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>