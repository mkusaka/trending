<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-22T01:31:45Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>imrenagi/sipencari</title>
    <updated>2022-07-22T01:31:45Z</updated>
    <id>tag:github.com,2022-07-22:/imrenagi/sipencari</id>
    <link href="https://github.com/imrenagi/sipencari" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aku cinta kominfo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Search Engine Buatan Anak Bangsa&lt;/h1&gt; &#xA;&lt;p&gt;I&#39;m humbled that I started this repository which I believe will become the biggest search engine that will replace google.com.&lt;/p&gt; &#xA;&lt;h1&gt;How run this project&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -t sipencari:v1 .&#xA;docker run -d -p 80:80 sipencari:v1&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/weui</title>
    <updated>2022-07-22T01:31:45Z</updated>
    <id>tag:github.com,2022-07-22:/Tencent/weui</id>
    <link href="https://github.com/Tencent/weui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A UI library by WeChat official design team, includes the most useful widgets/modules in mobile web applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WeUI - tailor-made for WeChat web service&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/Tencent/weui&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Tencent/weui.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.org/package/weui&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/weui.svg?sanitize=true&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/weui/master/README_cn.md&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;WeUI is an WeChat-like UI framework officially designed by the WeChat Design Team, tailor-made for WeChat Web development, in order to improve and standardize the experience for WeChat users. Including components such as &lt;code&gt;button&lt;/code&gt;、&lt;code&gt;cell&lt;/code&gt;、&lt;code&gt;dialog&lt;/code&gt;、 &lt;code&gt;progress&lt;/code&gt;、 &lt;code&gt;toast&lt;/code&gt;、&lt;code&gt;article&lt;/code&gt;、&lt;code&gt;actionsheet&lt;/code&gt;、&lt;code&gt;icon&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WeUI documentation &lt;a href=&#34;https://github.com/Tencent/weui/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WeUI design reference &lt;a href=&#34;https://github.com/weui/weui-design&#34;&gt;weui-design&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4652816/15662614/178efd46-2725-11e6-8952-09d7836e968d.png&#34; alt=&#34;https://weui.io&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weui.io&#34;&gt;https://weui.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Legacy version 1.x: &lt;a href=&#34;https://weui.io/1.x&#34;&gt;https://weui.io/1.x&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Legacy version 0.4.x: &lt;a href=&#34;https://weui.io/0.4.x&#34;&gt;https://weui.io/0.4.x&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/weui-wxss/&#34;&gt;WeUI for 小程序 (weui-wxss)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://work.weixin.qq.com/api/doc#12146&#34;&gt;WeUI for Work (企业微信版)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/weui/weui.js/&#34;&gt;weui.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/weui/react-weui/&#34;&gt;react-weui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License(&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Please feel free to use and contribute to the development.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you have any ideas or suggestions to improve Wechat WeUI, welcome to submit an issue/pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tailwindlabs/tailwindcss-forms</title>
    <updated>2022-07-22T01:31:45Z</updated>
    <id>tag:github.com,2022-07-22:/tailwindlabs/tailwindcss-forms</id>
    <link href="https://github.com/tailwindlabs/tailwindcss-forms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@tailwindcss/forms&lt;/h1&gt; &#xA;&lt;p&gt;A plugin that provides a basic reset for form styles that makes form elements easy to override with utilities.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin from npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -D @tailwindcss/forms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then add the plugin to your &lt;code&gt;tailwind.config.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// tailwind.config.js&#xA;module.exports = {&#xA;  theme: {&#xA;    // ...&#xA;  },&#xA;  plugins: [&#xA;    require(&#39;@tailwindcss/forms&#39;),&#xA;    // ...&#xA;  ],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tailwindcss-forms.vercel.app/&#34;&gt;&lt;strong&gt;View the live demo&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;All of the basic form elements you use will now have some simple default styles that are easy to override with utilities.&lt;/p&gt; &#xA;&lt;p&gt;Currently we add basic utility-friendly form styles for the following form element types:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;text&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;password&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;email&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;number&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;url&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;date&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;datetime-local&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;month&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;week&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;time&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;search&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;tel&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;checkbox&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;input[type=&#39;radio&#39;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;select[multiple]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;textarea&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note that for text inputs, you must add the &lt;code&gt;type=&#34;text&#34;&lt;/code&gt; attribute for these styles to take effect.&lt;/strong&gt; This is a necessary trade-off to avoid relying on the overly greedy &lt;code&gt;input&lt;/code&gt; selector and unintentionally styling elements we don&#39;t have solutions for yet, like &lt;code&gt;input[type=&#34;range&#34;]&lt;/code&gt; for example.&lt;/p&gt; &#xA;&lt;p&gt;Every element has been normalized/reset to a simple visually consistent style that is easy to customize with utilities, even elements like &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;input type=&#34;checkbox&#34;&amp;gt;&lt;/code&gt; that normally need to be reset with &lt;code&gt;appearance: none&lt;/code&gt; and customized using custom CSS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- You can actually customize padding on a select element now: --&amp;gt;&#xA;&amp;lt;select class=&#34;px-4 py-3 rounded-full&#34;&amp;gt;&#xA;  &amp;lt;!-- ... --&amp;gt;&#xA;&amp;lt;/select&amp;gt;&#xA;&#xA;&amp;lt;!-- Or change a checkbox color using text color utilities: --&amp;gt;&#xA;&amp;lt;input type=&#34;checkbox&#34; class=&#34;rounded text-pink-500&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More customization examples and best practices coming soon.&lt;/p&gt; &#xA;&lt;h3&gt;Using classes to style&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the global styles, we also generate a set of corresponding classes which can be used to explicitly apply the form styles to an element. This can be useful in situations where you need to make a non-form element, such as a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, look like a form element.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input type=&#34;email&#34; class=&#34;form-input px-4 py-3 rounded-full&#34;&amp;gt;&#xA;&#xA;&amp;lt;select class=&#34;form-select px-4 py-3 rounded-full&#34;&amp;gt;&#xA;  &amp;lt;!-- ... --&amp;gt;&#xA;&amp;lt;/select&amp;gt;&#xA;&#xA;&amp;lt;input type=&#34;checkbox&#34; class=&#34;form-checkbox rounded text-pink-500&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is a complete table of the provided &lt;code&gt;form-*&lt;/code&gt; classes for reference:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Base&lt;/th&gt; &#xA;   &lt;th&gt;Class&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;text&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;email&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;url&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;password&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;number&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;date&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;datetime-local&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;month&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;search&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;tel&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;time&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;week&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-input&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;textarea&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-textarea&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;select&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-select&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;select[multiple]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-multiselect&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;checkbox&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-checkbox&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;[type=&#39;radio&#39;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;form-radio&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Using only global styles or only classes&lt;/h3&gt; &#xA;&lt;p&gt;Although we recommend thinking of this plugin as a &#34;form reset&#34; rather than a collection of form component styles, in some cases our default approach may be too heavy-handed, especially when integrating this plugin into existing projects.&lt;/p&gt; &#xA;&lt;p&gt;If generating both the global (base) styles and classes doesn&#39;t work well with your project, you can use the &lt;code&gt;strategy&lt;/code&gt; option to limit the plugin to just one of these approaches.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// tailwind.config.js&#xA;plugins: [&#xA;  require(&#34;@tailwindcss/forms&#34;)({&#xA;    strategy: &#39;base&#39;, // only generate global styles&#xA;    strategy: &#39;class&#39;, // only generate classes&#xA;  }),&#xA;],&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When using the &lt;code&gt;base&lt;/code&gt; strategy, form elements are styled globally, and no &lt;code&gt;form-{name}&lt;/code&gt; classes are generated.&lt;/p&gt; &#xA;&lt;p&gt;When using the &lt;code&gt;class&lt;/code&gt; strategy, form elements are not styled globally, and instead must be styled using the generated &lt;code&gt;form-{name}&lt;/code&gt; classes.&lt;/p&gt;</summary>
  </entry>
</feed>