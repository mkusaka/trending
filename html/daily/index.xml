<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-14T01:37:23Z</updated>
  <subtitle>Daily Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>letianzj/quanttrader</title>
    <updated>2023-07-14T01:37:23Z</updated>
    <id>tag:github.com,2023-07-14:/letianzj/quanttrader</id>
    <link href="https://github.com/letianzj/quanttrader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backtest and live trading in Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;quanttrader&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi/quanttrader&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/nseazy.svg?sanitize=true&#34; alt=&#34;pypi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/quanttrader&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/nseazy.svg?sanitize=true&#34; alt=&#34;python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/license/apache2.0/blue&#34; alt=&#34;License Apache 2.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to quanttrader, a pure python-based event-driven backtest and live trading package for quant traders.&lt;/p&gt; &#xA;&lt;p&gt;The source code is completely open-sourced &lt;a href=&#34;https://github.com/letianzj/quanttrader&#34;&gt;here on GitHub&lt;/a&gt;. The package is published &lt;a href=&#34;https://pypi.org/project/quanttrader/&#34;&gt;here on pypi&lt;/a&gt; and is ready to be pip installed. The document is hosted &lt;a href=&#34;https://quanttrader.readthedocs.io/&#34;&gt;here on readthedocs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In most cases, a backtest strategy can be directly used for live trade by simply switching to live brokerage. A control window is provided to monitor live trading sessions for each strategy separately and the portfolio as a whole.&lt;/p&gt; &#xA;&lt;h3&gt;Backtest&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://letianzj.github.io/quanttrading-backtest.html&#34;&gt;Backtest code structure&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/letianzj/QuantResearch/tree/master/backtest&#34;&gt;Backtests examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/letianzj/QuantResearch/raw/master/ml/reinforcement_trader.ipynb&#34;&gt;Reinforcement trader&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Live trading&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/CrsrTxqiXNY&#34;&gt;Live Trading demo video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://letianzj.github.io/live-trading-ib-native-python.html&#34;&gt;Live Trading code structure&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: download and install IB TWS or IB Gateway; enable API connection as described &lt;a href=&#34;https://interactivebrokers.github.io/tws-api/initial_setup.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Step 1&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install quanttrader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, download or git the source code and include unzipped path in PYTHONPATH environment variable.&lt;/p&gt; &#xA;&lt;p&gt;step 2&lt;/p&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://github.com/letianzj/quanttrader/raw/master/examples/live_engine.py&#34;&gt;live_engine.py&lt;/a&gt;, &lt;a href=&#34;https://github.com/letianzj/quanttrader/raw/master/examples/config_live.yaml&#34;&gt;config_live.yaml&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/letianzj/quanttrader/master/order_per_interval_strategy.py&#34;&gt;order_per_interval_strategy.py&lt;/a&gt; by clicking Raw button, right clicking save as, and then change the file extension to .py or .yaml.&lt;/p&gt; &#xA;&lt;p&gt;step 3&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd where_the_files_are_saved&#xA;python live_engine.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Instruments Supported and Example&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stock&lt;/strong&gt;: AMZN STK SMART&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Foreign Exchange&lt;/strong&gt;: EURGBP CASH IDEALPRO&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Futures&lt;/strong&gt;: ESM9 FUT GLOBEX&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Options on Stock&lt;/strong&gt;: AAPL OPT 20201016 128.75 C SMART&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Options on Futures&lt;/strong&gt;: ES FOP 20200911 3450 C 50 GLOBEX&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comdty&lt;/strong&gt;: XAUUSD CMDTY SMART&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Order Type Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Basic order types. See &lt;a href=&#34;http://interactivebrokers.github.io/tws-api/basic_orders.html&#34;&gt;IB Doc&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auction&lt;/li&gt; &#xA; &lt;li&gt;Auction Limit&lt;/li&gt; &#xA; &lt;li&gt;Market&lt;/li&gt; &#xA; &lt;li&gt;Market If Touched&lt;/li&gt; &#xA; &lt;li&gt;Market On Close&lt;/li&gt; &#xA; &lt;li&gt;Market On Open&lt;/li&gt; &#xA; &lt;li&gt;Market to Limit&lt;/li&gt; &#xA; &lt;li&gt;Limit Order&lt;/li&gt; &#xA; &lt;li&gt;Limit if Touched&lt;/li&gt; &#xA; &lt;li&gt;Limit on Close&lt;/li&gt; &#xA; &lt;li&gt;Limit on Open&lt;/li&gt; &#xA; &lt;li&gt;Stop&lt;/li&gt; &#xA; &lt;li&gt;Stop Limit&lt;/li&gt; &#xA; &lt;li&gt;Trailing Stop&lt;/li&gt; &#xA; &lt;li&gt;Trailing Stop Limit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/letianzj/quanttrader/raw/master/examples/gui.png&#34; alt=&#34;gui&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt; Open source, free to use, free to contribute, use at own risk. No promise of future profits nor responsibility of future loses.&lt;/p&gt;</summary>
  </entry>
</feed>