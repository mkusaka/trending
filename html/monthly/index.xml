<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:49:16Z</updated>
  <subtitle>Monthly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wesbos/JavaScript30</title>
    <updated>2024-07-01T01:49:16Z</updated>
    <id>tag:github.com,2024-07-01:/wesbos/JavaScript30</id>
    <link href="https://github.com/wesbos/JavaScript30" rel="alternate"></link>
    <summary type="html">&lt;p&gt;30 Day Vanilla JS Challenge&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://javascript30.com/images/JS3-social-share.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;JavaScript30&lt;/h1&gt; &#xA;&lt;p&gt;Starter Files + Completed solutions for the JavaScript 30 Day Challenge.&lt;/p&gt; &#xA;&lt;p&gt;Grab the course at &lt;a href=&#34;https://JavaScript30.com&#34;&gt;https://JavaScript30.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community #JavaScript30 Content&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to submit a PR by adding a link to your own recaps, guides, or reviews!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thesagittariusme.blogspot.com/search/label/JS30&#34;&gt;Arjun Khode’s blog&lt;/a&gt; about summaries for each day, including fixed glitches, bugs and extra features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nitishdayal/JavaScript30&#34;&gt;Nitish Dayal&#39;s Text Guides&lt;/a&gt; are great for those who like reading over watching.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tfrommen.de/tag/javascript-30/&#34;&gt;Thorsten Frommen&lt;/a&gt; shares how he solved the exercises before viewing the answers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soyaine/JavaScript30&#34;&gt;Soyaine 写的中文指南&lt;/a&gt;包含了过程记录和难点解释&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://b23.tv/pSa7rdu&#34;&gt;乔木 录制的讲解视频&lt;/a&gt; 看中文讲解视频一起学习 Javascript30 吧! Javascript30 中 CSS/JS/HTML 视频讲解&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freshman.tech/archive/#javascript30&#34;&gt;Ayo Isaiah&#39;s&lt;/a&gt; Recaps and Lessons Learned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stpcollabr8nlstn.github.io/JavaScript30/&#34;&gt;Adriana Rios&lt;/a&gt; shares her alternative solutions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://30daysofjs.michaeleinsohn.com&#34;&gt;Michael Einsohn&lt;/a&gt; publishes each challenge after watching the video once.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mike_ekkel/javascript-30-a-30-day-vanilla-js-challenge-6a733fc9f62c#.9frjtaje9&#34;&gt;Mike Ekkel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yhabib/JavaScript30&#34;&gt;Yusef Habib&lt;/a&gt; lessons and tricks learned, and a &lt;a href=&#34;https://yhabib.github.io/JavaScript30/&#34;&gt;gh-page&lt;/a&gt; to see working all the mini-projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amelieyeh/JS30&#34;&gt;Amelie Yeh&lt;/a&gt; 30 lesson notes with things I&#39;ve learned, and those important recaps. and directly view my demos &lt;a href=&#34;https://amelieyeh.github.io/JS30/&#34;&gt;here&lt;/a&gt; 🇹🇼😄&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/winar-jin/JavaScript30-Challenge&#34;&gt;Winar&lt;/a&gt;的JavaScript30天挑战，记录练习过程，重难点和其他的解决方案。🎨&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rayhatron.github.io/blog/&#34;&gt;Rayhatron&lt;/a&gt; - walkthroughs, recaps, and lessons learned.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andreidbr/JS30&#34;&gt;Andrei Dobra&lt;/a&gt; Full repo with lessons learned and a &lt;a href=&#34;https://andreidbr.github.io/JS30/&#34;&gt;gh-page&lt;/a&gt; with all the exercises.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/liyuechun/JavaScript30-liyuechun&#34;&gt;从零到壹全栈部落&lt;/a&gt;,春哥发起的从零到壹全栈部落，旨在带领大家一起学习，一起输出，文档化，代码化，中文视频化，全栈部落口号：输出是最好的学习方式。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usyyy/javascript/raw/master/JavaScript30/analysis.md&#34;&gt;Usmaan Ali&#39;s&lt;/a&gt; summary of the technical skills learned from each project. He&#39;s also posting them as separate blog posts &lt;a href=&#34;https://medium.com/@usyyy&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/afuh/js30&#34;&gt;Axel&lt;/a&gt;&#39;s lessons learned and a &lt;a href=&#34;https://afuh.github.io/js30/&#34;&gt;showcase&lt;/a&gt; with the projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dwatow/JavaScript30&#34;&gt;Chris&lt;/a&gt; 中文實戰，目標描述、過程紀錄。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://miayam.github.io&#34;&gt;Muhammad D. Ramadhan&#39;s&lt;/a&gt; blog. He shamlesly mixed his personal life with 30 day JavaScript challenge to increase his learning retention. He also summarised the challenge on &lt;a href=&#34;https://miayam.github.io/js30&#34;&gt;one single page&lt;/a&gt;. Do not read his blog!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.keitel.xyz/categories/javascript30/&#34;&gt;Lee Keitel&#39;s Blog&lt;/a&gt; includes summaries of each lesson, what I learned from each one, and my thoughts about the topic taught and using them in the future.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dustinhsiao21/Javascript30-dustin&#34;&gt;Dustin Hsiao&lt;/a&gt; 包含了各篇介紹、 效果Demo、各篇詳解及記錄過程，附上部分延伸閱讀及&lt;a href=&#34;https://dustinhsiao21.github.io/Javascript30-dustin/&#34;&gt;gh-page&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guahsu/JavaScript30&#34;&gt;GuaHsu&lt;/a&gt; - 紀錄各篇練習過程與心得，並嘗試擴充部分練習，也做了一個包含全部練習的&lt;a href=&#34;http://guahsu.io/JavaScript30/&#34;&gt;介紹站&lt;/a&gt;🇹🇼&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/misslild&#34;&gt;Daniela&lt;/a&gt;&#39;s completed challenges on &lt;a href=&#34;https://misslild.github.io/WesBos-30day-Coding-challenge/&#34;&gt;GitHub Pages&lt;/a&gt; and &lt;a href=&#34;https://codepen.io/collection/DapZeP/&#34;&gt;Codepen&lt;/a&gt; &lt;span&gt;🙌&lt;/span&gt; &lt;span&gt;💪&lt;/span&gt; &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guar47&#34;&gt;Dmitrii Pashutskii&#39;s&lt;/a&gt; code of all challenges on &lt;a href=&#34;https://github.com/guar47/javascript30Summary&#34;&gt;GitHub with Pages&lt;/a&gt; and review &lt;a href=&#34;https://blog.dpashutskii.com/tag/javascript30/&#34;&gt;blog posts&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sabidhasan/javascript-30&#34;&gt;Abid Hasan&#39;s&lt;/a&gt; completion of all challenges. This was awesome!! Learned so much! &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sky172839465.github.io/course/js30&#34;&gt;Yusong Notes&lt;/a&gt; Records Yusong JS 30 days note and demo. &lt;span&gt;🌟&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ding-Fan/javascript30&#34;&gt;Ding&#39;s Implementation&lt;/a&gt; code and online demo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/herminiotorres/JavaScript30&#34;&gt;Herminio Torres&lt;/a&gt; lessons and tricks learned, and a &lt;a href=&#34;https://herminiotorres.github.io/JavaScript30/&#34;&gt;gh-page&lt;/a&gt; to see working all the mini-projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dimabory&#34;&gt;Dmytro Borysovskyi&lt;/a&gt; says many thanks for the course to Wes 🤝 It was incredible challenge 👌 The full repository with code available &lt;a href=&#34;https://github.com/dimabory/dimabory.github.io/tree/gh-pages/src/components/JavaScript30Days&#34;&gt;here&lt;/a&gt; and demos can be reached by the link to &lt;a href=&#34;https://dimabory.github.io/#/js30days&#34;&gt;gh-pages&lt;/a&gt;.👍👍👍&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akhilome/&#34;&gt;Kizito&lt;/a&gt;&#39;s follow along &lt;a href=&#34;https://github.com/akhilome/js30&#34;&gt;repo&lt;/a&gt; with &lt;a href=&#34;https://akhilome.github.io/js30&#34;&gt;completed challenges&lt;/a&gt; and &lt;a href=&#34;https://akhilome.github.io/js30/notes&#34;&gt;notes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanntile&#34;&gt;VannTile&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/vanntile/JavaScript30&#34;&gt;repository&lt;/a&gt; and &lt;a href=&#34;https://vanntile.github.io/JavaScript30/&#34;&gt;GitHub Pages showcase&lt;/a&gt;. Thank you for a great ⌨️ experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alex-K1m/js30-challenge&#34;&gt;Alex Kim&lt;/a&gt; completed all the challenges. You can check them out at &lt;a href=&#34;https://alex-k1m.github.io/js30-challenge/&#34;&gt;GitHub pages&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seckela&#34;&gt;Mikhail Thomas&lt;/a&gt; created &lt;a href=&#34;https://github.com/seckela/js30plusplus&#34;&gt;JS30++&lt;/a&gt; to add another level of challenge on top of this already great course.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reymon359/JavaScript30&#34;&gt;Ramon Morcillo&lt;/a&gt; finished this awesome challenge!. You can see the showcase of his implementations on &lt;a href=&#34;https://reymon359.github.io/JavaScript30/&#34;&gt;this link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sescobar99&#34;&gt;Santiago Escobar&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/sescobar99/javascript30-challenge&#34;&gt;repository&lt;/a&gt; and &lt;a href=&#34;https://sescobar99.github.io/javascript30-challenge/&#34;&gt;GitHub Pages showcase&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/a90100/JavaScript30&#34;&gt;Harry Xie&lt;/a&gt; 紀錄 30 天的練習筆記在 &lt;a href=&#34;https://github.com/a90100/JavaScript30&#34;&gt;此連結&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vanribeiro-30daysofjavascript.netlify.app/&#34;&gt; Van Ribeiro&#39;s &lt;/a&gt; about demos and recaps. On &lt;a href=&#34;https://github.com/vanribeiro/30days-Of-JavaScript&#34;&gt;GitHub Repo&lt;/a&gt; there&#39;s a summary about what was learned and researched.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mugilan-Codes&#34;&gt;Mugilan&lt;/a&gt; is currently doing this challenge. Check out his &lt;a href=&#34;https://github.com/Mugilan-Codes/javascript-30&#34;&gt;Repo&lt;/a&gt; and the &lt;a href=&#34;https://mugilan-codes.github.io/javascript-30/&#34;&gt;Live Demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eshanvohra&#34;&gt;Eshan Vohra&lt;/a&gt; is currently doing this challenge. Check out my repo &lt;a href=&#34;https://github.com/eshanvohra/JavaScript30&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RegusAl&#34;&gt;RegusAl&lt;/a&gt; is currently doing this challenge. Check out my repo &lt;a href=&#34;https://github.com/RegusAl/JavaScript30&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javascript30.ayushgupta.tech/&#34;&gt;Ayush Gupta&#39;s&lt;/a&gt; implementation of JavaScript30 challenge with some add-ons &amp;amp; updated design.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filipkowal/JS30-05-Flex-Panels-Deactivate&#34;&gt;filipkowal&lt;/a&gt; Fix to flex panels (5th day) so the panels deactivate when clicked on another one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MoSaif00&#34;&gt;Mo. Saif&#39;s&lt;/a&gt;note on lessons learned and a &lt;a href=&#34;https://mosaif00.github.io/30-Days-JavaScript-Challenge/&#34;&gt;gh-pages showcase&lt;/a&gt; for the projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stiaannel.co.za/my-projects/javascript30&#34;&gt;Stiaannel&#39;s&lt;/a&gt; implementation of the Javascript30 challenge, with small design changes and a couple of extra features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kellychi22.github.io/JavaScript30/&#34;&gt;Kelly CHI&#39;s&lt;/a&gt; complete JavaScript30 challenges! Click the links to check demos and notes of each challenge. 🇹🇼 🌟&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://issam-seghir.github.io/JavaScript30/&#34;&gt;Issam Seghir&lt;/a&gt; added custom solutions and styles 🍧, improved performance, including fixed bugs/issus 💢. , added articles for each exercise 📝.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternative Implementations&lt;/h2&gt; &#xA;&lt;p&gt;Here are some links of people who have done the tutorials, but in a different language or framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tkjone/clojurescript-30&#34;&gt;Thomas Mattacchione&lt;/a&gt; JavaScript 30 written in ClojureScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davefollett&#34;&gt;Dave Follett&#39;s&lt;/a&gt; blog series, &lt;a href=&#34;https://davefollett.io/categories/a-new-vue-on-javascript30/&#34;&gt;A New Vue on #JavaScript30&lt;/a&gt;, where he explores re-implementing #JavaScript30 projects using &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinjide/JS30days&#34;&gt;Akinjide Bankole&lt;/a&gt; used Node.js with &lt;a href=&#34;http://jadelang.net&#34;&gt;Jade&lt;/a&gt; to solve the exercises.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adrienpoly/javascript30-stimulus&#34;&gt;Adrien Poly&lt;/a&gt; a modest attempt to convert Drum Kit, Video Player, Local Tapas, TypeHead to &lt;a href=&#34;https://stimulusjs.org/&#34;&gt;Stimulus JS&lt;/a&gt; framework in a Rails App.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tricinel/TypeScript30&#34;&gt;Bogdan Lazar&lt;/a&gt; all the JavaScript 30 written in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wwags33/JavaScript30&#34;&gt;Will Wager&lt;/a&gt; another &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; implementation!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marcoSven&#34;&gt;marcoSven&lt;/a&gt; solution suggestion for &lt;a href=&#34;https://github.com/marcoSven/JavaScript30/raw/master/10%20-%20Hold%20Shift%20and%20Check%20Checkboxes/index-FINISHED.html&#34;&gt;10 - Hold Shift and Check Checkboxes&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/almaclaine&#34;&gt;ALMaclaine&lt;/a&gt; Javascript 30 written in &lt;a href=&#34;https://github.com/ALMaclaine/Dart30&#34;&gt;Dart 2.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/railsstudent&#34;&gt;Connie Leung&lt;/a&gt; Javascript 30 written in &lt;a href=&#34;https://github.com/railsstudent/ng-rxjs-30&#34;&gt;Angular and RxJS&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A note on Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;These are meant to be 1:1 copies of what is done in the video. If you found a better / different way to do things, great, but I will be keeping them the same as the videos.&lt;/p&gt; &#xA;&lt;p&gt;The starter files + solutions will be updated if/when the videos are updated.&lt;/p&gt; &#xA;&lt;p&gt;Thanks!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ultrasecurity/Storm-Breaker</title>
    <updated>2024-07-01T01:49:16Z</updated>
    <id>tag:github.com,2024-07-01:/ultrasecurity/Storm-Breaker</id>
    <link href="https://github.com/ultrasecurity/Storm-Breaker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Social engineering tool [Access Webcam &amp; Microphone &amp; Location Finder] With {Py,JS,PHP}&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/ultrasecurity/Storm-Breaker&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ultrasecurity/Storm-Breaker/main/.imgs/1demo.png&#34; alt=&#34;StormBreaker&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A Tool With Attractive Capabilities. &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://python.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/python-v3-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://php.net&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/php-7.4.4-green&#34; alt=&#34;php&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Platform-Linux-red&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ultrasecurity/Storm-Breaker/main/.imgs/screen1.jpeg&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Obtain Device Information Without Any Permission !&lt;/li&gt; &#xA; &lt;li&gt;Access Location [SMARTPHONES]&lt;/li&gt; &#xA; &lt;li&gt;Access Webcam&lt;/li&gt; &#xA; &lt;li&gt;Access Microphone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Update Log:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Second (latest) Update on November 4th , 2022 .&lt;/li&gt; &#xA; &lt;li&gt;The overall structure of the tool is programmed from the beginning and is available as a web panel (in previous versions, the tool was available in the command line).&lt;/li&gt; &#xA; &lt;li&gt;Previous version&#39;s bugs fixed !&lt;/li&gt; &#xA; &lt;li&gt;Auto-download Ngrok Added !&lt;/li&gt; &#xA; &lt;li&gt;The templates have been optimized !&lt;/li&gt; &#xA; &lt;li&gt;Logs can be downloaded (NEW) !&lt;/li&gt; &#xA; &lt;li&gt;Clear log Added !&lt;/li&gt; &#xA; &lt;li&gt;It can be uploaded on a personal host (you won&#39;t have the Ngork problems anymore)&lt;/li&gt; &#xA; &lt;li&gt;You can start and stop the listener anytime ! (At will)&lt;/li&gt; &#xA; &lt;li&gt;Beautified user interface (NEW) !&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We have deleted Ngrok in the new version of Storm breaker and entrusted the user with running and sharing the localhost . So please note that Storm breaker runs a localhost for you and you have to start the Ngrok on your intended port yourself . &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Attention! :&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This version can be run on both local host and your personal domain and host . However , you can use it for both situations. If your country has suspended the Ngrok service, or your country&#39;s banned Ngrok, or your victim can&#39;t open the Ngrok link (for the reasons such as : He sees such a link as suspicious, Or if this service is suspended in his country) We suggest using the tool on your personal host and domain . &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Default username and password:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;username&lt;/code&gt; : &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;password&lt;/code&gt; : &lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can edit the config.php file to change the username and password . &lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;Storm Breaker&lt;/code&gt;&lt;/strong&gt; requires following programs to run properly -&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;php&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Ngrok&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ![demo](.imgs/Work3.gif) --&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Platforms Tested&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kali Linux 2022&lt;/li&gt; &#xA; &lt;li&gt;macOS Big Sur / M1&lt;/li&gt; &#xA; &lt;li&gt;Termux (android)&lt;/li&gt; &#xA; &lt;li&gt;Personal host (direct admin and cPanel) &lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation On Kali Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/ultrasecurity/Storm-Breaker&#xA;$ cd Storm-Breaker&#xA;$ sudo bash install.sh&#xA;$ sudo python3 -m pip install -r requirements.txt&#xA;$ sudo python3 st.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;how to run personal host 👇&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Zip the contents of the storm-web folder completely and upload it to the public_html path .&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that the tool should not be opened in a path like this &amp;gt; yourdomain.com/st-web Instead , it should be opened purely in the public_html path (i.e. : don&#39;t just zip the storm-web folder itself, but manually zip its contents (the index.php file and other belongings should be in the public_html path)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Attention!:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that to use this tool on your Localhost , You also need SSL . Because many of the tool&#39;s capabilities require SSL .&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Attention!:&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To run ngrok on termux you need to enable your personal hotspot and cellular network.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SamHerbert/SVG-Loaders</title>
    <updated>2024-07-01T01:49:16Z</updated>
    <id>tag:github.com,2024-07-01:/SamHerbert/SVG-Loaders</id>
    <link href="https://github.com/SamHerbert/SVG-Loaders" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Loading icons and small animations built with pure SVG.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;All loaders may be previewed at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://samherbert.net/svg-loaders&#34;&gt;http://samherbert.net/svg-loaders&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Chrome 45 intended to deprecate SMIL icons but has since &lt;a href=&#34;https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/5o0yiO440LM%5B126-150%5D&#34;&gt;suspended&lt;/a&gt; that deprecation.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SamHerbert/SVG-Loaders/archive/master.zip&#34;&gt;Download&lt;/a&gt; or &lt;code&gt;bower install svg-loaders&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&#34;svg-loaders/puff.svg&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An icon&#39;s color can be manipulated by changing the &lt;code&gt;fill&lt;/code&gt; attribute in the SVG file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg fill=&#34;#fff&#34; width=&#34;140&#34; height=&#34;64&#34; viewBox=&#34;0 0 140 64&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Not all browsers support SVG, or more specifically, animated SVGs. Check (&lt;a href=&#34;http://caniuse.com/#feat=svg-smil&#34;&gt;http://caniuse.com/#feat=svg-smil&lt;/a&gt;) to make sure you&#39;re good to go. If not, you may want to implement a fallback.&lt;/p&gt; &#xA;&lt;h1&gt;Minify&lt;/h1&gt; &#xA;&lt;p&gt;All SVG files are fairly small in size, but you can make them even smaller by minifying with something like &lt;a href=&#34;https://github.com/svg/svgo&#34;&gt;SVGO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Adaptations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ajwann/svg-loaders-react&#34;&gt;React components by ajwann&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>