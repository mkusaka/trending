<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:46:25Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TypingMind/typingmind</title>
    <updated>2024-03-17T01:46:25Z</updated>
    <id>tag:github.com,2024-03-17:/TypingMind/typingmind</id>
    <link href="https://github.com/TypingMind/typingmind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most advanced Web UI for AI chat&lt;/p&gt;&lt;hr&gt;&lt;h2 align=&#34;center&#34;&gt; &lt;img height=&#34;150&#34; alt=&#34;Typing Mind - A better UI for ChatGPT&#34; src=&#34;https://www.typingmind.com/banner.png&#34;&gt; &lt;br&gt; Static Self-host Version &lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;Typing Mind is the most advanced Chat UI frontend for AI models like ChatGPT, Claude, Gemini, and open-source models &lt;br&gt;&lt;/p&gt; &#xA; &lt;img alt=&#34;Users: 18,000+&#34; src=&#34;https://img.shields.io/badge/users-18%2C000%2B-green&#34;&gt; &#xA; &lt;a href=&#34;https://www.typingmind.com/discord&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1087527241505853520?style=flat&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &#xA; &lt;img alt=&#34;Uptime Robot ratio (30 days)&#34; src=&#34;https://img.shields.io/uptimerobot/ratio/m796342452-0b8b12da5c8a5f4bd1df4fbb&#34;&gt; &#xA; &lt;img alt=&#34;Documentations&#34; src=&#34;https://img.shields.io/badge/Documentations-black?logo=readthedocs&#34;&gt; &#xA; &lt;a href=&#34;https://setapp.com/apps/typingmind&#34;&gt; &lt;img alt=&#34;Setapp Rating: 91%&#34; src=&#34;https://img.shields.io/badge/Setapp-946%20ratings-green?logo=setapp&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.producthunt.com/posts/typing-mind?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-typing-mind&#34;&gt; &lt;img alt=&#34;Product Hunt: Product of the Day&#34; src=&#34;https://img.shields.io/badge/Product%20of%20The%20Day-%231-orange?logo=producthunt&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://x.com/TypingMindApp&#34;&gt; &lt;img alt=&#34;X (formerly Twitter) Follow&#34; src=&#34;https://img.shields.io/twitter/follow/TypingMindApp&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;img width=&#34;1360&#34; alt=&#34;Screenshot of Typing Mind app&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/d9c4a4df-51ba-4f36-8406-33c1e6f7ee1c&#34;&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://www.producthunt.com/posts/typing-mind?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-typing-mind&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.typingmind.com/assets/product-hunt/featured.svg?sanitize=true&#34; alt=&#34;Typing Mind - A better UI for ChatGPT | Product Hunt&#34; width=&#34;250&#34; height=&#34;54&#34; style=&#34;width: 250px; height: 54px;&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://www.producthunt.com/posts/typing-mind?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-typing-mind&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.typingmind.com/assets/product-hunt/top-post-badge.svg?sanitize=true&#34; alt=&#34;Typing Mind - A better UI for ChatGPT | Product Hunt&#34; width=&#34;250&#34; height=&#34;54&#34; style=&#34;width: 250px; height: 54px;&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📜 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 Support multi models: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ChatGPT, Claude, Gemini, Azure OpenAI, Perplexity AI, Mixtral AI, LLama&lt;/li&gt; &#xA;   &lt;li&gt;Adding custom endpoint, custom models (e.g., Open Router), and locally hosted models (e.g., LocalAI, Ollama)&lt;/li&gt; &#xA;   &lt;li&gt;Custom model parameters: Temperature, Frequency_penalty, Presence_penalty, Top_P, Top_K, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🚀 Advanced Features: GPT-4 Vision, Document Uploads, DALL-E 3, Web Search, Text-to-Speech, Whipsper, Plugins&lt;/li&gt; &#xA; &lt;li&gt;💬 Chat Management: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tags, Search, Folders, Share, Backup &amp;amp; Sync, Import/Export, Migrate from ChatGPT&lt;/li&gt; &#xA;   &lt;li&gt;Fork Chat (conversation branching), Edit Message, Pin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📚 Prompt Library (with template variable support), AI Characters, Output Control, Dynamic Context Limit&lt;/li&gt; &#xA; &lt;li&gt;🔐 Secure and private by default: API keys encryption, set password, self-host&lt;/li&gt; &#xA; &lt;li&gt;🖥️ Beautiful and Functional User Interface: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Voice Input, Text-to-Speech, Sound Notification&lt;/li&gt; &#xA;   &lt;li&gt;Light/Dark mode, Hotkeys, Responsive &amp;amp; Mobile Friendly, Wide Screen Support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;🧩 Integrations: Web Search, Plugins System (develop your own plugins), Search Keyword Suggestions&lt;/li&gt; &#xA; &lt;li&gt;🇺🇸 Multilingual: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🇺🇸 English 🇩🇪 German, 🇨🇳 Mandarin, 🇻🇳 Vietnamese, 🇬🇷 Greek, 🇫🇷 French, 🇮🇹 Italian&lt;/li&gt; &#xA;   &lt;li&gt;🇷🇺 Russian, 🇺🇦 Ukrainian, 🇪🇸 Spanish, 🇵🇹 Portuguese, 🇱🇺 Luxembourgish&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;a href=&#34;https://custom.typingmind.com/&#34;&gt;Typing Mind Custom&lt;/a&gt; (for teams): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Host a customized version of Typing Mind with custom branding, self-host, customized UI&lt;/li&gt; &#xA;   &lt;li&gt;Team sharing: Prompts Library, AI Characters&lt;/li&gt; &#xA;   &lt;li&gt;User Management, Access Control, Connect Internal Data, APIs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👋 Overview&lt;/h2&gt; &#xA;&lt;p&gt;Typing Mind is a Chat UI frontend that allows you to use AI chats from all popular AI models with your API key (ChatGPT, Claude, Azure OpenAI, Gemini, etc.).&lt;/p&gt; &#xA;&lt;p&gt;By using the API key with a Chat UI frontend like Typing Mind, you unlock the following benefits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You only pay for what you use (instead of a monthly subscription like ChatGPT Plus)&lt;/li&gt; &#xA; &lt;li&gt;Your chat conversation will NOT be used for training by OpenAI/Claude/etc.&lt;/li&gt; &#xA; &lt;li&gt;Chat with multiple models conveniently within a unified interface&lt;/li&gt; &#xA; &lt;li&gt;Enjoy a professional, advanced chat UI with tons of features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Typing Mind is &lt;strong&gt;offline first&lt;/strong&gt; and &lt;strong&gt;private by default&lt;/strong&gt;. All your data, messages, and API keys are stored locally on your device, and no one can see them except you.&lt;/p&gt; &#xA;&lt;p&gt;This is the &lt;em&gt;Static Self-host Version&lt;/em&gt; of Typing Mind (&lt;a href=&#34;https://www.typingmind.com/&#34;&gt;www.typingmind.com&lt;/a&gt;). By running the static self-host version, you can use Typing Mind from your private server or from a local device. Typing Mind is free to use with some basic features, a license key is needed to unlock all advanced features. See our &lt;a href=&#34;https://www.typingmind.com/pricing&#34;&gt;pricing plans&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To run the app locally on your device or private server:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;yarn install&lt;/code&gt; or &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the server: &lt;code&gt;yarn start&lt;/code&gt; or &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;App will run at &lt;code&gt;localhost:3000&lt;/code&gt; by default.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Optionally, you can use any other static web server to host the &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you run the app on hostnames other than &lt;code&gt;localhost&lt;/code&gt;, you must use HTTPS to make sure all app features work.&lt;/p&gt; &#xA;&lt;h2&gt;🔗 Connect to local models&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the app&lt;/li&gt; &#xA; &lt;li&gt;Click the model dropdown → Model Settings → Add Custom Models&lt;/li&gt; &#xA; &lt;li&gt;Enter your custom model details: Endpoint, Model ID. Custom headers and body parameters are supported.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Test&#34; and then &#34;Add Model&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you face CORS issue, make sure to run your local model in CORS mode.&lt;/p&gt; &#xA;&lt;p&gt;Read the official documents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/set-up-local-models-with-local-ai-(llama-gpt4all-vicuna-falcon-etc.)&#34;&gt;Set up local models with Local AI (LLama, GPT4All, Vicuna, Falcon, etc.)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/use-azure-openai&#34;&gt;Use with Azure OpenAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/use-openrouter-models&#34;&gt;Use with OpenRouter Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/fine-tuning-models&#34;&gt;Use with Fine-tunned models (OpenAI)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/use-with-mistral-ai&#34;&gt;Use with Mixtral AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.typingmind.com/chat-models-settings/use-with-perplexity-ai&#34;&gt;Use with Perplexity AI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📸 Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Home page&lt;/th&gt; &#xA;   &lt;th&gt;GPT-4 Vision&lt;/th&gt; &#xA;   &lt;th&gt;Custom Models&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1284&#34; alt=&#34;Xnapper-2024-02-09-23 43 05&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/5e7e288e-8ecc-4706-a2d2-d39a50669058&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1284&#34; alt=&#34;gpt4 vision&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/fe55a28a-8f05-431c-8ce1-859be0236c73&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1283&#34; alt=&#34;custom model&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/aa311abd-6314-49d4-a413-cb0e9bdf617d&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;AI Characters&lt;/th&gt; &#xA;   &lt;th&gt;Voice Input&lt;/th&gt; &#xA;   &lt;th&gt;Plugins&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1284&#34; alt=&#34;ai characters&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/12570e1f-0015-4b08-8355-70d77b177421&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1284&#34; alt=&#34;voice input&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/bc8f79f7-571d-4c94-ab69-e75e7b129992&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img width=&#34;1284&#34; alt=&#34;plugins&#34; src=&#34;https://github.com/TypingMind/typingmind/assets/4214509/9c0945d2-957b-4a41-83a4-c02968c7bed9&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;📝 Updates &amp;amp; Changelogs&lt;/h2&gt; &#xA;&lt;p&gt;To update, simply &lt;code&gt;git pull&lt;/code&gt; and restart your server.&lt;/p&gt; &#xA;&lt;p&gt;Change logs are available here: &lt;a href=&#34;https://www.typingmind.com/changelog&#34;&gt;https://www.typingmind.com/changelog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The static self-host version updates are delayed from 1 or 2 versions compared to the latest versions on &lt;a href=&#34;https://www.typingmind.com&#34;&gt;www.typingmind.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💡 Feedback / Ideas / Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please submit your ideas to &lt;a href=&#34;https://www.typingmind.com/ideas&#34;&gt;https://www.typingmind.com/ideas&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For bug reports and customer support, please contact &lt;a href=&#34;mailto:support@typingmind.com&#34;&gt;support@typingmind.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;❓ FAQs&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;What is self-hosting?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Self-host means you deploy the same version of TypingMind.com on your own web hosting server and domain name for your personal use.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Why self-hosting? What are the benefits?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Some people prefer to run the software on their own server for privacy and availability reasons. For example, if TypingMind.com becomes inaccessible in the future, you can still access your own version of TypingMind from your server without any problem. The self-host version can also be run locally like an app.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;What can I customize in the self-host version?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;As of now, you cannot customize anything. The self-host version will be exactly the same as the one you are using on TypingMind.com. If you are looking for a more flexible and customizable way to use Typing Mind, check out &lt;a href=&#34;https://custom.typingmind.com&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://custom.typingmind.com&#34;&gt;https://custom.typingmind.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Where can I deploy my self-host version?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Anywhere! You can deploy it on your own server, or on a static web cloud service like GitHub Pages, Cloudflare Pages, AWS S3, Vercel, Netlify, Heroku, etc. You can even run it on localhost.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Do I have access to the full source code if I want to self-host?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;No. The license key only grants you permission to use and deploy the app on your own server. You do not have permission to modify or redistribute the code. The full source code is not available for sale as the app is not open-source. You will only receive the compiled code of the app, you can deploy the app anywhere without having to update any code or settings.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;How do I receive updates for the self-host version?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Simply clone or pull the latest changes from the GitHub repo (&lt;a href=&#34;https://github.com/TypingMind/typingmind&#34;&gt;https://github.com/TypingMind/typingmind&lt;/a&gt;), then restart your server.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Do I still need a License Key and Open API Key to use the self-hosted version?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Yes. Both are needed, as the self-hosted version is exactly the same as the version you see on TypingMind.com. The License Key is needed in the self-host version. When you enter the license key, the app will connect to TypingMind&#39;s license server to verify your license.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Can I let my team/community/customers use the self-host version?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;You can, but keep in mind that they will also need a TypingMind License Key and OpenAI API Key in order to use it. If you are looking to use Typing Mind for a team check out &lt;a href=&#34;https://custom.typingmind.com&#34;&gt;https://custom.typingmind.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Can I embed my License Key/API key to the self-host version somehow and let my team/community/customers use it?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;No you can&#39;t, and you shouldn&#39;t. It&#39;s not safe to share your License Key and API Key with the public like that. The Static App Self-host version is meant for personal use. If you are looking to set up a custom deployment of TypingMind for your team/community/customers, please check out &lt;a href=&#34;https://typingmind.com/custom&#34;&gt;https://typingmind.com/custom&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Can I have support on technical issues if I self-host?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;The self-host version comes for free when you buy a license key. There is no support on technical issues if you self-host. If you don&#39;t have the technical skills to set up the self-host version, we recommend using the hosted version on &lt;a href=&#34;https://typingmind.com&#34;&gt;https://typingmind.com&lt;/a&gt; instead. You can also check out Typing Mind Custom for easier setup with custom branding and manage team members: &lt;a href=&#34;https://custom.typingmind.com/&#34;&gt;https://custom.typingmind.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;What permissions do I have with the self-host code?&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;✅ You have access to the compiled code of the app.&lt;/li&gt; &#xA;  &lt;li&gt;✅ You have permission to deploy and use the compiled code on your own server.&lt;/li&gt; &#xA;  &lt;li&gt;❌ You do not have permission to modify or redistribute the compiled code.&lt;/li&gt; &#xA;  &lt;li&gt;❌ You do not have permission to share or resell the compiled code.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>BugBearer/GPT-INT</title>
    <updated>2024-03-17T01:46:25Z</updated>
    <id>tag:github.com,2024-03-17:/BugBearer/GPT-INT</id>
    <link href="https://github.com/BugBearer/GPT-INT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extension for Visual Studio Code that integrates the power of OpenAI&#39;s GPT models into VSCode.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BugBearer/GPT-INT/master/img/logo.jpg&#34; alt=&#34;logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;GPT Int (GPT Interaction for VSCode)&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;p align=&#34;center&#34;&gt;使用GPT Int插件可以提升你的编程体验。运行这个插件，你就可以让GPT来生成高质量代码🚀 ，又或者简化你的代码，解释复杂的代码，进行代码补全操作等，一切都不费吹灰之力🤖💻。&lt;/p&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/BugBearer/GPT-INT/master/README.md&#34;&gt;简体中文&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/BugBearer/GPT-INT/master/readmex.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;提前准备&lt;/h2&gt; &#xA;&lt;p&gt;VS Code&lt;/p&gt; &#xA;&lt;p&gt;OpenAI APIKey&lt;/p&gt; &#xA;&lt;h2&gt;开始使用&lt;/h2&gt; &#xA;&lt;p&gt;1.下载插件，并安装。然后运行插件。&lt;/p&gt; &#xA;&lt;p&gt;2.按ctrl+shift+p并输入命令&#34;Show Panel&#34;，便可打开与GPT的交互面板。&lt;/p&gt; &#xA;&lt;p&gt;3.点击Setting按钮，完成设置，便可正常使用插件。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BugBearer/GPT-INT/master/img/setting.gif&#34; alt=&#34;logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;插件设置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;gptint.apiBaseUrl&lt;/code&gt;: GPT API的base URL(默认&lt;a href=&#34;https://api.openai.com&#34;&gt;https://api.openai.com&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gptint.apiKey&lt;/code&gt;: 你的OpenAI API key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gptint.model&lt;/code&gt;: 你想使用的模型(e.g., gpt-4-1106-preview).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;⚠️由于对话每次都将历史消息一并发送，因此请留意API消耗。&lt;/p&gt; &#xA;&lt;h2&gt;插件功能&lt;/h2&gt; &#xA;&lt;h3&gt;代码补全&lt;/h3&gt; &#xA;&lt;p&gt;只需要在VSCode编辑器里打出注释，在注释里描述你的需求，并点击&#34;Get GPT Suggestion&#34;按钮，GPT Int插件就会尽可能地满足你，帮你补全完整的代码。&lt;/p&gt; &#xA;&lt;h3&gt;代码解释&lt;/h3&gt; &#xA;&lt;p&gt;只需要选中你不懂的代码，并点击&#34;Get GPT Suggestion&#34;按钮，GPT就会解答你的疑惑，为你讲解代码的功能和逻辑等。&lt;/p&gt; &#xA;&lt;h3&gt;简化代码&lt;/h3&gt; &#xA;&lt;p&gt;插件支持与GPT进行长对话。如果你感觉已有的某些代码是冗余的，你可以在聊天框里告诉GPT，并点击&#34;Send Message&#34;按钮。GPT会竭尽所能地为你重构代码。&lt;/p&gt; &#xA;&lt;h3&gt;支持自定义Prompt&lt;/h3&gt; &#xA;&lt;p&gt;你可以提前设定一些Prompt，比如告诉GPT接下来只需要输出代码等Prompt。&lt;/p&gt; &#xA;&lt;h3&gt;更多功能&lt;/h3&gt; &#xA;&lt;p&gt;更多功能正在开发中🚀...如果你有更好的想法，请在Issues里联系作者。&lt;/p&gt; &#xA;&lt;h2&gt;已知问题&lt;/h2&gt; &#xA;&lt;p&gt;⚠️由于某些特殊原因，使用插件后记得关闭插件后再关闭VSCode，否则下次启动会遇到一些特殊问题。（问题待修复）&lt;/p&gt; &#xA;&lt;h2&gt;开发日志&lt;/h2&gt; &#xA;&lt;h3&gt;1.0.0&lt;/h3&gt; &#xA;&lt;p&gt;初始版本刚刚上线，完成了一些基本功能，还有很多功能待开发&lt;/p&gt; &#xA;&lt;h3&gt;1.0.1&lt;/h3&gt; &#xA;&lt;p&gt;修复了一些由于VSCode的WebPage内存问题而导致的BUG。现在长轮次对话不会导致编辑器崩溃了。&lt;/p&gt; &#xA;&lt;h2&gt;额外事项&lt;/h2&gt; &#xA;&lt;p&gt;在网络被严格限制的情况下，你可能在VSCode中需要一些额外的配置才能正常使用插件。&lt;/p&gt; &#xA;&lt;p&gt;例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;proxies = {&#xA;    &#34;http&#34;: &#34;http://127.0.0.1:7890&#34;,&#xA;    &#34;https&#34;: &#34;http://127.0.0.1:7890&#34;,&#xA;}&#xA;#请替换为你的实际代理IP&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>vasturiano/3d-force-graph</title>
    <updated>2024-03-17T01:46:25Z</updated>
    <id>tag:github.com,2024-03-17:/vasturiano/3d-force-graph</id>
    <link href="https://github.com/vasturiano/3d-force-graph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3D force-directed graph component using ThreeJS/WebGL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;3D Force-Directed Graph&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://npmjs.org/package/3d-force-graph&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/3d-force-graph&#34; alt=&#34;NPM package&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bundlephobia.com/result?p=3d-force-graph&#34;&gt;&lt;img src=&#34;https://img.shields.io/bundlephobia/minzip/3d-force-graph&#34; alt=&#34;Build Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmtrends.com/3d-force-graph&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dt/3d-force-graph&#34; alt=&#34;NPM Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/large-graph/&#34;&gt;&lt;img width=&#34;80%&#34; src=&#34;https://vasturiano.github.io/3d-force-graph/example/preview.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;A web component to represent a graph data structure in a 3-dimensional space using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Force-directed_graph_drawing&#34;&gt;force-directed&lt;/a&gt; iterative layout. Uses &lt;a href=&#34;https://github.com/mrdoob/three.js/&#34;&gt;ThreeJS&lt;/a&gt;/WebGL for 3D rendering and either &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d&#34;&gt;d3-force-3d&lt;/a&gt; or &lt;a href=&#34;https://github.com/anvaka/ngraph.forcelayout3d&#34;&gt;ngraph&lt;/a&gt; for the underlying physics engine.&lt;/p&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://github.com/vasturiano/force-graph&#34;&gt;2D canvas version&lt;/a&gt;, &lt;a href=&#34;https://github.com/vasturiano/3d-force-graph-vr&#34;&gt;VR version&lt;/a&gt; and &lt;a href=&#34;https://github.com/vasturiano/3d-force-graph-ar&#34;&gt;AR version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And check out the &lt;a href=&#34;https://github.com/vasturiano/react-force-graph&#34;&gt;React bindings&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/basic/&#34;&gt;Basic&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/basic/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/async-load/&#34;&gt;Asynchronous load&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/async-load/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/large-graph/&#34;&gt;Larger graph (~4k elements)&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/large-graph/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/directional-links-arrows/&#34;&gt;Directional arrows&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/directional-links-arrows/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/directional-links-particles/&#34;&gt;Directional moving particles&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/directional-links-particles/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/curved-links/&#34;&gt;Curved lines and self links&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/curved-links/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/auto-colored/&#34;&gt;Auto-colored nodes/links&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/auto-colored/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/text-nodes/&#34;&gt;Text as nodes&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/text-nodes/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/img-nodes/&#34;&gt;Images as nodes&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/img-nodes/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/html-nodes/&#34;&gt;HTML in nodes&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/html-nodes/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/custom-node-geometry/&#34;&gt;Custom node geometries&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/custom-node-geometry/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/gradient-links/&#34;&gt;Gradient Links&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/gradient-links/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/text-links/&#34;&gt;Text in Links&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/text-links/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/controls-orbit/&#34;&gt;Orbit controls&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/controls-orbit/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/controls-fly/&#34;&gt;Fly controls&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/controls-fly/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/camera-auto-orbit/&#34;&gt;Camera automatic orbitting&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/camera-auto-orbit/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/click-to-focus/&#34;&gt;Click to focus on node&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/click-to-focus/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/expandable-nodes/&#34;&gt;Click to expand/collapse nodes&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/expandable-nodes/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/fix-dragged-nodes/&#34;&gt;Fix nodes after dragging&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/fix-dragged-nodes/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/fit-to-canvas/&#34;&gt;Fit graph to canvas&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/fit-to-canvas/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/highlight/&#34;&gt;Highlight nodes/links&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/highlight/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/multi-selection/&#34;&gt;Multiple Node Selection&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/multi-selection/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/dynamic/&#34;&gt;Dynamic data changes&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/dynamic/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/collision-detection/&#34;&gt;Node collision detection&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/collision-detection/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/manipulate-link-force/&#34;&gt;Manipulate link force distance&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/manipulate-link-force/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/emit-particles/&#34;&gt;Emit link particles on demand&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/emit-particles/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/tree/&#34;&gt;Force-directed tree (DAG mode)&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/tree/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/dag-yarn/&#34;&gt;yarn.lock dependency graph (DAG mode)&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/dag-yarn/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/scene/&#34;&gt;Add external objects to scene&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/scene/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/bloom-effect/&#34;&gt;Bloom Post-Processing Effect&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/bloom-effect/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vasturiano.github.io/3d-force-graph/example/pause-resume/&#34;&gt;Pause / Resume animation&lt;/a&gt; (&lt;a href=&#34;https://github.com/vasturiano/3d-force-graph/raw/master/example/pause-resume/index.html&#34;&gt;source&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import ForceGraph3D from &#39;3d-force-graph&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using a &lt;em&gt;script&lt;/em&gt; tag&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;//unpkg.com/3d-force-graph&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const myGraph = ForceGraph3D();&#xA;myGraph(&amp;lt;myDOMElement&amp;gt;)&#xA;  .graphData(&amp;lt;myData&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API reference&lt;/h2&gt; &#xA;&lt;h3&gt;Initialisation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;ForceGraph3d({ configOptions })(&amp;lt;domElement&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Config options&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;controlType&lt;/b&gt;: &lt;i&gt;str&lt;/i&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Which type of control to use to control the camera. Choice between &lt;a href=&#34;https://threejs.org/examples/misc_controls_trackball.html&#34;&gt;trackball&lt;/a&gt;, &lt;a href=&#34;https://threejs.org/examples/#misc_controls_orbit&#34;&gt;orbit&lt;/a&gt; or &lt;a href=&#34;https://threejs.org/examples/misc_controls_fly.html&#34;&gt;fly&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;trackball&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;rendererConfig&lt;/b&gt;: &lt;i&gt;object&lt;/i&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configuration parameters to pass to the &lt;a href=&#34;https://threejs.org/docs/#api/en/renderers/WebGLRenderer&#34;&gt;ThreeJS WebGLRenderer&lt;/a&gt; constructor.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;{ antialias: true, alpha: true }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;extraRenderers&lt;/b&gt;: &lt;i&gt;array&lt;/i&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you wish to include custom objects that require a dedicated renderer besides &lt;code&gt;WebGL&lt;/code&gt;, such as &lt;a href=&#34;https://threejs.org/docs/#examples/en/renderers/CSS3DRenderer&#34;&gt;CSS3DRenderer&lt;/a&gt;, include in this array those extra renderer instances.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Data input&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;graphData&lt;/b&gt;([&lt;i&gt;data&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for graph data structure (see below for syntax details). Can also be used to apply &lt;a href=&#34;https://bl.ocks.org/vasturiano/2f602ea6c51c664c29ec56cbe2d6a5f6&#34;&gt;incremental updates&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;{ nodes: [], links: [] }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;jsonUrl&lt;/b&gt;([&lt;i&gt;url&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;URL of JSON file to load graph data directly from, as an alternative to specifying &lt;i&gt;graphData&lt;/i&gt; directly.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeId&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor attribute for unique node id (used in link objects source/target).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkSource&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor attribute referring to id of source node.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkTarget&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor attribute referring to id of target node.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Container layout&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;width&lt;/b&gt;([&lt;i&gt;px&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the canvas width.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;&amp;lt;window width&amp;gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;height&lt;/b&gt;([&lt;i&gt;px&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the canvas height.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;&amp;lt;window height&amp;gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;backgroundColor&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the chart background color.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;#000011&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;showNavInfo&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for whether to show the navigation controls footer info.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Node styling&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeRelSize&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the ratio of node sphere volume (cubic px) per value unit.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeVal&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function, attribute or a numeric constant for the node numeric value (affects sphere volume).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;val&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeLabel&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function or attribute for name (shown in label). Supports plain text or HTML content. Note that this method uses &lt;code&gt;innerHTML&lt;/code&gt; internally, so make sure to pre-sanitize any user-input content to prevent XSS vulnerabilities.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeVisibility&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function, attribute or a boolean constant for whether to display the node.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeColor&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function or attribute for node color (affects sphere color).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeAutoColorBy&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function (&lt;code&gt;fn(node)&lt;/code&gt;) or attribute (e.g. &lt;code&gt;&#39;type&#39;&lt;/code&gt;) to automatically group colors by. Only affects nodes without a color attribute.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeOpacity&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the nodes sphere opacity, between [0,1].&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.75&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeResolution&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the geometric resolution of each node, expressed in how many slice segments to divide the circumference. Higher values yield smoother spheres.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeThreeObject&lt;/b&gt;([&lt;i&gt;Object3d&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function or attribute for generating a custom 3d object to render as graph nodes. Should return an instance of &lt;a href=&#34;https://threejs.org/docs/index.html#api/core/Object3D&#34;&gt;ThreeJS Object3d&lt;/a&gt;. If a &lt;i&gt;falsy&lt;/i&gt; value is returned, the default 3d object type will be used instead for that node.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;default node object is a sphere, sized according to &lt;code&gt;val&lt;/code&gt; and styled according to &lt;code&gt;color&lt;/code&gt;.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;nodeThreeObjectExtend&lt;/b&gt;([&lt;i&gt;bool&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node object accessor function, attribute or a boolean value for whether to replace the default node when using a custom &lt;code&gt;nodeThreeObject&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) or to extend it (&lt;code&gt;true&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Link styling&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkLabel&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for name (shown in label). Supports plain text or HTML content. Note that this method uses &lt;code&gt;innerHTML&lt;/code&gt; internally, so make sure to pre-sanitize any user-input content to prevent XSS vulnerabilities.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkVisibility&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a boolean constant for whether to display the link line. A value of &lt;code&gt;false&lt;/code&gt; maintains the link force without rendering it.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkColor&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for line color.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkAutoColorBy&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function (&lt;code&gt;fn(link)&lt;/code&gt;) or attribute (e.g. &lt;code&gt;&#39;type&#39;&lt;/code&gt;) to automatically group colors by. Only affects links without a color attribute.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkOpacity&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for line opacity of links, between [0,1].&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkWidth&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the link line width. A value of zero will render a &lt;a href=&#34;https://threejs.org/docs/#api/objects/Line&#34;&gt;ThreeJS Line&lt;/a&gt; whose width is constant (&lt;code&gt;1px&lt;/code&gt;) regardless of distance. Values are rounded to the nearest decimal for indexing purposes.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkResolution&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the geometric resolution of each link, expressed in how many radial segments to divide the cylinder. Higher values yield smoother cylinders. Applicable only to links with positive width.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkCurvature&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the curvature radius of the link line. Curved lines are represented as 3D bezier curves, and any numeric value is accepted. A value of &lt;code&gt;0&lt;/code&gt; renders a straight line. &lt;code&gt;1&lt;/code&gt; indicates a radius equal to half of the line length, causing the curve to approximate a semi-circle. For self-referencing links (&lt;code&gt;source&lt;/code&gt; equal to &lt;code&gt;target&lt;/code&gt;) the curve is represented as a loop around the node, with length proportional to the curvature value. Lines are curved clockwise for positive values, and counter-clockwise for negative values. Note that rendering curved lines is purely a visual effect and does not affect the behavior of the underlying forces.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkCurveRotation&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the rotation along the line axis to apply to the curve. Has no effect on straight lines. At &lt;code&gt;0&lt;/code&gt; rotation, the curve is oriented in the direction of the intersection with the &lt;code&gt;XY&lt;/code&gt; plane. The rotation angle (in radians) will rotate the curved line clockwise around the &#34;start-to-end&#34; axis from this reference orientation.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkMaterial&lt;/b&gt;([&lt;i&gt;Material&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for specifying a custom material to style the graph links with. Should return an instance of &lt;a href=&#34;https://threejs.org/docs/#api/materials/Material&#34;&gt;ThreeJS Material&lt;/a&gt;. If a &lt;i&gt;falsy&lt;/i&gt; value is returned, the default material will be used instead for that link.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;default link material is &lt;a href=&#34;https://threejs.org/docs/#api/materials/MeshLambertMaterial&#34;&gt;MeshLambertMaterial&lt;/a&gt; styled according to &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt;.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkThreeObject&lt;/b&gt;([&lt;i&gt;Object3d&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for generating a custom 3d object to render as graph links. Should return an instance of &lt;a href=&#34;https://threejs.org/docs/index.html#api/core/Object3D&#34;&gt;ThreeJS Object3d&lt;/a&gt;. If a &lt;i&gt;falsy&lt;/i&gt; value is returned, the default 3d object type will be used instead for that link.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;default link object is a line or cylinder, sized according to &lt;code&gt;width&lt;/code&gt; and styled according to &lt;code&gt;material&lt;/code&gt;.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkThreeObjectExtend&lt;/b&gt;([&lt;i&gt;bool&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a boolean value for whether to replace the default link when using a custom &lt;code&gt;linkThreeObject&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt;) or to extend it (&lt;code&gt;true&lt;/code&gt;).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkPositionUpdate&lt;/b&gt;([&lt;i&gt;fn(linkObject, { start, end }, link)&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the custom function to call for updating the position of links at every render iteration. It receives the respective link &lt;code&gt;ThreeJS Object3d&lt;/code&gt;, the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; coordinates of the link (&lt;code&gt;{x,y,z}&lt;/code&gt; each), and the link&#39;s &lt;code&gt;data&lt;/code&gt;. If the function returns a truthy value, the regular position update function will not run for that link.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalArrowLength&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the length of the arrow head indicating the link directionality. The arrow is displayed directly over the link line, and points in the direction of &lt;code&gt;source&lt;/code&gt; &amp;gt; &lt;code&gt;target&lt;/code&gt;. A value of &lt;code&gt;0&lt;/code&gt; hides the arrow.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalArrowColor&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for the color of the arrow head.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalArrowRelPos&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the longitudinal position of the arrow head along the link line, expressed as a ratio between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, where &lt;code&gt;0&lt;/code&gt; indicates immediately next to the &lt;code&gt;source&lt;/code&gt; node, &lt;code&gt;1&lt;/code&gt; next to the &lt;code&gt;target&lt;/code&gt; node, and &lt;code&gt;0.5&lt;/code&gt; right in the middle.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalArrowResolution&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the geometric resolution of the arrow head, expressed in how many slice segments to divide the cone base circumference. Higher values yield smoother arrows.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalParticles&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the number of particles (small spheres) to display over the link line. The particles are distributed equi-spaced along the line, travel in the direction &lt;code&gt;source&lt;/code&gt; &amp;gt; &lt;code&gt;target&lt;/code&gt;, and can be used to indicate link directionality.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalParticleSpeed&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the directional particles speed, expressed as the ratio of the link length to travel per frame. Values above &lt;code&gt;0.5&lt;/code&gt; are discouraged.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.01&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalParticleWidth&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;, &lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function, attribute or a numeric constant for the directional particles width. Values are rounded to the nearest decimal for indexing purposes.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalParticleColor&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt; or &lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Link object accessor function or attribute for the directional particles color.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkDirectionalParticleResolution&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the geometric resolution of each directional particle, expressed in how many slice segments to divide the circumference. Higher values yield smoother particles.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;emitParticle&lt;/b&gt;(&lt;i&gt;link&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;An alternative mechanism for generating particles, this method emits a non-cyclical single particle within a specific link. The emitted particle shares the styling (speed, width, color) of the regular particle props. A valid &lt;code&gt;link&lt;/code&gt; object that is included in &lt;code&gt;graphData&lt;/code&gt; should be passed as a single parameter.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Render control&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;pauseAnimation&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Pauses the rendering cycle of the component, effectively freezing the current view and cancelling all user interaction. This method can be used to save performance in circumstances when a static image is sufficient.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;resumeAnimation&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Resumes the rendering cycle of the component, and re-enables the user interaction. This method can be used together with &lt;code&gt;pauseAnimation&lt;/code&gt; for performance optimization purposes.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;cameraPosition&lt;/b&gt;([&lt;i&gt;{x,y,z}&lt;/i&gt;], [&lt;i&gt;lookAt&lt;/i&gt;], [&lt;i&gt;ms&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the camera position, in terms of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt; coordinates. Each of the coordinates is optional, allowing for motion in just some dimensions. The optional second argument can be used to define the direction that the camera should aim at, in terms of an &lt;code&gt;{x,y,z}&lt;/code&gt; point in the 3D space. The 3rd optional argument defines the duration of the transition (in ms) to animate the camera motion. A value of 0 (default) moves the camera immediately to the final position.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;By default the camera will face the center of the graph at a &lt;code&gt;z&lt;/code&gt; distance proportional to the amount of nodes in the system.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;zoomToFit&lt;/b&gt;([&lt;i&gt;ms&lt;/i&gt;], [&lt;i&gt;px&lt;/i&gt;], [&lt;i&gt;nodeFilterFn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Automatically moves the camera so that all of the nodes become visible within its field of view, aiming at the graph center (0,0,0). If no nodes are found no action is taken. It accepts three optional arguments: the first defines the duration of the transition (in ms) to animate the camera motion (default: 0ms). The second argument is the amount of padding (in px) between the edge of the canvas and the outermost node location (default: 10px). The third argument specifies a custom node filter: &lt;code&gt;node =&amp;gt; &amp;lt;boolean&amp;gt;&lt;/code&gt;, which should return a truthy value if the node is to be included. This can be useful for focusing on a portion of the graph.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;(0, 10, node =&amp;gt; true)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;postProcessingComposer&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Access the &lt;a href=&#34;https://threejs.org/docs/#examples/en/postprocessing/EffectComposer&#34;&gt;post-processing composer&lt;/a&gt;. Use this to add post-processing &lt;a href=&#34;https://github.com/mrdoob/three.js/tree/dev/examples/jsm/postprocessing&#34;&gt;rendering effects&lt;/a&gt; to the scene. By default the composer has a single pass (&lt;a href=&#34;https://github.com/mrdoob/three.js/raw/dev/examples/jsm/postprocessing/RenderPass.js&#34;&gt;RenderPass&lt;/a&gt;) that directly renders the scene without any effects.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;lights&lt;/b&gt;([&lt;i&gt;array&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the list of lights to use in the scene. Each item should be an instance of &lt;a href=&#34;https://threejs.org/docs/#api/en/lights/Light&#34;&gt;Light&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://threejs.org/docs/?q=ambient#api/en/lights/AmbientLight&#34;&gt;AmbientLight&lt;/a&gt; + &lt;a href=&#34;https://threejs.org/docs/#api/en/lights/DirectionalLight&#34;&gt;DirectionalLight&lt;/a&gt; (from above)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;scene&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Access the internal ThreeJS &lt;a href=&#34;https://threejs.org/docs/#api/scenes/Scene&#34;&gt;Scene&lt;/a&gt;. Can be used to extend the current scene with additional objects not related to 3d-force-graph.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;camera&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Access the internal ThreeJS &lt;a href=&#34;https://threejs.org/docs/#api/cameras/PerspectiveCamera&#34;&gt;Camera&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;renderer&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Access the internal ThreeJS &lt;a href=&#34;https://threejs.org/docs/#api/renderers/WebGLRenderer&#34;&gt;WebGL renderer&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;controls&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Access the internal ThreeJS controls object.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;refresh&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Redraws all the nodes/links.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Force engine configuration&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;forceEngine&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for which force-simulation engine to use (&lt;a href=&#34;https://github.com/vasturiano/d3-force-3d&#34;&gt;&lt;em&gt;d3&lt;/em&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/anvaka/ngraph.forcelayout&#34;&gt;&lt;em&gt;ngraph&lt;/em&gt;&lt;/a&gt;).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;d3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;numDimensions&lt;/b&gt;([&lt;i&gt;int&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for number of dimensions to run the force simulation on (1, 2 or 3).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;dagMode&lt;/b&gt;([&lt;i&gt;str&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Apply layout constraints based on the graph directionality. Only works correctly for &lt;a href=&#34;https://en.wikipedia.org/wiki/Directed_acyclic_graph&#34;&gt;DAG&lt;/a&gt; graph structures (without cycles). Choice between &lt;code&gt;td&lt;/code&gt; (top-down), &lt;code&gt;bu&lt;/code&gt; (bottom-up), &lt;code&gt;lr&lt;/code&gt; (left-to-right), &lt;code&gt;rl&lt;/code&gt; (right-to-left), &lt;code&gt;zout&lt;/code&gt; (near-to-far), &lt;code&gt;zin&lt;/code&gt; (far-to-near), &lt;code&gt;radialout&lt;/code&gt; (outwards-radially) or &lt;code&gt;radialin&lt;/code&gt; (inwards-radially).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;dagLevelDistance&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;If &lt;code&gt;dagMode&lt;/code&gt; is engaged, this specifies the distance between the different graph depths.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;auto-derived from the number of nodes&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;dagNodeFilter&lt;/b&gt;([&lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Node accessor function to specify nodes to ignore during the DAG layout processing. This accessor method receives a node object and should return a &lt;code&gt;boolean&lt;/code&gt; value indicating whether the node is to be included. Excluded nodes will be left unconstrained and free to move in any direction.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;node =&amp;gt; true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onDagError&lt;/b&gt;([&lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Callback to invoke if a cycle is encountered while processing the data structure for a DAG layout. The loop segment of the graph is included for information, as an array of node ids. By default an exception will be thrown whenever a loop is encountered. You can override this method to handle this case externally and allow the graph to continue the DAG processing. Strict graph directionality is not guaranteed if a loop is encountered and the result is a best effort to establish a hierarchy.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;throws exception&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;d3AlphaMin&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#simulation_alphaMin&#34;&gt;simulation alpha min&lt;/a&gt; parameter, only applicable if using the d3 simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;d3AlphaDecay&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#simulation_alphaDecay&#34;&gt;simulation intensity decay&lt;/a&gt; parameter, only applicable if using the d3 simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;0.0228&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;d3VelocityDecay&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the nodes&#39; &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#simulation_velocityDecay&#34;&gt;velocity decay&lt;/a&gt; that simulates the medium resistance, only applicable if using the d3 simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;0.4&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;d3Force&lt;/b&gt;(&lt;i&gt;str&lt;/i&gt;, [&lt;i&gt;fn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for the internal forces that control the d3 simulation engine. Follows the same interface as &lt;code&gt;d3-force-3d&lt;/code&gt;&#39;s &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#simulation_force&#34;&gt;simulation.force&lt;/a&gt;. Three forces are included by default: &lt;code&gt;&#39;link&#39;&lt;/code&gt; (based on &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#forceLink&#34;&gt;forceLink&lt;/a&gt;), &lt;code&gt;&#39;charge&#39;&lt;/code&gt; (based on &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#forceManyBody&#34;&gt;forceManyBody&lt;/a&gt;) and &lt;code&gt;&#39;center&#39;&lt;/code&gt; (based on &lt;a href=&#34;https://github.com/vasturiano/d3-force-3d#forceCenter&#34;&gt;forceCenter&lt;/a&gt;). Each of these forces can be reconfigured, or new forces can be added to the system. This method is only applicable if using the d3 simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;d3ReheatSimulation&lt;/b&gt;()&lt;/td&gt; &#xA;   &lt;td&gt;Reheats the force simulation engine, by setting the &lt;code&gt;alpha&lt;/code&gt; value to &lt;code&gt;1&lt;/code&gt;. Only applicable if using the d3 simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;ngraphPhysics&lt;/b&gt;([&lt;i&gt;object&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Specify custom physics configuration for ngraph, according to its &lt;a href=&#34;https://github.com/anvaka/ngraph.forcelayout#configuring-physics&#34;&gt;configuration object&lt;/a&gt; syntax. This method is only applicable if using the ngraph simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;em&gt;ngraph default&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;warmupTicks&lt;/b&gt;([&lt;i&gt;int&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for number of layout engine cycles to dry-run at ignition before starting to render.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;cooldownTicks&lt;/b&gt;([&lt;i&gt;int&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for how many build-in frames to render before stopping and freezing the layout engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Infinity&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;cooldownTime&lt;/b&gt;([&lt;i&gt;num&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for how long (ms) to render for before stopping and freezing the layout engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onEngineTick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function invoked at every tick of the simulation engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onEngineStop&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function invoked when the simulation engine stops and the layout is frozen.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Interaction&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onNodeClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for node (left-button) clicks. The node object and the event object are included as arguments &lt;code&gt;onNodeClick(node, event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onNodeRightClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for node right-clicks. The node object and the event object are included as arguments &lt;code&gt;onNodeRightClick(node, event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onNodeHover&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for node mouse over events. The node object (or &lt;code&gt;null&lt;/code&gt; if there&#39;s no node under the mouse line of sight) is included as the first argument, and the previous node object (or null) as second argument: &lt;code&gt;onNodeHover(node, prevNode)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onNodeDrag&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for node drag interactions. This function is invoked repeatedly while dragging a node, every time its position is updated. The node object is included as the first argument, and the change in coordinates since the last iteration of this function are included as the second argument in format {x,y,z}: &lt;code&gt;onNodeDrag(node, translate)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onNodeDragEnd&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for the end of node drag interactions. This function is invoked when the node is released. The node object is included as the first argument, and the entire change in coordinates from initial location are included as the second argument in format {x,y,z}: &lt;code&gt;onNodeDragEnd(node, translate)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onLinkClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for link (left-button) clicks. The link object and the event object are included as arguments &lt;code&gt;onLinkClick(link, event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onLinkRightClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for link right-clicks. The link object and the event object are included as arguments &lt;code&gt;onLinkRightClick(link, event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onLinkHover&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for link mouse over events. The link object (or &lt;code&gt;null&lt;/code&gt; if there&#39;s no link under the mouse line of sight) is included as the first argument, and the previous link object (or null) as second argument: &lt;code&gt;onLinkHover(link, prevLink)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onBackgroundClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for click events on the empty space between the nodes and links. The event object is included as single argument &lt;code&gt;onBackgroundClick(event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;onBackgroundRightClick&lt;/b&gt;(&lt;i&gt;fn&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Callback function for right-click events on the empty space between the nodes and links. The event object is included as single argument &lt;code&gt;onBackgroundRightClick(event)&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;linkHoverPrecision&lt;/b&gt;([&lt;i&gt;int&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Whether to display the link label when gazing the link closely (low value) or from far away (high value).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;enablePointerInteraction&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for whether to enable the mouse tracking events. This activates an internal tracker of the canvas mouse position and enables the functionality of object hover/click and tooltip labels, at the cost of performance. If you&#39;re looking for maximum gain in your graph performance it&#39;s recommended to switch off this property.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;enableNodeDrag&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for whether to enable the user interaction to drag nodes by click-dragging. Only supported on the &lt;code&gt;d3&lt;/code&gt; force engine. If enabled, every time a node is dragged the simulation is re-heated so the other nodes react to the changes. Only applicable if enablePointerInteraction is &lt;code&gt;true&lt;/code&gt; and using the &lt;code&gt;d3&lt;/code&gt; force engine.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;enableNavigationControls&lt;/b&gt;([&lt;i&gt;boolean&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Getter/setter for whether to enable the trackball navigation controls used to move the camera using mouse interactions (rotate/zoom/pan).&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Utility&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;getGraphBbox&lt;/b&gt;([&lt;i&gt;nodeFilterFn&lt;/i&gt;])&lt;/td&gt; &#xA;   &lt;td&gt;Returns the current bounding box of the nodes in the graph, formatted as &lt;code&gt;{ x: [&amp;lt;num&amp;gt;, &amp;lt;num&amp;gt;], y: [&amp;lt;num&amp;gt;, &amp;lt;num&amp;gt;], z: [&amp;lt;num&amp;gt;, &amp;lt;num&amp;gt;] }&lt;/code&gt;. If no nodes are found, returns &lt;code&gt;null&lt;/code&gt;. Accepts an optional argument to define a custom node filter: &lt;code&gt;node =&amp;gt; &amp;lt;boolean&amp;gt;&lt;/code&gt;, which should return a truthy value if the node is to be included. This can be useful to calculate the bounding box of a portion of the graph.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;graph2ScreenCoords&lt;/b&gt;(&lt;i&gt;x&lt;/i&gt;, &lt;i&gt;y&lt;/i&gt;, &lt;i&gt;z&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Utility method to translate node coordinates to the viewport domain. Given a set of &lt;code&gt;x&lt;/code&gt;,&lt;code&gt;y&lt;/code&gt;,&lt;code&gt;z&lt;/code&gt; graph coordinates, returns the current equivalent &lt;code&gt;{x, y}&lt;/code&gt; in viewport coordinates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;screen2GraphCoords&lt;/b&gt;(&lt;i&gt;x&lt;/i&gt;, &lt;i&gt;y&lt;/i&gt;, &lt;i&gt;distance&lt;/i&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Utility method to translate viewport distance coordinates to the graph domain. Given a pair of &lt;code&gt;x&lt;/code&gt;,&lt;code&gt;y&lt;/code&gt; screen coordinates and distance from the camera, returns the current equivalent &lt;code&gt;{x, y, z}&lt;/code&gt; in the domain of graph node coordinates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Input JSON syntax&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;nodes&#34;: [&#xA;        {&#xA;          &#34;id&#34;: &#34;id1&#34;,&#xA;          &#34;name&#34;: &#34;name1&#34;,&#xA;          &#34;val&#34;: 1&#xA;        },&#xA;        {&#xA;          &#34;id&#34;: &#34;id2&#34;,&#xA;          &#34;name&#34;: &#34;name2&#34;,&#xA;          &#34;val&#34;: 10&#xA;        },&#xA;        ...&#xA;    ],&#xA;    &#34;links&#34;: [&#xA;        {&#xA;            &#34;source&#34;: &#34;id1&#34;,&#xA;            &#34;target&#34;: &#34;id2&#34;&#xA;        },&#xA;        ...&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Giving Back&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=L398E7PKP47E8&amp;amp;currency_code=USD&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt; If this project has helped you and you&#39;d like to contribute back, you can always &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=L398E7PKP47E8&amp;amp;currency_code=USD&amp;amp;source=url&#34;&gt;buy me a ☕&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
</feed>