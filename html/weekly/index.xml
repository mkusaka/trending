<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-18T01:38:01Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gaboolic/vercel-reverse-proxy</title>
    <updated>2024-08-18T01:38:01Z</updated>
    <id>tag:github.com,2024-08-18:/gaboolic/vercel-reverse-proxy</id>
    <link href="https://github.com/gaboolic/vercel-reverse-proxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vercel反向代理|OpenAI/ChatGPT 免翻墙代理|github免翻墙代理|github下载加速|google代理|vercel万能代理&lt;/p&gt;&lt;hr&gt;&lt;p&gt;大家使用的时候，注意下如果直接fork可能会被ban，可以自己新建仓库 复制代码过去。&lt;/p&gt; &#xA;&lt;h1&gt;vercel-reverse-proxy&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/README_EN.md&#34;&gt;English README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目是vercel反向代理。完全免费，万能代理，可代理全网一切接口，包括openai、github、google等等。http和https接口、单页面均可代理，在网络环境不好的情况下均可用。（直接浏览器打开代理页面的情况下，由于某些js和css的路径可能会不对造成访问不到，页面样式有点小问题。）&lt;/p&gt; &#xA;&lt;p&gt;vercel现在每月有100GB的免费流量。本人又基于&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;cloudflare&lt;/a&gt;搞了一个反向代理，仓库地址：&lt;a href=&#34;https://github.com/gaboolic/cloudflare-reverse-proxy&#34;&gt;cloudflare-reverse-proxy&lt;/a&gt;供大家参考，也作为一个备份吧。 我自己的vercel项目部署失败，疑似被ban，各位别直接一键部署了，先fork到自己的仓库改改项目名 删掉readme试试吧。实在不行 移步上面cloudflare项目，cloudflare的格局比较大&lt;/p&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/import/project?template=https://github.com/gaboolic/vercel-reverse-proxy&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;1 部署。部署有两种方法，一是直接点击上方按钮一键部署，二是可以先fork本项目，再登录&lt;a href=&#34;https://vercel.com/&#34;&gt;vercel&lt;/a&gt;网站新建。vercel可以通过github一键注册只需要绑定手机号支持cn &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/newproject.png&#34; alt=&#34;新建项目&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;2 绑定自己的域名(不是必须，使用vercel自带的子域名也可以，但是自带的域名vercel.app在国内网络环境不好的情况下不可用) 可以申请&lt;a href=&#34;http://www.dot.tk/&#34;&gt;tk免费域名&lt;/a&gt;或者薅小域名注册商首年免费羊毛 &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/domain.png&#34; alt=&#34;绑定域名&#34;&gt; 绑定域名时按照vercel上的说明配置即可，其实就是在你的域名上配了一个子域名，cname到vercel服务器&lt;/p&gt; &#xA;&lt;p&gt;3 访问 域名/proxy/url 或者/httpproxy/url即可。 映射规则为/proxy/url映射到https接口，/httpproxy/url映射到http接口&lt;/p&gt; &#xA;&lt;h2&gt;示例&lt;/h2&gt; &#xA;&lt;p&gt;例1 访问&lt;a href=&#34;https://%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D.com/proxy/api.openai.com/v1/chat/completions&#34;&gt;https://替换为你自己的域名.com/proxy/api.openai.com/v1/chat/completions&lt;/a&gt; 实际上会替换为&lt;a href=&#34;https://api.openai.com/v1/chat/completions&#34;&gt;https://api.openai.com/v1/chat/completions&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/demo1.png&#34; alt=&#34;demo1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如何在一些常见的开源项目中使用？ 一般开源项目都是引用的openai的库，可以看到里面有一个属性是api_base = os.environ.get(&#34;OPENAI_API_BASE&#34;, &#34;&lt;a href=&#34;https://api.openai.com/v1&#34;&gt;https://api.openai.com/v1&lt;/a&gt;&#34;)&lt;/p&gt; &#xA;&lt;p&gt;所以使用的时候只需要设置一下openai.api_base=&#34;&lt;a href=&#34;https://%E4%BD%A0%E7%9A%84%E5%9F%9F%E5%90%8D/proxy/api.openai.com/v1&#34;&gt;https://你的域名/proxy/api.openai.com/v1&lt;/a&gt;&#34; 就可以了&lt;/p&gt; &#xA;&lt;p&gt;例2 访问&lt;a href=&#34;https://%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D.com/proxy/raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/vercel.json&#34;&gt;https://替换为你自己的域名.com/proxy/raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/vercel.json&lt;/a&gt; 实际上会替换为&lt;a href=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/vercel.json&#34;&gt;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/vercel.json&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/demo2.png&#34; alt=&#34;demo2&#34;&gt; 映射规则为/proxy/url映射到https接口，/httpproxy/url映射到http接口&lt;/p&gt; &#xA;&lt;p&gt;也可用于github下载加速。假如原始链接是&lt;a href=&#34;https://objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx&#34;&gt;https://objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx&lt;/a&gt; 改为&lt;a href=&#34;https://%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D.com/proxy/objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx&#34;&gt;https://替换为你自己的域名.com/proxy/objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx&lt;/a&gt; 就可以加速了。下图是github原始链接和加速后对比。可以看到效果杠杠的，每秒50kb小水管变成了每秒2mb的大水管 &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/github-download.png&#34; alt=&#34;github-download&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;例3 访问&lt;a href=&#34;https://%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D.com/proxy/www.google.com/search?q=vercel-reverse-proxy&#34;&gt;https://替换为你自己的域名.com/proxy/www.google.com/search?q=vercel-reverse-proxy&lt;/a&gt; 实际上会替换为&lt;a href=&#34;https://www.google.com/search?q=vercel-reverse-proxy&#34;&gt;https://www.google.com/search?q=vercel-reverse-proxy&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/gaboolic/vercel-reverse-proxy/main/img/demo3.png&#34; alt=&#34;demo3&#34;&gt; 代理google搜索结果页面&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>leaningtech/webvm</title>
    <updated>2024-08-18T01:38:01Z</updated>
    <id>tag:github.com,2024-08-18:/leaningtech/webvm</id>
    <link href="https://github.com/leaningtech/webvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Virtual Machine for the Web&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebVM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/yWRr2YnD9c&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/988743885121548329?color=%235865F2&amp;amp;logo=discord&amp;amp;logoColor=%23fff&#34; alt=&#34;Discord server&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/leaningtech/webvm/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/leaningtech/webvm&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository hosts the source code for &lt;a href=&#34;https://webvm.io&#34;&gt;https://webvm.io&lt;/a&gt;, a Linux virtual machine that runs in your browser.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leaningtech/webvm/main/assets/welcome_to_WebVM_slim.png&#34; width=&#34;95%&#34;&gt; &#xA;&lt;p&gt;WebVM is a server-less virtual environment running fully client-side in HTML5/WebAssembly. It&#39;s designed to be Linux ABI-compatible. It runs an unmodified Debian distribution including many native development toolchains.&lt;/p&gt; &#xA;&lt;p&gt;WebVM is powered by the CheerpX virtualization engine, and enables safe, sandboxed client-side execution of x86 binaries on any browser. CheerpX includes an x86-to-WebAssembly JIT compiler, a virtual block-based file system, and a Linux syscall emulator.&lt;/p&gt; &#xA;&lt;h1&gt;Enable networking&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click &#34;Connect via Tailscale&#34; in the page header.&lt;/li&gt; &#xA; &lt;li&gt;Log in to Tailscale (create an account if you don&#39;t have one).&lt;/li&gt; &#xA; &lt;li&gt;If you are unfamiliar with Tailscale or would like additional information see &lt;a href=&#34;https://raw.githubusercontent.com/leaningtech/webvm/main/docs/Tailscale.md&#34;&gt;WebVM and Tailscale&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Fork, deploy, customize&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leaningtech/webvm/main/assets/fork_deploy_instructions.gif&#34; alt=&#34;deploy_instructions_gif&#34; width=&#34;90%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork the repository.&lt;/li&gt; &#xA; &lt;li&gt;Enable Github pages in settings. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on &lt;code&gt;Settings&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Go to the &lt;code&gt;Pages&lt;/code&gt; section.&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;code&gt;Github Actions&lt;/code&gt; as the source. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If you are using a custom domain, ensure &lt;code&gt;Enforce HTTPS&lt;/code&gt; is enabled.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the workflow. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Click on &lt;code&gt;Actions&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Accept the prompt. This is required only once to enable Actions for your fork.&lt;/li&gt; &#xA;   &lt;li&gt;Click on the workflow named &lt;code&gt;Deploy&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;code&gt;Run workflow&lt;/code&gt; and then once more &lt;code&gt;Run workflow&lt;/code&gt; in the menu.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;After a few seconds a new &lt;code&gt;Deploy&lt;/code&gt; workflow will start, click on it to see details.&lt;/li&gt; &#xA; &lt;li&gt;After the workflow completes, which takes a few minutes, it will show the URL below the &lt;code&gt;deploy_to_github_pages&lt;/code&gt; job.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leaningtech/webvm/main/assets/result.png&#34; width=&#34;70%&#34;&gt; &#xA;&lt;p&gt;You can now customize &lt;code&gt;dockerfiles/debian_mini&lt;/code&gt; to suits your needs, or make a new Dockerfile from scratch. Use the &lt;code&gt;Path to Dockerfile&lt;/code&gt; workflow parameter to select it.&lt;/p&gt; &#xA;&lt;h1&gt;Local deployment&lt;/h1&gt; &#xA;&lt;p&gt;From a local &lt;code&gt;git clone&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;debian_mini&lt;/code&gt; Ext2 image from &lt;a href=&#34;https://github.com/leaningtech/webvm/releases/&#34;&gt;https://github.com/leaningtech/webvm/releases/&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can also build your own by selecting the &#34;Upload GitHub release&#34; workflow option.&lt;/li&gt; &#xA;   &lt;li&gt;Place the image in the repository root folder.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;index.html&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Uncomment the default values for &lt;code&gt;CMD&lt;/code&gt;, &lt;code&gt;ARGS&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt; and &lt;code&gt;CWD&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Replace &lt;code&gt;DEVICE_TYPE&lt;/code&gt; with &lt;code&gt;&#34;bytes&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Replace &lt;code&gt;IMAGE_URL&lt;/code&gt; with the name of the Ext2 image. For example &lt;code&gt;&#34;debian_mini_20230519_5022088024.ext2&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start a local HTTP server.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy your local WebVM.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Example customization: Python3 REPL&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;Deploy&lt;/code&gt; workflow takes into account the &lt;code&gt;CMD&lt;/code&gt; specified in the Dockerfile. To build a REPL you can simply apply this patch and deploy.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/dockerfiles/debian_mini b/dockerfiles/debian_mini&#xA;index 2878332..1f3103a 100644&#xA;--- a/dockerfiles/debian_mini&#xA;+++ b/dockerfiles/debian_mini&#xA;@@ -15,4 +15,4 @@ WORKDIR /home/user/&#xA; # We set env, as this gets extracted by Webvm. This is optional.&#xA; ENV HOME=&#34;/home/user&#34; TERM=&#34;xterm&#34; USER=&#34;user&#34; SHELL=&#34;/bin/bash&#34; EDITOR=&#34;vim&#34; LANG=&#34;en_US.UTF-8&#34; LC_ALL=&#34;C&#34;&#xA; RUN echo &#39;root:password&#39; | chpasswd&#xA;-CMD [ &#34;/bin/bash&#34; ]&#xA;+CMD [ &#34;/usr/bin/python3&#34; ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Bugs and Issues&lt;/h1&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://github.com/leaningtech/webvm/issues&#34;&gt;Issues&lt;/a&gt; to report any bug. Or come to say hello / share your feedback on &lt;a href=&#34;https://discord.gg/yTNZgySKGa&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;More links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leaningtech.com/webvm-server-less-x86-virtual-machines-in-the-browser/&#34;&gt;WebVM: server-less x86 virtual machines in the browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leaningtech.com/webvm-virtual-machine-with-networking-via-tailscale/&#34;&gt;WebVM: Linux Virtualization in WebAssembly with Full Networking via Tailscale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leaningtech.com/mini-webvm-your-linux-box-from-dockerfile-via-wasm/&#34;&gt;Mini.WebVM: Your own Linux box from Dockerfile, virtualized in the browser via WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Reference GitHub Pages deployment: &lt;a href=&#34;https://mini.webvm.io&#34;&gt;Mini.WebVM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VqrbVycTXmw&#34;&gt;Crafting the Impossible: X86 Virtualization in the Browser with WebAssembly&lt;/a&gt; Talk at JsNation 2022&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thanks to...&lt;/h1&gt; &#xA;&lt;p&gt;This project depends on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://labs.leaningtech.com/cheerpx&#34;&gt;CheerpX&lt;/a&gt;, made by &lt;a href=&#34;https://leaningtech.com&#34;&gt;Leaning Technologies&lt;/a&gt; for x86 virtualization and Linux emulation&lt;/li&gt; &#xA; &lt;li&gt;xterm.js, &lt;a href=&#34;https://xtermjs.org/&#34;&gt;https://xtermjs.org/&lt;/a&gt;, for providing the Web-based terminal emulator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailscale.com/&#34;&gt;Tailscale&lt;/a&gt;, for the networking component&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://savannah.nongnu.org/projects/lwip/&#34;&gt;lwIP&lt;/a&gt;, for the TCP/IP stack, compiled for the Web via &lt;a href=&#34;https://github.com/leaningtech/cheerp-meta&#34;&gt;Cheerp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Versioning&lt;/h1&gt; &#xA;&lt;p&gt;WebVM depends on the CheerpX x86-to-WebAssembly virtualization technology. A link to the current latest build is always available at &lt;a href=&#34;https://cheerpxdemos.leaningtech.com/publicdeploy/LATEST.txt&#34;&gt;https://cheerpxdemos.leaningtech.com/publicdeploy/LATEST.txt&lt;/a&gt;. Builds of CheerpX are immutable and uniquely versioned. An example link would be:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;https://cheerpxdemos.leaningtech.com/publicdeploy/20230517_94/cx.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We strongly encourage users &lt;em&gt;not&lt;/em&gt; to use the latest build. Please directly use a specific build to avoid unexpected regressions. Since builds are immutable, if they work for you now they will keep working forever.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;WebVM is released under the Apache License, Version 2.0.&lt;/p&gt; &#xA;&lt;p&gt;You are welcome to use, modify, and redistribute the contents of this repository.&lt;/p&gt; &#xA;&lt;p&gt;The public CheerpX deployment is provided &lt;strong&gt;as-is&lt;/strong&gt; and is &lt;strong&gt;free to use&lt;/strong&gt; for technological exploration, testing and non-commercial uses. Downloading a CheerpX build for the purpose of hosting it elsewhere is not permitted.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build a product on top of CheerpX/WebVM, please get in touch: &lt;a href=&#34;mailto:sales@leaningtech.com&#34;&gt;sales@leaningtech.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>