<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:56:08Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cphxj123/Dol-BJX-Ex</title>
    <updated>2023-12-10T01:56:08Z</updated>
    <id>tag:github.com,2023-12-10:/cphxj123/Dol-BJX-Ex</id>
    <link href="https://github.com/cphxj123/Dol-BJX-Ex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dol北极星扩展&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dol-BJX-Ex&lt;/h1&gt; &#xA;&lt;p&gt;北极星扩展MOD: 由北极星独立制作的模组，借鉴、吸收、融合、优化了一些其他模组的内容。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;主要内容：&#xA;&#xA;神圣转化大改 动物转化大改&#xA;&#xA;新添事件转化 新添神器系统&#xA;&#xA;额外战斗机制 额外地点事件&#xA;&#xA;其他小修小改 小型优化提升&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;感谢模组作者们的贡献，感谢各位测试反馈者的帮忙，感谢各位大佬的教导。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;吸收模组：&#xA;&#xA;--世扩模组&#xA;&#xA;--雨衣模组&#xA;&#xA;--血量模组&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;星扩均已整合模组加载器，请按照下方说明使用。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;安装模组: &#xA;&#xA;1.下载模组压缩包，不要解压，直接放在任意文件夹中。&#xA;&#xA;2.打开星扩游戏，在主界面左下角有个&#34;Mod管理器&#34;字样。&#xA;&#xA;3.点击Mod管理器，在弹出的界面找到&#34;添加/移除Mod&#34;。&#xA;&#xA;4.点击下方的&#34;选择文件&#34;，选择之前安装的模组压缩包。&#xA;&#xA;5.点击&#34;添加旁加载Mod&#34;，等待看到&#34;Success. 刷新页面后生效&#34;。&#xA;&#xA;6.重复上一步，直到把所有想要安装的mod添加(注意后加载覆盖前加载)。&#xA;&#xA;7.拉倒Mod管理器管理器最上面，点击&#34;重新载入&#34;。&#xA;&#xA;8.进入游戏，开始游玩(有些模组还需要在选项中启用功能)。&#xA;&#xA;卸载模组: &#xA;&#xA;1.打开游戏，打开左下角的&#34;Mod管理器&#34;。&#xA;&#xA;2.找到&#34;添加/移除Mod&#34;下面，&#34;可移除的旁加载Mod列表&#34;。&#xA;&#xA;3.选择需要移除的mod，点击&#34;移除选定的旁加载Mod&#34;。&#xA;&#xA;4.重复上一步，直到把所有不需要的mod移除。&#xA;&#xA;5.拉倒Mod管理器管理器最上面，点击&#34;重新载入&#34;。&#xA;&#xA;6.进入游戏，开始游玩&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;常见问题解答：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;哪个是游戏，下载哪个：dol星扩.html / dol星扩兼容版.html / dol星扩.apk 三选一&#xA;&#xA;怎么下载，从哪下载：在code里就有，点开，点击蓝色的View raw，或者点击。。。里Download下载。&#xA;&#xA;上述三者有什么不同：兼容版运行更慢，但支持一些老旧设备。apk则是dol星扩.html套壳。&#xA;&#xA;下载不下来怎么办，进度不走：检查自己是否打开了VPN梯子，还不行请更改浏览器访问。(有些浏览器不行)&#xA;&#xA;html怎么用，手机能玩吗：电脑直接双击html打开，手机也能玩，用浏览器打开html就可以玩了。&#xA;&#xA;玩游戏，没有图片怎么回事：从仓库里 官方指定模组 里下载星扩原版图标包，然后用ml加载模组压缩包。&#xA;&#xA;我想要美化，有没有：同样从仓库里 官方指定模组 里下载小圆眼BESC美化，然后用ml加载。(记得要先加载原版图片包)&#xA;&#xA;ml是什么，怎么加载模组：ml是modloader的简称，就是进入游戏后左下角的Mod管理器。(使用方法见上方)&#xA;&#xA;我进入游戏看不到ml怎么办：请使用兼容版.html，apk没有兼容版，如果需要，自行把兼容版.html塞进去。(建议使用mt管理器)&#xA;&#xA;我用ml加载星扩模组出错了咋办：星扩不是模组，而是本体。请使用星扩的ml加载其他模组，而不是使用ml加载星扩。&#xA;&#xA;我想报告bug怎么做：仓库上方有个issue，请在issue里提交bug，最好包括截图和存档。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;更新日志：&lt;/p&gt; &#xA;&lt;p&gt;2.1.0--集成模组加载器，修复部分犯罪、图标引起的bug。&lt;/p&gt; &#xA;&lt;p&gt;2.1.3--优化浣熊、走私者等提示信息，优化炎鬼、水鬼等肤色显示，部位图层选择优化，以及bug修复。&lt;/p&gt; &#xA;&lt;p&gt;2.1.4--添加失效衣服自动删除功能，避免装卸衣服模组造成的bug。修复混沌天使不能修复神殿誓言bug，泰勒跳转bug。&lt;/p&gt; &#xA;&lt;p&gt;2.1.5--紧急修复失效衣服自动删除功能，之前会造成衣服全部被删除。&lt;/p&gt; &#xA;&lt;p&gt;2.1.6--继续优化失效衣服删除功能，解锁缝纫机开启无效修复，修复触手平原爆红bug，修复泰勒爆红bug，悉尼祈祷室bug，野兽血量异常bug。&lt;/p&gt; &#xA;&lt;p&gt;2.1.7--加强荒原飞行效果，修复穿触手服爆红，水烟添加意志判定，湖边小屋价格随贝利租金变化，转化饰品效果优化，修复具现蘑菇衣服报错。&lt;/p&gt; &#xA;&lt;p&gt;2.1.8--修复特殊衣服穿衣爆红，实装开局事件转化。&lt;/p&gt; &#xA;&lt;p&gt;2.2.0--优化加强湖边小屋内容，全新直播效果，新增地下室，可购买木马(sm)，以及其他小型调整。&lt;/p&gt; &#xA;&lt;p&gt;2.2.1--增加关闭寸止伤害选项，增加无限战斗续杯选项，修复小屋睡觉爆红，触手服爆红，修复事件转化无成就。&lt;/p&gt; &#xA;&lt;p&gt;2.2.2--悉尼事件更新，纯洁/堕落路线解锁事件可重复，对话文本均有差分，祈祷室可在纯洁状态进入。&lt;/p&gt; &#xA;&lt;p&gt;2.2.3--优化外套槽位，优化捕网效果，实装恐惧铃铛使用效果。&lt;/p&gt; &#xA;&lt;p&gt;2.2.4--修改怀孕效果使宝宝可继承星扩新的转化，修复悉尼再次事件bug。&lt;/p&gt; &#xA;&lt;p&gt;2.2.5--添加神器2个：蘑菇神像，贪婪之杯，修复自慰秀造成后续错误，修复小屋自慰无法用玩具错误，修复开局肤色错误，修复垃圾场地下老鼠战错误。&lt;/p&gt; &#xA;&lt;p&gt;2.2.6--调整动物转化维持饰品，幽灵转化大量更新，修复沼泽走不到头的bug。&lt;/p&gt; &#xA;&lt;p&gt;2.2.7--添加新神器象牙项链，实装冰灵炎灵水灵的灵能效果，修复幽灵灵体化部分问题，修复贪婪之杯获取爆红。&lt;/p&gt; &#xA;&lt;p&gt;2.2.8--炎灵水灵平衡性调整，修复灵体化不能说话，修复灵体化触手战，添加象牙项链购回剧情，修复四季到回程温度不刷新。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Meekdai/Gmeek</title>
    <updated>2023-12-10T01:56:08Z</updated>
    <id>tag:github.com,2023-12-10:/Meekdai/Gmeek</id>
    <link href="https://github.com/Meekdai/Gmeek" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gmeek is a Blog All in Github&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;简体中文&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Meekdai/Gmeek/main/README-en.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Gmeek&lt;/h1&gt; &#xA;&lt;p&gt;一个博客框架，超轻量级个人博客模板。完全基于&lt;code&gt;Github Pages&lt;/code&gt; 、 &lt;code&gt;Github Issues&lt;/code&gt; 和 &lt;code&gt;Github Actions&lt;/code&gt;。不需要本地部署，从搭建到写作，只需要18秒，2步搭建好博客，第3步就是写作。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://meekdai.github.io/&#34;&gt;Demo页面&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://meekdai.github.io/post/Gmeek-geng-xin-ri-zhi.html&#34;&gt;更新日志&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Meekdai/Gmeek/main/img/light.jpg&#34; alt=&#34;light&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;安装&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;点击&lt;a href=&#34;https://github.com/new?template_name=Gmeek-template&amp;amp;template_owner=Meekdai&#34;&gt;创建仓库&lt;/a&gt;，建议仓库名称为&lt;code&gt;XXX.github.io&lt;/code&gt;，其中&lt;code&gt;XXX&lt;/code&gt;为你的github用户名。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在你创建好的仓库的设置&lt;code&gt;Settings&lt;/code&gt;中&lt;code&gt;Pages-&amp;gt;Build and deployment-&amp;gt;Source&lt;/code&gt;下面选择&lt;code&gt;Github Actions&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;打开一篇issue，开始写作，并且添加一个标签，保存issue后会自动创建博客内容，片刻后可通过&lt;a href=&#34;https://XXX.github.io&#34;&gt;https://XXX.github.io&lt;/a&gt; 访问&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;如果有问题可在本仓库提交&lt;a href=&#34;https://github.com/Meekdai/Gmeek/issues&#34;&gt;Issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;特性&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UI界面和Github同源，只引入了Github原生CSS：&lt;a href=&#34;https://primer.style/css&#34;&gt;primer.style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;博客写作在Issues中完成后，自动触发Actions执行部署任务&lt;/li&gt; &#xA; &lt;li&gt;评论系统引入&lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;code&gt;jinja2&lt;/code&gt;对html进行渲染，可通过模板自定义UI主题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;说明&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;请确保每一篇文章有且仅有一个&lt;code&gt;Label&lt;/code&gt;，为了防止他人提交的Issue也被抓取生成文章。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果要导入以前的文章，如何设置发布时间呢？&lt;br&gt; 如需上传旧博客的文章需要修改发布时间，可以在文章最后一行添加如下代码。里面的时间是采用时间戳的形式，可以用如下&lt;a href=&#34;https://tool.lu/timestamp&#34;&gt;网站&lt;/a&gt;转换。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- ##{&#34;timestamp&#34;:1490764800}## --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;自定义单篇文章页面的&lt;code&gt;style&lt;/code&gt;和&lt;code&gt;script&lt;/code&gt;，同样是在文章最后一行添加如下代码，为JSON格式。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- ##{&#34;style&#34;:&#34;&amp;lt;style&amp;gt;#postBody{font-size:20px}&amp;lt;/style&amp;gt;&#34;}## --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- ##{&#34;script&#34;:&#34;&amp;lt;script async src=&#39;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&#39;&amp;gt;&amp;lt;/script&amp;gt;&#34;}## --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;可同时一起添加多种自定义参数：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- ##{&#34;script&#34;:&#34;&amp;lt;script async src=&#39;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&#39;&amp;gt;&amp;lt;/script&amp;gt;&#34;,&#34;style&#34;:&#34;&amp;lt;style&amp;gt;#postBody{font-size:20px}&amp;lt;/style&amp;gt;&#34;,&#34;timestamp&#34;:1490764800}## --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;如果修改过config.json里面的参数后，发现生成文章失败，或其他奇奇怪怪的问题。&lt;br&gt; 建议通过Actions-&amp;gt;build Gmeek-&amp;gt;Run workflow-&amp;gt;里面的按钮全局重新生成一次就行。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;置顶博客文章,只需要&lt;code&gt;Pin issue&lt;/code&gt;即可。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果在评论里面登录后评论报错，可直接按照提示安装&lt;code&gt;utteranc app&lt;/code&gt;即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Error: utterances is not installed on xxx/xxx.github.io. If you own this repo, install the app. Read more about this change in the PR.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;配置文件&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;config.json&lt;/code&gt; 文件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;    &#34;title&#34;:&#34;Meekdai&#34;,&#xA;    &#34;displayTitle&#34;:&#34;eekdai&#34;,&#xA;    &#34;subTitle&#34;:&#34;童话是一种生活态度，仅此而已。&#34;,&#xA;    &#34;homeUrl&#34;:&#34;http://blog.meekdai.com&#34;,&#xA;    &#34;avatarUrl&#34;:&#34;http://meekdai.com/avatar.jpg&#34;,&#xA;    &#34;faviconUrl&#34;:&#34;http://meekdai.com/favicon.ico&#34;,&#xA;    &#34;singlePage&#34;:[],&#xA;    &#34;GMEEK_VERSION&#34;:&#34;last&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;以上是必须的字段，修改为自己的信息即可，下面是可以自定义字段的描述，可以选择加入到&lt;code&gt;config.json&lt;/code&gt;中。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#34;email&#34;:&#34;meekdai@163.com&#34;,&#xA;&#34;startSite&#34;:&#34;02/16/2015&#34;,&#xA;&#34;filingNum&#34;:&#34;浙ICP备20023628号&#34;,&#xA;&#34;onePageListNum&#34;:15,&#xA;&#34;commentLabelColor&#34;:&#34;#006b75&#34;,&#xA;&#34;yearColorList&#34;:[&#34;#bc4c00&#34;, &#34;#0969da&#34;, &#34;#1f883d&#34;, &#34;#A333D0&#34;],&#xA;&#34;i18n&#34;:&#34;CN&#34;,&#xA;&#34;dayTheme&#34;:&#34;light&#34;,&#xA;&#34;nightTheme&#34;:&#34;dark_colorblind&#34;,&#xA;&#34;urlMode&#34;:&#34;pinyin&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;另有不清楚的也可以参考 &lt;a href=&#34;https://github.com/Meekdai/meekdai.github.io/raw/main/config.json&#34;&gt;https://github.com/Meekdai/meekdai.github.io/blob/main/config.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;鸣谢&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/&#34;&gt;jinja2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://primer.style/css&#34;&gt;primer.style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihong0618/gitblog&#34;&gt;gitblog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;请保留页面底部和console界面版权信息，谢谢！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/super_dash</title>
    <updated>2023-12-10T01:56:08Z</updated>
    <id>tag:github.com,2023-12-10:/flutter/super_dash</id>
    <link href="https://github.com/flutter/super_dash" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Super Dash&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flutter/super_dash/main/coverage_badge.svg?sanitize=true&#34; alt=&#34;coverage&#34;&gt; &lt;a href=&#34;https://pub.dev/packages/very_good_analysis&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/style-very_good_analysis-B22C89.svg?sanitize=true&#34; alt=&#34;style: very good analysis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Generated by the &lt;a href=&#34;https://github.com/VeryGoodOpenSource/very_good_cli&#34;&gt;Very Good CLI&lt;/a&gt; 🤖&lt;/p&gt; &#xA;&lt;p&gt;A Very Good Platformer Game generated by Very Good CLI.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Play the game 🎮&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://superdash.flutter.dev/&#34;&gt;Play directly&lt;/a&gt; in your desktop browser, or download the application for &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.verygoodventures.super_dash&#34;&gt;Android&lt;/a&gt; and &lt;a href=&#34;https://apps.apple.com/app/super-dash-flutter-game/id6473050393&#34;&gt;iOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started 🚀&lt;/h2&gt; &#xA;&lt;p&gt;This project contains 3 flavors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;development&lt;/li&gt; &#xA; &lt;li&gt;staging&lt;/li&gt; &#xA; &lt;li&gt;production&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the desired flavor either use the launch configuration in VSCode/Android Studio or use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Development&#xA;$ flutter run --flavor development --target lib/main_development.dart&#xA;&#xA;# Staging&#xA;$ flutter run --flavor staging --target lib/main_staging.dart&#xA;&#xA;# Production&#xA;$ flutter run --flavor production --target lib/main_production.dart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;*Super Dash works on iOS, Android, Web, and Windows.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Running Tests 🧪&lt;/h2&gt; &#xA;&lt;p&gt;To run all unit and widget tests use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flutter test --coverage --test-randomize-ordering-seed random&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view the generated coverage report you can use &lt;a href=&#34;https://github.com/linux-test-project/lcov&#34;&gt;lcov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generate Coverage Report&#xA;$ genhtml coverage/lcov.info -o coverage/&#xA;&#xA;# Open Coverage Report&#xA;$ open coverage/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Working with Translations 🌐&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on &lt;a href=&#34;https://api.flutter.dev/flutter/flutter_localizations/flutter_localizations-library.html&#34;&gt;flutter_localizations&lt;/a&gt; and follows the &lt;a href=&#34;https://flutter.dev/docs/development/accessibility-and-localization/internationalization&#34;&gt;official internationalization guide for Flutter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding Strings&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To add a new localizable string, open the &lt;code&gt;app_en.arb&lt;/code&gt; file at &lt;code&gt;lib/l10n/arb/app_en.arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Then add a new key/value and description&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    },&#xA;    &#34;helloWorld&#34;: &#34;Hello World&#34;,&#xA;    &#34;@helloWorld&#34;: {&#xA;        &#34;description&#34;: &#34;Hello World Text&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Use the new string&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;import &#39;package:dash_run/l10n/l10n.dart&#39;;&#xA;&#xA;@override&#xA;Widget build(BuildContext context) {&#xA;  final l10n = context.l10n;&#xA;  return Text(l10n.helloWorld);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Supported Locales&lt;/h3&gt; &#xA;&lt;p&gt;Update the &lt;code&gt;CFBundleLocalizations&lt;/code&gt; array in the &lt;code&gt;Info.plist&lt;/code&gt; at &lt;code&gt;ios/Runner/Info.plist&lt;/code&gt; to include the new locale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    ...&#xA;&#xA;    &amp;lt;key&amp;gt;CFBundleLocalizations&amp;lt;/key&amp;gt;&#xA;&#x9;&amp;lt;array&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;en&amp;lt;/string&amp;gt;&#xA;&#x9;&#x9;&amp;lt;string&amp;gt;es&amp;lt;/string&amp;gt;&#xA;&#x9;&amp;lt;/array&amp;gt;&#xA;&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Translations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For each supported locale, add a new ARB file in &lt;code&gt;lib/l10n/arb&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;├── l10n&#xA;│   ├── arb&#xA;│   │   ├── app_en.arb&#xA;│   │   └── app_es.arb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add the translated strings to each &lt;code&gt;.arb&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;app_en.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;en&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Counter&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Text shown in the AppBar of the Counter Page&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;app_es.arb&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-arb&#34;&gt;{&#xA;    &#34;@@locale&#34;: &#34;es&#34;,&#xA;    &#34;counterAppBarTitle&#34;: &#34;Contador&#34;,&#xA;    &#34;@counterAppBarTitle&#34;: {&#xA;        &#34;description&#34;: &#34;Texto mostrado en la AppBar de la página del contador&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>