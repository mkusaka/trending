<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-24T01:52:11Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yoheinakajima/instagraph</title>
    <updated>2023-09-24T01:52:11Z</updated>
    <id>tag:github.com,2023-09-24:/yoheinakajima/instagraph</id>
    <link href="https://github.com/yoheinakajima/instagraph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Converts text input or URL into knowledge graph and displays&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Note for non-coders: you can sign up for the waitlist at &lt;a href=&#34;https://instagraph.ai&#34;&gt;instagraph.ai&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;InstaGraph üåê&lt;/h1&gt; &#xA;&lt;p&gt;Hello there, adventurous coder! Welcome to InstaGraph, your go-to application for converting text or URLs into insightful knowledge graphs. Curious about the relationships between entities in a complex topic? Feed the text to InstaGraph and voila! A beautiful knowledge graph is at your fingertips.&lt;/p&gt; &#xA;&lt;p&gt;See example flowcharts generated by InstaGraph &lt;a href=&#34;https://twitter.com/yoheinakajima/status/1701351068817301922&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Powered by OpenAI&#39;s GPT-3.5, this Flask application turns your text into a vividly colored graph, making it easier to visualize relationships between various entities. Enough talking‚Äîlet&#39;s get started!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Author&#39;s TL;DR&lt;/strong&gt;: If you&#39;re just looking for how the knowledge graph is generated, check out the function call parameters taking up half of main.py.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents üìö&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#features-&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#installation-%EF%B8%8F&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#usage-&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#contributing-&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/#license-&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features üåü&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic Text to Graph conversion.&lt;/li&gt; &#xA; &lt;li&gt;Color-coded graph nodes and edges.&lt;/li&gt; &#xA; &lt;li&gt;Responsive design‚Äîuse it on any device.&lt;/li&gt; &#xA; &lt;li&gt;Super-duper user-friendly!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;To get started, you&#39;ll need Python and pip installed.&lt;/p&gt; &#xA;&lt;h4&gt;1. Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yoheinakajima/instagraph.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Navigate to the project directory&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd instagraph&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Install the required Python packages&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Set up your OpenAI API Key&lt;/h4&gt; &#xA;&lt;p&gt;Change .env.example to .env&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;mv .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add your OpenAI API key to .env file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;OPENAI_API_KEY=your-api-key-here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Optional&lt;/h5&gt; &#xA;&lt;p&gt;Add Neo4J username, password and URL in the &lt;code&gt;*.env&lt;/code&gt; file as well.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;NEO4J_USERNAME=&#xA;NEO4J_PASSWORD=&#xA;NEO4J_URL=&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5. Run the Flask app&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; to see your app running.&lt;/p&gt; &#xA;&lt;h2&gt;Run as Container&lt;/h2&gt; &#xA;&lt;h4&gt;1. Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/yoheinakajima/instagraph.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Navigate to the project docker directory&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd instagraph/docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.1 Run in Dev mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose-dev.yml up # Add -d flag at the end to run in background/daemon mode.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.2 Run in Prod - Create the docker image&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the &lt;code&gt;gunicorn==21.2.0&lt;/code&gt; to run the application in production mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f docker-compose.yml up --build -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage üéâ&lt;/h2&gt; &#xA;&lt;h3&gt;Web Interface&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your web browser and navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Type your text or paste a URL in the input box.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Submit&#34; and wait for the magic to happen!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API Endpoints&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET Response Data&lt;/strong&gt;: &lt;code&gt;/get_response_data&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data Params: &lt;code&gt;{&#34;user_input&#34;: &#34;Your text here&#34;}&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: GPT-3.5 processed data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET Graph Data&lt;/strong&gt;: &lt;code&gt;/get_graph_data&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: Graph Data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;GET History Data&lt;/strong&gt;: &lt;code&gt;/get_graph_history&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Method: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Response: Graph Data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing ü§ù&lt;/h2&gt; &#xA;&lt;p&gt;Best way to chat with me is on Twitter at &lt;a href=&#34;https://twitter.com/yoheinakajima&#34;&gt;@yoheinakajima&lt;/a&gt;. I usually only code on the weekends or at night, and in pretty small chunks. I have lots ideas on what I want to add here, but obviously this would move faster with everyone. Not sure I can manage Github well given my time constraints, so please reach out if you want to help me run the Github. Now, here are a few ideas on what I think we should add based on comments...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;Store knowledge graph&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Pull knowledge graph from storage&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;Show history&lt;/li&gt; &#xA; &lt;li&gt;Ability to combine two graphs&lt;/li&gt; &#xA; &lt;li&gt;Ability to combine 2+ graphs from history&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Ability to expand on a graph&lt;/del&gt; (thx &lt;a href=&#34;https://github.com/tomasonjo&#34;&gt;@tomasonjo&lt;/a&gt;! 9/13/23)&lt;/li&gt; &#xA; &lt;li&gt;Ability to expand on graph from specific nodes&lt;/li&gt; &#xA; &lt;li&gt;Fuzzy matching of nodes for combining graphs (vector match + LLM confirmation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are a lot of &#34;build a chart&#34; tools out there, so instead of doing user account and custom charts, it sounds more fun for me to work on building the largest knowledge graph ever...&lt;/p&gt; &#xA;&lt;p&gt;Before creating an Issue please refer the &lt;a href=&#34;https://github.com/yoheinakajima/instagraph/tree/main/.github/ISSUE_TEMPLATE&#34;&gt;ISSUE_TEMPLATE&lt;/a&gt; provided.&lt;/p&gt; &#xA;&lt;h2&gt;License üìù&lt;/h2&gt; &#xA;&lt;p&gt;MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/yoheinakajima/instagraph/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Enjoy using InstaGraph! üéâ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>polarsys/b612</title>
    <updated>2023-09-24T01:52:11Z</updated>
    <id>tag:github.com,2023-09-24:/polarsys/b612</id>
    <link href="https://github.com/polarsys/b612" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Eclipse B612&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PolarSys B612 font family&lt;/h1&gt; &#xA;&lt;p&gt;B612 is an highly legible open source font family designed and tested to be used on aircraft cockpit screens.&lt;/p&gt; &#xA;&lt;p&gt;Main characteristics are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Maximize the distance between the forms of the characters&lt;/li&gt; &#xA; &lt;li&gt;Respect the primitives of the different letters&lt;/li&gt; &#xA; &lt;li&gt;Harmonize the forms and their spacing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The genesis of PolarSys B612&lt;/h2&gt; &#xA;&lt;p&gt;In 2010, Airbus initiated a research collaboration with &lt;a href=&#34;http://www.enac.fr&#34;&gt;ENAC&lt;/a&gt; and &lt;a href=&#34;http://www.univ-tlse3.fr/&#34;&gt;Universit√© de Toulouse III&lt;/a&gt; on a prospective study to define and validate an ‚ÄúAeronautical Font‚Äù: the challenge was to improve the display of information on the cockpit screens, in particular in terms of legibility and comfort of reading, and to optimize the overall homogeneity of the cockpit.&lt;/p&gt; &#xA;&lt;p&gt;2 years later, &lt;a href=&#34;https://www.airbus.com&#34;&gt;Airbus&lt;/a&gt; came to find &lt;a href=&#34;https://intactile.com&#34;&gt;Intactile DESIGN&lt;/a&gt; to work on the design of the eight typographic variants of the font. This one, baptized B612 in reference to the imaginary asteroid of the aviator Saint‚ÄëExup√©ry, benefited from a complete hinting on all the characters.&lt;/p&gt; &#xA;&lt;h2&gt;Releasing a new version of the font&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the version number in the font info of the source files&lt;/li&gt; &#xA; &lt;li&gt;Make a copy of the source files&lt;/li&gt; &#xA; &lt;li&gt;Open the copies in Fontlab&lt;/li&gt; &#xA; &lt;li&gt;Run the merge intersection command on each file&lt;/li&gt; &#xA; &lt;li&gt;Generate the ttf files&lt;/li&gt; &#xA; &lt;li&gt;Run the build script from the scripts folder to fix digital signature&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2012, AIRBUS (airbus-group.com). All rights reserved.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This program and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 and Eclipse Distribution License v1.0 and the SIL Open Font License v1.1 which accompanies this distribution. The Eclipse Public License is available at &lt;a href=&#34;https://www.eclipse.org/legal/epl-v20.html&#34;&gt;https://www.eclipse.org/legal/epl-v20.html&lt;/a&gt; and the Eclipse Distribution License is available at &lt;a href=&#34;https://www.eclipse.org/org/documents/edl-v10.php&#34;&gt;https://www.eclipse.org/org/documents/edl-v10.php&lt;/a&gt;. The SIL Open Font License v1.1 is available at &lt;a href=&#34;https://scripts.sil.org/OFL&#34;&gt;https://scripts.sil.org/OFL&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tulios/json-viewer</title>
    <updated>2023-09-24T01:52:11Z</updated>
    <id>tag:github.com,2023-09-24:/tulios/json-viewer</id>
    <link href="https://github.com/tulios/json-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;It is a Chrome extension for printing JSON and JSONP.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tulios/json-viewer/master/logo.png&#34; alt=&#34;JSONViewer Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;JSON Viewer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tulios/json-viewer/master/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The most beautiful and customizable JSON/JSONP highlighter that your eyes have ever seen. It is a Chrome extension for printing JSON and JSONP.&lt;/p&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This extension might crash with other JSON highlighters/formatters, you may need to disable them&lt;/li&gt; &#xA; &lt;li&gt;To highlight local files and incognito tabs you have to manually enable these options on the extensions page&lt;/li&gt; &#xA; &lt;li&gt;Sometimes when the plugin updates chrome leaves the old background process running and revokes some options, like the access to local files. When this happen just recheck the option that everything will work again&lt;/li&gt; &#xA; &lt;li&gt;Works on local files (if you enable this in chrome://extensions)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Syntax highlighting&lt;/li&gt; &#xA; &lt;li&gt;27 built-in themes&lt;/li&gt; &#xA; &lt;li&gt;Collapsible nodes&lt;/li&gt; &#xA; &lt;li&gt;Clickable URLs (optional)&lt;/li&gt; &#xA; &lt;li&gt;URL does not matter (the content is analysed to determine if its a JSON or not)&lt;/li&gt; &#xA; &lt;li&gt;Inspect your json typing &#34;json&#34; in the console&lt;/li&gt; &#xA; &lt;li&gt;Hot word &lt;code&gt;json-viewer&lt;/code&gt; into omnibox (type &lt;code&gt;json-viewer&lt;/code&gt; + TAB and paste your JSON into omnibox, hit ENTER and it will be highlighted)&lt;/li&gt; &#xA; &lt;li&gt;Toggle button to view the raw/highlighted version&lt;/li&gt; &#xA; &lt;li&gt;Works with numbers bigger than Number.MAX_VALUE&lt;/li&gt; &#xA; &lt;li&gt;Option to show line numbers&lt;/li&gt; &#xA; &lt;li&gt;Option to customize your theme&lt;/li&gt; &#xA; &lt;li&gt;Option to customize the tab size&lt;/li&gt; &#xA; &lt;li&gt;Option to configure a max JSON size to highlight&lt;/li&gt; &#xA; &lt;li&gt;Option to collapse nodes from second level + Button to unfold all collapsed nodes&lt;/li&gt; &#xA; &lt;li&gt;Option to include a header with timestamp + url&lt;/li&gt; &#xA; &lt;li&gt;Option to allow the edition of the loaded JSON&lt;/li&gt; &#xA; &lt;li&gt;Option to sort json by keys&lt;/li&gt; &#xA; &lt;li&gt;Option to disable auto highlight&lt;/li&gt; &#xA; &lt;li&gt;Option for C-style braces and arrays&lt;/li&gt; &#xA; &lt;li&gt;Scratch pad, a new area which you can type/paste JSON and format indefinitely using a button or key shortcut. To access type &lt;code&gt;json-viewer&lt;/code&gt; + &lt;code&gt;TAB&lt;/code&gt; + &lt;code&gt;scratch pad&lt;/code&gt; ENTER&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install through Chrome Web Store&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tulios/json-viewer/master/tryitnow.png&#34; alt=&#34;https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Or compile and load by yourself&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It depends on node (version in &lt;code&gt;package.json&lt;/code&gt; engines).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install --global yarn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yarn run build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open Chrome and go to: chrome://extensions/&lt;/li&gt; &#xA; &lt;li&gt;Enable: &#34;Developer mode&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click: &#34;Load unpacked extension&#34;&lt;/li&gt; &#xA; &lt;li&gt;Select: &#34;build/json_viewer&#34; directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Try it on&lt;/h2&gt; &#xA;&lt;h3&gt;JSON&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.github.com/repos/tulios/json-viewer&#34;&gt;https://api.github.com/repos/tulios/json-viewer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://graph.facebook.com/github&#34;&gt;http://graph.facebook.com/github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.github.com&#34;&gt;https//api.github.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.github.com/gists/public&#34;&gt;https://api.github.com/gists/public&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Large files:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ebrelsford/geojson-examples/master/596acres-02-18-2014.geojson&#34;&gt;https://raw.githubusercontent.com/ebrelsford/geojson-examples/master/596acres-02-18-2014.geojson&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.takealot.com/rest/v-1-4-2/productlines?available=1&amp;amp;cat=10371&amp;amp;instock=1&amp;amp;rows=10&amp;amp;sort=score%20desc&amp;amp;start=0&#34;&gt;https://api.takealot.com/rest/v-1-4-2/productlines?available=1&amp;amp;cat=10371&amp;amp;instock=1&amp;amp;rows=10&amp;amp;sort=score%20desc&amp;amp;start=0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;JSONP&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://freemusicarchive.org/api/get/curators.jsonp?api_key=60BLHNQCAOUFPIBZ&amp;amp;callback=test&#34;&gt;http://freemusicarchive.org/api/get/curators.jsonp?api_key=60BLHNQCAOUFPIBZ&amp;amp;callback=test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tulios/json-viewer/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>