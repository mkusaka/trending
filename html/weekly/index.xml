<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-23T01:43:15Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>windmill-labs/windmill</title>
    <updated>2024-06-23T01:43:15Z</updated>
    <id>tag:github.com,2024-06-23:/windmill-labs/windmill</id>
    <link href="https://github.com/windmill-labs/windmill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source developer platform to turn scripts into workflows and UIs. Fastest workflow engine (5x vs Airflow). Open-source alternative to Airplane and Retool.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.windmill.dev/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-banner.png&#34; alt=&#34;windmill.dev&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Open-source developer infrastructure for internal tools (APIs, background jobs, workflows and UIs). Self-hostable alternative to Airplane, Pipedream, Superblocks and a simplified Temporal with autogenerated UIs and custom UIs to trigger workflows and scripts as internal apps. &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Scripts are turned into sharable UIs automatically, and can be composed together into flows or used into richer apps built with low-code. Supported script languages supported are: Python, TypeScript, Go, Bash, SQL, and GraphQL. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/windmill-labs/windmill/raw/main/LICENSE-AGPL&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-AGPLv3-blue.svg?sanitize=true&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/windmill-labs/windmill/actions/workflows/docker-image.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/windmill-labs/windmill/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker Image CI&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/wmill&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/wmill?color=%2334D058&amp;amp;label=pypi%20package&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://img.shields.io/github/commit-activity/m/windmill-labs/windmill&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/windmill-labs/windmill&#34; alt=&#34;Commit activity&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/V7PM2YHsPB&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/930051556043276338/widget.png&#34; alt=&#34;Discord Shield&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://app.windmill.dev&#34;&gt;Try it&lt;/a&gt; - &lt;a href=&#34;https://www.windmill.dev/docs/intro/&#34;&gt;Docs&lt;/a&gt; - &lt;a href=&#34;https://discord.gg/V7PM2YHsPB&#34;&gt;Discord&lt;/a&gt; - &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;Hub&lt;/a&gt; - &lt;a href=&#34;https://www.windmill.dev/docs/misc/contributing&#34;&gt;Contributor&#39;s guide&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Windmill - Developer platform for APIs, background jobs, workflows and UIs&lt;/h1&gt; &#xA;&lt;p&gt;Windmill is &lt;b&gt;fully open-sourced (AGPLv3)&lt;/b&gt; and Windmill Labs offers dedicated instance and commercial support and licenses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/stacks.svg?sanitize=true&#34; alt=&#34;Windmill Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/windmill-labs/windmill/assets/122811744/0b132cd1-ee67-4505-822f-0c7ee7104252&#34;&gt;https://github.com/windmill-labs/windmill/assets/122811744/0b132cd1-ee67-4505-822f-0c7ee7104252&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#windmill---developer-platform-for-apis-background-jobs-workflows-and-uis&#34;&gt;Windmill - Developer platform for APIs, background jobs, workflows and UIs&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#main-concepts&#34;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#show-me-some-actual-script-code&#34;&gt;Show me some actual script code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#cli&#34;&gt;CLI&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#running-scripts-locally&#34;&gt;Running scripts locally&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#stack&#34;&gt;Stack&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#fastest-self-hostable-workflow-engine&#34;&gt;Fastest Self-Hostable Workflow Engine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#security&#34;&gt;Security&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#sandboxing&#34;&gt;Sandboxing&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#secrets-credentials-and-sensitive-values&#34;&gt;Secrets, credentials and sensitive values&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#how-to-self-host&#34;&gt;How to self-host&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#docker-compose&#34;&gt;Docker compose&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#kubernetes-k8s-and-helm-charts&#34;&gt;Kubernetes (k8s) and Helm charts&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#run-from-binaries&#34;&gt;Run from binaries&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#oauth-sso--smtp&#34;&gt;OAuth, SSO &amp;amp; SMTP&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#commercial-license&#34;&gt;Commercial license&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#run-a-local-dev-setup&#34;&gt;Run a local dev setup&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#only-frontend&#34;&gt;only Frontend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#backend--frontend&#34;&gt;Backend + Frontend&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main Concepts&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Define a minimal and generic script in Python, TypeScript, Go or Bash that solves a specific task. The code can be defined in the &lt;a href=&#34;https://www.windmill.dev/docs/code_editor&#34;&gt;provided Web IDE&lt;/a&gt; or &lt;a href=&#34;https://www.windmill.dev/docs/advanced/cli/sync&#34;&gt;synchronized with your own GitHub repo&lt;/a&gt; (e.g. through &lt;a href=&#34;https://www.windmill.dev/docs/cli_local_dev/vscode-extension&#34;&gt;VS Code&lt;/a&gt; extension):&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-editor.png&#34; alt=&#34;Step 1&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Your scripts parameters are automatically parsed and &lt;a href=&#34;https://www.windmill.dev/docs/core_concepts/auto_generated_uis&#34;&gt;generate a frontend&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-run.png&#34; alt=&#34;Step 2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-result.png&#34; alt=&#34;Step 3&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Make it &lt;a href=&#34;https://www.windmill.dev/docs/flows/flow_editor&#34;&gt;flow&lt;/a&gt;! You can chain your scripts or scripts made by the community shared on &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;WindmillHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-flow.png&#34; alt=&#34;Step 3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build &lt;a href=&#34;https://www.windmill.dev/docs/apps/app_editor&#34;&gt;complex UIs&lt;/a&gt; on top of your scripts and flows.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/windmill-builder.png&#34; alt=&#34;Step 4&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Scripts and flows can also be triggered by a &lt;a href=&#34;https://www.windmill.dev/docs/core_concepts/scheduling&#34;&gt;cron schedule&lt;/a&gt; (e.g. &#39;_/5 _ * * *&#39;) or through &lt;a href=&#34;https://www.windmill.dev/docs/core_concepts/webhooks&#34;&gt;webhooks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can build your entire infra on top of Windmill!&lt;/p&gt; &#xA;&lt;h2&gt;Show me some actual script code&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;//import any dependency  from npm&#xA;import * as wmill from &#34;https://deno.land/x/windmill@v1.136.0/mod.ts&#34;;&#xA;import cowsay from &#34;npm:cowsay@1.5.0&#34;;&#xA;&#xA;// fill the type, or use the +Resource type to get a type-safe reference to a resource&#xA;type Postgresql = {&#xA;  host: string;&#xA;  port: number;&#xA;  user: string;&#xA;  dbname: string;&#xA;  sslmode: string;&#xA;  password: string;&#xA;};&#xA;&#xA;export async function main(&#xA;  a: number,&#xA;  b: &#34;my&#34; | &#34;enum&#34;,&#xA;  c: Postgresql,&#xA;  d = &#34;inferred type string from default arg&#34;,&#xA;  e = { nested: &#34;object&#34; }&#xA;  //f: wmill.Base64&#xA;) {&#xA;  const email = Deno.env.get(&#34;WM_EMAIL&#34;);&#xA;  // variables are permissioned and by path&#xA;  let variable = await wmill.getVariable(&#34;f/company-folder/my_secret&#34;);&#xA;  const lastTimeRun = await wmill.getState();&#xA;  // logs are printed and always inspectable&#xA;  console.log(cowsay.say({ text: &#34;hello &#34; + email + &#34; &#34; + lastTimeRun }));&#xA;  await wmill.setState(Date.now());&#xA;&#xA;  // return is serialized as JSON&#xA;  return { foo: d, variable };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CLI&lt;/h2&gt; &#xA;&lt;p&gt;We have a powerful CLI to interact with the windmill platform and sync your scripts from local files, github repos and to run scripts and flows on the instance from local commands. See &lt;a href=&#34;https://github.com/windmill-labs/windmill/tree/main/cli&#34;&gt;more details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/cli/vhs/output/setup.gif&#34; alt=&#34;CLI Screencast&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running scripts locally&lt;/h3&gt; &#xA;&lt;p&gt;You can run your script locally easily, you simply need to pass the right environment variables for the &lt;code&gt;wmill&lt;/code&gt; client library to fetch resources and variables from your instance if necessary. See more: &lt;a href=&#34;https://www.windmill.dev/docs/advanced/local_development&#34;&gt;https://www.windmill.dev/docs/advanced/local_development&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To develop &amp;amp; test locally scripts &amp;amp; flows, we recommend using the Windmill VS Code extension: &lt;a href=&#34;https://www.windmill.dev/docs/cli_local_dev/vscode-extension&#34;&gt;https://www.windmill.dev/docs/cli_local_dev/vscode-extension&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Stack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Postgres as the database&lt;/li&gt; &#xA; &lt;li&gt;backend in Rust with the following highly-available and horizontally scalable architecture: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;stateless API backend&lt;/li&gt; &#xA;   &lt;li&gt;workers that pull jobs from a queue in Postgres (and later, Kafka or Redis. Upvote &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/#https://github.com/windmill-labs/windmill/issues/173&#34;&gt;#173&lt;/a&gt; if interested )&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;frontend in Svelte&lt;/li&gt; &#xA; &lt;li&gt;scripts executions are sandboxed using google&#39;s &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;javascript runtime is the &lt;a href=&#34;https://denolib.gitbook.io/guide/&#34;&gt;deno_core rust library&lt;/a&gt; (which itself uses the &lt;a href=&#34;https://github.com/denoland/rusty_v8&#34;&gt;rusty_v8&lt;/a&gt; and hence V8 underneath)&lt;/li&gt; &#xA; &lt;li&gt;typescript runtime is deno&lt;/li&gt; &#xA; &lt;li&gt;python runtime is python3&lt;/li&gt; &#xA; &lt;li&gt;golang runtime is 1.19.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fastest Self-Hostable Workflow Engine&lt;/h2&gt; &#xA;&lt;p&gt;We have compared Windmill to other self-hostable workflow engines (Airflow, Prefect &amp;amp; Temporal) and Windmill is the most performant solution for both benchmarks: one flow composed of 40 lightweight tasks &amp;amp; one flow composed of 10 long-running tasks.&lt;/p&gt; &#xA;&lt;p&gt;All methodology &amp;amp; results on our &lt;a href=&#34;https://www.windmill.dev/docs/misc/benchmarks/competitors#airflow-setup&#34;&gt;Benchmarks&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/fastest.png&#34; alt=&#34;Fastest workflow engine&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Sandboxing&lt;/h3&gt; &#xA;&lt;p&gt;Windmill can use &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt;. It is production multi-tenant grade secure. Do not take our word for it, take &lt;a href=&#34;https://fly.io/blog/sandboxing-and-workload-isolation/&#34;&gt;fly.io&#39;s one&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Secrets, credentials and sensitive values&lt;/h3&gt; &#xA;&lt;p&gt;There is one encryption key per workspace to encrypt the credentials and secrets stored in Windmill&#39;s K/V store.&lt;/p&gt; &#xA;&lt;p&gt;In addition, we strongly recommend that you encrypt the whole Postgres database. That is what we do at &lt;a href=&#34;https://app.windmill.dev&#34;&gt;https://app.windmill.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Once a job started, there is no overhead compared to running the same script on the node with its corresponding runner (Deno/Go/Python/Bash). The added latency from a job being pulled from the queue, started, and then having its result sent back to the database is ~50ms. A typical lightweight deno job will take around 100ms total.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/imgs/diagram.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;How to self-host&lt;/h2&gt; &#xA;&lt;p&gt;We only provide docker-compose setup here. For more advanced setups, like compiling from source or using without a postgres super user, see &lt;a href=&#34;https://www.windmill.dev/docs/advanced/self_host&#34;&gt;Self-Host documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;Windmill can be deployed using 3 files: (&lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/Caddyfile&#34;&gt;Caddyfile&lt;/a&gt; and a &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/.env&#34;&gt;.env&lt;/a&gt;) in a single command.&lt;/p&gt; &#xA;&lt;p&gt;Make sure Docker is started, and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/docker-compose.yml -o docker-compose.yml&#xA;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/Caddyfile -o Caddyfile&#xA;curl https://raw.githubusercontent.com/windmill-labs/windmill/main/.env -o .env&#xA;&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;http://localhost&#34;&gt;http://localhost&lt;/a&gt; et voilà :)&lt;/p&gt; &#xA;&lt;p&gt;The default super-admin user is: &lt;a href=&#34;mailto:admin@windmill.dev&#34;&gt;admin@windmill.dev&lt;/a&gt; / changeme.&lt;/p&gt; &#xA;&lt;p&gt;From there, you can follow the setup app and create other users.&lt;/p&gt; &#xA;&lt;p&gt;More details in &lt;a href=&#34;https://www.windmill.dev/docs/advanced/self_host#docker&#34;&gt;Self-Host Documention&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes (k8s) and Helm charts&lt;/h3&gt; &#xA;&lt;p&gt;We publish helm charts at: &lt;a href=&#34;https://github.com/windmill-labs/windmill-helm-charts&#34;&gt;https://github.com/windmill-labs/windmill-helm-charts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run from binaries&lt;/h3&gt; &#xA;&lt;p&gt;Each release includes the corresponding binaries for x86_64. You can simply download the latest &lt;code&gt;windmill&lt;/code&gt; binary using the following set of bash commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;BINARY_NAME=&#39;windmill-amd64&#39; # or windmill-ee-amd64 for the enterprise edition&#xA;LATEST_RELEASE=$(curl -L -s -H &#39;Accept: application/json&#39; https://github.com/windmill-labs/windmill/releases/latest)&#xA;LATEST_VERSION=$(echo $LATEST_RELEASE | sed -e &#39;s/.*&#34;tag_name&#34;:&#34;\([^&#34;]*\)&#34;.*/\1/&#39;)&#xA;ARTIFACT_URL=&#34;https://github.com/windmill-labs/windmill/releases/download/$LATEST_VERSION/$BINARY_NAME&#34;&#xA;wget &#34;$ARTIFACT_URL&#34; -O windmill&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OAuth, SSO &amp;amp; SMTP&lt;/h3&gt; &#xA;&lt;p&gt;Windmill Community Edition allows to configure the OAuth, SSO (including Google Workspace SSO, Microsoft/Azure and Okta) directly from the UI in the superadmin settings. Do note that there is a limit of 10 SSO users on the community edition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.windmill.dev/docs/misc/setup_oauth&#34;&gt;See documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Commercial license&lt;/h3&gt; &#xA;&lt;p&gt;To self-host Windmill, you must respect the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.en.html&#34;&gt;AGPLv3 license&lt;/a&gt; which you do not need to worry about for personal uses. For business uses, you should be fine if you do not re-expose Windmill in any way to your users and are comfortable with AGPLv3.&lt;/p&gt; &#xA;&lt;p&gt;To &lt;a href=&#34;https://www.windmill.dev/docs/misc/white_labelling&#34;&gt;re-expose any Windmill parts to your users&lt;/a&gt; as a feature of your product, or to build a feature on top of Windmill, to comply with AGPLv3 your product must be AGPLv3 or you must get a commercial license. Contact us at &lt;a href=&#34;mailto:ruben@windmill.dev&#34;&gt;ruben@windmill.dev&lt;/a&gt; if you have any doubts.&lt;/p&gt; &#xA;&lt;p&gt;In addition, a commercial license grants you a dedicated engineer to transition your current infrastructure to Windmill, support with tight SLA, and our global cache sync for high-performance/no dependency cache miss of cluster from 10+ nodes to 200+ nodes.&lt;/p&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;p&gt;In Windmill, integrations are referred to as &lt;a href=&#34;https://www.windmill.dev/docs/core_concepts/resources_and_types&#34;&gt;resources and resource types&lt;/a&gt;. Each Resource has a Resource Type that defines the schema that the resource needs to implement.&lt;/p&gt; &#xA;&lt;p&gt;On self-hosted instances, you might want to import all the approved resource types from &lt;a href=&#34;https://hub.windmill.dev&#34;&gt;WindmillHub&lt;/a&gt;. A setup script will prompt you to have it being synced automatically everyday.&lt;/p&gt; &#xA;&lt;h2&gt;Environment Variables&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable name&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Api Server/Worker/All&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Postgres database url.&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WORKER_GROUP&lt;/td&gt; &#xA;   &lt;td&gt;default&lt;/td&gt; &#xA;   &lt;td&gt;The worker group the worker belongs to and get its configuration pulled from&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MODE&lt;/td&gt; &#xA;   &lt;td&gt;standalone&lt;/td&gt; &#xA;   &lt;td&gt;The mode if the binary. Possible values: standalone, worker, server&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;METRICS_ADDR&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;(ee only) The socket addr at which to expose Prometheus metrics at the /metrics path. Set to &#34;true&#34; to expose it on port 8001&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JSON_FMT&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Output the logs in json format instead of logfmt&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BASE_URL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The base url that is exposed publicly to access your instance. Is overriden by the instance settings if any.&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SCRIPT_TOKEN_EXPIRY&lt;/td&gt; &#xA;   &lt;td&gt;900&lt;/td&gt; &#xA;   &lt;td&gt;The default duration period of the ephemeral-token generated at the beginning of a script&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ZOMBIE_JOB_TIMEOUT&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;The timeout after which a job is considered to be zombie if the worker did not send pings about processing the job (every server check for zombie jobs every 30s)&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RESTART_ZOMBIE_JOBS&lt;/td&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;If true then a zombie job is restarted (in-place with the same uuid and some logs), if false the zombie job is failed&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SLEEP_QUEUE&lt;/td&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;The number of ms to sleep in between the last check for new jobs in the DB. It is multiplied by NUM_WORKERS such that in average, for one worker instance, there is one pull every SLEEP_QUEUE ms.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MAX_LOG_SIZE&lt;/td&gt; &#xA;   &lt;td&gt;500000&lt;/td&gt; &#xA;   &lt;td&gt;The maximum number of characters a job can emit (log + result)&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_NUSER&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;If Nsjail is enabled, disable the nsjail&#39;s &lt;code&gt;clone_newuser&lt;/code&gt; setting&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KEEP_JOB_DIR&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Keep the job directory after the job is done. Useful for debugging.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LICENSE_KEY (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;License key checked at startup for the Enterprise Edition of Windmill&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;S3_CACHE_BUCKET (EE only)&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The S3 bucket to sync the cache of the workers to&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SLACK_SIGNING_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The signing secret of your Slack app. See &lt;a href=&#34;https://api.slack.com/authentication/verifying-requests-from-slack&#34;&gt;Slack documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COOKIE_DOMAIN&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The domain of the cookie. If not set, the cookie will be set by the browser based on the full origin&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/bin/deno&lt;/td&gt; &#xA;   &lt;td&gt;The path to the deno binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PYTHON_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/local/bin/python3&lt;/td&gt; &#xA;   &lt;td&gt;The path to the python binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GO_PATH&lt;/td&gt; &#xA;   &lt;td&gt;/usr/bin/go&lt;/td&gt; &#xA;   &lt;td&gt;The path to the go binary.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOPRIVATE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The GOPRIVATE env variable to use private go modules&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOPROXY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The GOPROXY env variable to use&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NETRC&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The netrc content to use a private go registry&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_INDEX_URL&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The index url to pass for pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_EXTRA_INDEX_URL&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The extra index url to pass to pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PIP_TRUSTED_HOST&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The trusted host to pass to pip.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PATH&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The path environment variable, usually inherited&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HOME&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The home directory to use for Go and Bash , usually inherited&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE_CONNECTIONS&lt;/td&gt; &#xA;   &lt;td&gt;50 (Server)/3 (Worker)&lt;/td&gt; &#xA;   &lt;td&gt;The max number of connections in the database connection pool&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SUPERADMIN_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;A token that would let the caller act as a virtual superadmin &lt;a href=&#34;mailto:superadmin@windmill.dev&#34;&gt;superadmin@windmill.dev&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIMEOUT_WAIT_RESULT&lt;/td&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;The number of seconds to wait before timeout on the &#39;run_wait_result&#39; endpoint&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QUEUE_LIMIT_WAIT_RESULT&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;The number of max jobs in the queue before rejecting immediately the request in &#39;run_wait_result&#39; endpoint. Takes precedence on the query arg. If none is specified, there are no limit.&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DENO_AUTH_TOKENS&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Custom DENO_AUTH_TOKENS to pass to worker to allow the use of private modules&lt;/td&gt; &#xA;   &lt;td&gt;Worker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DISABLE_RESPONSE_LOGS&lt;/td&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;Disable response logs&lt;/td&gt; &#xA;   &lt;td&gt;Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Run a local dev setup&lt;/h2&gt; &#xA;&lt;h3&gt;only Frontend&lt;/h3&gt; &#xA;&lt;p&gt;This will use the backend of &lt;a href=&#34;https://app.windmill.dev&#34;&gt;https://app.windmill.dev&lt;/a&gt; but your own frontend with hot-code reloading.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://caddyserver.com&#34;&gt;caddy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;frontend/&lt;/code&gt;: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;npm run generate-backend-client&lt;/code&gt; then &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In another shell &lt;code&gt;sudo caddy run --config CaddyfileRemote&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Et voilà, windmill should be available at &lt;code&gt;http://localhost/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Backend + Frontend&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/windmill-labs/windmill/main/frontend/README_DEV.md&#34;&gt;./frontend/README_DEV.md&lt;/a&gt; file for all running options.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a Postgres Database for Windmill and create an admin role inside your Postgres setup. The easiest way to get a working db is to run &lt;pre&gt;&lt;code&gt;cargo install sqlx-cli&#xA;env DATABASE_URL=&amp;lt;YOUR_DATABASE_URL&amp;gt; sqlx migrate run&#xA;&lt;/code&gt;&lt;/pre&gt; This will also avoid compile time issue with sqlx&#39;s &lt;code&gt;query!&lt;/code&gt; macro&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/google/nsjail&#34;&gt;nsjail&lt;/a&gt; and have it accessible in your PATH&lt;/li&gt; &#xA; &lt;li&gt;Install deno and python3, have the bins at &lt;code&gt;/usr/bin/deno&lt;/code&gt; and &lt;code&gt;/usr/local/bin/python3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://caddyserver.com&#34;&gt;caddy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://lld.llvm.org/&#34;&gt;lld linker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;frontend/&lt;/code&gt;: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;npm run generate-backend-client&lt;/code&gt; then &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You might need to set some extra heap space for the node runtime &lt;code&gt;export NODE_OPTIONS=&#34;--max-old-space-size=4096&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;In another shell &lt;code&gt;npm run build&lt;/code&gt; otherwise the backend will not find the &lt;code&gt;frontend/build&lt;/code&gt; folder and will not compile.&lt;/li&gt; &#xA;   &lt;li&gt;In another shell &lt;code&gt;sudo caddy run --config Caddyfile&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;backend/&lt;/code&gt;: &lt;code&gt;env DATABASE_URL=&amp;lt;DATABASE_URL_TO_YOUR_WINDMILL_DB&amp;gt; RUST_LOG=info cargo run&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Et voilà, windmill should be available at &lt;code&gt;http://localhost/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/windmill-labs/windmill/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=windmill-labs/windmill&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Windmill Labs, Inc 2023&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ComposioHQ/composio</title>
    <updated>2024-06-23T01:43:15Z</updated>
    <id>tag:github.com,2024-06-23:/ComposioHQ/composio</id>
    <link href="https://github.com/ComposioHQ/composio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Composio equips agents with well-crafted tools empowering them to tackle complex tasks&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://composio.dev//#gh-dark-mode-only&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/python/docs/imgs/composio_white_font.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Composio logo&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://composio.dev//#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/python/docs/imgs/composio_black_font.svg?sanitize=true&#34; width=&#34;318px&#34; alt=&#34;Composio Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/composiodev/composio/actions/workflows/common.yml&#34;&gt; &lt;img alt=&#34;Tests&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/composiodev/composio/common.yml?label=Tests&amp;amp;style=plastic&amp;amp;logo=github&amp;amp;color=blue&amp;amp;cacheSeconds=60&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/composio-core/&#34;&gt; &lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/composio_core?label=Latest&amp;amp;style=plastic&amp;amp;logo=pypi&amp;amp;color=blue&amp;amp;cacheSeconds=60&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/composio-core/&#34;&gt; &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/pypi/dm/composio-core?label=Downloads&amp;amp;style=plastic&amp;amp;logo=github&amp;amp;color=blue&amp;amp;cacheSeconds=60&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;i&gt; Production Ready Toolset for AI Agents &lt;/i&gt;&lt;/h2&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Equip your agent with high-quality tools &amp;amp; integrations without worrying about authentication, accuracy, and reliability in a single line of code! &lt;/h4&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://docs.composio.dev&#34; rel=&#34;dofollow&#34;&gt;&lt;strong&gt;Explore the Docs »&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://app.composio.dev&#34;&gt;Try on Dashboard&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://www.composio.dev&#34;&gt;Homepage&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &#xA;  &lt;!-- &lt;a href=&#34;https://docs.composio.dev/guides/examples&#34;&gt;Examples&lt;/a&gt; |&#xA;&lt;a href=&#34;https://docs.composio.dev/chat-with-docs&#34;&gt;Chat with Docs&lt;/a&gt; | --&gt; &lt;a href=&#34;https://docs.composio.dev/sdk&#34;&gt;SDK&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://docs.composio.dev/api-reference/&#34;&gt;APIs&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;b&gt;✨ Socials &amp;gt;&amp;gt;&lt;/b&gt; &lt;a href=&#34;https://discord.gg/XMa3eWKkH8&#34;&gt;Discord&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://www.youtube.com/@Composio&#34;&gt;Youtube&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://twitter.com/composiohq&#34;&gt;Twitter&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://www.linkedin.com/company/composio-dev&#34;&gt; Linkedin &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;b&gt;⛏️ Contribute &amp;gt;&amp;gt;&lt;/b&gt; &lt;a href=&#34;https://github.com/composiodev/composio/issues/new?assignees=&amp;amp;labels=type%3A+bug&amp;amp;template=bug_report.yml&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+&#34;&gt;Report Bugs&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://github.com/composiodev/composio/issues/new?assignees=&amp;amp;labels=feature&amp;amp;template=feature_request.yml&amp;amp;title=%F0%9F%9A%80+Feature%3A+&#34;&gt;Request Feature&lt;/a&gt; &lt;b&gt;|&lt;/b&gt; &lt;a href=&#34;https://github.com/composiodev/composio/raw/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📋 Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-table-of-contents&#34;&gt;📋 Table of contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-why-composio&#34;&gt;🤔 Why Composio?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-key-features&#34;&gt;🔥 Key Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-getting-started-with-python&#34;&gt;🚀 Getting Started with Python&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#1-installation&#34;&gt;1. Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#2-testing-composio-in-action&#34;&gt;2. Testing Composio in Action&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-getting-started-with-javascript&#34;&gt;🚀 Getting Started with Javascript &lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#1-install-the-composio-sdk&#34;&gt;1. Install the Composio SDK&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#2-setup-the-openai-and-composio-tool-set&#34;&gt;2. Setup the OpenAI and Composio Tool Set&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-examples&#34;&gt;💡 Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#competitor-researcher&#34;&gt;Competitor Researcher&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#todolist-to-calendar&#34;&gt;Todolist to Calendar&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#github-to-trello&#34;&gt;Github to Trello&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-read-our-code-of-conduct&#34;&gt;📋 Read Our Code Of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-contributions&#34;&gt;🤗 Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-links&#34;&gt;🔗 Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#%EF%B8%8F-license&#34;&gt;🛡️ License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/#-thanks-to-all-contributors&#34;&gt;💪 Thanks To All Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤔 Why Composio?&lt;/h2&gt; &#xA;&lt;p&gt;We believe AI Based Agents/Workflows are the future. Composio is the best toolset to integrate AI Agents to best Agentic Tools and use them to accomplish tasks.&lt;/p&gt; &#xA;&lt;img alt=&#34;Illustration&#34; src=&#34;https://raw.githubusercontent.com/ComposioHQ/composio/master/docs/imgs/banner.gif&#34; style=&#34;border-radius: 5px&#34;&gt; &#xA;&lt;h2&gt;🔥 Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;100+ Tools&lt;/strong&gt;: Support for a range of different categories&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Softwares&lt;/strong&gt;: Do anything on GitHub, Notion, Linear, Gmail, Slack, Hubspot, Salesforce, &amp;amp; 90 more.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;OS&lt;/strong&gt;: Click anywhere, Type anything, Copy to Clipboard, &amp;amp; more.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Browser&lt;/strong&gt;: Smart Search, Take a screenshot, MultiOn, Download, Upload, &amp;amp; more.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: Google Search, Perplexity Search, Tavily, Exa &amp;amp; more.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;SWE&lt;/strong&gt;: Ngrok, Database, Redis, Vercel, Git, etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;RAG&lt;/strong&gt;: Agentic RAG for any type of data on the fly!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;: Use tools with agent frameworks like &lt;strong&gt;OpenAI, Claude, LlamaIndex, Langchain, CrewAI, Autogen, Gemini, Julep, Lyzr&lt;/strong&gt;, and more in a single line of code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Managed Authorisation&lt;/strong&gt;: Supports six different auth protocols. &lt;em&gt;Access Token, Refresh token, OAuth, API Keys, JWT, and more&lt;/em&gt; abstracted out so you can focus on the building agents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;: Get &lt;em&gt;upto 40% better agentic accuracy&lt;/em&gt; in your tool calls due to better tool designs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Embeddable&lt;/strong&gt;: Whitelabel in the backend of your applications managing Auth &amp;amp; Integrations for all your users &amp;amp; agents and maintain a consistent experience.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pluggable&lt;/strong&gt;: Designed to be extended with additional Tools, Frameworks and Authorisation Protocols very easily.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started with Python&lt;/h2&gt; &#xA;&lt;h3&gt;1. Installation&lt;/h3&gt; &#xA;&lt;p&gt;To get started, type the following command in your Terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install composio-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install the &#39;composio&#39; package along with its openai plugin: &lt;code&gt;pip install composio-openai&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2. Testing Composio in Action&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s use Composio to create an AI Agent that can star a Github Repo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composio add github # Connect your Github - Run this in terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;from openai import OpenAI&#xA;from composio_openai import ComposioToolSet, App, Action&#xA;&#xA;openai_client = OpenAI(&#xA;    api_key=&#34;{{OPENAIKEY}}&#34;&#xA;)&#xA;&#xA;# Initialise the Composio Tool Set&#xA;&#xA;composio_tool_set = ComposioToolSet()&#xA;&#xA;# Get GitHub tools that are pre-configured&#xA;actions = composio_tool_set.get_actions(&#xA;    actions=[Action.GITHUB_ACTIVITY_STAR_REPO_FOR_AUTHENTICATED_USER]&#xA;)&#xA;&#xA;my_task = &#34;Star a repo composiodev/composio on GitHub&#34;&#xA;&#xA;# Setup openai assistant&#xA;assistant_instruction = &#34;You are a super intelligent personal assistant&#34;&#xA;&#xA;assistant = openai_client.beta.assistants.create(&#xA;    name=&#34;Personal Assistant&#34;,&#xA;    instructions=assistant_instruction,&#xA;    model=&#34;gpt-4-turbo&#34;,&#xA;    tools=actions,&#xA;)&#xA;&#xA;# create a thread&#xA;thread = openai_client.beta.threads.create()&#xA;&#xA;message = openai_client.beta.threads.messages.create(&#xA;    thread_id=thread.id,&#xA;    role=&#34;user&#34;,&#xA;    content=my_task&#xA;)&#xA;&#xA;# Execute Agent with integrations&#xA;run = openai_client.beta.threads.runs.create(&#xA;    thread_id=thread.id,&#xA;    assistant_id=assistant.id&#xA;)&#xA;&#xA;&#xA;# Execute Function calls&#xA;response_after_tool_calls = composio_tool_set.wait_and_handle_assistant_tool_calls(&#xA;    client=openai_client,&#xA;    run=run,&#xA;    thread=thread,&#xA;)&#xA;&#xA;print(response_after_tool_calls)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Getting Started with Javascript&lt;/h2&gt; &#xA;&lt;p&gt;To get started with the Composio SDK in Javascript, follow these steps:&lt;/p&gt; &#xA;&lt;h3&gt;1. &lt;strong&gt;Install the Composio SDK&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install composio-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. &lt;strong&gt;Setup the OpenAI and Composio Tool Set&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { OpenAI } from &#34;openai&#34;;&#xA;import { OpenAIToolSet } from &#34;composio-core&#34;;&#xA;&#xA;const toolset = new OpenAIToolSet({&#xA;    apiKey: process.env.COMPOSIO_API_KEY,&#xA;});&#xA;&#xA;async function setupUserConnectionIfNotExists(entityId) {&#xA;    const entity = await toolset.client.getEntity(entityId);&#xA;    const connection = await entity.getConnection(&#39;github&#39;);&#xA;&#xA;    if (!connection) {&#xA;        // If this entity/user hasn&#39;t already connected the account&#xA;        const connection = await entity.initiateConnection(appName);&#xA;        console.log(&#34;Log in via: &#34;, connection.redirectUrl);&#xA;        return connection.waitUntilActive(60);&#xA;    }&#xA;&#xA;    return connection;&#xA;}&#xA;&#xA;async function executeAgent(entityName) {&#xA;    const entity = await toolset.client.getEntity(entityName)&#xA;    await setupUserConnectionIfNotExists(entity.id);&#xA;&#xA;    const tools = await toolset.get_actions({ actions: [&#34;github_issues_create&#34;] }, entity.id);&#xA;    const instruction = &#34;Make an issue with sample title in the repo - himanshu-dixit/custom-repo-breaking&#34;&#xA;&#xA;    const client = new OpenAI({ apiKey: process.env.OPEN_AI_API_KEY })&#xA;    const response = await client.chat.completions.create({&#xA;        model: &#34;gpt-4-turbo&#34;,&#xA;        messages: [{&#xA;            role: &#34;user&#34;,&#xA;            content: instruction,&#xA;        }],&#xA;        tools: tools,&#xA;        tool_choice: &#34;auto&#34;,&#xA;    })&#xA;&#xA;    console.log(response.choices[0].message.tool_calls);&#xA;    await toolset.handle_tool_call(response, entity.id);&#xA;}&#xA;&#xA;executeAgent(&#34;your-entity-name&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. &lt;strong&gt;Run your script&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node your_script.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will set up the Composio SDK and execute an agent that creates a GitHub issue using the provided instructions.&lt;/p&gt; &#xA;&lt;p&gt;For more details, refer to the &lt;a href=&#34;https://docs.composio.dev/&#34;&gt;Composio SDK Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💡 Examples&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.composio.dev/guides/examples/CompetitorResearcher&#34;&gt;Competitor Researcher&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.composio.dev/guides/examples/todo-to-calendar&#34;&gt;Todolist to Calendar&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://docs.composio.dev/guides/examples/github-trello&#34;&gt;Github to Trellox&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#composiohq/composio&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=composiohq/composio&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📋 Read Our Code Of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;As part of our open-source community, we hold ourselves and other contributors to a high standard of communication. As a participant and contributor to this project, you agree to abide by our &lt;a href=&#34;https://github.com/composiodev/composio/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🤗 Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Composio is open-source and we welcome contributions. Please fork the repository, create a new branch for your feature, add your feature or improvement, and send a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Also go through our &lt;a href=&#34;https://github.com/composiodev/composio/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href=&#34;https://github.com/composiodev/composio/raw/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; before you start.&lt;/p&gt; &#xA;&lt;h2&gt;🔗 Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://composio.dev?utm_campaign=github-readme&#34;&gt;Home page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/composiodev/composio/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.composio.dev/?utm_campaign=github-readme&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛡️ License&lt;/h2&gt; &#xA;&lt;p&gt;Composio is licensed under the Elastic License - see the &lt;a href=&#34;https://github.com/composiodev/composio/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;💪 Thanks To All Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://composio.dev/contributors?utm_source=github&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=composiodev/composio&#34; alt=&#34;List of Contributors&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>