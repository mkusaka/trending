<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-25T01:58:13Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>linuxmobile/hyprland-dots</title>
    <updated>2023-06-25T01:58:13Z</updated>
    <id>tag:github.com,2023-06-25:/linuxmobile/hyprland-dots</id>
    <link href="https://github.com/linuxmobile/hyprland-dots" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶Ñ Hyprland Cute Dotfiles&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Window Manager&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/hyprwm/Hyprland&#34;&gt;Hyprland&lt;/a&gt;üé® Tiles Everywhere!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shell&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://www.zsh.org&#34;&gt;Zsh&lt;/a&gt; üêö con &lt;a href=&#34;https://github.com/starship/starship&#34;&gt;starship&lt;/a&gt; Cross Shell Platform!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terminal&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/wez/wezterm&#34;&gt;WezTerm&lt;/a&gt; üíª A powerful term with gpu support!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Panel&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://aur.archlinux.org/packages/waybar-hyprland-git&#34;&gt;Waybar&lt;/a&gt;üçß Patched waybar following hyprland faq!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Notify Daemon&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/dunst-project/dunst&#34;&gt;Dunst&lt;/a&gt; üçÉ Minimalist and functional!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Launcher&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;Rofi&lt;/a&gt; üöÄ Realmente r√°pido y customizable!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Manager&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/ranger/ranger&#34;&gt;Ranger&lt;/a&gt;üîñ custom!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GUI Basic-IDE&lt;/strong&gt; ‚Ä¢ &lt;a href=&#34;https://github.com/linuxmobile/nvchad-v2&#34;&gt;NvChad-V2&lt;/a&gt; Rice IDE!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üå∏ Setup&lt;/h2&gt; &#xA;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/linuxmobile/hyprland-dots/Sakura/assets/r-unixporn.webp&#34;&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;OLD SETUP&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;img align=&#34;center&#34; src=&#34;https://i.imgur.com/QopB79H.png&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/linuxmobile/hyprland-dots/tree/Gruvland&#34;&gt;GRUVxYRLAND&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Install steps (Take care about it. Isn&#39;t a tutorial)&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://aprendiendoaprogramar.netlify.app/configurando-hyprland-y-wayland/&#34;&gt;Read Spanish Detailed Guide Here&lt;/a&gt;&lt;/p&gt; &#xA; &lt;summary&gt;&lt;b&gt;LONG READ DISCLAIMER&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;h2&gt;INSTALLATION (Arch Based Only)&lt;/h2&gt; &#xA; &lt;h5&gt;First of all, this is a cute disclaimer. All of this settings are installed in Artix and in wayland only! I don&#39;t know how it work in other distro.&lt;/h5&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;h3&gt;Hyprland Stuff&lt;/h3&gt;&lt;/summary&gt; &#xA;   &lt;h6&gt;To get started, let&#39;s make sure we have all the necessary prerequisites. In this case, I&#39;m using Paru as the AUR helper, but keep in mind that your system may require a different approach.&lt;/h6&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Installation using paru&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## Hyprland Stuff&#xA;paru -S hyprland-git hyprpicker-git waybar-hyprland-git \&#xA;dunst nwg-look wf-recorder wlogout wlsunset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;h3&gt;Dependencies&lt;/h3&gt;&lt;/summary&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Installation using paru&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## Dependencies&#xA;paru -S colord ffmpegthumbnailer gnome-keyring grimblast-git gtk-engine-murrine \&#xA;imagemagick kvantum pamixer playerctl polkit-kde-agent qt5-quickcontrols        \&#xA;qt5-quickcontrols2 qt5-wayland qt6-wayland sway-bg ttf-font-awesome tumbler     \&#xA;ttf-jetbrains-mono ttf-icomoon-feather xdg-desktop-portal-hyprland-git xdotool  \&#xA;xwaylandvideobridge-cursor-mode-2-git cliphist qt5-imageformats qt5ct&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;h3&gt;Apps &amp;amp; More&lt;/h3&gt;&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## CLI &amp;amp; Tools&#xA;paru -S btop cava neofetch noise-suppression-for-voice   \&#xA;rofi-lbonn-wayland-git rofi-emoji starship zsh viewnior&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## Browser &amp;amp; File Explorer&#xA;paru -S brave-bin file-roller noto-fonts noto-fonts-cjk  \&#xA;noto-fonts-emoji thunar thunar-archive-plugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# VSCode&#xA;paru -S code code-features code-marketplace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Theme Based&#xA;paru -S catppuccin-gtk-theme papirus-icon-theme sddm-git swaylock-effects-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Pipewire &amp;amp; OBS&#xA;paru -S obs-studio-rc ffmpeg-obs cef-minimal-obs-rc-bin   \&#xA;pipewire pipewire-alsa pipewire-audio pipewire-pulse      \&#xA;pipewire-jack wireplumber gst-plugin-pipewire pavucontrol&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA; &lt;/div&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;h3&gt;DOTFILES&lt;/h3&gt;&lt;/summary&gt; &#xA;   &lt;h6&gt;To get started, let&#39;s make sure we have all the necessary prerequisites. In this case, I&#39;m using Paru as the AUR helper, but keep in mind that your system may require a different approach.&lt;/h6&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/linuxmobile/hyprland-dots $HOME/Downloads/hyprland-dots/&#xA;cd $HOME/Downloads/hyprland-dots/&#xA;rsync -avxHAXP --exclude &#39;.git*&#39; .* ~/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt; &#xA; &lt;/div&gt; &#xA; &lt;h2&gt;Credits&lt;/h2&gt; &#xA; &lt;p&gt;&lt;em&gt;Beauty community: &lt;a href=&#34;https://www.reddit.com/r/unixporn&#34;&gt;r/unixporn&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;¬©&lt;/strong&gt; &lt;em&gt;Artist who make Wallpapers, graphics and more&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;¬©&lt;/strong&gt; &lt;em&gt;All of mantainers of this amazing and opensource tools :3&lt;/em&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;¬© &lt;a href=&#34;https://github.com/owl4ce&#34;&gt;Owl4ce&lt;/a&gt; ¬© &lt;a href=&#34;https://github.com/ilham25&#34;&gt;Ilham25&lt;/a&gt; ¬© &lt;a href=&#34;https://github.com/siduck&#34;&gt;Siduck&lt;/a&gt; ¬© &lt;a href=&#34;https://github.com/NvChad&#34;&gt;NvChad&lt;/a&gt; ¬© &lt;a href=&#34;https://github.com/rxyhn&#34;&gt;Rxyhn&lt;/a&gt; ¬© &lt;a href=&#34;https://github.com/AmitGolden&#34;&gt;AmitGold&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>six2dez/reconftw</title>
    <updated>2023-06-25T01:58:13Z</updated>
    <id>tag:github.com,2023-06-25:/six2dez/reconftw</id>
    <link href="https://github.com/six2dez/reconftw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;reconFTW is a tool designed to perform automated recon on a target domain by running the best set of tools to perform scanning and finding out vulnerabilities&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/six2dez/reconftw&#34;&gt;&lt;img src=&#34;https://github.com/six2dez/reconftw/raw/main/images/banner.png&#34; alt=&#34;reconftw&#34;&gt;&lt;/a&gt; &lt;br&gt; reconFTW &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/six2dez/reconftw/releases/tag/v2.7&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/release-v2.7-green&#34;&gt; &lt;/a&gt;  &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/Six2dez1&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/twitter-%40Six2dez1-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/six2dez/reconftw/issues?q=is%3Aissue+is%3Aclosed&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/six2dez/reconftw.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/doc-wiki-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/H5bAaw3YbzzmI5co&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/telegram-@ReconFTW-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/R5DdXVEdTy&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1048623782912340038.svg?logo=discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Summary&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;reconFTW&lt;/strong&gt; automates the entire process of reconnaissance for you. It outperforms the work of subdomain enumeration along with various vulnerability checks and obtaining maximum information about your target.&lt;/p&gt; &#xA;&lt;p&gt;reconFTW uses a lot of techniques (passive, bruteforce, permutations, certificate transparency, source code scraping, analytics, DNS records...) for subdomain enumeration which helps you to get the maximum and the most interesting subdomains so that you be ahead of the competition.&lt;/p&gt; &#xA;&lt;p&gt;It also performs various vulnerability checks like XSS, Open Redirects, SSRF, CRLF, LFI, SQLi, SSL tests, SSTI, DNS zone transfers, and much more. Along with these, it performs OSINT techniques, directory fuzzing, dorking, ports scanning, screenshots, nuclei scan on your target.&lt;/p&gt; &#xA;&lt;p&gt;So, what are you waiting for? Go! Go! Go! &lt;span&gt;üí•&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìî Table of Contents&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#%EF%B8%8F-config-file&#34;&gt;‚öôÔ∏è Config file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#target-options&#34;&gt;TARGET OPTIONS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#mode-options&#34;&gt;MODE OPTIONS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#general-options&#34;&gt;GENERAL OPTIONS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#example-usage&#34;&gt;Example Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#to-perform-a-full-recon-on-single-target&#34;&gt;To perform a full recon on single target&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#to-perform-a-full-recon-on-a-list-of-targets&#34;&gt;To perform a full recon on a list of targets&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-full-recon-with-more-time-intense-tasks-vps-intended-only&#34;&gt;Perform full recon with more time intense tasks &lt;em&gt;(VPS intended only)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-recon-in-a-multi-domain-target&#34;&gt;Perform recon in a multi domain target&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-recon-with-axiom-integration&#34;&gt;Perform recon with axiom integration&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#perform-all-steps-whole-recon--all-attacks-aka-yolo-mode&#34;&gt;Perform all steps (whole recon + all attacks) a.k.a. YOLO mode&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#show-help-section&#34;&gt;Show help section&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#axiom-support-cloud&#34;&gt;Axiom Support &lt;span&gt;‚òÅ&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#sample-video&#34;&gt;Sample video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#fire-features-fire&#34;&gt;&lt;span&gt;üî•&lt;/span&gt; Features &lt;span&gt;üî•&lt;/span&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#osint&#34;&gt;Osint&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#subdomains&#34;&gt;Subdomains&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#hosts&#34;&gt;Hosts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#webs&#34;&gt;Webs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#vulnerability-checks&#34;&gt;Vulnerability checks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#extras&#34;&gt;Extras&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#mindmapworkflow&#34;&gt;Mindmap/Workflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#data-keep&#34;&gt;Data Keep&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#makefile&#34;&gt;Makefile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#main-commands&#34;&gt;Main commands&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#how-to-contribute&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#need-help-information_source&#34;&gt;Need help? &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#support-this-project&#34;&gt;Support this project&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#buymeacoffee&#34;&gt;Buymeacoffee&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#digitalocean-referral-link&#34;&gt;DigitalOcean referral link&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#github-sponsorship&#34;&gt;GitHub sponsorship&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#thanks-pray&#34;&gt;Thanks &lt;span&gt;üôè&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/#disclaimer&#34;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üíø Installation&lt;/h2&gt; &#xA;&lt;h2&gt;a) Using a PC/VPS/VM&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can check out our wiki for the installation guide &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/0.-Installation-Guide&#34;&gt;Installation Guide&lt;/a&gt; &lt;span&gt;üìñ&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Golang&lt;/a&gt; &amp;gt; &lt;strong&gt;1.15.0+&lt;/strong&gt; installed and paths correctly set (&lt;strong&gt;$GOPATH&lt;/strong&gt;, &lt;strong&gt;$GOROOT&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Important: if you are not running reconftw as root, run &lt;code&gt;sudo echo &#34;${USERNAME} ALL=(ALL:ALL) NOPASSWD: ALL&#34; | sudo tee -a /etc/sudoers.d/reconFTW&lt;/code&gt;, to make sure no sudo prompts are required to run the tool and to avoid any permission issues.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/six2dez/reconftw&#xA;cd reconftw/&#xA;./install.sh&#xA;./reconftw.sh -d target.com -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;b) Docker Image üê≥ (3 options)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull the image&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull six2dez/reconftw:main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the container&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm \&#xA;-v &#34;${PWD}/OutputFolder/&#34;:&#39;/reconftw/Recon/&#39; \&#xA;six2dez/reconftw:main -d example.com -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;View results (they&#39;re NOT in the Docker container)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;As the folder you cloned earlier (named &lt;code&gt;reconftw&lt;/code&gt;) is being renamed to &lt;code&gt;OutputFolder&lt;/code&gt;, you&#39;ll have to go to that folder to view results.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you wish to:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Dynamically modify the behaviour &amp;amp; function of the image&lt;/li&gt; &#xA; &lt;li&gt;Build your own container&lt;/li&gt; &#xA; &lt;li&gt;Build an Axiom Controller on top of the official image&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/4.-Docker&#34;&gt;Docker&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;c) Terraform + Ansible&lt;/h2&gt; &#xA;&lt;p&gt;Yes! reconFTW can also be easily deployed with Terraform and Ansible to AWS, if you want to know how to do it, you can check the guide &lt;a href=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/Terraform/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;‚öôÔ∏è Config file&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can find a detailed explanation of the configuration file &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/3.-Configuration-file&#34;&gt;here&lt;/a&gt; &lt;span&gt;üìñ&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Through &lt;code&gt;reconftw.cfg&lt;/code&gt; file the whole execution of the tool can be controlled.&lt;/li&gt; &#xA; &lt;li&gt;Hunters can set various scanning modes, execution preferences, tools, config files, APIs/TOKENS, personalized wordlists and much more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;summary&gt; &lt;span&gt;üëâ&lt;/span&gt; Click here to view default config file &lt;span&gt;üëà&lt;/span&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#################################################################&#xA;#&#x9;&#x9;&#x9;reconFTW config file&#x9;&#x9;&#x9;#&#xA;#################################################################&#xA;&#xA;# General values&#xA;tools=~/Tools   # Path installed tools&#xA;SCRIPTPATH=&#34;$( cd &#34;$(dirname &#34;$0&#34;)&#34; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ; pwd -P )&#34; # Get current script&#39;s path&#xA;profile_shell=&#34;.$(basename $(echo $SHELL))rc&#34; # Get current shell profile&#xA;reconftw_version=$(git rev-parse --abbrev-ref HEAD)-$(git describe --tags) # Fetch current reconftw version&#xA;generate_resolvers=false # Generate custom resolvers with dnsvalidator&#xA;update_resolvers=true # Fetch and rewrite resolvers from trickest/resolvers before DNS resolution&#xA;resolvers_url=&#34;https://raw.githubusercontent.com/trickest/resolvers/main/resolvers.txt&#34;&#xA;resolvers_trusted_url=&#34;https://raw.githubusercontent.com/six2dez/resolvers_reconftw/main/resolvers_trusted.txt&#34;&#xA;fuzzing_remote_list=&#34;https://raw.githubusercontent.com/six2dez/OneListForAll/main/onelistforallmicro.txt&#34; # Used to send to axiom(if used) on fuzzing &#xA;proxy_url=&#34;http://127.0.0.1:8080/&#34; # Proxy url&#xA;install_golang=true # Set it to false if you already have Golang configured and ready&#xA;upgrade_tools=true&#xA;#dir_output=/custom/output/path&#xA;&#xA;# Golang Vars (Comment or change on your own)&#xA;export GOROOT=/usr/local/go&#xA;export GOPATH=$HOME/go&#xA;export PATH=$GOPATH/bin:$GOROOT/bin:$HOME/.local/bin:$PATH&#xA;&#xA;# Tools config files&#xA;#NOTIFY_CONFIG=~/.config/notify/provider-config.yaml # No need to define&#xA;AMASS_CONFIG=~/.config/amass/config.ini&#xA;GITHUB_TOKENS=${tools}/.github_tokens&#xA;GITLAB_TOKENS=${tools}/.gitlab_tokens&#xA;SUBGPT_COOKIE=${tools}/subgpt_cookies.json&#xA;#CUSTOM_CONFIG=custom_config_path.txt # In case you use a custom config file, uncomment this line and set your files path&#xA;&#xA;# APIs/TOKENS - Uncomment the lines you want removing the &#39;#&#39; at the beginning of the line&#xA;#SHODAN_API_KEY=&#34;XXXXXXXXXXXXX&#34;&#xA;#WHOISXML_API=&#34;XXXXXXXXXX&#34;&#xA;#XSS_SERVER=&#34;XXXXXXXXXXXXXXXXX&#34;&#xA;#COLLAB_SERVER=&#34;XXXXXXXXXXXXXXXXX&#34;&#xA;#slack_channel=&#34;XXXXXXXX&#34;&#xA;#slack_auth=&#34;xoXX-XXX-XXX-XXX&#34;&#xA;&#xA;# File descriptors&#xA;DEBUG_STD=&#34;&amp;amp;&amp;gt;/dev/null&#34; # Skips STD output on installer&#xA;DEBUG_ERROR=&#34;2&amp;gt;/dev/null&#34; # Skips ERR output on installer&#xA;&#xA;# Osint&#xA;OSINT=true # Enable or disable the whole OSINT module&#xA;GOOGLE_DORKS=true&#xA;GITHUB_DORKS=true&#xA;GITHUB_REPOS=true&#xA;METADATA=true # Fetch metadata from indexed office documents&#xA;EMAILS=true # Fetch emails from differents sites &#xA;DOMAIN_INFO=true # whois info&#xA;REVERSE_WHOIS=true # amass intel reverse whois info, takes some time&#xA;IP_INFO=true    # Reverse IP search, geolocation and whois&#xA;METAFINDER_LIMIT=20 # Max 250&#xA;&#xA;# Subdomains&#xA;RUNAMASS=true&#xA;RUNSUBFINDER=true&#xA;SUBDOMAINS_GENERAL=true # Enable or disable the whole Subdomains module&#xA;SUBPASSIVE=true # Passive subdomains search&#xA;SUBCRT=true # crtsh search&#xA;SUBNOERROR=true # Check DNS NOERROR response and BF on them&#xA;SUBANALYTICS=true # Google Analytics search&#xA;SUBBRUTE=true # DNS bruteforcing&#xA;SUBSCRAPING=true # Subdomains extraction from web crawling&#xA;SUBPERMUTE=true # DNS permutations&#xA;SUBREGEXPERMUTE=true # Permutations by regex analysis&#xA;SUBGPT=true # Permutations by BingGPT prediction&#xA;PERMUTATIONS_OPTION=gotator # The alternative is &#34;ripgen&#34; (faster, not deeper)&#xA;GOTATOR_FLAGS=&#34; -depth 1 -numbers 3 -mindup -adv -md&#34; # Flags for gotator&#xA;SUBTAKEOVER=false # Check subdomain takeovers, false by default cuz nuclei already check this&#xA;SUB_RECURSIVE_PASSIVE=false # Uses a lot of API keys queries&#xA;DEEP_RECURSIVE_PASSIVE=10 # Number of top subdomains for recursion&#xA;SUB_RECURSIVE_BRUTE=false # Needs big disk space and time to resolve&#xA;ZONETRANSFER=true # Check zone transfer&#xA;S3BUCKETS=true # Check S3 buckets misconfigs&#xA;REVERSE_IP=false # Check reverse IP subdomain search (set True if your target is CIDR/IP)&#xA;TLS_PORTS=&#34;21,22,25,80,110,135,143,261,271,324,443,448,465,563,614,631,636,664,684,695,832,853,854,990,993,989,992,994,995,1129,1131,1184,2083,2087,2089,2096,2221,2252,2376,2381,2478,2479,2482,2484,2679,2762,3077,3078,3183,3191,3220,3269,3306,3410,3424,3471,3496,3509,3529,3539,3535,3660,36611,3713,3747,3766,3864,3885,3995,3896,4031,4036,4062,4064,4081,4083,4116,4335,4336,4536,4590,4740,4843,4849,5443,5007,5061,5321,5349,5671,5783,5868,5986,5989,5990,6209,6251,6443,6513,6514,6619,6697,6771,7202,7443,7673,7674,7677,7775,8243,8443,8991,8989,9089,9295,9318,9443,9444,9614,9802,10161,10162,11751,12013,12109,14143,15002,16995,41230,16993,20003&#34;&#xA;INSCOPE=false # Uses inscope tool to filter the scope, requires .scope file in reconftw folder &#xA;&#xA;# Web detection&#xA;WEBPROBESIMPLE=true # Web probing on 80/443&#xA;WEBPROBEFULL=true # Web probing in a large port list&#xA;WEBSCREENSHOT=true # Webs screenshooting&#xA;VIRTUALHOSTS=false # Check virtualhosts by fuzzing HOST header&#xA;NMAP_WEBPROBE=true # If disabled it will run httpx directly over subdomains list, nmap before web probing is used to increase the speed and avoid repeated requests&#xA;UNCOMMON_PORTS_WEB=&#34;81,300,591,593,832,981,1010,1311,1099,2082,2095,2096,2480,3000,3001,3002,3003,3128,3333,4243,4567,4711,4712,4993,5000,5104,5108,5280,5281,5601,5800,6543,7000,7001,7396,7474,8000,8001,8008,8014,8042,8060,8069,8080,8081,8083,8088,8090,8091,8095,8118,8123,8172,8181,8222,8243,8280,8281,8333,8337,8443,8500,8834,8880,8888,8983,9000,9001,9043,9060,9080,9090,9091,9092,9200,9443,9502,9800,9981,10000,10250,11371,12443,15672,16080,17778,18091,18092,20720,32000,55440,55672&#34;&#xA;&#xA;# Host&#xA;FAVICON=true # Check Favicon domain discovery&#xA;PORTSCANNER=true # Enable or disable the whole Port scanner module &#xA;PORTSCAN_PASSIVE=true # Port scanner with Shodan&#xA;PORTSCAN_ACTIVE=true # Port scanner with nmap&#xA;CDN_IP=true # Check which IPs belongs to CDN&#xA;&#xA;# Web analysis&#xA;WAF_DETECTION=true # Detect WAFs&#xA;NUCLEICHECK=true # Enable or disable nuclei&#xA;NUCLEI_SEVERITY=&#34;info,low,medium,high,critical&#34; # Set templates criticity&#xA;NUCLEI_FLAGS=&#34; -silent -t $HOME/nuclei-templates/ -retries 2&#34; # Additional nuclei extra flags, don&#39;t set the severity here but the exclusions like &#34; -etags openssh&#34;&#xA;NUCLEI_FLAGS_JS=&#34; -silent -tags exposure,token -severity info,low,medium,high,critical&#34; # Additional nuclei extra flags for js secrets&#xA;URL_CHECK=true # Enable or disable URL collection&#xA;URL_CHECK_PASSIVE=true # Search for urls, passive methods from Archive, OTX, CommonCrawl, etc&#xA;URL_CHECK_ACTIVE=true # Search for urls by crawling the websites&#xA;URL_GF=true # Url patterns classification&#xA;URL_EXT=true # Returns a list of files divided by extension&#xA;JSCHECKS=true # JS analysis&#xA;FUZZ=true # Web fuzzing&#xA;CMS_SCANNER=true # CMS scanner&#xA;WORDLIST=true # Wordlist generation&#xA;ROBOTSWORDLIST=true # Check historic disallow entries on waybackMachine&#xA;PASSWORD_DICT=true # Generate password dictionary&#xA;PASSWORD_MIN_LENGTH=5 # Min password lenght&#xA;PASSWORD_MAX_LENGTH=14 # Max password lenght&#xA;&#xA;# Vulns&#xA;VULNS_GENERAL=false # Enable or disable the vulnerability module (very intrusive and slow)&#xA;XSS=true # Check for xss with dalfox&#xA;CORS=true # CORS misconfigs&#xA;TEST_SSL=true # SSL misconfigs&#xA;OPEN_REDIRECT=true # Check open redirects&#xA;SSRF_CHECKS=true # SSRF checks&#xA;CRLF_CHECKS=true # CRLF checks&#xA;LFI=true # LFI by fuzzing&#xA;SSTI=true # SSTI by fuzzing&#xA;SQLI=true # Check SQLI&#xA;SQLMAP=true # Check SQLI with sqlmap&#xA;GHAURI=false # Check SQLI with ghauri&#xA;BROKENLINKS=true # Check for brokenlinks&#xA;SPRAY=true # Performs password spraying&#xA;COMM_INJ=true # Check for command injections with commix&#xA;PROTO_POLLUTION=true # Check for prototype pollution flaws&#xA;SMUGGLING=true # Check for HTTP request smuggling flaws&#xA;WEBCACHE=true # Check for Web Cache issues&#xA;BYPASSER4XX=true # Check for 4XX bypasses&#xA;&#xA;# Extra features&#xA;NOTIFICATION=false # Notification for every function&#xA;SOFT_NOTIFICATION=false # Only for start/end&#xA;DEEP=false # DEEP mode, really slow and don&#39;t care about the number of results&#xA;DEEP_LIMIT=500 # First limit to not run unless you run DEEP&#xA;DEEP_LIMIT2=1500 # Second limit to not run unless you run DEEP&#xA;DIFF=false # Diff function, run every module over an already scanned target, printing only new findings (but save everything)&#xA;REMOVETMP=false # Delete temporary files after execution (to free up space)&#xA;REMOVELOG=false # Delete logs after execution&#xA;PROXY=false # Send to proxy the websites found&#xA;SENDZIPNOTIFY=false # Send to zip the results (over notify)&#xA;PRESERVE=true      # set to true to avoid deleting the .called_fn files on really large scans&#xA;FFUF_FLAGS=&#34; -mc all -fc 404 -ach -sf -of json&#34; # Ffuf flags&#xA;HTTPX_FLAGS=&#34; -follow-redirects -random-agent -status-code -silent -title -web-server -tech-detect -location -content-length&#34; # Httpx flags for simple web probing&#xA;GOWITNESS_FLAGS=&#34; --disable-logging --timeout 5&#34;&#xA;&#xA;# HTTP options&#xA;HEADER=&#34;User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0&#34; # Default header&#xA;&#xA;# Threads&#xA;FFUF_THREADS=40&#xA;HTTPX_THREADS=50&#xA;HTTPX_UNCOMMONPORTS_THREADS=100&#xA;KATANA_THREADS=20&#xA;BRUTESPRAY_THREADS=20&#xA;BRUTESPRAY_CONCURRENCE=10&#xA;GAU_THREADS=10&#xA;DNSTAKE_THREADS=100&#xA;DALFOX_THREADS=200&#xA;PUREDNS_PUBLIC_LIMIT=0 # Set between 2000 - 10000 if your router blows up, 0 means unlimited&#xA;PUREDNS_TRUSTED_LIMIT=400&#xA;PUREDNS_WILDCARDTEST_LIMIT=30&#xA;PUREDNS_WILDCARDBATCH_LIMIT=1500000&#xA;GOWITNESS_THREADS=20&#xA;RESOLVE_DOMAINS_THREADS=150&#xA;PPFUZZ_THREADS=30&#xA;DNSVALIDATOR_THREADS=200&#xA;INTERLACE_THREADS=10&#xA;TLSX_THREADS=1000&#xA;XNLINKFINDER_DEPTH=3&#xA;BYP4XX_THREADS=20&#xA;&#xA;# Rate limits&#xA;HTTPX_RATELIMIT=150&#xA;NUCLEI_RATELIMIT=150&#xA;FFUF_RATELIMIT=0&#xA;&#xA;# Timeouts&#xA;AMASS_INTEL_TIMEOUT=15          # Minutes&#xA;AMASS_ENUM_TIMEOUT=180          # Minutes&#xA;CMSSCAN_TIMEOUT=3600            # Seconds&#xA;FFUF_MAXTIME=900                # Seconds&#xA;HTTPX_TIMEOUT=10                # Seconds&#xA;HTTPX_UNCOMMONPORTS_TIMEOUT=10  # Seconds&#xA;PERMUTATIONS_LIMIT=21474836480  # Bytes, default is 20 GB&#xA;&#xA;# lists&#xA;fuzz_wordlist=${tools}/fuzz_wordlist.txt&#xA;lfi_wordlist=${tools}/lfi_wordlist.txt&#xA;ssti_wordlist=${tools}/ssti_wordlist.txt&#xA;subs_wordlist=${tools}/subdomains.txt&#xA;subs_wordlist_big=${tools}/subdomains_n0kovo_big.txt&#xA;resolvers=${tools}/resolvers.txt&#xA;resolvers_trusted=${tools}/resolvers_trusted.txt&#xA;&#xA;# Axiom Fleet&#xA;# Will not start a new fleet if one exist w/ same name and size (or larger)&#xA;# AXIOM=false Uncomment only to overwrite command line flags&#xA;AXIOM_FLEET_LAUNCH=true # Enable or disable spin up a new fleet, if false it will use the current fleet with the AXIOM_FLEET_NAME prefix&#xA;AXIOM_FLEET_NAME=&#34;reconFTW&#34; # Fleet&#39;s prefix name&#xA;AXIOM_FLEET_COUNT=10 # Fleet&#39;s number&#xA;AXIOM_FLEET_REGIONS=&#34;eu-central&#34; # Fleet&#39;s region&#xA;AXIOM_FLEET_SHUTDOWN=true # # Enable or disable delete the fleet after the execution&#xA;# This is a script on your reconftw host that might prep things your way...&#xA;#AXIOM_POST_START=&#34;~/Tools/axiom_config.sh&#34; # Useful  to send your config files to the fleet&#xA;AXIOM_EXTRA_ARGS=&#34;&#34; # Leave empty if you don&#39;t want to add extra arguments&#xA;#AXIOM_EXTRA_ARGS=&#34; --rm-logs&#34; # Example&#xA;&#xA;# TERM COLORS&#xA;bred=&#39;\033[1;31m&#39;&#xA;bblue=&#39;\033[1;34m&#39;&#xA;bgreen=&#39;\033[1;32m&#39;&#xA;byellow=&#39;\033[1;33m&#39;&#xA;red=&#39;\033[0;31m&#39;&#xA;blue=&#39;\033[0;34m&#39;&#xA;green=&#39;\033[0;32m&#39;&#xA;yellow=&#39;\033[0;33m&#39;&#xA;reset=&#39;\033[0m&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out the wiki section to know which flag performs what all steps/attacks &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/2.-Usage-Guide&#34;&gt;Usage Guide&lt;/a&gt; &lt;span&gt;üìñ&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;TARGET OPTIONS&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Flag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-d&lt;/td&gt; &#xA;   &lt;td&gt;Single Target domain &lt;em&gt;(example.com)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-l&lt;/td&gt; &#xA;   &lt;td&gt;List of targets &lt;em&gt;(one per line)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-m&lt;/td&gt; &#xA;   &lt;td&gt;Multiple domain target &lt;em&gt;(companyName)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-x&lt;/td&gt; &#xA;   &lt;td&gt;Exclude subdomains list &lt;em&gt;(Out Of Scope)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-i&lt;/td&gt; &#xA;   &lt;td&gt;Include subdomains list &lt;em&gt;(In Scope)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;MODE OPTIONS&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Flag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-r&lt;/td&gt; &#xA;   &lt;td&gt;Recon - Full recon process (without attacks like sqli,ssrf,xss,ssti,lfi etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;Subdomains - Perform only subdomain enumeration, web probing, subdomain takeovers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p&lt;/td&gt; &#xA;   &lt;td&gt;Passive - Perform only passive steps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;All - Perform whole recon and all active attacks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-w&lt;/td&gt; &#xA;   &lt;td&gt;Web - Perform only vulnerability checks/attacks on particular target&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;OSINT - Performs an OSINT scan (no subdomain enumeration and attacks)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c&lt;/td&gt; &#xA;   &lt;td&gt;Custom - Launches specific function against target&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-h&lt;/td&gt; &#xA;   &lt;td&gt;Help - Show this help menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;GENERAL OPTIONS&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Flag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--deep&lt;/td&gt; &#xA;   &lt;td&gt;Deep scan (Enable some slow options for deeper scan, &lt;em&gt;vps intended mode&lt;/em&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-f&lt;/td&gt; &#xA;   &lt;td&gt;Custom config file path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-o&lt;/td&gt; &#xA;   &lt;td&gt;Output directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-v&lt;/td&gt; &#xA;   &lt;td&gt;Axiom distributed VPS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-q&lt;/td&gt; &#xA;   &lt;td&gt;Rate limit in requests per second&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: this is applicable when you&#39;ve installed reconFTW on the host (e.g. VM/VPS/cloud) and not in a Docker container.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;To perform a full recon on single target&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -d target.com -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;To perform a full recon on a list of targets&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -l sites.txt -r -o /output/directory/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Perform full recon with more time intense tasks &lt;em&gt;(VPS intended only)&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -d target.com -r --deep -o /output/directory/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Perform recon in a multi domain target&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -m company -l domains_list.txt -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Perform recon with axiom integration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -d target.com -r -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Perform all steps (whole recon + all attacks) a.k.a. YOLO mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -d target.com -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show help section&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./reconftw.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Axiom Support &lt;span&gt;‚òÅ&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/Jzrgkqt/axiom-readme.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Check out the wiki section for more info &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/5.-Axiom-version&#34;&gt;Axiom Support&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As reconFTW actively hits the target with a lot of web traffic, hence there was a need to move to Axiom distributing the work load among various instances leading to reduction of execution time.&lt;/li&gt; &#xA; &lt;li&gt;During the configuration of axiom you need to select &lt;code&gt;reconftw&lt;/code&gt; as provisoner.&lt;/li&gt; &#xA; &lt;li&gt;You can create your own axiom&#39;s fleet before running reconFTW or let reconFTW to create and destroy it automatically just modifying reconftw.cfg file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Sample video&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/images/reconFTW.gif&#34; alt=&#34;Video&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;üî•&lt;/span&gt; Features &lt;span&gt;üî•&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Osint&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Domain information (&lt;a href=&#34;https://github.com/rfc1036/whois&#34;&gt;whois&lt;/a&gt; and &lt;a href=&#34;https://github.com/OWASP/Amass&#34;&gt;amass&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Emails addresses and users (&lt;a href=&#34;https://github.com/Josue87/EmailFinder&#34;&gt;emailfinder&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Metadata finder (&lt;a href=&#34;https://github.com/Josue87/MetaFinder&#34;&gt;MetaFinder&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google Dorks (&lt;a href=&#34;https://github.com/six2dez/dorks_hunter&#34;&gt;dorks_hunter&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Github Dorks (&lt;a href=&#34;https://github.com/damit5/gitdorks_go&#34;&gt;gitdorks_go&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;GitHub org analysis (&lt;a href=&#34;https://github.com/trickest/enumerepo&#34;&gt;enumerepo&lt;/a&gt;, &lt;a href=&#34;https://github.com/trufflesecurity/trufflehog&#34;&gt;trufflehog&lt;/a&gt; and &lt;a href=&#34;https://github.com/gitleaks/gitleaks&#34;&gt;gitleaks&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Subdomains&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Passive (&lt;a href=&#34;https://github.com/OWASP/Amass&#34;&gt;amass&lt;/a&gt;, &lt;a href=&#34;https://github.com/projectdiscovery/subfinder&#34;&gt;subfinder&lt;/a&gt; and &lt;a href=&#34;https://github.com/gwen001/github-subdomains&#34;&gt;github-subdomains&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Certificate transparency (&lt;a href=&#34;https://github.com/cemulus/crt&#34;&gt;crt&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;NOERROR subdomain discovery (&lt;a href=&#34;https://github.com/projectdiscovery/dnsx&#34;&gt;dnsx&lt;/a&gt;, more info &lt;a href=&#34;https://www.securesystems.de/blog/enhancing-subdomain-enumeration-ents-and-noerror/&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bruteforce (&lt;a href=&#34;https://github.com/d3mondev/puredns&#34;&gt;puredns&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Permutations (&lt;a href=&#34;https://github.com/Josue87/gotator&#34;&gt;Gotator&lt;/a&gt;, &lt;a href=&#34;https://github.com/resyncgg/ripgen&#34;&gt;ripgen&lt;/a&gt; and &lt;a href=&#34;https://github.com/cramppet/regulator&#34;&gt;regulator&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;JS files &amp;amp; Source Code Scraping (&lt;a href=&#34;https://github.com/projectdiscovery/katana&#34;&gt;katana&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;DNS Records (&lt;a href=&#34;https://github.com/projectdiscovery/dnsx&#34;&gt;dnsx&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Google Analytics ID (&lt;a href=&#34;https://github.com/Josue87/AnalyticsRelationships&#34;&gt;AnalyticsRelationships&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;TLS handshake (&lt;a href=&#34;https://github.com/projectdiscovery/tlsx&#34;&gt;tlsx&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Recursive search (&lt;a href=&#34;https://github.com/trickest/dsieve&#34;&gt;dsieve&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Subdomains takeover (&lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;nuclei&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;DNS takeover (&lt;a href=&#34;https://github.com/pwnesia/dnstake&#34;&gt;dnstake&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;DNS Zone Transfer (&lt;a href=&#34;https://linux.die.net/man/1/dig&#34;&gt;dig&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Cloud checkers (&lt;a href=&#34;https://github.com/sa7mon/S3Scanner&#34;&gt;S3Scanner&lt;/a&gt; and &lt;a href=&#34;https://github.com/initstring/cloud_enum&#34;&gt;cloud_enum&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hosts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IP info (&lt;a href=&#34;https://www.whoisxmlapi.com/&#34;&gt;whoisxmlapi API&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;CDN checker (&lt;a href=&#34;https://github.com/six2dez/ipcdn&#34;&gt;ipcdn&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;WAF checker (&lt;a href=&#34;https://github.com/EnableSecurity/wafw00f&#34;&gt;wafw00f&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Port Scanner (Active with &lt;a href=&#34;https://github.com/nmap/nmap&#34;&gt;nmap&lt;/a&gt; and passive with &lt;a href=&#34;https://github.com/s0md3v/Smap&#34;&gt;smap&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Port services vulnerability checks (&lt;a href=&#34;https://github.com/vulnersCom/nmap-vulners&#34;&gt;vulners&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Password spraying (&lt;a href=&#34;https://github.com/x90skysn3k/brutespray&#34;&gt;brutespray&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Webs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web Prober (&lt;a href=&#34;https://github.com/projectdiscovery/httpx&#34;&gt;httpx&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web screenshoting (&lt;a href=&#34;https://github.com/maaaaz/webscreenshot&#34;&gt;webscreenshot&lt;/a&gt; or &lt;a href=&#34;https://github.com/sensepost/gowitness&#34;&gt;gowitness&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web templates scanner (&lt;a href=&#34;https://github.com/projectdiscovery/nuclei&#34;&gt;nuclei&lt;/a&gt; and &lt;a href=&#34;https://github.com/geeknik/the-nuclei-templates.git&#34;&gt;nuclei geeknik&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;CMS Scanner (&lt;a href=&#34;https://github.com/Tuhinshubhra/CMSeeK&#34;&gt;CMSeeK&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Url extraction (&lt;a href=&#34;https://github.com/lc/gau&#34;&gt;gau&lt;/a&gt;,&lt;a href=&#34;https://github.com/xnl-h4ck3r/waymore&#34;&gt;waymore&lt;/a&gt;, &lt;a href=&#34;https://github.com/projectdiscovery/katana&#34;&gt;katana&lt;/a&gt;, &lt;a href=&#34;https://gist.github.com/six2dez/d1d516b606557526e9a78d7dd49cacd3&#34;&gt;github-endpoints&lt;/a&gt; and &lt;a href=&#34;https://github.com/w9w/JSA&#34;&gt;JSA&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;URL patterns Search and filtering (&lt;a href=&#34;https://github.com/xnl-h4ck3r/urless&#34;&gt;urless&lt;/a&gt;, &lt;a href=&#34;https://github.com/tomnomnom/gf&#34;&gt;gf&lt;/a&gt; and &lt;a href=&#34;https://github.com/1ndianl33t/Gf-Patterns&#34;&gt;gf-patterns&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Favicon Real IP (&lt;a href=&#34;https://github.com/pielco11/fav-up&#34;&gt;fav-up&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Javascript analysis (&lt;a href=&#34;https://github.com/lc/subjs&#34;&gt;subjs&lt;/a&gt;, &lt;a href=&#34;https://github.com/w9w/JSA&#34;&gt;JSA&lt;/a&gt;, &lt;a href=&#34;https://github.com/xnl-h4ck3r/xnLinkFinder&#34;&gt;xnLinkFinder&lt;/a&gt;, &lt;a href=&#34;https://github.com/m4ll0k/BBTz&#34;&gt;getjswords&lt;/a&gt;, &lt;a href=&#34;https://github.com/MrEmpy/Mantra&#34;&gt;Mantra&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fuzzing (&lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;URL sorting by extension&lt;/li&gt; &#xA; &lt;li&gt;Wordlist generation&lt;/li&gt; &#xA; &lt;li&gt;Passwords dictionary creation (&lt;a href=&#34;https://github.com/LandGrey/pydictor&#34;&gt;pydictor&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Vulnerability checks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;XSS (&lt;a href=&#34;https://github.com/hahwul/dalfox&#34;&gt;dalfox&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open redirect (&lt;a href=&#34;https://github.com/r0075h3ll/Oralyzer&#34;&gt;Oralyzer&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;SSRF (headers &lt;a href=&#34;https://github.com/projectdiscovery/interactsh&#34;&gt;interactsh&lt;/a&gt; and param values with &lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;CRLF (&lt;a href=&#34;https://github.com/dwisiswant0/crlfuzz&#34;&gt;crlfuzz&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Cors (&lt;a href=&#34;https://github.com/s0md3v/Corsy&#34;&gt;Corsy&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;LFI Checks (&lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;SQLi Check (&lt;a href=&#34;https://github.com/sqlmapproject/sqlmap&#34;&gt;SQLMap&lt;/a&gt; and &lt;a href=&#34;https://github.com/r0oth3x49/ghauri&#34;&gt;ghauri&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;SSTI (&lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;SSL tests (&lt;a href=&#34;https://github.com/drwetter/testssl.sh&#34;&gt;testssl&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Broken Links Checker (&lt;a href=&#34;https://github.com/projectdiscovery/katana&#34;&gt;katana&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Prototype Pollution (&lt;a href=&#34;https://github.com/dwisiswant0/ppfuzz&#34;&gt;ppfuzz&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web Cache Vulnerabilities (&lt;a href=&#34;https://github.com/Hackmanit/Web-Cache-Vulnerability-Scanner&#34;&gt;Web-Cache-Vulnerability-Scanner&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;4XX Bypasser (&lt;a href=&#34;https://github.com/lobuhi/byp4xx&#34;&gt;byp4xx&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extras&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multithreading (&lt;a href=&#34;https://github.com/codingo/Interlace&#34;&gt;Interlace&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Custom resolvers generated list (&lt;a href=&#34;https://github.com/vortexau/dnsvalidator&#34;&gt;dnsvalidator&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Docker container included and &lt;a href=&#34;https://hub.docker.com/r/six2dez/reconftw&#34;&gt;DockerHub&lt;/a&gt; integration&lt;/li&gt; &#xA; &lt;li&gt;Ansible + Terraform deployment over AWS&lt;/li&gt; &#xA; &lt;li&gt;Allows IP/CIDR as target&lt;/li&gt; &#xA; &lt;li&gt;Resume the scan from last performed step&lt;/li&gt; &#xA; &lt;li&gt;Custom output folder option&lt;/li&gt; &#xA; &lt;li&gt;All in one installer/updater script compatible with most distros&lt;/li&gt; &#xA; &lt;li&gt;Diff support for continuous running (cron mode)&lt;/li&gt; &#xA; &lt;li&gt;Support for targets with multiple domains&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi/ARM support&lt;/li&gt; &#xA; &lt;li&gt;6 modes (recon, passive, subdomains, web, osint and all)&lt;/li&gt; &#xA; &lt;li&gt;Out of Scope Support + optional &lt;a href=&#34;https://github.com/tomnomnom/hacks/tree/master/inscope&#34;&gt;inscope&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Notification system with Slack, Discord and Telegram (&lt;a href=&#34;https://github.com/projectdiscovery/notify&#34;&gt;notify&lt;/a&gt;) and sending zipped results support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mindmap/Workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/six2dez/reconftw/main/images/mindmap_obsidian.png&#34; alt=&#34;Mindmap&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data Keep&lt;/h2&gt; &#xA;&lt;p&gt;Follow these simple steps to end up with a private repository with your &lt;code&gt;API Keys&lt;/code&gt; and &lt;code&gt;/Recon&lt;/code&gt; data.&lt;/p&gt; &#xA;&lt;h3&gt;Makefile&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;Makefile&lt;/code&gt; is provided to quickly bootstrap a private repo. To use it, you&#39;ll need the &lt;a href=&#34;https://cli.github.com/&#34;&gt;Github CLI&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;p&gt;Once done, just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# below line is optional, the default is ~/reconftw-data&#xA;export PRIV_REPO=&#34;$HOME/reconftw-data&#34;&#xA;make bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To sync your private repo with upstream:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make sync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upload juicy recon data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make upload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a private &lt;strong&gt;blank&lt;/strong&gt; repository on &lt;code&gt;Git(Hub|Lab)&lt;/code&gt; (Take into account size limits regarding Recon data upload)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone your project: &lt;code&gt;git clone https://gitlab.com/example/reconftw-data&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get inside the cloned repository: &lt;code&gt;cd reconftw-data&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new branch with an empty commit: &lt;code&gt;git commit --allow-empty -m &#34;Empty commit&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the official repo as a new remote: &lt;code&gt;git remote add upstream https://github.com/six2dez/reconftw&lt;/code&gt; (&lt;code&gt;upstream&lt;/code&gt; is an example)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update upstream&#39;s repo: &lt;code&gt;git fetch upstream&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rebase current branch with the official one: &lt;code&gt;git rebase upstream/main master&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Main commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upload changes to your personal repo: &lt;code&gt;git add . &amp;amp;&amp;amp; git commit -m &#34;Data upload&#34; &amp;amp;&amp;amp; git push origin master&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update tool anytime: &lt;code&gt;git fetch upstream &amp;amp;&amp;amp; git rebase upstream/main master&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this project, you can do it in multiple ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Submitting an &lt;a href=&#34;https://github.com/six2dez/reconftw/issues/new/choose&#34;&gt;issue&lt;/a&gt; because you have found a bug or you have any suggestion or request.&lt;/li&gt; &#xA; &lt;li&gt;Making a Pull Request from &lt;a href=&#34;https://github.com/six2dez/reconftw/tree/dev&#34;&gt;dev&lt;/a&gt; branch because you want to improve the code or add something to the script.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Need help? &lt;span&gt;‚Ñπ&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at the &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki&#34;&gt;wiki&lt;/a&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://github.com/six2dez/reconftw/wiki/7.-FAQs&#34;&gt;FAQ&lt;/a&gt; for commonly asked questions.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://discord.gg/R5DdXVEdTy&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ask for help in the &lt;a href=&#34;https://t.me/joinchat/TO_R8NYFhhbmI5co&#34;&gt;Telegram group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support this project&lt;/h2&gt; &#xA;&lt;h3&gt;Buymeacoffee&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/six2dez&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-green.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;DigitalOcean referral link&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/?refcode=f362a6e193a1&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge&#34;&gt;&lt;img src=&#34;https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg?sanitize=true&#34; alt=&#34;DigitalOcean Referral Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GitHub sponsorship&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/six2dez&#34;&gt;Sponsor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks &lt;span&gt;üôè&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Thank you for lending a helping hand towards the development of the project!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.circl.lu/&#34;&gt;CIRCL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://networksdb.io/&#34;&gt;NetworksDB&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://ipinfo.io/&#34;&gt;ipinfo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hackertarget.com/&#34;&gt;hackertarget&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://censys.io/&#34;&gt;Censys&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://fofa.info/&#34;&gt;Fofa&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://intelx.io/&#34;&gt;intelx&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.whoxy.com/&#34;&gt;Whoxy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Usage of this program for attacking targets without consent is illegal. It is the user&#39;s responsibility to obey all applicable laws. The developer assumes no liability and is not responsible for any misuse or damage caused by this program. Please use responsibly.&lt;/p&gt; &#xA;&lt;p&gt;The material contained in this repository is licensed under MIT.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trickest/cve</title>
    <updated>2023-06-25T01:58:13Z</updated>
    <id>tag:github.com,2023-06-25:/trickest/cve</id>
    <link href="https://github.com/trickest/cve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gather and update all available and newest CVEs with their PoC.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;CVE PoC &lt;a href=&#34;https://twitter.com/intent/tweet?text=CVE%20PoC%20-%20Find%20almost%20every%20publicly%20available%20CVE%20Proof-of-Concept%2E%0Aby%20%40trick3st%0Ahttps%3A%2F%2Fgithub%2Ecom%2Ftrickest%2Fcve%0A&amp;amp;hashtags=cve,poc,vulnerability,vulnerabilities,exploit,infosec,cybersecurity&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Tweet--lightgrey?logo=twitter&amp;amp;style=social&#34; alt=&#34;Tweet&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Almost every publicly available CVE PoC.&lt;/h3&gt; &#xA;&lt;h2&gt;Current hottest CVEs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CVE-2022-0001&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trickest/cve/raw/main/2022/CVE-2022-0001.md&#34;&gt;/trickest/cve/blob/main/2022/CVE-2022-0001.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CVE-2022-25297&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trickest/cve/raw/main/2022/CVE-2022-25297.md&#34;&gt;/trickest/cve/blob/main/2022/CVE-2022-25297.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CVE-2022-1388&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trickest/cve/raw/main/2022/CVE-2022-1388.md&#34;&gt;/trickest/cve/blob/main/2022/CVE-2022-1388.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CVE-2022-25451&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/trickest/cve/raw/main/2022/CVE-2022-25451.md&#34;&gt;/trickest/cve/blob/main/2022/CVE-2022-25451.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;To see the complete history go &lt;a href=&#34;https://raw.githubusercontent.com/trickest/cve/main/hot_cves.csv&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trickest-access.paperform.co/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/cve/main/banner.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://trickest.com&#34;&gt;Trickest&lt;/a&gt; Workflow Architecture&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/cve/main/workflow.png&#34; alt=&#34;Trickest Workflow - PoC&#34; title=&#34;Trickest Workflow - PoC&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TB; DZ (Too big; didn&#39;t zoom):&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Collect CVE details from &lt;a href=&#34;https://github.com/CVEProject/cvelist&#34;&gt;cvelist&lt;/a&gt; (Shout out to &lt;a href=&#34;https://github.com/CVEProject&#34;&gt;CVE Project&lt;/a&gt;!)&lt;/li&gt; &#xA; &lt;li&gt;Split CVEs up by year.&lt;/li&gt; &#xA; &lt;li&gt;Find PoCs for each CVE using 2 techniques: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;References&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Gather each CVE&#39;s &lt;code&gt;References&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Check if any of them points to a PoC using &lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt; and a list of keywords&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;Regex: &lt;code&gt;(?i)[^a-z0-9]+(poc|proof of concept|proof[-_]of[-_]concept)[^a-z0-9]+&lt;/code&gt;&lt;/p&gt; &lt;p&gt;(Thanks &lt;a href=&#34;https://github.com/joohoi&#34;&gt;@joohoi&lt;/a&gt;!)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;ffuf&lt;/a&gt; is awesome for more purposes than just content discovery.&lt;/p&gt; &lt;p&gt;Get CVE referenced in HackerOne Reports - &lt;a href=&#34;https://github.com/zeroc00I/AllVideoPocsFromHackerOne&#34;&gt;AllVideoPocsFromHackerOne&lt;/a&gt; (Thanks &lt;a href=&#34;https://github.com/zeroc00I&#34;&gt;@zeroc00I&lt;/a&gt;!)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Github&lt;/p&gt; &lt;p&gt;Search GitHub for repositories with &lt;a href=&#34;https://github.com/trickest/find-gh-poc&#34;&gt;find-gh-poc&lt;/a&gt; that mention the CVE ID.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Merge the fresh results into the repository without overwriting the data that was committed manually.&lt;/li&gt; &#xA; &lt;li&gt;Filter false positives using &lt;code&gt;blacklist.txt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Merge all of the found PoCs.&lt;/li&gt; &#xA; &lt;li&gt;Generate GitHub badges for each affected software version using &lt;a href=&#34;https://shields.io&#34;&gt;shields.io&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Write everything into easy-to-read markdown files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;As described, almost everything in this repository is generated automatically. We carefully designed the workflow (and continue to develop it) to ensure the results are as accurate as possible.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse around, find a nice PoC, and test away!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Watch&lt;/code&gt; the repository to receive notifications about new PoCs as soon as they go public.&lt;/li&gt; &#xA; &lt;li&gt;Search for a specific product(s) (and possibly version) to find all public exploits related to it.&lt;/li&gt; &#xA; &lt;li&gt;Monitor the &lt;a href=&#34;https://github.com/trickest/cve/commits/main.atom&#34;&gt;atom feed&lt;/a&gt; for a specific product(s).&lt;/li&gt; &#xA; &lt;li&gt;Create a searchable HTML table using the template and script in &lt;a href=&#34;https://raw.githubusercontent.com/trickest/cve/main/summary_html&#34;&gt;summary_html&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Example: &lt;a href=&#34;https://www.andrewmohawk.com/cve_summary&#34;&gt;https://www.andrewmohawk.com/cve_summary&lt;/a&gt; (Thanks &lt;a href=&#34;https://github.com/AndrewMohawk&#34;&gt;@AndrewMohawk&lt;/a&gt;!)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;All contribtutions/ideas/suggestions are welcome! Create a new ticket via &lt;a href=&#34;https://github.com/trickest/cve/issues&#34;&gt;GitHub issues&lt;/a&gt; or tweet at us &lt;a href=&#34;https://twitter.com/trick3st&#34;&gt;@trick3st&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build your own workflows&lt;/h2&gt; &#xA;&lt;p&gt;We believe in the value of tinkering; cookie-cutter solutions rarely cut it. Sign up for a &lt;a href=&#34;https://trickest.com&#34;&gt;Trickest&lt;/a&gt; demo to customize this workflow to your use case, get access to many more workflows, or build your own workflows from scratch!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://trickest-access.paperform.co/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trickest/cve/main/banner.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>