<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub HTML Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T01:59:41Z</updated>
  <subtitle>Weekly Trending of HTML in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fengdu78/Coursera-ML-AndrewNg-Notes</title>
    <updated>2022-07-10T01:59:41Z</updated>
    <id>tag:github.com,2022-07-10:/fengdu78/Coursera-ML-AndrewNg-Notes</id>
    <link href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;吴恩达老师的机器学习课程个人笔记&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;斯坦福大学2014（吴恩达）机器学习教程中文笔记&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;课程地址：&lt;a href=&#34;https://www.coursera.org/course/ml&#34;&gt;https://www.coursera.org/course/ml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.ai-start.com/ml2014&#34;&gt;&lt;strong&gt;笔记在线阅读&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt;(机器学习)是研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能。它是人工智能的核心，是使计算机具有智能的根本途径，其应用遍及人工智能的各个领域，它主要使用归纳、综合而不是演译。在过去的十年中，机器学习帮助我们自动驾驶汽车，有效的语音识别，有效的网络搜索，并极大地提高了人类基因组的认识。机器学习是当今非常普遍，你可能会使用这一天几十倍而不自知。很多研究者也认为这是最好的人工智能的取得方式。在本课中，您将学习最有效的机器学习技术，并获得实践，让它们为自己的工作。更重要的是，你会不仅得到理论基础的学习，而且获得那些需要快速和强大的应用技术解决问题的实用技术。最后，你会学到一些硅谷利用机器学习和人工智能的最佳实践创新。&lt;/p&gt; &#xA;&lt;p&gt;本课程提供了一个广泛的介绍机器学习、数据挖掘、统计模式识别的课程。主题包括：&lt;/p&gt; &#xA;&lt;p&gt;（一）监督学习（参数/非参数算法，支持向量机，核函数，神经网络）。&lt;/p&gt; &#xA;&lt;p&gt;（二）无监督学习（聚类，降维，推荐系统，深入学习推荐）。&lt;/p&gt; &#xA;&lt;p&gt;（三）在机器学习的最佳实践（偏差/方差理论；在机器学习和人工智能创新过程）。本课程还将使用大量的案例研究，您还将学习如何运用学习算法构建智能机器人（感知，控制），文本的理解（&lt;strong&gt;Web&lt;/strong&gt;搜索，反垃圾邮件），计算机视觉，医疗信息，音频，数据挖掘，和其他领域。&lt;/p&gt; &#xA;&lt;p&gt;本课程需要10周共18节课，相对以前的机器学习视频，这个视频更加清晰，而且每课都有&lt;strong&gt;ppt&lt;/strong&gt;课件，推荐学习。&lt;/p&gt; &#xA;&lt;p&gt;本人2014年下半年开始翻译本课程字幕，并写了课程的中文笔记。笔记被下载了几万次，应该帮助了不少人，也有很多人一直在帮助我，现在我把笔记的&lt;strong&gt;word&lt;/strong&gt;原稿和&lt;strong&gt;markdown&lt;/strong&gt;原稿分享给大家。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;markdown&lt;/strong&gt;的笔记和课程中英文字幕我将放在&lt;strong&gt;github&lt;/strong&gt;，希望大家能继续完善。为方便数学公式的在线显示，在线观看的是&lt;strong&gt;html&lt;/strong&gt;文件，公式已经被转为图片，公式源码在&lt;strong&gt;markdown&lt;/strong&gt;文件。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;最后想对各位朋友说：&lt;/strong&gt; &lt;strong&gt;赠人玫瑰，手有余香！&lt;/strong&gt; &lt;strong&gt;在人工智能的道路上，你不是一个人在战斗！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;黄海广&lt;/p&gt; &#xA;&lt;p&gt;2018-3-26 夜&lt;/p&gt; &#xA;&lt;p&gt;微信公众号：机器学习初学者 &lt;img src=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/images/gongzhong.jpg&#34; alt=&#34;gongzhong&#34;&gt; &lt;a href=&#34;https://www.zhihu.com/people/fengdu78/activities&#34;&gt;我的知乎&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;参考：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.coursera.org/course/ml&#34;&gt;https://www.coursera.org/course/ml&lt;/a&gt; 机器学习公开课&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mooc.guokr.com/note/12/&#34;&gt;https://mooc.guokr.com/note/12/&lt;/a&gt; &lt;a href=&#34;https://mooc.guokr.com/user/2133483357/&#34;&gt;小小人_V&lt;/a&gt; 的个人笔记&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;《统计学习方法》李航&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;《机器学习课》邹博&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;备注：吴恩达老师的深度学习课（deepLearning.ai）的笔记地址：&lt;a href=&#34;https://github.com/fengdu78/deeplearning_ai_books&#34;&gt;https://github.com/fengdu78/deeplearning_ai_books&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;文件夹说明：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;docx&lt;/strong&gt;：笔记的&lt;strong&gt;word&lt;/strong&gt;版本&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;markdown&lt;/strong&gt;：笔记的&lt;strong&gt;markdown&lt;/strong&gt;版本&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;html&lt;/strong&gt;：笔记的&lt;strong&gt;html&lt;/strong&gt;版本&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;images&lt;/strong&gt;：笔记的图片&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ppt&lt;/strong&gt;：课程的原版课件&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;srt&lt;/strong&gt;：课程的中英文字幕（&lt;strong&gt;mp4&lt;/strong&gt;文件需要在百度云下载，大家可以用记事本或者字幕编辑软件来编辑字幕，共同完善。&lt;/p&gt; &#xA;&lt;p&gt;百度云链接：&lt;a href=&#34;https://pan.baidu.com/s/1h8QjqBlOm0Exh7orm9teMQ&#34;&gt;https://pan.baidu.com/s/1h8QjqBlOm0Exh7orm9teMQ&lt;/a&gt; 密码：d3we，下载后解压）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;code&lt;/strong&gt;：课程的&lt;strong&gt;python&lt;/strong&gt;代码&lt;/p&gt; &#xA;&lt;p&gt;机器学习课程视频：&lt;a href=&#34;https://www.bilibili.com/video/BV1W34y1i7xK&#34;&gt;https://www.bilibili.com/video/BV1W34y1i7xK&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.ai-start.com/ml2014&#34;&gt;笔记在线阅读&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;笔记pdf版本下载 ：见&lt;strong&gt;Github&lt;/strong&gt;根目录。&lt;/p&gt; &#xA;&lt;p&gt;机器学习qq群：955171419（我们有13个群，加过一个就不需要加了）&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;机器学习教程中文笔记目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week1.md&#34;&gt;第一周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;一、 引言(&lt;strong&gt;Introduction&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;1.1 欢迎&lt;/p&gt; &#xA;&lt;p&gt;1.2 机器学习是什么？&lt;/p&gt; &#xA;&lt;p&gt;1.3 监督学习&lt;/p&gt; &#xA;&lt;p&gt;1.4 无监督学习&lt;/p&gt; &#xA;&lt;p&gt;二、单变量线性回归(&lt;strong&gt;Linear Regression with One Variable&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;2.1 模型表示&lt;/p&gt; &#xA;&lt;p&gt;2.2 代价函数&lt;/p&gt; &#xA;&lt;p&gt;2.3 代价函数的直观理解I&lt;/p&gt; &#xA;&lt;p&gt;2.4 代价函数的直观理解II&lt;/p&gt; &#xA;&lt;p&gt;2.5 梯度下降&lt;/p&gt; &#xA;&lt;p&gt;2.6 梯度下降的直观理解&lt;/p&gt; &#xA;&lt;p&gt;2.7 梯度下降的线性回归&lt;/p&gt; &#xA;&lt;p&gt;2.8 接下来的内容&lt;/p&gt; &#xA;&lt;p&gt;三、线性代数回顾(&lt;strong&gt;Linear Algebra Review&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;3.1 矩阵和向量&lt;/p&gt; &#xA;&lt;p&gt;3.2 加法和标量乘法&lt;/p&gt; &#xA;&lt;p&gt;3.3 矩阵向量乘法&lt;/p&gt; &#xA;&lt;p&gt;3.4 矩阵乘法&lt;/p&gt; &#xA;&lt;p&gt;3.5 矩阵乘法的性质&lt;/p&gt; &#xA;&lt;p&gt;3.6 逆、转置&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week2.md&#34;&gt;第二周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;四、多变量线性回归(&lt;strong&gt;Linear Regression with Multiple Variables&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;4.1 多维特征&lt;/p&gt; &#xA;&lt;p&gt;4.2 多变量梯度下降&lt;/p&gt; &#xA;&lt;p&gt;4.3 梯度下降法实践1-特征缩放&lt;/p&gt; &#xA;&lt;p&gt;4.4 梯度下降法实践2-学习率&lt;/p&gt; &#xA;&lt;p&gt;4.5 特征和多项式回归&lt;/p&gt; &#xA;&lt;p&gt;4.6 正规方程&lt;/p&gt; &#xA;&lt;p&gt;4.7 正规方程及不可逆性（选修）&lt;/p&gt; &#xA;&lt;p&gt;五、Octave教程(&lt;strong&gt;Octave Tutorial&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;5.1 基本操作&lt;/p&gt; &#xA;&lt;p&gt;5.2 移动数据&lt;/p&gt; &#xA;&lt;p&gt;5.3 计算数据&lt;/p&gt; &#xA;&lt;p&gt;5.4 绘图数据&lt;/p&gt; &#xA;&lt;p&gt;5.5 控制语句：&lt;strong&gt;for&lt;/strong&gt;，&lt;strong&gt;while&lt;/strong&gt;，&lt;strong&gt;if&lt;/strong&gt;语句&lt;/p&gt; &#xA;&lt;p&gt;5.6 向量化 88&lt;/p&gt; &#xA;&lt;p&gt;5.7 工作和提交的编程练习&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week3.md&#34;&gt;第三周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;六、逻辑回归(&lt;strong&gt;Logistic Regression&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;6.1 分类问题&lt;/p&gt; &#xA;&lt;p&gt;6.2 假说表示&lt;/p&gt; &#xA;&lt;p&gt;6.3 判定边界&lt;/p&gt; &#xA;&lt;p&gt;6.4 代价函数&lt;/p&gt; &#xA;&lt;p&gt;6.5 简化的成本函数和梯度下降&lt;/p&gt; &#xA;&lt;p&gt;6.6 高级优化&lt;/p&gt; &#xA;&lt;p&gt;6.7 多类别分类：一对多&lt;/p&gt; &#xA;&lt;p&gt;七、正则化(&lt;strong&gt;Regularization&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;7.1 过拟合的问题&lt;/p&gt; &#xA;&lt;p&gt;7.2 代价函数&lt;/p&gt; &#xA;&lt;p&gt;7.3 正则化线性回归&lt;/p&gt; &#xA;&lt;p&gt;7.4 正则化的逻辑回归模型&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week4.md&#34;&gt;第四周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;第八、神经网络：表述(&lt;strong&gt;Neural Networks: Representation&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;8.1 非线性假设&lt;/p&gt; &#xA;&lt;p&gt;8.2 神经元和大脑&lt;/p&gt; &#xA;&lt;p&gt;8.3 模型表示1&lt;/p&gt; &#xA;&lt;p&gt;8.4 模型表示2&lt;/p&gt; &#xA;&lt;p&gt;8.5 样本和直观理解1&lt;/p&gt; &#xA;&lt;p&gt;8.6 样本和直观理解II&lt;/p&gt; &#xA;&lt;p&gt;8.7 多类分类&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week5.md&#34;&gt;第五周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;九、神经网络的学习(&lt;strong&gt;Neural Networks: Learning&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;9.1 代价函数&lt;/p&gt; &#xA;&lt;p&gt;9.2 反向传播算法&lt;/p&gt; &#xA;&lt;p&gt;9.3 反向传播算法的直观理解&lt;/p&gt; &#xA;&lt;p&gt;9.4 实现注意：展开参数&lt;/p&gt; &#xA;&lt;p&gt;9.5 梯度检验&lt;/p&gt; &#xA;&lt;p&gt;9.6 随机初始化&lt;/p&gt; &#xA;&lt;p&gt;9.7 综合起来&lt;/p&gt; &#xA;&lt;p&gt;9.8 自主驾驶&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week6.md&#34;&gt;第六周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;十、应用机器学习的建议(&lt;strong&gt;Advice for Applying Machine Learning&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;10.1 决定下一步做什么&lt;/p&gt; &#xA;&lt;p&gt;10.2 评估一个假设&lt;/p&gt; &#xA;&lt;p&gt;10.3 模型选择和交叉验证集&lt;/p&gt; &#xA;&lt;p&gt;10.4 诊断偏差和方差&lt;/p&gt; &#xA;&lt;p&gt;10.5 正则化和偏差/方差&lt;/p&gt; &#xA;&lt;p&gt;10.6 学习曲线&lt;/p&gt; &#xA;&lt;p&gt;10.7 决定下一步做什么&lt;/p&gt; &#xA;&lt;p&gt;十一、机器学习系统的设计(&lt;strong&gt;Machine Learning System Design&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;11.1 首先要做什么&lt;/p&gt; &#xA;&lt;p&gt;11.2 误差分析&lt;/p&gt; &#xA;&lt;p&gt;11.3 类偏斜的误差度量&lt;/p&gt; &#xA;&lt;p&gt;11.4 查准率和查全率之间的权衡&lt;/p&gt; &#xA;&lt;p&gt;11.5 机器学习的数据&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week7.md&#34;&gt;第7周&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;十二、支持向量机(&lt;strong&gt;Support Vector Machines&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;12.1 优化目标&lt;/p&gt; &#xA;&lt;p&gt;12.2 大边界的直观理解&lt;/p&gt; &#xA;&lt;p&gt;12.3 数学背后的大边界分类（选修）&lt;/p&gt; &#xA;&lt;p&gt;12.4 核函数1&lt;/p&gt; &#xA;&lt;p&gt;12.5 核函数2&lt;/p&gt; &#xA;&lt;p&gt;12.6 使用支持向量机&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week8.md&#34;&gt;第八周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;十三、聚类(&lt;strong&gt;Clustering&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;13.1 无监督学习：简介&lt;/p&gt; &#xA;&lt;p&gt;13.2 K-均值算法&lt;/p&gt; &#xA;&lt;p&gt;13.3 优化目标&lt;/p&gt; &#xA;&lt;p&gt;13.4 随机初始化&lt;/p&gt; &#xA;&lt;p&gt;13.5 选择聚类数&lt;/p&gt; &#xA;&lt;p&gt;十四、降维(&lt;strong&gt;Dimensionality Reduction&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;14.1 动机一：数据压缩&lt;/p&gt; &#xA;&lt;p&gt;14.2 动机二：数据可视化&lt;/p&gt; &#xA;&lt;p&gt;14.3 主成分分析问题&lt;/p&gt; &#xA;&lt;p&gt;14.4 主成分分析算法&lt;/p&gt; &#xA;&lt;p&gt;14.5 选择主成分的数量&lt;/p&gt; &#xA;&lt;p&gt;14.6 重建的压缩表示&lt;/p&gt; &#xA;&lt;p&gt;14.7 主成分分析法的应用建议&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week9.md&#34;&gt;第九周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;十五、异常检测(&lt;strong&gt;Anomaly Detection&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;15.1 问题的动机&lt;/p&gt; &#xA;&lt;p&gt;15.2 高斯分布&lt;/p&gt; &#xA;&lt;p&gt;15.3 算法&lt;/p&gt; &#xA;&lt;p&gt;15.4 开发和评价一个异常检测系统&lt;/p&gt; &#xA;&lt;p&gt;15.5 异常检测与监督学习对比&lt;/p&gt; &#xA;&lt;p&gt;15.6 选择特征&lt;/p&gt; &#xA;&lt;p&gt;15.7 多元高斯分布（选修）&lt;/p&gt; &#xA;&lt;p&gt;15.8 使用多元高斯分布进行异常检测（选修）&lt;/p&gt; &#xA;&lt;p&gt;十六、推荐系统(&lt;strong&gt;Recommender Systems&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;16.1 问题形式化&lt;/p&gt; &#xA;&lt;p&gt;16.2 基于内容的推荐系统&lt;/p&gt; &#xA;&lt;p&gt;16.3 协同过滤&lt;/p&gt; &#xA;&lt;p&gt;16.4 协同过滤算法&lt;/p&gt; &#xA;&lt;p&gt;16.5 向量化：低秩矩阵分解&lt;/p&gt; &#xA;&lt;p&gt;16.6 推行工作上的细节：均值归一化&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fengdu78/Coursera-ML-AndrewNg-Notes/master/markdown/week10.md&#34;&gt;第十周&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;十七、大规模机器学习(&lt;strong&gt;Large Scale Machine Learning&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;17.1 大型数据集的学习&lt;/p&gt; &#xA;&lt;p&gt;17.2 随机梯度下降法&lt;/p&gt; &#xA;&lt;p&gt;17.3 小批量梯度下降&lt;/p&gt; &#xA;&lt;p&gt;17.4 随机梯度下降收敛&lt;/p&gt; &#xA;&lt;p&gt;17.5 在线学习&lt;/p&gt; &#xA;&lt;p&gt;17.6 映射化简和数据并行&lt;/p&gt; &#xA;&lt;p&gt;十八、应用实例：图片文字识别(&lt;strong&gt;Application Example: Photo OCR&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;18.1 问题描述和流程图&lt;/p&gt; &#xA;&lt;p&gt;18.2 滑动窗口&lt;/p&gt; &#xA;&lt;p&gt;18.3 获取大量数据和人工数据&lt;/p&gt; &#xA;&lt;p&gt;18.4 上限分析：哪部分管道的接下去做&lt;/p&gt; &#xA;&lt;p&gt;十九、总结(&lt;strong&gt;Conclusion&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;19.1 总结和致谢&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;机器学习qq群：955171419（我们有13个群，加过一个就不需要加了）&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>phil-opp/blog_os</title>
    <updated>2022-07-10T01:59:41Z</updated>
    <id>tag:github.com,2022-07-10:/phil-opp/blog_os</id>
    <link href="https://github.com/phil-opp/blog_os" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Writing an OS in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blog OS&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for the &lt;em&gt;Writing an OS in Rust&lt;/em&gt; series at &lt;a href=&#34;https://os.phil-opp.com&#34;&gt;os.phil-opp.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, open an issue or chat with us &lt;a href=&#34;https://gitter.im/phil-opp/blog_os&#34;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Where is the code?&lt;/h2&gt; &#xA;&lt;p&gt;The code for each post lives in a separate git branch. This makes it possible to see the intermediate state after each post.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The code for the latest post is available &lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-12&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find the branch for each post by following the &lt;code&gt;(source code)&lt;/code&gt; link in the &lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/#posts&#34;&gt;post list&lt;/a&gt; below. The branches are named &lt;code&gt;post-XX&lt;/code&gt; where &lt;code&gt;XX&lt;/code&gt; is the post number, for example &lt;code&gt;post-03&lt;/code&gt; for the &lt;em&gt;VGA Text Mode&lt;/em&gt; post or &lt;code&gt;post-07&lt;/code&gt; for the &lt;em&gt;Hardware Interrupts&lt;/em&gt; post. For build instructions, see the Readme of the respective branch.&lt;/p&gt; &#xA;&lt;p&gt;You can check out a branch in a subdirectory using &lt;a href=&#34;https://git-scm.com/docs/git-worktree&#34;&gt;git worktree&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git worktree add code post-10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The above command creates a subdirectory named &lt;code&gt;code&lt;/code&gt; that contains the code for the 10th post (&#34;Heap Allocation&#34;).&lt;/p&gt; &#xA;&lt;h2&gt;Posts&lt;/h2&gt; &#xA;&lt;p&gt;The goal of this project is to provide step-by-step tutorials in individual blog posts. We currently have the following set of posts:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bare Bones:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/freestanding-rust-binary/&#34;&gt;A Freestanding Rust Binary&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-01&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/minimal-rust-kernel/&#34;&gt;A Minimal Rust Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-02&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/vga-text-mode/&#34;&gt;VGA Text Mode&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-03&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/testing/&#34;&gt;Testing&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-04&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Interrupts:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cpu-exceptions/&#34;&gt;CPU Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-05&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/double-fault-exceptions/&#34;&gt;Double Faults&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-06&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/hardware-interrupts/&#34;&gt;Hardware Interrupts&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-07&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Memory Management:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/paging-introduction/&#34;&gt;Introduction to Paging&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-08&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/paging-implementation/&#34;&gt;Paging Implementation&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-09&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/heap-allocation/&#34;&gt;Heap Allocation&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-10&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/allocator-designs/&#34;&gt;Allocator Designs&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-11&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multitasking&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/async-await/&#34;&gt;Async/Await&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/post-12&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;First Edition Posts&lt;/h2&gt; &#xA;&lt;p&gt;The current version of the blog is already the second edition. The first edition is outdated and no longer maintained, but might still be useful. The posts of the first edition are:&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;i&gt;Click to expand&lt;/i&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Bare Bones:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/multiboot-kernel.html&#34;&gt;A Minimal x86 Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_1&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/entering-longmode.html&#34;&gt;Entering Long Mode&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_2&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/set-up-rust.html&#34;&gt;Set Up Rust&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_3&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/printing-to-screen.html&#34;&gt;Printing to Screen&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_4&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Memory Management:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/allocating-frames.html&#34;&gt;Allocating Frames&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_5&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/modifying-page-tables.html&#34;&gt;Page Tables&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_6&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/remap-the-kernel.html&#34;&gt;Remap the Kernel&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_7&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/kernel-heap.html&#34;&gt;Kernel Heap&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_8&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Exceptions:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/handling-exceptions.html&#34;&gt;Handling Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_9&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/double-faults.html&#34;&gt;Double Faults&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/first_edition_post_10&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;Additional Resources:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cross-compile-binutils.html&#34;&gt;Cross Compile Binutils&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/cross-compile-libcore.html&#34;&gt;Cross Compile libcore&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/set-up-gdb&#34;&gt;Set Up GDB&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/handling-exceptions-with-naked-fns.html&#34;&gt;Handling Exceptions using Naked Functions&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/catching-exceptions.html&#34;&gt;Catching Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/catching_exceptions&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/better-exception-messages.html&#34;&gt;Better Exception Messages&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/better_exception_messages&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://os.phil-opp.com/returning-from-exceptions.html&#34;&gt;Returning from Exceptions&lt;/a&gt; (&lt;a href=&#34;https://github.com/phil-opp/blog_os/tree/returning_from_exceptions&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project, with exception of the &lt;code&gt;blog/content&lt;/code&gt; folder, is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;For licensing of the &lt;code&gt;blog/content&lt;/code&gt; folder, see the &lt;a href=&#34;https://raw.githubusercontent.com/phil-opp/blog_os/main/blog/content/README.md&#34;&gt;&lt;code&gt;blog/content/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SamHerbert/SVG-Loaders</title>
    <updated>2022-07-10T01:59:41Z</updated>
    <id>tag:github.com,2022-07-10:/SamHerbert/SVG-Loaders</id>
    <link href="https://github.com/SamHerbert/SVG-Loaders" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Loading icons and small animations built with pure SVG.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;All loaders may be previewed at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://samherbert.net/svg-loaders&#34;&gt;http://samherbert.net/svg-loaders&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Chrome 45 intended to deprecate SMIL icons but has since &lt;a href=&#34;https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/5o0yiO440LM%5B126-150%5D&#34;&gt;suspended&lt;/a&gt; that deprecation.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SamHerbert/SVG-Loaders/archive/master.zip&#34;&gt;Download&lt;/a&gt; or &lt;code&gt;bower install svg-loaders&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&#34;svg-loaders/puff.svg&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An icon&#39;s color can be manipulated by changing the &lt;code&gt;fill&lt;/code&gt; attribute in the SVG file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;svg fill=&#34;#fff&#34; width=&#34;140&#34; height=&#34;64&#34; viewBox=&#34;0 0 140 64&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Not all browsers support SVG, or more specifically, animated SVGs. Check (&lt;a href=&#34;http://caniuse.com/#feat=svg-smil&#34;&gt;http://caniuse.com/#feat=svg-smil&lt;/a&gt;) to make sure you&#39;re good to go. If not, you may want to implement a fallback.&lt;/p&gt; &#xA;&lt;h1&gt;Minify&lt;/h1&gt; &#xA;&lt;p&gt;All SVG files are fairly small in size, but you can make them even smaller by minifying with something like &lt;a href=&#34;https://github.com/svg/svgo&#34;&gt;SVGO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Adaptations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ajwann/svg-loaders-react&#34;&gt;React components by ajwann&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>