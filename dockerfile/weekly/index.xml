<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-27T01:53:12Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Jisan09/SSH4Me</title>
    <updated>2023-08-27T01:53:12Z</updated>
    <id>tag:github.com,2023-08-27:/Jisan09/SSH4Me</id>
    <link href="https://github.com/Jisan09/SSH4Me" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SSH4Me is a Docker container for secure root access to development environments via an Ngrok tunnel.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSH4Me&lt;/h1&gt; &#xA;&lt;p&gt;SSH4Me is a Docker container that provides secure root access to development environments via an Ngrok tunnel. With configuration for root login and common development ports, SSH4Me makes it easy to access your environment securely from anywhere, including platforms like Railway.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To use SSH4Me, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GitHub account to fork the SSH4Me repository&lt;/li&gt; &#xA; &lt;li&gt;An ngrok account to get an authentication token&lt;/li&gt; &#xA; &lt;li&gt;Docker installed on your local machine if you want to run SSH4Me locally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Fork the SSH4Me Repository on GitHub&lt;/h3&gt; &lt;p&gt;The first step is to fork the SSH4Me repository on GitHub. To do this click the &#34;Fork&#34; button in the top-right corner of the page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Sign up for an ngrok Account and Get Your Authentication Token&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sign up for an ngrok account at &lt;a href=&#34;https://dashboard.ngrok.com/signup&#34;&gt;https://dashboard.ngrok.com/signup&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Get your ngrok authentication token from &lt;a href=&#34;https://dashboard.ngrok.com/get-started/your-authtoken&#34;&gt;https://dashboard.ngrok.com/get-started/your-authtoken&lt;/a&gt;.&lt;/p&gt; &#xA;    &lt;figure&gt;&#xA;     &lt;img src=&#34;https://graph.org/file/a540090cbde42cb121f81.jpg&#34; alt=&#34;ngrok dashboard&#34; width=&#34;720&#34;&gt;&#xA;    &lt;/figure&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;You will need this token when you build the Docker container on Railway or locally.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;〣 Run with Railway&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Go to &lt;a href=&#34;https://railway.app/new&#34;&gt;https://railway.app/new&lt;/a&gt; and build the Docker container with the following environment variables:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;: Your ngrok authentication token.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PASSWORD&lt;/code&gt;: Password for SSH access (optional, default is &lt;code&gt;rootuser&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;figure&gt;&#xA;    &lt;img src=&#34;https://graph.org/file/e68689ddfbdb12cdc37d8.jpg&#34; alt=&#34;Railway app buildL&#34; width=&#34;720&#34;&gt;&#xA;   &lt;/figure&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;〣 Run Locally&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;h4&gt;Install Docker&lt;/h4&gt; &#xA; &lt;p&gt;First, you need to install Docker on your local machine. You can download the appropriate version of Docker for your operating system from the &lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker website&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h4&gt;Clone the SSH4Me Repository&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Open a terminal window on your local machine.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Clone the SSH4Me repository by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/Jisan09/ssh4me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h4&gt;Build and Run the Docker Container&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Navigate to the &lt;code&gt;ssh4me&lt;/code&gt; directory by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ssh4me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Build the Docker container by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker build -t ssh4me --build-arg AUTH_TOKEN=AUTH_TOKEN --build-arg PASSWORD=PASSWORD .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Run the Docker container by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;docker run ssh4me&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;〣 Run with Github Workflow&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;b&gt;&lt;i&gt;NOTE :- This method isn&#39;t for making bot, it just for light work. This will work only for 6hr then will terminate.&lt;/i&gt;&lt;/b&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Create a new workflow file (&lt;code&gt;builder.yml&lt;/code&gt;) inside &lt;code&gt;.github/workflows/&lt;/code&gt; folder of your repository and copy paste the below conent. &lt;strong&gt;Or you can just fork the SSH4Me Repository.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt; name: &#39;Run SSH4Me&#39;&#xA; on:&#xA; workflow_dispatch:&#xA;&#xA; jobs:&#xA; build-and-run:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;       - name: Checkout repository&#xA;       uses: actions/checkout@v2&#xA;&#xA;       - name: Run SSH4Me Action&#xA;       uses: Jisan09/SSH4Me@main&#xA;       env:&#xA;          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}&#xA;          PASSWORD: ${{ secrets.PASSWORD }}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Now go to the repository &lt;strong&gt;&lt;code&gt;settings &amp;gt; secrets and variables &amp;gt; action &amp;gt; new repository secret&lt;/code&gt;&lt;/strong&gt; and add the following environment variables:&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;: Your ngrok authentication token.&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PASSWORD&lt;/code&gt;: Password for SSH access.&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;figure&gt;&#xA;    &lt;img src=&#34;https://graph.org/file/6cdd1dbc67096a35df91e.jpg&#34; width=&#34;720&#34;&gt;&#xA;   &lt;/figure&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Now go to &lt;strong&gt;action&lt;/strong&gt; tab and run the workflow&lt;/p&gt; &#xA;   &lt;figure&gt;&#xA;    &lt;img src=&#34;https://graph.org/file/2a2b09614d4ab60b911b4.jpg&#34; width=&#34;720&#34;&gt;&#xA;   &lt;/figure&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;Wait for the build to complete. Once it&#39;s done, you should see your ssh &amp;amp; password in log.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome and encourage contributions to SSH4Me. If you find a bug or have an idea for a new feature, please open an issue or a pull request.&lt;/p&gt; &#xA;&lt;p&gt;If you found SSH4Me useful, please consider giving it a star on GitHub by clicking the ⭐️ button. This helps to increase the visibility of the project and lets us know that you find it valuable.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your support!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pierrecdn/phpipam</title>
    <updated>2023-08-27T01:53:12Z</updated>
    <id>tag:github.com,2023-08-27:/pierrecdn/phpipam</id>
    <link href="https://github.com/pierrecdn/phpipam" rel="alternate"></link>
    <summary type="html">&lt;p&gt;phpIPAM Docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-phpipam&lt;/h1&gt; &#xA;&lt;p&gt;phpIPAM is an open-source web IP address management application. Its goal is to provide light and simple IP address management application.&lt;/p&gt; &#xA;&lt;p&gt;phpIPAM is developed and maintained by Miha Petkovsek, released under the GPL v3 license, project source is &lt;a href=&#34;https://github.com/phpipam/phpipam&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn more on &lt;a href=&#34;http://phpipam.net&#34;&gt;phpIPAM homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://phpipam.net/wp-content/uploads/2014/12/phpipam_logo_small.png&#34; alt=&#34;phpIPAM logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use this Docker image&lt;/h2&gt; &#xA;&lt;h3&gt;Mysql&lt;/h3&gt; &#xA;&lt;p&gt;Run a MySQL database, dedicated to phpipam.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --name phpipam-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -v /my_dir/phpipam:/var/lib/mysql -d mysql:5.6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here, we store data on the host system under &lt;code&gt;/my_dir/phpipam&lt;/code&gt; and use a specific root password.&lt;/p&gt; &#xA;&lt;h3&gt;Phpipam&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -ti -d -p 80:80 -e MYSQL_ENV_MYSQL_ROOT_PASSWORD=my-secret-pw --name ipam --link phpipam-mysql:mysql pierrecdn/phpipam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We are linking the two containers and exposing the HTTP port.&lt;/p&gt; &#xA;&lt;h3&gt;First install scenario&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Browse to &lt;code&gt;http://&amp;lt;ip&amp;gt;[:&amp;lt;specific_port&amp;gt;]/install/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Step 1 : Choose &#39;Automatic database installation&#39;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4225738/8746785/01758b9e-2c8d-11e5-8643-7f5862c75efe.png&#34; alt=&#34;step1&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 2 : Re-Enter connection information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4225738/8746789/0ad367e2-2c8d-11e5-80bb-f5093801e139.png&#34; alt=&#34;step2&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note that these two first steps could be swapped by patching phpipam (see &lt;a href=&#34;https://github.com/phpipam/phpipam/issues/25&#34;&gt;https://github.com/phpipam/phpipam/issues/25&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Step 3 : Configure the admin user password&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4225738/8746790/0c434bf6-2c8d-11e5-9ae7-b7d1021b7aa0.png&#34; alt=&#34;step3&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;re done !&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/4225738/8746792/0d6fa34e-2c8d-11e5-8002-3793361ae34d.png&#34; alt=&#34;done&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker compose&lt;/h3&gt; &#xA;&lt;p&gt;You can also create an all-in-one YAML deployment descriptor with Docker compose, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;services:&#xA;  mysql:&#xA;    image: mysql:5.6&#xA;    environment:&#xA;      - MYSQL_ROOT_PASSWORD=my-secret-pw&#xA;    restart: always&#xA;    volumes:&#xA;      - db_data:/var/lib/mysql&#xA;  ipam:&#xA;    depends_on:&#xA;      - mysql&#xA;    image: pierrecdn/phpipam&#xA;    environment:&#xA;      - MYSQL_ENV_MYSQL_USER=root&#xA;      - MYSQL_ENV_MYSQL_ROOT_PASSWORD=my-secret-pw&#xA;      - MYSQL_ENV_MYSQL_HOST=mysql&#xA;    ports:&#xA;      - &#34;80:80&#34;&#xA;volumes:&#xA;  db_data:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And next :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also point the &lt;code&gt;MYSQL_ENV_PASSWORD_FILE&lt;/code&gt; environment variable to a file, in which case the contents of this file will be used as the password. This makes it possible to use docker secrets for instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3&#39;&#xA;&#xA;services:&#xA;  ipam:&#xA;    environment:&#xA;      - MYSQL_ENV_MYSQL_PASSWORD_FILE=/run/secrets/phpipam_mysql_root_password&#xA;    secrets:&#xA;      - phpipam_mysql_root_password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The secret can be created by running &lt;code&gt;echo my-secret-pw | docker secret create phpipam_mysql_root_password -&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Advanced Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Here is the list of the available environment variables in the phpipam container, pass them to docker using &lt;code&gt;-e&lt;/code&gt;. None of them are actually needed to run the container, this is only to tweak the behavior.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default value&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MYSQL_ENV_MYSQL_HOST&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;mysql&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;The host used to reach the MySQL instance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MYSQL_ENV_MYSQL_USER&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;root&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;The user to connect the MySQL instance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MYSQL_ENV_MYSQL_ROOT_PASSWORD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(empty)&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;The MySQL password. Can be set using the Web UI during the first install&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MYSQL_ENV_MYSQL_DB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;phpipam&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;The name of the MySQL DB to connect to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MYSQL_ENV_MYSQL_PASSWORD_FILE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(empty)&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;A file containing the password (if not using MYSQL_ROOT_PASSWORD) this allows to leverage docker secrets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHPIPAM_BASE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;/&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;The base URI under which phpipam runs. Useful when performing rewrites with a reverse-proxy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GMAPS_API_KEY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(empty)&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Google Maps API Key, used to display maps of your devices&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GMAPS_API_GEOCODE_KEY&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(empty)&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Google Maps Geocode API Key, used to find coordinates from an address/ a location of your device&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Specific integration (HTTPS, multi-host containers, etc.)&lt;/h3&gt; &#xA;&lt;p&gt;Regarding your requirements and docker setup, you&#39;ve to expose resources.&lt;/p&gt; &#xA;&lt;p&gt;For HTTPS, run a reverse-proxy in front of your phpipam container and link it to.&lt;/p&gt; &#xA;&lt;p&gt;For multi-host containers, expose ports, run etcd or consul to make service discovery works etc.&lt;/p&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;p&gt;phpIPAM is under heavy development by the amazing Miha. To upgrade the release version, just change the &lt;code&gt;PHPIPAM_VERSION&lt;/code&gt; environment variable to the target release (see &lt;a href=&#34;https://github.com/phpipam/phpipam/releases&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mohanraz81/javaproject</title>
    <updated>2023-08-27T01:53:12Z</updated>
    <id>tag:github.com,2023-08-27:/mohanraz81/javaproject</id>
    <link href="https://github.com/mohanraz81/javaproject" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>