<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T01:51:46Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>compose-spec/compose-spec</title>
    <updated>2023-03-26T01:51:46Z</updated>
    <id>tag:github.com,2023-03-26:/compose-spec/compose-spec</id>
    <link href="https://github.com/compose-spec/compose-spec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Compose specification&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Compose Specification&lt;/h1&gt; &#xA;&lt;p&gt;{:.no_toc}&lt;/p&gt; &#xA;&lt;p&gt;The Compose specification establishes a standard for the definition of multi-container platform-agnostic applications. The specification can be found &lt;a href=&#34;https://raw.githubusercontent.com/compose-spec/compose-spec/master/00-overview.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ToC {:toc}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;p&gt;To provide more context on the Compose specification the following section gives example use cases for each part of the specification.&lt;/p&gt; &#xA;&lt;h3&gt;Development tools&lt;/h3&gt; &#xA;&lt;p&gt;Developers can use a Compose file to specify a container-based application that will run as a set of containers on a local container engine. The Compose implementation in this scenario could offer some specific features (local volume binding, live-reload) to better address development needs. The application definition and Compose model is the same used as that used for other use cases. Platform features expected by the specification (like configs and secrets) can be mocked with local resources.&lt;/p&gt; &#xA;&lt;h3&gt;Kubernetes deployment&lt;/h3&gt; &#xA;&lt;p&gt;Kubernetes container orchestration relies on a set of abstract concepts and APIs to manage networking services, container deployments and their lifecycles. While this offers flexibility to address many operator use cases, it makes simple use cases, like the developer use case, more complicated to express than they need to be. Projects like &lt;a href=&#34;https://github.com/kubernetes/kompose&#34;&gt;Kompose&lt;/a&gt; or &lt;a href=&#34;https://okteto.com/docs/reference/stacks&#34;&gt;Okteto Stacks&lt;/a&gt; show how the simpler Compose model can be translated into Kubernetes API payloads and make the Compose file the source of truth for development and deployment.&lt;/p&gt; &#xA;&lt;h3&gt;Cloud providers&lt;/h3&gt; &#xA;&lt;p&gt;Some cloud providers offer proprietary container hosting solutions based on in-house orchestrators and custom APIs. The Compose specification offers a simple model that can be mapped to these hosting solutions so that users can reuse Compose files that they already have and so that they do not need to learn custom configuration file formats. Platform specific features can be added either using Compose extensions or a dedicated configuration file along side the Compose file.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Development happens on GitHub for the specification. Issues are used to track bugs and actionable items. Longer discussions can happen on the &lt;a href=&#34;https://groups.google.com/forum/#!forum/compose-spec&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The specification and code is licensed under the Apache 2.0 license found in the &lt;a href=&#34;https://raw.githubusercontent.com/compose-spec/compose-spec/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Implementations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/docker/compose&#34;&gt;Docker Compose&lt;/a&gt; is the Reference Implementation of the Compose Specification.&lt;/p&gt; &#xA;&lt;p&gt;Compose Specification is also implemented by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/kompose&#34;&gt;Kompose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containerd/nerdctl&#34;&gt;Nerdctl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://okteto.com/docs/reference/stacks&#34;&gt;Okteto Stacks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/compose-cli&#34;&gt;Docker Cloud Integrations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Metadata&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Status&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Work in progress&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Created&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;2020-01-02&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>renovatebot/tutorial</title>
    <updated>2023-03-26T01:51:46Z</updated>
    <id>tag:github.com,2023-03-26:/renovatebot/tutorial</id>
    <link href="https://github.com/renovatebot/tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Renovate Bot Tutorial source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Renovate - Hands On Tutorial&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the Renovate hands-on tutorial.&lt;/p&gt; &#xA;&lt;p&gt;This tutorial is based on the Renovate GitHub App. You can also run Renovate as a CLI tool or a self-hosted application.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Although this tutorial is based on the GitHub App, the concepts discussed apply to all environments.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In this tutorial, you will learn how to configure Renovate and become familiar with some of the basic features.&lt;/p&gt; &#xA;&lt;p&gt;What you will learn:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installation&lt;/li&gt; &#xA; &lt;li&gt;Onboarding&lt;/li&gt; &#xA; &lt;li&gt;Getting to know Renovate’s update PRs&lt;/li&gt; &#xA; &lt;li&gt;Dependency Dashboard&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We will begin this tutorial with configuring and installing the Renovate app and an overview of the default settings and basic functionalities.&lt;/p&gt; &#xA;&lt;p&gt;Later, we will dive deeper into functional use-cases, advanced features, and &lt;code&gt;best practices&lt;/code&gt; so you&#39;ll know how to leverage Renovate to its fullest.&lt;/p&gt; &#xA;&lt;h2&gt;Part 1 - Installation&lt;/h2&gt; &#xA;&lt;p&gt;Let’s start by forking the tutorial repo to your account, installing the Renovate GitHub App, and configuring it to your repo.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you are logged in to GitHub.com&lt;/li&gt; &#xA; &lt;li&gt;Fork this repository. The tutorial instructions will be based on its contents.&lt;/li&gt; &#xA; &lt;li&gt;The following instructions are directed at those that don’t have Renovate installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the Renovate App to your account by navigating to the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate App GitHub installation page&lt;/a&gt; and select Install: &lt;img src=&#34;https://user-images.githubusercontent.com/102745725/178965463-525a385e-d914-4309-aeb4-cb4358dc12bc.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you do have Renovate installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;navigate to the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate app page&lt;/a&gt; and select configure: &lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178491021-a0b7ba34-3bc7-4953-8452-416fbd3d6ec9.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You will reach an installation configuration page where you are asked to configure Repository Access.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; for existing users, installation configuration appears at the bottom of the page.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mark &lt;code&gt;Only select repositories&lt;/code&gt; and make sure to select the forked RenovateTutorial repo&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; each selected repo gets an onboarding PR.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;If you select &lt;code&gt;All repositories&lt;/code&gt;, forked repos will be skipped by default (including RenovateTutorial).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on &lt;code&gt;Install&lt;/code&gt; (“Save” for existing users)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;629&#34; alt=&#34;configuration page&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178964980-df55dafd-f087-433a-90f7-986fa01c1ac0.png&#34;&gt; &#xA;&lt;p&gt;For new installs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will be redirected to our “Thank you for installing Renovate” page while we are setting up your account.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178492276-ac0f5c03-db21-482c-95e9-07dc229ac298.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After a few seconds, you will be automatically directed to a dashboard where you can login and view the Renovate logs. We recommend saving this &lt;a href=&#34;https://app.renovatebot.com/dashboard&#34;&gt;link&lt;/a&gt; for future use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;625&#34; alt=&#34;Screen Shot 2022-07-14 at 14 24 26&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178972035-abe2e859-0756-498c-91d5-ec2f0cfdd503.png&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have successfully installed Renovate to your account.&lt;/strong&gt; 🎈&lt;/p&gt; &#xA;&lt;h2&gt;Part 2 - Onboarding&lt;/h2&gt; &#xA;&lt;p&gt;Now you have installed Renovate, we can begin onboarding.&lt;/p&gt; &#xA;&lt;p&gt;Let’s review the concepts of the Onboarding PR and learn about Renovate’s initial settings.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For your convenience, Renovate will not make any changes to your repo or raise PRs until after you finish onboarding.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upon installing Renovate, an onboarding PR will be automatically generated.&lt;/li&gt; &#xA; &lt;li&gt;This PR is there to help you understand Renovate and its default settings before Renovate starts running on your repository.&lt;/li&gt; &#xA; &lt;li&gt;The Onboarding PR creates a configuration file called &lt;code&gt;renovate.json&lt;/code&gt;, which contains Renovate’s default settings and can be modified during onboarding.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let’s review the onboarding PR:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull Requests&lt;/code&gt; section in GitHub, and open the newly generated PR - &lt;code&gt;Configure Renovate&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1500&#34; alt=&#34;onboarding PR&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178965966-76aa3941-cac4-4df3-bd89-75b9f8002924.png&#34;&gt; &#xA;&lt;img width=&#34;935&#34; alt=&#34;onboarding content&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178966039-b11315b8-8c75-416b-9f18-c8109c17d0ab.png&#34;&gt; &#xA;&lt;h4&gt;The onboarding PR contains:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Detected Package Files&lt;/strong&gt; - All package files detected by Renovate in your code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configuration Summary&lt;/strong&gt; - The default configuration settings that will be applied.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;What to Expect&lt;/strong&gt; - The dependency update PRs that Renovate is about to automatically create.&lt;/li&gt; &#xA; &lt;li&gt;The link to Renovate’s official &lt;a href=&#34;https://docs.renovatebot.com/&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The link to review jobs logs in the &lt;a href=&#34;https://app.renovatebot.com/dashboard&#34;&gt;Renovate dashboard&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Renovate will not create dependency update PRs until the onboarding PR will be merged.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;These are some of the default configurations of Renovate:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enables creation of the “Dependency Dashboard” - a dashboard that shows an overview of the state of your repositories&#39; dependencies.&lt;/li&gt; &#xA; &lt;li&gt;PRs will be created at a rate of 2 PRs per hour.&lt;/li&gt; &#xA; &lt;li&gt;The limit of simultaneous open Renovate PRs is set to 10.&lt;/li&gt; &#xA; &lt;li&gt;Renovate automatically groups known monorepo packages to a single PR (example can be seen in the &lt;code&gt;date-io&lt;/code&gt; PR under the &lt;strong&gt;what to expect&lt;/strong&gt; section).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Renovate offers the ability to change configurations before merging the onboarding PR as well as preview the results of these changes. At this point, Renovate has created a branch called renovate/configure which contains the &lt;code&gt;renovate.json&lt;/code&gt; configuration file. By default, Renovate limits branch creation to 2 per hour:&lt;/p&gt; &#xA;&lt;img width=&#34;829&#34; alt=&#34;onboarding warning hourly&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178961193-2f1f1548-5282-4d33-b8ef-6e141f0a643d.png&#34;&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;p&gt;As a user, despite Renovate’s suggestion to limit hourly PR creation to 2, we might want to increase the limit to a different number. Let’s try changing this hourly limitation to 3:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the newly created branch - &lt;code&gt;renovate/configure&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;763&#34; alt=&#34;new branch&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178966974-35c089c6-4190-4721-b1c2-956d84e80d07.png&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Go into the &lt;code&gt;renovate.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178494908-89189f2e-632a-42ee-a49a-16941a40101b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Add the following code segment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;prHourlyLimit&#34;: 3&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;591&#34; alt=&#34;change in config 1&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178967120-51ec5940-42bc-444e-8c4d-b98ea4ee5948.png&#34;&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Commit the changes&lt;/li&gt; &#xA; &lt;li&gt;Revisit the onboarding PR and notice how the onboarding PR automatically updates to reflect the changes you made to the configuration&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;830&#34; alt=&#34;onboarding warning hourly update&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178960884-40077a5c-8fe1-422f-81c1-567ea1e6619b.png&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; May take a few moments to update.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Merge the onboarding pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have successfully onboarded Renovate.&lt;/strong&gt; 🎈&lt;/p&gt; &#xA;&lt;h2&gt;Part 3 - Getting to know Renovate’s update PRs&lt;/h2&gt; &#xA;&lt;p&gt;Now that you have merged the onboarding PR, Renovate will generate Update PRs to the most recent dependency version based on your configuration.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; PRs may take a couple of minutes to appear&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Here we will review the basic concepts of Renovate update PRs and merge it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;By default, Renovate will create up to 2 update PRs per hour. However, if you completed the onboarding section of this tutorial, Renovate will now create 3 PRs.&lt;/li&gt; &#xA; &lt;li&gt;You should already see notifications for these pull requests in the &lt;code&gt;Pull Requests&lt;/code&gt; section of the repo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let’s go ahead and take a look at a Renovate update PR:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull requests&lt;/code&gt; section and open - &lt;code&gt;Update dependency lodash to x.y.z&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1256&#34; alt=&#34;open PRs&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178967929-690b3866-190b-4576-a961-981ce78cbd1b.png&#34;&gt; &#xA;&lt;h3&gt;Each update PR contains:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dependency information (name and version changes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.renovatebot.com/merge-confidence/&#34;&gt;Merge Confidence&lt;/a&gt; values&lt;/li&gt; &#xA; &lt;li&gt;Up-to-date release notes&lt;/li&gt; &#xA; &lt;li&gt;Renovate configuration-related info&lt;/li&gt; &#xA; &lt;li&gt;Option to rebase PR&lt;/li&gt; &#xA; &lt;li&gt;Link to view Renovate logs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/42116482/178495994-7cce93f1-db65-4f09-b682-7506dc242fdc.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Renovate’s update PRs will update the relevant dependency across your entire repo. In our RenovateTutorial repo, this will be both the &lt;code&gt;package.json&lt;/code&gt; file and the &lt;code&gt;package-lock.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1488&#34; alt=&#34;file diff lodash&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968020-865560f7-173c-4e9e-a073-488147dbb137.png&#34;&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Merge this pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note - Renovate is highly configurable and supports:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;On-demand PR creation.&lt;/li&gt; &#xA;  &lt;li&gt;Automatic merging of PRs.&lt;/li&gt; &#xA;  &lt;li&gt;Settings for specific dependencies/package managers.&lt;/li&gt; &#xA;  &lt;li&gt;Scheduling.&lt;/li&gt; &#xA;  &lt;li&gt;Grouping.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;All the above and more will be discussed in future parts of the tutorial.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You have now updated your first dependency with Renovate.&lt;/strong&gt; 🎈&lt;/p&gt; &#xA;&lt;h2&gt;Part 4 - Dependency Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;Renovate’s Dependency Dashboard is a GitHub Issue that enables you to manage and monitor Renovate’s activity in your repo. In this section, we will go over some of its main functionalities and capabilities.&lt;/p&gt; &#xA;&lt;p&gt;Let’s begin by creating and enabling the Dependency Dashboard. Since GitHub defaults to disable &lt;code&gt;issues&lt;/code&gt; on forked repositories, we need to enable it on the forked RenovateTutorial repo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the main page of the repo&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;settings&lt;/code&gt; -&amp;gt; &lt;code&gt;general&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check the &lt;code&gt;issues&lt;/code&gt; checkbox under the Features section:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;1284&#34; alt=&#34;issues settings&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968523-fb002cf1-2510-4b4f-b840-f9776e660d92.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In order for the Dependency Dashboard to become available, we will need to re-run Renovate by triggering a webhook (for example, closing an update PR).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; This is usually done in a click via the Dependency Dashboard.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;code&gt;Pull requests&lt;/code&gt; section&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Update dependency php to v8.1&lt;/code&gt; and select &lt;code&gt;Close pull request&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;927&#34; alt=&#34;close php&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178969009-7239db99-4abe-44d1-a86c-a0effdf6fb7a.png&#34;&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;This will trigger Renovate to run and the Dependency Dashboard will appear under the &lt;code&gt;Issues&lt;/code&gt; section - navigate to it&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; It may take a minute to appear.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;The Dependency Dashboard includes:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Overview of all updates that are still to-do:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Open&lt;/strong&gt; PRs&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Rate Limited&lt;/strong&gt; - PRs blocked by rate limit setting and will be opened based on preferences.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pending Approval&lt;/strong&gt; - PRs that require manual triggering based on configurations.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Awaiting Schedule&lt;/strong&gt; - PRs creation blocked by Renovate scheduling settings.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pending Status Checks&lt;/strong&gt; - updates that await pending status checks in order to be created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visibility into &lt;strong&gt;rejected/deferred updates&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List of all the &lt;strong&gt;detected dependencies&lt;/strong&gt; and &lt;strong&gt;package managers&lt;/strong&gt; in your repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;942&#34; alt=&#34;Screen Shot 2022-07-14 at 14 05 40&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178968912-24ef22ec-fc98-4bf1-a293-9fb5dbf4c1b8.png&#34;&gt; &#xA;&lt;p&gt;Users can manually trigger the creation of dependency updates directly from the dashboard.&lt;/p&gt; &#xA;&lt;p&gt;You can also re-run the Renovate bot manually directly from the Dependency Dashboard by enabling the “Check this box to trigger a request Renovate to run again on this repository” option:&lt;/p&gt; &#xA;&lt;img width=&#34;867&#34; alt=&#34;rerun renovate&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178969114-c1b64333-b45a-4508-b638-1e25ad0adab5.png&#34;&gt; &#xA;&lt;p&gt;Let’s dive into one of the Dependency Dashboard capabilities - &lt;strong&gt;the Pending Approval feature&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Say we want to take extra measures before updating major versions of a package (either to reduce noise or to handle it more carefully). Renovate offers an option to prevent automatic creation of major version update PRs and create such PRs only upon manual request from the Dependency Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;In the Dependency Dashboard, under the &lt;code&gt;Rate Limited&lt;/code&gt; section, the &lt;code&gt;Update dependency commander to vX&lt;/code&gt; is waiting to be created.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Based on the previously set &lt;code&gt;prHourlyLimit&lt;/code&gt; configuration, 3 PRs per hour in our case, this PR will be created within an hour.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img width=&#34;928&#34; alt=&#34;commander in Rate Limited&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178960104-c254c12f-08fb-4508-824d-20df60b2290f.png&#34;&gt; &#xA;&lt;p&gt;Since we decided that we want to handle it manually, we will edit configurations and see how the Dependency Dashboard is affected by this change.&lt;/p&gt; &#xA;&lt;p&gt;In order to limit all &lt;code&gt;major&lt;/code&gt; updates to on-demand creation:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add this code segment to your &lt;code&gt;renovate.json&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;packageRules&#34;: [&#xA;    {&#xA;      &#34;matchUpdateTypes&#34;: [&#34;major&#34;],&#xA;      &#34;dependencyDashboardApproval&#34;: true&#xA;    }&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;924&#34; alt=&#34;change in config - pending approval&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178962677-612e8172-fac7-45fb-937b-46a559d848f0.png&#34;&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Commit the changes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Changing the &lt;code&gt;renovate.json&lt;/code&gt; configuration file is a webhook that triggers Renovate to re-run.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Now go back to the Dependency Dashboard in the Issues section&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As you can see, &lt;code&gt;commander&lt;/code&gt; major update PR now appears under the &lt;strong&gt;Pending Approval&lt;/strong&gt; section and &lt;strong&gt;will not&lt;/strong&gt; be opened unless manually triggered&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; it make take a minute to complete Renovate&#39;s run&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img width=&#34;926&#34; alt=&#34;commander in pending approval&#34; src=&#34;https://user-images.githubusercontent.com/102745725/178962735-84f1ae00-df4c-4fed-adf5-12fefeb94e9f.png&#34;&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;You can now decide to manually open this PR by checking the box next to it&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the &lt;code&gt;Pull requests&lt;/code&gt; section to review the generated PR and merge it to the repo.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Congratulations! You are now familiar with Renovate’s Dependency Dashboard.&lt;/strong&gt; 🎈&lt;/p&gt; &#xA;&lt;h2&gt;What you learned:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to install Renovate&lt;/li&gt; &#xA; &lt;li&gt;Onboarding Renovate by reviewing, configuring, and merging the onboarding PR&lt;/li&gt; &#xA; &lt;li&gt;How to update a dependency with Renovate&lt;/li&gt; &#xA; &lt;li&gt;How to utilize the Dependency Dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;General Comments:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Granting access to all repositories or change repo selections can be modified at any time on the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate App GitHub page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Renovate configuration can be modified by manual configurations, global organization configurations and existing Renovate presets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Congratulations!&lt;/h3&gt; &#xA;&lt;p&gt;You have successfully completed Renovate’s hands-on tutorial and have taken your first steps to automate dependency updates in your projects. Now, it&#39;s time to configure Renovate on the rest of your repositories and let Renovate manage your dependencies&#39; health.&lt;/p&gt; &#xA;&lt;h3&gt;Upcoming Tutorials:&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re working on more advanced Renovate tutorials and will post updates when we publish new tutorials.&lt;/p&gt; &#xA;&lt;p&gt;What’s coming next:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Merge confidence&lt;/li&gt; &#xA; &lt;li&gt;Auto Merge&lt;/li&gt; &#xA; &lt;li&gt;Labeling&lt;/li&gt; &#xA; &lt;li&gt;Grouping&lt;/li&gt; &#xA; &lt;li&gt;Schedule&lt;/li&gt; &#xA; &lt;li&gt;Package Rules&lt;/li&gt; &#xA; &lt;li&gt;GitHub Actions&lt;/li&gt; &#xA; &lt;li&gt;PR Assignees and PR reviewers&lt;/li&gt; &#xA; &lt;li&gt;Regex Managers&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LinkedInLearning/level-up-rust-3041143</title>
    <updated>2023-03-26T01:51:46Z</updated>
    <id>tag:github.com,2023-03-26:/LinkedInLearning/level-up-rust-3041143</id>
    <link href="https://github.com/LinkedInLearning/level-up-rust-3041143" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a LinkedIn Learning repo for Level Up: Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Level Up: Rust&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the LinkedIn Learning course Level Up: Rust. The full course is available from &lt;a href=&#34;https://www.linkedin.com/learning/level-up-rust?dApp=59033956&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/C560DAQEOULbtwwYf8Q/learning-public-crop_288_512/0/1677009134347?e=2147483647&amp;amp;v=beta&amp;amp;t=upv4qh8qFO7ZR9gBPQGQQW8wg9gyTjKoaDC4gD0OwxU&#34; alt=&#34;Level Up: Rust&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It’ll take time—and a whole lot of practice—to improve your Rust coding skills. It’s important to push yourself with new challenges, which is exactly what this course is for. Join author and instructor Tim McNamara as he takes you through a series of coding challenges, testing your ability to perform certain functions so you can reach the next level with Rust. Acquire new Rust skills with exercises that start off simple and become progressively more difficult. Learn how to write better, faster, and more reliable code when you need it. Find out why Rust is taking over the industry, offering an efficient and secure alternative to many other programming languages.&lt;/p&gt; &#xA;&lt;p&gt;This course is integrated with GitHub Codespaces, an instant cloud developer environment that offers all the functionality of your favorite IDE without the need for any local machine setup. With GitHub Codespaces, you can get hands-on practice from any machine, at any time—all while using a tool that you’ll likely encounter in the workplace.&lt;/p&gt; &#xA;&lt;p&gt;Each installment of the Level Up series offers at least 15 bite-sized opportunities to practice programming at various levels of difficulty, so you can challenge yourself and reinforce what you’ve learned. Check out the “Using GitHub Codespaces with this course” video to learn how to get a codespace up and running.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;This repository has branches for each of the videos in the course. You can use the branch pop up menu in github to switch to a specific branch and take a look at the course at that stage, or you can add &lt;code&gt;/tree/BRANCH_NAME&lt;/code&gt; to the URL to go to the branch you want to access.&lt;/p&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;p&gt;The branches are structured to correspond to the videos in the course. The naming convention is &lt;code&gt;CHAPTER#_MOVIE#&lt;/code&gt;. As an example, the branch named &lt;code&gt;02_03&lt;/code&gt; corresponds to the second chapter and the third video in that chapter. Some branches will have a beginning and an end state. These are marked with the letters &lt;code&gt;b&lt;/code&gt; for &#34;beginning&#34; and &lt;code&gt;e&lt;/code&gt; for &#34;end&#34;. The &lt;code&gt;b&lt;/code&gt; branch contains the code as it is at the beginning of the movie. The &lt;code&gt;e&lt;/code&gt; branch contains the code as it is at the end of the movie. The &lt;code&gt;main&lt;/code&gt; branch holds the final state of the code when in the course.&lt;/p&gt; &#xA;&lt;p&gt;When switching from one exercise files branch to the next after making changes to the files, you may get a message like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;error: Your local changes to the following files would be overwritten by checkout:        [files]&#xA;Please commit your changes or stash them before you switch branches.&#xA;Aborting&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To resolve this issue:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Add changes to git using this command: git add .&#xA;Commit changes using this command: git commit -m &#34;some message&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To use these exercise files, you must have the following installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[list of requirements for course]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone this repository into your local machine using the terminal (Mac), CMD (Windows), or a GUI tool like SourceTree.&lt;/li&gt; &#xA; &lt;li&gt;[Course-specific instructions]&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Instructor&lt;/h3&gt; &#xA;&lt;p&gt;Tim McNamara&lt;/p&gt; &#xA;&lt;p&gt;Author, Software Architect&lt;/p&gt; &#xA;&lt;p&gt;Check out my other courses on &lt;a href=&#34;https://www.linkedin.com/learning/instructors/tim-mcnamara&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>