<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-28T01:37:20Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adoptium/containers</title>
    <updated>2024-07-28T01:37:20Z</updated>
    <id>tag:github.com,2024-07-28:/adoptium/containers</id>
    <link href="https://github.com/adoptium/containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repo containing the dockerfiles and scripts to produce the official eclipse-temurin containers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Containers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-temurin&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/_/eclipse-temurin?label=Docker%20Pulls&#34; alt=&#34;DockerPulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/_/eclipse-temurin&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/_/eclipse-temurin?label=Docker%20Stars&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/adoptium/containers&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/adoptium/containers/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the Dockerfiles for the official &lt;a href=&#34;https://adoptium.net&#34;&gt;Adoptium&lt;/a&gt; images of the Eclipse Temurin distribution (OpenJDK). These images are made available in Docker Hub.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for the usage README then please head to the &lt;a href=&#34;https://hub.docker.com/_/eclipse-temurin&#34;&gt;Official Docker Hub Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Images&lt;/h2&gt; &#xA;&lt;p&gt;In general, we support Alpine, UBI, Ubuntu and Windows containers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/docker-library/docs/tree/master/eclipse-temurin#simple-tags&#34;&gt;List of Supported Images By Tag&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update Policy&lt;/h2&gt; &#xA;&lt;p&gt;As these are official Docker Hub images, Docker Inc maintains the base image and so any critical CVEs in the base O/S layer gets updated by them in short order.&lt;/p&gt; &#xA;&lt;p&gt;Note that the eclipse-temurin images include &lt;code&gt;openssl&lt;/code&gt; as a prerequisite of the &lt;code&gt;wget&lt;/code&gt; and &lt;code&gt;ca-certificates&lt;/code&gt; packages but they are NOT included in the Ubuntu base image so updates to openssl will not necessarily trigger an rebuild to pick up fixes. In general, low severity vulnerabilities can wait until the next rebuild. See &lt;a href=&#34;https://github.com/docker-library/official-images/issues/16225#issuecomment-1942193224&#34;&gt;this comment&lt;/a&gt; for some details and also the &lt;a href=&#34;https://github.com/docker-library/faq/tree/master?tab=readme-ov-file#image-building&#34;&gt;docker-library FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Debian and Ubuntu images are generally also built periodically (about once a month) and may also be triggered by dockerhub if another high security vulnerability is detected, such as in openssl. Adoptium has no mechanism - other than putting an update to the Dockerfiles - to explicitly trigger a rebuild at dockerhub.&lt;/p&gt; &#xA;&lt;p&gt;For JDK version updates, we update the dockerfiles and release on a quarterly cadence Temurin releases a Patch Set Update (PSU).&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance of Dockerfiles&lt;/h2&gt; &#xA;&lt;p&gt;This section is for maintainers of the containers repository.&lt;/p&gt; &#xA;&lt;h3&gt;Hourly automated Job&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/.github/workflows/updater.yml&#34;&gt;Updater GitHub Action&lt;/a&gt; runs every 30 mins which triggers the &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; script to update the Dockerfiles by creating a Pull Request containing any changes.&lt;/p&gt; &#xA;&lt;h4&gt;generate_dockerfiles.py&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; is a python script which uses the jinja templates defined in &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/docker_templates/&#34;&gt;docker_templates&lt;/a&gt; to generate the docker updates. It uses the Adoptium API to fetch the latest artefacts for each release.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Release&lt;/h3&gt; &#xA;&lt;p&gt;During a release you can also run &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; manually by heading to The &lt;a href=&#34;https://github.com/adoptium/containers/actions/workflows/updater.yml&#34;&gt;GitHub Action definition&lt;/a&gt; and clicking the &lt;strong&gt;Run Workflow&lt;/strong&gt; button and making sure the &lt;code&gt;main&lt;/code&gt; (default) branch is selected, then click the next &lt;strong&gt;Run Workflow&lt;/strong&gt; button.&lt;/p&gt; &#xA;&lt;h3&gt;Review and Merge PR&lt;/h3&gt; &#xA;&lt;p&gt;Once the PR is created you can review that PR (which itself tests all of the Docker Images that we have generate configuration for).&lt;/p&gt; &#xA;&lt;h2&gt;Update Official Docker Hub Manifest&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve merged the PR, you can update the official Docker Hub manifest. This is done by running the following command in the containers repo on your local machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get the latest changes&#xA;git fetch --all&#xA;# Checkout the main branch&#xA;git checkout main&#xA;./dockerhub_doc_config_update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will create a file called &lt;em&gt;eclipse-temurin&lt;/em&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Create a new PR to replace the &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/eclipse-temurin&#34;&gt;Manifest on Docker Hub&lt;/a&gt; with the new contents of &lt;em&gt;eclipse-temurin&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/eclipse-temurin&#34;&gt;https://github.com/docker-library/official-images/blob/master/library/eclipse-temurin&lt;/a&gt; web UI&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;edit(pencil button)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remove its content&lt;/li&gt; &#xA; &lt;li&gt;Copy-paste &lt;em&gt;eclipse-temurin&lt;/em&gt;&#39;s content&lt;/li&gt; &#xA; &lt;li&gt;At the bottom of that edit screen&#39; Propose changes section &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;add &lt;strong&gt;title&lt;/strong&gt; e.g [eclipse-temurin: XXXXX]&lt;/li&gt; &#xA;   &lt;li&gt;add &lt;strong&gt;description&lt;/strong&gt; for the commit&lt;/li&gt; &#xA;   &lt;li&gt;click &lt;strong&gt;Propose Change&lt;/strong&gt; button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the next screen click on the &lt;strong&gt;Create Pull Request&lt;/strong&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;Once that PR has been created it will be automatically tested and reviewed by Docker Hub staff and eventually released.&lt;/p&gt; &#xA;&lt;h3&gt;Diff Output at Docker Hub&lt;/h3&gt; &#xA;&lt;p&gt;It can be useful to look at the &#34;Diff for XXX:&#34; output created by one of the Docker Hub GitHub Actions on the Pull Request. This output should not be read as a traditional PR (since Docker Hub bots do move things around, so you may see what looks like odd deletions) but as a sanity check to make sure you see the platforms/architectures that you expect.&lt;/p&gt;</summary>
  </entry>
</feed>