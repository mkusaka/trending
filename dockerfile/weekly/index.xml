<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T01:55:21Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dicksoi/Heroku</title>
    <updated>2022-08-21T01:55:21Z</updated>
    <id>tag:github.com,2022-08-21:/Dicksoi/Heroku</id>
    <link href="https://github.com/Dicksoi/Heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;由大佬开发的加密版。本人修改为vless+ws+tls。 性能至上、可扩展性空前，目标是全场景终极协议&lt;/p&gt;&lt;hr&gt;&lt;p&gt;申请Freenom域名的正确做法 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFXjm4iy26Mvv-ES?e=cCC6Wl&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFXjm4iy26Mvv-ES?e=cCC6Wl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CloudFlare Workers 被墙解决方案 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFK69rvLkNevKxyY?e=HegeOL&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFK69rvLkNevKxyY?e=HegeOL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Heroku搭建教程 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFOlWqW7k2FHnBnG?e=Q4sZl2&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFOlWqW7k2FHnBnG?e=Q4sZl2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;讨论群组 &lt;a href=&#34;https://t.me/herokuvless&#34;&gt;https://t.me/herokuvless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;v2ray-heroku&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/qq198812/Hreoku.git&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://heroku.com/deploy?template=&#34;&gt;https://heroku.com/deploy?template=&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;h3&gt;heroku上部署v2ray&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持VMess和VLESS两种协议&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用v2ray最新版构建&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;环境变量说明&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROTOCOL&lt;/td&gt; &#xA;   &lt;td&gt;vless&lt;br&gt;vmess（可选）&lt;/td&gt; &#xA;   &lt;td&gt;协议：vless+ws+tls或vmess+ws+tls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UUID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.uuidgenerator.net&#34; title=&#34;uuid在线生成器&#34;&gt;uuid在线生成器&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用户主ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CloudFlare Workers反代代码&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=&#34;appname.herokuapp.com&#34;;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const SingleDay = &#39;app0.herokuapp.com&#39;&#xA;const DoubleDay = &#39;app1.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        if (nd.getDate()%2) {&#xA;            host = SingleDay&#xA;        } else {&#xA;            host = DoubleDay&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers每五天轮换一遍式反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDate() % 5;&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4){&#xA;            host = Day4&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers一周轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;const Day5 = &#39;app5.herokuapp.com&#39;&#xA;const Day6 = &#39;app6.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDay();&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4) {&#xA;            host = Day4&#xA;        } else if (day === 5) {&#xA;            host = Day5&#xA;        } else if (day === 6) {&#xA;            host = Day6&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      url.hostname = &#39;app0.herokuapp.com&#39;&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    const day1 = &#39;app0.herokuapp.com&#39;&#xA;    const day2 = &#39;app1.herokuapp.com&#39;&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      let day = new Date()&#xA;      if (day.getDay() % 2) {&#xA;        url.hostname = day1&#xA;      } else {&#xA;        url.hostname = day2&#xA;      }&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;客户端配置&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - 别名: &#34;yourName&#34;&#xA;    协议: vless&#xA;    地址: yourName.workers.dev&#xA;    端口: 443&#xA;    用户id: yourUuid&#xA;    流控: xtls-rprx-direct&#xA;    加密: none&#xA;    伪装域名: yourName.workers.dev&#xA;    传输类型: ws&#xA;    路径: /&#xA;    传输层安全：tls   跳过证书验证：false&#xA;    SNI：yourName.workers.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;特别鸣谢：Misaka、rptec、DaoChen6大佬提供脚本、教程和思路&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nnn-training/adding-up</title>
    <updated>2022-08-21T01:55:21Z</updated>
    <id>tag:github.com,2022-08-21:/nnn-training/adding-up</id>
    <link href="https://github.com/nnn-training/adding-up" rel="alternate"></link>
    <summary type="html">&lt;p&gt;入門コースの3章4節 集計処理プログラム&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>databricks/containers</title>
    <updated>2022-08-21T01:55:21Z</updated>
    <id>tag:github.com,2022-08-21:/databricks/containers</id>
    <link href="https://github.com/databricks/containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample base images for Databricks Container Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Databricks Container Services - Example Containers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;latest&lt;/code&gt; tags have been removed on most images in favor of runtime-specific tags, with the exception being the &lt;code&gt;databricksruntime/standard&lt;/code&gt; image. If your build relied on an image tagged with &lt;code&gt;latest&lt;/code&gt;, please update it to match the runtime version of the cluster.&lt;/p&gt; &#xA;&lt;p&gt;This repository provides Dockerfiles for use with Databricks Container Services. These Dockerfiles are meant as a reference and a starting point, enabling users to build their own custom images to suit thier specific needs.&lt;/p&gt; &#xA;&lt;h2&gt;Warning: Runtime Incompatibility&lt;/h2&gt; &#xA;&lt;p&gt;The Dockerfiles on the master branch are currently not maintained to be backwards compatible with every Databricks Runtime version, and are not always updated for new versions.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.azuredatabricks.net/user-guide/clusters/custom-containers.html&#34;&gt;Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.databricks.com/user-guide/clusters/custom-containers.html&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/standard&#34;&gt;Standard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/minimal&#34;&gt;Minimal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/R&#34;&gt;R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/dbfsfuse&#34;&gt;DBFS FUSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/ssh&#34;&gt;SSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/gpu&#34;&gt;GPU&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DockerHub&lt;/h2&gt; &#xA;&lt;p&gt;The Databricks provided sample images have been published to &lt;a href=&#34;https://hub.docker.com/u/databricksruntime&#34;&gt;DockerHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How To Contribute to this Repo&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork and Clone this Repo, locally.&lt;/li&gt; &#xA; &lt;li&gt;Follow the example dockerfiles and ensure your docker file has liberal comments, explaining each step of your image.&lt;/li&gt; &#xA; &lt;li&gt;Be specific when you name your image. &lt;em&gt;Example:&lt;/em&gt; &lt;strong&gt;CentOS7.6RBundle&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Test your image and verify it works on a Databricks Cluster.&lt;/li&gt; &#xA; &lt;li&gt;Check it into the &lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/experimental&#34;&gt;experimental&lt;/a&gt; directory, in a folder specific to the OS. &lt;em&gt;Example:&lt;/em&gt; &lt;strong&gt;experimental/centos/CentOS7.6RBundle&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request and in the pull request indicate what version of Databricks Runtime you tested this with.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>