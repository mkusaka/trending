<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:08:51Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>keeganwitt/docker-gradle</title>
    <updated>2022-06-02T02:08:51Z</updated>
    <id>tag:github.com,2022-06-02:/keeganwitt/docker-gradle</id>
    <link href="https://github.com/keeganwitt/docker-gradle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images with Gradle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-gradle&lt;/h1&gt; &#xA;&lt;h2&gt;Supported tags and respective Dockerfile links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk8/Dockerfile&#34;&gt;jdk8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk11/Dockerfile&#34;&gt;jdk11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk11-alpine/Dockerfile&#34;&gt;jdk11-alpine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk17/Dockerfile&#34;&gt;jdk17, latest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk17-alpine/Dockerfile&#34;&gt;jdk17-alpine, alpine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk18/Dockerfile&#34;&gt;jdk18&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/raw/master/jdk18-alpine/Dockerfile&#34;&gt;jdk18-alpine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is Gradle?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gradle.org/&#34;&gt;Gradle&lt;/a&gt; is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.&lt;/p&gt; &#xA;&lt;h2&gt;How to use this image&lt;/h2&gt; &#xA;&lt;p&gt;If you are mounting a volume and the uid/gid running Docker is not &lt;em&gt;1000&lt;/em&gt;, you should run as user &lt;em&gt;root&lt;/em&gt; (&lt;code&gt;-u root&lt;/code&gt;). &lt;em&gt;root&lt;/em&gt; is also the default, so you can also simply not specify a user.&lt;/p&gt; &#xA;&lt;h3&gt;Building a Gradle project&lt;/h3&gt; &#xA;&lt;p&gt;Run this from the directory of the Gradle project you want to build.&lt;/p&gt; &#xA;&lt;h4&gt;Bash/Zsh&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -u gradle -v &#34;$PWD&#34;:/home/gradle/project -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;PowerShell&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -v &#34;${pwd}:/home/gradle/project&#34; -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Windows CMD&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -v &#34;%cd%:/home/gradle/project&#34; -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note the above command runs using uid/gid 1000 (user &lt;em&gt;gradle&lt;/em&gt;) to avoid running as root.&lt;/p&gt; &#xA;&lt;h3&gt;Reusing the Gradle cache&lt;/h3&gt; &#xA;&lt;p&gt;The local Gradle cache can be reused across containers by creating a volume and mounting it to &lt;em&gt;/home/gradle/.gradle&lt;/em&gt;. Note that sharing between concurrently running containers doesn&#39;t work currently (see &lt;a href=&#34;https://github.com/gradle/gradle/issues/851&#34;&gt;#851&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Also, currently it&#39;s &lt;a href=&#34;https://github.com/moby/moby/issues/3465&#34;&gt;not possible&lt;/a&gt; to override the volume declaration of the parent. So if you are using this image as a base image and want the Gradle cache to be written into the next layer, you will need to use a new user (or use the &lt;code&gt;--gradle-user-home&lt;/code&gt;/&lt;code&gt;-g&lt;/code&gt; argument) so that a new cache is created that isn&#39;t mounted to a volume.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker volume create --name gradle-cache&#xA;docker run --rm -u gradle -v gradle-cache:/home/gradle/.gradle -v &#34;$PWD&#34;:/home/gradle/project -w /home/gradle/project gradle:latest gradle &amp;lt;gradle-task&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Instructions for a new Gradle release&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;update.sh&lt;/code&gt; or &lt;code&gt;update.ps1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Commit and push the changes.&lt;/li&gt; &#xA; &lt;li&gt;Update &lt;a href=&#34;https://github.com/docker-library/official-images&#34;&gt;official-images&lt;/a&gt; (and &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;docs&lt;/a&gt; if appropriate).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/keeganwitt/docker-gradle/actions?query=workflow%3A%22GitHub+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/keeganwitt/docker-gradle/workflows/GitHub%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build status badge&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>docker-library/python</title>
    <updated>2022-06-02T02:08:51Z</updated>
    <id>tag:github.com,2022-06-02:/docker-library/python</id>
    <link href="https://github.com/docker-library/python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Official Image packaging for Python&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;https://github.com/docker-library/python&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Maintained by: &lt;a href=&#34;https://github.com/docker-library/python&#34;&gt;the Docker Community&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the Git repo of the &lt;a href=&#34;https://github.com/docker-library/official-images#what-are-official-images&#34;&gt;Docker &#34;Official Image&#34;&lt;/a&gt; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt; (not to be confused with any official &lt;code&gt;python&lt;/code&gt; image provided by &lt;code&gt;python&lt;/code&gt; upstream). See &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;full image description on Docker Hub&lt;/a&gt; is generated/maintained over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;the docker-library/docs repository&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/python&#34;&gt;the &lt;code&gt;python&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See a change merged here that doesn&#39;t show up on Docker Hub yet?&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the full official images change lifecycle, see &lt;a href=&#34;https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what&#34;&gt;the &#34;An image&#39;s source changed in Git, now what?&#34; FAQ entry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For outstanding &lt;code&gt;python&lt;/code&gt; image PRs, check &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Fpython&#34;&gt;PRs with the &#34;library/python&#34; label on the official-images repository&lt;/a&gt;. For the current &#34;source of truth&#34; for &lt;a href=&#34;https://hub.docker.com/_/python/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/python&#34;&gt;the &lt;code&gt;library/python&lt;/code&gt; file in the official-images repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/python/actions?query=workflow%3A%22GitHub+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/docker-library/python/GitHub%20CI/master?label=GitHub%20CI&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/update.sh/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/update.sh/job/python.svg?label=Automated%20update.sh&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Badges&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;(per-arch)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/amd64/job/python.svg?label=amd64&#34; alt=&#34;amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v5/job/python.svg?label=arm32v5&#34; alt=&#34;arm32v5 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v6/job/python.svg?label=arm32v6&#34; alt=&#34;arm32v6 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/python.svg?label=arm32v7&#34; alt=&#34;arm32v7 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/python.svg?label=arm64v8&#34; alt=&#34;arm64v8 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/i386/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/i386/job/python.svg?label=i386&#34; alt=&#34;i386 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/mips64le/job/python.svg?label=mips64le&#34; alt=&#34;mips64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/python.svg?label=ppc64le&#34; alt=&#34;ppc64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/s390x/job/python.svg?label=s390x&#34; alt=&#34;s390x build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/windows-amd64/job/python.svg?label=windows-amd64&#34; alt=&#34;windows-amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/put-shared/job/light/job/python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/put-shared/job/light/job/python.svg?label=put-shared&#34; alt=&#34;put-shared build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh --&gt;</summary>
  </entry>
  <entry>
    <title>yankils/Simple-DevOps-Project</title>
    <updated>2022-06-02T02:08:51Z</updated>
    <id>tag:github.com,2022-06-02:/yankils/Simple-DevOps-Project</id>
    <link href="https://github.com/yankils/Simple-DevOps-Project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple DevOps Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/valaxy-devops/?referralCode=8147A5CF4C8C7D9E253F&#34;&gt;&lt;img src=&#34;https://github.com/yankils/Simple-DevOps-Project/raw/master/Devops_course.PNG&#34; alt=&#34;Image&#34; title=&#34;DevOps Project - CI/CD with Jenkins Ansible Docker Kubernetes &#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This Repository is a collection of Implementation documents.&lt;/p&gt; &#xA;&lt;h3&gt;Purpose:&lt;/h3&gt; &#xA;&lt;p&gt;By following this repository you can able to setup a DevOps CI/CD Pipeline using&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Jenkins&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;Ansible&lt;/li&gt; &#xA; &lt;li&gt;Docker &amp;amp;&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Dicksoi/Heroku</title>
    <updated>2022-06-02T02:08:51Z</updated>
    <id>tag:github.com,2022-06-02:/Dicksoi/Heroku</id>
    <link href="https://github.com/Dicksoi/Heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;由大佬开发的加密版。本人修改为vless+ws+tls。 性能至上、可扩展性空前，目标是全场景终极协议&lt;/p&gt;&lt;hr&gt;&lt;p&gt;【金山文档】 申请Freenom域名的正确做法 &lt;a href=&#34;https://kdocs.cn/l/cmqB5kYnODzN&#34;&gt;https://kdocs.cn/l/cmqB5kYnODzN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;【金山文档】 CloudFlare Workers 被墙解决方案 &lt;a href=&#34;https://kdocs.cn/l/cp7ppdbff6Yw&#34;&gt;https://kdocs.cn/l/cp7ppdbff6Yw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;【金山文档】 Heroku搭建教程 &lt;a href=&#34;https://kdocs.cn/l/cuGOXoYA2DwO&#34;&gt;https://kdocs.cn/l/cuGOXoYA2DwO&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;讨论群组 &lt;a href=&#34;https://t.me/herokuvless&#34;&gt;https://t.me/herokuvless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;v2ray-heroku&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/qq198812/Hreoku.git&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://heroku.com/deploy?template=&#34;&gt;https://heroku.com/deploy?template=&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;h3&gt;heroku上部署v2ray&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持VMess和VLESS两种协议&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用v2ray最新版构建&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;环境变量说明&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROTOCOL&lt;/td&gt; &#xA;   &lt;td&gt;vless&lt;br&gt;vmess（可选）&lt;/td&gt; &#xA;   &lt;td&gt;协议：vless+ws+tls或vmess+ws+tls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UUID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.uuidgenerator.net&#34; title=&#34;uuid在线生成器&#34;&gt;uuid在线生成器&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用户主ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CloudFlare Workers反代代码&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=&#34;appname.herokuapp.com&#34;;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const SingleDay = &#39;app0.herokuapp.com&#39;&#xA;const DoubleDay = &#39;app1.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        if (nd.getDate()%2) {&#xA;            host = SingleDay&#xA;        } else {&#xA;            host = DoubleDay&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers每五天轮换一遍式反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDate() % 5;&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4){&#xA;            host = Day4&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers一周轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;const Day5 = &#39;app5.herokuapp.com&#39;&#xA;const Day6 = &#39;app6.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDay();&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4) {&#xA;            host = Day4&#xA;        } else if (day === 5) {&#xA;            host = Day5&#xA;        } else if (day === 6) {&#xA;            host = Day6&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      url.hostname = &#39;app0.herokuapp.com&#39;&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    const day1 = &#39;app0.herokuapp.com&#39;&#xA;    const day2 = &#39;app1.herokuapp.com&#39;&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      let day = new Date()&#xA;      if (day.getDay() % 2) {&#xA;        url.hostname = day1&#xA;      } else {&#xA;        url.hostname = day2&#xA;      }&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;客户端配置&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - 别名: &#34;yourName&#34;&#xA;    协议: vless&#xA;    地址: yourName.workers.dev&#xA;    端口: 443&#xA;    用户id: yourUuid&#xA;    流控: xtls-rprx-direct&#xA;    加密: none&#xA;    伪装域名: yourName.workers.dev&#xA;    传输类型: ws&#xA;    路径: /&#xA;    传输层安全：tls   跳过证书验证：false&#xA;    SNI：yourName.workers.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;特别鸣谢：Misaka、rptec、DaoChen6大佬提供脚本、教程和思路&lt;/p&gt;</summary>
  </entry>
</feed>