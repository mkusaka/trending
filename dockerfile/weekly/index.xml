<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:39:05Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jduncan-rva/container-fundamentals</title>
    <updated>2024-05-12T01:39:05Z</updated>
    <id>tag:github.com,2024-05-12:/jduncan-rva/container-fundamentals</id>
    <link href="https://github.com/jduncan-rva/container-fundamentals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code associated with Corise.com Conainer Fundamentals Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;This repository and any associated artifacts are designed to be used with the &lt;a href=&#34;https://corise.com/course/docker-and-container-fundamentals&#34;&gt;Container Fundamentals&lt;/a&gt; online course.&lt;/p&gt; &#xA;&lt;h2&gt;edge_server&lt;/h2&gt; &#xA;&lt;p&gt;A simple static website used to manage folks in the field and provide positive reinforcement. It&#39;s also used to help discuss how container images are constructed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>redhat-cop/rhel-bootc-examples</title>
    <updated>2024-05-12T01:39:05Z</updated>
    <id>tag:github.com,2024-05-12:/redhat-cop/rhel-bootc-examples</id>
    <link href="https://github.com/redhat-cop/rhel-bootc-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Examples repository for RHEL bootc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RHEL bootc examples&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the examples repository for RHEL bootc!&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;registry.redhat.io/rhel9/rhel-bootc:9.4&lt;/code&gt; container image represents a new mechanism to configure Red Hat Enterprise Linux.&lt;/p&gt; &#xA;&lt;p&gt;You can define your systems via a container build, generate disk images from the containers or deploy them directly via Anaconda or &lt;code&gt;bootc install&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thereafter, the systems can be upgraded in-place with transactional updates/rollbacks and maintained in a git-ops fashion, or with live changes applied out of band.&lt;/p&gt; &#xA;&lt;p&gt;This git repository contains just a few representative examples of configuring a Linux system via containers.&lt;/p&gt; &#xA;&lt;h2&gt;General guidance&lt;/h2&gt; &#xA;&lt;p&gt;A very significant percentage of Linux system configuration boils down to writing configuration files. For example, kernel parameters can be changed by writing to &lt;code&gt;/usr/lib/sysctl.d&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In general, configuration like this will Just Work when done in a container build.&lt;/p&gt; &#xA;&lt;p&gt;As a result, this example repository focuses on two things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Additional software patterns (especially for public clouds)&lt;/li&gt; &#xA; &lt;li&gt;Subtle and less obvious cases, such as SSH key management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Systems management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redhat-cop/rhel-bootc-examples/main/insights&#34;&gt;insights&lt;/a&gt; - Configure the booted container to register to Insights&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Systems configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redhat-cop/rhel-bootc-examples/main/container-auth&#34;&gt;container-auth&lt;/a&gt; - Currently, authentication file locations for &lt;code&gt;bootc&lt;/code&gt; and &lt;code&gt;podman&lt;/code&gt; different, and there are some subtleties in the &lt;code&gt;podman&lt;/code&gt; location; this writes a pull secret to a central location embedded in the container (underneath &lt;code&gt;/usr&lt;/code&gt; as part of the immutable state).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cloud and virtualization&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redhat-cop/rhel-bootc-examples/main/cloud-init&#34;&gt;aws, kubevirt, openstack&lt;/a&gt; - these all simply add cloud-init, which many use cases (but not all) will want.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/redhat-cop/rhel-bootc-examples/main/vmware&#34;&gt;vmware&lt;/a&gt; - Usage of this agent is often required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More examples&lt;/h2&gt; &#xA;&lt;p&gt;There are more community-contributed examples available in the &lt;a href=&#34;https://gitlab.com/fedora/bootc/examples&#34;&gt;upstream Fedora-bootc project&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>t4p-community/python-codespace</title>
    <updated>2024-05-12T01:39:05Z</updated>
    <id>tag:github.com,2024-05-12:/t4p-community/python-codespace</id>
    <link href="https://github.com/t4p-community/python-codespace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;How to use the Python Codespace&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository to your GitHub account. Name the forked repository as something similar to the new one in your class or your project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From the forked repository in your account, click on the green &lt;code&gt;Code&lt;/code&gt; button, then click on the &lt;code&gt;Codespaces&lt;/code&gt; tab. Next, click &lt;code&gt;Create codespace on main&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GitHub will create a new Codespace. Codespaces are browser-based programming environments built on VS Code and Docker Containers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>