<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-29T01:50:29Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ops-guru/og-helm-kafka-mm</title>
    <updated>2023-10-29T01:50:29Z</updated>
    <id>tag:github.com,2023-10-29:/ops-guru/og-helm-kafka-mm</id>
    <link href="https://github.com/ops-guru/og-helm-kafka-mm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Helm Chart to deploy and run Kafka MirrorMaker on Kubernetes - https://www.opsguru.io&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kafka MirrorMaker Helm Chart&lt;/h1&gt; &#xA;&lt;p&gt;Helm Chart for Production Grade Kafka MirrorMaker deployment on Kubernetes inspired by Confluent Helm charts (&lt;a href=&#34;https://github.com/confluentinc/cp-helm-charts&#34;&gt;https://github.com/confluentinc/cp-helm-charts&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Pre-requirements:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kubectl&lt;/li&gt; &#xA; &lt;li&gt;GKE Cluster (Kubernetes 1.9.2+)&lt;/li&gt; &#xA; &lt;li&gt;Helm 2.8.2+&lt;/li&gt; &#xA; &lt;li&gt;A healthy and accessible Kafka Cluster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Deployment on GKE:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;// create cluster&#xA;gcloud container clusters create test&#xA;gcloud container clusters get-credentials test&#xA;&#xA;//initialise helm&#xA;helm init&#xA;&#xA;// override helm issue with rbac&#xA;kubectl create serviceaccount --namespace kube-system tiller&#xA;kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller&#xA;kubectl patch deploy --namespace kube-system tiller-deploy -p &#39;{&#34;spec&#34;:{&#34;template&#34;:{&#34;spec&#34;:{&#34;serviceAccount&#34;:&#34;tiller&#34;}}}}&#39;&#xA;&#xA;//deploy mirrormaker&#xA;helm install --set kafka.consumerConfig.bootstrap\.servers=&#34;dev3-kafka:9092&#34;,kafka.producerConfig.bootstrap\.servers=&#34;dev4-kafka:9092&#34;  ./og-kafka-mm/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Image Source:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/u/opsguruhub/&#34;&gt;DockerHub -&amp;gt; opsguruhub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(Also included in &lt;code&gt;./docker-src&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Kafka MirrorMaker Deployment&lt;/h3&gt; &#xA;&lt;p&gt;The configuration parameters in this section control the resources requested and utilized by the &lt;code&gt;og-kafka-mm&lt;/code&gt; chart.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;replicaCount&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The number of Kafka Kafka MirrorMaker Servers.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Image&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Image of Kafka MirrorMaker.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;opsguruhub/og-kafka-mm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;imageTag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Image Tag of Kafka MirrorMaker.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;imagePullPolicy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Image Tag of Kafka MirrorMaker.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IfNotPresent&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;imagePullSecrets&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Secrets to be used for private registries.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Kafka MM JVM Heap Options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;heapOptions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The JVM Heap Options for Kafka MirrorMaker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;-Xms1024M -Xmx1024M&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources.requests.cpu&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The amount of CPU to request.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources.requests.memory&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The amount of memory to request.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources.requests.limit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The upper limit CPU usage for a Kafka Connect Pod.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources.requests.limit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The upper limit memory usage for a Kafka Connect Pod.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Annotations&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;podAnnotations&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Map of custom annotations to attach to the pod spec.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;JMX Configuration&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jmx.port&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The jmx port which JMX style metrics are exposed.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;9998&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jmx.enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether or not to install Prometheus JMX Exporter as a sidecar container and expose JMX metrics to Prometheus.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Prometheus JMX Exporter Configuration&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prometheus.jmx.image&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Image for Prometheus JMX Exporter container.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;solsson/kafka-prometheus-jmx-exporter@sha256&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prometheus.jmx.imageTag&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Image Tag for Prometheus JMX Exporter container.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prometheus.jmx.port&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JMX Exporter Port which exposes metrics in Prometheus format for scraping.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5556&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;prometheus.jmx.resources&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JMX Exporter resources configuration.&lt;/td&gt; &#xA;   &lt;td&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/ops-guru/og-helm-kafka-mm/master/values.yaml&#34;&gt;values.yaml&lt;/a&gt; for details&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Deployment Topology&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;nodeSelector&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dictionary containing key-value-pairs to match labels on nodes. When defined pods will only be scheduled on nodes, that have each of the indicated key-value pairs as labels. Further information can be found in the &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/assign-pod-node/&#34;&gt;Kubernetes documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tolerations&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Array containing taint references. When defined, pods can run on nodes, which would otherwise deny scheduling. Further information can be found in the &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/&#34;&gt;Kubernetes documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;h3&gt;Kafka&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kafka.topicWhitelist&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Regex for a topic whitelist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;.*&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kafka.numStreams&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of consumers to create&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;1&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kafka.overrideGroupId&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify custom group.id. Do not specify group.id in &lt;code&gt;kafka.consumerConfig&lt;/code&gt; - use this variable to override the default&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;.Release.Name&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kafka.consumerProperties&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kafka consumer settings. This should include &lt;code&gt;kafka.bootstrap.servers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kafka.producerProperties&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kafka producer settings. This should include &lt;code&gt;kafka.bootstrap.servers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>shipping-docker/php-app</title>
    <updated>2023-10-29T01:50:29Z</updated>
    <id>tag:github.com,2023-10-29:/shipping-docker/php-app</id>
    <link href="https://github.com/shipping-docker/php-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A containerized Laravel application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Containerized PHP Application&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shippingdocker.com&#34; title=&#34;learn how to use docker in dev and production&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/467411/18037593/12321512-6d4e-11e6-8514-e8454f4fd286.jpg&#34; alt=&#34;Shipping Docker video series&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This is an example of how you can quickly get up and running with Docker to develop a PHP application. This is a companion to the 🐳 &lt;a href=&#34;https://shippingdocker.com/&#34;&gt;Shipping Docker&lt;/a&gt; video series.&lt;/p&gt; &#xA;&lt;h2&gt;Teach me how to use it!&lt;/h2&gt; &#xA;&lt;p&gt;I have a mini-course that uses this example to show you how to get up and running in Docker for development!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sign up here to get an email with a link to the mini course to see how this works!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://shippingdocker.com/#signup&#34; title=&#34;see how to use Docker in development&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/467411/18333423/8ef22c66-7534-11e6-950d-850be40d9af0.png&#34; alt=&#34;Shipping Docker mini-course&#34; width=&#34;600&#34; height=&#34;200&#34; style=&#34;width: 600px; height: 200px;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;1. Get the files and spin up containers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get shipping-docker files&#xA;git clone https://github.com/shipping-docker/php-app.git&#xA;cd php-app&#xA;&#xA;# Start the app, run containers&#xA;#   in the background&#xA;# This will download and build the images&#xA;#   the first time you run this&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, we&#39;ve created containers and have them up and running. However, we didn&#39;t create a Laravel application to serve yet. We waited because we wanted a PHP image to get created so we can re-use it and run &lt;code&gt;composer&lt;/code&gt; commands.&lt;/p&gt; &#xA;&lt;h3&gt;2. Create a new Laravel application&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# From directory &#34;php-app&#34;&#xA;# Create a Laravel application&#xA;docker run -it --rm \&#xA;    -v $(pwd):/opt \&#xA;    -w /opt \&#xA;    --network=phpapp_appnet \&#xA;    shippingdocker/php \&#xA;    composer create-project laravel/laravel application&#xA;&#xA;docker run -it --rm \&#xA;    -v $(pwd)/application:/opt \&#xA;    -w /opt \&#xA;    --network=phpapp_appnet \&#xA;    shippingdocker/php \&#xA;    composer require predis/predis&#xA;&#xA;# Restart required to ensure&#xA;# app files shares correctly&#xA;docker-compose restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit the &lt;code&gt;application/.env&lt;/code&gt; file to have correct settings for our containers. Adjust the following as necessary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DB_CONNECTION=mysql&#xA;DB_HOST=db&#xA;DB_PORT=3306&#xA;DB_DATABASE=homestead&#xA;DB_USERNAME=homestead&#xA;DB_PASSWORD=secret&#xA;&#xA;BROADCAST_DRIVER=log&#xA;CACHE_DRIVER=redis&#xA;SESSION_DRIVER=redis&#xA;QUEUE_DRIVER=sync&#xA;&#xA;REDIS_HOST=redis&#xA;REDIS_PASSWORD=null&#xA;REDIS_PORT=6379&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you already have an application, you can move it to the &lt;code&gt;application&lt;/code&gt; directory here. Else, you can adjust the shared volume file paths within the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;If you edit the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, run &lt;code&gt;docker-compose down; docker-compose up -d&lt;/code&gt; to suck in the new Volume settings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you&#39;re not running Docker Mac/Windows (which run Docker in a small virtualized layer), you may need to set permissions on the shared directories that Laravel needs to write to. The following will let Laravel write the storage and bootstrap directories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# From directory php-app&#xA;chmod -R o+rw application/bootstrap application/storage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. (Optionally) Add Auth Scaffolding:&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;d like, we can add Laravel&#39;s Auth scaffolding as well. To do that, we need to run some Artisan commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Scaffold authentication views/routes&#xA;docker run -it --rm \&#xA;    -v $(pwd)/application:/opt \&#xA;    -w /opt \&#xA;    --network=phpapp_appnet \&#xA;    shippingdocker/php \&#xA;    php artisan make:auth&#xA;&#xA;# Run migrations for auth scaffolding&#xA;docker run -it --rm \&#xA;    -v $(pwd)/application:/opt \&#xA;    -w /opt \&#xA;    --network=phpapp_appnet \&#xA;    shippingdocker/php \&#xA;    php artisan migrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we can start using our application! Head to &lt;code&gt;http://localhost/register&lt;/code&gt; to see your Laravel application with auth scaffolding in place.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/467411/18038743/6ac84008-6d61-11e6-8aa6-30a776b59aaa.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yuuki-nya/chronocat-docker</title>
    <updated>2023-10-29T01:50:29Z</updated>
    <id>tag:github.com,2023-10-29:/yuuki-nya/chronocat-docker</id>
    <link href="https://github.com/yuuki-nya/chronocat-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本仓库是学习docker的打包与自动化构建，请下载后24小时内删除&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chronocat-docker&lt;/h1&gt; &#xA;&lt;p&gt;本仓库是学习docker的打包与自动化构建，请下载后24小时内删除&lt;/p&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;h3&gt;快速运行&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name chronocat-docker -e VNC_PASSWD=vncpasswd -p 5500:5500 -p 5900:5900 -p 6081:6081 -p 16530:16530 -v ${PWD}/config:/root/.chronocat/config yuukinya/chronocat-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中vncpasswd换成你的VNC密码&lt;/p&gt; &#xA;&lt;p&gt;或者下载代码中的docker-compose.yml，然后执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;数据固化（可选）&lt;/h3&gt; &#xA;&lt;p&gt;先完成上面的&lt;code&gt;快速运行&lt;/code&gt;，保证容器在运行状态&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 进入项目目录&#xA;mkdir data&#xA;# 复制数据到data目录&#xA;docker cp chronocat-docker:/root/.config/QQ ./data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果之前是docker run运行的，执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --name chronocat-docker -e VNC_PASSWD=vncpasswd -p 5500:5500 -p 5900:5900 -p 6081:6081 -p 16530:16530 -v ${PWD}/config:/root/.chronocat/config -v ${PWD}/data/QQ:/root/.config/QQ yuukinya/chronocat-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果之前是docker-compose运行的，编辑docker-compose.yml，把volumes下两行的开头注释去掉，保存，再执行&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;noVNC登陆&lt;/h3&gt; &#xA;&lt;p&gt;浏览器访问&lt;code&gt;http://服务器IP:6081&lt;/code&gt;，默认密码是&lt;code&gt;vncpasswd&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VNC登陆&lt;/h3&gt; &#xA;&lt;p&gt;使用VNC软件登陆&lt;code&gt;服务器IP:5900&lt;/code&gt;，默认密码是&lt;code&gt;vncpasswd&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;修改chronocat配置&lt;/h3&gt; &#xA;&lt;p&gt;修改当前目录/config/chronocat.yml，修改后重启容器即可&lt;/p&gt; &#xA;&lt;h3&gt;修改VNC密码&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec chronocat-docker sh -c &#34;x11vnc -storepasswd newpasswd /root/.vnc/passwd&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中newpasswd换成你的新密码，立即生效，无需重启容器&lt;/p&gt; &#xA;&lt;h2&gt;如何更新&lt;/h2&gt; &#xA;&lt;p&gt;本镜像一般不会只更新chronocat，如果需要只更新chronocat可以使用LiteLoaderQQNT自行更新&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;更新前请做好数据备份，比如数据固化&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;删除容器并删除镜像，下面是代码示例&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker rm -f chronocat-docker &amp;amp;&amp;amp; docker rmi yuukinya/chronocat-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重新pull最近镜像&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull yuukinya/chronocat-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;按照前面的使用教程操作&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;已知问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;容器重启后，桌面的任务栏可能会消失，如果触发了请不要缩小或者点叉关闭，建议保持在聊天的界面，再关闭VNC远程&lt;/li&gt; &#xA; &lt;li&gt;合并转发不可用在Linux版本&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 能固化已登陆的数据&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用docker的environment来指定VNC密码&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;h3&gt;2023-10-19&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新chronocat至0.0.54&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2023-10-17&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新chronocat至0.0.53&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2023-10-13&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新chronocat至0.0.52&lt;/li&gt; &#xA; &lt;li&gt;新增satori默认端口&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2023-10-3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新chronocat至0.0.48&lt;/li&gt; &#xA; &lt;li&gt;使用docker的environment来指定VNC密码 &lt;a href=&#34;https://github.com/yuuki-nya/chronocat-docker/issues/2&#34;&gt;Issue #2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;新增noVNC，使用浏览器来登陆VNC &lt;a href=&#34;https://github.com/yuuki-nya/chronocat-docker/issues/2&#34;&gt;Issue #2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/ZGLinus&#34;&gt;ZGLinus&lt;/a&gt;提供的思路和代码&lt;/p&gt; &#xA;&lt;h3&gt;2023-9-25&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新chronocat至0.0.46&lt;/li&gt; &#xA; &lt;li&gt;修改chronocat配置映射至宿主机&lt;/li&gt; &#xA; &lt;li&gt;固化已登陆数据 &lt;a href=&#34;https://github.com/yuuki-nya/chronocat-docker/issues/1&#34;&gt;Issue #1&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2023-9-22&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;初始版本&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>