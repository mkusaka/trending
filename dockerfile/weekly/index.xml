<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-17T02:01:57Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openai/codex-universal</title>
    <updated>2025-08-17T02:01:57Z</updated>
    <id>tag:github.com,2025-08-17:/openai/codex-universal</id>
    <link href="https://github.com/openai/codex-universal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Base docker image used in Codex environments&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;codex-universal&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;codex-universal&lt;/code&gt; is a reference implementation of the base Docker image available in &lt;a href=&#34;http://platform.openai.com/docs/codex&#34;&gt;OpenAI Codex&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repository is intended to help developers cutomize environments in Codex, by providing a similar image that can be pulled and run locally. This is not an identical environment but should help for debugging and development.&lt;/p&gt; &#xA;&lt;p&gt;For more details on environment setup, see &lt;a href=&#34;http://platform.openai.com/docs/codex&#34;&gt;OpenAI Codex&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The Docker image is available at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull ghcr.io/openai/codex-universal:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The below script shows how can you approximate the &lt;code&gt;setup&lt;/code&gt; environment in Codex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# See below for environment variable options.&#xA;# This script mounts the current directory similar to how it would get cloned in.&#xA;docker run --rm -it \&#xA;    -e CODEX_ENV_PYTHON_VERSION=3.12 \&#xA;    -e CODEX_ENV_NODE_VERSION=20 \&#xA;    -e CODEX_ENV_RUST_VERSION=1.87.0 \&#xA;    -e CODEX_ENV_GO_VERSION=1.23.8 \&#xA;    -e CODEX_ENV_SWIFT_VERSION=6.1 \&#xA;    -v $(pwd):/workspace/$(basename $(pwd)) -w /workspace/$(basename $(pwd)) \&#xA;    ghcr.io/openai/codex-universal:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;codex-universal&lt;/code&gt; includes setup scripts that look for &lt;code&gt;CODEX_ENV_*&lt;/code&gt; environment variables and configures the language version accordingly.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring language runtimes&lt;/h3&gt; &#xA;&lt;p&gt;The following environment variables can be set to configure runtime installation. Note that a limited subset of versions are supported (indicated in the table below):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Supported versions&lt;/th&gt; &#xA;   &lt;th&gt;Additional packages&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODEX_ENV_PYTHON_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python version to install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;3.10&lt;/code&gt;, &lt;code&gt;3.11.12&lt;/code&gt;, &lt;code&gt;3.12&lt;/code&gt;, &lt;code&gt;3.13&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pyenv&lt;/code&gt;, &lt;code&gt;poetry&lt;/code&gt;, &lt;code&gt;uv&lt;/code&gt;, &lt;code&gt;ruff&lt;/code&gt;, &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;mypy&lt;/code&gt;, &lt;code&gt;pyright&lt;/code&gt;, &lt;code&gt;isort&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODEX_ENV_NODE_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js version to install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;18&lt;/code&gt;, &lt;code&gt;20&lt;/code&gt;, &lt;code&gt;22&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;corepack&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODEX_ENV_RUST_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rust version to install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.83.0&lt;/code&gt;, &lt;code&gt;1.84.1&lt;/code&gt;, &lt;code&gt;1.85.1&lt;/code&gt;, &lt;code&gt;1.86.0&lt;/code&gt;, &lt;code&gt;1.87.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODEX_ENV_GO_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go version to install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.22.12&lt;/code&gt;, &lt;code&gt;1.23.8&lt;/code&gt;, &lt;code&gt;1.24.3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODEX_ENV_SWIFT_VERSION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Swift version to install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;5.10&lt;/code&gt;, &lt;code&gt;6.1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;What&#39;s included&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the packages specified in the table above, the following packages are also installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ruby&lt;/code&gt;: 3.2.3&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bun&lt;/code&gt;: 1.2.10&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;java&lt;/code&gt;: 21&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bazelisk&lt;/code&gt; / &lt;code&gt;bazel&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/openai/codex-universal/main/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; for the full details of installed packages.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sherifabdlnaby/elastdocker</title>
    <updated>2025-08-17T02:01:57Z</updated>
    <id>tag:github.com,2025-08-17:/sherifabdlnaby/elastdocker</id>
    <link href="https://github.com/sherifabdlnaby/elastdocker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê≥ Elastic Stack (ELK) v8+ on Docker with Compose. Pre-configured out of the box to enable Logging, Metrics, APM, Alerting, ML, and SIEM features. Up with a Single Command.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;500px&#34; src=&#34;https://user-images.githubusercontent.com/16992394/147855783-07b747f3-d033-476f-9e06-96a4a88a54c6.png&#34; /&gt; &lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;b&gt;Elast&lt;/b&gt;ic Stack on &lt;b&gt;Docker&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Preconfigured Security, Tools, and Self-Monitoring&lt;/h3&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Configured to be ready to be used for Log, Metrics, APM, Alerting, Machine Learning, and Security (SIEM) usecases.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Elastic%20Stack-8.10.2-blue?style=flat&amp;amp;logo=elasticsearch&#34; alt=&#34;Elastic Stack Version 7^^&#34; /&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/sherifabdlnaby/elastdocker?label=release&amp;amp;sort=semver&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sherifabdlnaby/elastdocker/actions/workflows/build.yml&#34;&gt; &lt;img src=&#34;https://github.com/sherifabdlnaby/elastdocker/actions/workflows/build.yml/badge.svg?sanitize=true&#34; /&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/Log4Shell-mitigated-brightgreen?style=flat&amp;amp;logo=java&#34; /&gt; &lt;/a&gt; &lt;a&gt; &lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;contributions welcome&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sherifabdlnaby/elastdocker/network&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/sherifabdlnaby/elastdocker.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/sherifabdlnaby/elastdocker/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/sherifabdlnaby/elastdocker.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34; /&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/sherifabdlnaby/elastdocker/blob/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34; /&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Elastic Stack (&lt;strong&gt;ELK&lt;/strong&gt;) Docker Composition, preconfigured with &lt;strong&gt;Security&lt;/strong&gt;, &lt;strong&gt;Monitoring&lt;/strong&gt;, and &lt;strong&gt;Tools&lt;/strong&gt;; Up with a Single Command.&lt;/p&gt; &#xA;&lt;p&gt;Suitable for Demoing, MVPs and small production deployments.&lt;/p&gt; &#xA;&lt;p&gt;Stack Version: &lt;a href=&#34;https://www.elastic.co/blog/whats-new-elastic-8-10-0&#34;&gt;8.10.2&lt;/a&gt; üéâ - Based on &lt;a href=&#34;https://www.docker.elastic.co/&#34;&gt;Official Elastic Docker Images&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can change Elastic Stack version by setting &lt;code&gt;ELK_VERSION&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; file and rebuild your images. Any version &amp;gt;= 8.0.0 is compatible with this template.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Main Features üìú&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configured as a Production Single Node Cluster. (With a multi-node cluster option for experimenting).&lt;/li&gt; &#xA; &lt;li&gt;Security Enabled By Default.&lt;/li&gt; &#xA; &lt;li&gt;Configured to Enable: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Logging &amp;amp; Metrics Ingestion &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Option to collect logs of all Docker Containers running on the host. via &lt;code&gt;make collect-docker-logs&lt;/code&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;APM&lt;/li&gt; &#xA;   &lt;li&gt;Alerting&lt;/li&gt; &#xA;   &lt;li&gt;Machine Learning&lt;/li&gt; &#xA;   &lt;li&gt;Anomaly Detection&lt;/li&gt; &#xA;   &lt;li&gt;SIEM (Security information and event management).&lt;/li&gt; &#xA;   &lt;li&gt;Enabling Trial License&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use Docker-Compose and &lt;code&gt;.env&lt;/code&gt; to configure your entire stack parameters.&lt;/li&gt; &#xA; &lt;li&gt;Persist Elasticsearch&#39;s Keystore and SSL Certifications.&lt;/li&gt; &#xA; &lt;li&gt;Self-Monitoring Metrics Enabled.&lt;/li&gt; &#xA; &lt;li&gt;Prometheus Exporters for Stack Metrics.&lt;/li&gt; &#xA; &lt;li&gt;Embedded Container Healthchecks for Stack Images.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;More points&lt;/h4&gt; &#xA;&lt;p&gt;And comparing Elastdocker and the popular &lt;a href=&#34;https://github.com/deviantony/docker-elk&#34;&gt;deviantony/docker-elk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand...&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;One of the most popular ELK on Docker repositories is the awesome &lt;a href=&#34;https://github.com/deviantony/docker-elk&#34;&gt;deviantony/docker-elk&lt;/a&gt;. Elastdocker differs from &lt;code&gt;deviantony/docker-elk&lt;/code&gt; in the following points.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Security enabled by default using Basic license, not Trial.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Persisting data by default in a volume.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Run in Production Mode (by enabling SSL on Transport Layer, and add initial master node settings).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Persisting Generated Keystore, and create an extendable script that makes it easier to recreate it every-time the container is created.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Parameterize credentials in .env instead of hardcoding &lt;code&gt;elastich:changeme&lt;/code&gt; in every component config.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Parameterize all other Config like Heap Size.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Add recommended environment configurations as Ulimits and Swap disable to the docker-compose.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Make it ready to be extended into a multinode cluster.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Configuring the Self-Monitoring and the Filebeat agent that ship ELK logs to ELK itself. (as a step to shipping it to a monitoring cluster in the future).&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Configured Prometheus Exporters.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;The Makefile that simplifies everything into some simple commands.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr /&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Docker 20.05 or higher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker-Compose 1.29 or higher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;4GB RAM (For Windows and MacOS make sure Docker&#39;s VM has more than 4GB+ memory.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the Repository&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sherifabdlnaby/elastdocker.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize Elasticsearch Keystore and TLS Self-Signed Certificates&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;For Linux&#39;s docker hosts only&lt;/strong&gt;. By default virtual memory &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html&#34;&gt;is not enough&lt;/a&gt; so run the next command as root &lt;code&gt;sysctl -w vm.max_map_count=262144&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Elastic Stack&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make elk           &amp;lt;OR&amp;gt;         $ docker-compose up -d&#x9;&#x9;&amp;lt;OR&amp;gt;&#x9;&#x9;$ docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visit Kibana at &lt;a href=&#34;https://localhost:5601&#34;&gt;https://localhost:5601&lt;/a&gt; or &lt;code&gt;https://&amp;lt;your_public_ip&amp;gt;:5601&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Default Username: &lt;code&gt;elastic&lt;/code&gt;, Password: &lt;code&gt;changeme&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Notice that Kibana is configured to use HTTPS, so you&#39;ll need to write &lt;code&gt;https://&lt;/code&gt; before &lt;code&gt;localhost:5601&lt;/code&gt; in the browser.&lt;/li&gt; &#xA;    &lt;li&gt;Modify &lt;code&gt;.env&lt;/code&gt; file for your needs, most importantly &lt;code&gt;ELASTIC_PASSWORD&lt;/code&gt; that setup your superuser &lt;code&gt;elastic&lt;/code&gt;&#39;s password, &lt;code&gt;ELASTICSEARCH_HEAP&lt;/code&gt; &amp;amp; &lt;code&gt;LOGSTASH_HEAP&lt;/code&gt; for Elasticsearch &amp;amp; Logstash Heap Size.&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Whatever your Host (e.g AWS EC2, Azure, DigitalOcean, or on-premise server), once you expose your host to the network, ELK component will be accessible on their respective ports. Since the enabled TLS uses a self-signed certificate, it is recommended to SSL-Terminate public traffic using your signed certificates.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üèÉüèª‚Äç‚ôÇÔ∏è To start ingesting logs, you can start by running &lt;code&gt;make collect-docker-logs&lt;/code&gt; which will collect your host&#39;s container logs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Additional Commands&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Expand&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h4&gt;To Start Monitoring and Prometheus Exporters&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make monitoring&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;To Ship Docker Container Logs to ELK&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make collect-docker-logs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;To Start &lt;strong&gt;Elastic Stack, Tools and Monitoring&lt;/strong&gt;&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code&gt;$ make all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;To Start 2 Extra Elasticsearch nodes (recommended for experimenting only)&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make nodes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;To Rebuild Images&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Bring down the stack.&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Reset everything, Remove all containers, and delete &lt;strong&gt;DATA&lt;/strong&gt;!&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ make prune&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some Configuration are parameterized in the &lt;code&gt;.env&lt;/code&gt; file. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ELASTIC_PASSWORD&lt;/code&gt;, user &lt;code&gt;elastic&lt;/code&gt;&#39;s password (default: &lt;code&gt;changeme&lt;/code&gt; &lt;em&gt;pls&lt;/em&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ELK_VERSION&lt;/code&gt; Elastic Stack Version (default: &lt;code&gt;8.10.2&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ELASTICSEARCH_HEAP&lt;/code&gt;, how much Elasticsearch allocate from memory (default: 1GB -good for development only-)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOGSTASH_HEAP&lt;/code&gt;, how much Logstash allocate from memory.&lt;/li&gt; &#xA;   &lt;li&gt;Other configurations which their such as cluster name, and node name, etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Elasticsearch Configuration in &lt;code&gt;elasticsearch.yml&lt;/code&gt; at &lt;code&gt;./elasticsearch/config&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Logstash Configuration in &lt;code&gt;logstash.yml&lt;/code&gt; at &lt;code&gt;./logstash/config/logstash.yml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Logstash Pipeline in &lt;code&gt;main.conf&lt;/code&gt; at &lt;code&gt;./logstash/pipeline/main.conf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Kibana Configuration in &lt;code&gt;kibana.yml&lt;/code&gt; at &lt;code&gt;./kibana/config&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setting Up Keystore&lt;/h3&gt; &#xA;&lt;p&gt;You can extend the Keystore generation script by adding keys to &lt;code&gt;./setup/keystore.sh&lt;/code&gt; script. (e.g Add S3 Snapshot Repository Credentials)&lt;/p&gt; &#xA;&lt;p&gt;To Re-generate Keystore:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make keystore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;‚ö†Ô∏è Elasticsearch HTTP layer is using SSL, thus mean you need to configure your elasticsearch clients with the &lt;code&gt;CA&lt;/code&gt; in &lt;code&gt;secrets/certs/ca/ca.crt&lt;/code&gt;, or configure client to ignore SSL Certificate Verification (e.g &lt;code&gt;--insecure&lt;/code&gt; in &lt;code&gt;curl&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adding Two Extra Nodes to the cluster will make the cluster depending on them and won&#39;t start without them again.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Makefile is a wrapper around &lt;code&gt;Docker-Compose&lt;/code&gt; commands, use &lt;code&gt;make help&lt;/code&gt; to know every command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Elasticsearch will save its data to a volume named &lt;code&gt;elasticsearch-data&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Elasticsearch Keystore (that contains passwords and credentials) and SSL Certificate are generated in the &lt;code&gt;./secrets&lt;/code&gt; directory by the setup command.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to run &lt;code&gt;make setup&lt;/code&gt; if you changed &lt;code&gt;ELASTIC_PASSWORD&lt;/code&gt; and to restart the stack afterwards.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Linux Users it&#39;s recommended to set the following configuration (run as &lt;code&gt;root&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sysctl -w vm.max_map_count=262144&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;By default, Virtual Memory &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html&#34;&gt;is not enough&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr /&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664447-c24c49f4-4282-4d6a-81a7-10743cfa384e.png&#34; alt=&#34;Intro&#34; /&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664848-d14f5e58-8f80-497d-a841-914c05a4b69c.png&#34; alt=&#34;Alerting&#34; /&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664562-d38e11ee-b033-4b91-80bd-3a866ad65f56.png&#34; alt=&#34;Maps&#34; /&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664695-5c1ed4a7-82f3-47a6-ab5c-b0ce41cc0fbe.png&#34; alt=&#34;ML&#34; /&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Working with Elastic APM&lt;/h1&gt; &#xA;&lt;p&gt;After completing the setup step, you will notice a container named apm-server which gives you deeper visibility into your applications and can help you to identify and resolve root cause issues with correlated traces, logs, and metrics.&lt;/p&gt; &#xA;&lt;h2&gt;Authenticating with Elastic APM&lt;/h2&gt; &#xA;&lt;p&gt;In order to authenticate with Elastic APM, you will need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The value of &lt;code&gt;ELASTIC_APM_SECRET_TOKEN&lt;/code&gt; defined in &lt;code&gt;.env&lt;/code&gt; file as we have &lt;a href=&#34;https://www.elastic.co/guide/en/apm/guide/master/secret-token.html&#34;&gt;secret token&lt;/a&gt; enabled by default&lt;/li&gt; &#xA; &lt;li&gt;The ability to reach port &lt;code&gt;8200&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install elastic apm client in your application e.g. for NodeJS based applications you need to install &lt;a href=&#34;https://www.elastic.co/guide/en/apm/agent/nodejs/master/typescript.html&#34;&gt;elastic-apm-node&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import the package in your application and call the start function, In case of NodeJS based application you can do the following:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;const apm = require(&#39;elastic-apm-node&#39;).start({&#xA;  serviceName: &#39;foobar&#39;,&#xA;  secretToken: process.env.ELASTIC_APM_SECRET_TOKEN,&#xA;  &#xA;  // https is enabled by default as per elastdocker configuration&#xA;  serverUrl: &#39;https://localhost:8200&#39;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure that the agent is started before you require any other modules in your Node.js application - i.e. before express, http, etc. as mentioned in &lt;a href=&#34;https://www.elastic.co/guide/en/apm/agent/nodejs/master/express.html#express-initialization&#34;&gt;Elastic APM Agent - NodeJS initialization&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For more details or other languages you can check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/apm/agent/index.html&#34;&gt;APM Agents in different languages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Monitoring The Cluster&lt;/h1&gt; &#xA;&lt;h3&gt;Via Self-Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;Head to Stack Monitoring tab in Kibana to see cluster metrics for all stack components.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664539-cc7e1a69-f1aa-4aca-93f6-7aedaabedd2c.png&#34; alt=&#34;Overview&#34; /&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/16992394/156664647-78cfe2af-489d-4c35-8963-9b0a46904cf7.png&#34; alt=&#34;Moniroting&#34; /&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;In Production, cluster metrics should be shipped to another dedicated monitoring cluster.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Via Prometheus Exporters&lt;/h3&gt; &#xA;&lt;p&gt;If you started Prometheus Exporters using &lt;code&gt;make monitoring&lt;/code&gt; command. Prometheus Exporters will expose metrics at the following ports.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Prometheus Exporter&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Port&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Recommended Grafana Dashboard&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;elasticsearch-exporter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;9114&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/4358&#34;&gt;Elasticsearch by Kristian Jensen&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logstash-exporter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;9304&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dpavlos/logstash-monitoring&#34;&gt;logstash-monitoring by dpavlos&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16992394/78685076-89a58900-78f1-11ea-959b-ce374fe51500.jpg&#34; alt=&#34;Metrics&#34; /&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sherifabdlnaby/elastdocker/master/LICENSE&#34;&gt;MIT License&lt;/a&gt; Copyright (c) 2022 Sherif Abdel-Naby&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;PR(s) are Open and Welcomed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>github-samples/planventure</title>
    <updated>2025-08-17T02:01:57Z</updated>
    <id>tag:github.com,2025-08-17:/github-samples/planventure</id>
    <link href="https://github.com/github-samples/planventure" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Planventure is a sample app used in GitHub for Beginners&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Getting Started üë©üèΩ‚Äçüíª&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repository to your GitHub account.&lt;/li&gt; &#xA; &lt;li&gt;Switch to the &lt;code&gt;api-start&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository to your local machine.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can find next steps in the README on the &lt;code&gt;api-start&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Build with Me + GitHub Copilot üöÄ&lt;/h2&gt; &#xA;&lt;p&gt;You can build along with me in this &lt;a href=&#34;https://www.youtube.com/watch?v=CJUbQ1QiBUY&#34;&gt;Youtube video&lt;/a&gt; or read this &lt;a href=&#34;https://github.blog/ai-and-ml/github-copilot/github-for-beginners-building-a-rest-api-with-copilot/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CJUbQ1QiBUY&#34;&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/a9e6f202-81c1-4b5e-9a77-6f03ee55938c&#34; alt=&#34;Build API Copilot&#34; /&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Planventure API üöÅ&lt;/h1&gt; &#xA;&lt;p&gt;A Flask-based REST API backend for the Planventure application.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Before you begin, ensure you have the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A GitHub account - &lt;a href=&#34;https://github.com&#34;&gt;sign up for FREE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Access to GitHub Copilot - &lt;a href=&#34;https://gh.io/gfb-copilot&#34;&gt;sign up for FREE&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;A Code Editor - &lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VS Code&lt;/a&gt; is recommended&lt;/li&gt; &#xA; &lt;li&gt;API Client (like &lt;a href=&#34;https://github.com/usebruno/bruno&#34;&gt;Bruno&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Git - &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Download &amp;amp; Install Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Happy Coding! üéâ&lt;/p&gt;</summary>
  </entry>
</feed>