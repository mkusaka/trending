<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:44:37Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aws-amplify/amplify-hosting</title>
    <updated>2022-11-06T01:44:37Z</updated>
    <id>tag:github.com,2022-11-06:/aws-amplify/amplify-hosting</id>
    <link href="https://github.com/aws-amplify/amplify-hosting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AWS Amplify Hosting provides a Git-based workflow for deploying and hosting fullstack serverless web applications.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://aws.amazon.com/amplify/hosting/&#34;&gt; &lt;img alt=&#34;Amplify&#34; src=&#34;https://github.com/aws-amplify/community/raw/master/src/assets/images/logo-dark.png&#34; width=&#34;60&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Amplify Hosting &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/jWVbPfC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/308323056592486420?logo=discord%22&#34; alt=&#34;DiscordChat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AWS Amplify Hosting provides a Git-based workflow for deploying and hosting fullstack serverless web applications. This repository provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/aws-amplify/amplify-hosting/raw/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt; for common issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-hosting/raw/master/CHANGELOG.md&#34;&gt;Release history&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tools and &lt;a href=&#34;https://github.com/aws-amplify/amplify-hosting/tree/master/images&#34;&gt;build images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RFCs for new feature launches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-hosting/issues&#34;&gt;Issue tracking&lt;/a&gt; - we also maintain an &lt;a href=&#34;https://forums.aws.amazon.com/forum.jspa?forumID=314&#34;&gt;AWS Forum&lt;/a&gt; but use this GitHub repository as our primary issue tracker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Report a bug üêõor feature request üí°&lt;a href=&#34;https://github.com/aws-amplify/amplify-hosting/issues/new/choose&#34;&gt;here&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Bookmarks&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://console.amplify.aws&#34;&gt;Connect your app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html&#34;&gt;Official documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/amplify/console/getting-started/&#34;&gt;Example projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amplify.aws/community/posts&#34;&gt;Community posts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Amplify projects&lt;/h3&gt; &#xA;&lt;p&gt;Looking for one of our other projects?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-adminui&#34;&gt;Amplify Admin UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-js/issues&#34;&gt;Amplify JS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-ios/issues&#34;&gt;Amplify iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-android/issues&#34;&gt;Amplify Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aws-amplify/amplify-cli/issues&#34;&gt;Amplify CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://amplify.aws/community&#34;&gt;Amplify Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-wireguard</title>
    <updated>2022-11-06T01:44:37Z</updated>
    <id>tag:github.com,2022-11-06:/linuxserver/docker-wireguard</id>
    <link href="https://github.com/linuxserver/docker-wireguard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;linuxserver/wireguard&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fwireguard&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fwireguard?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-wireguard/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-wireguard/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-wireguard%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard¬Æ&lt;/a&gt; is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;&lt;img src=&#34;https://www.wireguard.com/img/wireguard.svg?sanitize=true&#34; alt=&#34;wireguard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/wireguard:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases with support for compiling Wireguard modules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases based on Alpine &lt;em&gt;without&lt;/em&gt; support for compiling Wireguard modules&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;During container start, it will first check if the wireguard module is already installed and loaded. Kernels newer than 5.6 generally have the wireguard module built-in (along with some older custom kernels). However, the module may not be enabled. Make sure it is enabled prior to starting the container.&lt;/p&gt; &#xA;&lt;p&gt;If the kernel is not built-in, or installed on host, the container will check if the kernel headers are present (in &lt;code&gt;/usr/src&lt;/code&gt;) and if not, it will attempt to download the necessary kernel headers from the &lt;code&gt;ubuntu xenial/bionic&lt;/code&gt;, &lt;code&gt;debian/raspbian buster&lt;/code&gt; repos; then will attempt to compile and install the kernel module. If the kernel headers are not found in either &lt;code&gt;usr/src&lt;/code&gt; or in the repos mentioned, container will sleep indefinitely as wireguard cannot be installed.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on a debian/ubuntu based host with a custom or downstream distro provided kernel (ie. Pop!_OS), the container won&#39;t be able to install the kernel headers from the regular ubuntu and debian repos. In those cases, you can try installing the headers on the host via &lt;code&gt;sudo apt install linux-headers-$(uname -r)&lt;/code&gt; (if distro version) and then add a volume mapping for &lt;code&gt;/usr/src:/usr/src&lt;/code&gt;, or if custom built, map the location of the existing headers to allow the container to use host installed headers to build the kernel module (tested successful on Pop!_OS, ymmv).&lt;/p&gt; &#xA;&lt;p&gt;With regards to arm32/64 devices, Raspberry Pi 2-4 running the &lt;a href=&#34;https://ubuntu.com/download/raspberry-pi&#34;&gt;official ubuntu images&lt;/a&gt; or Raspbian Buster are supported out of the box. For all other devices and OSes, you can try installing the kernel headers on the host, and mapping &lt;code&gt;/usr/src:/usr/src&lt;/code&gt; and it may just work (no guarantees).&lt;/p&gt; &#xA;&lt;p&gt;This can be run as a server or a client, based on the parameters used.&lt;/p&gt; &#xA;&lt;h2&gt;Server Mode&lt;/h2&gt; &#xA;&lt;p&gt;If the environment variable &lt;code&gt;PEERS&lt;/code&gt; is set to a number or a list of strings separated by comma, the container will run in server mode and the necessary server and peer/client confs will be generated. The peer/client config qr codes will be output in the docker log. They will also be saved in text and png format under &lt;code&gt;/config/peerX&lt;/code&gt; in case &lt;code&gt;PEERS&lt;/code&gt; is a variable and an integer or &lt;code&gt;/config/peer_X&lt;/code&gt; in case a list of names was provided instead of an integer.&lt;/p&gt; &#xA;&lt;p&gt;Variables &lt;code&gt;SERVERURL&lt;/code&gt;, &lt;code&gt;SERVERPORT&lt;/code&gt;, &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; and &lt;code&gt;PEERDNS&lt;/code&gt; are optional variables used for server mode. Any changes to these environment variables will trigger regeneration of server and peer confs. Peer/client confs will be recreated with existing private/public keys. Delete the peer folders for the keys to be recreated along with the confs.&lt;/p&gt; &#xA;&lt;p&gt;To add more peers/clients later on, you increment the &lt;code&gt;PEERS&lt;/code&gt; environment variable or add more elements to the list and recreate the container.&lt;/p&gt; &#xA;&lt;p&gt;To display the QR codes of active peers again, you can use the following command and list the peer numbers as arguments: &lt;code&gt;docker exec -it wireguard /app/show-peer 1 4 5&lt;/code&gt; or &lt;code&gt;docker exec -it wireguard /app/show-peer myPC myPhone myTablet&lt;/code&gt; (Keep in mind that the QR codes are also stored as PNGs in the config folder).&lt;/p&gt; &#xA;&lt;p&gt;The templates used for server and peer confs are saved under &lt;code&gt;/config/templates&lt;/code&gt;. Advanced users can modify these templates and force conf generation by deleting &lt;code&gt;/config/wg0.conf&lt;/code&gt; and restarting the container.&lt;/p&gt; &#xA;&lt;h2&gt;Client Mode&lt;/h2&gt; &#xA;&lt;p&gt;Do not set the &lt;code&gt;PEERS&lt;/code&gt; environment variable. Drop your client conf into the config folder as &lt;code&gt;/config/wg0.conf&lt;/code&gt; and start the container.&lt;/p&gt; &#xA;&lt;p&gt;If you get IPv6 related errors in the log and connection cannot be established, edit the &lt;code&gt;AllowedIPs&lt;/code&gt; line in your peer/client wg0.conf to include only &lt;code&gt;0.0.0.0/0&lt;/code&gt; and not &lt;code&gt;::/0&lt;/code&gt;; and restart the container.&lt;/p&gt; &#xA;&lt;h2&gt;Road warriors, roaming and returning home&lt;/h2&gt; &#xA;&lt;p&gt;If you plan to use Wireguard both remotely and locally, say on your mobile phone, you will need to consider routing. Most firewalls will not route ports forwarded on your WAN interface correctly to the LAN out of the box. This means that when you return home, even though you can see the Wireguard server, the return packets will probably get lost.&lt;/p&gt; &#xA;&lt;p&gt;This is not a Wireguard specific issue and the two generally accepted solutions are NAT reflection (setting your edge router/firewall up in such a way as it translates internal packets correctly) or split horizon DNS (setting your internal DNS to return the private rather than public IP when connecting locally).&lt;/p&gt; &#xA;&lt;p&gt;Both of these approaches have positives and negatives however their setup is out of scope for this document as everyone&#39;s network layout and equipment will be different.&lt;/p&gt; &#xA;&lt;h2&gt;Maintaining local access to attached services&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;When routing via Wireguard from another container using the &lt;code&gt;service&lt;/code&gt; option in docker, you might lose access to the containers webUI locally. To avoid this, exclude the docker subnet from being routed via Wireguard by modifying your &lt;code&gt;wg0.conf&lt;/code&gt; like so (modifying the subnets as you require):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Interface]&#xA;PrivateKey = &amp;lt;private key&amp;gt;&#xA;Address = 9.8.7.6/32&#xA;DNS = 8.8.8.8&#xA;PostUp = DROUTE=$(ip route | grep default | awk &#39;{print $3}&#39;); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT&#xA;PreDown = HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Site-to-site VPN&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;Site-to-site VPN in server mode requires customizing the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;. Since &lt;code&gt;wg0.conf&lt;/code&gt; is autogenerated when server vars are changed, it is not recommended to edit it manually.&lt;/p&gt; &#xA;&lt;p&gt;In order to customize the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;, you can set an env var &lt;code&gt;SERVER_ALLOWEDIPS_PEER_&amp;lt;peer name or number&amp;gt;&lt;/code&gt; to the additional subnets you&#39;d like to add, comma separated and excluding the peer IP (ie. &lt;code&gt;&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt;). Replace &lt;code&gt;&amp;lt;peer name or number&amp;gt;&lt;/code&gt; with either the name or number of a peer (whichever is used in the &lt;code&gt;PEERS&lt;/code&gt; var).&lt;/p&gt; &#xA;&lt;p&gt;For instance &lt;code&gt;SERVER_ALLOWEDIPS_PEER_laptop=&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt; will result in the wg0.conf entry &lt;code&gt;AllowedIPs = 10.13.13.2,192.168.1.0/24,192.168.2.0/24&lt;/code&gt; for the peer named &lt;code&gt;laptop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that this var will only be considered when the confs are regenerated. Adding this var for an existing peer won&#39;t force a regeneration. You can delete wg0.conf and restart the container to force regeneration if necessary.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to set the necessary POSTUP and POSTDOWN rules in your client&#39;s peer conf for lan access.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  wireguard:&#xA;    image: lscr.io/linuxserver/wireguard:latest&#xA;    container_name: wireguard&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;      - SYS_MODULE&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - SERVERURL=wireguard.domain.com #optional&#xA;      - SERVERPORT=51820 #optional&#xA;      - PEERS=1 #optional&#xA;      - PEERDNS=auto #optional&#xA;      - INTERNAL_SUBNET=10.13.13.0 #optional&#xA;      - ALLOWEDIPS=0.0.0.0/0 #optional&#xA;      - LOG_CONFS=true #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;      - /lib/modules:/lib/modules&#xA;    ports:&#xA;      - 51820:51820/udp&#xA;    sysctls:&#xA;      - net.ipv4.conf.all.src_valid_mark=1&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=wireguard \&#xA;  --cap-add=NET_ADMIN \&#xA;  --cap-add=SYS_MODULE \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e SERVERURL=wireguard.domain.com `#optional` \&#xA;  -e SERVERPORT=51820 `#optional` \&#xA;  -e PEERS=1 `#optional` \&#xA;  -e PEERDNS=auto `#optional` \&#xA;  -e INTERNAL_SUBNET=10.13.13.0 `#optional` \&#xA;  -e ALLOWEDIPS=0.0.0.0/0 `#optional` \&#xA;  -e LOG_CONFS=true `#optional` \&#xA;  -p 51820:51820/udp \&#xA;  -v /path/to/appdata/config:/config \&#xA;  -v /lib/modules:/lib/modules \&#xA;  --sysctl=&#34;net.ipv4.conf.all.src_valid_mark=1&#34; \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/wireguard:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 51820/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;wireguard port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERURL=wireguard.domain.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External IP or domain name for docker host. Used in server mode. If set to &lt;code&gt;auto&lt;/code&gt;, the container will try to determine and set the external IP automatically&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERPORT=51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External port for docker host. Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERS=1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of peers to create confs for. Required for server mode. Can also be a list of names: &lt;code&gt;myPC,myPhone,myTablet&lt;/code&gt; (alphanumeric only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERDNS=auto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS server set in peer/client configs (can be set as &lt;code&gt;8.8.8.8&lt;/code&gt;). Used in server mode. Defaults to &lt;code&gt;auto&lt;/code&gt;, which uses wireguard docker host&#39;s DNS via included CoreDNS forward.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e INTERNAL_SUBNET=10.13.13.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ALLOWEDIPS=0.0.0.0/0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: &#39;0.0.0.0/0, ::0/0&#39; This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server&#39;s WG ip, such as 10.13.13.1.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e LOG_CONFS=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generated QR codes will be displayed in the docker log. Set to &lt;code&gt;false&lt;/code&gt; to skip log output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /lib/modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maps host&#39;s modules folder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--sysctl=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for client mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=wireguard&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=wireguard&amp;amp;query=%24.mods%5B%27wireguard%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it wireguard /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-wireguard/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once wireguard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-wireguard.git&#xA;cd docker-wireguard&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/wireguard:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.10.22:&lt;/strong&gt; - Better handle unsupported peer names. Improve logging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.10.22:&lt;/strong&gt; - Add Alpine branch. Optimize wg and coredns services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.10.22:&lt;/strong&gt; - Switch back to iptables-legacy due to issues on some hosts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.22:&lt;/strong&gt; - Rebase to Jammy. Upgrade to s6v3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.05.22:&lt;/strong&gt; - Improve NAT handling in server mode when multiple ethernet devices are present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.04.22:&lt;/strong&gt; - Add pre-shared key support. Automatically added to all new peer confs generated, existing ones are left without to ensure no breaking changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.04.22:&lt;/strong&gt; - Rebase to Ubuntu Focal. Add &lt;code&gt;LOG_CONFS&lt;/code&gt; env var. Remove deprecated &lt;code&gt;add-peer&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.10.21:&lt;/strong&gt; - Add site-to-site vpn support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.21:&lt;/strong&gt; - Fix bug related to changing internal subnet and named peer confs not updating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.20:&lt;/strong&gt; - Disable CoreDNS in client mode, or if port 53 is already in use in server mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - Allow to specify a list of names as PEERS and add ALLOWEDIPS environment variable. Also, add peer name/id to each one of the peer sections in wg0.conf. Important: Existing users need to delete &lt;code&gt;/config/templates/peer.conf&lt;/code&gt; and restart&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.09.20:&lt;/strong&gt; - Cleaning service binding example to have accurate PreDown script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.08.20:&lt;/strong&gt; - Replace resolvconf with openresolv due to dns issues when a client based on this image is connected to a server also based on this image. Add IPv6 info to readme. Display kernel version in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.07.20:&lt;/strong&gt; - Update Coredns config to detect dns loops (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.07.20:&lt;/strong&gt; - Update Coredns config to prevent issues with non-user-defined bridge networks (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.07.20:&lt;/strong&gt; - Add Debian updates and security repos for headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.06.20:&lt;/strong&gt; - Simplify module tests, prevent iptables issues from resulting in false negatives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.06.20:&lt;/strong&gt; - Add support for Ubuntu Focal (20.04) kernels. Compile wireguard tools and kernel module instead of using the ubuntu packages. Make module install optional. Improve verbosity in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add support for 64bit raspbian.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.04.20:&lt;/strong&gt; - Add Buster/Stretch backports repos for Debian. Tested with OMV 5 and OMV 4 (on kernel 4.19.0-0.bpo.8-amd64).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.04.20:&lt;/strong&gt; - Fix typo in client mode conf existence check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.04.20:&lt;/strong&gt; - Fix bug that forced conf recreation on every start.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.04.20:&lt;/strong&gt; - Add arm32/64 builds and enable multi-arch (rpi4 with ubuntu and raspbian buster tested). Add CoreDNS for &lt;code&gt;PEERDNS=auto&lt;/code&gt; setting. Update the &lt;code&gt;add-peer&lt;/code&gt;/&lt;code&gt;show-peer&lt;/code&gt; scripts to utilize the templates and the &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; var (previously missed, oops).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.20:&lt;/strong&gt; - Add &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; variable to prevent subnet clashes. Add templates for server and peer confs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Add &lt;code&gt;show-peer&lt;/code&gt; script and include info on host installed headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;31.03.20:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>P3TERX/Aria2-Pro-Docker</title>
    <updated>2022-11-06T01:44:37Z</updated>
    <id>tag:github.com,2022-11-06:/P3TERX/Aria2-Pro-Docker</id>
    <link href="https://github.com/P3TERX/Aria2-Pro-Docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aria2 Pro | A perfect Aria2 Docker image | Êõ¥Â•ΩÁî®ÁöÑ Aria2 Docker ÂÆπÂô®ÈïúÂÉè&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://p3terx.com/archives/docker-aria2-pro.html&#34;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Aria2 Pro Docker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Docker/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/P3TERX/Aria2-Pro-Docker?style=flat-square&amp;amp;label=LICENSE&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Docker/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/P3TERX/Aria2-Pro-Docker.svg?style=flat-square&amp;amp;label=Stars&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Docker/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/P3TERX/Aria2-Pro-Docker.svg?style=flat-square&amp;amp;label=Forks&amp;amp;logo=github&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/p3terx/aria2-pro&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/p3terx/aria2-pro.svg?style=flat-square&amp;amp;label=Stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/p3terx/aria2-pro&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/p3terx/aria2-pro.svg?style=flat-square&amp;amp;label=Pulls&amp;amp;logo=docker&amp;amp;color=orange&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/P3TERX/Aria2-Pro-Docker/Docker%20images%20build%20test?label=Actions&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A perfect Aria2 Docker image. Out of the box, just add download tasks and don&#39;t need to think about anything else.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported platforms: &lt;code&gt;amd64&lt;/code&gt;, &lt;code&gt;i386&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, &lt;code&gt;arm/v7&lt;/code&gt;, &lt;code&gt;arm/v6&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full Function: &lt;code&gt;Async DNS&lt;/code&gt;, &lt;code&gt;BitTorrent&lt;/code&gt;, &lt;code&gt;Firefox3 Cookie&lt;/code&gt;, &lt;code&gt;GZip&lt;/code&gt;, &lt;code&gt;HTTPS&lt;/code&gt;, &lt;code&gt;Message Digest&lt;/code&gt;, &lt;code&gt;Metalink&lt;/code&gt;, &lt;code&gt;XML-RPC&lt;/code&gt;, &lt;code&gt;SFTP&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;max-connection-per-server&lt;/code&gt; unlimited.&lt;/li&gt; &#xA; &lt;li&gt;retry on slow speed (&lt;code&gt;lowest-speed-limit&lt;/code&gt;) and connection close&lt;/li&gt; &#xA; &lt;li&gt;High BT download rate and speed&lt;/li&gt; &#xA; &lt;li&gt;Get BitTorrent tracker automatically&lt;/li&gt; &#xA; &lt;li&gt;Download error automatically delete files&lt;/li&gt; &#xA; &lt;li&gt;Download cancel automatically delete files&lt;/li&gt; &#xA; &lt;li&gt;Automatically clear &lt;code&gt;.aria2&lt;/code&gt; suffix files&lt;/li&gt; &#xA; &lt;li&gt;Automatically clear &lt;code&gt;.torrent&lt;/code&gt; suffix files&lt;/li&gt; &#xA; &lt;li&gt;No lost task progress, no repeated downloads&lt;/li&gt; &#xA; &lt;li&gt;And more powerful features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Docker CLI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No matter what architecture platform is used, just use the following command to start the container ( Just need to replace the &lt;code&gt;&amp;lt;TOKEN&amp;gt;&lt;/code&gt; field ):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    --name aria2-pro \&#xA;    --restart unless-stopped \&#xA;    --log-opt max-size=1m \&#xA;    -e PUID=$UID \&#xA;    -e PGID=$GID \&#xA;    -e UMASK_SET=022 \&#xA;    -e RPC_SECRET=&amp;lt;TOKEN&amp;gt; \&#xA;    -e RPC_PORT=6800 \&#xA;    -p 6800:6800 \&#xA;    -e LISTEN_PORT=6888 \&#xA;    -p 6888:6888 \&#xA;    -p 6888:6888/udp \&#xA;    -v $PWD/aria2-config:/config \&#xA;    -v $PWD/aria2-downloads:/downloads \&#xA;    p3terx/aria2-pro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Then you need a WebUI for control, such as &lt;a href=&#34;https://github.com/mayswind/AriaNg&#34;&gt;AriaNg&lt;/a&gt;. &lt;a href=&#34;http://ariang.mayswind.net/latest&#34;&gt;This link&lt;/a&gt; is provided by the developer and can be used directly. Or use Docker to deploy it yourself:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    --name ariang \&#xA;    --log-opt max-size=1m \&#xA;    --restart unless-stopped \&#xA;    -p 6880:6880 \&#xA;    p3terx/ariang&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TIPS:&lt;/strong&gt; It is important for the firewall to open ports.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Docker/raw/master/docker-compose.yml&#34;&gt;Compose file&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget git.io/aria2-pro.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit Compose file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;vim aria2-pro.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compose up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose -f aria2-pro.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/unraid-docker-templates&#34;&gt;Docker templates for UNRAID&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://p3terx.com/archives/synology-nas-docker-advanced-tutorial-deploy-aria2-pro.html&#34;&gt;Docker Tutorial for Synology DSM (Chinese)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e PUID=$UID&lt;/code&gt;&lt;br&gt;&lt;code&gt;-e PGID=$GID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bind UID and GID to the container, which means you can use a non-root user to manage downloaded files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e UMASK_SET=022&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;For umask setting of Aria2, optional , default if left unset is &lt;code&gt;022&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e RPC_SECRET=&amp;lt;TOKEN&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set RPC secret authorization token. Default: &lt;code&gt;P3TERX&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e RPC_PORT=6800&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set RPC listen port.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p 6800:6800&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bind RPC listen port.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e LISTEN_PORT=6888&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set TCP/UDP port number for BitTorrent/DHT listen.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p 6888:6888&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bind BT listen port (TCP).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-p 6888:6888/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bind DHT lisen port (UDP).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v &amp;lt;PATH&amp;gt;:/config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-v &amp;lt;PATH&amp;gt;:/downloads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Location of downloads on disk.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e DISK_CACHE=&amp;lt;SIZE&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set up disk cache. SIZE can include &lt;code&gt;K&lt;/code&gt; or &lt;code&gt;M&lt;/code&gt; (1K = 1024, 1M = 1024K), e.g &lt;code&gt;64M&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e IPV6_MODE=&amp;lt;BOOLEAN&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to enable IPv6 support for Aria2. Optional: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Set the options &lt;code&gt;disable-ipv6=false&lt;/code&gt; and &lt;code&gt;enable-dht6=true&lt;/code&gt; in the configuration file(aria2.conf).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e UPDATE_TRACKERS=&amp;lt;BOOLEAN&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Whether to update BT Trackers List automatically. Optional: &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;flase&lt;/code&gt;, default if left unset is &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e CUSTOM_TRACKER_URL=&amp;lt;URL&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Custom BT Trackers List URL. If not set, it will be get from &lt;a href=&#34;https://trackerslist.com/all_aria2.txt&#34;&gt;https://trackerslist.com/all_aria2.txt&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-e TZ=Asia/Shanghai&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use e.g. &lt;code&gt;Asia/Shanghai&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Advanced&lt;/h2&gt; &#xA;&lt;p&gt;I am working hard on my English, so this part may be explained in detail later. If you can read Chinese, read the details in &lt;a href=&#34;https://p3terx.com/archives/docker-aria2-pro.html&#34;&gt;my blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/aria2.conf&#34;&gt;P3TERX/aria2.conf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Core&#34;&gt;P3TERX/Aria2-Pro-Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/just-containers/s6-overlay&#34;&gt;just-containers/s6-overlay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XIU2/TrackersListCollection&#34;&gt;XIU2/TrackersListCollection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/P3TERX/Aria2-Pro-Docker/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt; ¬© P3TERX&lt;/p&gt;</summary>
  </entry>
</feed>