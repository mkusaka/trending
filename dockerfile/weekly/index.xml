<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-20T01:46:06Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NotHarshhaa/Kubernetes</title>
    <updated>2023-08-20T01:46:06Z</updated>
    <id>tag:github.com,2023-08-20:/NotHarshhaa/Kubernetes</id>
    <link href="https://github.com/NotHarshhaa/Kubernetes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;𝙰𝚕𝚕 𝚒𝚗 𝙾𝚗𝚎 𝚋𝚞𝚍𝚍𝚕𝚎 𝚘𝚏 𝙺𝚞𝚋𝚎𝚛𝚗𝚎𝚝𝚎𝚜&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;𝘼𝙡𝙡 𝙞𝙣 𝙊𝙣𝙚 𝙗𝙪𝙙𝙙𝙡𝙚 𝙤𝙛 𝙆𝙪𝙗𝙚𝙧𝙣𝙚𝙩𝙚𝙨&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://imgur.com/2qnNcGO.png&#34; alt=&#34;Kubernetes&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;This Repository includes:-&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Deployment manifest files&lt;/li&gt; &#xA; &lt;li&gt;Jenkins deployments &amp;amp; confiqurations&lt;/li&gt; &#xA; &lt;li&gt;Kubernetes Ingress files&lt;/li&gt; &#xA; &lt;li&gt;Realtime projects manifest files&lt;/li&gt; &#xA; &lt;li&gt;Helm charts for any application&lt;/li&gt; &#xA; &lt;li&gt;End to End Manifest files for any applications&lt;/li&gt; &#xA; &lt;li&gt;Includes AWS ELK Stack (Elasticsearch, Logstash, Kibana)&lt;/li&gt; &#xA; &lt;li&gt;Network service confiqirations templates&lt;/li&gt; &#xA; &lt;li&gt;Application monitoring templates for any applications&lt;/li&gt; &#xA; &lt;li&gt;Complete application launch manifest files for realtime projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hit the Star! ⭐&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;If you are planning to use this repo for learning, please hit the star. Thanks!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Author by &lt;a href=&#34;https://github.com/NotHarshhaa&#34;&gt;Harshhaa Reddy&lt;/a&gt;&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>LandmakTechnology/metric-server</title>
    <updated>2023-08-20T01:46:06Z</updated>
    <id>tag:github.com,2023-08-20:/LandmakTechnology/metric-server</id>
    <link href="https://github.com/LandmakTechnology/metric-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Landmark Technology - &lt;a href=&#34;http://www.mylandmarktech.com&#34;&gt;www.mylandmarktech.com&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;TEL: +1 437 215 2483 - TEL: +1 437 215 2483&lt;/h1&gt; &#xA;&lt;h1&gt;Kubernetes Metrics Server&lt;/h1&gt; &#xA;&lt;p&gt;Metrics-server aggregates resource consumption data like CPU and memory usage for Kubernetes nodes, pods and containers. These metrics are collected from the API exposed by the Kubelet on each node.&lt;/p&gt; &#xA;&lt;p&gt;The metrics server is commonly used by other Kubernetes add ons, such as the Horizontal Pod Autoscaler or the Kubernetes Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;It is not deployed by default.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;In order to deploy metrics-server in your kubernetes master machine clone &lt;a href=&#34;https://github.com/LandmakTechnology/metric-server.git&#34;&gt;https://github.com/LandmakTechnology/metric-server.git&lt;/a&gt; and run the commands below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# clone manifest repo&#xA;git clone https://github.com/LandmakTechnology/metric-server&#xA;# deploy metricAPI&#xA;kubectl apply -f metric-server/metrics-server-deploy.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Display node metrics&#xA; kubectl top nodes&#xA;&#xA;# Display pod metrics&#xA; kubectl top pods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;p&gt;You can find the user guide in &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/&#34;&gt;the official Kubernetes documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The detailed design of the project can be found in the following docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/resource-metrics-api.md&#34;&gt;Metrics API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/metrics-server.md&#34;&gt;Metrics Server&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/metrics-server.git&#34;&gt;Metrics Server Git Hub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the broader view of monitoring in Kubernetes take a look into &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/monitoring_architecture.md&#34;&gt;Monitoring architecture&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LondheShubham153/python-multistage-docker</title>
    <updated>2023-08-20T01:46:06Z</updated>
    <id>tag:github.com,2023-08-20:/LondheShubham153/python-multistage-docker</id>
    <link href="https://github.com/LondheShubham153/python-multistage-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Multistage Dockerfile Example for Flask Application&lt;/h1&gt; &#xA;&lt;p&gt;This repository demonstrates the use of a multistage Dockerfile to build and package a Flask backend application. Multistage builds are used to optimize the final Docker image size and improve security.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#dockerfile-explanation&#34;&gt;Dockerfile Explanation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Modern application deployments often involve containerizing both the backend and frontend components. This project focuses on using a multistage Dockerfile to efficiently build a Flask backend application, creating a lightweight and secure Docker image.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker: You need to have Docker installed on your machine. Visit &lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&#39;s official website&lt;/a&gt; to download and install Docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/your-username/multistage-flask-app.git&#xA;cd multistage-flask-app&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t my-flask-app .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the Docker container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 5000:5000 my-flask-app&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Access the Flask application in your web browser at &lt;code&gt;http://localhost:5000&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Dockerfile Explanation&lt;/h2&gt; &#xA;&lt;p&gt;The multistage Dockerfile consists of two build stages, each optimized for a specific purpose.&lt;/p&gt; &#xA;&lt;h3&gt;Stage 1: Build the Flask Application&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a Python base image to build the Flask backend.&lt;/li&gt; &#xA; &lt;li&gt;Copy the backend source code and install dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Build the Flask application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stage 2: Final Image&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a minimal Python base image for the final image.&lt;/li&gt; &#xA; &lt;li&gt;Copy the built backend from Stage 1.&lt;/li&gt; &#xA; &lt;li&gt;Expose the necessary port and start the Flask application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you find any issues or want to improve this project, please open an issue or submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/LondheShubham153/python-multistage-docker/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>