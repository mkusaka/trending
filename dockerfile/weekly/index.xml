<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-24T01:49:06Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>karaage0703/open-interpreter-docker</title>
    <updated>2023-09-24T01:49:06Z</updated>
    <id>tag:github.com,2023-09-24:/karaage0703/open-interpreter-docker</id>
    <link href="https://github.com/karaage0703/open-interpreter-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;open interpreter docker environment&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;open-interpreter-docker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/KillianLucas/open-interpreter&#34;&gt;Open Interpreter&lt;/a&gt; docker environment&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Execute following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd &amp;amp;&amp;amp; git clone https://github.com/karaage0703/open-interpreter-docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Simple&lt;/h2&gt; &#xA;&lt;h3&gt;Docker build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/open-interpreter-docker&#xA;$ docker build -t open-interpreter-simple ./container-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/open-interpreter-docker&#xA;$ docker run -it --rm -v $(pwd):/root open-interpreter-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run app&lt;/h3&gt; &#xA;&lt;p&gt;Execute following command in container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;root@hostname:~# interpreter -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And enjoy open interpreter&lt;/p&gt; &#xA;&lt;h2&gt;GUI&lt;/h2&gt; &#xA;&lt;h3&gt;Docker build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/open-interpreter-docker&#xA;$ docker build -t open-interpreter-gui ./container-gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/open-interpreter-docker&#xA;$ docker run -v $(pwd):/root -p 6080:80 open-interpreter-gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run app&lt;/h3&gt; &#xA;&lt;p&gt;Browse &lt;a href=&#34;http://127.0.0.1:6080/&#34;&gt;http://127.0.0.1:6080/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Enjoy open interpreter&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://note.com/masia02/n/n630d091c4a02&#34;&gt;https://note.com/masia02/n/n630d091c4a02&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Frederic-Boulanger-UPS/docker-ubuntu_22-04-novnc&#34;&gt;https://github.com/Frederic-Boulanger-UPS/docker-ubuntu_22-04-novnc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rooter.jp/infra-ops/build_docker_jp_env/&#34;&gt;https://rooter.jp/infra-ops/build_docker_jp_env/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DataDog/workload-security-evaluator</title>
    <updated>2023-09-24T01:49:06Z</updated>
    <id>tag:github.com,2023-09-24:/DataDog/workload-security-evaluator</id>
    <link href="https://github.com/DataDog/workload-security-evaluator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tooling to simulate runtime attacks and test default runtime detections from Datadog Cloud Security Management.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Workload Security Evaluator provides tooling to simulate runtime attacks and test default runtime detections from Datadog Cloud Security Management. Tests are completed using &lt;a href=&#34;https://atomicredteam.io/&#34;&gt;Atomic Red Team&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://datadoghq.com/blog/workload-security-evaluator&#34;&gt;corresponding blog post&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/#atomic-test-organization&#34;&gt;Atomic test organization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/#test-against-real-world-threats&#34;&gt;Test against real-world threats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/#techniques-not-relevant-to-production-workloads&#34;&gt;Techniques not relevant to production workloads&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Workload Security Evaluator runs on Docker. For the most accurate results, Datadog recommends launching a compute instance in your preferred cloud provider. Alternatively, use a virtual machine or Docker Desktop. Apple silicon is not supported.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build and run the containers with the following commands.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;export DD_API_KEY=&#34;&amp;lt;api-key&amp;gt;&#34; # Found at https://app.datadoghq.com/organization-settings/api-keys&#xA;docker compose build&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Enter the evaluator container and run atomics.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec -it atomicredteam /usr/bin/pwsh&#xA;Invoke-AtomicTest T1105-27 -ShowDetails&#xA;Invoke-AtomicTest T1105-27 -GetPrereqs # Download packages or payloads&#xA;Invoke-AtomicTest T1105-27&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Check for a signal in the Datadog &lt;a href=&#34;https://app.datadoghq.com/security?query=env%3Aemulation&#34;&gt;Signals Explorer&lt;/a&gt; page. Signals from Workload Security Evaluator are tagged with &lt;code&gt;env:emulation&lt;/code&gt; to differentiate them from real security threats.&lt;/li&gt; &#xA; &lt;li&gt;Revert the changes made by the atomic.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Invoke-AtomicTest T1053.003-2 -Cleanup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Repeat with a different atomic.&lt;/li&gt; &#xA; &lt;li&gt;Shutdown the containers.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Atomic test organization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://atomicredteam.io/&#34;&gt;Atomic Red Team&lt;/a&gt; often contains multiple tests for the same ATT&amp;amp;CK technique. For example, the test identifier T1136.001-1 refers to the first test for MITRE ATT&amp;amp;CK technique T1136.001 (Create Account: Local Account). This test creates an account on a Linux system. The second test, T1136.001-2, creates an account on a MacOS system.&lt;/p&gt; &#xA;&lt;h2&gt;Test against real-world threats&lt;/h2&gt; &#xA;&lt;p&gt;The following atomics are recommended as a starting point. They emulate techniques that were observed in real attacks targeting cloud workloads.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Atomic ID&lt;/th&gt; &#xA;   &lt;th&gt;Atomic Name&lt;/th&gt; &#xA;   &lt;th&gt;Datadog Rule&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T1105-27&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atomicredteam.io/command-and-control/T1105/#atomic-test-27---linux-download-file-and-run&#34;&gt;Linux Download File and Run&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/executable_bit_added/&#34;&gt;Executable bit added to new file&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.talosintelligence.com/teamtnt-targeting-aws-alibaba-2/&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T1046-2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atomicredteam.io/discovery/T1046/#atomic-test-2---port-scan-nmap&#34;&gt;Port Scan Nmap&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/common_net_intrusion_util/&#34;&gt;Network scanning utility executed&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.talosintelligence.com/teamtnt-targeting-aws-alibaba-2/&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T1574.006-1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atomicredteam.io/defense-evasion/T1574.006/#atomic-test-1---shared-library-injection-via-etcldsopreload&#34;&gt;Shared Library Injection via /etc/ld.so.preload&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/suspected_dynamic_linker_hijacking/&#34;&gt;Suspected dynamic linker hijacking attempt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T1053.003-2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atomicredteam.io/privilege-escalation/T1053.003/#atomic-test-2---cron---add-script-to-all-cron-subfolders&#34;&gt;Cron - Add script to all cron subfolders&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/cron_at_job_injection/&#34;&gt;Cron job modified&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.talosintelligence.com/rocke-champion-of-monero-miners/&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T1070.003-1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://atomicredteam.io/defense-evasion/T1070.003/#atomic-test-1---clear-bash-history-(rm)&#34;&gt;Clear Bash history (rm)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/shell_history_tamper/&#34;&gt;Shell command history modified&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/&#34;&gt;Source&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a full list of Datadog&#39;s runtime detections, visit the &lt;a href=&#34;https://docs.datadoghq.com/security/default_rules/#cat-workload-security&#34;&gt;Out-of-the-box (OOTB) rules&lt;/a&gt; page. MITRE ATT&amp;amp;CK tactic and technique information is provided for every rule.&lt;/p&gt; &#xA;&lt;h2&gt;Techniques not relevant to production workloads&lt;/h2&gt; &#xA;&lt;p&gt;The MITRE ATT&amp;amp;CK &lt;a href=&#34;https://attack.mitre.org/matrices/enterprise/linux/&#34;&gt;Linux Matrix&lt;/a&gt; contains techniques for Linux hosts with a variety of purposes. Testing the techniques located in &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/workload-security-evaluator/main/notrelevant.md&#34;&gt;notrelevant.md&lt;/a&gt; is not recommended, because they are focused on Linux workstations or are unlikely to be detected using operating system events.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mitre-attack.github.io/attack-navigator//#layerURL=https%3A%2F%2Fraw%2Egithubusercontent%2Ecom%2FDataDog%2Fworkload-security-evaluator%2Fmain%2Fnotrelevant_layer%2Ejson&#34;&gt;Visualize with ATT&amp;amp;CK Navigator&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>