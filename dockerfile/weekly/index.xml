<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T02:08:12Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rushtojp/devopsclassfiles</title>
    <updated>2022-08-14T02:08:12Z</updated>
    <id>tag:github.com,2022-08-14:/rushtojp/devopsclassfiles</id>
    <link href="https://github.com/rushtojp/devopsclassfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;devopsclassfiles&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>HaveAGitGat/Tdarr</title>
    <updated>2022-08-14T02:08:12Z</updated>
    <id>tag:github.com,2022-08-14:/HaveAGitGat/Tdarr</id>
    <link href="https://github.com/HaveAGitGat/Tdarr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tdarr - Distributed transcode automation using FFmpeg/HandBrake + Audio/Video library analytics + video health checking (Windows, macOS, Linux &amp; Docker)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tdarr V2: Distributed Transcoding System&lt;/h1&gt; &#xA;&lt;p&gt;Audio/Video Library Analytics &amp;amp; Transcode/Remux Automation&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://storage.googleapis.com/tdarr/media/images/banner-systems.png&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FFmpeg/HandBrake + video health checking (Windows, macOS, Linux &amp;amp; Docker)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/Tdarr/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Reddit-Tdarr-orange&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://discord.gg/GF8X8cq&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Chat-green.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt; &lt;a href=&#34;https://tdarr.io/docs/installation&#34; target=&#34;_blank&#34;&gt;Setup/Installation&lt;/a&gt; &lt;/h2&gt; &#xA;&lt;h2&gt;About:&lt;/h2&gt; More information can be found on the following websites: &#xA;&lt;p&gt;&lt;a href=&#34;https://tdarr.io/&#34;&gt;https://tdarr.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.tdarr.io/&#34;&gt;https://docs.tdarr.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tdarr V2 is a cross-platform conditional based transcoding application for automating media library transcode/remux management in order to process your media files as required. For example, you can set rules for the required codecs, containers, languages etc that your media should have which helps keeps things organized and can increase compatability with your devices. A common use for Tdarr is to simply convert video files from h264 to h265 (hevc), saving 40%-50% in size.&lt;/p&gt; &#xA;&lt;p&gt;The application is in the form of a click-to-run web-app, comprised of the following 2 components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tdarr_Server - Central process which all Nodes connect with&lt;/li&gt; &#xA; &lt;li&gt;Tdarr_Node - Processes running on same/other devices which collect tasks from the Server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Put your spare hardware to use with Tdarr Nodes for Windows, Linux (including Linux arm/arm64) and macOS.&lt;/p&gt; &#xA;&lt;p&gt;Designed to work alongside applications like Sonarr/Radarr and built with the aim of modularisation, parallelisation and scalability, each library you add has its own transcode settings, filters and schedule. Workers can be fired up and closed down as necessary, and are split into 4 types - Transcode CPU/GPU and Health Check CPU/GPU. Worker limits can be managed by the scheduler as well as manually. For a desktop application with similar functionality please see &lt;a href=&#34;https://github.com/HaveAGitGat/HBBatchBeast&#34;&gt;HBBatchBeast&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-platform Tdarr Nodes which work together with Tdarr Server to process your files&lt;/li&gt; &#xA; &lt;li&gt;GPU and CPU workers&lt;/li&gt; &#xA; &lt;li&gt;Use/create Tdarr Plugins for infinite control on how your files are processed: &lt;a href=&#34;https://github.com/HaveAGitGat/Tdarr_Plugins&#34;&gt;https://github.com/HaveAGitGat/Tdarr_Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Audio and video library management&lt;/li&gt; &#xA; &lt;li&gt;7 day, 24 hour scheduler&lt;/li&gt; &#xA; &lt;li&gt;Folder watcher&lt;/li&gt; &#xA; &lt;li&gt;Worker stall detector&lt;/li&gt; &#xA; &lt;li&gt;Load balancing between libraries/drives&lt;/li&gt; &#xA; &lt;li&gt;Use HandBrake or FFmpeg&lt;/li&gt; &#xA; &lt;li&gt;Tested on a 1,000,000 file dummy library&lt;/li&gt; &#xA; &lt;li&gt;Search for files based on hundreds of properties&lt;/li&gt; &#xA; &lt;li&gt;Library stats&lt;/li&gt; &#xA; &lt;li&gt;Hardware transcoding container (install Nvidia plugin on unRAID/Nvidia runtime container on Ubuntu)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/wRV6tBJ.png&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Stats&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163762996-65381fc8-0a57-4651-ba20-b5cba28e39d3.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Nodes&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763000-35742f0e-ae67-40b4-a44c-eee60eae61cf.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Job reports&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763006-a73a06cb-9fec-4960-bc72-46fb9744f9a9.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Property explorer&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763020-2231d5d1-d016-4c5c-84bf-662a6069ed01.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Worker verdict history&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763035-5a90e2a3-9516-44c4-994e-77d844123527.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Plugin stack system&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763049-fea46078-3749-4fb9-997c-3ced5b19049f.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Property search&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763064-24193295-1494-4c08-aa2e-76892a771b7b.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Library schedule&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/43864057/163763073-c00a3e8d-486a-4d12-b99d-7e4120961248.png&#34; alt=&#34;image&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Tdarr is extremely modular/configurable and the main idea behind it is creating a plugin stack to clean up/standardise your files. For example, a typical plugin stack might look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(1) Transcode non hevc files into hevc&#xA;&#xA;(2) Remove subs&#xA;&#xA;(3) Remove meta data (if title)&#xA;&#xA;(4) Add aac stereo audio if none (eng preferred)&#xA;&#xA;(5) Remove closed captions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, plugins 1,2,3 and 5 are community plugins which are available for you to use immediately. Plugin 4 can be created in the plugin creator interface in Tdarr and will appear as a local plugin.&lt;/p&gt; &#xA;&lt;p&gt;Each of the plugins are conditional, so are only used if needed. They are located in Tdarr/Documents and are written in JavaScript so if none of the plugins do what you want then you can modify/create new plugins if you have a bit of coding experience (or get the gist from having a look). Steps for doing so are in the README here:&lt;a href=&#34;https://github.com/HaveAGitGat/Tdarr_Plugins&#34;&gt;https://github.com/HaveAGitGat/Tdarr_Plugins&lt;/a&gt; . Ask for help in the Discord channel if need be.&lt;/p&gt; &#xA;&lt;p&gt;Here is an illustration of how the plugin stack works:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/483AakN.png&#34;&gt;https://i.imgur.com/483AakN.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For the term &#39;streams&#39;, here is an example of how a file appears in Tdarr search results:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/RaKnq2c.png&#34;&gt;https://i.imgur.com/RaKnq2c.png&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;That file has 3 streams - a video, audio and subtitle stream. Subtitles and closed captions are very different. Where is the closed caption data in this example? It&#39;s embedded inside the h264 video stream.&lt;/p&gt; &#xA;&lt;p&gt;Extra streams and closed captions which you don&#39;t need can cause problems with direct playing and syncing files, so you might as well remove them (it&#39;s recommended to use something like Bazarr for subtitles). Even when playing files in programs such as VLC or Kodi, subtitles/closed captions can cause playback delays and make things stuttery for a few seconds when jumping around the video.&lt;/p&gt; &#xA;&lt;p&gt;Extra streams can also take up a lot of space. Don&#39;t be surprised to see some files in your library with 15+ audio/commentary/subtitle tracks in a bunch of different languages. These can take up an extra GB+ per file.&lt;/p&gt; &#xA;&lt;p&gt;The plugin creator is split into &#39;Filters&#39; and &#39;Actions&#39;. Filters encapsulate the actions, so the actions will only be carried out if the filter conditions are met.&lt;/p&gt; &#xA;&lt;p&gt;Current filters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Filter by codec&#xA;&#xA;Filter by medium&#xA;&#xA;Filter by age&#xA;&#xA;Filter by resolution&#xA;&#xA;Filter by size&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Current actions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Transcode - HandBrake basic options&#xA;&#xA;Transcode - HandBrake/FFmpeg custom arguments&#xA;&#xA;Transcode - Standardise audio stream codecs&#xA;&#xA;Transcode - Add audio stream&#xA;&#xA;Transcode - Keep one audio stream&#xA;&#xA;Remux container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some actions/plugins have built-in filters (specified in the plugin creator). This means they&#39;ll automatically detect if a file needs to be processed or not (such as the remove subtitles community plugin). Additional filters can be added.&lt;/p&gt; &#xA;&lt;p&gt;Some of the actions have become quite complicated so take a bit more time. For example, the &#39;Keep one audio stream&#39; has 16 different outcomes as it tries to determine the best audio stream to keep based on the codec, language and channel count you specify.&lt;/p&gt; &#xA;&lt;p&gt;If you have a request for a new filter/action, then try and think of it generically so I can implement it in way that other people can configure and apply it to their (slightly) different circumstances. Request on GitHub,Reddit or Discord.&lt;/p&gt; &#xA;&lt;p&gt;For example, to maximize direct play, a plugin stack like this can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(1) If not in h264, transcode into h264 [h264 is a more universal video codec than others]&#xA;&#xA;(2) If not in mp4, remux into mp4 [mp4 is the most universal container]&#xA;&#xA;(3) Remove subs&#xA;&#xA;(4) Remove closed captions&#xA;&#xA;(5) Add aac stereo audio if none (eng preferred) [very universal audio codec/channel count]&#xA;&#xA;(6) Remove meta-data if title meta detected [Stops annoying titles appearing in Plex]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>OWASP/wstg</title>
    <updated>2022-08-14T02:08:12Z</updated>
    <id>tag:github.com,2022-08-14:/OWASP/wstg</id>
    <link href="https://github.com/OWASP/wstg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Web Security Testing Guide is a comprehensive Open Source guide to testing the security of web applications and web services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OWASP Web Security Testing Guide&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OWASP/wstg/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;Contributions Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://owasp.org/projects/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/owasp-flagship-brightgreen.svg?sanitize=true&#34; alt=&#34;OWASP Flagship&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/owasp_wstg&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/owasp_wstg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34; title=&#34;CC BY-SA 4.0&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-sa/4.0/88x31.png&#34; alt=&#34;Creative Commons License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the official repository for the Open Web Application Security Project® (OWASP®) Web Security Testing Guide (WSTG). The WSTG is a comprehensive guide to testing the security of web applications and web services. Created by the collaborative efforts of security professionals and dedicated volunteers, the WSTG provides a framework of best practices used by penetration testers and organizations all over the world.&lt;/p&gt; &#xA;&lt;p&gt;We are currently working on release version 5.0. You can &lt;a href=&#34;https://github.com/OWASP/wstg/tree/master/document&#34;&gt;read the current document here on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the last stable release, &lt;a href=&#34;https://github.com/OWASP/wstg/releases/tag/v4.2&#34;&gt;check release 4.2&lt;/a&gt;. Also available &lt;a href=&#34;https://owasp.org/www-project-web-security-testing-guide/v42/&#34;&gt;online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#how-to-reference-wstg-scenarios&#34;&gt;How To Reference WSTG Scenarios&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#linking&#34;&gt;Linking&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#contributions-feature-requests-and-feedback&#34;&gt;Contributions, Feature Requests, and Feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#chat-with-us&#34;&gt;Chat With Us&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#project-leaders&#34;&gt;Project Leaders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/#core-team&#34;&gt;Core Team&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Reference WSTG Scenarios&lt;/h2&gt; &#xA;&lt;p&gt;Each scenario has an identifier in the format &lt;code&gt;WSTG-&amp;lt;category&amp;gt;-&amp;lt;number&amp;gt;&lt;/code&gt;, where: &#39;category&#39; is a 4 character upper case string that identifies the type of test or weakness, and &#39;number&#39; is a zero-padded numeric value from 01 to 99. For example:&lt;code&gt;WSTG-INFO-02&lt;/code&gt; is the second Information Gathering test.&lt;/p&gt; &#xA;&lt;p&gt;The identifiers may change between versions. Therefore, it is preferable that other documents, reports, or tools use the format: &lt;code&gt;WSTG-&amp;lt;version&amp;gt;-&amp;lt;category&amp;gt;-&amp;lt;number&amp;gt;&lt;/code&gt;, where: &#39;version&#39; is the version tag with punctuation removed. For example: &lt;code&gt;WSTG-v42-INFO-02&lt;/code&gt; would be understood to mean specifically the second Information Gathering test from version 4.2.&lt;/p&gt; &#xA;&lt;p&gt;If identifiers are used without including the &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; element, they should be assumed to refer to the latest Web Security Testing Guide content. Obviously as the guide grows and changes this becomes problematic, which is why writers or developers should include the version element.&lt;/p&gt; &#xA;&lt;h3&gt;Linking&lt;/h3&gt; &#xA;&lt;p&gt;Linking to Web Security Testing Guide scenarios should be done using versioned links not &lt;code&gt;stable&lt;/code&gt; or &lt;code&gt;latest&lt;/code&gt;, which will definitely change with time. However, it is the project team&#39;s intention that versioned links not change. For example: &lt;code&gt;https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server.html&lt;/code&gt;. Note: the &lt;code&gt;v42&lt;/code&gt; element refers to version 4.2.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions, Feature Requests, and Feedback&lt;/h2&gt; &#xA;&lt;p&gt;We are actively inviting new contributors! To start, read the &lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First time here? Here are &lt;a href=&#34;https://github.com/OWASP/wstg/contribute&#34;&gt;GitHub&#39;s suggestions for first-time contributors&lt;/a&gt; to this repository.&lt;/p&gt; &#xA;&lt;p&gt;This project is only possible thanks to the work of many dedicated volunteers. Everyone is encouraged to help in ways large and small. Here are a few ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the current content and help us fix any spelling mistakes or grammatical errors.&lt;/li&gt; &#xA; &lt;li&gt;Help with &lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/CONTRIBUTING.md#translation&#34;&gt;translation&lt;/a&gt; efforts.&lt;/li&gt; &#xA; &lt;li&gt;Choose an existing issue and submit a pull request to fix it.&lt;/li&gt; &#xA; &lt;li&gt;Open a new issue to report an opportunity for improvement.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To learn how to contribute successfully, read the &lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Successful contributors appear on &lt;a href=&#34;https://raw.githubusercontent.com/OWASP/wstg/master/document/1-Frontispiece/README.md&#34;&gt;the project&#39;s list of authors, reviewers, or editors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Chat With Us&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re easy to find on Slack:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Join the OWASP Group Slack with this &lt;a href=&#34;https://owasp.org/slack/invite&#34;&gt;invitation link&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join this project&#39;s &lt;a href=&#34;https://app.slack.com/client/T04T40NHX/CJ2QDHLRJ&#34;&gt;channel, #testing-guide&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Feel free to ask questions, suggest ideas, or share your best recipes.&lt;/p&gt; &#xA;&lt;p&gt;You can @ us on Twitter &lt;a href=&#34;https://twitter.com/owasp_wstg&#34;&gt;@owasp_wstg&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join our &lt;a href=&#34;https://groups.google.com/a/owasp.org/forum/#!forum/testing-guide-project&#34;&gt;Google Group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project Leaders&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kingthorin&#34;&gt;Rick Mitchell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ThunderSon&#34;&gt;Elie Saad&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core Team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rejahrehim&#34;&gt;Rejah Rehim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/victoriadrake&#34;&gt;Victoria Drake&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Open Web Application Security Project and OWASP are registered trademarks of the OWASP Foundation, Inc.&lt;/p&gt;</summary>
  </entry>
</feed>