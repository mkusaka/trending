<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:43:03Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>docker-library/tomcat</title>
    <updated>2022-09-04T01:43:03Z</updated>
    <id>tag:github.com,2022-09-04:/docker-library/tomcat</id>
    <link href="https://github.com/docker-library/tomcat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Official Image packaging for Apache Tomcat&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/docker-library/tomcat&#34;&gt;https://github.com/docker-library/tomcat&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Maintained by: &lt;a href=&#34;https://github.com/docker-library/tomcat&#34;&gt;the Docker Community&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the Git repo of the &lt;a href=&#34;https://github.com/docker-library/official-images#what-are-official-images&#34;&gt;Docker &#34;Official Image&#34;&lt;/a&gt; for &lt;a href=&#34;https://hub.docker.com/_/tomcat/&#34;&gt;&lt;code&gt;tomcat&lt;/code&gt;&lt;/a&gt; (not to be confused with any official &lt;code&gt;tomcat&lt;/code&gt; image provided by &lt;code&gt;tomcat&lt;/code&gt; upstream). See &lt;a href=&#34;https://hub.docker.com/_/tomcat/&#34;&gt;the Docker Hub page&lt;/a&gt; for the full readme on how to use this Docker image and for information regarding contributing and issues.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://hub.docker.com/_/tomcat/&#34;&gt;full image description on Docker Hub&lt;/a&gt; is generated/maintained over in &lt;a href=&#34;https://github.com/docker-library/docs&#34;&gt;the docker-library/docs repository&lt;/a&gt;, specifically in &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/tomcat&#34;&gt;the &lt;code&gt;tomcat&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;See a change merged here that doesn&#39;t show up on Docker Hub yet?&lt;/h2&gt; &#xA;&lt;p&gt;For more information about the full official images change lifecycle, see &lt;a href=&#34;https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what&#34;&gt;the &#34;An image&#39;s source changed in Git, now what?&#34; FAQ entry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For outstanding &lt;code&gt;tomcat&lt;/code&gt; image PRs, check &lt;a href=&#34;https://github.com/docker-library/official-images/labels/library%2Ftomcat&#34;&gt;PRs with the &#34;library/tomcat&#34; label on the official-images repository&lt;/a&gt;. For the current &#34;source of truth&#34; for &lt;a href=&#34;https://hub.docker.com/_/tomcat/&#34;&gt;&lt;code&gt;tomcat&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/tomcat&#34;&gt;the &lt;code&gt;library/tomcat&lt;/code&gt; file in the official-images repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker-library/tomcat/actions?query=workflow%3A%22GitHub+CI%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/docker-library/tomcat/GitHub%20CI/master?label=GitHub%20CI&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/update.sh/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/update.sh/job/tomcat.svg?label=Automated%20update.sh&#34; alt=&#34;build status badge&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Badges&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;(per-arch)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/amd64/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/amd64/job/tomcat.svg?label=amd64&#34; alt=&#34;amd64 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm32v7/job/tomcat.svg?label=arm32v7&#34; alt=&#34;arm32v7 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/arm64v8/job/tomcat.svg?label=arm64v8&#34; alt=&#34;arm64v8 build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/ppc64le/job/tomcat.svg?label=ppc64le&#34; alt=&#34;ppc64le build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/multiarch/job/s390x/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/multiarch/job/s390x/job/tomcat.svg?label=s390x&#34; alt=&#34;s390x build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://doi-janky.infosiftr.net/job/put-shared/job/light/job/tomcat/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/doi-janky.infosiftr.net/job/put-shared/job/light/job/tomcat.svg?label=put-shared&#34; alt=&#34;put-shared build status badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh --&gt;</summary>
  </entry>
  <entry>
    <title>cvpaperchallenge/Ascender</title>
    <updated>2022-09-04T01:43:03Z</updated>
    <id>tag:github.com,2022-09-04:/cvpaperchallenge/Ascender</id>
    <link href="https://github.com/cvpaperchallenge/Ascender" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Accelerator of Scientific Development and Research. A project template developed by XCCV group of cvpaper.challenge.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ascender&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.8%20%7C%203.9-blue&#34; alt=&#34;python versions&#34;&gt; &lt;a href=&#34;https://github.com/cvpaperchallenge/Ascender/actions/workflows/lint-and-test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/cvpaperchallenge/Ascender/actions/workflows/lint-and-test.yaml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cvpaperchallenge/Ascender/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cvpaperchallenge/Ascender?color=green&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Ascender?&lt;/h2&gt; &#xA;&lt;p&gt;Ascender (Accelerator of SCiENtific DEvelopment and Research) is a &lt;a href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-template-repository&#34;&gt;GitHub repository template&lt;/a&gt; for research projects using Python as a developing language. The following features are pre-implemented to accelerate your development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Container&lt;/strong&gt;: Use of &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; reduces development environment dependencies and improves code portability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Virtual environment / package management&lt;/strong&gt;: Package management using &lt;a href=&#34;https://python-poetry.org/&#34;&gt;Poetry&lt;/a&gt; improves reproducibility of the same environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Coding style&lt;/strong&gt;: Automatic code style formatting using &lt;a href=&#34;https://github.com/psf/black&#34;&gt;Black&lt;/a&gt;, &lt;a href=&#34;https://github.com/pycqa/flake8&#34;&gt;Flake8&lt;/a&gt;, and &lt;a href=&#34;https://github.com/PyCQA/isort&#34;&gt;isort&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Static type check&lt;/strong&gt;: Static type checking with &lt;a href=&#34;https://github.com/python/mypy&#34;&gt;Mypy&lt;/a&gt; to assist in finding bugs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pytest&lt;/strong&gt;: Easily add test code using &lt;a href=&#34;https://github.com/pytest-dev/pytest&#34;&gt;pytest&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub features&lt;/strong&gt;: Some useful features, &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions&#34;&gt;workflow&lt;/a&gt; for style check and test for pull request, &lt;a href=&#34;https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository&#34;&gt;issue template&lt;/a&gt;, etc. are pre-implemented.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;https://cvpaperchallenge.github.io/Britannica/ascender/ja&#34;&gt;the slide format resources about Ascender (Japanese)&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;h2&gt;Project Organization&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    ├── .github/           &amp;lt;- Settings for GitHub.&#xA;    │&#xA;    ├── data/              &amp;lt;- Datasets.&#xA;    │&#xA;    ├── environments/       &amp;lt;- Provision depends on environments.&#xA;    │&#xA;    ├── models/            &amp;lt;- Pretrained and serialized models.&#xA;    │&#xA;    ├── notebooks/         &amp;lt;- Jupyter notebooks.&#xA;    │&#xA;    ├── outputs/           &amp;lt;- Outputs.&#xA;    │&#xA;    ├── src/               &amp;lt;- Source code. This sould be Python module.&#xA;    │&#xA;    ├── tests/             &amp;lt;- Test codes.&#xA;    │&#xA;    ├── .flake8            &amp;lt;- Setting file for Flake8.&#xA;    ├── .dockerignore&#xA;    ├── .gitignore&#xA;    ├── LICENSE&#xA;    ├── Makefile           &amp;lt;- Makefile used as task runner. &#xA;    ├── poetry.lock        &amp;lt;- Lock file. DON&#39;T edit this file manually.&#xA;    ├── poetry.toml        &amp;lt;- Setting file for Poetry.&#xA;    ├── pyproject.toml     &amp;lt;- Setting file for Project. (Poetry, Black, isort, Mypy)&#xA;    └── README.md          &amp;lt;- The top-level README for developers.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/docker/compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Optional) &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;NVIDIA Container Toolkit (nvidia-docker2)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Example codes in the README.md are written for &lt;code&gt;Docker Compose v2&lt;/code&gt;. However, Ascender also should work under &lt;code&gt;Docker Compose v1&lt;/code&gt;. If you are using &lt;code&gt;Docker Compose v1&lt;/code&gt;, just replace &lt;code&gt;docker compose&lt;/code&gt; in the example code by &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites installation&lt;/h2&gt; &#xA;&lt;p&gt;Here, we show example prerequisites installation codes for Ubuntu. If prerequisites are already installed your environment, please skip this section. If you want to install in another environment, please follow the officail documentations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker and Docker Compose: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Install Docker Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;NVIDIA Container Toolkit (nvidia-docker2): &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install Docker and Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Set up the repository&#xA;$ sudo apt update&#xA;$ sudo apt install ca-certificates curl gnupg lsb-release&#xA;$ sudo mkdir -p /etc/apt/keyrings&#xA;$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&#xA;$ echo \&#xA;  &#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \&#xA;  $(lsb_release -cs) stable&#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null&#xA;&#xA;# Install Docker and Docker Compose&#xA;$ sudo apt update&#xA;$ sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;sudo docker run hello-world&lt;/code&gt; works, installation succeeded.&lt;/p&gt; &#xA;&lt;h3&gt;(Optional) NVIDIA Container Toolkit&lt;/h3&gt; &#xA;&lt;p&gt;If you want to use GPU in Ascender, please install NVIDIA Container Toolkit (nvidia-docker2) too. NVIDIA Container Toolkit also requires some prerequisites to install. So please check thier &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#pre-requisites&#34;&gt;official documentation&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \&#xA;      &amp;amp;&amp;amp; curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \&#xA;      &amp;amp;&amp;amp; curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \&#xA;            sed &#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#39; | \&#xA;            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list&#xA;&#xA;$ sudo apt update&#xA;$ sudo apt install -y nvidia-docker2&#xA;$ sudo systemctl restart docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi&lt;/code&gt; works, installation succeeded.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Here, we explain how to start using Ascender. Please refer to &lt;a href=&#34;https://cvpaperchallenge.github.io/Britannica/ascender/ja&#34;&gt;this slide (Japanese)&lt;/a&gt; for detailed information.&lt;/p&gt; &#xA;&lt;h3&gt;Create GitHub repo from Ascender&lt;/h3&gt; &#xA;&lt;p&gt;Fisrt of all, you need to create your own GitHub repo from Ascender as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://github.com/cvpaperchallenge/Ascender&#34;&gt;GitHub repo page of Ascender&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;a href=&#34;https://github.com/cvpaperchallenge/Ascender/generate&#34;&gt;&#34;Use this template&#34;&lt;/a&gt; button in the upper right part of the page.&lt;/li&gt; &#xA; &lt;li&gt;Fill in the items on the page, and press &#34;Create repository from template&#34; button.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now, a new repo should be created from Ascender in your GitHub account.&lt;/p&gt; &#xA;&lt;h3&gt;Start development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone repo&#xA;$ git clone git@github.com:cvpaperchallenge/&amp;lt;YOUR_REPO_NAME&amp;gt;.git&#xA;$ cd &amp;lt;YOUR_REPO_NAME&amp;gt;&#xA;&#xA;# Build Docker image and run container&#xA;$ cd environments/gpu  # if you want to use only cpu, `cd environments/cpu` &#xA;$ sudo docker compose up -d&#xA;&#xA;# Run bash inside of container (jump into contaienr)&#xA;$ sudo docker compose exec core bash&#xA;&#xA;# Create virtual environment and install dependent packages by Poetry&#xA;$ poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you are ready to start development with Ascender.&lt;/p&gt; &#xA;&lt;h3&gt;Stop development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Stop container&#xA;$ cd environments/gpu  # or `cd environments/cpu` &#xA;$ sudo dokcer compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Use Ascender without Docker&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using Ascender with Docker as described above. However, you might not be able to install Docker in your development environment due to permission issues or etc.&lt;/p&gt; &#xA;&lt;p&gt;In such cases, Ascender can be used without Docker. To do that, please install Poetry in your computer, and follow the steps describing in &#34;Start development&#34; section with ignoring the steps related to Docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install Poetry&#xA;$ pip3 install poetry&#xA;&#xA;# Clone repo&#xA;$ git clone git@github.com:&amp;lt;YOUR_USER_NAME&amp;gt;/&amp;lt;YOUR_REPO_NAME&amp;gt;.git&#xA;$ cd &amp;lt;YOUR_REPO_NAME&amp;gt;&#xA;&#xA;# Create virtual environment and install dependent packages by Poetry&#xA;$ poetry install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: CI job (GitHub Actions workflow) of Ascender is using Dockerfile. Therefore, using Ascender without Docker might raise error at CI job. In that case, please modify the Dockerfile appropriately or delete the CI job (&lt;code&gt;.github/workflows/lint-and-test.yaml&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Permission error is raised when execute &lt;code&gt;poetry install&lt;/code&gt;.&lt;/h3&gt; &#xA;&lt;p&gt;Sometime &lt;code&gt;poetry install&lt;/code&gt; might rise permission error like following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ poetry install&#xA;...&#xA;&#xA;virtualenv: error: argument dest: the destination . is not write-able at /home/challenger/ascender&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In that case, please check UID (user id) and GID (group id) at your local PC by following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ id -u $USER  # check UID&#xA;$ id -g $USER  # check GID&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Ascender, default value of both is &lt;code&gt;1000&lt;/code&gt;. If UID or GID of your local PC is not &lt;code&gt;1000&lt;/code&gt;, you need to modify the value of &lt;code&gt;UID&lt;/code&gt; or &lt;code&gt;GID&lt;/code&gt; inside of &lt;code&gt;docker-compose.yaml&lt;/code&gt; to align your local PC (please edit their values from &lt;code&gt;1000&lt;/code&gt;). Or if environmental variables &lt;code&gt;HOST_UID&lt;/code&gt; and &lt;code&gt;HOST_GID&lt;/code&gt; is defined at host PC, Ascender uses these values.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility issue between PyTorch and Poetry&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: Now poetry 1.2 is used in Ascender. So this issue is expected to be solved.&lt;/p&gt; &#xA;&lt;p&gt;Currently, there is a compatibility issue between PyTorch and Poetry. This issue is being worked on by the Poetry community and is expected to be resolved in 1.2.0. (You can check pre-release of 1.2.0 from &lt;a href=&#34;https://github.com/python-poetry/poetry/releases/tag/1.2.0b3&#34;&gt;here&lt;/a&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;We plan to incorporate Poetry 1.2.0 into Ascender immediately after its release. In the meantime, please consider using the workaround described in &lt;a href=&#34;https://github.com/python-poetry/poetry/issues/4231&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Some related GitHub issues&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/2339&#34;&gt;https://github.com/python-poetry/poetry/issues/2339&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/2543&#34;&gt;https://github.com/python-poetry/poetry/issues/2543&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/2613&#34;&gt;https://github.com/python-poetry/poetry/issues/2613&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/3855&#34;&gt;https://github.com/python-poetry/poetry/issues/3855&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/4231&#34;&gt;https://github.com/python-poetry/poetry/issues/4231&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry/issues/4704&#34;&gt;https://github.com/python-poetry/poetry/issues/4704&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Change the Python version to run CI jobs&lt;/h3&gt; &#xA;&lt;p&gt;By default, CI job (GitHub Actions workflow) of Ascender is run against Python 3.8 and 3.9. If you want to change the target Python version, please modify &lt;a href=&#34;https://github.com/cvpaperchallenge/Ascender/raw/master/.github/workflows/lint-and-test.yaml#L18&#34;&gt;the matrix part of &lt;code&gt;.github/workflows/lint-and-test.yaml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trailofbits/eth-security-toolbox</title>
    <updated>2022-09-04T01:43:03Z</updated>
    <id>tag:github.com,2022-09-04:/trailofbits/eth-security-toolbox</id>
    <link href="https://github.com/trailofbits/eth-security-toolbox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker container preconfigured with all of the Trail of Bits Ethereum security tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ethereum Security Toolbox&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains scripts to create a Docker container preinstalled and preconfigured with all of Trail of Bits’ Ethereum security tools, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/echidna&#34;&gt;Echidna&lt;/a&gt; property-based fuzz tester&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/etheno&#34;&gt;Etheno&lt;/a&gt; integration tool and differential tester&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/manticore&#34;&gt;Manticore&lt;/a&gt; symbolic analyzer and formal contract verifier&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/slither&#34;&gt;Slither&lt;/a&gt; static analysis tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/rattle&#34;&gt;Rattle&lt;/a&gt; EVM lifter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/trailofbits/not-so-smart-contracts&#34;&gt;Not So Smart Contracts&lt;/a&gt; repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Use our prebuilt Docker container to quickly install and run the toolkit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull trailofbits/eth-security-toolbox&#xA;docker run -it trailofbits/eth-security-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, build the image from scratch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/trailofbits/eth-security-toolbox.git&#xA;$ cd eth-security-toolbox&#xA;$ docker build -t eth-security-toolbox .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Simply start an instance of the Docker container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it trailofbits/eth-security-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As many versions of Solidity as possible are installed. They can be individually executed as &lt;code&gt;solc-v0.4.18&lt;/code&gt; or &lt;code&gt;solc-v0.5.2&lt;/code&gt;. By default, &lt;code&gt;solc&lt;/code&gt; (with no version suffix) corresponds to the latest release. This can be changed using the &lt;code&gt;solc-select&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ solc --version&#xA;solc, the solidity compiler commandline interface&#xA;Version: 0.5.2+commit.1df8f40c.Linux.g++&#xA;$ solc-select 0.4.24&#xA;$ solc --version&#xA;solc, the solidity compiler commandline interface&#xA;Version: 0.4.24+commit.e67f0147.Linux.g++&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to stop by our &lt;a href=&#34;https://empirehacking.slack.com/&#34;&gt;Slack channel&lt;/a&gt; for help on using or extending this toolbox.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Ethereum Security Toolbox is licensed and distributed under the &lt;a href=&#34;https://raw.githubusercontent.com/trailofbits/eth-security-toolbox/master/LICENSE&#34;&gt;AGPLv3&lt;/a&gt; license. &lt;a href=&#34;mailto:opensource@trailofbits.com&#34;&gt;Contact us&lt;/a&gt; if you’re looking for an exception to the terms.&lt;/p&gt;</summary>
  </entry>
</feed>