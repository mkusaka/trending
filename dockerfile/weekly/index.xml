<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T01:52:58Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>drum-grammer/docker-pro-wanted</title>
    <updated>2023-04-02T01:52:58Z</updated>
    <id>tag:github.com,2023-04-02:/drum-grammer/docker-pro-wanted</id>
    <link href="https://github.com/drum-grammer/docker-pro-wanted" rel="alternate"></link>
    <summary type="html">&lt;p&gt;원티드와 함께하는 Docker 뽀개기&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker : 나만의 도커 이미지 만들기 부터, 클라우드 배포까지!&lt;/h1&gt; &#xA;&lt;p&gt;4월 원티드 프리 온보딩 챌린지 - docker 뽀개기&lt;/p&gt; &#xA;&lt;h2&gt;I. 사전 미션하는 법&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;해당 repository를 clone 하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:drum-grammer/docker-pro-wanted.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;별도의 브랜치를 생성하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout -b my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;아래 사전 미션 내용을 보고 답안을 마크다운 형식으로 작성하시고, &lt;code&gt;./mission/{nickName}&lt;/code&gt; 디렉토리 저장해주세요.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;해당 브랜치를 푸쉬해주세요.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push -u origin my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Pull Request를 생성하여, 사전 미션을 제출해주세요.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;II. 사전 미션&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;컨테이너 기술이란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커 파일, 도커 이미지, 도커 컨테이너의 개념은 무엇이고, 서로 어떤 관계입니까?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[실전 미션] 도커 설치하기 (참조: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;도커 공식 설치 페이지&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;아래 &lt;code&gt;도커 설치부터 실행 튜토리얼&lt;/code&gt;을 참조하여 도커를 설치하고, 도커 컨테이너를 실행한 화면을 캡쳐해서 Pull Request에 올리세요.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;III. 도커 설치부터 실행 튜토리얼&lt;/h2&gt; &#xA;&lt;h3&gt;도커 설치&lt;/h3&gt; &#xA;&lt;h4&gt;1. 도커 공식 웹사이트에서 &#34;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Get Started&lt;/a&gt;&#34;를 클릭합니다.&lt;/h4&gt; &#xA;&lt;h4&gt;2. OS에 맞는 설치 파일을 다운로드 받습니다.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS의 경우 &#34;Download for Mac&#34;을 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;Window 일 경우 &#34;Download for Windows&#34;를 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;다운로드한 설치 파일을 실행합니다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;도커 컨테이너 실행 시키기&lt;/h3&gt; &#xA;&lt;h4&gt;1. &lt;code&gt;나의 사전 미션 폴더&lt;/code&gt;를 만들고 해당 폴더로 이동합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd path/to/docker-pro-wanted/mission&#xA;mkdir my-name&#xA;cd my-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. &#34;Hello, World!&#34;를 출력하는 도커 파일을 만듭니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vim Dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;i&lt;/code&gt;를 눌러 편집모드로 전환 후 아래 내용을 작성합니다:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM alpine:latest&#xA;CMD [&#34;echo&#34;, &#34;Hello, World&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt;를 눌러 명령모드로 전환 후, &lt;code&gt;:wq&lt;/code&gt; 입력, &lt;code&gt;enter&lt;/code&gt;키를 눌러 &lt;code&gt;Dockerfile&lt;/code&gt;을 생성합니다.&lt;/p&gt; &#xA;&lt;h4&gt;3. 도커 파일로 도커 이미지를 빌드합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t hello-world .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(위 명령어의 의미는 &#34;현재 디렉토리에서 &lt;code&gt;Dockerfile&lt;/code&gt;을 읽어 도커 이미지를 만들고, 해당 이미지에 &lt;code&gt;hello-world&lt;/code&gt;라는 &lt;code&gt;tag&lt;/code&gt; 를 붙혀라&#34; 입니다.)&lt;/p&gt; &#xA;&lt;h4&gt;4. 빌드한 도커 이미지를 실행합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run hello-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;이 명령어는 hello-world라는 이름의 도커 이미지를 실행시켜 &#34;Hello, World!&#34;를 출력합니다.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PacktPublishing/Modern-CMake-for-Cpp</title>
    <updated>2023-04-02T01:52:58Z</updated>
    <id>tag:github.com,2023-04-02:/PacktPublishing/Modern-CMake-for-Cpp</id>
    <link href="https://github.com/PacktPublishing/Modern-CMake-for-Cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern CMake for C++, published by Packt&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modern CMake for C++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.packtpub.com/product/modern-cmake-for-c/9781801070058&#34;&gt;&lt;img src=&#34;https://static.packt-cdn.com/products/9781801070058/cover/smaller&#34; height=&#34;256px&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the code repository for &lt;a href=&#34;https://www.packtpub.com/product/modern-cmake-for-c/9781801070058&#34;&gt;Modern CMake for C++&lt;/a&gt;, published by Packt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discover a better approach to building, testing, and packaging your software&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this book about?&lt;/h2&gt; &#xA;&lt;p&gt;Creating top-notch software is an extremely difficult undertaking. Developers researching the subject have difficulty determining which advice is up-to-date and which approaches have already been replaced by easier, better practices. At the same time, most online resources offer limited explanation, while also lacking the proper context and structure.&lt;/p&gt; &#xA;&lt;p&gt;This book covers the following exciting features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Understand best practices for building C++ code&lt;/li&gt; &#xA; &lt;li&gt;Gain practical knowledge of the CMake language by focusing on the most useful aspects&lt;/li&gt; &#xA; &lt;li&gt;Use cutting-edge tooling to guarantee code quality with the help of tests and static and dynamic analysis&lt;/li&gt; &#xA; &lt;li&gt;Discover how to manage, discover, download, and link dependencies with CMake&lt;/li&gt; &#xA; &lt;li&gt;Build solutions that can be reused and maintained in the long term&lt;/li&gt; &#xA; &lt;li&gt;Understand how to optimize build artifacts and the build process itself&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you feel this book is for you, get your &lt;a href=&#34;https://www.amazon.com/Modern-CMake-Discover-approach-packaging/dp/1801070059&#34;&gt;copy&lt;/a&gt; today!&lt;/p&gt; &#xA;&lt;h2&gt;Instructions and Navigations&lt;/h2&gt; &#xA;&lt;p&gt;All of the code is organized into folders. For example, Chapter02.&lt;/p&gt; &#xA;&lt;p&gt;The code will look like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;function(Inner)&#xA;  message(&#34;  &amp;gt; Inner: ${V}&#34;)&#xA;  set(V 3)&#xA;  message(&#34;  &amp;lt; Inner: ${V}&#34;)&#xA;endfunction()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Following is what you need for this book:&lt;/strong&gt; The book is for build engineers and software developers with knowledge of C/C++ programming who are looking to learn CMake to automate the process of building small and large software solutions. If you are someone who&#39;s just getting started with CMake, a long-time GNU Make user, or simply looking to brush up on the latest best practices, this book is for you.&lt;/p&gt; &#xA;&lt;p&gt;With the following software and hardware list you can run all code files present in the book (Chapter 1-13).&lt;/p&gt; &#xA;&lt;h3&gt;Software and Hardware List&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Chapter&lt;/th&gt; &#xA;   &lt;th&gt;Software/Hardware required&lt;/th&gt; &#xA;   &lt;th&gt;OS required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1-13&lt;/td&gt; &#xA;   &lt;td&gt;Cmake 3.20&lt;/td&gt; &#xA;   &lt;td&gt;Windows, Mac OS X, and Linux&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;We also provide a PDF file that has color images of the screenshots/diagrams used in this book. &lt;a href=&#34;https://static.packt-cdn.com/downloads/9781801070058_ColorImages.pdf&#34;&gt;Click here to download it&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Errata&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 46 (Paragraph 1, line 1): &lt;strong&gt;Multiline comments get their name from their symbol – they start with an opening square bracket ([) ...&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;Multiline comments get their name from their symbol – they start with an # and an opening square bracket (#[) ...&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 75 (line 10): &lt;code&gt;main()&lt;/code&gt; &lt;em&gt;should be&lt;/em&gt; &lt;code&gt;endmacro()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 107 (Paragraph 2, line 14 and 15): &lt;strong&gt;Calling test_run() isn&#39;t very complicated at all. We start by setting the required standard, after which we call test_run() and print the collected information to the user:&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;Calling try_run() isn&#39;t very complicated at all. We start by setting the required standard, after which we call try_run() and print the collected information to the user:&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 137 (Paragraph 1, line 1): &lt;strong&gt;generation expression&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;generator expression&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 168 (Paragraph 5, line 19): &lt;strong&gt;• -finline-functions-called-once: GCC only • -finline-functions: Clang and GCC • -finline-hint-functions: Clang only • -finline-functions-called-once: GCC only&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;• -finline-functions-called-once: GCC only • -finline-functions: Clang and GCC • -finline-hint-functions: Clang only&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 195 (line 12): &lt;strong&gt;chapter06/02-odr-fail/two.cpp&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;chapter06/02-odr-fail/CMakeLists.txt&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 208 (line 13): &lt;strong&gt;• Discovering legacy packages with FindPkgConfig0&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;• Discovering legacy packages with FindPkgConfig&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 213 (line 11): &lt;strong&gt;&amp;lt;PKG_NAME&amp;gt;_LIBRARIES or &amp;lt;PKG_NAME&amp;gt;_LIBRARIES or &amp;lt;PKG_NAME&amp;gt;_LIBS&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;&amp;lt;PKG_NAME&amp;gt;_LIBRARIES or &amp;lt;PKG_NAME&amp;gt;_LIBS&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 222 (line 9): &lt;strong&gt;# deliberately used in mind-module against the documentation&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;# deliberately used in find-module against the documentation&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 222 (Paragraph 2,line 16): &lt;strong&gt;If a matching file is found, its path will be stored in the PQXX_LIBRARY_PATH variable. Otherwise, the variable will be set to &lt;var&gt;-NOTFOUND, or PQXX_HEADER_PATH-NOTFOUND in this case.&lt;/var&gt;&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;If a matching file is found, its path will be stored in the PQXX_LIBRARY_PATH variable. Otherwise, the variable will be set to &lt;var&gt;-NOTFOUND, or PQXX_LIBRARY_PATH-NOTFOUND in this case.&lt;/var&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 231 (line 7): &lt;strong&gt;Downloading the step options&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;The downloading step options&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 265 (Paragraph 1,line 3): &lt;strong&gt;shave&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;save&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 265 (Paragraph 2,line 14): &lt;strong&gt;allow&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;disallow&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 354 (Paragraph 3,line 31): &lt;strong&gt;install(FILES)&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;configure_package_config_file&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 362 (Paragraph 1,line 3): &lt;strong&gt;...but there are also are procedural steps...&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;...but there are also procedural steps...&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 384 (line 28): &lt;strong&gt;calc_command&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;calc_console&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Page 395 (Paragraph 1,line 5): &lt;strong&gt;CPack&lt;/strong&gt; &lt;em&gt;should be&lt;/em&gt; &lt;strong&gt;CTest&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Related products&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;CMake Cookbook &lt;a href=&#34;https://www.packtpub.com/product/cmake-cookbook/9781788470711&#34;&gt;[Packt]&lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/CMake-Cookbook-Building-packaging-software/dp/1788470710&#34;&gt;[Amazon]&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Art of Writing Efficient Programs &lt;a href=&#34;https://www.packtpub.com/product/the-art-of-writing-efficient-programs/9781800208117&#34;&gt;[Packt]&lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/Art-Writing-Efficient-Programs-optimizations/dp/1800208111&#34;&gt;[Amazon]&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get to Know the Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rafał Świdziński&lt;/strong&gt; works as a staff engineer at Google. With over 10 years of professional experience as a full stack developer, he has been able to experiment with a vast multitude of programming languages and technologies. During this time, he has been building software under his own company and for corporations including Cisco Meraki, Amazon, and Ericsson. Originally from Łódź, Poland, he now lives in London, UK, from where he runs a YouTube channel, “Smok,” discussing topics of software development. He tackles technical problems, including real-life and work-related challenges encountered by many people in the field. Throughout his work, he explains the technical concepts in detail and demystifies the art of being a software engineer. His primary focus is on high-quality code and the craftsmanship of programming.&lt;/p&gt; &#xA;&lt;h3&gt;Download a free PDF&lt;/h3&gt; &#xA;&lt;p&gt;&lt;i&gt;If you have already purchased a print or Kindle version of this book, you can get a DRM-free PDF version at no cost.&lt;br&gt;Simply click on the link to claim your free PDF.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://packt.link/free-ebook/9781801070058&#34;&gt;https://packt.link/free-ebook/9781801070058 &lt;/a&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>serversideup/docker-php</title>
    <updated>2023-04-02T01:52:58Z</updated>
    <id>tag:github.com,2023-04-02:/serversideup/docker-php</id>
    <link href="https://github.com/serversideup/docker-php" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production-ready Docker images for PHP. Optimized for Laravel, WordPress, and more!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/serversideup/docker-php/main/.github/img/header.png&#34; width=&#34;1280&#34; alt=&#34;Docker Images Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/serversideup/docker-php/actions/workflows/publish_docker-images-production.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/serversideup/docker-php/publish_docker-images-production.yml?branch=main&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/serversideup/docker-php/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/serversideup/docker-php&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/Support%20Us?label=GitHub%20Sponsors&amp;amp;color=orange&#34; alt=&#34;Support us&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://hub.docker.com/r/serversideup/php/&#34;&gt;&lt;img alt=&#34;Docker Pulls&#34; src=&#34;https://img.shields.io/docker/pulls/serversideup/php&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://community.serversideup.net&#34;&gt;&lt;img alt=&#34;Discourse users&#34; src=&#34;https://img.shields.io/discourse/users?color=blue&amp;amp;server=https%3A%2F%2Fcommunity.serversideup.net&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://serversideup.net/discord&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/910287105714954251?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Hi! We&#39;re &lt;a href=&#34;https://twitter.com/danpastori&#34;&gt;Dan&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jaydrogers&#34;&gt;Jay&lt;/a&gt;. We&#39;re a two person team with a passion for open source products. We created &lt;a href=&#34;https://serversideup.net&#34;&gt;Server Side Up&lt;/a&gt; to help share what we learn.&lt;/p&gt; &#xA;&lt;h3&gt;Find us at:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://serversideup.net&#34;&gt;Blog&lt;/a&gt; - get the latest guides and free courses on all things web/mobile development.&lt;/li&gt; &#xA; &lt;li&gt;🙋 &lt;a href=&#34;https://community.serversideup.net&#34;&gt;Community&lt;/a&gt; - get friendly help from our community members.&lt;/li&gt; &#xA; &lt;li&gt;🤵‍♂️ &lt;a href=&#34;https://serversideup.net/get-help&#34;&gt;Get Professional Help&lt;/a&gt; - get guaranteed responses within next business day.&lt;/li&gt; &#xA; &lt;li&gt;💻 &lt;a href=&#34;https://github.com/serversideup&#34;&gt;GitHub&lt;/a&gt; - check out our other open source projects&lt;/li&gt; &#xA; &lt;li&gt;📫 &lt;a href=&#34;https://serversideup.net/subscribe&#34;&gt;Newsletter&lt;/a&gt; - skip the algorithms and get quality content right to your inbox&lt;/li&gt; &#xA; &lt;li&gt;🐥 &lt;a href=&#34;https://twitter.com/serversideup&#34;&gt;Twitter&lt;/a&gt; - you can also follow &lt;a href=&#34;https://twitter.com/danpastori&#34;&gt;Dan&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jaydrogers&#34;&gt;Jay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;❤️ &lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;Sponsor Us&lt;/a&gt; - please consider sponsoring us so we can create more helpful resources&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Our Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;All of our software is free an open to the world. None of this can be brought to you without the financial backing of our sponsors.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sponsors/serversideup&#34;&gt;&lt;img src=&#34;https://521public.s3.amazonaws.com/serversideup/sponsors/sponsor-box.png&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Individual Supporters&lt;/h4&gt; &#xA;&lt;!-- supporters --&gt;&#xA;&lt;a href=&#34;https://github.com/deligoez&#34;&gt;&lt;img src=&#34;https://github.com/deligoez.png&#34; width=&#34;40px&#34; alt=&#34;deligoez&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&#xA;&lt;a href=&#34;https://github.com/alexjustesen&#34;&gt;&lt;img src=&#34;https://github.com/alexjustesen.png&#34; width=&#34;40px&#34; alt=&#34;alexjustesen&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&#xA;&lt;a href=&#34;https://github.com/jeremykenedy&#34;&gt;&lt;img src=&#34;https://github.com/jeremykenedy.png&#34; width=&#34;40px&#34; alt=&#34;jeremykenedy&#34;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&#xA;&lt;!-- supporters --&gt; &#xA;&lt;h1&gt;Available Docker Images&lt;/h1&gt; &#xA;&lt;p&gt;This is a list of the docker images this repository creates:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;⚙️ Variation&lt;/th&gt; &#xA;   &lt;th&gt;🚀 Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cli&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.2-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.2-cli?label=serversideup%2Fphp%3A8.2-cli&#34; alt=&#34;serversideup/php:8.2-cli&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-cli?label=serversideup%2Fphp%3A8.1-cli&#34; alt=&#34;serversideup/php:8.1-cli&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.0-cli?label=serversideup%2Fphp%3A8.0-cli&#34; alt=&#34;serversideup/php:8.0-cli&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-cli&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/7.4-cli?label=serversideup%2Fphp%3A7.4-cli&#34; alt=&#34;serversideup/php:7.4-cli&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.2-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.2-fpm?label=serversideup%2Fphp%3A8.2-fpm&#34; alt=&#34;serversideup/php:8.2-fpm&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm?label=serversideup%2Fphp%3A8.1-fpm&#34; alt=&#34;serversideup/php:8.1-fpm&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.0-fpm?label=serversideup%2Fphp%3A8.0-fpm&#34; alt=&#34;serversideup/php:8.0-fpm&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/7.4-fpm?label=serversideup%2Fphp%3A7.4-fpm&#34; alt=&#34;serversideup/php:7.4-fpm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm-apache&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.2-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.2-fpm-apache?label=serversideup%2Fphp%3A8.2-fpm-apache&#34; alt=&#34;serversideup/php:8.2-fpm-apache&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm-apache?label=serversideup%2Fphp%3A8.1-fpm-apache&#34; alt=&#34;serversideup/php:8.1-fpm-apache&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.0-fpm-apache?label=serversideup%2Fphp%3A8.0-fpm-apache&#34; alt=&#34;serversideup/php:8.0-fpm-apache&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm-apache&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/7.4-fpm-apache?label=serversideup%2Fphp%3A7.4-fpm-apache&#34; alt=&#34;serversideup/php:7.4-fpm-apache&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fpm-nginx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.2-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.2-fpm-nginx?label=serversideup%2Fphp%3A8.2-fpm-nginx&#34; alt=&#34;serversideup/php:8.2-fpm-nginx&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.1-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.1-fpm-nginx?label=serversideup%2Fphp%3A8.1-fpm-nginx&#34; alt=&#34;serversideup/php:8.1-fpm-nginx&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=8.0-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/8.0-fpm-nginx?label=serversideup%2Fphp%3A8.0-fpm-nginx&#34; alt=&#34;serversideup/php:8.0-fpm-nginx&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://hub.docker.com/r/serversideup/php/tags?name=7.4-fpm-nginx&amp;amp;page=1&amp;amp;ordering=-name&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/serversideup/php/7.4-fpm-nginx?label=serversideup%2Fphp%3A7.4-fpm-nginx&#34; alt=&#34;serversideup/php:7.4-fpm-nginx&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Simply use this image name pattern in any of your projects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;serversideup/php:{{version}}-{{variation-name}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example... If I wanted to run &lt;strong&gt;PHP 8.0&lt;/strong&gt; with &lt;strong&gt;FPM + NGINX&lt;/strong&gt;, I would use this image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;serversideup/php:8.0-fpm-nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Real-life working example&lt;/h3&gt; &#xA;&lt;p&gt;You can see a bigger picture on how these images are used from Development to Production by viewing this video that shows a high level overview how we deploy &#34;&lt;a href=&#34;https://roastandbrew.coffee/&#34;&gt;ROAST&lt;/a&gt;&#34; which is a demo production app for &lt;a href=&#34;https://serversideup.net/ultimate-guide-to-building-apis-and-spas-with-laravel-and-vuejs/&#34;&gt;our book&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Click the image below to view the video:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PInGAWnvkjM&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/PInGAWnvkjM/0.jpg&#34; alt=&#34;Laravel + NuxtJS From Dev to production&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Updates&lt;/h3&gt; &#xA;&lt;p&gt;✅ The image builds automatically run weekly (Tuesday at 0800 UTC) for latest security updates.&lt;/p&gt; &#xA;&lt;h1&gt;Why these images and not other ones?&lt;/h1&gt; &#xA;&lt;p&gt;These images have a few key differences. These images are:&lt;/p&gt; &#xA;&lt;h2&gt;🚀 These images are used in production&lt;/h2&gt; &#xA;&lt;p&gt;Our philosophy is: &lt;strong&gt;What you run in production is what you should be running in development.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;d be shocked how many people create a Docker image and use it in the local development only. These images are designed with the intention of being deployed to the open and wild Internet.&lt;/p&gt; &#xA;&lt;h2&gt;🧐 Based off of &lt;a href=&#34;https://github.com/just-containers/s6-overlay&#34;&gt;S6 Overlay&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;S6 Overlay is very helpful in managing a container&#39;s lifecycle that has multiple processes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wait... Isn&#39;t Docker supposed to be a &#34;single process per container&#34;?&lt;/strong&gt; Yes, that&#39;s what it&#39;s like in a perfect world. Unfortunately PHP isn&#39;t like that. You need both a web server and a PHP-FPM server to see your files in order for your application to load.&lt;/p&gt; &#xA;&lt;p&gt;We follow the &lt;a href=&#34;https://github.com/just-containers/s6-overlay#the-docker-way&#34;&gt;S6 Overlay Philosophy&lt;/a&gt; on how we can still get a single, disposable, and repeatable image of our application out to our servers.&lt;/p&gt; &#xA;&lt;h2&gt;🤩 See all the differences&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking to understand more the key differences with these PHP images, check out our documentation site.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://serversideup.net/open-source/docker-php/docs/getting-started/these-images-vs-others&#34;&gt;Read more about the key differences with these images →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;We have everything fully documented and available on our website. If you find an issue, everything is located under the &lt;code&gt;/docs&lt;/code&gt; folder or the &lt;code&gt;/docs/content&lt;/code&gt; folder if you&#39;re looking to submit a change to the documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://serversideup.net/open-source/docker-php/docs&#34;&gt;View the Documentation →&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Submitting issues and pull requests&lt;/h1&gt; &#xA;&lt;p&gt;Since there are a lot of dependencies on these images, please understand that it can make it complicated on merging your pull request.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;d love to have your help, but it might be best to explain your intentions first before contributing.&lt;/p&gt; &#xA;&lt;h3&gt;Like we said -- we&#39;re always learning&lt;/h3&gt; &#xA;&lt;p&gt;If you find a critical security flaw, please open an issue or learn more about &lt;a href=&#34;https://www.notion.so/Responsible-Disclosure-Policy-421a6a3be1714d388ebbadba7eebbdc8&#34;&gt;our responsible disclosure policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>