<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-02T01:40:55Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mattcurf/ollama-intel-gpu</title>
    <updated>2025-02-02T01:40:55Z</updated>
    <id>tag:github.com,2025-02-02:/mattcurf/ollama-intel-gpu</id>
    <link href="https://github.com/mattcurf/ollama-intel-gpu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ollama-intel-gpu&lt;/h1&gt; &#xA;&lt;p&gt;This repo illlustrates the use of Ollama with support for Intel ARC GPU based via ipex-llm. Run the recently released &lt;a href=&#34;https://github.com/deepseek-ai/DeepSeek-R1&#34;&gt;deepseek-r1&lt;/a&gt; model on your local Intel ARC GPU based PC using Linux or Windows WSL2.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mattcurf/ollama-intel-gpu/main/doc/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 24.04 or newer (for Intel ARC GPU kernel driver support. Tested with Ubuntu 24.04), or Windows 11 with WSL2 (graphics driver &lt;a href=&#34;https://www.intel.com/content/www/us/en/download/785597/intel-arc-iris-xe-graphics-windows.html&#34;&gt;101.5445&lt;/a&gt; or newer).&lt;/li&gt; &#xA; &lt;li&gt;Installed Docker and Docker-compose tools (for Linux) or Docker Desktop (for Windows)&lt;/li&gt; &#xA; &lt;li&gt;Intel ARC series GPU. Tested with Intel ARC A770 16GB, Intel(R) Core(TM) Ultra 5 125H integrated GPU (Meteor Lake), and Intel(R) Core(TM) Intel Ultra 7 258V integrated GPU (Lunar Lake)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; This branch uses the upstream ipex container published by Intel. See the alternate branch &lt;a href=&#34;https://github.com/mattcurf/ollama-intel-gpu/tree/alternate_base_image&#34;&gt;alternate_base_image&lt;/a&gt; for an equivalent Dockerfile which builds everything from the published packages directly.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The following will build the Ollama with Intel ARC GPU support, and compose those with the public docker image based on OpenWEB UI from &lt;a href=&#34;https://github.com/open-webui/open-webui&#34;&gt;https://github.com/open-webui/open-webui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/mattcurf/ollama-intel-gpu&#xA;$ cd ollama-intel-gpu&#xA;$ docker compose up &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows WSL2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/mattcurf/ollama-intel-gpu&#xA;$ cd ollama-intel-gpu&#xA;$ docker-compose -f docker-compose-wsl2.yml up &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; you will see the following message. This is expected and harmless, as the docker image &#39;ollama-intel-gpu&#39; is built locally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ollama-intel-gpu Warning pull access denied for ollama-intel-gpu, repository does not exist or may require &#39;docker login&#39;: denied: requested access to the resource is denied&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then launch your web browser to &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; to launch the web ui. Create a local OpenWeb UI credential, then click the settings icon in the top right of the screen, then select &#39;Models&#39;, then click &#39;Show&#39;, then download a model like &#39;llama3.1:8b-instruct-q8_0&#39; for Intel ARC A770 16GB VRAM&lt;/p&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dgpu-docs.intel.com/driver/client/overview.html&#34;&gt;https://dgpu-docs.intel.com/driver/client/overview.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipex-llm.readthedocs.io/en/latest/doc/LLM/Quickstart/ollama_quickstart.html&#34;&gt;https://ipex-llm.readthedocs.io/en/latest/doc/LLM/Quickstart/ollama_quickstart.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>streetsidesoftware/cspell-cli</title>
    <updated>2025-02-02T01:40:55Z</updated>
    <id>tag:github.com,2025-02-02:/streetsidesoftware/cspell-cli</id>
    <link href="https://github.com/streetsidesoftware/cspell-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CSpell command line spell checker.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cspell-cli&lt;/h1&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To check all files under the current directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx cspell-cli --gitignore .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup &lt;a href=&#34;https://pre-commit.com&#34;&gt;pre-commit&lt;/a&gt; Hook&lt;/h2&gt; &#xA;&lt;p&gt;This repository enables using &lt;a href=&#34;https://github.com/streetsidesoftware/cspell&#34;&gt;cspell&lt;/a&gt; as a &lt;a href=&#34;https://pre-commit.com&#34;&gt;pre-commit&lt;/a&gt; hook.&lt;/p&gt; &#xA;&lt;!-- x-release-please-start-version --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# .pre-commit-config.yaml&#xA;repos:&#xA;  - repo: https://github.com/streetsidesoftware/cspell-cli&#xA;    rev: v8.17.1&#xA;    hooks:&#xA;      - id: cspell # Spell check changed files&#xA;      - id: cspell # Spell check the commit message&#xA;        name: check commit message spelling&#xA;        args:&#xA;          - --no-must-find-files&#xA;          - --no-progress&#xA;          - --no-summary&#xA;          - --files&#xA;          - .git/COMMIT_EDITMSG&#xA;        stages: [commit-msg]&#xA;        always_run: true # This might not be necessary.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- x-release-please-end --&gt; &#xA;&lt;h2&gt;Setup Custom Dictionary&lt;/h2&gt; &#xA;&lt;p&gt;To use a custom dictionary with the &lt;code&gt;pre-commit&lt;/code&gt; hook, create either a &lt;code&gt;cspell.config.yaml&lt;/code&gt; or &lt;code&gt;cspell.json&lt;/code&gt; file in your project&#39;s root directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell.config.yaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dictionaryDefinitions:&#xA;  - name: myWords&#xA;    path: ./path/to/cSpell_dict.txt&#xA;    addWords: true&#xA;dictionaries:&#xA;  - myWords&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;cSpell.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;dictionaryDefinitions&#34;: [&#xA;    {&#xA;      &#34;name&#34;: &#34;myWords&#34;,&#xA;      &#34;path&#34;: &#34;./path/to/cSpell_dict.txt&#34;,&#xA;      &#34;addWords&#34;: true&#xA;    }&#xA;  ],&#xA;  &#34;dictionaries&#34;: [&#34;myWords&#34;]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you installed the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker&#34;&gt;Code Spell Checker extension&lt;/a&gt; for VS Code, this can be done automatically from the command palette by running &#34;Spell: Create a CSpell configuration file&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Install from GitHub&lt;/h2&gt; &#xA;&lt;p&gt;This repo also allows installing the &lt;code&gt;cspell-cli&lt;/code&gt; directly from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g git+https://github.com/streetsidesoftware/cspell-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell&#34;&gt;Package cspell&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest &#34;**&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/streetsidesoftware/cspell-cli/tree/main/docker/german/README.md&#34;&gt;Extending the Docker Container to include German&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell [options] [command]&#xA;&#xA;Spelling Checker for Code&#xA;&#xA;Options:&#xA;  -V, --version                         output the version number&#xA;  -h, --help                            display help for command&#xA;&#xA;Commands:&#xA;  lint [options] [globs...]             Check spelling&#xA;  trace [options] [words...]            Trace words -- Search for words in the&#xA;                                        configuration and dictionaries.&#xA;  check [options] &amp;lt;files...&amp;gt;            Spell check file(s) and display the&#xA;                                        result. The full file is displayed in&#xA;                                        color.&#xA;  suggestions|sug [options] [words...]  Spelling Suggestions for words.&#xA;  link                                  Link dictionaries and other settings to&#xA;                                        the cspell global config.&#xA;  help [command]                        display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help.txt ---&gt; &#xA;&lt;h3&gt;Lint&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;lint&lt;/code&gt; is the default command.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell lint --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help-lint.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell lint [options] [globs...] [file://&amp;lt;path&amp;gt; ...] [stdin[://&amp;lt;path&amp;gt;]]&#xA;&#xA;Patterns:&#xA; - [globs...]            Glob Patterns&#xA; - [stdin]               Read from &#34;stdin&#34; assume text file.&#xA; - [stdin://&amp;lt;path&amp;gt;]      Read from &#34;stdin&#34;, use &amp;lt;path&amp;gt; for file type and config.&#xA; - [file://&amp;lt;path&amp;gt;]       Check the file at &amp;lt;path&amp;gt;&#xA;&#xA;Examples:&#xA;    cspell .                        Recursively check all files.&#xA;    cspell lint .                   The same as &#34;cspell .&#34;&#xA;    cspell &#34;*.js&#34;                   Check all .js files in the current directory&#xA;    cspell &#34;**/*.js&#34;                Check all .js files recursively&#xA;    cspell &#34;src/**/*.js&#34;            Only check .js under src&#xA;    cspell &#34;**/*.txt&#34; &#34;**/*.js&#34;     Check both .js and .txt files.&#xA;    cspell &#34;**/*.{txt,js,md}&#34;       Check .txt, .js, and .md files.&#xA;    cat LICENSE | cspell stdin      Check stdin&#xA;    cspell stdin://docs/doc.md      Check stdin as if it was &#34;./docs/doc.md&#34;&#xA;&#xA;Check spelling&#xA;&#xA;Options:&#xA;  -c, --config &amp;lt;cspell.json&amp;gt;   Configuration file to use.  By default cspell&#xA;                               looks for cspell.json in the current directory.&#xA;  -v, --verbose                Display more information about the files being&#xA;                               checked and the configuration.&#xA;  --locale &amp;lt;locale&amp;gt;            Set language locales. i.e. &#34;en,fr&#34; for English&#xA;                               and French, or &#34;en-GB&#34; for British English.&#xA;  --language-id &amp;lt;file-type&amp;gt;    Force programming language for unknown&#xA;                               extensions. i.e. &#34;php&#34; or &#34;scala&#34;&#xA;  --words-only                 Only output the words not found in the&#xA;                               dictionaries.&#xA;  -u, --unique                 Only output the first instance of a word not&#xA;                               found in the dictionaries.&#xA;  -e, --exclude &amp;lt;glob&amp;gt;         Exclude files matching the glob pattern. This&#xA;                               option can be used multiple times to add multiple&#xA;                               globs.&#xA;  --file-list &amp;lt;path or stdin&amp;gt;  Specify a list of files to be spell checked. The&#xA;                               list is filtered against the glob file patterns.&#xA;                               Note: the format is 1 file path per line.&#xA;  --file [file...]             Specify files to spell check. They are filtered&#xA;                               by the [globs...].&#xA;  --no-issues                  Do not show the spelling errors.&#xA;  --no-progress                Turn off progress messages&#xA;  --no-summary                 Turn off summary message in console.&#xA;  -s, --silent                 Silent mode, suppress error messages.&#xA;  --no-exit-code               Do not return an exit code if issues are found.&#xA;  --quiet                      Only show spelling issues or errors.&#xA;  --fail-fast                  Exit after first file with an issue or error.&#xA;  -r, --root &amp;lt;root folder&amp;gt;     Root directory, defaults to current directory.&#xA;  --no-relative                Issues are displayed with absolute path instead&#xA;                               of relative to the root.&#xA;  --show-context               Show the surrounding text around an issue.&#xA;  --show-suggestions           Show spelling suggestions.&#xA;  --no-show-suggestions        Do not show spelling suggestions or fixes.&#xA;  --no-must-find-files         Do not error if no files are found.&#xA;  --cache                      Use cache to only check changed files.&#xA;  --no-cache                   Do not use cache.&#xA;  --cache-reset                Reset the cache file.&#xA;  --cache-strategy &amp;lt;strategy&amp;gt;  Strategy to use for detecting changed files.&#xA;                               (choices: &#34;content&#34;, &#34;metadata&#34;, default:&#xA;                               &#34;content&#34;)&#xA;  --cache-location &amp;lt;path&amp;gt;      Path to the cache file or directory. (default:&#xA;                               &#34;.cspellcache&#34;)&#xA;  --dot                        Include files and directories starting with `.`&#xA;                               (period) when matching globs.&#xA;  --gitignore                  Ignore files matching glob patterns found in&#xA;                               .gitignore files.&#xA;  --no-gitignore               Do NOT use .gitignore files.&#xA;  --gitignore-root &amp;lt;path&amp;gt;      Prevent searching for .gitignore files past root.&#xA;  --validate-directives        Validate in-document CSpell directives.&#xA;  --color                      Force color.&#xA;  --no-color                   Turn off color.&#xA;  --no-default-configuration   Do not load the default configuration and&#xA;                               dictionaries.&#xA;  --debug                      Output information useful for debugging&#xA;                               cspell.json files.&#xA;  --reporter &amp;lt;module|path&amp;gt;     Specify one or more reporters to use.&#xA;  --issue-template [template]  Use a custom issue template. See --help&#xA;                               --issue-template for details.&#xA;  -h, --help                   display help for command&#xA;&#xA;More Examples:&#xA;&#xA;    cspell &#34;**/*.js&#34; --reporter @cspell/cspell-json-reporter&#xA;        This will spell check all &#34;.js&#34; files recursively and use&#xA;        &#34;@cspell/cspell-json-reporter&#34;.&#xA;&#xA;    cspell . --reporter default&#xA;        This will force the default reporter to be used overriding&#xA;        any reporters defined in the configuration.&#xA;&#xA;    cspell . --reporter ./&amp;lt;path&amp;gt;/reporter.cjs&#xA;        Use a custom reporter. See API for details.&#xA;&#xA;    cspell &#34;*.md&#34; --exclude CHANGELOG.md --files README.md CHANGELOG.md&#xA;        Spell check only check &#34;README.md&#34; but NOT &#34;CHANGELOG.md&#34;.&#xA;&#xA;    cspell &#34;/*.md&#34; --no-must-find-files --files $FILES&#xA;        Only spell check the &#34;/*.md&#34; files in $FILES,&#xA;        where $FILES is a shell variable that contains the list of files.&#xA;&#xA;References:&#xA;    https://cspell.org&#xA;    https://github.com/streetsidesoftware/cspell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help-lint.txt ---&gt; &#xA;&lt;h3&gt;Trace&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell trace --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help-trace.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell trace [options] [words...]&#xA;&#xA;Trace words -- Search for words in the configuration and dictionaries.&#xA;&#xA;Options:&#xA;  -c, --config &amp;lt;cspell.json&amp;gt;  Configuration file to use.  By default cspell&#xA;                              looks for cspell.json in the current directory.&#xA;  --locale &amp;lt;locale&amp;gt;           Set language locales. i.e. &#34;en,fr&#34; for English and&#xA;                              French, or &#34;en-GB&#34; for British English.&#xA;  --language-id &amp;lt;language&amp;gt;    Use programming language. i.e. &#34;php&#34; or &#34;scala&#34;.&#xA;  --allow-compound-words      Turn on allowCompoundWords&#xA;  --no-allow-compound-words   Turn off allowCompoundWords&#xA;  --ignore-case               Ignore case and accents when searching for words.&#xA;  --no-ignore-case            Do not ignore case and accents when searching for&#xA;                              words.&#xA;  --dictionary-path &amp;lt;format&amp;gt;  Configure how to display the dictionary path.&#xA;                              (choices: &#34;hide&#34;, &#34;short&#34;, &#34;long&#34;, &#34;full&#34;,&#xA;                              default: Display most of the path.)&#xA;  --stdin                     Read words from stdin.&#xA;  --all                       Show all dictionaries.&#xA;  --only-found                Show only dictionaries that have the words.&#xA;  --color                     Force color.&#xA;  --no-color                  Turn off color.&#xA;  --no-default-configuration  Do not load the default configuration and&#xA;                              dictionaries.&#xA;  -h, --help                  display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help-trace.txt ---&gt; &#xA;&lt;h3&gt;Check&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell check --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help-check.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell check [options] &amp;lt;files...&amp;gt;&#xA;&#xA;Spell check file(s) and display the result. The full file is displayed in color.&#xA;&#xA;Options:&#xA;  -c, --config &amp;lt;cspell.json&amp;gt;  Configuration file to use.  By default cspell&#xA;                              looks for cspell.json in the current directory.&#xA;  --validate-directives       Validate in-document CSpell directives.&#xA;  --no-validate-directives    Do not validate in-document CSpell directives.&#xA;  --no-color                  Turn off color.&#xA;  --color                     Force color&#xA;  --no-exit-code              Do not return an exit code if issues are found.&#xA;  --no-default-configuration  Do not load the default configuration and&#xA;                              dictionaries.&#xA;  -h, --help                  display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help-check.txt ---&gt; &#xA;&lt;h3&gt;Suggestions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell suggestions --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help-suggestions.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell suggestions|sug [options] [words...]&#xA;&#xA;Spelling Suggestions for words.&#xA;&#xA;Options:&#xA;  -c, --config &amp;lt;cspell.json&amp;gt;            Configuration file to use.  By default&#xA;                                        cspell looks for cspell.json in the&#xA;                                        current directory.&#xA;  --locale &amp;lt;locale&amp;gt;                     Set language locales. i.e. &#34;en,fr&#34; for&#xA;                                        English and French, or &#34;en-GB&#34; for&#xA;                                        British English.&#xA;  --language-id &amp;lt;language&amp;gt;              Use programming language. i.e. &#34;php&#34; or&#xA;                                        &#34;scala&#34;.&#xA;  -s, --no-strict                       Ignore case and accents when searching&#xA;                                        for words.&#xA;  --ignore-case                         Alias of --no-strict.&#xA;  --num-changes &amp;lt;number&amp;gt;                Number of changes allowed to a word&#xA;                                        (default: 4)&#xA;  --num-suggestions &amp;lt;number&amp;gt;            Number of suggestions (default: 8)&#xA;  --no-include-ties                     Force the number of suggested to be&#xA;                                        limited, by not including suggestions&#xA;                                        that have the same edit cost.&#xA;  --stdin                               Use stdin for input.&#xA;  --repl                                REPL interface for looking up&#xA;                                        suggestions.&#xA;  -v, --verbose                         Show detailed output.&#xA;  -d, --dictionary &amp;lt;dictionary name&amp;gt;    Use the dictionary specified. Only&#xA;                                        dictionaries specified will be used.&#xA;  --dictionaries &amp;lt;dictionary names...&amp;gt;  Use the dictionaries specified. Only&#xA;                                        dictionaries specified will be used.&#xA;  --no-color                            Turn off color.&#xA;  --color                               Force color&#xA;  -h, --help                            display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help-suggestions.txt ---&gt; &#xA;&lt;h3&gt;Link&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cspell link --help&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;!-- @@inject: static/help-link.txt ---&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cspell link [options] [command]&#xA;&#xA;Link dictionaries and other settings to the cspell global config.&#xA;&#xA;Options:&#xA;  -h, --help               display help for command&#xA;&#xA;Commands:&#xA;  list|ls                  List currently linked configurations.&#xA;  add|a &amp;lt;dictionaries...&amp;gt;  Add dictionaries any other settings to the cspell&#xA;                           global config.&#xA;  remove|r &amp;lt;paths...&amp;gt;      Remove matching paths / packages from the global&#xA;                           config.&#xA;  help [command]           display help for command&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- @@inject-end: static/help-link.txt ---&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;The major version of &lt;code&gt;cspell-cli&lt;/code&gt; tries to match the major version of &lt;code&gt;cspell&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;minor&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; versioning goes up independently from &lt;code&gt;cspell&lt;/code&gt;. Where possible, the &lt;code&gt;minor&lt;/code&gt; version should match &lt;code&gt;cspell&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>