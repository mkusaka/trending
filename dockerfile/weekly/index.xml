<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-07T01:46:44Z</updated>
  <subtitle>Weekly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eooce/node-ws</title>
    <updated>2024-01-07T01:46:44Z</updated>
    <id>tag:github.com,2024-01-07:/eooce/node-ws</id>
    <link href="https://github.com/eooce/node-ws" rel="alternate"></link>
    <summary type="html">&lt;p&gt;node环境通用项目&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node-ws说明&lt;/h1&gt; &#xA;&lt;p&gt;用于node环境的玩具和容器，基于node三方ws库，集成哪吒探针服务，可自行添加环境变量&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;PaaS 平台设置的环境变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;0dc5f3c0-002b-420e-86ef-7a779dfc9101&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;3000&lt;/td&gt; &#xA;     &lt;td&gt;监听端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;TIME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;2 * 60 * 1000&lt;/td&gt; &#xA;     &lt;td&gt;保活间隔时间，默认2分钟&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;URL&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://www.google.com&#34;&gt;https://www.google.com&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;保活的域名，不填写不开启&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒客户端域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;5555&lt;/td&gt; &#xA;     &lt;td&gt;当哪吒端口为443时，自动开启tls，无需设置TLS变量&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针客户端专用 Key&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NAME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;节点名称前缀，例如：Serv00&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;项目分配的域名或已反代的域名，不包括&lt;a href=&#34;https://%E5%89%8D%E7%BC%80&#34;&gt;https://前缀&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目已编译自访问功能，如需要，在index.js第3行中添加项目分配的域名，第4行为访问周期，根据需要修改。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;域名/sub查看节点信息，也是订阅地址，包含 https:// 或 http:// 前缀，非标端口，域名:端口/sub&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;右边的Releases中有适配FreeBSD系统的Serv00和CT8的压缩包&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;温馨提示：对于风控比较严格的平台建议修改完变量后，混肴后再部署，能够避免被封号，绝对安全，READAME.md为说明文件，请不要上传。 js混肴地址：&lt;a href=&#34;https://obfuscator.io&#34;&gt;https://obfuscator.io&lt;/a&gt; 全部使用默认配置就好，&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如需进一步修改，右边的Releases中有未混淆的源代码&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ashokitschool/k8s_metrics_server</title>
    <updated>2024-01-07T01:46:44Z</updated>
    <id>tag:github.com,2024-01-07:/ashokitschool/k8s_metrics_server</id>
    <link href="https://github.com/ashokitschool/k8s_metrics_server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;k8s_metrics_server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes Metrics Server&lt;/h1&gt; &#xA;&lt;p&gt;Metrics-server aggregates resource consumption data like CPU and memory usage for Kubernetes nodes, pods and containers. These metrics are collected from the API exposed by the Kubelet on each node.&lt;/p&gt; &#xA;&lt;p&gt;The metrics server is commonly used by other Kubernetes add ons, such as the Horizontal Pod Autoscaler or the Kubernetes Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;It is not deployed by default.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;In order to deploy metrics-server in your kubernetes master machine clone &lt;a href=&#34;https://github.com/ashokitschool/k8s_metrics_server.git&#34;&gt;https://github.com/ashokitschool/k8s_metrics_server.git&lt;/a&gt; and run the following command from the top-level directory(metrics-server) of this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ kubectl apply -f deploy/1.8+/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Display node metrics&#xA;$ kubectl top nodes&#xA;&#xA;# Display pod metrics&#xA;$ kubectl top pods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;p&gt;You can find the user guide in &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/&#34;&gt;the official Kubernetes documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The detailed design of the project can be found in the following docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/resource-metrics-api.md&#34;&gt;Metrics API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/metrics-server.md&#34;&gt;Metrics Server&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/metrics-server.git&#34;&gt;Metrics Server Git Hub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the broader view of monitoring in Kubernetes take a look into &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/monitoring_architecture.md&#34;&gt;Monitoring architecture&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LinkedInLearning/java-avance-3800022</title>
    <updated>2024-01-07T01:46:44Z</updated>
    <id>tag:github.com,2024-01-07:/LinkedInLearning/java-avance-3800022</id>
    <link href="https://github.com/LinkedInLearning/java-avance-3800022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Java : Niveau avancé&lt;/h1&gt; &#xA;&lt;p&gt;Ce dossier Repository est lié au cours &lt;code&gt;Java : Niveau avancé&lt;/code&gt;. Le cours entier est disponible sur &lt;a href=&#34;https://www.linkedin.com/learning/java-niveau-avance&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/D560DAQEzuwjddDZaNw/learning-public-crop_675_1200/0/1701692528183?e=2147483647&amp;amp;v=beta&amp;amp;t=_I4O2154vCBCzGuVroCWJef-Kxl804P4zOx-7zT7hqY&#34; alt=&#34;Nom final de la formation&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dans cette formation qui s&#39;adresse aux développeurs, Sylvain Labasse vous propose de vous plonger dans l&#39;utilisation avancée de Java, l&#39;incontournable langage de programmation orienté objet. Après avoir choisi et mis en place votre environnement de travail, vous apprendrez à manipuler les types et à étendre les syntaxes utilisées. Vous verrez comment lier les lambdas et les flux et de quelle manière utiliser les entrées/sorties. Puis, pour conclure, vous aborderez le multitasking et la structuration en modules.&lt;/p&gt; &#xA;&lt;p&gt;La meilleure façon d&#39;apprendre un langage est de l&#39;utiliser dans la pratique. C&#39;est pourquoi ce cours est intégré à GitHub Codespaces, un environnement de développement instantané « dans le nuage » qui offre toutes les fonctionnalités de votre IDE préféré sans nécessiter de configuration sur une machine locale. Avec Codespaces, vous pouvez vous exercer à partir de n&#39;importe quelle machine, à tout moment, tout en utilisant un outil que vous êtes susceptible de rencontrer sur votre lieu de travail. Consultez la vidéo &#34;Utilisation de Codespaces GitHub dans le cadre de ce cours&#34; pour savoir comment démarrer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Voir le fichier readme file de la branche principale pour des instructions et informations actualisées.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Pour utiliser GitHub Codespaces et faire apparaître l&#39;environnement du cours dans votre navigateur, il vous suffit de cliquer sur :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork à droite du nom du dépôt, pour faire votre fork de ce dépôt,&lt;/li&gt; &#xA; &lt;li&gt;Le bouton &amp;lt;&amp;gt; Code, pour faire sélectionner l&#39;onglet Codespaces,&lt;/li&gt; &#xA; &lt;li&gt;Le bouton Create codespace on main, pour initier et faire apparaître un codespace.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ce dépôt possède une ou deux branches par leçon (vidéo de cours). Vous pouvez naviguer dans les versions grâce au menu d&#39;accès aux branches accessible en cliquant sur le nom de branche en bas à gauche de VisualStudio Code.&lt;/p&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;p&gt;Les branches sont structurées de manière à correspondre aux vidéos du cours. La convention de nommage est : CHAPITRE#_VIDEO#. Par exemple, la branche nommée 02_03 correspond au second chapitre, et à la troisième vidéo de ce chapitre. Certaines branches ont un état de départ et de fin. La branche 02_03_d correspond au code du début de la vidéo. La branche 02_03_f correspond au code à la fin de la vidéo.&lt;/p&gt; &#xA;&lt;p&gt;En changeant de branche, après avoir fait des changements, il se peut que vous ayez ce message :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;erreur : Vos changements locaux sur les fichiers suivants seront écrasés par le basculement (checkout) : [fichiers]&#xA;Validez (commit) vos changement ou réservez (stash) les avant de changer de branche.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pour résoudre ce problème :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ajoutez vos changements avec la commande : git add .&lt;/li&gt; &#xA; &lt;li&gt;Validez les avec commande: git commit -m &#34;un message&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Formateur&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sylvain Labasse&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Retrouvez mes autres formations sur &lt;a href=&#34;https://www.linkedin.com/learning/instructors/sylvain-labasse&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>