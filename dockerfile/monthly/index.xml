<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-01T01:48:29Z</updated>
  <subtitle>Monthly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>redhat-openshift-ecosystem/certified-operators</title>
    <updated>2024-09-01T01:48:29Z</updated>
    <id>tag:github.com,2024-09-01:/redhat-openshift-ecosystem/certified-operators</id>
    <link href="https://github.com/redhat-openshift-ecosystem/certified-operators" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Production catalog for Red Hat Certified Operator Bundles&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Red Hat certified operators production catalog&lt;/h1&gt; &#xA;&lt;p&gt;Production catalog for Red Hat Certified Operator Bundles&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://redhat-openshift-ecosystem.github.io/operator-pipelines/&#34;&gt;documentation&lt;/a&gt; to find out more about Certified operators and contribution.&lt;/p&gt; &#xA;&lt;h1&gt;Operator bundle submission&lt;/h1&gt; &#xA;&lt;p&gt;A new operator bundle submission needs to follow a predefined directory structure that is described below in this section. The new submission is done through Github pull requests which can be either open by the &lt;a href=&#34;https://github.com/redhat-openshift-ecosystem/operator-pipelines&#34;&gt;CI pipeline&lt;/a&gt; or manually by a user. The recommended way is to use the CI pipeline because it makes sure all necessary data are provided in the correct format. Documentation about how to use the pipeline is available in the pipeline repository.&lt;/p&gt; &#xA;&lt;h2&gt;Pull request&lt;/h2&gt; &#xA;&lt;p&gt;A pull request with a new operator bundle needs to follow given rules to pass a tests:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Title format: &lt;code&gt;operator package-name (version)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pull request can only modify one operator&lt;/li&gt; &#xA; &lt;li&gt;Pull request can&#39;t modify already merged operators&lt;/li&gt; &#xA; &lt;li&gt;Associated images need to be pinned to specific image digest - tags are not allowed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Rules mentioned above are always followed when pull request is opened using CI pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains an &lt;code&gt;operator&lt;/code&gt; directory where all certified operators are stored. Each operator has its directory with its package name. Inside the directory, you have to provide a &lt;code&gt;ci.yaml&lt;/code&gt; file that stores the necessary metadata for a successful certification process. The format of the file is described below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;operators&#xA;└── kogito-operator&#xA;    ├── 1.6.0&#xA;    │&amp;nbsp;&amp;nbsp; ├── manifests&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── app.kiegroup.org_kogitobuilds.yaml&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── app.kiegroup.org_kogitoinfras.yaml&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── app.kiegroup.org_kogitoruntimes.yaml&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── app.kiegroup.org_kogitosupportingservices.yaml&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── kogito-operator.clusterserviceversion.yaml&#xA;    │&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── kogito-operator-controller-manager_v1_serviceaccount.yaml&#xA;    │&amp;nbsp;&amp;nbsp; └── metadata&#xA;    │&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp; └── annotations.yaml&#xA;    └── ci.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Format of ci.yaml file&lt;/h3&gt; &#xA;&lt;p&gt;In the file, user needs to provide necessary details for the operator certification process. Currently, the certification process supports the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cert_project_id&lt;/code&gt; - Identifier of certification project created through Red Hat Connect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;merge&lt;/code&gt; - A boolean value that determines whether a new operator is automatically merged when passed all required checks. (optional, default: &lt;code&gt;True&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LinkedInLearning/level-up-advanced-sql-4311094</title>
    <updated>2024-09-01T01:48:29Z</updated>
    <id>tag:github.com,2024-09-01:/LinkedInLearning/level-up-advanced-sql-4311094</id>
    <link href="https://github.com/LinkedInLearning/level-up-advanced-sql-4311094" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is for the Linkedin Learning course: Level Up: Advanced SQL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Level Up: Advanced SQL&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the LinkedIn Learning course Level Up: Advanced SQL. The full course is available from &lt;a href=&#34;https://www.linkedin.com/learning/level-up-advanced-sql?dApp=59033956&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/C4E0DAQHtM4L47HiTTA/learning-public-crop_288_512/0/1678834688263?e=2147483647&amp;amp;v=beta&amp;amp;t=z4D7GGd51Bnp57k_qjDZ1oXIQi1_r3rVAoKDTAUXoyM&#34; alt=&#34;Level Up: Advanced SQL&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to test out your advanced SQL skills? This course was designed for you. These concise challenges let you stretch your brain and push your talents to the next level. Join Microsoft MVP and SQL expert Jess Pomfret to find out more about what it takes to become a master SQL user. Learn how to execute some of the more sophisticated SQLite queries, including complex join types, grouping, advanced select options, windowing functions, and more.&lt;/p&gt; &#xA;&lt;p&gt;This course is integrated with GitHub Codespaces, an instant development environment that offers all the functionality of your favorite IDE without the need for any local machine setup. With GitHub Codespaces, you can get hands-on practice from any machine, at any time—all while using a tool that you’ll likely encounter in the workplace.&lt;/p&gt; &#xA;&lt;p&gt;Each installment of the Level Up series offers at least 15 bite-sized opportunities to practice programming at various levels of difficulty, so you can challenge yourself and reinforce what you’ve learned. Check out the “Using GitHub Codespaces with this course” video to learn how to get a codespace up and running.&lt;/p&gt; &#xA;&lt;h3&gt;Instructor&lt;/h3&gt; &#xA;&lt;p&gt;Jess Pomfret&lt;/p&gt; &#xA;&lt;p&gt;Database Platform Architect and Microsoft MVP&lt;/p&gt; &#xA;&lt;p&gt;Check out my other courses on &lt;a href=&#34;https://www.linkedin.com/learning/instructors/jess-pomfret&#34;&gt;LinkedIn Learning&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bobby-didcoding/drf_course</title>
    <updated>2024-09-01T01:48:29Z</updated>
    <id>tag:github.com,2024-09-01:/bobby-didcoding/drf_course</id>
    <link href="https://github.com/bobby-didcoding/drf_course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Django Rest Framework Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Django Rest Framework (DRF) Course&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to this full Django Rest Framework (DRF)course. This course is perfect if you are looking to learn DRF and build your own API application.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python=&amp;gt;3.10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Considerations&lt;/h2&gt; &#xA;&lt;p&gt;I have added optional docker containers to simplify the build. If you want to use the docker build you should install Docker and Docker Compose on your local machine.&lt;/p&gt; &#xA;&lt;p&gt;We will be calling our API throughout the next 8 modules. I have written the requests in (Curl)[https://curl.se/] and (Httpie)[https://httpie.io/].&lt;/p&gt; &#xA;&lt;p&gt;(Httpie)[https://httpie.io/] provides a clean terminal output which is handy for this type of project. You will need to install it locally if you want to use the commands.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: (Httpie)[https://httpie.io/] is pre-installed in the docker container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;First you will need to clone down the first module.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new directory on your local machine. I have called mine drf_course. This is your &#39;root directory&#39;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a terminal and cd into the root directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can now clone the first module. You can do this a few different ways. I use SSH...&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;#option 1 - SSH&#xA;git clone --branch module_1 git@github.com:bobby-didcoding/drf_course.git .&#xA;&#xA;#option 2 - Github CLI&#xA;gh repo clone bobby-didcoding/drf_course .&#xA;git checkout module_1&#xA;&#xA;#option 3 - HTTPS&#xA;git clone --branch module_1 https://github.com/bobby-didcoding/drf_course.git .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Following along&lt;/h2&gt; &#xA;&lt;p&gt;Each module has a walk through video. All videos can be found in my (Django Rest Framework Course)[https://www.youtube.com/playlist?list=PL5VlxT4gkOFAD2wpucxHY3X2sCzhha5Kz] playlist.&lt;/p&gt; &#xA;&lt;p&gt;Please open /steps/module_1 to begin.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
</feed>