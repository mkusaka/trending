<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-01T02:08:05Z</updated>
  <subtitle>Monthly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Atinoda/text-generation-webui-docker</title>
    <updated>2023-09-01T02:08:05Z</updated>
    <id>tag:github.com,2023-09-01:/Atinoda/text-generation-webui-docker</id>
    <link href="https://github.com/Atinoda/text-generation-webui-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;This project dockerises the deployment of &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui&#34;&gt;oobabooga/text-generation-webui&lt;/a&gt; and its variants. It provides a default configuration (corresponding to a vanilla deployment of the application) as well as pre-configured support for other set-ups (e.g., latest &lt;code&gt;llama-cpp-python&lt;/code&gt; with GPU offloading, the more recent &lt;code&gt;triton&lt;/code&gt; and &lt;code&gt;cuda&lt;/code&gt; branches of GPTQ). The images are available on Docker Hub: &lt;a href=&#34;https://hub.docker.com/r/atinoda/text-generation-webui&#34;&gt;https://hub.docker.com/r/atinoda/text-generation-webui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This goal of this project is to be to &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui&#34;&gt;oobabooga/text-generation-webui&lt;/a&gt;, what &lt;a href=&#34;https://github.com/AbdBarho/stable-diffusion-webui-docker&#34;&gt;AbdBarho/stable-diffusion-webui-docker&lt;/a&gt; is to &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;This project currently supports Linux as the deployment platform. It will also probably work using WSL2.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pre-Requisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker&lt;/li&gt; &#xA; &lt;li&gt;docker compose&lt;/li&gt; &#xA; &lt;li&gt;CUDA docker runtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;This is the recommended deployment method (it is the easiest and quickest way to manage folders and settings through updates and reinstalls). The recommend variant is &lt;code&gt;default&lt;/code&gt; (it is an enhanced version of the vanilla application).&lt;/p&gt; &#xA;&lt;h3&gt;Select variant&lt;/h3&gt; &#xA;&lt;p&gt;Each variant has the &#39;extras&#39; incuded in &lt;code&gt;default&lt;/code&gt; but has some changes made as described in the table. Tagged release versions are published on a regular basis - check &lt;a href=&#34;https://hub.docker.com/r/atinoda/text-generation-webui&#34;&gt;hub.docker.com/r/atinoda/text-generation-webui&lt;/a&gt; for available tags. Pulling an untagged variant will pull the latest release version. Bleeding-edge is available via nightly builds of each variant. Choose the desired variant by setting the image &lt;code&gt;:tag&lt;/code&gt; in &lt;code&gt;docker-compose.yml&lt;/code&gt; to one of the following options:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variant&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of the vanilla deployment from source. Plus pre-installed &lt;code&gt;ExLlAMA&lt;/code&gt; library from &lt;code&gt;turboderp/exllama&lt;/code&gt;, and CUDA GPU offloading enabled for &lt;code&gt;llama-cpp&lt;/code&gt;. &lt;em&gt;This version is recommended for most users.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;triton&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updated &lt;code&gt;GPTQ-for-llama&lt;/code&gt; using the latest &lt;code&gt;triton&lt;/code&gt; branch from &lt;code&gt;qwopqwop200/GPTQ-for-LLaMa&lt;/code&gt;. Suitable for Linux only. &lt;em&gt;This version is accurate but a little slow.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cuda&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Updated &lt;code&gt;GPTQ-for-llama&lt;/code&gt; using the latest &lt;code&gt;cuda&lt;/code&gt; branch from &lt;code&gt;qwopqwop200/GPTQ-for-LLaMa&lt;/code&gt;. &lt;em&gt;This version is very slow!&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;llama-cpu&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPU supported is REMOVED from &lt;code&gt;llama-cpp&lt;/code&gt;. Suitable for systems without a CUDA-capable GPU. &lt;em&gt;This is only for when GPU acceleration is not available and is a slower way to run models!&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;monkey-patch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use LoRAs in 4-Bit &lt;code&gt;GPTQ-for-llama&lt;/code&gt; mode. &lt;em&gt;&lt;strong&gt;DEPRECATION WARNING:&lt;/strong&gt; This version is outdated, but will remain for now.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;{VARIANT}-{VERSION}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build of each {VARIANT} tagged with the release {VERSION} of the text-generation-webui (e.g., &lt;code&gt;default-v1.5&lt;/code&gt;). &lt;em&gt;Visit &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui/releases&#34;&gt;obabooga/text-generation-webui/releases&lt;/a&gt; for release notes.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;{VARIANT}-nightly&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Automated nightly build of the {VARIANT}. These images are built and pushed automatically - they are untested and may be unstable. &lt;em&gt;Suitable when more frequent updates are required and instability is not an issue.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;See: &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui/raw/main/docs/GPTQ-models-(4-bit-mode).md&#34;&gt;oobabooga/text-generation-webui/blob/main/docs/GPTQ-models-(4-bit-mode).md&lt;/a&gt;, &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui/raw/main/docs/llama.cpp-models.md&#34;&gt;obabooga/text-generation-webui/blob/main/docs/llama.cpp-models.md&lt;/a&gt;, and &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui/raw/main/docs/ExLlama.md&#34;&gt;oobabooga/text-generation-webui/blob/main/docs/ExLlama.md&lt;/a&gt; for more information on variants.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy&lt;/h3&gt; &#xA;&lt;p&gt;Deploy the service:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose up&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Remove&lt;/h3&gt; &#xA;&lt;p&gt;Remove the service:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose down -v&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;These configuration instructions describe the relevant details for this docker wrapper. Refer to &lt;a href=&#34;https://github.com/oobabooga/text-generation-webui&#34;&gt;oobabooga/text-generation-webui&lt;/a&gt; documentation for usage of the application itself.&lt;/p&gt; &#xA;&lt;h3&gt;Ports&lt;/h3&gt; &#xA;&lt;p&gt;Three commonly used ports are exposed:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Configuration&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;7860&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web UI port&lt;/td&gt; &#xA;   &lt;td&gt;Pre-configured and enabled in &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;5000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API port&lt;/td&gt; &#xA;   &lt;td&gt;Enable by adding &lt;code&gt;--api --extensions api&lt;/code&gt; to launch args then uncomment mapping in &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;5005&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Streaming port&lt;/td&gt; &#xA;   &lt;td&gt;Enable by adding &lt;code&gt;--api --extensions api&lt;/code&gt; to launch args then uncomment mapping in &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Extensions may use additional ports - check the application documentation for more details.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Volumes&lt;/h3&gt; &#xA;&lt;p&gt;The provided example docker compose maps several volumes from the local &lt;code&gt;config&lt;/code&gt; directory into the container: &lt;code&gt;loras, models, presets, prompts, training, extensions&lt;/code&gt;. If these folders are empty, they will be initialised when the container is run.&lt;/p&gt; &#xA;&lt;p&gt;Extensions will persist their state between container launches if you use a mapped folder - &lt;strong&gt;but they will not automatically update when a new image is released, so this feature is disabled by default.&lt;/strong&gt; The whole extensions folder can be mapped (all extensions are persisted) or individual extensions can be mapped one at a time. Examples are given in the &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are getting an error about missing files, try clearing these folders and letting the service re-populate them.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extra launch arguments&lt;/h3&gt; &#xA;&lt;p&gt;Extra launch arguments can be defined in the environment variable &lt;code&gt;EXTRA_LAUNCH_ARGS&lt;/code&gt; (e.g., &lt;code&gt;&#34;--model MODEL_NAME&#34;&lt;/code&gt;, to load a model at launch). The provided default extra arguments are &lt;code&gt;--verbose&lt;/code&gt; and &lt;code&gt;--listen&lt;/code&gt; (which makes the webui available on your local network) and these are set in the &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Launch arguments should be defined as a space-separated list, just like writing them on the command line. These arguments are passed to the &lt;code&gt;server.py&lt;/code&gt; module.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Runtime extension build&lt;/h3&gt; &#xA;&lt;p&gt;Extensions which should be built during startup can be defined in the environment variable &lt;code&gt;BUILD_EXTENSIONS_LIVE&lt;/code&gt; (e.g., &lt;code&gt;&#34;silero_tts whisper_stt&#34;&lt;/code&gt;, will rebuild those extensions at launch). This feature may be useful if you are developing a third-party extension and need its dependencies to refresh at launch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Startup times will be much slower&lt;/strong&gt; if you use this feature, because it will rebuild the named extensions every time the container is started (i.e., don&#39;t use this feature unless you are certain that you need it.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Extension names for runtime build should be defined as a space-separated list.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Updates&lt;/h3&gt; &#xA;&lt;p&gt;These projects are moving quickly! To update to the most recent version on Docker hub, pull the latest image:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose pull&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then recreate the container:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose up&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;When the container is launched, it will print out how many commits behind origin the current build is, so you can decide if you want to update it. Docker hub images will be periodically updated. The &lt;code&gt;default-nightly&lt;/code&gt; image is built every day but it is not manually tested. If you need bleeding edge versions you must build locally.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build (optional)&lt;/h3&gt; &#xA;&lt;p&gt;The provided &lt;code&gt;docker-compose.yml.build&lt;/code&gt; shows how to build the image locally. You can use it as a reference to modify the original &lt;code&gt;docker-compose.yml&lt;/code&gt;, or you can rename it and use it as-is. Choose the desired variant to build by setting the build &lt;code&gt;target&lt;/code&gt; and then run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To do a clean build and ensure the latest version:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker compose build --no-cache&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you choose a different variant later, you must &lt;strong&gt;rebuild&lt;/strong&gt; the image.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Developers / Advanced Users&lt;/h3&gt; &#xA;&lt;p&gt;The Dockerfile can be easily modified to compile and run the application from a local source folder. This is useful if you want to do some development or run a custom version. See the Dockerfile itself for instructions on how to do this.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Support is not provided for this deployment pathway. It is assumed that you are competent and willing to do your own debugging! Pro-tip: start by placing a &lt;code&gt;text-generation-webui&lt;/code&gt; repo into the project folder.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Standalone Container&lt;/h2&gt; &#xA;&lt;p&gt;NOT recommended, instructions are included for completeness.&lt;/p&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;Run a network accessible container (and destroy it upon completion):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run -it --rm -e EXTRA_LAUNCH_ARGS=&#34;--listen --verbose&#34; --gpus all -p 7860:7860 atinoda/text-generation-webui:default&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build and run (optional)&lt;/h3&gt; &#xA;&lt;p&gt;Build the image for the default target and tag it as &lt;code&gt;local&lt;/code&gt; :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker build --target default -t text-generation-webui:local .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run the local image with local network access (and destroy it upon completion):&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run -it --rm -e EXTRA_LAUNCH_ARGS=&#34;--listen --verbose&#34; --gpus all -p 7860:7860 text-generation-webui:local&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributions&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are welcomed - please feel free to submit a PR. More variants (e.g., AMD/ROC-M support) and Windows support can help lower the barrier to entry, make this technology accessible to as many people as possible, and push towards democratising the severe impacts that AI is having on our society.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Also - it&#39;s fun to code and LLMs are cool.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DISCLAIMER&lt;/h1&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#39;AS IS&#39;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OWASP/API-Security</title>
    <updated>2023-09-01T02:08:05Z</updated>
    <id>tag:github.com,2023-09-01:/OWASP/API-Security</id>
    <link href="https://github.com/OWASP/API-Security" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP API Security Project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OWASP API Security Top 10&lt;/h1&gt; &#xA;&lt;p&gt;This project is designed to address the ever-increasing number of organizations that are deploying potentially sensitive APIs as part of their software offerings. These APIs are used for internal tasks and to interface with third parties. Unfortunately, many APIs do not undergo the rigorous security testing that would help make them secure from an attack.&lt;/p&gt; &#xA;&lt;p&gt;The OWASP API Security Project seeks to provide value to software developers and security assessors by underscoring the potential risks in insecure APIs, and illustrating how these risks may be mitigated. In order to facilitate this goal, the OWASP API Security Project will create and maintain a Top 10 API Security Risks document, as well as a documentation portal for best practices when creating or assessing APIs.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;While working as developers or information security consultants, many people have encountered APIs as part of a project. While there are some resources to help create and evaluate these projects (such as the OWASP REST Security Cheat Sheet), there has not be a comprehensive security project designed to assist builders, breakers, and defenders in the community.&lt;/p&gt; &#xA;&lt;p&gt;This project aims to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create the OWASP Top Ten API Security Risks document, which can easily underscore the most common risks in the area.&lt;/li&gt; &#xA; &lt;li&gt;Create a documentation portal for developers to build APIs in a secure manner.&lt;/li&gt; &#xA; &lt;li&gt;Work closely with the security community to maintain living documents that evolve with security trends.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Leaders&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/User:ErezYalon&#34;&gt;Erez Yalon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.owasp.org/index.php/User:Inon&#34;&gt;Inon Shkedy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:paulo.silva@owasp.org&#34;&gt;Paulo Silva&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;The OWASP API Security Project documents are free to use!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The OWASP API Security Project is licensed under the &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 license&lt;/a&gt;, so you can copy, distribute, and transmit the work. You can also adapt it, and use it commercially, as long as you attribute the work. If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>postgis/docker-postgis</title>
    <updated>2023-09-01T02:08:05Z</updated>
    <id>tag:github.com,2023-09-01:/postgis/docker-postgis</id>
    <link href="https://github.com/postgis/docker-postgis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image for PostGIS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;postgis/postgis&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/actions&#34;&gt;&lt;img src=&#34;https://github.com/postgis/docker-postgis/workflows/Docker%20PostGIS%20CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/postgis/docker-postgis?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/postgis/docker-postgis&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;postgis/postgis&lt;/code&gt; image provides tags for running Postgres with &lt;a href=&#34;http://postgis.net/&#34;&gt;PostGIS&lt;/a&gt; extensions installed. This image is based on the official &lt;a href=&#34;https://registry.hub.docker.com/_/postgres/&#34;&gt;&lt;code&gt;postgres&lt;/code&gt;&lt;/a&gt; image and provides debian and alpine variants for PostGIS 3.4.x, which is compatible with PostgreSQL versions 12, 13, 14, 15, and 16beta3. For PostgreSQL version 11, the image supports PostGIS 3.3, as it is not compatible with PostGIS 3.4. Additionally, an image version is provided which is built from the latest two versions of Postgres (14, 15) with versions of PostGIS and its dependencies built from their respective master branches.&lt;/p&gt; &#xA;&lt;p&gt;This image ensures that the default database created by the parent &lt;code&gt;postgres&lt;/code&gt; image will have the following extensions installed:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;installed extensions&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/initdb-postgis.sh&#34;&gt;initialized&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;postgis&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;postgis_topology&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;postgis_tiger_geocoder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;postgis_raster&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;postgis_sfcgal&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;address_standardizer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;address_standardizer_data_us&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Unless &lt;code&gt;-e POSTGRES_DB&lt;/code&gt; is passed to the container at startup time, this database will be named after the admin user (either &lt;code&gt;postgres&lt;/code&gt; or the user specified with &lt;code&gt;-e POSTGRES_USER&lt;/code&gt;). If you would prefer to use the older template database mechanism for enabling PostGIS, the image also provides a PostGIS-enabled template database called &lt;code&gt;template_postgis&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Versions (2023-08-17)&lt;/h1&gt; &#xA;&lt;p&gt;Supported architecture: &lt;code&gt;amd64&lt;/code&gt; (also known as X86-64)&#34;&lt;/p&gt; &#xA;&lt;p&gt;Recommended version for new users: &lt;code&gt;postgis/postgis:15-3.4&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian based (recommended)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This Docker-PostGIS version has a cautious release cycle to guarantee high stability. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;By &#34;cautious&#34;, we mean it does not always have the latest versions of geos, proj, gdal, and sfcgal packages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;We use PostGIS, geos, proj, gdal, and sfcgal packages from the Debian repository. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In the Debian Bullseye repository, the versions are: geos=3.9, gdal=3.2, proj=7.2, and sfcgal=1.3.9.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;This version is easy to extend and has matured over time.&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL 11 is not compatible with PostGIS 3.4, so it remains on PostGIS 3.3. Please note that after November 9, 2023, PostgreSQL 11 will reach its &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;end-of-life (EOL)&lt;/a&gt; and will no longer receive support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;DockerHub image&lt;/th&gt; &#xA;   &lt;th&gt;Dockerfile&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Postgres&lt;/th&gt; &#xA;   &lt;th&gt;PostGIS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=11-3.3&#34;&gt;postgis/postgis:11-3.3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/11-3.3/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;3.3.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=12-3.4&#34;&gt;postgis/postgis:12-3.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/12-3.4/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=13-3.4&#34;&gt;postgis/postgis:13-3.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/13-3.4/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=14-3.4&#34;&gt;postgis/postgis:14-3.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/14-3.4/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=15-3.4&#34;&gt;postgis/postgis:15-3.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/15-3.4/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Alpine based&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The base operating system is &lt;a href=&#34;https://alpinelinux.org/&#34;&gt;Alpine Linux&lt;/a&gt;. It is designed to be small, simple, and secure, and it&#39;s based on &lt;a href=&#34;https://musl.libc.org/&#34;&gt;musl libc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the Alpine 3.18 version, the package versions are: geos=3.11, gdal=3.6, proj=9.2, and sfcgal=1.4.&lt;/li&gt; &#xA; &lt;li&gt;PostGIS is compiled from source, making it a bit more challenging to extend.&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL 11 is not compatible with PostGIS 3.4, so it remains on PostGIS 3.3. Please note that after November 9, 2023, PostgreSQL 11 will reach its &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;end-of-life (EOL)&lt;/a&gt; and will no longer receive support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;DockerHub image&lt;/th&gt; &#xA;   &lt;th&gt;Dockerfile&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Postgres&lt;/th&gt; &#xA;   &lt;th&gt;PostGIS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=11-3.3-alpine&#34;&gt;postgis/postgis:11-3.3-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/11-3.3/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;3.3.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=12-3.4-alpine&#34;&gt;postgis/postgis:12-3.4-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/12-3.4/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=13-3.4-alpine&#34;&gt;postgis/postgis:13-3.4-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/13-3.4/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=14-3.4-alpine&#34;&gt;postgis/postgis:14-3.4-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/14-3.4/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=15-3.4-alpine&#34;&gt;postgis/postgis:15-3.4-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/15-3.4/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Test images&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We provide alpha, beta, release candidate (rc), and development (identified as ~master) versions.&lt;/li&gt; &#xA; &lt;li&gt;The template for the &lt;code&gt;*-master&lt;/code&gt; images is updated manually, which might lead to a delay of a few weeks sometimes.&lt;/li&gt; &#xA; &lt;li&gt;The ~master SFCGAL version is 1.4 or higher. The cgal version is locked on the &lt;a href=&#34;https://github.com/CGAL/cgal/tree/5.6.x-branch&#34;&gt;5.6.x-branch&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;DockerHub image&lt;/th&gt; &#xA;   &lt;th&gt;Dockerfile&lt;/th&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Postgres&lt;/th&gt; &#xA;   &lt;th&gt;PostGIS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=14-master&#34;&gt;postgis/postgis:14-master&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/14-master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;development: postgis, geos, proj, gdal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=15-master&#34;&gt;postgis/postgis:15-master&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/15-master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;development: postgis, geos, proj, gdal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=16beta3-3.4&#34;&gt;postgis/postgis:16beta3-3.4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/16beta3-3.4/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;16beta3&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=16beta3-3.4-alpine&#34;&gt;postgis/postgis:16beta3-3.4-alpine&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/16beta3-3.4/alpine/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alpine:3.18&lt;/td&gt; &#xA;   &lt;td&gt;16beta3&lt;/td&gt; &#xA;   &lt;td&gt;3.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://registry.hub.docker.com/r/postgis/postgis/tags?page=1&amp;amp;name=16beta3-master&#34;&gt;postgis/postgis:16beta3-master&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/postgis/docker-postgis/raw/master/16beta3-master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;debian:bullseye&lt;/td&gt; &#xA;   &lt;td&gt;16beta3&lt;/td&gt; &#xA;   &lt;td&gt;development: postgis, geos, proj, gdal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In order to run a basic container capable of serving a PostGIS-enabled database, start a container as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name some-postgis -e POSTGRES_PASSWORD=mysecretpassword -d postgis/postgis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed instructions about how to start and control your Postgres container, see the documentation for the &lt;code&gt;postgres&lt;/code&gt; image &lt;a href=&#34;https://registry.hub.docker.com/_/postgres/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have started a database container, you can then connect to the database either directly on the running container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec -ti some-postgis psql -U postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... or starting a new container to run as a client. In this case you can use a user-defined network to link both containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker network create some-network&#xA;&#xA;# Server container&#xA;docker run --name some-postgis --network some-network -e POSTGRES_PASSWORD=mysecretpassword -d postgis/postgis&#xA;&#xA;# Client container&#xA;docker run -it --rm --network some-network postgis/postgis psql -h some-postgis -U postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the documentation on the &lt;a href=&#34;https://registry.hub.docker.com/_/postgres/&#34;&gt;&lt;code&gt;postgres&lt;/code&gt; image&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/network/&#34;&gt;Docker networking&lt;/a&gt; for more details and alternatives on connecting different containers.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://postgis.net/docs/postgis_installation.html#create_new_db_extensions&#34;&gt;the PostGIS documentation&lt;/a&gt; for more details on your options for creating and using a spatially-enabled database.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Environment Variables:&lt;/h2&gt; &#xA;&lt;p&gt;Since the docker-postgis repository is an extension of the official Docker PostgreSQL repository, all environment variables supported there are also supported here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_USER&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_DB&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_INITDB_ARGS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_INITDB_WALDIR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;POSTGRES_HOST_AUTH_METHOD&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PGDATA&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Read more: &lt;a href=&#34;https://github.com/docker-library/docs/raw/master/postgres/README.md&#34;&gt;https://github.com/docker-library/docs/blob/master/postgres/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Warning: &lt;strong&gt;the Docker specific variables will only have an effect if you start the container with a data directory that is empty;&lt;/strong&gt; any pre-existing database will be left untouched on container startup.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s important to note that the environment variables for the Docker image are different from those of the &lt;a href=&#34;https://www.postgresql.org/docs/current/libpq-envars.html&#34;&gt;libpq — C Library&lt;/a&gt; (&lt;code&gt;PGDATABASE&lt;/code&gt;,&lt;code&gt;PGUSER&lt;/code&gt;,&lt;code&gt;PGPASSWORD&lt;/code&gt; )&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting tips:&lt;/h2&gt; &#xA;&lt;p&gt;Troubleshooting can often be challenging. It&#39;s important to know that the docker-postgis repository is an extension of the official Docker PostgreSQL repository. Therefore, if you encounter any issues, it&#39;s worth testing whether the problem can be reproduced with the &lt;a href=&#34;https://hub.docker.com/_/postgres&#34;&gt;official PostgreSQL Docker images&lt;/a&gt;. If so, it&#39;s recommended to search for solutions based on this. The following websites are suggested:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upstream docker postgres repo: &lt;a href=&#34;https://github.com/docker-library/postgres&#34;&gt;https://github.com/docker-library/postgres&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;search for the open or closed issues !&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Docker Community Forums: &lt;a href=&#34;https://forums.docker.com&#34;&gt;https://forums.docker.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docker Community Slack: &lt;a href=&#34;https://dockr.ly/slack&#34;&gt;https://dockr.ly/slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/docker+postgresql&#34;&gt;https://stackoverflow.com/questions/tagged/docker+postgresql&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your problem is Postgis related:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stack Overflow : docker + postgis &lt;a href=&#34;https://stackoverflow.com/questions/tagged/docker+postgis&#34;&gt;https://stackoverflow.com/questions/tagged/docker+postgis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Postgis issue tracker: &lt;a href=&#34;https://trac.osgeo.org/postgis/report&#34;&gt;https://trac.osgeo.org/postgis/report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And if you don&#39;t have a postgres docker experience - read this blog post:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/&#34;&gt;https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s crucial to be aware that in a cloud environment, with default settings, these images are vulnerable, and there&#39;s a high risk of cryptominer infection if the ports are left open. ( &lt;a href=&#34;https://github.com/docker-library/postgres/issues/770#issuecomment-704460980&#34;&gt;Read More&lt;/a&gt; )&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note that ports which are not bound to the host (i.e., &lt;code&gt;-p 5432:5432&lt;/code&gt; instead of &lt;code&gt;-p 127.0.0.1:5432:5432&lt;/code&gt;) will be accessible from the outside. This also applies if you configured UFW to block this specific port, as Docker manages its own iptables rules. ( &lt;a href=&#34;https://docs.docker.com/network/iptables/&#34;&gt;Read More&lt;/a&gt; )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recomendations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add options for using SSL ( &lt;a href=&#34;https://github.com/docker-library/postgres/issues/989#issuecomment-1222648067&#34;&gt;see postgres example&lt;/a&gt; ) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Or you can use &lt;a href=&#34;https://www.postgresql.org/docs/15/ssh-tunnels.html&#34;&gt;SSH Tunnels&lt;/a&gt; with &lt;code&gt;-p 127.0.0.1:5432:5432&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues / Errors&lt;/h2&gt; &#xA;&lt;p&gt;When You encouter errors due to PostGIS update &lt;code&gt;OperationalError: could not access file &#34;$libdir/postgis-X.X&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;docker exec some-postgis update-postgis.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will update to Your newest PostGIS. Update is idempotent, so it won&#39;t hurt when You run it more than once, You will get notification like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Updating PostGIS extensions template_postgis to X.X.X&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis&#34; is already installed&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis_topology&#34; is already installed&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis_tiger_geocoder&#34; is already installed&#xA;ALTER EXTENSION&#xA;Updating PostGIS extensions docker to X.X.X&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis&#34; is already installed&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis_topology&#34; is already installed&#xA;NOTICE:  version &#34;X.X.X&#34; of extension &#34;postgis_tiger_geocoder&#34; is already installed&#xA;ALTER EXTENSION&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>