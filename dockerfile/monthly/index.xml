<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T02:36:11Z</updated>
  <subtitle>Monthly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HenryQW/Awesome-TTRSS</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/HenryQW/Awesome-TTRSS</id>
    <link href="https://github.com/HenryQW/Awesome-TTRSS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐋 Awesome TTRSS, a powerful Dockerised all-in-one RSS solution.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐋 Awesome TTRSS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/wangqiru/ttrss&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/wangqiru/ttrss.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/wangqiru/ttrss&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/wangqiru/ttrss.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FHenryQW%2FAwesome-TTRSS?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FHenryQW%2FAwesome-TTRSS.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🐋 Awesome TTRSS aims to provide a powerful &lt;strong&gt;Dockerized all-in-one&lt;/strong&gt; solution for &lt;a href=&#34;https://tt-rss.org/&#34;&gt;Tiny Tiny RSS&lt;/a&gt;, an open source RSS feed reader and aggregator written in PHP, with enhanced user experience via simplified deployment and a list of curated plugins. You may sponsor Awesome TTRSS via its &lt;a href=&#34;https://opencollective.com/Awesome-TTRSS/&#34;&gt;💰OpenCollective page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;📖 &lt;a href=&#34;http://ttrss.henry.wang&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🐋 Awesome TTRSS 旨在提供一个「容器化」的 &lt;a href=&#34;https://tt-rss.org/&#34;&gt;Tiny Tiny RSS&lt;/a&gt;（一款基于 PHP 的免费开源 RSS 聚合阅读器）的一站式解决方案，通过提供简易的部署方式以及一些额外插件，以提升用户体验。您可以通过 Awesome TTRSS 的 &lt;a href=&#34;https://opencollective.com/Awesome-TTRSS/&#34;&gt;💰OpenCollective 页面&lt;/a&gt; 进行赞助。&lt;/p&gt; &#xA;&lt;p&gt;📖 &lt;a href=&#34;http://ttrss.henry.wang/zh/&#34;&gt;文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donation 捐赠&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;PayPal&lt;/th&gt; &#xA;   &lt;th&gt;微信赞赏 WeChat Pay&lt;/th&gt; &#xA;   &lt;th&gt;OpenCollective&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=MTM5L6T4PHRQS&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/GB/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://share.henry.wang/IKaxAW/duFgAuOnmk+&#34; width=&#34;200&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://opencollective.com/Awesome-TTRSS/&#34;&gt;💰OpenCollective page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Please consider donations to support &lt;a href=&#34;https://tt-rss.org/&#34;&gt;TTRSS&lt;/a&gt; directly.&lt;/strong&gt; &lt;strong&gt;请考虑直接捐助支持&lt;a href=&#34;https://tt-rss.org/&#34;&gt;TTRSS&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/dotnet-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/dotnet/dotnet-docker</id>
    <link href="https://github.com/dotnet/dotnet-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for .NET and the .NET Tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Featured Repos&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-sdk/&#34;&gt;dotnet/sdk&lt;/a&gt;: .NET SDK&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-aspnet/&#34;&gt;dotnet/aspnet&lt;/a&gt;: ASP.NET Core Runtime&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-runtime/&#34;&gt;dotnet/runtime&lt;/a&gt;: .NET Runtime&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-runtime-deps/&#34;&gt;dotnet/runtime-deps&lt;/a&gt;: .NET Runtime Dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-monitor/&#34;&gt;dotnet/monitor&lt;/a&gt;: .NET Monitor Tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;dotnet/samples&lt;/a&gt;: .NET Samples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/core/&#34;&gt;.NET&lt;/a&gt; is a general purpose development platform maintained by Microsoft and the .NET community on &lt;a href=&#34;https://github.com/dotnet/core&#34;&gt;GitHub&lt;/a&gt;. It is cross-platform, supporting Windows, macOS and Linux, and can be used in device, cloud, and embedded/IoT scenarios.&lt;/p&gt; &#xA;&lt;p&gt;.NET has several capabilities that make development easier, including automatic memory management, (runtime) generic types, reflection, asynchrony, concurrency, and native interop. Millions of developers take advantage of these capabilities to efficiently build high-quality applications.&lt;/p&gt; &#xA;&lt;p&gt;You can use C# or F# to write .NET apps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/csharp/&#34;&gt;C#&lt;/a&gt; is simple, powerful, type-safe, and object-oriented while retaining the expressiveness and elegance of C-style languages. Anyone familiar with C and similar languages will find it straightforward to write in C#.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/fsharp/&#34;&gt;F#&lt;/a&gt; is a cross-platform, open-source, functional programming language for .NET. It also includes object-oriented and imperative programming.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnet/core&#34;&gt;.NET&lt;/a&gt; is open source (MIT and Apache 2 licenses) and was contributed to the &lt;a href=&#34;http://dotnetfoundation.org&#34;&gt;.NET Foundation&lt;/a&gt; by Microsoft in 2014. It can be freely adopted by individuals and companies, including for personal, academic or commercial purposes. Multiple companies use .NET as part of apps, tools, new platforms and hosting services.&lt;/p&gt; &#xA;&lt;p&gt;You are invited to &lt;a href=&#34;https://github.com/dotnet/core/raw/master/CONTRIBUTING.md&#34;&gt;contribute new features&lt;/a&gt;, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/core/&#34;&gt;https://docs.microsoft.com/dotnet/core/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Watch &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/discussions/categories/announcements&#34;&gt;discussions&lt;/a&gt; for Docker-related .NET announcements.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/README.md&#34;&gt;.NET Docker samples&lt;/a&gt; show various ways to use .NET and Docker together. See &lt;a href=&#34;https://docs.microsoft.com/dotnet/core/docker/building-net-docker-images&#34;&gt;Building Docker Images for .NET Applications&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Container sample: Run a simple application&lt;/h2&gt; &#xA;&lt;p&gt;You can quickly run a container with a pre-built &lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;.NET Docker image&lt;/a&gt;, based on the &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/dotnetapp/README.md&#34;&gt;.NET console sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Type the following command to run a sample console application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker run --rm mcr.microsoft.com/dotnet/samples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Container sample: Run a web application&lt;/h2&gt; &#xA;&lt;p&gt;You can quickly run a container with a pre-built &lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-samples/&#34;&gt;.NET Docker image&lt;/a&gt;, based on the &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/aspnetapp/README.md&#34;&gt;ASP.NET Core sample&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Type the following command to run a sample web application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;docker run -it --rm -p 8000:80 --name aspnetcore_sample mcr.microsoft.com/dotnet/samples:aspnetapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the application starts, navigate to &lt;code&gt;http://localhost:8000&lt;/code&gt; in your web browser.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/samples/host-aspnetcore-https.md&#34;&gt;Hosting ASP.NET Core Images with Docker over HTTPS&lt;/a&gt; to use HTTPS with this image.&lt;/p&gt; &#xA;&lt;h1&gt;Related Repos&lt;/h1&gt; &#xA;&lt;p&gt;.NET:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-sdk/&#34;&gt;dotnet/nightly/sdk&lt;/a&gt;: .NET SDK (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-aspnet/&#34;&gt;dotnet/nightly/aspnet&lt;/a&gt;: ASP.NET Core Runtime (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-runtime/&#34;&gt;dotnet/nightly/runtime&lt;/a&gt;: .NET Runtime (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-runtime-deps/&#34;&gt;dotnet/nightly/runtime-deps&lt;/a&gt;: .NET Runtime Dependencies (Preview)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-nightly-monitor/&#34;&gt;dotnet/nightly/monitor&lt;/a&gt;: .NET Monitor Tool (Preview)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.NET Framework:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-framework/&#34;&gt;dotnet/framework&lt;/a&gt;: .NET Framework, ASP.NET and WCF&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/microsoft-dotnet-framework-samples/&#34;&gt;dotnet/framework/samples&lt;/a&gt;: .NET Framework, ASP.NET and WCF Samples&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;h2&gt;Lifecycle&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/core/raw/main/microsoft-support.md&#34;&gt;Microsoft Support for .NET&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/supported-platforms.md&#34;&gt;Supported Container Platforms Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/supported-tags.md&#34;&gt;Supported Tags Policy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Image Update Policy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We update the supported .NET images within 12 hours of any updates to their base images (e.g. debian:buster-slim, windows/nanoserver:ltsc2022, buildpack-deps:bionic-scm, etc.).&lt;/li&gt; &#xA; &lt;li&gt;We publish .NET images as part of releasing new versions of .NET including major/minor and servicing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/issues/new/choose&#34;&gt;File an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/contactus/&#34;&gt;Contact Microsoft Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Legal Notice: &lt;a href=&#34;https://aka.ms/mcr/osslegalnotice&#34;&gt;Container License Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/LICENSE&#34;&gt;.NET license&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/dotnet-docker/raw/main/documentation/image-artifact-details.md&#34;&gt;Discover licensing for Linux image contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/virtualization/windowscontainers/images-eula&#34;&gt;Windows base image license&lt;/a&gt; (only applies to Windows containers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/cloud-platform/windows-server-pricing&#34;&gt;Pricing and licensing for Windows Server 2019&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>remote-android/redroid-doc</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/remote-android/redroid-doc</id>
    <link href="https://github.com/remote-android/redroid-doc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ReDroid (Remote-Android) is a multi-arch, GPU enabled, Android in Container solution. Track issues / docs here&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/README.zh-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#native-bridge-support&#34;&gt;Native Bridge Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#gms-support&#34;&gt;GMS Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#webrtc-streaming&#34;&gt;WebRTC Streaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#how-to-build&#34;&gt;How To Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#note&#34;&gt;Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#contact-me&#34;&gt;Contact Me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ReDroid&lt;/strong&gt; (&lt;em&gt;Re&lt;/em&gt;mote an&lt;em&gt;Droid&lt;/em&gt;) is a GPU accelerated AIC (Android In Container) solution. You can boot many instances in Linux host (&lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;podman&lt;/code&gt;, &lt;code&gt;k8s&lt;/code&gt; etc.). &lt;em&gt;ReDroid&lt;/em&gt; supports both &lt;code&gt;arm64&lt;/code&gt; and &lt;code&gt;amd64&lt;/code&gt; architectures. &lt;em&gt;ReDroid&lt;/em&gt; is suitable for Cloud Gaming, VMI (Virtual Mobile Infrastructure), Automation Test and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/assets/redroid11.png&#34; alt=&#34;Screenshot of ReDroid 11&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 13 Preview (&lt;code&gt;redroid/redroid:13.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:13.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:13.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 (&lt;code&gt;redroid/redroid:12.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 64bit only (&lt;code&gt;redroid/redroid:12.0.0_64only-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0_64only-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0_64only-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 11 (&lt;code&gt;redroid/redroid:11.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:11.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:11.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 10 (&lt;code&gt;redroid/redroid:10.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:10.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:10.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 9 (&lt;code&gt;redroid/redroid:9.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:9.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:9.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 8.1 (&lt;code&gt;redroid/redroid:8.1.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:8.1.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:8.1.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tested Platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 16.04 / 18.04 / 20.04 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux 2 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;Alibaba Cloud Linux 2 (amd64)&lt;/li&gt; &#xA; &lt;li&gt;Alibaba Cloud Linux 3 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;WSL 2 (Ubuntu) (amd64)&lt;/li&gt; &#xA; &lt;li&gt;CentOS (amd64*, arm64*)&lt;/li&gt; &#xA; &lt;li&gt;OpenEuler 20.03 (amd64, arm64*)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* customized kernel required&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; requires some kernel modules (&lt;code&gt;binderfs&lt;/code&gt;, &lt;code&gt;ashmem&lt;/code&gt; etc.). &lt;strong&gt;Check &lt;a href=&#34;https://github.com/remote-android/redroid-modules&#34;&gt;kernel modules&lt;/a&gt; to install these modules.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start and connect via `scrcpy`&#xA;docker run -itd --rm --memory-swappiness=0 --privileged \&#xA;    --pull always \&#xA;    -v ~/data:/data \&#xA;    -p 5555:5555 \&#xA;    redroid/redroid:11.0.0-latest&#xA;&#xA;adb connect &amp;lt;IP&amp;gt;:5555&#xA;scrcpy --serial &amp;lt;IP&amp;gt;:5555&#xA;&#xA;## Explanation:&#xA;##   --pull always    -- be sure to use the latest image&#xA;##   -v ~/data:/data  -- mount data partition&#xA;##   -p 5555:5555     -- expose adb port, you can connect via `adb connect &amp;lt;HOST-IP&amp;gt;`&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;required params (already added in docker image)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;qemu=1&lt;/li&gt; &#xA; &lt;li&gt;androidboot.hardware=redroid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;display params&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redroid.width=720&lt;/li&gt; &#xA; &lt;li&gt;redroid.height=1280&lt;/li&gt; &#xA; &lt;li&gt;redroid.fps=15&lt;/li&gt; &#xA; &lt;li&gt;ro.sf.lcd_density=320&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Network:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;net.eth0.dns1=&#xA;  &lt;ip&gt;&lt;/ip&gt;&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.type=[static|pac|none|unassigned]&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.host=&#xA;  &lt;ip&gt;&lt;/ip&gt;&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.port=&#xA;  &lt;port&gt;&lt;/port&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GPU accelerating &lt;em&gt;ReDroid&lt;/em&gt; use mesa3d to accelerate 3D rendering. Currently tested platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AMD (arm64, amd64 with &lt;code&gt;amdgpu&lt;/code&gt; driver)&lt;/li&gt; &#xA; &lt;li&gt;Intel (amd64 with &lt;code&gt;i915&lt;/code&gt; driver)&lt;/li&gt; &#xA; &lt;li&gt;virtio-gpu (vendor agnostic, arm64 and amd64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;params:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redroid.gpu.mode=[auto|host|guest]&lt;/li&gt; &#xA; &lt;li&gt;redroid.gpu.node=[/dev/dri/renderDxxx]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: you can override system props prefixed with &lt;code&gt;qemu.&lt;/code&gt; or &lt;code&gt;ro.&lt;/code&gt;. for example, you can set &lt;code&gt;ro.secure=0&lt;/code&gt;, then you can get root adb shell by default.&lt;/p&gt; &#xA;&lt;h2&gt;Native Bridge Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to run &lt;code&gt;arm&lt;/code&gt; Apps in &lt;code&gt;x86&lt;/code&gt; &lt;em&gt;ReDroid&lt;/em&gt; instance via &lt;code&gt;libhoudini&lt;/code&gt;, &lt;code&gt;libndk_translator&lt;/code&gt; or &lt;code&gt;QEMU translator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take &lt;code&gt;libndk_translator&lt;/code&gt; as an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# grab libndk_translator libs from Android 11 Emulator&#xA;find /system \( -name &#39;libndk_translation*&#39; -o -name &#39;*arm*&#39; -o -name &#39;ndk_translation*&#39; \) | tar -cf native-bridge.tar -T -&#xA;&#xA;# example structure, be careful the file owner and mode&#xA;&#xA;system/&#xA;├── bin&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── arm64&#xA;├── etc&#xA;│&amp;nbsp;&amp;nbsp; ├── binfmt_misc&#xA;│&amp;nbsp;&amp;nbsp; └── init&#xA;├── lib&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── libnb.so&#xA;└── lib64&#xA;    ├── arm64&#xA;    └── libnb.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# Dockerfile&#xA;FROM redroid/redroid:11.0.0-amd64&#xA;&#xA;ADD native-bridge.tar /&#xA;&#xA;COPY factory.prop /factory/factory.prop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;# factory.prop&#xA;ro.product.cpu.abilist=x86_64,arm64-v8a,x86,armeabi-v7a,armeabi&#xA;ro.product.cpu.abilist64=x86_64,arm64-v8a&#xA;ro.product.cpu.abilist32=x86,armeabi-v7a,armeabi&#xA;ro.dalvik.vm.isa.arm=x86&#xA;ro.dalvik.vm.isa.arm64=x86_64&#xA;ro.enable.native.bridge.exec=1&#xA;ro.dalvik.vm.native.bridge=libndk_translation.so&#xA;ro.ndk_translation.version=0.2.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# build docker image&#xA;docker build . -t redroid:11.0.0-amd64-nb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://gitlab.com/android-generic/android_vendor_google_emu-x86&#34;&gt;https://gitlab.com/android-generic/android_vendor_google_emu-x86&lt;/a&gt; to extract automatically libndk_translator from the Android 11 emulator images.&lt;/p&gt; &#xA;&lt;p&gt;After following the guide on &#34;Building&#34; section, you will get native-bridge.tar under vendor/google/emu-x86/proprietary.&lt;/p&gt; &#xA;&lt;p&gt;If you find errors in using libndk_translator, please try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;YOU MUST HAVE binfmt_misc kernel module loaded for supporting other binaries formats! If you have not loaded it already:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo modprobe binfmt_misc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or add binfmt_misc to /etc/modules to autoload it at boot (for example in Ubuntu).&lt;/p&gt; &lt;p&gt;Check your specific distribution wiki/docs if you don&#39;t have binfmt_misc module and you want to install it, or how to autoload the module at boot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the native bridge archive, preserving the permissions, set specific permissions for allowing init file to be executed and traverse of important dirs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir native-bridge&#xA;cd native-bridge&#xA;sudo tar -xpf ../native-bridge.tar `#or path to your actual native bridge tarball`&#xA;sudo chmod 0644 system/etc/init/ndk_translation_arm64.rc&#xA;sudo chmod 0755 system/bin/arm&#xA;sudo chmod 0755 system/bin/arm64&#xA;sudo chmod 0755 system/lib/arm&#xA;sudo chmod 0755 system/lib64/arm64&#xA;sudo chmod 0644 system/etc/binfmt_misc/*&#xA;sudo tar -cpf native-bridge.tar system&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Move or copy your new native-bridge.tar into the dir where you have written your Dockerfile, and rebuild again the new image with native bridge support.&lt;/p&gt; &lt;p&gt;You must use sudo or a root shell to preserve the permissions and owners of the files.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GMS Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to add GMS (Google Mobile Service) support in &lt;em&gt;ReDroid&lt;/em&gt; via &lt;a href=&#34;https://opengapps.org/&#34;&gt;Open GApps&lt;/a&gt;, &lt;a href=&#34;https://microg.org/&#34;&gt;MicroG&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/MindTheGapps/vendor_gapps&#34;&gt;MindTheGapps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WebRTC Streaming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;CALL FOR HELP&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Plan to port &lt;code&gt;WebRTC&lt;/code&gt; solutions from &lt;code&gt;cuttlefish&lt;/code&gt;, including frontend (HTML5), backend and many virtual HALs.&lt;/p&gt; &#xA;&lt;h2&gt;How To Build&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s Same as AOSP building process. But I suggest to use &lt;code&gt;docker&lt;/code&gt; to build.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/android-builder-docker&#34;&gt;android-builder-docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container disappeared immediately&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;make sure the required kernel modules are installed; run &lt;code&gt;dmesg -T&lt;/code&gt; for detailed logs&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container running, but adb cannot connect (device offline etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;run &lt;code&gt;docker exec -it &amp;lt;container&amp;gt; sh&lt;/code&gt;, then check &lt;code&gt;ps -A&lt;/code&gt; and &lt;code&gt;logcat&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;try &lt;code&gt;dmesg -T&lt;/code&gt; if cannot get a container shell&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kernel 5.7+, need enable &lt;code&gt;binderfs&lt;/code&gt; / &lt;code&gt;ashmem&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;redroid&lt;/code&gt; require &lt;code&gt;pid_max&lt;/code&gt; less than 65535, or else may run into problems. Change in host OS, or add &lt;code&gt;pid_max&lt;/code&gt; separation support in PID namespace&lt;/li&gt; &#xA; &lt;li&gt;SElinux is disabled in &lt;em&gt;ReDroid&lt;/em&gt;; possible enabled with &lt;a href=&#34;http://namei.org/presentations/selinux_namespacing_lca2018.pdf&#34;&gt;selinuxns POC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sdcardfs&lt;/code&gt; currently not implemented, use &lt;code&gt;fuse&lt;/code&gt; instead; may need run &lt;code&gt;modprobe fuse&lt;/code&gt; first in some OS (AmazonLinux2 ?)&lt;/li&gt; &#xA; &lt;li&gt;CGroups errors ignored; some (&lt;code&gt;stune&lt;/code&gt; for example) not supported in generic linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;procfs&lt;/code&gt; not fully seperated with host OS; Community use &lt;code&gt;lxcfs&lt;/code&gt; and some cloud vendor (&lt;a href=&#34;https://github.com/Tencent/TencentOS-kernel&#34;&gt;TencentOS&lt;/a&gt;) enhanced in their own kernel.&lt;/li&gt; &#xA; &lt;li&gt;vintf verify disabled (since no kernel)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:ziyang.zhou@outlook.com&#34;&gt;ziyang.zhou@outlook.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;remote-android.slack.com (invite link: &lt;a href=&#34;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&#34;&gt;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; itself is under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License&lt;/a&gt;, since &lt;em&gt;ReDroid&lt;/em&gt; includes many 3rd party modules, you may need to examine license carefully.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; kernel modules are under &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GPL v2&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xuiv/v2ray-heroku</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/xuiv/v2ray-heroku</id>
    <link href="https://github.com/xuiv/v2ray-heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2ray-heroku&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;部署&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;点击 &lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/xuiv/v2ray-heroku&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;，&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/xuiv/v2ray-heroku&#34;&gt;一键部署到heroku&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;客户端config.json设置如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;log&#34;: {&#xA;    &#34;loglevel&#34;: &#34;warning&#34;&#xA;  },&#xA;  &#34;inbound&#34;: {&#xA;    &#34;port&#34;: 1080,&#xA;    &#34;listen&#34;: &#34;127.0.0.1&#34;,&#xA;    &#34;protocol&#34;: &#34;socks&#34;,&#xA;    &#34;domainOverride&#34;: [&#34;tls&#34;,&#34;http&#34;],&#xA;    &#34;settings&#34;: {&#xA;      &#34;auth&#34;: &#34;noauth&#34;,&#xA;      &#34;udp&#34;: true&#xA;    }&#xA;  },&#xA;  &#34;outbound&#34;: {&#xA;    &#34;protocol&#34;: &#34;vmess&#34;,&#xA;    &#34;settings&#34;: {&#xA;      &#34;vnext&#34;: [{&#xA;        &#34;address&#34;: &#34;xxxx.herokuapp.com&#34;,&#xA;        &#34;port&#34;: 443,&#xA;        &#34;users&#34;: [{&#xA;          &#34;id&#34;: &#34;b831381d-6324-4d53-ad4f-8cda48b30811&#34;,&#xA;          &#34;alterId&#34;: 64&#xA;        }]&#xA;      }]&#xA;    },&#xA;    &#34;streamSettings&#34;: {&#xA;      &#34;network&#34;: &#34;ws&#34;,&#xA;      &#34;security&#34;: &#34;tls&#34;,&#xA;      &#34;tlsSettings&#34;: {&#xA;        &#34;allowInsecure&#34;: true,&#xA;        &#34;serverName&#34;: null&#xA;      }&#xA;    },&#xA;    &#34;mux&#34;: {&#xA;      &#34;enabled&#34;: true,&#xA;      &#34;concurrency&#34;: 8&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/jenkinsci/docker</id>
    <link href="https://github.com/jenkinsci/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&#34;https://jenkins.io/&#34;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://jenkins.io/sites/default/files/jenkins_logo.png&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: read the section &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&#34;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping.&lt;/p&gt; &#xA;&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Avoid using a &lt;a href=&#34;https://docs.docker.com/storage/bind-mounts/&#34;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; &#xA;&lt;h2&gt;Backing up data&lt;/h2&gt; &#xA;&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; &#xA;&lt;p&gt;This is highly recommended. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; &#xA;&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links etc)&lt;/p&gt; &#xA;&lt;p&gt;For more info check Docker docs section on &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setting the number of executors&lt;/h1&gt; &#xA;&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jenkins.model.*&#xA;Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connecting agents&lt;/h1&gt; &#xA;&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you are only using &lt;a href=&#34;https://plugins.jenkins.io/ssh-slaves/&#34;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; &#xA;&lt;h1&gt;Passing JVM parameters&lt;/h1&gt; &#xA;&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h1&gt;Configuring logging&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir data&#xA;cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF&#xA;handlers=java.util.logging.ConsoleHandler&#xA;jenkins.level=FINEST&#xA;java.util.logging.ConsoleHandler.level=FINEST&#xA;EOF&#xA;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&#34;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&#34; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring reverse proxy&lt;/h1&gt; &#xA;&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&#34;--prefix=/jenkins&#34;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Passing Jenkins launcher parameters&lt;/h1&gt; &#xA;&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk11 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; &#xA;&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;&#xA;COPY --chown=jenkins:jenkins https.pem /var/lib/jenkins/cert&#xA;COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk&#xA;ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk&#xA;EXPOSE 8083&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;ENV JENKINS_SLAVE_AGENT_PORT 50001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or as a parameter to docker,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing more tools&lt;/h1&gt; &#xA;&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;# if we want to install via apt&#xA;USER root&#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here&#xA;# drop back to the regular jenkins user - good practice&#xA;USER jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Install plugins script&lt;/h3&gt; &#xA;&lt;p&gt;You can rely on the plugin manager CLI to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; &#xA;&lt;h3&gt;Setting update centers&lt;/h3&gt; &#xA;&lt;p&gt;During the download, the script will use update centers defined by the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&#34;https://updates.jenkins.io&#34;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&#34;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&#34;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&#34;https://updates.jenkins.io/experimental&#34;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&#34;https://jenkins.io/blog/2018/05/15/incremental-deployment/&#34;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&#34;https://repo.jenkins-ci.org/incrementals&#34;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt&#xA;RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; &#xA;&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24986&#34;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port&#xA;curl -sSL &#34;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&#34; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2&#xA;pam-auth:1.1&#xA;matrix-project:1.4.1&#xA;script-security:1.13&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Updating plugins file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkinsci/plugin-installation-manager-tool&#34;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; &#xA;&lt;p&gt;Example command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-command&#34;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk11&#xA;docker run -it ${JENKINS_IMAGE} bash -c &#34;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&#34; &amp;gt;  plugins2.txt&#xA;mv plugins2.txt plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &#34;docker pull&#34; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; &#xA;&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; &#xA;&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; &#xA;&lt;h3&gt;Hacking&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&#34;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on Gitter, &lt;a href=&#34;https://gitter.im/jenkinsci/docker&#34;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>techno-tim/launchpad</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/techno-tim/launchpad</id>
    <link href="https://github.com/techno-tim/launchpad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;launchpad 🚀&lt;/h1&gt; &#xA;&lt;h2&gt;Info&lt;/h2&gt; &#xA;&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs, learning, and automation!&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to ⭐ this repo and fork it too! 👆&lt;/p&gt; &#xA;&lt;p&gt;See each folder for details 📁&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://technotim.live&#34;&gt;TechnoTim&lt;/a&gt; and updated by the community with 💛&lt;/p&gt; &#xA;&lt;p&gt;► YouTube &lt;a href=&#34;https://www.youtube.com/technotimlive&#34;&gt;https://www.youtube.com/technotimlive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitch &lt;a href=&#34;https://www.twitch.tv/TechnoTim&#34;&gt;https://www.twitch.tv/TechnoTim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitter &lt;a href=&#34;https://twitter.com/TechnoTimLive&#34;&gt;https://twitter.com/TechnoTimLive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Discord &lt;a href=&#34;https://l.technotim.live/discord&#34;&gt;https://l.technotim.live/discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► GitHub &lt;a href=&#34;https://github.com/timothystewart6&#34;&gt;https://github.com/timothystewart6&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hysnsec/awesome-threat-modelling</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/hysnsec/awesome-threat-modelling</id>
    <link href="https://github.com/hysnsec/awesome-threat-modelling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A curated list of threat modeling resources (Books, courses - free and paid, videos, tools, tutorials and workshops to practice on ) for learning Threat modeling and initial phases of security review.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Threat Modeling &lt;a href=&#34;https://awesome.re&#34;&gt;&lt;img src=&#34;https://awesome.re/badge.svg?sanitize=true&#34; alt=&#34;Awesome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.practical-devsecops.com/devsecops-university/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/images/awesome-threat-modelling.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A curated list of threat modeling resources (books, courses - free and paid, videos, tools, tutorials and workshop to practice on) for learning Threat modeling and initial phases of security review.&lt;/p&gt; &#xA;&lt;p&gt;Contributions welcome. Add links through pull requests or create an issue to start a discussion.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#fundamentals&#34;&gt;Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#courses&#34;&gt;Courses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#videos&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#tutorials-and-blogs&#34;&gt;Tutorials and Blogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#threat-model-examples&#34;&gt;Threat Model examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/#sponsor&#34;&gt;Sponsor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Fundamentals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threatmodelingmanifesto.org&#34;&gt;The Threat Modeling Manifesto&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Books&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Books on threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Threat-Modeling-Designing-Adam-Shostack/dp/1118809998&#34;&gt;Threat Modeling: Designing for Security&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.in/Threat-Modeling-Microsoft-Professional-Swiderski/dp/0735619913&#34;&gt;Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.amazon.in/Risk-Centric-Threat-Modeling-Simulation/dp/0470500964&#34;&gt;Risk Centric Threat Modeling: Process for Attack Simulation and Threat Analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/threat-modeling/9781492056546/&#34;&gt;Threat Modeling: A Practical Guide for Development Teams&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Courses/Training videos on threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Free&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.coursera.org/lecture/software-security/threat-modeling-or-architectural-risk-analysis-bQAoU&#34;&gt;Threat Modeling, or Architectural Risk Analysis by Coursera&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rhurlbut/CodeMash2019/raw/master/Robert-Hurlbut-CodeMash2019-Threat-Modeling-Workshop-20190108.pdf&#34;&gt;Threat Modeling Workshop by Robert Hurlbut&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geoffrey-hill-tutamantic/rapid-threat-model-prototyping-docs&#34;&gt;Rapid Threat Model Prototyping (RTMP)&lt;/a&gt; - Methodology to create quick threat models (1) add threat metadata describing the threats and mitigations directly to software diagrams using 11 simple and repeatable steps (2) integrate these steps into Agile workstreams (3) how to best use the outputs of a threat model (Threats &amp;amp; Mitigations)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.practical-devsecops.com/certified-devsecops-expert/&#34;&gt;DevSecOps Expert by Practical DevSecOps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.pluralsight.com/courses/threat-modeling-fundamentals&#34;&gt;Threat Modeling Fundamentals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/cybersec-first-responder-threat-detection-response-cfr210/&#34;&gt;CyberSec First Responder: Threat Detection &amp;amp; Response CFR210&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/Web-Development-tutorials/Learning-Threat-Modeling-Security-Professionals/769294-2.html&#34;&gt;Learning Threat Modeling for Security Professionals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/IT-tutorials/Threat-Modeling-Spoofing-Depth/769300-2.html?srchtrk=index%3a7%0alinktypeid%3a2%0aq%3athreat+modelling%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2&#34;&gt;Threat Modeling: Spoofing In Depth&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lynda.com/IT-tutorials/Threat-Modeling-Tampering-Depth/2810167-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3athreat+modelling%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2&#34;&gt;Threat Modeling: Tampering in Depth&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.toreon.com/threatmodeling/&#34;&gt;Threat Modeling or Whiteboard Hacking training&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Videos talking about Threat modeling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GqmQg-cszw4&#34;&gt;Introduction, Threat Models&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-VokDIHS5XM&#34;&gt;Creating a Threat Model using TMT 2016&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=n8ozucTo810&#34;&gt;Using Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZoxHIpzaZ6U&#34;&gt;Threat Modeling in 2019&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KGy_KCRUGd4&#34;&gt;Threat Modeling Toolkit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YTtO_TGV2fU&#34;&gt;Adaptive Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=v8aYNcE1QlI&#34;&gt;Threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VbW-X0j35gw&#34;&gt;Threat Model Every Story: Practical Continuous Threat Modeling Work for Your Team&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OH2LqzDk2Zg&#34;&gt;Threat Modeling for Secure Software Design&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-dQcg0FDLpk&#34;&gt;Fixing Threat Models with OWASP Efforts&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6fhEdJ9YcU0&#34;&gt;Designing for Security through Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J_ksjjUz73s&#34;&gt;Unlocking Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iw-FzeKaj48&#34;&gt;An Agile Approach to Threat Modeling for Securing Open Source Project EdgeX Foundry&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QQ7StGiy_-M&#34;&gt;Threat Modeling 101 (SAFECode On Demand Training Course)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/3LsNx-ljIK8?t=1180&#34;&gt;ISO/SAE 21434 by Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yjvSI755auM&amp;amp;t=5069s&#34;&gt;Introduction to Threat Modeling by Avi Douglen&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ASwZ7cnz-Q4&amp;amp;ab_channel=Auth0&#34;&gt;Look, there&#39;s a threat model in my DevOps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorials and Blogs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tutorials and blogs that explain threat modeling&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://misti.com/infosec-insider/threat-modeling-what-why-and-how&#34;&gt;Threat Modeling: What, Why, and How?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://insights.sei.cmu.edu/sei_blog/2018/12/threat-modeling-12-available-methods.html&#34;&gt;Threat Modeling: 12 Available Methods&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dummies.com/programming/certification/security-threat-modeling/&#34;&gt;What Is Security Threat Modeling?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://cheatsheetseries.owasp.org/cheatsheets/Threat_Modeling_Cheat_Sheet.html&#34;&gt;Threat-modeling CheatSheet By Owasp&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://securityintelligence.com/threat-modeling-in-the-enterprise-part-1-understanding-the-basics/&#34;&gt;Threat Modeling in the Enterprise&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://increment.com/security/approachable-threat-modeling/&#34;&gt;Approachable threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/AdamEnglander/threat-modeling-for-dummies-cascadia-php-2018&#34;&gt;Threat Modeling for Dummies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@brunoamaroalmeida/devsecops-threat-modelling-and-you-get-started-using-the-stride-method-85d143ab86f4&#34;&gt;DevSecOps, Threat Modeling and You: Get started using the STRIDE method&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://devops.com/threat-modeling-the-why-how-when-and-which-tools/&#34;&gt;Threat Modeling: The Why, How, When and Which Tools&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.synopsys.com/content/dam/synopsys/sig-assets/datasheets/threat-modeling-datasheet.pdf&#34;&gt;Threat-modeling datasheet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.securityinnovation.com/topic/threat-modeling&#34;&gt;Threat Modeling blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.varonis.com/blog/threat-modeling/&#34;&gt;Threat Modeling: 6 Mistakes You are Probably Making&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.threatstack.com/blog/how-to-create-a-threat-model-for-cloud-infrastructure-security&#34;&gt;How to Create a Threat Model for Cloud Infrastructure Security&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.arm.com/developer/ip-products/security/b/security-ip-blog/posts/why-you-should-care-about-threat-modelling&#34;&gt;Why You Should Care About Threat Modelling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nvisium.com/blog/2019/05/30/benefits-of-threat-modeling.html&#34;&gt;Benefits of Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://resources.sei.cmu.edu/asset_files/WhitePaper/2018_019_001_524597.pdf&#34;&gt;Threat Modeling: a Summary of Available Methods Whitepaper&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://owasp.org/www-pdf-archive/Threat_Modelling_-_STRIDE_Cards_-_TW_Branded.pdf&#34;&gt;Threat Modelling Toolkit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hackernoon.com/how-to-get-started-with-threat-modeling-before-you-get-hacked-1bf0ea3310df&#34;&gt;How to get started with Threat Modeling, before you get hacked&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/threat-modelling/&#34;&gt;Thread Modeling tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/threat-modeling-goran-aviani/&#34;&gt;How to analyze the security of your application with threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://safecode.org/wp-content/uploads/2017/05/SAFECode_TM_Whitepaper.pdf&#34;&gt;Tactical Threat Modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.lookingglasscyber.com/resources/white-papers/the-power-of-a-tailored-threat-model/&#34;&gt;The Power of a Tailored Threat Model Whitepaper&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://threatmodeler.com/wp-content/uploads/2018/12/7-Easy-Steps-for-Building-a-Scalable-Threat-Modeling-Process-copy.pdf&#34;&gt;7 Easy Steps For Building a Scalable Threat Modeling Process&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://blog.appsecco.com/where-is-my-threat-model-b6f8b077ac47&#34;&gt;Where is my Threat Model?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://diablohorn.com/2019/11/18/secure-slack-bot-an-exercise-in-threat-modeling/&#34;&gt;Secure Slack bot an exercise in threat modeling&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Threat Model examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Threat model examples for reference.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6819&#34;&gt;OAuth 2.0 Threat Model and Security Considerations&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/downloads/SSL_Threat_Model.png&#34;&gt;SSL Threat model by Qualys&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.netmeister.org/blog/doh-dot-dnssec.html&#34;&gt;DNS Security: Threat Modeling DNSSEC, DoT, and DoH by Jan Schuamann&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/NCC_Group/real-world-application-threat-modelling-by-example&#34;&gt;Email Encryption Gateway Threat model by NCC Group&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OWASP/threat-model-cookbook&#34;&gt;OWASP Threat Model Cookbook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/tree/master/sig-security/security-audit-2019/findings&#34;&gt;Kubernetes Threat Model&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Yakindu/YSA-examples&#34;&gt;ISO/SAE 21434 Annex G Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Tools which helps in threat modelling.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Free tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://owasp.org/www-project-threat-dragon/&#34;&gt;OWASP Threat Dragon&lt;/a&gt; - An online threat modelling web application including system diagramming and a rule engine to auto-generate threats/mitigations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-gb/azure/security/develop/threat-modeling-tool&#34;&gt;Microsoft Threat Modeling Tool&lt;/a&gt; - Microsoft Threat Modeling Tool 2016 is a tool that helps in finding threats in the design phase of software projects.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/appsecco/owasp-threat-dragon-gitlab&#34;&gt;Owasp-threat-dragon-gitlab&lt;/a&gt; - This project is a fork of the original OWASP Threat Dragon web application by Mike Goodwin with Gitlab integration instead of GitHub. You can use it with the Gitlab.com or your own instance of Gitlab.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devsecops/raindance&#34;&gt;Raindance&lt;/a&gt; - Project intended to make Attack Maps part of software development by reducing the time it takes to complete them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://threatspec.org/&#34;&gt;Threatspec&lt;/a&gt; - Threatspec is an open source project that aims to close the gap between development and security by bringing the threat modelling process further into the development process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/izar/pytm&#34;&gt;PyTM&lt;/a&gt; - PyTM is an open source project providing a library for threat modeling with code. Describe your system using OO syntax (object.property = value) and have your threat modeling report automatically generated. 100+ threats currently supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://mal-lang.org&#34;&gt;MAL&lt;/a&gt; - MAL is an open source project that supports creation of cyber threat modeling systems and attack simulations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Threagile/threagile&#34;&gt;Threagile&lt;/a&gt; - Threagile is an open-source toolkit for agile threat modeling&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Paid tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iriusrisk.com/threat-modeling-tool/&#34;&gt;Irius risk&lt;/a&gt; - Iriusrisk is a threat modeling tool with an adaptive questionnaire driven by an expert system which guides the user through straight forward questions about the technical architecture, the planned features and security context of the application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.securitycompass.com/sdelements/threat-modeling/&#34;&gt;SD elements&lt;/a&gt; - Automate Threat Modeling with SD Elements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.foreseeti.com/&#34;&gt;Foreseeti&lt;/a&gt; - SecuriCAD Vanguard is an attack simulation and automated threat modeling SaaS service that enables you to automatically simulate attacks on a virtual model of your AWS environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tutamantic.com&#34;&gt;Tutamen Threat Model system&lt;/a&gt; - This tool allows threat model metadata to be added to any software diagram, turning that diagram into a threat model. It&#39;s simple to use, requires no lock-in license, and is driven by the Common Weakness Enumeration, STRIDE and OWASP Top 10.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.itemis.com/de/yakindu/security-analyst/&#34;&gt;YAKINDU Security Analyst&lt;/a&gt; - YAKINDU Security Analyst is a model-based software tool for threat analysis and risk assessment of technical systems. You can identify your protection needs, analyze possible threats and calculate the resulting risks. The underlying assessment model and calculation logic are highly customizable and can be integrated into existing toolchains.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/images/practical-devsecops-logo.png&#34; alt=&#34;Practical DevSecOps&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer the guidelines at &lt;a href=&#34;https://raw.githubusercontent.com/hysnsec/awesome-threat-modelling/master/Contributing.md&#34;&gt;contributing.md for details&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>darinpope/jenkins-example-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/darinpope/jenkins-example-docker</id>
    <link href="https://github.com/darinpope/jenkins-example-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jenkins-example-docker&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-swag</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/linuxserver/docker-swag</id>
    <link href="https://github.com/linuxserver/docker-swag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nginx webserver and reverse proxy with php support and a built-in Certbot (Let&#39;s Encrypt) client. It also contains fail2ban for intrusion prevention.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;linuxserver/swag&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fswag&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fswag?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-swag/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-swag/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-swag%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/swag/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fswag%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let&#39;s Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let&#39;s Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif&#34; alt=&#34;swag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/swag:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Validation and initial setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before running this container, make sure that the url and subdomains are properly forwarded to this container&#39;s host, and that port 443 (and/or 80) is not being used by another service on the host (NAS gui, another webserver, etc.).&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;http&lt;/code&gt; validation, port 80 on the internet side of the router should be forwarded to this container&#39;s port 80&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;dns&lt;/code&gt; validation, make sure to enter your credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cloudflare provides free accounts for managing dns and is very easy to use with this image. Make sure that it is set up for &#34;dns only&#34; instead of &#34;dns + proxy&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Google dns plugin is meant to be used with &#34;Google Cloud DNS&#34;, a paid enterprise product, and not for &#34;Google Domains DNS&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;duckdns&lt;/code&gt; validation, either leave the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable empty or set it to &lt;code&gt;wildcard&lt;/code&gt;, and set the &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable with your duckdns token. Due to a limitation of duckdns, the resulting cert will only cover either main subdomain (ie. &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt;), or sub-subdomains (ie. &lt;code&gt;*.yoursubdomain.duckdns.org&lt;/code&gt;), but will not both at the same time. You can use our &lt;a href=&#34;https://hub.docker.com/r/linuxserver/duckdns/&#34;&gt;duckdns image&lt;/a&gt; to update your IP on duckdns.org.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cap-add=NET_ADMIN&lt;/code&gt; is required for fail2ban to modify iptables&lt;/li&gt; &#xA; &lt;li&gt;If you need a dynamic dns provider, you can use the free provider duckdns.org where the &lt;code&gt;URL&lt;/code&gt; will be &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt; and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; can be &lt;code&gt;www,ftp,cloud&lt;/code&gt; with http validation, or &lt;code&gt;wildcard&lt;/code&gt; with dns validation.&lt;/li&gt; &#xA; &lt;li&gt;After setup, navigate to &lt;code&gt;https://yourdomain.url&lt;/code&gt; to access the default homepage (http access through port 80 is disabled by default, you can enable it by editing the default site config at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Certs are checked nightly and if expiration is within 30 days, renewal is attempted. If your cert is about to expire in less than 30 days, check the logs under &lt;code&gt;/config/log/letsencrypt&lt;/code&gt; to see why the renewals have been failing. It is recommended to input your e-mail in docker parameters so you receive expiration notices from Let&#39;s Encrypt in those circumstances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security and password protection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.&lt;/li&gt; &#xA; &lt;li&gt;Per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;, the container is shipping &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; as the &lt;code&gt;dhparams.pem&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file &lt;code&gt;docker exec -it swag htpasswd -c /config/nginx/.htpasswd &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can add multiple user:pass to &lt;code&gt;.htpasswd&lt;/code&gt;. For the first user, use the above command, for others, use the above command without the &lt;code&gt;-c&lt;/code&gt; flag, as it will force deletion of the existing &lt;code&gt;.htpasswd&lt;/code&gt; and creation of a new one&lt;/li&gt; &#xA; &lt;li&gt;You can also use ldap auth for security and access control. A sample, user configurable ldap.conf is provided, and it requires the separate image &lt;a href=&#34;https://hub.docker.com/r/linuxserver/ldap-auth/&#34;&gt;linuxserver/ldap-auth&lt;/a&gt; to communicate with an ldap server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Site config and reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default site config resides at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;. Feel free to modify this file, and you can add other conf files to this directory. However, if you delete the &lt;code&gt;default&lt;/code&gt; file, a new default will be created on container start.&lt;/li&gt; &#xA; &lt;li&gt;Preset reverse proxy config files are added for popular apps. See the &lt;code&gt;README.md&lt;/code&gt; file under &lt;code&gt;/config/nginx/proxy_confs&lt;/code&gt; for instructions on how to enable them. The preset confs reside in and get imported from &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs&#34;&gt;this repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you wish to hide your site from search engine crawlers, you may find it useful to add this configuration line to your site config, within the server block, above the line where ssl.conf is included &lt;code&gt;add_header X-Robots-Tag &#34;noindex, nofollow, nosnippet, noarchive&#34;;&lt;/code&gt; This will &lt;em&gt;ask&lt;/em&gt; Google et al not to index and list your site. Be careful with this, as you will eventually be de-listed if you leave this line in on a site you wish to be present on search engines&lt;/li&gt; &#xA; &lt;li&gt;If you wish to redirect http to https, you must expose port 80&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using certs in other containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes auto-generated pfx and private-fullchain-bundle pem certs that are needed by other apps like Emby and Znc. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use these certs in other containers, do either of the following:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;em&gt;(Easier)&lt;/em&gt; Mount the container&#39;s config folder in other containers (ie. &lt;code&gt;-v /path-to-le-config:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/keys/letsencrypt/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;(More secure)&lt;/em&gt; Mount the SWAG folder &lt;code&gt;etc&lt;/code&gt; that resides under &lt;code&gt;/config&lt;/code&gt; in other containers (ie. &lt;code&gt;-v /path-to-le-config/etc:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/letsencrypt/live/&amp;lt;your.domain.url&amp;gt;/&lt;/code&gt; (This is more secure because the first method shares the entire SWAG config folder with other containers, including the www files, whereas the second method only shares the ssl certs)&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;These certs include:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;cert.pem&lt;/code&gt;, &lt;code&gt;chain.pem&lt;/code&gt;, &lt;code&gt;fullchain.pem&lt;/code&gt; and &lt;code&gt;privkey.pem&lt;/code&gt;, which are generated by Certbot and used by nginx and various other apps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;privkey.pfx&lt;/code&gt;, a format supported by Microsoft and commonly used by dotnet apps such as Emby Server (no password)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;priv-fullchain-bundle.pem&lt;/code&gt;, a pem cert that bundles the private key and the fullchain, used by apps like ZNC&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using fail2ban&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes fail2ban set up with 5 jails by default: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;nginx-http-auth&lt;/li&gt; &#xA;   &lt;li&gt;nginx-badbots&lt;/li&gt; &#xA;   &lt;li&gt;nginx-botsearch&lt;/li&gt; &#xA;   &lt;li&gt;nginx-deny&lt;/li&gt; &#xA;   &lt;li&gt;nginx-unauthorized&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;To enable or disable other jails, modify the file &lt;code&gt;/config/fail2ban/jail.local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To modify filters and actions, instead of editing the &lt;code&gt;.conf&lt;/code&gt; files, create &lt;code&gt;.local&lt;/code&gt; files with the same name and edit those because .conf files get overwritten when the actions and filters are updated. &lt;code&gt;.local&lt;/code&gt; files will append whatever&#39;s in the &lt;code&gt;.conf&lt;/code&gt; files (ie. &lt;code&gt;nginx-http-auth.conf&lt;/code&gt; --&amp;gt; &lt;code&gt;nginx-http-auth.local&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You can check which jails are active via &lt;code&gt;docker exec -it swag fail2ban-client status&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can check the status of a specific jail via &lt;code&gt;docker exec -it swag fail2ban-client status &amp;lt;jail name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can unban an IP via &lt;code&gt;docker exec -it swag fail2ban-client set &amp;lt;jail name&amp;gt; unbanip &amp;lt;IP&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of commands can be found here: &lt;a href=&#34;https://www.fail2ban.org/wiki/index.php/Commands&#34;&gt;https://www.fail2ban.org/wiki/index.php/Commands&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating configs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container creates a number of configs for nginx, proxy samples, etc.&lt;/li&gt; &#xA; &lt;li&gt;Config updates are noted in the changelog but not automatically applied to your files.&lt;/li&gt; &#xA; &lt;li&gt;If you have modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Keep your existing configs as is (not broken, don&#39;t fix)&lt;/li&gt; &#xA;   &lt;li&gt;Review our repository commits and apply the new changes yourself&lt;/li&gt; &#xA;   &lt;li&gt;Delete the modified config file with listed updates, restart the container, reapply your changes&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you have NOT modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Delete the config file with listed updates, restart the container&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Proxy sample updates are not listed in the changelog. See the changes here: &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs/commits/master&#34;&gt;https://github.com/linuxserver/reverse-proxy-confs/commits/master&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Proxy sample files WILL be updated, however your renamed (enabled) proxy files will not.&lt;/li&gt; &#xA; &lt;li&gt;You can check the new sample and adjust your active config as needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migration from the old &lt;code&gt;linuxserver/letsencrypt&lt;/code&gt; image&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the instructions &lt;a href=&#34;https://www.linuxserver.io/blog/2020-08-21-introducing-swag#migrate&#34;&gt;on this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  swag:&#xA;    image: lscr.io/linuxserver/swag:latest&#xA;    container_name: swag&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - URL=yourdomain.url&#xA;      - VALIDATION=http&#xA;      - SUBDOMAINS=www, #optional&#xA;      - CERTPROVIDER= #optional&#xA;      - DNSPLUGIN=cloudflare #optional&#xA;      - PROPAGATION= #optional&#xA;      - DUCKDNSTOKEN= #optional&#xA;      - EMAIL= #optional&#xA;      - ONLY_SUBDOMAINS=false #optional&#xA;      - EXTRA_DOMAINS= #optional&#xA;      - STAGING=false #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 443:443&#xA;      - 80:80 #optional&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=swag \&#xA;  --cap-add=NET_ADMIN \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e URL=yourdomain.url \&#xA;  -e VALIDATION=http \&#xA;  -e SUBDOMAINS=www, `#optional` \&#xA;  -e CERTPROVIDER= `#optional` \&#xA;  -e DNSPLUGIN=cloudflare `#optional` \&#xA;  -e PROPAGATION= `#optional` \&#xA;  -e DUCKDNSTOKEN= `#optional` \&#xA;  -e EMAIL= `#optional` \&#xA;  -e ONLY_SUBDOMAINS=false `#optional` \&#xA;  -e EXTRA_DOMAINS= `#optional` \&#xA;  -e STAGING=false `#optional` \&#xA;  -p 443:443 \&#xA;  -p 80:80 `#optional` \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/swag:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Https port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 80&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Http port (required for http validation and http -&amp;gt; https redirect)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e URL=yourdomain.url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Top url you have control over (&lt;code&gt;customdomain.com&lt;/code&gt; if you own it, or &lt;code&gt;customsubdomain.ddnsprovider.com&lt;/code&gt; if dynamic dns).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e VALIDATION=http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certbot validation method to use, options are &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;dns&lt;/code&gt; or &lt;code&gt;duckdns&lt;/code&gt; (&lt;code&gt;dns&lt;/code&gt; method also requires &lt;code&gt;DNSPLUGIN&lt;/code&gt; variable set) (&lt;code&gt;duckdns&lt;/code&gt; method requires &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable set, and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable must be either empty or set to &lt;code&gt;wildcard&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUBDOMAINS=www,&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subdomains you&#39;d like the cert to cover (comma separated, no spaces) ie. &lt;code&gt;www,ftp,cloud&lt;/code&gt;. For a wildcard cert, set this &lt;em&gt;exactly&lt;/em&gt; to &lt;code&gt;wildcard&lt;/code&gt; (wildcard cert is available via &lt;code&gt;dns&lt;/code&gt; and &lt;code&gt;duckdns&lt;/code&gt; validation only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e CERTPROVIDER=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally define the cert provider. Set to &lt;code&gt;zerossl&lt;/code&gt; for ZeroSSL certs (requires existing &lt;a href=&#34;https://app.zerossl.com/signup&#34;&gt;ZeroSSL account&lt;/a&gt; and the e-mail address entered in &lt;code&gt;EMAIL&lt;/code&gt; env var). Otherwise defaults to Let&#39;s Encrypt.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DNSPLUGIN=cloudflare&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;dns&lt;/code&gt;. Options are &lt;code&gt;aliyun&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;cloudflare&lt;/code&gt;, &lt;code&gt;cloudxns&lt;/code&gt;, &lt;code&gt;cpanel&lt;/code&gt;, &lt;code&gt;desec&lt;/code&gt;, &lt;code&gt;digitalocean&lt;/code&gt;, &lt;code&gt;directadmin&lt;/code&gt;, &lt;code&gt;dnsimple&lt;/code&gt;, &lt;code&gt;dnsmadeeasy&lt;/code&gt;, &lt;code&gt;dnspod&lt;/code&gt;, &lt;code&gt;domeneshop&lt;/code&gt;, &lt;code&gt;gandi&lt;/code&gt;, &lt;code&gt;gehirn&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;he&lt;/code&gt;, &lt;code&gt;hetzner&lt;/code&gt;, &lt;code&gt;infomaniak&lt;/code&gt;, &lt;code&gt;inwx&lt;/code&gt;, &lt;code&gt;ionos&lt;/code&gt;, &lt;code&gt;linode&lt;/code&gt;, &lt;code&gt;loopia&lt;/code&gt;, &lt;code&gt;luadns&lt;/code&gt;, &lt;code&gt;netcup&lt;/code&gt;, &lt;code&gt;njalla&lt;/code&gt;, &lt;code&gt;nsone&lt;/code&gt;, &lt;code&gt;ovh&lt;/code&gt;, &lt;code&gt;rfc2136&lt;/code&gt;, &lt;code&gt;route53&lt;/code&gt;, &lt;code&gt;sakuracloud&lt;/code&gt;, &lt;code&gt;standalone&lt;/code&gt;, &lt;code&gt;transip&lt;/code&gt; and &lt;code&gt;vultr&lt;/code&gt;. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROPAGATION=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally override (in seconds) the default propagation time for the dns plugins.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DUCKDNSTOKEN=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;duckdns&lt;/code&gt;. Retrieve your token from &lt;a href=&#34;https://www.duckdns.org&#34;&gt;https://www.duckdns.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EMAIL=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ONLY_SUBDOMAINS=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EXTRA_DOMAINS=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional fully qualified domain names (comma separated, no spaces) ie. &lt;code&gt;extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e STAGING=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser&#39;s security test. Only to be used for testing purposes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All the config files including the webroot reside here.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=swag&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=swag&amp;amp;query=%24.mods%5B%27swag%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it swag /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-swag/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once swag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-swag.git&#xA;cd docker-swag&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/swag:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.22:&lt;/strong&gt; - Added support for Azure DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.04.22:&lt;/strong&gt; - Added certbot-dns-loopia for DNS01 validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.22:&lt;/strong&gt; - Added support for standalone DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.03.22:&lt;/strong&gt; - created a logfile for fail2ban nginx-unauthorized in /etc/cont-init.d/50-config&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.01.22:&lt;/strong&gt; - Added a fail2ban jail for nginx unauthorized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.12.21:&lt;/strong&gt; - Fixed issue with iptables not working as expected&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30.11.21:&lt;/strong&gt; - Move maxmind to a &lt;a href=&#34;https://github.com/linuxserver/docker-mods/tree/swag-maxmind&#34;&gt;new mod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.11.21:&lt;/strong&gt; - Added support for Infomaniak DNS for certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.11.21:&lt;/strong&gt; - Added support for dnspod validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.11.21:&lt;/strong&gt; - Added support for deSEC DNS for wildcard certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.10.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; proxy.conf - Mitigate &lt;a href=&#34;https://httpoxy.org/&#34;&gt;https://httpoxy.org/&lt;/a&gt; vulnerabilities. Ref: &lt;a href=&#34;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&#34;&gt;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.10.21:&lt;/strong&gt; - Fix Hurricane Electric (HE) DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.10.21:&lt;/strong&gt; - Fix deprecated LE root cert check to fix failures when using &lt;code&gt;STAGING=true&lt;/code&gt;, and failures in revoking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.21:&lt;/strong&gt; - Added support for Hurricane Electric (HE) DNS validation. Added lxml build deps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.10.21:&lt;/strong&gt; - Check if the cert uses the old LE root cert, revoke and regenerate if necessary. &lt;a href=&#34;https://twitter.com/letsencrypt/status/1443621997288767491&#34;&gt;Here&#39;s more info&lt;/a&gt; on LE root cert expiration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.09.21:&lt;/strong&gt; - Add an optional header to opt out of Google FLoC in &lt;code&gt;ssl.conf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.09.21:&lt;/strong&gt; - Mark &lt;code&gt;SUBDOMAINS&lt;/code&gt; var as optional.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.08.21:&lt;/strong&gt; - Add support for ionos dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.07.21:&lt;/strong&gt; - Fix libmaxminddb issue due to upstream change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.07.21:&lt;/strong&gt; - Rebase to alpine 3.14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.21:&lt;/strong&gt; - Update default nginx conf folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf - Use &lt;code&gt;resolver.conf&lt;/code&gt; and patch for &lt;code&gt;CVE-2021-32637&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.05.21:&lt;/strong&gt; - Modify resolver.conf generation to detect and ignore ipv6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, ssl.conf, proxy.conf, and the default site-conf - Rework nginx.conf to be inline with alpine upstream and relocate lines from other files. Use linuxserver.io wheel index for pip packages. Switch to using &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; for &lt;code&gt;dhparams.pem&lt;/code&gt; per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;. Added &lt;code&gt;worker_processes.conf&lt;/code&gt;, which sets the number of nginx workers, and &lt;code&gt;resolver.conf&lt;/code&gt;, which sets the dns resolver. Both conf files are auto-generated only on first start and can be user modified later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.04.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf and authelia-location.conf - Add remote name/email headers and pass http method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add php7-gmp and php7-pecl-mailparse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add support for vultr dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.03.21:&lt;/strong&gt; - Add support for directadmin dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.02.21:&lt;/strong&gt; - Clean up rust/cargo cache, which ballooned the image size in the last couple of builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.02.21:&lt;/strong&gt; - Fix aliyun, domeneshop, inwx and transip dns confs for existing users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.21:&lt;/strong&gt; - Rebasing to alpine 3.13. Add nginx mods brotli and dav-ext. Remove nginx mods lua and lua-upstream (due to regression over the last couple of years).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.21:&lt;/strong&gt; - Add support for hetzner dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.01.21:&lt;/strong&gt; - Add check for ZeroSSL EAB retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.01.21:&lt;/strong&gt; - Add support for getting certs from &lt;a href=&#34;https://zerossl.com/&#34;&gt;ZeroSSL&lt;/a&gt; via optional &lt;code&gt;CERTPROVIDER&lt;/code&gt; env var. Update aliyun, domeneshop, inwx and transip dns plugins with the new plugin names. Hide &lt;code&gt;donoteditthisfile.conf&lt;/code&gt; because users were editing it despite its name. Suppress harmless error when no proxy confs are enabled.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.01.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; /config/nginx/site-confs/default - Add helper pages to aid troubleshooting&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.12.20:&lt;/strong&gt; - Add support for njalla dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.12.20:&lt;/strong&gt; - Check for template/conf updates and notify in the log. Add support for gehirn and sakuracloud dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.11.20:&lt;/strong&gt; - Add support for netcup dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; ssl.conf - Add frame-ancestors to Content-Security-Policy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and ssl.conf - Minor cleanups and reordering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf - Added geoip2 configs. Added MAXMINDDB_LICENSE_KEY variable to readme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.09.20:&lt;/strong&gt; - Add php7-xsl.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and various proxy samples - Global websockets across all configs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.08.20:&lt;/strong&gt; - Initial release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-node</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/microsoft/vscode-remote-try-node</id>
    <link href="https://github.com/microsoft/vscode-remote-try-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-node/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Node&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;node&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that &lt;code&gt;eslint&lt;/code&gt; and the &lt;code&gt;vscode-eslint&lt;/code&gt; extension are already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;dbaeumer.vscode-eslint&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 20).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 3000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 3000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If we didn&#39;t know the port was 3000, we could&#39;ve used a regex instead of &#34;3000&#34; in the &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as &#34;.+/server.js&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:3000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Unleash/unleash-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/Unleash/unleash-docker</id>
    <link href="https://github.com/Unleash/unleash-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker container for unleash&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Use Unleash Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Useful links:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/unleashorg/unleash-server/&#34;&gt;Docker image on dockerhub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://artifacthub.io/packages/helm/unleash/unleash&#34;&gt;Unleash Helm Chart on artifacthub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a network by running &lt;code&gt;docker network create unleash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start a postgres database:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -e POSTGRES_PASSWORD=some_password \&#xA;  -e POSTGRES_USER=unleash_user -e POSTGRES_DB=unleash \&#xA;  --network unleash --name postgres postgres&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Start Unleash via docker:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -p 4242:4242 \&#xA;  -e DATABASE_HOST=postgres -e DATABASE_NAME=unleash \&#xA;  -e DATABASE_USERNAME=unleash_user -e DATABASE_PASSWORD=some_password \&#xA;  -e DATABASE_SSL=false \&#xA;  --network unleash unleashorg/unleash-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All configuration options &lt;a href=&#34;https://docs.getunleash.io/docs/deploy/configuring_unleash&#34;&gt;available in our documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;User accounts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Once started up, you&#39;ll have a user with &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;username: admin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;password: unleash4all&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This user is an admin user and can be used to create other users, we do suggest you change the password :)&lt;/p&gt; &#xA;&lt;h4&gt;Docker-compose&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the &lt;a href=&#34;https://github.com/Unleash/unleash-docker&#34;&gt;unleash-docker&lt;/a&gt; repository.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose build&lt;/code&gt; in repository root folder.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up&lt;/code&gt; in repository root folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Work locally with this repo&lt;/h2&gt; &#xA;&lt;p&gt;Start by cloning this repository.&lt;/p&gt; &#xA;&lt;p&gt;We have set up &lt;code&gt;docker-compose&lt;/code&gt; to start postgres and the unleash server together. This makes it really fast to start up unleash locally without setting up a database or node.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose build&#xA;$ docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;We are using docker-compose version 3.9 and it requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docker engine 19.03.0+&lt;/li&gt; &#xA; &lt;li&gt;Docker compose 2.0.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more info, check out the compatibility matrix on Docker&#39;s website: &lt;a href=&#34;https://docs.docker.com/compose/compose-file/compose-versioning/#compatibility-matrix&#34;&gt;compatibility-matrix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building the docker image&lt;/h3&gt; &#xA;&lt;p&gt;We expect a build-arg for which node-version to build with so if you&#39;re building using the docker cli, you have to use &lt;code&gt;--build-arg NODE_VERSION=14-alpine&lt;/code&gt; OR &lt;code&gt;--build-arg NODE_VERSION=16-alpine&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Upgrade version&lt;/h2&gt; &#xA;&lt;p&gt;When we upgrade the &lt;code&gt;unleash-version&lt;/code&gt; this project should be tagged with the same version number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git tag -a v3.7.0 -m &#34;upgrade to unleash-server v3.7.0&#34;&#xA;git push origin main --follow-tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically trigger a github actions which will build the new tag and push it to docker-hub.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>databricks/containers</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/databricks/containers</id>
    <link href="https://github.com/databricks/containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample base images for Databricks Container Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Databricks Container Services - Example Containers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;latest&lt;/code&gt; tags have been removed on most images in favor of runtime-specific tags, with the exception being the &lt;code&gt;databricksruntime/standard&lt;/code&gt; image. If your build relied on an image tagged with &lt;code&gt;latest&lt;/code&gt;, please update it to match the runtime version of the cluster.&lt;/p&gt; &#xA;&lt;p&gt;This repository provides Dockerfiles for use with Databricks Container Services. These Dockerfiles are meant as a reference and a starting point, enabling users to build their own custom images to suit thier specific needs.&lt;/p&gt; &#xA;&lt;h2&gt;Warning: Runtime Incompatibility&lt;/h2&gt; &#xA;&lt;p&gt;The Dockerfiles on the master branch are currently not maintained to be backwards compatible with every Databricks Runtime version, and are not always updated for new versions.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.azuredatabricks.net/user-guide/clusters/custom-containers.html&#34;&gt;Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.databricks.com/user-guide/clusters/custom-containers.html&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/standard&#34;&gt;Standard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/minimal&#34;&gt;Minimal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/R&#34;&gt;R&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/dbfsfuse&#34;&gt;DBFS FUSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/ssh&#34;&gt;SSH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/ubuntu/gpu&#34;&gt;GPU&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DockerHub&lt;/h2&gt; &#xA;&lt;p&gt;The Databricks provided sample images have been published to &lt;a href=&#34;https://hub.docker.com/u/databricksruntime&#34;&gt;DockerHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How To Contribute to this Repo&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork and Clone this Repo, locally.&lt;/li&gt; &#xA; &lt;li&gt;Follow the example dockerfiles and ensure your docker file has liberal comments, explaining each step of your image.&lt;/li&gt; &#xA; &lt;li&gt;Be specific when you name your image. &lt;em&gt;Example:&lt;/em&gt; &lt;strong&gt;CentOS7.6RBundle&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Test your image and verify it works on a Databricks Cluster.&lt;/li&gt; &#xA; &lt;li&gt;Check it into the &lt;a href=&#34;https://raw.githubusercontent.com/databricks/containers/master/experimental&#34;&gt;experimental&lt;/a&gt; directory, in a folder specific to the OS. &lt;em&gt;Example:&lt;/em&gt; &lt;strong&gt;experimental/centos/CentOS7.6RBundle&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request and in the pull request indicate what version of Databricks Runtime you tested this with.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>appleboy/ssh-action</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/appleboy/ssh-action</id>
    <link href="https://github.com/appleboy/ssh-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub Actions for executing remote ssh commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 SSH for GitHub Actions&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Action&lt;/a&gt; for executing remote ssh commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/images/ssh-workflow.png&#34; alt=&#34;ssh workflow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/appleboy/ssh-action/actions&#34;&gt;&lt;img src=&#34;https://github.com/appleboy/ssh-action/workflows/remote%20ssh%20command/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Only support &lt;strong&gt;Linux&lt;/strong&gt; &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; container.&lt;/p&gt; &#xA;&lt;h2&gt;Input variables&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/action.yml&#34;&gt;action.yml&lt;/a&gt; for more detailed information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;host&lt;/code&gt; - ssh host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;port&lt;/code&gt; - ssh port, default is &lt;code&gt;22&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;username&lt;/code&gt; - ssh username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;password&lt;/code&gt; - ssh password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;passphrase&lt;/code&gt; - the passphrase is usually to encrypt the private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sync&lt;/code&gt; - synchronous execution if multiple hosts, default is false&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; - timeout for ssh to remote host, default is &lt;code&gt;30s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;command_timeout&lt;/code&gt; - timeout for ssh command, default is &lt;code&gt;10m&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;key&lt;/code&gt; - content of ssh private key. ex raw content of ~/.ssh/id_rsa&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;key_path&lt;/code&gt; - path of ssh private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fingerprint&lt;/code&gt; - fingerprint SHA256 of the host public key, default is to skip verification&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script&lt;/code&gt; - execute commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script_stop&lt;/code&gt; - stop script after first failure&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;envs&lt;/code&gt; - pass environment variable to shell script&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - enable debug mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;use_insecure_cipher&lt;/code&gt; - include more ciphers with use_insecure_cipher (see &lt;a href=&#34;https://github.com/appleboy/ssh-action/issues/56&#34;&gt;#56&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cipher&lt;/code&gt; - the allowed cipher algorithms. If unspecified then a sensible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SSH Proxy Setting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_host&lt;/code&gt; - proxy host&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_port&lt;/code&gt; - proxy port, default is &lt;code&gt;22&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_username&lt;/code&gt; - proxy username&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_password&lt;/code&gt; - proxy password&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_passphrase&lt;/code&gt; - the passphrase is usually to encrypt the private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_timeout&lt;/code&gt; - timeout for ssh to proxy host, default is &lt;code&gt;30s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_key&lt;/code&gt; - content of ssh proxy private key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_key_path&lt;/code&gt; - path of ssh proxy private key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_fingerprint&lt;/code&gt; - fingerprint SHA256 of the proxy host public key, default is to skip verification&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_use_insecure_cipher&lt;/code&gt; - include more ciphers with use_insecure_cipher (see &lt;a href=&#34;https://github.com/appleboy/ssh-action/issues/56&#34;&gt;#56&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;proxy_cipher&lt;/code&gt; - the allowed cipher algorithms. If unspecified then a sensible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Executing remote ssh commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: remote ssh command&#xA;on: [push]&#xA;jobs:&#xA;&#xA;  build:&#xA;    name: Build&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;    - name: executing remote ssh commands using password&#xA;      uses: appleboy/ssh-action@master&#xA;      with:&#xA;        host: ${{ secrets.HOST }}&#xA;        username: ${{ secrets.USERNAME }}&#xA;        password: ${{ secrets.PASSWORD }}&#xA;        port: ${{ secrets.PORT }}&#xA;        script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;======CMD======&#xA;whoami&#xA;======END======&#xA;out: ***&#xA;==============================================&#xA;✅ Successfully executed commands to all host.&#xA;==============================================&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up a SSH Key&lt;/h3&gt; &#xA;&lt;p&gt;Make sure to follow the below steps while creating SSH Keys and using them. The best practice is create the SSH Keys on local machine not remote machine. Login with username specified in Github Secrets. Generate a RSA Key-Pair:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa -b 4096 -C &#34;your_email@example.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t ed25519 -a 200 -C &#34;your_email@example.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Add newly generated key into Authorized keys. Read more about authorized keys &lt;a href=&#34;https://www.ssh.com/ssh/authorized_keys/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat .ssh/id_rsa.pub | ssh b@B &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat .ssh/id_ed25519.pub | ssh b@B &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Copy Private Key content and paste in Github Secrets.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;rsa&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;clip &amp;lt; ~/.ssh/id_rsa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ed25519&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;clip &amp;lt; ~/.ssh/id_ed25519&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;See the detail information about &lt;a href=&#34;http://www.linuxproblem.org/art_9.html&#34;&gt;SSH login without password&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note&lt;/strong&gt; from one of our readers: Depending on your version of SSH you might also have to do the following changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Put the public key in &lt;code&gt;.ssh/authorized_keys2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Change the permissions of &lt;code&gt;.ssh&lt;/code&gt; to 700&lt;/li&gt; &#xA; &lt;li&gt;Change the permissions of &lt;code&gt;.ssh/authorized_keys2&lt;/code&gt; to 640&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;h4&gt;Executing remote ssh commands using password&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: executing remote ssh commands using password&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    password: ${{ secrets.PASSWORD }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using private key&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: executing remote ssh commands using ssh key&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    key: ${{ secrets.KEY }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: whoami&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiple Commands&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: multiple command&#xA;  uses: appleboy/ssh-action@master&#xA;  with:&#xA;    host: ${{ secrets.HOST }}&#xA;    username: ${{ secrets.USERNAME }}&#xA;    key: ${{ secrets.KEY }}&#xA;    port: ${{ secrets.PORT }}&#xA;    script: |&#xA;      whoami&#xA;      ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/images/output-result.png&#34; alt=&#34;result&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Multiple Hosts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;-     host: &#34;foo.com&#34;&#xA;+     host: &#34;foo.com,bar.com&#34;&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiple hosts with different port&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;-     host: &#34;foo.com&#34;&#xA;+     host: &#34;foo.com:1234,bar.com:5678&#34;&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Synchronous execution on multiple hosts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: multiple host&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: &#34;foo.com,bar.com&#34;&#xA;+     sync: true&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pass environment variable to shell script&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: pass environment&#xA;    uses: appleboy/ssh-action@master&#xA;+   env:&#xA;+     FOO: &#34;BAR&#34;&#xA;+     BAR: &#34;FOO&#34;&#xA;+     SHA: ${{ github.sha }}&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     envs: FOO,BAR&#xA;      script: |&#xA;        echo &#34;I am $FOO&#34;&#xA;        echo &#34;I am $BAR&#34;&#xA;        echo &#34;sha: $SHA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Inside &lt;code&gt;env&lt;/code&gt; object, you need to pass every environment variable as a string, passing &lt;code&gt;Integer&lt;/code&gt; data type or any other may output unexpected results.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Stop script after first failure&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ex: missing &lt;code&gt;abc&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: stop script if command error&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     script_stop: true&#xA;      script: |&#xA;        mkdir abc/def&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;======CMD======&#xA;mkdir abc/def&#xA;ls -al&#xA;&#xA;======END======&#xA;2019/11/21 01:16:21 Process exited with status 1&#xA;err: mkdir: cannot create directory ‘abc/def’: No such file or directory&#xA;##[error]Docker run failed with exit code 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How to connect remote server using &lt;code&gt;ProxyCommand&lt;/code&gt;?&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+--------+       +----------+      +-----------+&#xA;| Laptop | &amp;lt;--&amp;gt;  | Jumphost | &amp;lt;--&amp;gt; | FooServer |&#xA;+--------+       +----------+      +-----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;in your &lt;code&gt;~/.ssh/config&lt;/code&gt;, you will see the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host Jumphost&#xA;  HostName Jumphost&#xA;  User ubuntu&#xA;  Port 22&#xA;  IdentityFile ~/.ssh/keys/jump_host.pem&#xA;&#xA;Host FooServer&#xA;  HostName FooServer&#xA;  User ubuntu&#xA;  Port 22&#xA;  ProxyCommand ssh -q -W %h:%p Jumphost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How to convert to YAML format of GitHubActions&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh proxy command&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     proxy_host: ${{ secrets.PROXY_HOST }}&#xA;+     proxy_username: ${{ secrets.PROXY_USERNAME }}&#xA;+     proxy_key: ${{ secrets.PROXY_KEY }}&#xA;+     proxy_port: ${{ secrets.PROXY_PORT }}&#xA;      script: |&#xA;        mkdir abc/def&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Protecting a Private Key&lt;/h4&gt; &#xA;&lt;p&gt;The purpose of the passphrase is usually to encrypt the private key. This makes the key file by itself useless to an attacker. It is not uncommon for files to leak from backups or decommissioned hardware, and hackers commonly exfiltrate files from compromised systems.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh key passphrase&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     passphrase: ${{ secrets.PASSPHRASE }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using host fingerprint verification&lt;/h4&gt; &#xA;&lt;p&gt;Setting up SSH host fingerprint verification can help to prevent Person-in-the-Middle attacks. Before setting this up, run the command below to get your SSH host fingerprint. Remember to replace &lt;code&gt;ed25519&lt;/code&gt; with your appropriate key type (&lt;code&gt;rsa&lt;/code&gt;, &lt;code&gt;dsa&lt;/code&gt;, etc.) that your server is using and &lt;code&gt;example.com&lt;/code&gt; with your host.&lt;/p&gt; &#xA;&lt;p&gt;In modern OpenSSH releases, the &lt;em&gt;default&lt;/em&gt; key types to be fetched are &lt;code&gt;rsa&lt;/code&gt; (since version 5.1), &lt;code&gt;ecdsa&lt;/code&gt; (since version 6.0), and &lt;code&gt;ed25519&lt;/code&gt; (since version 6.7).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ssh example.com ssh-keygen -l -f /etc/ssh/ssh_host_ed25519_key.pub | cut -d &#39; &#39; -f2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can adjust you config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  - name: ssh key passphrase&#xA;    uses: appleboy/ssh-action@master&#xA;    with:&#xA;      host: ${{ secrets.HOST }}&#xA;      username: ${{ secrets.USERNAME }}&#xA;      key: ${{ secrets.KEY }}&#xA;      port: ${{ secrets.PORT }}&#xA;+     fingerprint: ${{ secrets.FINGERPRINT }}&#xA;      script: |&#xA;        whoami&#xA;        ls -al&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We would love for you to contribute to &lt;code&gt;appleboy/ssh-action&lt;/code&gt;, pull requests are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/appleboy/ssh-action/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dunglas/symfony-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/dunglas/symfony-docker</id>
    <link href="https://github.com/dunglas/symfony-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Docker-based installer and runtime for Symfony. Install: download and `docker-compose up`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Symfony Docker&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;-based installer and runtime for the &lt;a href=&#34;https://symfony.com&#34;&gt;Symfony&lt;/a&gt; web framework, with full &lt;a href=&#34;https://symfony.com/doc/current/weblink.html&#34;&gt;HTTP/2&lt;/a&gt;, HTTP/3 and HTTPS support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dunglas/symfony-docker/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If not already done, &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;install Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose build --pull --no-cache&lt;/code&gt; to build fresh images&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up&lt;/code&gt; (the logs will be displayed in the current shell)&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;https://localhost&lt;/code&gt; in your favorite web browser and &lt;a href=&#34;https://stackoverflow.com/a/15076602/1352334&#34;&gt;accept the auto-generated TLS certificate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose down --remove-orphans&lt;/code&gt; to stop the Docker containers.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Production, development and CI ready&lt;/li&gt; &#xA; &lt;li&gt;Automatic HTTPS (in dev and in prod!)&lt;/li&gt; &#xA; &lt;li&gt;HTTP/2, HTTP/3 and &lt;a href=&#34;https://symfony.com/doc/current/web_link.html&#34;&gt;Preload&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;a href=&#34;https://symfony.com/doc/current/mercure.html&#34;&gt;Mercure&lt;/a&gt; hub&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulcain.rocks&#34;&gt;Vulcain&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Just 2 services (PHP FPM and Caddy server)&lt;/li&gt; &#xA; &lt;li&gt;Super-readable configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Enjoy!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/build.md&#34;&gt;Build options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/existing-project.md&#34;&gt;Using Symfony Docker with an existing project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/extra-services.md&#34;&gt;Support for extra services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/production.md&#34;&gt;Deploying in production&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/xdebug.md&#34;&gt;Installing Xdebug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/makefile.md&#34;&gt;Using a Makefile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunglas/symfony-docker/main/docs/troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://dunglas.fr&#34;&gt;Kévin Dunglas&lt;/a&gt;, co-maintained by &lt;a href=&#34;https://twitter.com/maxhelias&#34;&gt;Maxime Helias&lt;/a&gt; and sponsored by &lt;a href=&#34;https://les-tilleuls.coop&#34;&gt;Les-Tilleuls.coop&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xstriver/vps-heroku</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/xstriver/vps-heroku</id>
    <link href="https://github.com/xstriver/vps-heroku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vps-heroku&lt;/h1&gt; &#xA;&lt;p&gt;so this is another file for heroku vps and its kinda same as pervious one&lt;/p&gt; &#xA;&lt;p&gt;here is the link to make ur vps &lt;a href=&#34;https://dashboard.heroku.com/new?template=https%3A%2F%2Fgithub.com%2FRixEtte%2Fvps-heroku&#34;&gt;https://dashboard.heroku.com/new?template=https%3A%2F%2Fgithub.com%2FRixEtte%2Fvps-heroku&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sou6av/raganork-md-deploy</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/sou6av/raganork-md-deploy</id>
    <link href="https://github.com/sou6av/raganork-md-deploy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Just fork this. No need of editing files :)&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>alist-org/alist-render</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/alist-org/alist-render</id>
    <link href="https://github.com/alist-org/alist-render" rel="alternate"></link>
    <summary type="html">&lt;p&gt;alist on render&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;alist-render&lt;/h1&gt; &#xA;&lt;h3&gt;Deploy Alist to Render&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://render.com/deploy&#34;&gt;&lt;img src=&#34;https://render.com/images/deploy-to-render-button.svg?sanitize=true&#34; alt=&#34;Deploy to Render&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;database&lt;/h3&gt; &#xA;&lt;p&gt;You may need to use another remote MySQL database as instance restarts will lose data. Recommended Free MySQL Databases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://db4free.net/&#34;&gt;https://db4free.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://remotemysql.com/&#34;&gt;https://remotemysql.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freesqldatabase.com/&#34;&gt;https://www.freesqldatabase.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;password&lt;/h3&gt; &#xA;&lt;p&gt;The initial password is randomly generated, and you can get it by checking the &lt;code&gt;logs&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>corretto/corretto-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/corretto/corretto-docker</id>
    <link href="https://github.com/corretto/corretto-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerfiles for Amazon Corretto Official images.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Corretto Docker &lt;img src=&#34;https://github.com/corretto/corretto-docker/workflows/Verify%20Docker%20Images/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Master repository where Dockerfiles for Amazon Corretto are hosted. These docker files are used to build images for &lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;Amazon Corretto Offical Images&lt;/a&gt; and ECR images.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;The docker images are available on &lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;Amazon Corretto Official Images&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use Amazon Corretto Official Images from Docker hub run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull amazoncorretto:11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The docker images are also available on &lt;strong&gt;Amazon ECR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use the docker images from Amazon ECR, you would need to authenticate with the ECR registry (id: 489478819445) with the help of instruction from &lt;a href=&#34;https://aws.amazon.com/blogs/compute/authenticating-amazon-ecr-repositories-for-docker-cli-with-credential-helper/&#34;&gt;here&lt;/a&gt;. Once authenticated, Amazon Corretto docker images can be pulled using command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull 489478819445.dkr.ecr.us-west-2.amazonaws.com/amazoncorretto:latest&#xA;docker run -it 489478819445.dkr.ecr.us-west-2.amazonaws.com/amazoncorretto:latest /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can view the available tags, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aws ecr list-images --region us-west-2 --registry-id 489478819445 --repository-name amazoncorretto | jq -r &#39;.imageIds[] | .imageTag&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Supported Tags&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8, 8u332, 8u332-al2, 8-al2-full,8-al2-jdk, latest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;11, 11.0.15, 11.0.15-al2, 11-al2-jdk, 11-al2-full&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.12, 8u322-alpine3.12, 8-alpine3.12-full, 8-alpine3.12-jdk, 8-alpine, 8u322-alpine, 8-alpine-full, 8-alpine-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.12-jre, 8u322-alpine3.12-jre, 8-alpine-jre, 8u322-alpine-jre&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.13, 8u322-alpine3.13, 8-alpine3.13-full, 8-alpine3.13-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.13-jre, 8u322-alpine3.13-jre&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.14, 8u322-alpine3.14, 8-alpine3.14-full, 8-alpine3.14-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;8-alpine3.14-jre, 8u322-alpine3.14-jre&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;11-alpine3.12, 11.0.14-alpine3.12, 11-alpine3.12-full, 11-alpine3.12-jdk, 11-alpine, 11.0.14-alpine, 11-alpine-full, 11-alpine-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;11-alpine3.13, 11.0.14-alpine3.13, 11-alpine3.13-full, 11-alpine3.13-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;11-alpine3.14, 11.0.14-alpine3.14, 11-alpine3.14-full, 11-alpine3.14-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;17, 17-al2-jdk, 17-al2-full&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;17-alpine3.12, 17.0.2-alpine3.12, 17-alpine3.12-full, 17-alpine3.12-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;17-alpine3.13, 17.0.2-alpine3.13, 17-alpine3.13-full, 17-alpine3.13-jdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;17-alpine3.14, 17.0.2-alpine3.14, 17-alpine3.14-full, 17-alpine3.14-jdk, 17-alpine, 17.0.2-alpine, 17-alpine-full, 17-alpine-jdk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;To build the docker images, you can use the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t amazon-corretto-{major_version} -f ./{major_version}/{jdk|jre|slim}/{al2|alpine|debian}/Dockerfile .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Security&lt;/h1&gt; &#xA;&lt;p&gt;If you would like to report a potential security issue in this project, please do not create a GitHub issue. Instead, please follow the instructions &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;here&lt;/a&gt; or email AWS security directly.&lt;/p&gt; &#xA;&lt;h2&gt;Why does security scanner show that a docker image has a CVE?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; If you are using a Corretto Docker image with an AL2 guest, then Amazon’s ECS scanning function can result in a &lt;a href=&#34;https://alas.aws.amazon.com/AL2/ALAS-2021-1731.html&#34;&gt;ALAS2-2021-1731 notification&lt;/a&gt;. However, there is no reason to update the Corretto application within Docker. You can safely ignore this ALAS. Once the next Corretto quarterly release is posted, currently scheduled for January 19, 2022, the alarm condition will be satisfied. This notice only affects the following Corretto Docker images with AL2 in the Docker ECR:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;11, 11.0.15, 11.0.15-al2, 11-al2-jdk, 11-al2-full&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/amazoncorretto&#34;&gt;17, 17-al2-jdk, 17-al2-full&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If a security scanner reports that an amazoncorretto image includes a CVE, the first recommended action is to pull an updated version of this image.&lt;/p&gt; &#xA;&lt;p&gt;If no updated image is available, run the appropriate command to update packages for the platform, ie. run &#34;apk -U upgrade&#34; for Alpine or &#34;yum update -y --security&#34; for AmazonLinux in your Dockerfiles or systems to resolve the issue immediately.&lt;/p&gt; &#xA;&lt;p&gt;If no updated package is available, please treat this as a potential security issue and follow &lt;a href=&#34;https://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;these instructions&lt;/a&gt; or email AWS security directly at &lt;a href=&#34;mailto:aws-security@amazon.com&#34;&gt;aws-security@amazon.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is the responsibility of the base docker image supplier to provide timely security updates to images and packages. The amazoncorretto images are automatically rebuilt when a new base image is made available, but we do not make changes to our Dockerfiles to pull in one-off package updates. If a new base image has not yet been made generally available by a base docker image maintainer, please contact that maintainer to request that the issue be addressed.&lt;/p&gt; &#xA;&lt;p&gt;Note that there are multiple reasons why a CVE may appear to be present in a docker image, as explained in the &lt;a href=&#34;https://github.com/docker-library/faq/tree/73f10b0daf2fb8e7b38efaccc0e90b3510919d51#why-does-my-security-scanner-show-that-an-image-has-cves&#34;&gt;docker library FAQs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-python</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/microsoft/vscode-remote-try-python</id>
    <link href="https://github.com/microsoft/vscode-remote-try-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-python&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-python/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information on creating your codespace, visit the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-python&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the prerequisites (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Python&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;vscode&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;app.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; to open a terminal window.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Type &lt;code&gt;python -m flask run --port 9000 --no-debugger --no-reload&lt;/code&gt; to run the app.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The terminal will say your app is &lt;code&gt;Running on http://127.0.0.1:9000/&lt;/code&gt;. Click on the link in the terminal to view your app running in the browser.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Notice that the Python extension is already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;ms-python.python&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you use this container outside of VS Code via &lt;code&gt;docker run&lt;/code&gt; with &lt;code&gt;-p 9000&lt;/code&gt;, you may need to append &lt;code&gt;--host 0.0.0.0&lt;/code&gt; to the command above. The &lt;code&gt;-p&lt;/code&gt; option &#34;publishes&#34; the port rather than forwarding it. It therefore will not work if the application only listens to localhost. The &lt;code&gt;forwardPorts&lt;/code&gt; property in &lt;code&gt;devcontainer.json&lt;/code&gt; does not have this limitation, but you can use &lt;code&gt;appPort&lt;/code&gt; property instead if you want to mirror the &lt;code&gt;docker run&lt;/code&gt; behavior.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;app.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 9).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables (e.g. the app variable on line 7), examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 9000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 9000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:9000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;More samples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/python-sample-tweeterapp&#34;&gt;Tweeter App - Python and Django&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Shopify/gh-action-hadolint</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/Shopify/gh-action-hadolint</id>
    <link href="https://github.com/Shopify/gh-action-hadolint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shopify/gh-action-hadolint&lt;/h1&gt; &#xA;&lt;p&gt;This describes the GitHub Action for running hadolint as a CI check.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Shopify/livesys</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/Shopify/livesys</id>
    <link href="https://github.com/Shopify/livesys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple ubuntu system, intended to be run as an in-memory live image.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;livesys&lt;/h1&gt; &#xA;&lt;p&gt;This is a live system, intended to be run in-memory with a kernel and initramfs built using ubuntu&#39;s live-boot.&lt;/p&gt; &#xA;&lt;p&gt;It is intended for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;collecting system inventory&lt;/li&gt; &#xA; &lt;li&gt;stress testing&lt;/li&gt; &#xA; &lt;li&gt;acting as a rescue image&lt;/li&gt; &#xA; &lt;li&gt;performing live system installs&lt;/li&gt; &#xA; &lt;li&gt;executing arbitrary scripts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;To build the image, you must have docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the image is built, you can snapshot it. This requires squashfs-tools&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./snapshot.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Applications&lt;/h1&gt; &#xA;&lt;h2&gt;Arbitrary script execution&lt;/h2&gt; &#xA;&lt;p&gt;Simply specify the path to a script to execute in the &lt;code&gt;onboot_script&lt;/code&gt; kernel parameter. This will be fetched and executed on boot.&lt;/p&gt; &#xA;&lt;p&gt;You may also pass &lt;code&gt;max_uptime&lt;/code&gt;, which accepts time in the same format as the &lt;code&gt;shutdown&lt;/code&gt; command. If a number is passed, it is assumed to be a minute unless otherwise specified.&lt;/p&gt; &#xA;&lt;h2&gt;Stress testing&lt;/h2&gt; &#xA;&lt;p&gt;There are numerous stress testing suites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;stress - an overall benchmark suite for CPU and memory&lt;/li&gt; &#xA; &lt;li&gt;stressapptest - another benchmark suite for CPU and memory&lt;/li&gt; &#xA; &lt;li&gt;cpuburn - a suite for CPU burnin&lt;/li&gt; &#xA; &lt;li&gt;gimps (mprime) - a prime number factoring CPU burnin&lt;/li&gt; &#xA; &lt;li&gt;sysbench - a system benchmark suite designed to mimic MySQL workloads&lt;/li&gt; &#xA; &lt;li&gt;fio - an I/O testing suite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Swiss-army&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Various helpful commands have been included:&lt;/li&gt; &#xA; &lt;li&gt;ipmitool&lt;/li&gt; &#xA; &lt;li&gt;megacli&lt;/li&gt; &#xA; &lt;li&gt;mdadm&lt;/li&gt; &#xA; &lt;li&gt;lvm&lt;/li&gt; &#xA; &lt;li&gt;ethtool&lt;/li&gt; &#xA; &lt;li&gt;smartmontools&lt;/li&gt; &#xA; &lt;li&gt;supermicro ipmicfg&lt;/li&gt; &#xA; &lt;li&gt;ruby&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you can think of a utility that would be useful, please send a pull request!&lt;/p&gt; &#xA;&lt;p&gt;A fully functional ubuntu apt package manager is also included, so you can install packages on-the-fly&lt;/p&gt; &#xA;&lt;h2&gt;System installation&lt;/h2&gt; &#xA;&lt;p&gt;This image may be used to install other live images, by preparing the necessary environment to copy an image onto. Typically, this means formatting disks.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Tested automatically using: &lt;a href=&#34;https://travis-ci.org/Shopify/livesys&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Shopify/livesys.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Gusto/aptible-cli-docker</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/Gusto/aptible-cli-docker</id>
    <link href="https://github.com/Gusto/aptible-cli-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple container containing the aptible cli&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/gusto/aptible-cli&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/3636ee445e2b22471da318cfc17d25534c30adb687ec5d54fb.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;aptible-cli-docker&lt;/h1&gt; &#xA;&lt;p&gt;Simple container containing the aptible cli&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>render-examples/mysql</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/render-examples/mysql</id>
    <link href="https://github.com/render-examples/mysql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MySQL 8.0 and 5.7 on Render&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MySQL on Render&lt;/h1&gt; &#xA;&lt;p&gt;This is a template repository for running &lt;a href=&#34;https://www.mysql.com&#34;&gt;MySQL&lt;/a&gt; on Render.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;It uses the &lt;a href=&#34;https://hub.docker.com/r/mysql/mysql-server&#34;&gt;official&lt;/a&gt; MySQL Docker image.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://render.com/docs/disks&#34;&gt;Render Disks&lt;/a&gt; provide fast, persistent SSD storage for your database.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MySQL runs in your &lt;a href=&#34;https://render.com/docs/private-services&#34;&gt;private network&lt;/a&gt; and isn&#39;t exposed to the public Internet.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MySQL Versions&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch runs MySQL 8. You can use the &lt;code&gt;mysql-5&lt;/code&gt; branch to run MySQL 5 instead.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://render.com/docs/deploy-mysql&#34;&gt;https://render.com/docs/deploy-mysql&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>olxbr/X9Containers</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/olxbr/X9Containers</id>
    <link href="https://github.com/olxbr/X9Containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker containers to finger pointing pesky breaches from your running images&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;X9Containers&lt;/h1&gt; &#xA;&lt;p&gt;Docker containers to finger pointing pesky breaches from your running images.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s nothing really new: X9Containers use existing tools to find malwares and vulnerabilities using &lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt; and &lt;a href=&#34;https://github.com/Cisco-Talos/clamav&#34;&gt;ClamAV&lt;/a&gt; in a &lt;a href=&#34;https://docs.docker.com/develop/develop-images/multistage-build/&#34;&gt;multi-stage building approach&lt;/a&gt;, copying the whole filesystem to be analyzed at each stage - at &lt;code&gt;distroless.&lt;/code&gt; suffix.&lt;/p&gt; &#xA;&lt;p&gt;But the analysis can also occur during building, so it can run into the intermediate container, where we hope to find things dynamically - at non &lt;code&gt;distroless.&lt;/code&gt; suffix.&lt;/p&gt; &#xA;&lt;p&gt;&#34;X9&#34; it is a popular slang among Brazilians which means &#34;whistleblower&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Said that...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/olxbr/X9Containers/main/point.png&#34; width=&#34;380&#34; height=&#34;313&#34;&gt; ... let&#39;s point!&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Intended to just print each vulnerability scanner output to the standard output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# You need to choose the appropriate Dockerfile which will run on top of the target image container&#xA;curl https://raw.githubusercontent.com/olxbr/X9Containers/main/debian.clamav.trivy.X9.Dockerfile --output X9.Dockerfile&#xA;&#xA;# Where IMAGE=${TARGET_IMAGE}:${VERSION} is the target image for scanning&#xA;# and TRIVY_SEVERITY=${TRIVY_SEVERITY} is a Trivy comma separated threat levels to consider&#xA;docker build -f X9.Dockerfile -t suspectimage --build-arg IMAGE=${TARGET_IMAGE}:${VERSION} --build-arg TRIVY_SEVERITY=${TRIVY_SEVERITY} --quiet .&#xA;docker create --name suspectcontainer suspectimage&#xA;docker cp suspectcontainer:/scans ./scans&#xA;&#xA;# Do whatever you need with the artifacts, in this case it will only be printed in console:&#xA;for i in scans/* ; do \&#xA;  cat $i ; \&#xA;  echo &#34;********** END OF $i ********** ; \&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage with GitHub Actions&lt;/h4&gt; &#xA;&lt;p&gt;If you feel lazy and just want to blow up some pipeline across GitHub neighborhood, read below.&lt;/p&gt; &#xA;&lt;p&gt;First, build your Docker image as usual inside your pipeline:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- name: Check out repository&#xA;  uses: actions/checkout@v2&#xA;&#xA;...&#xA;&#xA;- name: Build Docker Image&#xA;  run: docker build -t myleetimage .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then give a try with Actions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- name: Perform X9Containers Scan&#xA;  uses: olxbr/X9Containers@main&#xA;  timeout-minutes: 6&#xA;  with:&#xA;    image: myleetimage:latest&#xA;    distro: distroless.clamav.trivy&#xA;    trivy_severity: CRITICAL&#xA;    ignore_threats: false&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Gusto/ruby</title>
    <updated>2022-05-29T02:36:11Z</updated>
    <id>tag:github.com,2022-05-29:/Gusto/ruby</id>
    <link href="https://github.com/Gusto/ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker images for ruby (and ubuntu)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ruby&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/docker-library/ruby&#34;&gt;Docker Library&lt;/a&gt; doesn&#39;t &lt;a href=&#34;https://github.com/docker-library/ruby/issues/258&#34;&gt;support&lt;/a&gt; ruby + ubuntu, so we will build them for Gusto here&lt;/p&gt; &#xA;&lt;h1&gt;Details&lt;/h1&gt; &#xA;&lt;p&gt;You can find additional details in the &lt;a href=&#34;https://github.com/Gusto/ruby/raw/master/DESCRIPTION.md&#34;&gt;DESCRIPTION.md&lt;/a&gt; file&lt;/p&gt;</summary>
  </entry>
</feed>