<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-01T01:45:06Z</updated>
  <subtitle>Monthly Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>render-examples/rabbitmq</title>
    <updated>2024-05-01T01:45:06Z</updated>
    <id>tag:github.com,2024-05-01:/render-examples/rabbitmq</id>
    <link href="https://github.com/render-examples/rabbitmq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RabbitMQ on Render&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RabbitMQ on Render&lt;/h1&gt; &#xA;&lt;p&gt;This is a template repo for running a RabbitMQ instance as a &lt;strong&gt;web service&lt;/strong&gt; on Render.&lt;/p&gt; &#xA;&lt;p&gt;It uses the &lt;a href=&#34;https://hub.docker.com/_/rabbitmq&#34;&gt;official Dockerfile&lt;/a&gt; and backs RabbitMQ with a &lt;a href=&#34;https://render.com/docs/disks&#34;&gt;Render disk&lt;/a&gt;, making it resilient to data loss in the case of restarts or deploys.&lt;/p&gt; &#xA;&lt;h3&gt;Deployment&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://render.com/docs/deploy-rabbitmq&#34;&gt;https://render.com/docs/deploy-rabbitmq&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imagegenius/docker-immich</title>
    <updated>2024-05-01T01:45:06Z</updated>
    <id>tag:github.com,2024-05-01:/imagegenius/docker-immich</id>
    <link href="https://github.com/imagegenius/docker-immich" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monolithic (Single) Docker Container for Immich&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://github.com/imagegenius/docker-immich&#34;&gt;imagegenius/immich&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/imagegenius/docker-immich/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/imagegenius/docker-immich.svg?color=007EC6&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/imagegenius/docker-immich/packages&#34;&gt;&lt;img src=&#34;https://shields.io/badge/GitHub%20Package-blue?logo=github&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.imagegenius.io/job/Docker-Pipeline-Builders/job/docker-immich/job/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.imagegenius.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-immich%2Fjob%2Fmain%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.imagegenius.io/immich/latest-main/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=007EC6&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.imagegenius.io%2Fimmich%2Flatest-main%2Fci-status.yml&#34; alt=&#34;IG CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Immich is a high performance self-hosted photo and video backup solution.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://immich.app/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo-inline-dark.png&#34; alt=&#34;immich&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We use Docker manifest for cross-platform compatibility. More details can be found on &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;Docker&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To obtain the appropriate image for your architecture, simply pull &lt;code&gt;ghcr.io/imagegenius/immich:latest&lt;/code&gt;. Alternatively, you can also obtain specific architecture images by using tags.&lt;/p&gt; &#xA;&lt;p&gt;This image supports the following architectures:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image offers different versions via tags. Be cautious when using unstable or development tags, and read their descriptions carefully.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Ubuntu base.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;noml&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Ubuntu base. Machine-learning is completely removed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Latest Immich release with an Alpine base. Machine-learning is completely removed, making it a very lightweight image (can have issues with RAW images).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;Access the WebUI at &lt;code&gt;http://your-ip:8080&lt;/code&gt;. Follow the setup wizard to configure Immich.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;strong&gt;This image is not officially supported by the Immich team.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Please read and accept the consiquences of using this heavily active (in development) project.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;⚠️ The project is under very active development.&lt;/li&gt; &#xA;  &lt;li&gt;⚠️ Expect bugs and breaking changes.&lt;/li&gt; &#xA;  &lt;li&gt;⚠️ Do not use the app as the only way to store your photos and videos.&lt;/li&gt; &#xA;  &lt;li&gt;⚠️ Always follow 3-2-1 backup plan for your precious photos and videos!&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;as stated in the official &lt;a href=&#34;https://github.com/immich-app/immich#disclaimer&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;: Version 14, 15, or 16 with &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs&#34;&gt;pgvecto.rs&lt;/a&gt; setup externally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;: Setup externally or within the container using a docker mod.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker Mod for Redis&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set &lt;code&gt;DOCKER_MODS=imagegenius/mods:universal-redis&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;code&gt;REDIS_HOSTNAME&lt;/code&gt; to &lt;code&gt;localhost&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;SSL Connection for PostgreSQL&lt;/h4&gt; &#xA;&lt;p&gt;To use SSL, include a PostgreSQL URL in the &lt;code&gt;DB_URL&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Hardware Acceleration&lt;/h2&gt; &#xA;&lt;h3&gt;Intel Hardware Acceleration&lt;/h3&gt; &#xA;&lt;p&gt;To enable Intel Quicksync:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure container access to &lt;code&gt;/dev/dri&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add &lt;code&gt;/dev/dri&lt;/code&gt; to your Docker run command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --device=/dev/dri:/dev/dri ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] GPU acceleration for Intel via OpenVINO is not yet available.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Nvidia Hardware Acceleration&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the Nvidia container runtime as per &lt;a href=&#34;https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new Docker container using the Nvidia runtime:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &lt;code&gt;--runtime=nvidia&lt;/code&gt; and &lt;code&gt;NVIDIA_VISIBLE_DEVICES=all&lt;/code&gt; in your Docker run command, or specify a particular GPU UUID instead of &lt;code&gt;all&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alternatively, use &lt;code&gt;--gpus=all&lt;/code&gt; to enable all GPUs.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --gpus=all ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To enable GPU acceleration for machine learning, add &lt;code&gt;MACHINE_LEARNING_GPU_ACCELERATION=cuda&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Importing Existing Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mount the existing library folder to &lt;code&gt;/import&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set &lt;code&gt;/import&lt;/code&gt; (or &lt;code&gt;/import/&amp;lt;user&amp;gt;&lt;/code&gt; for multiple users) as the external path in the administration settings.&lt;/li&gt; &#xA; &lt;li&gt;In account settings, add a new library with the path set to &lt;code&gt;/import&lt;/code&gt; or &lt;code&gt;/import/&amp;lt;user&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Example snippets to start creating a container:&lt;/p&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;services:&#xA;  immich:&#xA;    image: ghcr.io/imagegenius/immich:latest&#xA;    container_name: immich&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Etc/UTC&#xA;      - DB_HOSTNAME=192.168.1.x&#xA;      - DB_USERNAME=postgres&#xA;      - DB_PASSWORD=postgres&#xA;      - DB_DATABASE_NAME=immich&#xA;      - REDIS_HOSTNAME=192.168.1.x&#xA;      - DB_PORT=5432 #optional&#xA;      - REDIS_PORT=6379 #optional&#xA;      - REDIS_PASSWORD= #optional&#xA;      - MACHINE_LEARNING_GPU_ACCELERATION= #optional&#xA;      - MACHINE_LEARNING_WORKERS=1 #optional&#xA;      - MACHINE_LEARNING_WORKER_TIMEOUT=120 #optional&#xA;    volumes:&#xA;      - path_to_appdata:/config&#xA;      - path_to_photos:/photos&#xA;      - path_to_imports:/import:ro #optional&#xA;    ports:&#xA;      - 8080:8080&#xA;    restart: unless-stopped&#xA;&#xA;# This container requires an external application to be run separately.&#xA;# By default, ports for the databases are opened, be careful when deploying it&#xA;# Redis:&#xA;  redis:&#xA;    image: redis&#xA;    ports:&#xA;      - 6379:6379&#xA;    container_name: redis&#xA;# PostgreSQL 14:&#xA;  postgres14:&#xA;    image: tensorchord/pgvecto-rs:pg14-v0.2.0&#xA;    ports:&#xA;      - 5432:5432&#xA;    container_name: postgres14&#xA;    environment:&#xA;      POSTGRES_USER: postgres&#xA;      POSTGRES_PASSWORD: postgres&#xA;      POSTGRES_DB: immich&#xA;    volumes:&#xA;      - path_to_postgres:/var/lib/postgresql/data&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker CLI (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;Click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=immich \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Etc/UTC \&#xA;  -e DB_HOSTNAME=192.168.1.x \&#xA;  -e DB_USERNAME=postgres \&#xA;  -e DB_PASSWORD=postgres \&#xA;  -e DB_DATABASE_NAME=immich \&#xA;  -e REDIS_HOSTNAME=192.168.1.x \&#xA;  -e DB_PORT=5432 `#optional` \&#xA;  -e REDIS_PORT=6379 `#optional` \&#xA;  -e REDIS_PASSWORD= `#optional` \&#xA;  -e MACHINE_LEARNING_GPU_ACCELERATION= `#optional` \&#xA;  -e MACHINE_LEARNING_WORKERS=1 `#optional` \&#xA;  -e MACHINE_LEARNING_WORKER_TIMEOUT=120 `#optional` \&#xA;  -p 8080:8080 \&#xA;  -v path_to_appdata:/config \&#xA;  -v path_to_photos:/photos \&#xA;  -v path_to_imports:/import:ro `#optional` \&#xA;  --restart unless-stopped \&#xA;  ghcr.io/imagegenius/immich:latest&#xA;&#xA;# This container requires an external application to be run separately.&#xA;# By default, ports for the databases are opened, be careful when deploying it&#xA;# Redis:&#xA;docker run -d \&#xA;  --name=redis \&#xA;  -p 6379:6379 \&#xA;  redis&#xA;&#xA;# PostgreSQL 14:&#xA;docker run -d \&#xA;  --name=postgres14 \&#xA;  -e POSTGRES_USER=postgres \&#xA;  -e POSTGRES_PASSWORD=postgres \&#xA;  -e POSTGRES_DB=immich \&#xA;  -v path_to_postgres:/var/lib/postgresql/data \&#xA;  -p 5432:5432 \&#xA;  tensorchord/pgvecto-rs:pg14-v0.2.0&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;To configure the container, pass variables at runtime using the format &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt;. For instance, &lt;code&gt;-p 8080:80&lt;/code&gt; exposes port &lt;code&gt;80&lt;/code&gt; inside the container, making it accessible outside the container via the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;WebUI Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UID for permissions - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GID for permissions - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Etc/UTC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use, see this &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List&#34;&gt;list&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_HOSTNAME=192.168.1.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Host&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_USERNAME=postgres&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Username&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_PASSWORD=postgres&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_DATABASE_NAME=immich&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Database Name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_HOSTNAME=192.168.1.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis Hostname&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DB_PORT=5432&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_PORT=6379&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e REDIS_PASSWORD=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redis password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MACHINE_LEARNING_GPU_ACCELERATION=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable cuda acceleration by setting the value to &#39;cuda&#39;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MACHINE_LEARNING_WORKERS=1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Machine learning workers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e MACHINE_LEARNING_WORKER_TIMEOUT=120&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Machine learning worker timeout&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains machine learning models (~1.5GB with default models)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /photos&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all the photos uploaded to Immich&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /import:ro&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This folder will be periodically scanned, contents will be automatically imported into Immich&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;All of our images allow overriding the default umask setting for services started within the containers using the optional -e UMASK=022 option. Note that umask works differently than chmod and subtracts permissions based on its value, not adding. For more information, please refer to the Wikipedia article on umask &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;To avoid permissions issues when using volumes (&lt;code&gt;-v&lt;/code&gt; flags) between the host OS and the container, you can specify the user (&lt;code&gt;PUID&lt;/code&gt;) and group (&lt;code&gt;PGID&lt;/code&gt;). Make sure that the volume directories on the host are owned by the same user you specify, and the issues will disappear.&lt;/p&gt; &#xA;&lt;p&gt;Example: &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;. To find your PUID and PGID, run &lt;code&gt;id user&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating the Container&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app. We do not recommend or support updating apps inside the container. Check the &lt;a href=&#34;https://raw.githubusercontent.com/imagegenius/docker-immich/main/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section for recommendations for the specific image.&lt;/p&gt; &#xA;&lt;p&gt;Instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull immich&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d immich&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull ghcr.io/imagegenius/immich:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop immich&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm immich&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.01.24:&lt;/strong&gt; - support GPU acceleration with CUDA for machine-learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.12.23:&lt;/strong&gt; - move to using seperate immich baseimage&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.12.23:&lt;/strong&gt; - rebase to ubuntu mantic&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.12.23:&lt;/strong&gt; - remove typesense (no longer needed)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.09.23:&lt;/strong&gt; - house cleaning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.09.23:&lt;/strong&gt; - add vars for ml workers/timeout&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.07.23:&lt;/strong&gt; - remove cuda acceleration for machine-learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.05.23:&lt;/strong&gt; - rebase to ubuntu lunar and support cuda acceleration for machine-learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.05.23:&lt;/strong&gt; - deprecate postgresql docker mod&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.23:&lt;/strong&gt; - add support for facial recognition&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.05.23:&lt;/strong&gt; - remove unused &lt;code&gt;JWT_SECRET&lt;/code&gt; env&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.04.23:&lt;/strong&gt; - add variables to disable typesense and machine learning&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.04.23:&lt;/strong&gt; - fix gunicorn&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.04.23:&lt;/strong&gt; - use environment variables to set location of the photos folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.04.23:&lt;/strong&gt; - Cache is downloaded to the host (/config/transformers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.23:&lt;/strong&gt; - remove unused Immich environment variables&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.03.23:&lt;/strong&gt; - Add service checks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.03.23:&lt;/strong&gt; - add typesense&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.02.23:&lt;/strong&gt; - re-enable aarch64 with pre-release torch build&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.02.23:&lt;/strong&gt; - use machine-learning with python&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.23:&lt;/strong&gt; - use external app block&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.23:&lt;/strong&gt; - Use Immich environment variables for immich services instead of hosts file&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.23:&lt;/strong&gt; - execute CLI with the command immich&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.02.23:&lt;/strong&gt; - shrink image&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - add unraid migration to readme&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - use find to apply chown to /app, excluding node_modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.23:&lt;/strong&gt; - enable ci testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.01.23:&lt;/strong&gt; - fix services starting prematurely, causing permission errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.01.23:&lt;/strong&gt; - add noml image to readme and add aarch64 image to readme, make github release stable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.01.23:&lt;/strong&gt; - BREAKING: Redis is removed. Update missing param_env_vars &amp;amp; opt_param_env_vars for redis &amp;amp; postgres&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.01.23:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-webtop</title>
    <updated>2024-05-01T01:45:06Z</updated>
    <id>tag:github.com,2024-05-01:/linuxserver/docker-webtop</id>
    <link href="https://github.com/linuxserver/docker-webtop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ubuntu, Alpine, Arch, and Fedora based Webtop images, Linux in a web browser supporting popular desktop environments.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-webtop&#34;&gt;linuxserver/webtop&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fwebtop&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fwebtop?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-webtop&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-webtop.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-webtop/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-webtop.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-webtop/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-webtop/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/webtop&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/webtop&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/webtop.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/webtop&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/webtop.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-webtop/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-webtop%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/webtop/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fwebtop%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-webtop&#34;&gt;Webtop&lt;/a&gt; - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-webtop&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png&#34; alt=&#34;webtop&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://distribution.github.io/distribution/spec/manifest-v2-2/#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/webtop:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;XFCE Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-xfce&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;XFCE Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-xfce&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;XFCE Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-xfce&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;XFCE Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-xfce&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;XFCE Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine-kde&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;KDE Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-kde&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;KDE Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-kde&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;KDE Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-kde&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;KDE Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-kde&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;KDE Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine-mate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;MATE Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-mate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;MATE Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-mate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;MATE Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-mate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;MATE Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-mate&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;MATE Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine-i3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;i3 Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-i3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;i3 Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-i3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;i3 Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-i3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;i3 Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-i3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;i3 Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine-openbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-openbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-openbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-openbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-openbox&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;alpine-icewm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;IceWM Alpine&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ubuntu-icewm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;IceWM Ubuntu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;fedora-icewm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;IceWM Fedora&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arch-icewm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;IceWM Arch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;debian-icewm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;IceWM Debian&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;The Webtop can be accessed at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://yourhost:3000/&#34;&gt;http://yourhost:3000/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yourhost:3001/&#34;&gt;https://yourhost:3001/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Modern GUI desktop apps (including some flavors terminals) have issues with the latest Docker and syscall compatibility, you can use Docker with the &lt;code&gt;--security-opt seccomp=unconfined&lt;/code&gt; setting to allow these syscalls&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Application management - PRoot Apps&lt;/h3&gt; &#xA;&lt;p&gt;If you run system native installations of software IE &lt;code&gt;sudo apt-get install filezilla&lt;/code&gt; and then upgrade or destroy/re-create the container that software will be removed and the Webtop will be at a clean state. For some users that will be acceptable and they can update their system packages as well using system native commands like &lt;code&gt;apt-get upgrade&lt;/code&gt;. If you want Docker to handle upgrading the container and retain your applications and settings we have created &lt;a href=&#34;https://github.com/linuxserver/proot-apps&#34;&gt;proot-apps&lt;/a&gt; which allow portable applications to be installed to persistent storage in the user&#39;s &lt;code&gt;$HOME&lt;/code&gt; directory and they will work in a confined Docker environment out of the box. These applications and their settings will persist upgrades of the base container and can be mounted into different flavors of Webtop containers on the fly facilitating virtual &#34;Distro Hopping&#34;. IE if you are running the &lt;code&gt;alpine-mate&lt;/code&gt; Webtop you will be able to use the same &lt;code&gt;/config&lt;/code&gt; directory mounted into the &lt;code&gt;arch-kde&lt;/code&gt; Webtop and retain the same applications and settings as long as they were installed with &lt;code&gt;proot-apps install&lt;/code&gt;. This can be achieved from the command line with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;proot-apps install filezilla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PRoot Apps is included in all KasmVNC based containers, a list of linuxserver.io supported applications is located &lt;a href=&#34;https://github.com/linuxserver/proot-apps?tab=readme-ov-file#supported-apps&#34;&gt;HERE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Options in all KasmVNC based GUI containers&lt;/h3&gt; &#xA;&lt;p&gt;This container is based on &lt;a href=&#34;https://github.com/linuxserver/docker-baseimage-kasmvnc&#34;&gt;Docker Baseimage KasmVNC&lt;/a&gt; which means there are additional environment variables and run configurations to enable or disable specific functionality.&lt;/p&gt; &#xA;&lt;h4&gt;Optional environment variables&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CUSTOM_PORT&lt;/td&gt; &#xA;   &lt;td&gt;Internal port the container listens on for http if it needs to be swapped from the default 3000.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CUSTOM_HTTPS_PORT&lt;/td&gt; &#xA;   &lt;td&gt;Internal port the container listens on for https if it needs to be swapped from the default 3001.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CUSTOM_USER&lt;/td&gt; &#xA;   &lt;td&gt;HTTP Basic auth username, abc is default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;HTTP Basic auth password, abc is default. If unset there will be no auth&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SUBFOLDER&lt;/td&gt; &#xA;   &lt;td&gt;Subfolder for the application if running a subfolder reverse proxy, need both slashes IE &lt;code&gt;/subfolder/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TITLE&lt;/td&gt; &#xA;   &lt;td&gt;The page title displayed on the web browser, default &#34;KasmVNC Client&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;FM_HOME&lt;/td&gt; &#xA;   &lt;td&gt;This is the home directory (landing) for the file manager, default &#34;/config&#34;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;START_DOCKER&lt;/td&gt; &#xA;   &lt;td&gt;If set to false a container with privilege will not automatically start the DinD Docker setup.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DRINODE&lt;/td&gt; &#xA;   &lt;td&gt;If mounting in /dev/dri for &lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/master/gpu_acceleration.html&#34;&gt;DRI3 GPU Acceleration&lt;/a&gt; allows you to specify the device to use IE &lt;code&gt;/dev/dri/renderD128&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;DISABLE_IPV6&lt;/td&gt; &#xA;   &lt;td&gt;If set to true or any value this will disable IPv6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;LC_ALL&lt;/td&gt; &#xA;   &lt;td&gt;Set the Language for the container to run as IE &lt;code&gt;fr_FR.UTF-8&lt;/code&gt; &lt;code&gt;ar_AE.UTF-8&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NO_DECOR&lt;/td&gt; &#xA;   &lt;td&gt;If set the application will run without window borders in openbox for use as a PWA.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NO_FULL&lt;/td&gt; &#xA;   &lt;td&gt;Do not autmatically fullscreen applications when using openbox.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Optional run configurations&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--privileged&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE &lt;code&gt;-v /home/user/docker-data:/var/lib/docker&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /var/run/docker.sock:/var/run/docker.sock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--device /dev/dri:/dev/dri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mount a GPU into the container, this can be used in conjunction with the &lt;code&gt;DRINODE&lt;/code&gt; environment variable to leverage a host video card for GPU accelerated applications. Only &lt;strong&gt;Open Source&lt;/strong&gt; drivers are supported IE (Intel,AMDGPU,Radeon,ATI,Nouveau)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Language Support - Internationalization&lt;/h3&gt; &#xA;&lt;p&gt;The environment variable &lt;code&gt;LC_ALL&lt;/code&gt; can be used to start Webtop in a different language than English simply pass for example to launch the Desktop session in French &lt;code&gt;LC_ALL=fr_FR.UTF-8&lt;/code&gt;. Some languages like Chinese, Japanese, or Korean will be missing fonts needed to render properly known as cjk fonts, but others may exist and not be installed inside the Webtop depending on what underlying distribution you are running. We only ensure fonts for Latin characters are present. Fonts can be installed with a mod on startup.&lt;/p&gt; &#xA;&lt;p&gt;To install cjk fonts on startup as an example pass the environment variables (Alpine base):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-e DOCKER_MODS=linuxserver/mods:universal-package-install &#xA;-e INSTALL_PACKAGES=font-noto-cjk &#xA;-e LC_ALL=zh_CN.UTF-8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The web interface has the option for &#34;IME Input Mode&#34; in Settings which will allow non english characters to be used from a non en_US keyboard on the client. Once enabled it will perform the same as a local Linux installation set to your locale.&lt;/p&gt; &#xA;&lt;h3&gt;Lossless mode&lt;/h3&gt; &#xA;&lt;p&gt;This container is capable of delivering a true lossless image at a high framerate to your web browser by changing the Stream Quality preset to &#34;Lossless&#34;, more information &lt;a href=&#34;https://www.kasmweb.com/docs/latest/how_to/lossless.html#technical-background&#34;&gt;here&lt;/a&gt;. In order to use this mode from a non localhost endpoint the HTTPS port on 3001 needs to be used. If using a reverse proxy to port 3000 specific headers will need to be set as outlined &lt;a href=&#34;https://github.com/linuxserver/docker-baseimage-kasmvnc#lossless&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To help you get started creating a container from this image you can either use docker-compose or the docker cli.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;services:&#xA;  webtop:&#xA;    image: lscr.io/linuxserver/webtop:latest&#xA;    container_name: webtop&#xA;    security_opt:&#xA;      - seccomp:unconfined #optional&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Etc/UTC&#xA;      - SUBFOLDER=/ #optional&#xA;      - TITLE=Webtop #optional&#xA;    volumes:&#xA;      - /path/to/data:/config&#xA;      - /var/run/docker.sock:/var/run/docker.sock #optional&#xA;    ports:&#xA;      - 3000:3000&#xA;      - 3001:3001&#xA;    devices:&#xA;      - /dev/dri:/dev/dri #optional&#xA;    shm_size: &#34;1gb&#34; #optional&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=webtop \&#xA;  --security-opt seccomp=unconfined `#optional` \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Etc/UTC \&#xA;  -e SUBFOLDER=/ `#optional` \&#xA;  -e TITLE=Webtop `#optional` \&#xA;  -p 3000:3000 \&#xA;  -p 3001:3001 \&#xA;  -v /path/to/data:/config \&#xA;  -v /var/run/docker.sock:/var/run/docker.sock `#optional` \&#xA;  --device /dev/dri:/dev/dri `#optional` \&#xA;  --shm-size=&#34;1gb&#34; `#optional` \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/webtop:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Containers are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 3000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web Desktop GUI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 3001&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web Desktop GUI HTTPS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Etc/UTC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specify a timezone to use, see this &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List&#34;&gt;list&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUBFOLDER=/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a subfolder to use with reverse proxies, IE &lt;code&gt;/subfolder/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TITLE=Webtop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;String which will be used as page/tab title in the web browser.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;abc users home directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /var/run/docker.sock&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker Socket on the system, if you want to use Docker in the container&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--device /dev/dri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add this for GL support (Linux hosts only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--shm-size=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;We set this to 1 gig to prevent modern web browsers from crashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--security-opt seccomp=unconfined&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__MYVAR=/run/secrets/mysecretvariable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;MYVAR&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretvariable&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags), permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id your_user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;id your_user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;uid=1000(your_user) gid=1000(your_user) groups=1000(your_user)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=webtop&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=webtop&amp;amp;query=%24.mods%5B%27webtop%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Shell access whilst the container is running:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it webtop /bin/bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To monitor the logs of the container in realtime:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker logs -f webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Container version number:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Image version number:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/webtop:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (noted in the relevant readme.md), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-webtop/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Update images:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;All images:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Single image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose pull webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update containers:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;All containers:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Single container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker image prune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull lscr.io/linuxserver/webtop:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Stop the running container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete the container:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker rm webtop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker image prune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;tip&lt;/strong&gt;: We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/p&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-webtop.git&#xA;cd docker-webtop&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/webtop:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.04.24:&lt;/strong&gt; - Rebase Ubuntu to Noble.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.04.24:&lt;/strong&gt; - Add docs on PRoot Apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.04.24:&lt;/strong&gt; - Rebase Fedora to 40.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.24:&lt;/strong&gt; - Add PWA icons and title variants properly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.02.24:&lt;/strong&gt; - Update Readme about native language support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.12.23:&lt;/strong&gt; - Rebase Alpine to 3.19 and swap back to Firefox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.11.23:&lt;/strong&gt; - Rebase Fedora to 39.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.06.23:&lt;/strong&gt; - Rebase to Debian Bookworm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.05.23:&lt;/strong&gt; - Rebase to Alpine 3.18 and Fedora 38.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.03.23:&lt;/strong&gt; - Rebase all Webtops to KasmVNC base image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.10.22:&lt;/strong&gt; - Rebase xfce to Alpine 3.16, migrate to s6v3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.03.22:&lt;/strong&gt; - Add documentation for mounting in a GPU.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.02.22:&lt;/strong&gt; - Rebase KDE Ubuntu to Jammy, add new documentation for updated gclient, stop recommending priv mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.09.21:&lt;/strong&gt; - Add Fedora and Arch images, show seccomp settings in readme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.09.21:&lt;/strong&gt; - Rebase to Alpine versions to 3.14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.04.21:&lt;/strong&gt; - Initial release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>