<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-22T01:32:22Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sytone/obsidian-remote</title>
    <updated>2022-10-22T01:32:22Z</updated>
    <id>tag:github.com,2022-10-22:/sytone/obsidian-remote</id>
    <link href="https://github.com/sytone/obsidian-remote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Obsidian.md in a browser via a docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;obsidian-remote&lt;/h1&gt; &#xA;&lt;p&gt;This docker image allows you to run obsidian in docker as a container and access it via your web browser.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;http://localhost:8080/&lt;/code&gt; to access it locally, do not expose this to the web unless you secure it and know what you are doing!!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#using-the-container&#34;&gt;Using the Container&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#ports&#34;&gt;Ports&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#mapped-volumes&#34;&gt;Mapped Volumes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#environment-variables&#34;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#using-docker-compose&#34;&gt;Using Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#enabling-git-for-the-obsidian-git-plugin&#34;&gt;Enabling GIT for the obsidian-git plugin&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#docker-cli-example&#34;&gt;Docker CLI example&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#reloading-obsidan-in-the-browser&#34;&gt;Reloading Obsidan in the Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#setting-puid-and-pgid&#34;&gt;Setting PUID and PGID&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#adding-missing-fonts&#34;&gt;Adding missing fonts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#map-font-file-using-docker-cli&#34;&gt;Map font file using Docker CLI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#map-font-file-using-docker-compose&#34;&gt;Map font file using Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#hosting-behind-a-reverse-proxy&#34;&gt;Hosting behind a reverse proxy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#example-nginx-configuration&#34;&gt;Example nginx configuration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#hosting-behind-nginx-proxy-manager-npm&#34;&gt;Hosting behind Nginx Proxy Manager (NPM)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#updating-obsidian&#34;&gt;Updating Obsidian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/#building-locally&#34;&gt;Building locally&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using the Container&lt;/h2&gt; &#xA;&lt;p&gt;To run a interactive version to test it out. This is using windows based path, update for the OS you are running on.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker run --rm -it `&#xA;  -v D:/ob/vaults:/vaults `&#xA;  -v D:/ob/config:/config `&#xA;  -p 8080:8080 `&#xA;  ghcr.io/sytone/obsidian-remote:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run it as a daemon in the background.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker run -d `&#xA;  -v D:/ob/vaults:/vaults `&#xA;  -v D:/ob/config:/config `&#xA;  -p 8080:8080 `&#xA;  ghcr.io/sytone/obsidian-remote:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ports&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8080&lt;/td&gt; &#xA;   &lt;td&gt;Obsidian Web Interface&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27123&lt;/td&gt; &#xA;   &lt;td&gt;Local REST API Plugin HTTP Server Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27124&lt;/td&gt; &#xA;   &lt;td&gt;Local REST API Plugin HTTPS Server Port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Mapped Volumes&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Path&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/vaults&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The location on the host for your Obsidian Vaults&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The location to store Obsidan configuration and ssh data for obsidian-git&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Environment Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUID&lt;/td&gt; &#xA;   &lt;td&gt;Set the user ID for the container user. &lt;code&gt;911&lt;/code&gt; by default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PGID&lt;/td&gt; &#xA;   &lt;td&gt;Set the group ID for the continer user. &lt;code&gt;911&lt;/code&gt; by default.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TZ&lt;/td&gt; &#xA;   &lt;td&gt;Set the Time Zone for the container, should match your TZ. &lt;code&gt;Etc/UTC&lt;/code&gt; by default. See &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&#34;&gt;List of tz database time zones&lt;/a&gt; for valid options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DOCKER_MODS&lt;/td&gt; &#xA;   &lt;td&gt;Use to add mods to the container like git. E.g. &lt;code&gt;DOCKER_MODS=linuxserver/mods:universal-git&lt;/code&gt; See &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; for details.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KEYBOARD&lt;/td&gt; &#xA;   &lt;td&gt;Used to se the keyboard being used for input. E.g. &lt;code&gt;KEYBOARD=en-us-qwerty&lt;/code&gt; or &lt;code&gt;KEYBOARD=de-de-qwertz&lt;/code&gt; a list of other possible values (not tested) can be found at &lt;a href=&#34;https://github.com/linuxserver/docker-digikam#keyboard-layouts&#34;&gt;https://github.com/linuxserver/docker-digikam#keyboard-layouts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Using Docker Compose&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-YAML&#34;&gt;version: &#39;3.8&#39;&#xA;services:&#xA;  obsidian:&#xA;    image: &#39;ghcr.io/sytone/obsidian-remote:latest&#39;&#xA;    container_name: obsidian-remote&#xA;    restart: unless-stopped&#xA;    ports:&#xA;      - 8080:8080&#xA;    volumes:&#xA;      - /home/obsidian/vaults:/vaults&#xA;      - /home/obsidian/config:/config&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=America/Los_Angeles&#xA;      - DOCKER_MODS=linuxserver/mods:universal-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Enabling GIT for the obsidian-git plugin&lt;/h2&gt; &#xA;&lt;p&gt;This container uses the base images from linuxserver.io. This means you can the linuxserver.io mods. To add support for git add the &lt;code&gt;DOCKER_MODS&lt;/code&gt; environment variable like so &lt;code&gt;DOCKER_MODS=linuxserver/mods:universal-git&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker CLI example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker run -d `&#xA;  -v D:/ob/vaults:/vaults `&#xA;  -v D:/ob/config:/config `&#xA;  -p 8080:8080 `&#xA;  -e DOCKER_MODS=linuxserver/mods:universal-git `&#xA;  ghcr.io/sytone/obsidian-remote:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reloading Obsidan in the Browser&lt;/h2&gt; &#xA;&lt;p&gt;If you make changes to plugins or do updates that need to have obsidian restarted, instead of having to stop and start the docker container you can just close the Obsidian UI and right click to show the menus and reopen it. Here is a short clip showing how to do it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sytone/obsidian-remote/main/assets/ReloadExample.gif&#34; alt=&#34;Reloading Obsidian in the Browser&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting PUID and PGID&lt;/h2&gt; &#xA;&lt;p&gt;To set PUID and PGID use the follow environment variables on the command line, by default the IDs are 911/911&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker run --rm -it `&#xA;  -v D:/ob/vaults:/vaults `&#xA;  -v D:/ob/config:/config `&#xA;  -e PUID=1000 `&#xA;  -e PGID=1000 `&#xA;  -p 8080:8080 `&#xA;  ghcr.io/sytone/obsidian-remote:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, if you use docker-compose, add them to the environment: section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;environment:&#xA;  - PUID=1000&#xA;  - PGID=1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is most likely that you will use the id of yourself, which can be obtained by running the command below. The two values you will be interested in are the uid and gid.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;id $user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding missing fonts&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to @aaron-jang for this example.&lt;/p&gt; &#xA;&lt;p&gt;Download the font of the language that you want to use in Obsidian and add it to the volume as shown below.&lt;/p&gt; &#xA;&lt;h3&gt;Map font file using Docker CLI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;  -v {downloaded font directory}:/usr/share/fonts/truetype/{font name}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Map font file using Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;    volumes:&#xA;      - {downloaded font directory}:/usr/share/fonts/truetype/{font name}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hosting behind a reverse proxy&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to do that &lt;strong&gt;please make sure you are securing it in some way!&lt;/strong&gt;. You also need to ensure &lt;strong&gt;websocket&lt;/strong&gt; support is enabled.&lt;/p&gt; &#xA;&lt;h3&gt;Example nginx configuration&lt;/h3&gt; &#xA;&lt;p&gt;This is an example, I recommend a SSL based proxy and some sort of authentication.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;  set $forward_scheme http;&#xA;  set $server         &#34;10.10.10.10&#34;;&#xA;  set $port           8080;&#xA;&#xA;  listen 80;&#xA;  server_name ob.mycooldomain.com;&#xA;  proxy_set_header Upgrade $http_upgrade;&#xA;  proxy_set_header Connection $http_connection;&#xA;  proxy_http_version 1.1;&#xA;  access_log /data/logs/ob_access.log proxy;&#xA;  error_log /data/logs/ob_error.log warn;&#xA;  location / {&#xA;    proxy_set_header Upgrade $http_upgrade;&#xA;    proxy_set_header Connection $http_connection;&#xA;    proxy_http_version 1.1;&#xA;    # Proxy!&#xA;    add_header       X-Served-By $host;&#xA;    proxy_set_header Host $host;&#xA;    proxy_set_header X-Forwarded-Scheme $scheme;&#xA;    proxy_set_header X-Forwarded-Proto  $scheme;&#xA;    proxy_set_header X-Forwarded-For    $remote_addr;&#xA;    proxy_set_header X-Real-IP          $remote_addr;&#xA;    proxy_pass       $forward_scheme://$server:$port$request_uri;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hosting behind Nginx Proxy Manager (NPM)&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to @fahrenhe1t for this example.&lt;/p&gt; &#xA;&lt;p&gt;If you install obsidian-remote in Docker, you can proxy it through &lt;a href=&#34;https://nginxproxymanager.com/&#34;&gt;Nginx Proxy Manager&lt;/a&gt; (NPM - running on the same Docker instance), and use an access list to provide user authentication. The obsidian-remote container would have to be on the same network as Nginx Proxy Manager. If you don&#39;t expose the IP external to the container, authentication would be forced through NPM:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.8&#39;&#xA;services:&#xA;  obsidian:&#xA;    image: &#39;ghcr.io/sytone/obsidian-remote:latest&#39;&#xA;    container_name: obsidian-remote&#xA;    restart: unless-stopped&#xA;    ports:&#xA;      - 8080 #only exposes port internally to the container&#xA;    volumes:&#xA;      - /home/obsidian/vaults:/vaults&#xA;      - /home/obsidian/config:/config&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=America/Los_Angeles&#xA;      - DOCKER_MODS=linuxserver/mods:universal-git&#xA;networks:&#xA;  default:&#xA;    name: &amp;lt;your nginx proxy manager network&amp;gt;&#xA;    external: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a proxy host in NPM pointing to the &#34;obsidian-remote:8080&#34; container, choose your domain name, use a LetsEncrypt SSL certificate, enable WebSockets. This video talks about it: &lt;a href=&#34;https://www.youtube.com/watch?v=G9voYZejH48&#34;&gt;Nginx Proxy Manager - ACCESS LIST protection for internal services&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Updating Obsidian&lt;/h2&gt; &#xA;&lt;p&gt;By default obsidian will update itself in the container. If you recreate the container you will have to do the update again. This repo will be updated periodically to keep up with the latest version of Obsidian.&lt;/p&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;To build and use it locally run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker build --pull --rm `&#xA;  -f &#34;Dockerfile&#34; `&#xA;  -t obsidian-remote:latest `&#xA;  &#34;.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the localy build image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;docker run --rm -it `&#xA;  -v D:/ob/vaults:/vaults `&#xA;  -v D:/ob/config:/config `&#xA;  -p 8080:8080 `&#xA;  obsidian-remote:latest bash&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>