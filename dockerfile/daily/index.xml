<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:27:47Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qdm12/latexdevcontainer</title>
    <updated>2023-12-26T01:27:47Z</updated>
    <id>tag:github.com,2023-12-26:/qdm12/latexdevcontainer</id>
    <link href="https://github.com/qdm12/latexdevcontainer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LaTeX development container for Visual Studio Code Remote Containers Development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Latex Dev Container&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ultimate Latex development container for Visual Studio Code&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;img height=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/qdm12/latexdevcontainer/master/title.svg?sanitize=true&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/latexdevcontainer/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/qdm12/latexdevcontainer/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/qmcgaw/latexdevcontainer&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/qmcgaw/latexdevcontainer.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/qmcgaw/latexdevcontainer&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/qmcgaw/latexdevcontainer.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/qdm12/shared_invite/enQtOTE0NjcxNTM1ODc5LTYyZmVlOTM3MGI4ZWU0YmJkMjUxNmQ4ODQ2OTAwYzMxMTlhY2Q1MWQyOWUyNjc2ODliNjFjMDUxNWNmNzk5MDk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@qdm12-yellow.svg?logo=slack&#34; alt=&#34;Join Slack channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/latexdevcontainer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/qdm12/latexdevcontainer.svg?sanitize=true&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/latexdevcontainer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/y/qdm12/latexdevcontainer.svg?sanitize=true&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdm12/latexdevcontainer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/qdm12/latexdevcontainer.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fastest way to code LaTex and produce a pdf file when saving your .tex file&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://www.tug.org/texlive/acquire-netinstall.html&#34;&gt;texlive 2023&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Based on Debian Bullseye Slim, using &lt;a href=&#34;https://github.com/qdm12/basedevcontainer&#34;&gt;qmcgaw/basedevcontainer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compatible with &lt;code&gt;amd64&lt;/code&gt; and &lt;code&gt;aarch64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Two Docker images&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;qmcgaw/latexdevcontainer:latest&lt;/code&gt; (default) which uses the TexLive basic scheme and has an uncompressed image size of 467MB&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;qmcgaw/latexdevcontainer:latest-full&lt;/code&gt; which uses the TexLive full scheme and has an uncompressed image size of 4.2GB - most packages you would need are already installed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Comes with &lt;code&gt;tlmgr&lt;/code&gt; to install more LaTex packages as needed&lt;/li&gt; &#xA; &lt;li&gt;Latex compilation to pdf with &lt;a href=&#34;https://mg.readthedocs.io/latexmk.html&#34;&gt;latexmk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Formatting on save using &lt;a href=&#34;https://github.com/cmhughes/latexindent.pl&#34;&gt;latexindent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Latex linting using &lt;a href=&#34;https://www.nongnu.org/chktex&#34;&gt;chktex&lt;/a&gt; built from source&lt;/li&gt; &#xA; &lt;li&gt;Using the &lt;a href=&#34;https://github.com/James-Yu/LaTeX-Workshop&#34;&gt;LaTex-Workshop VScode extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compatible with amd64, &lt;del&gt;ARM 64 bit, ARM 32 bit v6 and v7&lt;/del&gt; (TeXLive not available on ARM, create an issue if you need it)&lt;/li&gt; &#xA; &lt;li&gt;Cross platform &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Easily bind mount your SSH keys to use with &lt;strong&gt;git&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Manage your host Docker from within the dev container, more details at &lt;a href=&#34;https://github.com/qdm12/basedevcontainer#features&#34;&gt;qmcgaw/basedevcontainer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Extensible with docker-compose.yml&lt;/li&gt; &#xA; &lt;li&gt;Minimal uncompressed image size of 467MB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/latexdevcontainer&#34;&gt;&lt;img src=&#34;https://i.imgur.com/4jFRIql.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker&lt;/a&gt; installed and running &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you don&#39;t use Linux, share the directories &lt;code&gt;~/.ssh&lt;/code&gt; and the directory of your project with Docker Desktop&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VS code&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;VS code remote containers extension&lt;/a&gt; installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup for a project&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Setup your configuration files &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;With style üíØ&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -it --rm -v &#34;/yourrepopath:/repository&#34; qmcgaw/devtainr:v0.4.0 -dev latex -path /repository -name projectname&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or use the &lt;a href=&#34;https://github.com/qdm12/devtainr#binary&#34;&gt;built binary&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Or manually: download this repository and put the &lt;a href=&#34;https://raw.githubusercontent.com/qdm12/latexdevcontainer/master/.devcontainer&#34;&gt;.devcontainer&lt;/a&gt; directory in your project.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the command palette in Visual Studio Code (CTRL+SHIFT+P) and select &lt;code&gt;Remote-Containers: Open Folder in Container...&lt;/code&gt; and choose your project directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/latexdevcontainer#setup-for-a-project&#34;&gt;&lt;img src=&#34;https://i.imgur.com/1NJHIbH.gif&#34; alt=&#34;Install&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install LaTex packages&lt;/h2&gt; &#xA;&lt;p&gt;If you need for example the package &lt;code&gt;lastpage&lt;/code&gt;, open the integrated terminal in VS Code, select &lt;code&gt;zsh&lt;/code&gt; and enter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tlmgr install lastpage&#xA;texhash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/qdm12/latexdevcontainer#install-latex-packages&#34;&gt;&lt;img src=&#34;https://i.imgur.com/mBM2NYB.gif&#34; alt=&#34;Install packages&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update the Latex Docker image&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the docker image&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull qmcgaw/latexdevcontainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the command palette in Visual Studio Code (CTRL+SHIFT+P) and select &lt;code&gt;Remote-Containers: Rebuild and Reopen in Container...&lt;/code&gt;. ‚ö†Ô∏è this will erase your container shell history and custom latex packages you added on top of the base image.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;h3&gt;devcontainer.json&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can change the &lt;code&gt;&#34;postCreateCommand&#34;&lt;/code&gt; to be relevant to your situation. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;postCreateCommand&#34;: &#34;tlmgr install acronym pgf &amp;amp;&amp;amp; texhash&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can change the extensions installed in the Docker image within the &lt;code&gt;&#34;customizations/vscode/extensions&#34;&lt;/code&gt; array&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other Latex settings can be changed or added in the &lt;code&gt;&#34;customizations/vscode/settings&#34;&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development image&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can build the development image yourself:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t qmcgaw/latexdevcontainer -f Dockerfile https://github.com/qdm12/latexdevcontainer.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can extend the Docker image &lt;code&gt;qmcgaw/latexdevcontainer&lt;/code&gt; with your own instructions.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create a file &lt;code&gt;.devcontainer/Dockerfile&lt;/code&gt; with &lt;code&gt;FROM qmcgaw/latexdevcontainer&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Append instructions to the Dockerfile created. For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM qmcgaw/latexdevcontainer&#xA;RUN tlmgr install lastpage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Modify &lt;code&gt;.devcontainer/docker-compose.yml&lt;/code&gt; and add &lt;code&gt;build: .&lt;/code&gt; in the vscode service.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Open the VS code command palette and choose &lt;code&gt;Remote-Containers: Rebuild container&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can bind mount a shell script to &lt;code&gt;/home/vscode/.welcome.sh&lt;/code&gt; to replace the &lt;a href=&#34;https://raw.githubusercontent.com/qdm12/latexdevcontainer/master/shell/.welcome.sh&#34;&gt;current welcome script&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODOs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdm12/basedevcontainer&#34;&gt;qmcgaw/basedevcontainer&lt;/a&gt; todos&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is under an &lt;a href=&#34;https://github.com/qdm12/latexdevcontainer/master/LICENSE&#34;&gt;MIT license&lt;/a&gt; unless indicated otherwise.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vagnercardosoweb/docker-php8</title>
    <updated>2023-12-26T01:27:47Z</updated>
    <id>tag:github.com,2023-12-26:/vagnercardosoweb/docker-php8</id>
    <link href="https://github.com/vagnercardosoweb/docker-php8" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker with php8.2+, apache, mysql, postgresql, phpmyadmin, redis, nginx and pgadmin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker with PHP 8.2.12&lt;/h1&gt; &#xA;&lt;p&gt;This repository aims to facilitate the creation of a development environment with php 8.2.12.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s in the environment:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://php.net/&#34;&gt;Php Fpm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/&#34;&gt;Apache2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mariadb.com/&#34;&gt;MariaDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.phpmyadmin.net/&#34;&gt;PhpMyAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pgadmin.org/&#34;&gt;PgAdmin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Install Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Install Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;Enter the repository folder&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;docker-compose up&lt;/code&gt; command &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;if you want to run in background mode, run the command &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Access the address &lt;code&gt;http://localhost:8080&lt;/code&gt; to access phpmyadmin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;user access &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;user: mysql&lt;/li&gt; &#xA;     &lt;li&gt;password: mysql&lt;/li&gt; &#xA;     &lt;li&gt;host: mysql&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;root access &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;user: root&lt;/li&gt; &#xA;     &lt;li&gt;password: root&lt;/li&gt; &#xA;     &lt;li&gt;host: mysql&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Access the address &lt;code&gt;http://localhost:8081&lt;/code&gt; to access pgadmin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;user: &lt;a href=&#34;mailto:admin@localhost.com&#34;&gt;admin@localhost.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;password: admin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Access the address &lt;code&gt;http://localhost&lt;/code&gt; to access the project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Persistent data:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mysql data: &lt;code&gt;./docker/mysql/dbdata&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;postgresql data: &lt;code&gt;./docker/postgresql/dbdata&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;redis data: &lt;code&gt;./docker/redis&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;PHP INI Config:&lt;/h2&gt; &#xA;&lt;p&gt;Local php.ini configuration is located in the &lt;code&gt;./docker/php/php.ini&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[PHP]&#xA;log_errors=On&#xA;xmlrpc_errors=On&#xA;html_errors=On&#xA;display_errors=On&#xA;display_startup_errors=On&#xA;report_memleaks=On&#xA;error_reporting=E_ALL&#xA;file_uploads=On&#xA;max_execution_time=120&#xA;max_input_time=120&#xA;session.gc_maxlifetime=1440&#xA;post_max_size=50M&#xA;upload_max_filesize=45M&#xA;max_file_uploads=20&#xA;variables_order=&#34;EGPCS&#34;&#xA;max_input_vars=10000&#xA;max_input_nesting_level=64&#xA;date.timezone=UTC&#xA;memory_limit=512M&#xA;expose_php=On&#xA;&#xA;[opcache]&#xA;opcache.enable=true&#xA;opcache.enable_cli=true&#xA;opcache.jit=tracing&#xA;&#xA;[intl]&#xA;intl.default_locale=en_utf8&#xA;&#xA;[xdebug]&#xA;xdebug.client_host=host.docker.internal&#xA;xdebug.client_port=9003&#xA;xdebug.discover_client_host=0&#xA;xdebug.start_with_request=yes&#xA;xdebug.remote_handler=dbgp&#xA;xdebug.idekey=PHPSTORM&#xA;xdebug.mode=debug,develop&#xA;xdebug.cli_color=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PHP Modules:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;[PHP Modules]&#xA;  apcu&#xA;  bcmath&#xA;  Core&#xA;  ctype&#xA;  curl&#xA;  date&#xA;  dom&#xA;  exif&#xA;  fileinfo&#xA;  filter&#xA;  ftp&#xA;  gd&#xA;  gmp&#xA;  hash&#xA;  iconv&#xA;  imap&#xA;  intl&#xA;  json&#xA;  libxml&#xA;  mbstring&#xA;  mongodb&#xA;  mysqli&#xA;  mysqlnd&#xA;  openssl&#xA;  pcntl&#xA;  pcre&#xA;  PDO&#xA;  pdo_mysql&#xA;  pdo_pgsql&#xA;  pdo_sqlite&#xA;  pgsql&#xA;  Phar&#xA;  posix&#xA;  random&#xA;  readline&#xA;  redis&#xA;  Reflection&#xA;  session&#xA;  SimpleXML&#xA;  soap&#xA;  sockets&#xA;  sodium&#xA;  SPL&#xA;  sqlite3&#xA;  ssh2&#xA;  standard&#xA;  sysvmsg&#xA;  sysvsem&#xA;  sysvshm&#xA;  tokenizer&#xA;  xdebug&#xA;  xml&#xA;  xmlreader&#xA;  xmlwriter&#xA;  xsl&#xA;  Zend OPcache&#xA;  zip&#xA;  zlib&#xA;&#xA;[Zend Modules]&#xA;  Xdebug&#xA;  Zend OPcache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Comments:&lt;/h2&gt; &#xA;&lt;p&gt;The project starts the services of &lt;code&gt;nginx&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;phpmyadmin&lt;/code&gt;, &lt;code&gt;pgadmin&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt; by default, if you want to use &lt;code&gt;apache2&lt;/code&gt;, &lt;code&gt;mariadb&lt;/code&gt; you need to comment the services that are being used and enable the services you want to use on the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;License:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>feelingsurf/docker-viewer</title>
    <updated>2023-12-26T01:27:47Z</updated>
    <id>tag:github.com,2023-12-26:/feelingsurf/docker-viewer</id>
    <link href="https://github.com/feelingsurf/docker-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official FeelingSurfViewer Docker image&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official FeelingSurfViewer Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/feelingsurf/viewer/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/feelingsurf/viewer.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/feelingsurf/viewer/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/feelingsurf/viewer.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The official FeelingSurf app in a container is &lt;a href=&#34;https://hub.docker.com/r/feelingsurf/viewer/&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;FeelingSurfViewer is also available as a regular Desktop app at &lt;a href=&#34;https://www.feelingsurf.fr/surf#app-download-modal&#34;&gt;FeelingSurf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -e access_token=&amp;lt;YOUR_SECRET_ACCESS_TOKEN&amp;gt; feelingsurf/viewer:stable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Disclaimer: never share your access token as it allows full access to your FeelingSurf account.&lt;/p&gt;</summary>
  </entry>
</feed>