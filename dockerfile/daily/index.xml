<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:41:47Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>2206-devops-batch/flask-demo</title>
    <updated>2022-06-29T01:41:47Z</updated>
    <id>tag:github.com,2022-06-29:/2206-devops-batch/flask-demo</id>
    <link href="https://github.com/2206-devops-batch/flask-demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flask Demo&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>redhat-openshift-ecosystem/community-operators-prod</title>
    <updated>2022-06-29T01:41:47Z</updated>
    <id>tag:github.com,2022-06-29:/redhat-openshift-ecosystem/community-operators-prod</id>
    <link href="https://github.com/redhat-openshift-ecosystem/community-operators-prod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;community-operators metadata backing OpenShift OperatorHub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Openshift Community Operators&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;http://img.shields.io/:license-apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About this repository&lt;/h2&gt; &#xA;&lt;p&gt;This repo is the canonical source for Kubernetes Operators that appear on &lt;a href=&#34;https://openshift.com&#34;&gt;OpenShift Container Platform&lt;/a&gt; and &lt;a href=&#34;https://www.okd.io/&#34;&gt;OKD&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The index catalog &lt;code&gt;registry.redhat.io/redhat/redhat-operator-index:v&amp;lt;OCP Version&amp;gt;&lt;/code&gt; is built from this repository and it is consumed by Openshift and OKD to create their sources and built their catalog. To know more about how Openshift catalog are built see the &lt;a href=&#34;https://docs.openshift.com/container-platform/4.6/operators/understanding/olm-rh-catalogs.html#olm-rh-catalogs_olm-rh-catalogs&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation is generated via &lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;mkdoc&lt;/a&gt; and is located at &lt;a href=&#34;https://redhat-openshift-ecosystem.github.io/community-operators-prod/&#34;&gt;https://redhat-openshift-ecosystem.github.io/community-operators-prod/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;IMPORTANT NOTICE&lt;/h2&gt; &#xA;&lt;p&gt;Some APIs versions are deprecated and are OR will no longer be served on the Kubernetes version &lt;code&gt;1.22/1.25/1.26&lt;/code&gt; and consequently on vendors like Openshift &lt;code&gt;4.9/4.12/4.13&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What does it mean for you?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Operator bundle versions using the removed APIs can not work successfully from the respective releases. Therefore, it is recommended to check if your solutions are failing in these scenarios to stop to using these versions OR by setting the &lt;code&gt;&#34;olm.properties&#34;: &#39;[{&#34;type&#34;: &#34;olm.maxOpenShiftVersion&#34;, &#34;value&#34;: &#34;&amp;lt;OCP version&amp;gt;&#34;}]&#39;&lt;/code&gt; to block cluster admins upgrades when they have Operator versions installed that can &lt;strong&gt;not&lt;/strong&gt; work well in OCP versions higher than the value informed. Also, by defining a valid OCP range via the annotation &lt;code&gt;com.redhat.openshift.versions&lt;/code&gt; into the &lt;code&gt;metadata/annotations.yaml&lt;/code&gt; for our solution does &lt;strong&gt;not&lt;/strong&gt; end up shipped on OCP/OKD versions where it cannot be installed.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WARNING: &lt;code&gt;olm.maxOpenShiftVersion&lt;/code&gt; should ONLY be used if you are 100% sure that your Operator bundle version cannot work in upper releases. Otherwise, you might provide a bad user experience. Be aware that cluster admins will be unable to upgrade their clusters with your solution installed. Then, suppose you do not provide any upper version and a valid upgrade path for those who have your Operator installed be able to upgrade it and consequently be allowed to upgrade their cluster version (i.e from OCP 4.10 to 4.11). In that case, cluster admins might choose to uninstall your Operator and no longer use it so that they can move forward and upgrade their cluster version without it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please, make sure you check the following announcements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redhat-openshift-ecosystem/community-operators-prod/discussions/138&#34;&gt;How to deal with removal of v1beta1 CRD removals in Kubernetes 1.22 / OpenShift 4.9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redhat-openshift-ecosystem/community-operators-prod/discussions/1182&#34;&gt;Kubernetes API removals on 1.25/1.26 and Openshift 4.12/4.13 might impact your Operator. How to deal with it?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Use the issue tracker in this repository to report bugs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>devopsjourney1/jenkins-101</title>
    <updated>2022-06-29T01:41:47Z</updated>
    <id>tag:github.com,2022-06-29:/devopsjourney1/jenkins-101</id>
    <link href="https://github.com/devopsjourney1/jenkins-101" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;YouTube Link&lt;/h2&gt; &#xA;&lt;p&gt;For the full 1 hour course watch out youtube: &lt;a href=&#34;https://www.youtube.com/watch?v=6YZvp2GwT0A&#34;&gt;https://www.youtube.com/watch?v=6YZvp2GwT0A&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Build the Jenkins BlueOcean Docker Image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t myjenkins-blueocean:2.332.3-1 .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create the network &#39;jenkins&#39;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker network create jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the Container&lt;/h2&gt; &#xA;&lt;h3&gt;MacOS / Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name jenkins-blueocean --restart=on-failure --detach \&#xA;  --network jenkins --env DOCKER_HOST=tcp://docker:2376 \&#xA;  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 \&#xA;  --publish 8080:8080 --publish 50000:50000 \&#xA;  --volume jenkins-data:/var/jenkins_home \&#xA;  --volume jenkins-docker-certs:/certs/client:ro \&#xA;  myjenkins-blueocean:2.332.3-1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name jenkins-blueocean --restart=on-failure --detach `&#xA;  --network jenkins --env DOCKER_HOST=tcp://docker:2376 `&#xA;  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 `&#xA;  --volume jenkins-data:/var/jenkins_home `&#xA;  --volume jenkins-docker-certs:/certs/client:ro `&#xA;  --publish 8080:8080 --publish 50000:50000 myjenkins-blueocean:2.332.3-1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get the Password&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec jenkins-blueocean cat /var/jenkins_home/secrets/initialAdminPassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connect to the Jenkins&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://localhost:8080/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation Reference:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/installing/docker/&#34;&gt;https://www.jenkins.io/doc/book/installing/docker/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;alpine/socat container to forward traffic from Jenkins to Docker Desktop on Host Machine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/47709208/how-to-find-docker-host-uri-to-be-used-in-jenkins-docker-plugin&#34;&gt;https://stackoverflow.com/questions/47709208/how-to-find-docker-host-uri-to-be-used-in-jenkins-docker-plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --restart=always -p 127.0.0.1:2376:2375 --network jenkins -v /var/run/docker.sock:/var/run/docker.sock alpine/socat tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock&#xA;docker inspect &amp;lt;container_id&amp;gt; | grep IPAddress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using my Jenkins Python Agent&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull devopsjourney1/myjenkinsagents:python&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>