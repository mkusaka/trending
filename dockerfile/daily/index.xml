<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-03T01:27:28Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jenkins-docs/quickstart-tutorials</title>
    <updated>2024-03-03T01:27:28Z</updated>
    <id>tag:github.com,2024-03-03:/jenkins-docs/quickstart-tutorials</id>
    <link href="https://github.com/jenkins-docs/quickstart-tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jenkins tutorial files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jenkins Tutorial Files&lt;/h1&gt; &#xA;&lt;p&gt;This repository includes the files necessary for transitioning from &lt;code&gt;docker&lt;/code&gt; to &lt;code&gt;docker compose&lt;/code&gt; in our Jenkins tutorials and installation guides.&lt;/p&gt; &#xA;&lt;h3&gt;How to Set Up the Repository in Gitpod?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To initialize your Gitpod workspace, prepend &lt;code&gt;gitpod.io/#&lt;/code&gt; to any GitHub, GitLab, or Bitbucket repository URL.&lt;/li&gt; &#xA; &lt;li&gt;Access our Gitpod workspace &lt;a href=&#34;https://gitpod.io/#https://github.com/jenkins-docs/quickstart-tutorials&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you plan to use Gitpod regularly, we recommend installing the Gitpod extension. This extension adds a Gitpod button to every GitHub repository you visit, making it easy to launch a workspace. You can find the extension &lt;a href=&#34;https://chrome.google.com/webstore/detail/gitpod-online-ide/dodmmooeoklaejobgleioelladacbeki&#34;&gt;here&lt;/a&gt; for Chromium and &lt;a href=&#34;https://addons.mozilla.org/firefox/addon/gitpod/&#34;&gt;here&lt;/a&gt; for Firefox.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gitpod&lt;/h2&gt; &#xA;&lt;p&gt;Gitpod is a cloud-based development environment designed for teams. It supports various IDEs, including VScode, IntelliJ, and many more, enabling efficient and secure software development.&lt;/p&gt; &#xA;&lt;h3&gt;Steps to Run Examples from the Repository&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;docker compose up&lt;/code&gt; to run examples from this project. Currently, we have four working examples:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;maven&lt;/li&gt; &#xA;   &lt;li&gt;node&lt;/li&gt; &#xA;   &lt;li&gt;python&lt;/li&gt; &#xA;   &lt;li&gt;multibranch pipeline&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run different examples with &lt;code&gt;docker compose up -d&lt;/code&gt;, append the example name to the command, like so:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;maven&lt;/code&gt; =&amp;gt; &lt;code&gt;docker compose up -d maven&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;python&lt;/code&gt; =&amp;gt; &lt;code&gt;docker compose up -d python&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;node&lt;/code&gt; =&amp;gt; &lt;code&gt;docker compose up -d node&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;multi&lt;/code&gt; =&amp;gt; &lt;code&gt;docker compose up -d multi&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If no argument is used (i.e., &lt;code&gt;docker compose up -d&lt;/code&gt;), the command runs the latest default example.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you prefer to build images yourself, append &lt;code&gt;-f build-docker-compose.yaml&lt;/code&gt; after &lt;code&gt;docker compose&lt;/code&gt;. For example, to build the &lt;code&gt;node&lt;/code&gt; tutorial Jenkins instance, use: &lt;code&gt;docker compose -f build-docker-compose.yaml up -d node&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Verify Jenkins Installation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check the status of the container with the &lt;code&gt;docker ps&lt;/code&gt; or &lt;code&gt;docker compose ps&lt;/code&gt; commands.&lt;/li&gt; &#xA; &lt;li&gt;Access your running Jenkins instance at &lt;a href=&#34;http://127.0.0.1:8080&#34;&gt;http://127.0.0.1:8080&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;On Gitpod, if containers are running successfully after entering &lt;code&gt;docker compose up &amp;lt;tutorial-name&amp;gt;&lt;/code&gt;, a pop-up titled &lt;code&gt;A service is available on port 8080&lt;/code&gt; should appear. If it doesn&#39;t, you can view the running service in the &lt;code&gt;PORTS&lt;/code&gt; section on the right side of the terminal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clean Up Instructions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To stop and remove running containers, use &lt;code&gt;docker compose down&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you encounter a &lt;code&gt;Resource is still in use&lt;/code&gt; warning, use the &lt;code&gt;--remove-orphans&lt;/code&gt; option which would give &lt;code&gt;docker compose down --remove-orphans&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To remove the created volumes (should you need to restart from scratch), add the &lt;code&gt;-v&lt;/code&gt; option which would give &lt;code&gt;docker compose down -v&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Suppressing Jenkins Warning using JCASC&lt;/h3&gt; &#xA;&lt;p&gt;To improve the Gitpod experience with Jenkins, we&#39;ve suppressed a reverse proxy setup warning in Jenkins that was causing issues in the Gitpod environment. We achieved this using Jenkins Configuration as Code (&lt;a href=&#34;https://www.jenkins.io/projects/jcasc/&#34;&gt;JCASC&lt;/a&gt;) and added the following property to the JCASC YAML file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jenkins:&#xA;  disabledAdministrativeMonitors:&#xA;    - &#34;hudson.diagnosis.ReverseProxySetupMonitor&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detailed information about this configuration and the context behind it, please refer to the &lt;a href=&#34;https://github.com/ash-sxn/GSoC-2023-docker-based-quickstart/issues/61&#34;&gt;corresponding issue&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>