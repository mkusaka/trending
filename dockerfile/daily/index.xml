<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-09T01:35:33Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>k0baya/QLonRAILWAY</title>
    <updated>2023-05-09T01:35:33Z</updated>
    <id>tag:github.com,2023-05-09:/k0baya/QLonRAILWAY</id>
    <link href="https://github.com/k0baya/QLonRAILWAY" rel="alternate"></link>
    <summary type="html">&lt;p&gt;在Railway或者Render上运行青龙面板！&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;好用的话，可以给我点一下star吗，谢谢！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;使用方法（Railway）&lt;/h1&gt; &#xA;&lt;h2&gt;第一步：fork本repository&lt;/h2&gt; &#xA;&lt;p&gt;点击右上角的Fork按钮，将本repository fork到你自己的github账户中。&lt;/p&gt; &#xA;&lt;h2&gt;第二步：新建railway项目&lt;/h2&gt; &#xA;&lt;p&gt;在&lt;a href=&#34;https://railway.app/dashboard&#34;&gt;Railway&lt;/a&gt;用相同的github账号登录，点击New Project，新建一个项目。选择“Deploy from GitHub repo”，选择你fork的这个repository。&lt;/p&gt; &#xA;&lt;h2&gt;第三步：添加环境变量&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;不要&lt;/strong&gt;选择“Deploy Now”，选择“Add variables”。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/variables.png&#34; alt=&#34;添加环境变量&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如图添加环境变量&lt;code&gt;PORT=5700&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/variables2.png&#34; alt=&#34;添加如图所示的环境变量&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;第四步：获取访问域名&lt;/h2&gt; &#xA;&lt;p&gt;在settings中找到Generate Domain按钮，点一下，获取访问域名。当然你也可以绑定你自己的域名。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/Domain.png&#34; alt=&#34;获取域名&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;railway平台的免费额度标准一直在变动，我写这这句话的时候，Railway不用信用卡认证的免费额度是2刀+200小时/月，挂青龙面板并不现实。信用卡验证之后的免费额度为5刀+不限时/月，具体够不够挂青龙我也没有计算，这里仅仅是对在Railway上部署青龙面板的一个尝试。请自行辨别。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;使用方法（Render）&lt;/h1&gt; &#xA;&lt;p&gt;类似的，你还可以在&lt;a href=&#34;https://dashboard.render.com/&#34;&gt;Render&lt;/a&gt;上使用本repository。&lt;/p&gt; &#xA;&lt;p&gt;不同的地方仅仅在于，Render中新建的是Web Service。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/webservice.png&#34; alt=&#34;Web Service&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;环境变量添加的地方变成了Environment选项卡。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/environment1.png&#34; alt=&#34;环境变量&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;如下图所示添加环境变量即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/k0baya/QLonRAILWAY/main/pic/environment2.png&#34; alt=&#34;环境变量&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;而且Render不需要你主动generate域名，他会自动生成域名，当然你也可以绑定自己的域名。&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Render的每月免费额度高达750小时，足够覆盖单个项目的整月使用。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;容器保活&lt;/h1&gt; &#xA;&lt;p&gt;这些平台上托管的项目并不一定会一直保持活跃，有些在一段时间无人访问之后就会休眠，所以可以使用一些外部监控手段保活。&lt;/p&gt; &#xA;&lt;p&gt;我已知的网站监控：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;1 &lt;a href=&#34;https://console.cron-job.org&#34;&gt;cron-job.org&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;2 &lt;a href=&#34;https://uptimerobot.com/&#34;&gt;UptimeRobot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;可供自行搭建的网站监控：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/louislam/uptime-kuma&#34;&gt;Uptime-Kuma&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>fscarmen2/X-for-Choreo</title>
    <updated>2023-05-09T01:35:33Z</updated>
    <id>tag:github.com,2023-05-09:/fscarmen2/X-for-Choreo</id>
    <link href="https://github.com/fscarmen2/X-for-Choreo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;X for Choreo&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;目录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9&#34;&gt;项目特点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%83%A8%E7%BD%B2&#34;&gt;部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#argo-json-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Json 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#argo-token-%E7%9A%84%E8%8E%B7%E5%8F%96&#34;&gt;Argo Token 的获取&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#ttyd-webssh-%E7%9A%84%E9%83%A8%E7%BD%B2&#34;&gt;TTYD webssh 的部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E9%B8%A3%E8%B0%A2%E4%B8%8B%E5%88%97%E4%BD%9C%E8%80%85%E7%9A%84%E6%96%87%E7%AB%A0%E5%92%8C%E9%A1%B9%E7%9B%AE&#34;&gt;鸣谢下列作者的文章和项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fscarmen2/X-for-Choreo/main/README.md#%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E&#34;&gt;免责声明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;项目特点:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 CloudFlare 的 Argo 隧道，同时兼容 Json / token / 临时 三种方式认证，使用TLS加密通信，可以将应用程序流量安全地传输到Cloudflare网络，提高了应用程序的安全性和可靠性。此外，Argo Tunnel也可以防止IP泄露和DDoS攻击等网络威胁&lt;/li&gt; &#xA; &lt;li&gt;解锁 chatGPT&lt;/li&gt; &#xA; &lt;li&gt;在浏览器查看系统各项信息，方便直观&lt;/li&gt; &#xA; &lt;li&gt;集成哪吒探针，可以自由选择是否安装，支持 SSL/TLS 模式，适配 Nezha over Argo 项目: &lt;a href=&#34;https://github.com/fscarmen2/Argo-Nezha-Service-Container&#34;&gt;https://github.com/fscarmen2/Argo-Nezha-Service-Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;uuid，WS 路径既可以自定义，又或者使用默认值&lt;/li&gt; &#xA; &lt;li&gt;前端 js 定时和 pm2 配合保活，务求让恢复时间减到最小&lt;/li&gt; &#xA; &lt;li&gt;节点信息以 V2rayN / Clash / 小火箭 链接方式输出&lt;/li&gt; &#xA; &lt;li&gt;可以使用浏览器访问，使用 ttyd，ssh over http2&lt;/li&gt; &#xA; &lt;li&gt;项目路径 &lt;code&gt;https://github.com/fscarmen2/X-for-Choreo&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;注册 &lt;a href=&#34;https://console.choreo.dev/&#34;&gt;Choreo&lt;/a&gt; ，支持 GitHub / Google / Microsoft 账号进行登录，请使用以下地址注册并进行登录。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PaaS 平台设置的环境变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_AUTH&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Argo 的 Token 或者 json 值&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;ARGO_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Argo 的域名，须与 ARGO_DOMAIN 必需一起填了才能生效&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;网页地址，用于查看节点信息和系统状态&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;de04add9-5c68-8bab-950c-08cd5320df18&lt;/td&gt; &#xA;     &lt;td&gt;可在线生成 &lt;a href=&#34;https://www.zxgj.cn/g/uuid&#34;&gt;https://www.zxgj.cn/g/uuid&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WSPATH&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;argo&lt;/td&gt; &#xA;     &lt;td&gt;勿以 / 开头，各协议路径为 &lt;code&gt;/WSPATH-协议&lt;/code&gt;，如 &lt;code&gt;/argo-vless&lt;/code&gt;,&lt;code&gt;/argo-vmess&lt;/code&gt;,&lt;code&gt;/argo-trojan&lt;/code&gt;,&lt;code&gt;/argo-shadowsocks&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针与面板服务端数据通信的IP或域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针服务端的端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针客户端专用 Key&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_TLS&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针是否启用 SSL/TLS 加密 ，如不启用不要该变量，如要启用填&#34;1&#34;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_USERNAME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;admin&lt;/td&gt; &#xA;     &lt;td&gt;网页和 webssh 的用户名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;WEB_PASSWORD&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;password&lt;/td&gt; &#xA;     &lt;td&gt;网页和 webssh 的密码&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;SSH_DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;webssh 的域名，用户名和密码就是 &amp;lt;WEB_USERNAME&amp;gt; 和 &amp;lt;WEB_PASSWORD&amp;gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;路径（path）&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;命令&lt;/th&gt; &#xA;     &lt;th&gt;说明&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/list&lt;/td&gt; &#xA;     &lt;td&gt;查看节点数据&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/status&lt;/td&gt; &#xA;     &lt;td&gt;查看后台进程&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/listen&lt;/td&gt; &#xA;     &lt;td&gt;查看后台监听端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&amp;lt;WEB_DOMAIN&amp;gt;/test&lt;/td&gt; &#xA;     &lt;td&gt;测试是否为只读系统&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choreo 设置&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img width=&#34;1037&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611678-e9ee0a82-efe3-4a21-ab4a-fc16d3d1fa1b.png&#34;&gt; &#xA;&lt;img width=&#34;647&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611722-fb60f8be-c5cd-43d8-9ed1-c1f00694d1e1.png&#34;&gt; &#xA;&lt;img width=&#34;700&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611875-f1164bf7-1bdf-4c06-a693-ca3e7b600364.png&#34;&gt; &#xA;&lt;img width=&#34;1637&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236786108-33ebd062-3d17-44ec-98ed-af022c3933e2.png&#34;&gt; &#xA;&lt;img width=&#34;1293&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236787682-5c98c391-8000-455a-b7cf-c4e08b072655.png&#34;&gt; &#xA;&lt;img width=&#34;1638&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611941-2760746e-0ae3-40a8-be64-d2974e4f0a84.png&#34;&gt; &#xA;&lt;img width=&#34;1680&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612065-2af3d69b-3ea2-4f79-bc33-6ddba2b03638.png&#34;&gt; &#xA;&lt;img width=&#34;1506&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612104-b3d4fa86-4111-4e5d-b672-3458ad440e9c.png&#34;&gt; &#xA;&lt;img width=&#34;1151&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612474-065ddf6e-9d44-4d8c-b237-2f2623c8856f.png&#34;&gt; &#xA;&lt;img width=&#34;997&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612512-31fb24d6-e3b1-48a0-bfa9-165cb122d311.png&#34;&gt; &#xA;&lt;img width=&#34;331&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612116-97fa6072-ad5b-4a61-8906-8d9b9153327d.png&#34;&gt; &#xA;&lt;img width=&#34;579&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236612319-7071bc1a-e60e-4fe0-8a37-765133adca71.png&#34;&gt; &#xA;&lt;h2&gt;Argo Json 的获取&lt;/h2&gt; &#xA;&lt;p&gt;用户可以通过 Cloudflare Json 生成网轻松获取: &lt;a href=&#34;https://fscarmen.cloudflare.now.cc&#34;&gt;https://fscarmen.cloudflare.now.cc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;763&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611088-5c380ae6-4558-4e53-bc5a-ef1a44388c69.png&#34;&gt; &#xA;&lt;img width=&#34;1636&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611051-910b753d-77f2-423c-8941-9ef5b0e64316.png&#34;&gt; &#xA;&lt;p&gt;如想手动，可以参考，以 Debian 为例，需要用到的命令，&lt;a href=&#34;https://zhengweidong.com/try-cloudflare-argo-tunnel&#34;&gt;Deron Cheng - CloudFlare Argo Tunnel 试用&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Argo Token 的获取&lt;/h2&gt; &#xA;&lt;p&gt;详细教程: &lt;a href=&#34;https://imnks.com/5984.html&#34;&gt;群晖套件：Cloudflare Tunnel 内网穿透中文教程 支持DSM6、7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;1393&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611164-dc7d8c98-b742-485a-b6f1-aba88793ef59.png&#34;&gt; &#xA;&lt;img width=&#34;1660&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/92626977/236611259-273f2486-9c08-408c-83f9-40235103c706.png&#34;&gt; &#xA;&lt;h2&gt;TTYD webssh 的原理&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;+---------+     argo     +---------+     http     +--------+    ssh    +-----------+&#xA;| browser | &amp;lt;==========&amp;gt; | CF edge | &amp;lt;==========&amp;gt; |  ttyd  | &amp;lt;=======&amp;gt; | ssh server|&#xA;+---------+     argo     +---------+   websocket  +--------+    ssh    +-----------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;鸣谢下列作者的文章和项目:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nike Jeff 的 trojan 项目: &lt;a href=&#34;https://github.com/hrzyang/glitch-trojan&#34;&gt;https://github.com/hrzyang/glitch-trojan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hifeng 的博客: &lt;a href=&#34;https://www.hicairo.com/post/62.html&#34;&gt;https://www.hicairo.com/post/62.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。&lt;/li&gt; &#xA; &lt;li&gt;使用本程序必循遵守部署免责声明。使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>manikcloud/Docker-Certified-Associate</title>
    <updated>2023-05-09T01:35:33Z</updated>
    <id>tag:github.com,2023-05-09:/manikcloud/Docker-Certified-Associate</id>
    <link href="https://github.com/manikcloud/Docker-Certified-Associate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker Certified Associate DCA&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker-Certified-Associate&lt;/h1&gt; &#xA;&lt;h2&gt;Docker Certification Training (Simplilearn Course)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Course:&lt;/strong&gt; DOCKER CERTIFICATION TRAINING&lt;br&gt; &lt;strong&gt;Duration:&lt;/strong&gt; 24 hours&lt;/p&gt; &#xA;&lt;h2&gt;Lessons&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Course Introduction&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Introduction to Docker&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Image Creation, Management, and Registry&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Image creation&lt;/li&gt; &#xA;   &lt;li&gt;Managing images&lt;/li&gt; &#xA;   &lt;li&gt;Docker registry&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Networking&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker network&lt;/li&gt; &#xA;   &lt;li&gt;Network types&lt;/li&gt; &#xA;   &lt;li&gt;Network configuration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Orchestration&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker Compose&lt;/li&gt; &#xA;   &lt;li&gt;Docker Swarm&lt;/li&gt; &#xA;   &lt;li&gt;Other orchestration tools&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Installation and Configuration of Mirantis Products&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mirantis Container Cloud&lt;/li&gt; &#xA;   &lt;li&gt;Mirantis Container Runtime&lt;/li&gt; &#xA;   &lt;li&gt;Mirantis Secure Registry&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Docker security best practices&lt;/li&gt; &#xA;   &lt;li&gt;Security scanning&lt;/li&gt; &#xA;   &lt;li&gt;Secrets management&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker Kubernetes Service (DKS)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Introduction to Kubernetes&lt;/li&gt; &#xA;   &lt;li&gt;Kubernetes architecture&lt;/li&gt; &#xA;   &lt;li&gt;Deploying applications with Kubernetes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Full Course Outline&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;h2&gt;1: Course Introduction&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. What Is Docker?&#xA;2. Features of Docker&#xA;3. Virtual Machine vs. Docker&#xA;4. Industries Using Docker&#xA;5. Exam Information&#xA;6. Examination Format&#xA;7. Course Outline&#xA;8. Course Outcome&#xA;9. Course Components&#xA;10. Customer Support&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;2: Introduction to Docker&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Docker Introduction&#xA;2. Docker Engine&#xA;3. Docker Properties&#xA;4. Installation of Docker Community Edition&#xA;5. Assisted practice: Install, Upgrade, and Uninstall Docker CE for Linux&#xA;6. Assisted practice: Configure Docker Daemon to Start on Boot&#xA;7. Docker: Architecture&#xA;8. Assisted Practice: Images and Containers&#xA;9. Knowledge Check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;3: Image Creation, Management, and Registry&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Images&#xA;2. Containers&#xA;3. Service&#xA;4. Overview and Instructions&#xA;5. Assisted Practice: Create a Docker Image&#xA;6. Layers of Images&#xA;7. Flattening&#xA;8. Docker Commit&#xA;9. Tag an Image&#xA;10. Assisted Practice: Image Tagging&#xA;11. Filter and Format&#xA;12. Basic Commands&#xA;13. The copy-on-write (COW) Strategy&#xA;14. Registry&#xA;15. Repositories&#xA;16. Private Repositories&#xA;17. Docker Push, Content Trust, and Pull&#xA;18. Assisted Practice: Deploy a registry&#xA;19. Assisted Practice: Configure a registry&#xA;20. Assisted Practice: Log in to a registry&#xA;21. Assisted Practice: Push an Image to Docker Hub&#xA;22. Assisted Practice: Push an image to a registry&#xA;23. Prune Images and Containers&#xA;24. Assisted Practice: Inspect, Remove and Prune Images&#xA;25. Assisted Practice: Pull and Delete an Image&#xA;26. Knowledge Check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;4: Networking&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Network Architecture&#xA;2. Bridge networks&#xA;3. Assisted Practice: Create a Bridge Network&#xA;4. Assisted Practice: Create a User-Defined Bridge Network&#xA;5. Host networking&#xA;6. Assisted practice: Create a Host Network&#xA;7. Overlay networks&#xA;8. Macvlan networks&#xA;9. Assisted practice: Create Macvlan networks&#xA;10. None Network&#xA;11. Prune Network&#xA;12. Container networking model&#xA;13. Container Networking&#xA;14. Use Cases of Network Drivers&#xA;15. Identifying Ports&#xA;16. Publishing Ports&#xA;17. Assisted Practice: Publishing Ports&#xA;18. Traffic&#xA;19. Assisted Practice: Configure Docker to Use External DNS&#xA;20. Docker Link&#xA;21. Knowledge Check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;5: Orchestration&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Container: Overview&#xA;2. Services and types (replicated and global)&#xA;3. Tasks&#xA;4. Swarm&#xA;5. Nodes &#xA;6. Manager nodes&#xA;7. Worker nodes&#xA;8. Assisted practice: Set Up Swarm Cluster with Manager and Worker Nodes&#xA;9. Assisted practice: Join nodes to swarm&#xA;10. Assisted Practice: Create Replicated and Global Services&#xA;11. Assisted practice: Running Container vs. Running Service&#xA;12. Assisted practice: Create Overlay networks&#xA;13. Assisted practice: Deploy a Service on an Overlay Network&#xA;14. Assisted practice: Run a Container into a Running Service under Swarm&#xA;15. Assisted practice: Demonstrate Locking in Swarm Cluster&#xA;16. Drain swarm node&#xA;17. Assisted practice: Draining the swarm node&#xA;18. Docker Inspect&#xA;19. Assisted practice: Inspect a service on swarm&#xA;20. Compose&#xA;21. Compose: Configuration&#xA;22. Docker stack deploy&#xA;23. Assisted practice: Convert an Application Deployment into a Stack&#xA;24. Manipulate services in stack&#xA;25. Scaling&#xA;26. Assisted practice: Increase the Number of Replicas&#xA;27. Persistent Storage&#xA;28. Volumes&#xA;29. Bind Mounts&#xA;30. tmpfs Mounts&#xA;31. Assisted practice: Mount Volumes via Swarm Services&#xA;32. Assisted Practice: Demonstrate How to Use Storage Across Cluster Nodes&#xA;33. Prune Volumes&#xA;34. Docker Storage Drivers&#xA;35. DeviceMapper&#xA;36. Devicemapper Workflow&#xA;37. Devicemapper and Docker Performance&#xA;38. Assisted Practice: Select Storage Driver and Configure Device Mapper&#xA;39. Graph Driver&#xA;40. Labels&#xA;41. Assisted practice: Apply Node Labels, Inspect the Labels, and Filter Swarm Nodes by Labels&#xA;42. Quorum of managers&#xA;43. Fault Tolerance&#xA;44. Loss of Quorum&#xA;45. Quorum Recovery&#xA;46. Templates&#xA;47. Assisted practice: Usage of Templates&#xA;48. Logs&#xA;49. Accessing Logs&#xA;50. Troubleshooting Services&#xA;51. Debugging&#xA;52. Assisted practice: Troubleshoot a Service that Is Unable to Deploy&#xA;53. Logging Drivers&#xA;54. Configure Logging Drivers&#xA;55. Assisted Practice: Logging Drivers&#xA;56. Network Troubleshooting&#xA;57. Assisted Practice: Troubleshooting container networking&#xA;58. Backup: Swarm&#xA;59. Backup: Restore&#xA;60. Assisted Practice: Set up a Backup Schedule&#xA;61. Swarm Disaster Recovery&#xA;62. Knowledge Check&#xA;63. LEP1: Containerizing Legacy Application&#xA;64. LEP2: Creating a Docker Image and Creating a Replicated Service on Swarm Cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;6: Installation and Configuration of Mirantis Products&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Mirantis Products: Overview&#xA;2. Introduction to Mirantis Container Runtime&#xA;3. Features of MCR&#xA;4. Installation Requirements&#xA;5. Installation Methods&#xA;6. Uninstall MCR&#xA;7. Introduction to Mirantis Kubernetes Engine&#xA;8. Features of MKE&#xA;9. Orchestration&#xA;10. MKE Architecture&#xA;11. Interaction with MKE&#xA;12. Installation Requirements&#xA;13. Install MKE&#xA;14. Uninstall MKE&#xA;15. Mirantis Launchpad: Overview&#xA;16. Mirantis Launchpad: Installation&#xA;17. Assisted Practice: Install Mirantis Launchpad CLI&#xA;18. Uninstall Launchpad&#xA;19. Upgrade Launchpad&#xA;20. Joining Manager Nodes&#xA;21. High Availability&#xA;22. Load Balancing on MKE&#xA;23. Load Balancing MKE and MSR&#xA;24. Configuring Load Balancer&#xA;25. Deploying Load Balancer&#xA;26. Deploy&#xA;26. Deploy Swarm Service Using MKE&#xA;27. Access Control&#xA;28. Grant&#xA;29. Subject&#xA;30. Assisted Practice: Create and Manage Teams and Users&#xA;31. Role&#xA;32. Built-in Roles&#xA;33. Create a Custom Role&#xA;34. Resource Collection&#xA;35. Create a Grant&#xA;36. Create a Kubernetes Grant&#xA;37. Create a Swarm Grant&#xA;38. Service Deployment&#xA;39. Grant Composition&#xA;40. Introduction to Mirantis Secure Registry&#xA;41. Feature of MSR&#xA;42. MSR Architecture&#xA;43. MSR Components&#xA;44. Networks&#xA;45. Volumes&#xA;46. Image Storage&#xA;47. Installation Requirements&#xA;48. Assisted Practice: Install Mirantis Secure Registry&#xA;49. Post-Installation&#xA;50. Uninstall MSR&#xA;51. High Availability&#xA;52. MSR Failure Tolerance&#xA;53. Sizing MSR Installation&#xA;54. Add Replicas&#xA;55. Remove Replicas&#xA;56. Load Balancer&#xA;57. Configure Load Balancer&#xA;58. Health Check of Replicas&#xA;59. Load Balancer: Configuration and Deployment&#xA;60. MKE: Backup&#xA;61. MKE: Restore&#xA;62. MSR: Backup&#xA;63. MSR: Restore&#xA;64. MKE Disaster Recovery&#xA;65. MSR Disaster Recovery&#xA;66. Knowledge Check&#xA;67. LEP3: Creating a Grant with Custom Roles&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;7. Security&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Docker Security&#xA;2. Default Engine Security&#xA;3. Namespace&#xA;4. Control Groups&#xA;5. Docker Daemon Attack Surface&#xA;6. Linux Kernel Capabilities&#xA;7. Docker Content Trust&#xA;8. Docker Content Trust Signature Verification&#xA;9. Sign an Image&#xA;10. Sign Images that MKE Can Trust&#xA;11. Vulnerabilities&#xA;12. Scan Images for Vulnerabilities&#xA;13. MKE Client Bundle&#xA;14. Integrate MKE with LDAP&#xA;15. Configure the LDAP Integration&#xA;16. LDAP Enabled&#xA;17. LDAP Server&#xA;18. LDAP User Search Configurations&#xA;19. LDAP Test Login&#xA;20. LDAP Sync Configuration&#xA;21. Revoke User Access&#xA;22. Data Synced from an Organization’s LDAP Directory&#xA;23. Assisted Practice: Create MKE Client Bundles&#xA;24. External Certificates with MKE&#xA;25. External Certificates with MSR&#xA;26. Configuration of Certificates&#xA;27. Swarm Security&#xA;28. Roles&#xA;29. Secrets&#xA;30. How Docker Manages Secrets&#xA;31. Docker Secret Commands&#xA;32. Knowledge Check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;8. Docker Kubernetes Service (DKS)&lt;/h2&gt; &#xA; &lt;h3&gt;Kubernetes: Overview&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;1. Introduction to Kubernetes&#xA;2. Kubernetes Cluster&#xA;3. Kubernetes Architecture&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Kubernetes CLI&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;4. Kubernetes CLI&#xA;5. kubectl Commands for Docker&#xA;6. Assisted Practice: Access Kubernetes Cluster from Docker CLI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Kubernetes Orchestration for Docker Enterprise&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;7. Docker Kubernetes Service&#xA;8. Kubernetes Orchestration for Docker Enterprise&#xA;9. Security Features&#xA;10. Kubernetes Orchestration in UCP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Routing traffic to Kubernetes Pods&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;11. Kubernetes Service&#xA;12. Assisted Practice: Create a Service to Route Traffic From Frontend to Backend Pods&#xA;13. Kubernetes ServiceTypes&#xA;14. Kubernetes Networking Model&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Persistent Storage to Kubernetes&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;15. Persistent Volumes&#xA;16. Assisted Practice: Configure a Pod to Use a PersistentVolume for Storage&#xA;17. Container Storage Interface&#xA;18. Storage Classes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Deployments and Configurations&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;19. ReplicaSets&#xA;20. Workload Deployments&#xA;21. Configurations&#xA;22. Assisted Practice: Create a ConfigMap and Secret for a Pod&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;RBAC (Role-Based Access)&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;23. Kubernetes grants&#xA;24. RBAC Authorization&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Course-end Assessment Instructions&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code&gt;25. Course-end Assessment Instructions&#xA;26. Knowledge Check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;We wish you all the best for your upcoming training with us. Please contact your Teaching Assistants for further assistance and information.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;p&gt;Please note that the entire repository is owned and maintained by &lt;a href=&#34;https://www.linkedin.com/in/vkmanik/&#34;&gt;Varun Kumar Manik&lt;/a&gt;. While every effort has been made to ensure the accuracy and reliability of the information and resources provided in this repository, Varun Kumar Manik takes full responsibility for any errors or inaccuracies that may be present.&lt;/p&gt; &#xA; &lt;p&gt;Simplilearn is not responsible for the content or materials provided in this repository and disclaims all liability for any issues, misunderstandings, or claims that may arise from the use of the information or materials provided. By using this repository, you acknowledge that Varun Kumar Manik is solely accountable for its content, and you agree to hold Simplilearn harmless from any claims or liabilities that may arise as a result of your use or reliance on the information provided herein.&lt;/p&gt; &#xA; &lt;p&gt;It is important to understand that this repository contains educational materials for a training course, and users are expected to apply their own judgment and discretion when utilizing the provided resources. Neither Varun Kumar Manik nor Simplilearn can guarantee specific results or outcomes from following the materials in this repository.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Connect &amp;amp; Follow&lt;/h2&gt; &#xA;&lt;p&gt;For more info, please connect and follow me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Github: &lt;a href=&#34;https://github.com/manikcloud&#34;&gt;https://github.com/manikcloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LinkedIn: &lt;a href=&#34;https://www.linkedin.com/in/vkmanik/&#34;&gt;https://www.linkedin.com/in/vkmanik/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Email: &lt;a href=&#34;mailto:varunmanik1@gmail.com&#34;&gt;varunmanik1@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook: &lt;a href=&#34;https://www.facebook.com/cloudvirtualization/&#34;&gt;https://www.facebook.com/cloudvirtualization/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;YouTube: &lt;a href=&#34;https://bit.ly/32fknRN&#34;&gt;https://bit.ly/32fknRN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/varunkmanik&#34;&gt;https://twitter.com/varunkmanik&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>