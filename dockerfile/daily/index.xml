<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-15T01:36:20Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>appdev-projects/umbrella</title>
    <updated>2022-10-15T01:36:20Z</updated>
    <id>tag:github.com,2022-10-15:/appdev-projects/umbrella</id>
    <link href="https://github.com/appdev-projects/umbrella" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Umbrella&lt;/h1&gt; &#xA;&lt;p&gt;In this project, we&#39;ll write a Ruby program that uses the Google Maps API and Dark Sky API to tell the user whether or not they need to carry an umbrella with them.&lt;/p&gt; &#xA;&lt;h2&gt;Solution&lt;/h2&gt; &#xA;&lt;p&gt;There is a solution in the file called &lt;code&gt;solution.rb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You can run it to see how the program should behave:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ruby solution.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Before it will work, you need to create two &lt;strong&gt;environment variables&lt;/strong&gt; in your Gitpod dashboard.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chapters.firstdraft.com/chapters/792&#34;&gt;Read how to create environment variables here.&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;You need to create env vars called &lt;code&gt;GMAPS_KEY&lt;/code&gt; and &lt;code&gt;DARK_SKY_KEY&lt;/code&gt;. You&#39;ll find the values to assign in the assignment in Canvas.&lt;/li&gt; &#xA;   &lt;li&gt;When asked for &#34;Organization/Repository&#34;, say &lt;code&gt;*/*&lt;/code&gt;. This will make the env vars available across all of your workspaces.&lt;/li&gt; &#xA;   &lt;li&gt;Don&#39;t forget to restart your workspace after the variables have been saved &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;In your &lt;a href=&#34;https://gitpod.io/workspaces&#34;&gt;Gitpod dashboard&lt;/a&gt;, find the workspace.&lt;/li&gt; &#xA;     &lt;li&gt;Click on the three dots next to its name.&lt;/li&gt; &#xA;     &lt;li&gt;Stop.&lt;/li&gt; &#xA;     &lt;li&gt;Once it has shut down, Open it again.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then, try running &lt;code&gt;solution.rb&lt;/code&gt; and enter some rainy locations —&amp;nbsp;&lt;a href=&#34;https://www.rainviewer.com/weather-radar-map-live.html&#34;&gt;you should be able to find some using this live radar&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t peek at the solution until you&#39;ve tried things yourself.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Program outline&lt;/h2&gt; &#xA;&lt;p&gt;Here is a suggested outline for your program:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ask the user for their location.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get and store the user&#39;s location.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the user&#39;s latitude and longitude from the Google Maps API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the weather at the user&#39;s coordinates from the Dark Sky API.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Display the current temperature and summary of the weather for the next hour.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For each of the next twelve hours, check if the precipitation probability is greater than 10%.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If so, print a message saying how many hours from now and what the precipitation probability is.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If any of the next twelve hours has a precipitation probability greater than 10%, print &#34;You might want to carry an umbrella!&#34;&lt;/p&gt; &lt;p&gt;If not, print &#34;You probably won&#39;t need an umbrella today.&#34;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;p&gt;Some handy links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=en&#34;&gt;JSONView Chrome extension&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://darksky.net/forecast/41.8887,-87.6355/us12/en&#34;&gt;Dark Sky forecast at the Merchandise Mart for humans&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dark Sky forecast at the Merchandise Mart for machines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;https://api.darksky.net/forecast/REPLACE_THIS_PATH_SEGMENT_WITH_YOUR_API_TOKEN/41.8887,-87.6355&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;You&#39;ll need an access token to view this page. Find it in the assignment on Canvas.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://darksky.net/dev/docs&#34;&gt;Dark Sky API docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://goo.gl/maps/2mXdvBnHSGuMq98m6&#34;&gt;Map of Merchandise Mart for humans&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Map of Merchandise Mart for machines:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;https://maps.googleapis.com/maps/api/geocode/json?address=Merchandise%20Mart%20Chicago&amp;amp;key=REPLACE_THIS_QUERY_STRING_PARAMETER_WITH_YOUR_API_TOKEN&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;You&#39;ll need an access token to view this page. Find it in the assignment on Canvas.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developers.google.com/maps/documentation/geocoding/start&#34;&gt;Google Geocoding API docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://chapters.firstdraft.com/chapters/792&#34;&gt;How to store secrets securely on Gitpod&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful methods&lt;/h2&gt; &#xA;&lt;p&gt;Most of working with APIs boils down to working with &lt;a href=&#34;https://chapters.firstdraft.com/chapters/758&#34;&gt;&lt;code&gt;Array&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&#34;https://chapters.firstdraft.com/chapters/767&#34;&gt;&lt;code&gt;Hash&lt;/code&gt;es&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will likely also need to use &lt;a href=&#34;https://chapters.firstdraft.com/&#34;&gt;&lt;code&gt;if&lt;/code&gt; statements&lt;/a&gt; and &lt;a href=&#34;https://chapters.firstdraft.com/chapters/764&#34;&gt;loops&lt;/a&gt; (most useful programs do).&lt;/p&gt; &#xA;&lt;p&gt;Here are some less familiar methods that will be useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;URI.open()&lt;/code&gt;: The argument to &lt;code&gt;URI.open&lt;/code&gt; should be a &lt;code&gt;String&lt;/code&gt; containing a URL. The method will then read the page at the provided URL and return it as a &lt;code&gt;Tempfile&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In order to use this method, we must &lt;code&gt;require &#34;open-uri&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Tempfile#read&lt;/code&gt;: If you call &lt;code&gt;.read&lt;/code&gt; on an instance of &lt;code&gt;Tempfile&lt;/code&gt;, it will return the contents of the file as a &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;: The argument to &lt;code&gt;JSON.parse&lt;/code&gt; should be a &lt;code&gt;String&lt;/code&gt; containing valid JSON. The method will transform the JSON objects into Ruby objects.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In order to use this method, we must &lt;code&gt;require &#34;json&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Time.at()&lt;/code&gt;: The argument to &lt;code&gt;Time.at&lt;/code&gt; should be an &lt;code&gt;Integer&lt;/code&gt; representing the &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;Epoch time&lt;/a&gt;. The method will transform the &lt;code&gt;Integer&lt;/code&gt; into an instance of &lt;code&gt;Time&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can use &lt;a href=&#34;https://www.rubyguides.com/2016/06/ruby-ranges-how-do-they-work/&#34;&gt;a &lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; along with the &lt;code&gt;[]&lt;/code&gt; method to access a specific set of elements within an &lt;code&gt;Array&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;array = [8, 3, 1, 19, 23, 3]&#xA;&#xA;p array[2..4] # =&amp;gt; [1, 19, 23]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stretch goal&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/benlund/ascii_charts&#34;&gt;the ascii_charts gem&lt;/a&gt; to produce output that includes a chart, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;========================================&#xA;    Will you need an umbrella today?    &#xA;========================================&#xA;&#xA;Where are you?&#xA;brooklyn&#xA;Checking the weather at Brooklyn....&#xA;Your coordinates are 40.6781784, -73.9441579.&#xA;It is currently 51.33°F.&#xA;Next hour: Possible light rain starting in 25 min.&#xA; &#xA;Hours from now vs Precipitation probability&#xA; &#xA;80|                                    &#xA;75| *                                  &#xA;70| *                                  &#xA;65| *                                  &#xA;60| *                                  &#xA;55| *                                  &#xA;50| *                                  &#xA;45| *                                  &#xA;40| *                                  &#xA;35| *                                  &#xA;30| *                                  &#xA;25| *                             *  * &#xA;20| *                          *  *  * &#xA;15| *              *  *  *  *  *  *  * &#xA;10| *           *  *  *  *  *  *  *  * &#xA; 5| *  *  *  *  *  *  *  *  *  *  *  * &#xA; 0+-*--*--*--*--*--*--*--*--*--*--*--*-&#xA;    1  2  3  4  5  6  7  8  9 10 11 12 &#xA; &#xA;You might want to take an umbrella!&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>aakashgaur57/www</title>
    <updated>2022-10-15T01:36:20Z</updated>
    <id>tag:github.com,2022-10-15:/aakashgaur57/www</id>
    <link href="https://github.com/aakashgaur57/www" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;www&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>ministryofjustice/cdpt-ost-prototype</title>
    <updated>2022-10-15T01:36:20Z</updated>
    <id>tag:github.com,2022-10-15:/ministryofjustice/cdpt-ost-prototype</id>
    <link href="https://github.com/ministryofjustice/cdpt-ost-prototype" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prototype of a solution using standalone FB Runner and MOJ Forms to create online signposting tool application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cdpt-ost-prototype&lt;/h1&gt; &#xA;&lt;p&gt;Prototype of a solution using standalone FB Runner and MOJ Forms to create online signposting tool application&lt;/p&gt; &#xA;&lt;p&gt;Running the solution locally&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;docker run --rm -it -p 3000:3000 $(docker build -q .)&lt;/code&gt; to run the app&lt;/p&gt; &#xA;&lt;p&gt;Access it at &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>