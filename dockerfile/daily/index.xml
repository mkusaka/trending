<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-03T01:32:45Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD</title>
    <updated>2023-08-03T01:32:45Z</updated>
    <id>tag:github.com,2023-08-03:/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD</id>
    <link href="https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;In this project, we will be deploying a Kubernetes cluster using a Jenkins CI/CD pipeline. We will be utilizing various DevOps tools such as GitHub, Jenkins, Ansible, and a Kubernetes cluster to accomplish this. The goal of this project is to utilize these tools to automate the deployment process and streamline the development workflow.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2&gt;Deployment on Kubernetes Cluster using Jenkins CI/CD Project&lt;/h2&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/58173938/197373162-1f510766-4437-41ba-b6f8-deead93c7693.png&#34; alt=&#34;Kubernetes final image (12)&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Whole Project Code Available &lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/jenkins-pipeline&#34;&gt;Here&lt;/a&gt;&lt;/h3&gt; &#xA; &lt;h3&gt;This Repo is to Teach You Each Tool/Technology and How to Implement the Whole Project Step by Step&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Prerequisites/tools needed to work on this project.&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awsdocs/amazon-ec2-user-guide/raw/master/doc_source/EC2_GetStarted.md&#34;&gt;AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/containers/whats-a-linux-container&#34;&gt;Containers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-started/overview/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Kubernetes-hands-on&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/tutorials/&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ansible.com/ansible/latest/getting_started/index.html&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We will have a deployment over a &lt;code&gt;Kubernetes cluster&lt;/code&gt; using &lt;code&gt;Jenkins CI/CD pipeline&lt;/code&gt;, &lt;br&gt; in this project, we are taking the help of various DevOps tools like GitHub, Jenkins, &lt;br&gt; Ansible and a &lt;code&gt;Kubernetes cluster(2 nodes)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We will also learn about Kubernetes to know about this deployment and services and we &lt;br&gt; will write &lt;code&gt;Ansible playbooks&lt;/code&gt; with it, we will also write &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Agenda&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;When the developer writes a Docker file, he pushes it to the &lt;code&gt;GitHub repository&lt;/code&gt; &lt;br&gt; so whenever there is a new commit to the GitHub repo When the new code arrives it &lt;br&gt; Notifies Jenkins via a webhook, and Jenkins starts the pipeline.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Jenkins pulls all the code from the GitHub repository Once it&#39;s completed, it will &lt;br&gt; ssh to the ansible server so when a developer &lt;code&gt;pushes&lt;/code&gt; a docker file it accesses the &lt;br&gt; Ansible server and starts running the image.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When it gets the docker file it starts building the image based on the docker file It &lt;br&gt; tags it, and once &lt;code&gt;tagged&lt;/code&gt; it pushes to the Docker hub and the second task of the Ansible &lt;br&gt; Server is, it will ssh to our Kubernetes cluster server, which will evaluate and ansible &lt;br&gt; will execute the playbook.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It runs the &lt;code&gt;kubectl&lt;/code&gt; command on our Kubernetes cluster(web app) and it tries to get the &lt;br&gt; latest image from the docker registry .It will pull from the docker hub and it will start &lt;br&gt; building the image, it will build a container and that container should be available to &lt;br&gt; us using an &lt;code&gt;node IP&lt;/code&gt; and a &lt;code&gt;port&lt;/code&gt; which we specified in the &lt;code&gt;Service.yaml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We&#39;re going to start by writing &lt;code&gt;Service.yaml&lt;/code&gt; and hand it over to the Kubernetes cluster &lt;br&gt; So this is the whole scenario in simple terms was going to achieve a &lt;code&gt;Kubernetes deployment&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Jenkins CI/CD pipeline uses various tools We use &lt;code&gt;Linux&lt;/code&gt; commands, Jenkins, and Docker &lt;br&gt; and you need to have a &lt;code&gt;Dockerhub account&lt;/code&gt;, so once &lt;code&gt;Ansible Server&lt;/code&gt; builds a Docker image &lt;br&gt; based on the Docker file, we push it to the Docker Hub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;So we need to log in to Docker Hub here so we can easily push the latest image so what &lt;br&gt; we&#39;re trying to accomplish here is we have the latest image and we also maintain a &lt;br&gt; version based on the build&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It builds v1, it contains a fresh image, If the second time it builds another image v2 &lt;br&gt; so that the second contains the latest image, we are &lt;code&gt;performing a version&lt;/code&gt;, also, we have &lt;br&gt; to separate the &lt;code&gt;latest image&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project is divided into 6 parts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Server%20Setup&#34;&gt;Server Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Dockerfile%20-%20Configure%20Webhook%20-%20Trigger%20Jenkins%20Job%20-%20git&#34;&gt;Dockerfile - Configure Webhook - Trigger Jenkins Job - git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Transfer%20%26%20Execute%20files%20on%20remote%20server%20using%20SshAgent&#34;&gt;Transfer &amp;amp; Execute files on remote server using SshAgent&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Build%20docker%20Images%20using%20Dockerfile%20-%20Tag%20docker%20images&#34;&gt;Build docker Images using Dockerfile - Tag docker images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Complete%20Declarative%20CI-CD%20Pipelines%20in%20Jenkins%20Project%20-%20Push%20Images%20to%20DockerHub&#34;&gt;Complete Declarative CI/CD Pipelines in Jenkins Project - Push Images to DockerHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Krishnamohan-Yerrabilli/Deployment-on-K8s-cluster-using-jenkins-CI-CD/tree/main/Complete%20Deployment%20on%20Kubernetes%20cluster%20using%20jenkins%20CI-CD&#34;&gt;Complete Deployment on Kubernetes cluster using jenkins CI/CD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;❤ Show your support&lt;/h2&gt; &#xA;&lt;p&gt;Give a ⭐️ if this project helped you, Happy learning!&lt;/p&gt;</summary>
  </entry>
</feed>