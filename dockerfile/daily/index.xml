<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-16T01:32:04Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>confluentinc/learn-apache-flink-101-exercises</title>
    <updated>2023-11-16T01:32:04Z</updated>
    <id>tag:github.com,2023-11-16:/confluentinc/learn-apache-flink-101-exercises</id>
    <link href="https://github.com/confluentinc/learn-apache-flink-101-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Flink 101&lt;/h1&gt; &#xA;&lt;p&gt;This repository is for the &lt;strong&gt;Apache Flink 101&lt;/strong&gt; course provided by Confluent Developer.&lt;/p&gt; &#xA;&lt;h2&gt;What this does&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repo uses Docker Compose to start up a small Flink cluster and Flink&#39;s SQL Client.&lt;/p&gt; &#xA;&lt;h2&gt;How to get it running&lt;/h2&gt; &#xA;&lt;p&gt;First build the image and start all of the containers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose up --build -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the containers are running,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker compose run sql-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will drop you into the Flink SQL Client, where you can interact with Flink SQL.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>adoptium/containers</title>
    <updated>2023-11-16T01:32:04Z</updated>
    <id>tag:github.com,2023-11-16:/adoptium/containers</id>
    <link href="https://github.com/adoptium/containers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repo containing the dockerfiles and scripts to produce the official eclipse-temurin containers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Containers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/_/eclipse-temurin&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/_/eclipse-temurin?label=Docker%20Pulls&#34; alt=&#34;DockerPulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/_/eclipse-temurin&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/_/eclipse-temurin?label=Docker%20Stars&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the Dockerfiles for the official &lt;a href=&#34;https://adoptium.net&#34;&gt;Adoptium&lt;/a&gt; images of the Eclipse Temurin distribution (OpenJDK). These images are made available in Docker Hub.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for the usage README then please head to the &lt;a href=&#34;https://hub.docker.com/_/eclipse-temurin&#34;&gt;Official Docker Hub Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Images&lt;/h2&gt; &#xA;&lt;p&gt;In general, we support Alpine, CentOS, UBI, Ubuntu and Windows containers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/docker-library/docs/tree/master/eclipse-temurin#simple-tags&#34;&gt;List of Support Images By Tag&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Update Policy&lt;/h2&gt; &#xA;&lt;p&gt;As these are official Docker Hub images, Docker Inc maintains the base image and so any CVEs in the base O/S layer gets updated by them in short order. For JDK version updates, we release on a quarterly cadence whenever a Patch Set Update (PSU) is available.&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance of Dockerfiles&lt;/h2&gt; &#xA;&lt;p&gt;This section is for maintainers of the containers repository.&lt;/p&gt; &#xA;&lt;h3&gt;Hourly automated Job&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/.github/workflows/updater.yml&#34;&gt;Updater GitHub Action&lt;/a&gt; runs every 30 mins which triggers the &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; script to update the Dockerfiles by creating a Pull Request containing any changes.&lt;/p&gt; &#xA;&lt;h4&gt;generate_dockerfiles.py&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; is a python script which uses the jinja templates defined in &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/docker_templates/&#34;&gt;docker_templates&lt;/a&gt; to generate the docker updates. It uses the Adoptium API to fetch the lastest artefacts for each release.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Release&lt;/h3&gt; &#xA;&lt;p&gt;During a release you can also run &lt;a href=&#34;https://raw.githubusercontent.com/adoptium/containers/main/generate_dockerfiles.py&#34;&gt;&lt;code&gt;./generate_dockerfiles.py&lt;/code&gt;&lt;/a&gt; manually by heading to The &lt;a href=&#34;https://github.com/adoptium/containers/actions/workflows/updater.yml&#34;&gt;GitHub Action definition&lt;/a&gt; and clicking the &lt;strong&gt;Run Workflow&lt;/strong&gt; button and making sure the &lt;code&gt;main&lt;/code&gt; (default) branch is selected, then click the next &lt;strong&gt;Run Workflow&lt;/strong&gt; button.&lt;/p&gt; &#xA;&lt;h3&gt;Review and Merge PR&lt;/h3&gt; &#xA;&lt;p&gt;Once the PR is created you can review that PR (which itself tests all of the Docker Images that we have generate configuration for).&lt;/p&gt; &#xA;&lt;h2&gt;Update Official Docker Hub Manifest&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve merged the PR, you can update the official Docker Hub manifest. This is done by running the following command in the containers repo on your local machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get the latest changes&#xA;git fetch --all&#xA;# Checkout the main branch&#xA;git checkout main&#xA;./dockerhub_doc_config_update.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will create a file called &lt;em&gt;eclipse-temurin&lt;/em&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;Create a new PR to replace the &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/eclipse-temurin&#34;&gt;Manifest on Docker Hub&lt;/a&gt; with the new contents of &lt;em&gt;eclipse-temurin&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/docker-library/official-images/raw/master/library/eclipse-temurin&#34;&gt;https://github.com/docker-library/official-images/blob/master/library/eclipse-temurin&lt;/a&gt; web UI&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;edit(pencil button)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remove its content&lt;/li&gt; &#xA; &lt;li&gt;Copy-paste &lt;em&gt;eclipse-temurin&lt;/em&gt;&#39;s content&lt;/li&gt; &#xA; &lt;li&gt;At the bottom of that edit screen&#39; Propose changes section &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;add &lt;strong&gt;title&lt;/strong&gt; e.g [eclipse-temurin: XXXXX]&lt;/li&gt; &#xA;   &lt;li&gt;add &lt;strong&gt;description&lt;/strong&gt; for the commit&lt;/li&gt; &#xA;   &lt;li&gt;click &lt;strong&gt;Propose Change&lt;/strong&gt; button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the next screen click on the &lt;strong&gt;Create Pull Request&lt;/strong&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;Once that PR has been created it will be automatically tested and reviewed by Docker Hub staff and eventually released.&lt;/p&gt; &#xA;&lt;h3&gt;Diff Output at Docker Hub&lt;/h3&gt; &#xA;&lt;p&gt;It can be useful to look at the &#34;Diff for XXX:&#34; output created by one of the Docker Hub GitHub Actions on the Pull Request. This output should not be read as a traditional PR (since Docker Hub bots do move things around, so you may see what looks like odd deletions) but as a sanity check to make sure you see the platforms/architectures that you expect.&lt;/p&gt;</summary>
  </entry>
</feed>