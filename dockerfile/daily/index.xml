<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T01:37:50Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>visualdatabase/fastdup</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/visualdatabase/fastdup</id>
    <link href="https://github.com/visualdatabase/fastdup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similaritity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to …&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FastDup | A tool for gaining insights from a large image collection&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Large Image Datasets Today are a Mess | &lt;a href=&#34;https://medium.com/@amiralush/large-image-datasets-today-are-a-mess-e3ea4c9e8d22&#34;&gt;Blog Post&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/16v_6Vk59hc&#34;&gt;Video Tutorial &lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similarity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to be sent for tagging. FastDup scales to millions of images running on CPU only.&lt;/p&gt; &#xA;&lt;p&gt;From the authors of &lt;a href=&#34;https://github.com/jegonzal/PowerGraph&#34;&gt;GraphLab&lt;/a&gt; and &lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;Turi Create&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/mscoco_duplicates-min.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Duplicates and near duplicates identified in &lt;a href=&#34;https://cocodataset.org/#home&#34;&gt;MS-COCO&lt;/a&gt; and &lt;a href=&#34;https://www.image-net.org&#34;&gt;Imagenet-21K&lt;/a&gt; dataset&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/imagenet21k_wrong_labels-min.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Wrong labels in the &lt;a href=&#34;https://www.image-net.org&#34;&gt;Imagenet-21K&lt;/a&gt; dataset&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/red_wine.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Cluster of wrong labels in the &lt;a href=&#34;https://www.image-net.org&#34;&gt;Imagenet-21K&lt;/a&gt; dataset. No human can tell those red wines from their image.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/daisy.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Cluster of wrong labels in the &lt;a href=&#34;https://www.image-net.org&#34;&gt;Imagenet-21K&lt;/a&gt; dataset. All daisies..&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/imagenet21k_broken.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Thousands of broken ImageNet images that have confusing labels of real objects.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/imdb_outliers-min.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;&lt;a href=&#34;https://data.vision.ee.ethz.ch/cvl/rrothe/imdb-wiki/&#34;&gt;IMDB-WIKI&lt;/a&gt; outliers (data goal is for face detection, gender and age detection)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/landmark_outliers-min.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Outliers in the &lt;a href=&#34;https://www.kaggle.com/competitions/landmark-recognition-2021&#34;&gt;Google Landmark Recognition 2021 dataset&lt;/a&gt; (dataset intention is to capture recognizable landmarks, like the empire state building etc.)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/imagenet21k_funny-min.png&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Fun labels in the &lt;a href=&#34;https://www.image-net.org&#34;&gt;Imagenet-21K&lt;/a&gt; dataset&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Results on Key Datasets&lt;/h2&gt; &#xA;&lt;p&gt;We have thoroughly tested fastdup across various famous visual datasets. Ranging from pilar Academic datasets to Kaggle competitions. A key finding we have made using FastDup is that there are ~1.2M (!) duplicate images on the ImageNet-21K dataset, out of which 104K pairs belong both to the train and to the val splits (this amounts to 20% of the validation set). This is a new unknown result! Full results are below. * train/val splits are taken from &lt;a href=&#34;https://github.com/Alibaba-MIIL/ImageNet21&#34;&gt;https://github.com/Alibaba-MIIL/ImageNet21&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Total Images&lt;/th&gt; &#xA;   &lt;th&gt;cost [$]&lt;/th&gt; &#xA;   &lt;th&gt;spot cost [$]&lt;/th&gt; &#xA;   &lt;th&gt;processing [sec]&lt;/th&gt; &#xA;   &lt;th&gt;Identical pairs&lt;/th&gt; &#xA;   &lt;th&gt;Anomalies&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.image-net.org/challenges/LSVRC/&#34;&gt;imagenet21k-resized&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11,582,724&lt;/td&gt; &#xA;   &lt;td&gt;4.98&lt;/td&gt; &#xA;   &lt;td&gt;1.24&lt;/td&gt; &#xA;   &lt;td&gt;11,561&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/imagenet-21k-resized-leaks&#34;&gt;1,194,059&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/imagenet-21k-anonalies&#34;&gt;Anomalies&lt;/a&gt; &lt;a href=&#34;https://www.databasevisual.com/imagenet-21k-wrong-labels&#34;&gt;Wrong Labels&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://data.vision.ee.ethz.ch/cvl/rrothe/imdb-wiki/&#34;&gt;imdb-wiki&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;514,883&lt;/td&gt; &#xA;   &lt;td&gt;0.65&lt;/td&gt; &#xA;   &lt;td&gt;0.16&lt;/td&gt; &#xA;   &lt;td&gt;1,509&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/imdb-wiki-leaks&#34;&gt;187,965&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/imdb-wiki-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://places2.csail.mit.edu/download.html&#34;&gt;places365-standard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2,168,460&lt;/td&gt; &#xA;   &lt;td&gt;1.01&lt;/td&gt; &#xA;   &lt;td&gt;0.25&lt;/td&gt; &#xA;   &lt;td&gt;2,349&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/places-365-leaks&#34;&gt;93,109&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/places-365-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kaggle.com/c/herbarium-2022-fgvc9&#34;&gt;herbarium-2022-fgvc9&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1,050,179&lt;/td&gt; &#xA;   &lt;td&gt;0.69&lt;/td&gt; &#xA;   &lt;td&gt;0.17&lt;/td&gt; &#xA;   &lt;td&gt;1,598&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/herbarium-leaks&#34;&gt;33,115&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/herbarium-2022-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kaggle.com/c/landmark-recognition-2021&#34;&gt;landmark-recognition-2021&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1,590,815&lt;/td&gt; &#xA;   &lt;td&gt;0.96&lt;/td&gt; &#xA;   &lt;td&gt;0.24&lt;/td&gt; &#xA;   &lt;td&gt;2,236&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/landmarks-2021-leaks&#34;&gt;2,613&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/landmark-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://visualgenome.org/&#34;&gt;visualgenome&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;108,079&lt;/td&gt; &#xA;   &lt;td&gt;0.05&lt;/td&gt; &#xA;   &lt;td&gt;0.01&lt;/td&gt; &#xA;   &lt;td&gt;124&lt;/td&gt; &#xA;   &lt;td&gt;223&lt;/td&gt; &#xA;   &lt;td&gt;View&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kaggle.com/c/iwildcam2022-fgvc9/&#34;&gt;iwildcam2021-fgvc9&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;261,428&lt;/td&gt; &#xA;   &lt;td&gt;0.29&lt;/td&gt; &#xA;   &lt;td&gt;0.07&lt;/td&gt; &#xA;   &lt;td&gt;682&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/iwildcam2022-leaks&#34;&gt;54&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/iwildcam2022-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cocodataset.org/#home&#34;&gt;coco&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;163,957&lt;/td&gt; &#xA;   &lt;td&gt;0.09&lt;/td&gt; &#xA;   &lt;td&gt;0.02&lt;/td&gt; &#xA;   &lt;td&gt;218&lt;/td&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;   &lt;td&gt;View&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eg4000/SKU110K_CVPR19&#34;&gt;sku110k&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;11,743&lt;/td&gt; &#xA;   &lt;td&gt;0.03&lt;/td&gt; &#xA;   &lt;td&gt;0.01&lt;/td&gt; &#xA;   &lt;td&gt;77&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/sku110k-leaks&#34;&gt;7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.databasevisual.com/sku110k-anomalies&#34;&gt;View&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Experiments presented are on a 32 core Google cloud machine, with 128GB RAM (no GPU required).&lt;/li&gt; &#xA; &lt;li&gt;All experiments could be also reproduced on a 8 core, 32GB machine (excluding Imagenet-21K).&lt;/li&gt; &#xA; &lt;li&gt;We run on the full ImageNet-21K dataset (11.5M images) to compare all pairs of images in less than 3 hours WITHOUT a GPU (with Google cloud cost of 5$).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Installation&lt;/h1&gt; &#xA;&lt;p&gt;For Python 3.7 and 3.8 (Ubuntu 20.04 or Ubuntu 18.04 or Mac M1)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python3.8 -m pip install fastdup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Running the code&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import fastdup&#xA;fastdup.run(input_dir=&#34;/path/to/your/folder&#34;)                            #main running function&#xA;fastdup.create_duplicates_gallery(&#39;similarity.csv&#39;, save_path=&#39;.&#39;)       #create a visual gallery of found duplicates&#xA;fastdup.create_duplicates_gallery(&#39;outliers.csv&#39;,   save_path=&#39;.&#39;)       #create a visual gallery of anomalies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/visualdatabase/fastdup/raw/main/gallery/fastdup_clip_24s_crop.gif&#34; alt=&#34;alt text&#34;&gt; &lt;em&gt;Working on the Food-101 dataset. Detecting identical pairs, similar-pairs (search) and outliers (non-food images..)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/visualdatabase/fastdup/raw/main/examples/getting_started_kaggle.ipynb&#34;&gt;Getting started on a Kaggle dataset&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/visualdatabase/fastdup/raw/main/examples/getting_started_food101.ipynb&#34;&gt;Finding duplicates and outliers in the Food-101 datadset:&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Detailed instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/visualdatabase/fastdup/main/INSTALL.md&#34;&gt;Detailed instructions, install from stable release and installation issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/visualdatabase/fastdup/main/RUN.md&#34;&gt;Detailed running instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/visualdatabase/shared_invite/zt-19jaydbjn-lNDEDkgvSI1QwbTXSY6dlA&#34;&gt;Join our Slack channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Technology&lt;/h1&gt; &#xA;&lt;p&gt;We build upon several excellent open source tools. &lt;a href=&#34;https://github.com/microsoft/onnxruntime&#34;&gt;Microsoft&#39;s ONNX Runtime&lt;/a&gt;, &lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;Facebook&#39;s Faiss&lt;/a&gt;, &lt;a href=&#34;https://github.com/opencv/opencv&#34;&gt;Open CV&lt;/a&gt;, &lt;a href=&#34;https://github.com/zurutech/pillow-resize&#34;&gt;Pillow Resize&lt;/a&gt;, &lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;Apple&#39;s Turi Create&lt;/a&gt;, &lt;a href=&#34;https://github.com/minio/minio&#34;&gt;Minio&lt;/a&gt;, &lt;a href=&#34;https://github.com/aws/aws-cli&#34;&gt;Amazon&#39;s awscli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;About Us&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/dr-danny-bickson-835b32&#34;&gt;Danny Bickson&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/amiralush&#34;&gt;Amir Alush&lt;/a&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vulhub/vulhub</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/vulhub/vulhub</id>
    <link href="https://github.com/vulhub/vulhub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pre-Built Vulnerable Environments Based on Docker-Compose&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/.github/assets/logo.svg?sanitize=true&#34; alt=&#34;Vulhub&#34; height=&#34;300&#34;&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/vulhub/vulhub/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/vulhub/vulhub.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Official-Community-blue.svg?sanitize=true&#34; alt=&#34;Official Community&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/485505185167179778.svg?sanitize=true&#34; alt=&#34;Chat on Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/phith0n&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/sponsor-patreon-73d6a1.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Patreon&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/backer-opencollective-f89a76.svg?sanitize=true&#34; alt=&#34;Backers and sponors on Opencollective&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vulhub is an open-source collection of pre-built vulnerable docker environments. No pre-existing knowledge of docker is required, just execute two simple commands and you have a vulnerable environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/README.zh-cn.md&#34;&gt;中文版本(Chinese version)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the docker/docker-compose on Ubuntu 20.04:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install pip&#xA;curl -s https://bootstrap.pypa.io/get-pip.py | python3&#xA;&#xA;# Install the latest version docker&#xA;curl -s https://get.docker.com/ | sh&#xA;&#xA;# Run docker service&#xA;systemctl start docker&#xA;&#xA;# Install docker compose&#xA;pip install docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installation steps of docker and docker-compose for other operating systems might be slightly different, please refer to the &lt;a href=&#34;https://docs.docker.com/&#34;&gt;docker documentation&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download project&#xA;wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip&#xA;unzip vulhub-master.zip&#xA;cd vulhub-master&#xA;&#xA;# Enter the directory of vulnerability/environment&#xA;cd flask/ssti&#xA;&#xA;# Compile environment&#xA;docker-compose build&#xA;&#xA;# Run environment&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is a &lt;strong&gt;README&lt;/strong&gt; document in each environment directory, please read this file for vulnerability/environment testing and usage.&lt;/p&gt; &#xA;&lt;p&gt;After the test, delete the environment with the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to use a VPS of at least 1GB memory to build a vulnerability environment. The &lt;code&gt;your-ip&lt;/code&gt; mentioned in the documentation refers to the IP address of your VPS. If you are using a virtual machine, it refers to your virtual machine IP, not the IP inside the docker container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;All environments in this project are for testing purposes only and should not be used as a production environment!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To prevent permission errors, it is best to use the root user to execute the docker and docker-compose commands.&lt;/li&gt; &#xA; &lt;li&gt;Some docker images do not support running on ARM machines.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;This project relies on docker. So any error during compilation and running are thrown by docker and related programs. Please find the cause of the error by yourself first. If it is determined that the dockerfile is written incorrectly (or the code is wrong in vulhub), then submit the issue. More details please 👉&lt;a href=&#34;https://github.com/phith0n/vulhub/wiki/%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%8E%9F%E5%9B%A0&#34;&gt;Common reasons for compilation failure&lt;/a&gt;, hope it can help you.&lt;/p&gt; &#xA;&lt;p&gt;For more question, please contact:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wangan.com/vulhub&#34;&gt;Chinese Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/GhMB3Z&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/vulhub&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks for the following contributors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vulhub/vulhub/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/contributors.svg?width=890&amp;amp;button=false&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More contributors：&lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/contributors.md&#34;&gt;Contributors List&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Partner&lt;/h2&gt; &#xA;&lt;p&gt;Our Partners and users:&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.wangan.com/vulhub&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/wangan.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.cvebase.com&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/cvebase.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.huoxian.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/huoxian.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.chaitin.cn&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/chaitin.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://xianzhi.aliyun.com/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/aliyun.svg?sanitize=true&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on patreon 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/bePatron?u=12677520&#34;&gt;&lt;img src=&#34;https://vulhub.org/img/sponsor/patreon.png&#34; width=&#34;150&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sponsor vulhub on opencollective 🙏&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://opencollective.com/vulhub#backer&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/backers.svg?width=138&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/vulhub#sponsor&#34;&gt;&lt;img src=&#34;https://opencollective.com/vulhub/sponsors.svg?width=138&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;More &lt;a href=&#34;http://vulhub.org/#/docs/donate/&#34;&gt;Donate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Vulhub is licensed under the MIT License. See &lt;a href=&#34;https://raw.githubusercontent.com/vulhub/vulhub/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jessfraz/dockerfiles</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/jessfraz/dockerfiles</id>
    <link href="https://github.com/jessfraz/dockerfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Various Dockerfiles I use on the desktop and on servers.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;dockerfiles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jessfraz/dockerfiles/actions?query=workflow%3A%22make+test%22+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/jessfraz/dockerfiles/workflows/make%20test/badge.svg?sanitize=true&#34; alt=&#34;make test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a repo to hold various Dockerfiles for images I create.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#resources&#34;&gt;Resources&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#my-dotfiles&#34;&gt;My dotfiles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jessfraz/dockerfiles/master/#using-the-makefile&#34;&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Almost all of these live on dockerhub under &lt;a href=&#34;https://hub.docker.com/u/jess/&#34;&gt;jess&lt;/a&gt;. Because you cannot use notary with autobuilds on dockerhub I also build these continuously on a private registry at &lt;a href=&#34;https://r.j3ss.co/&#34;&gt;r.j3ss.co&lt;/a&gt; for public download. (You&#39;re welcome.)&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;My dotfiles&lt;/h3&gt; &#xA;&lt;p&gt;You may also want to checkout my &lt;a href=&#34;https://github.com/jessfraz/dotfiles&#34;&gt;dotfiles&lt;/a&gt;, specifically the aliases for all these files which are here: &lt;a href=&#34;https://github.com/jessfraz/dotfiles/raw/master/.dockerfunc&#34;&gt;github.com/jessfraz/dotfiles/blob/master/.dockerfunc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;I try to make sure each Dockerfile has a command at the top to document running it, if a file you are looking at does not have a command, please pull request it!&lt;/p&gt; &#xA;&lt;h3&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make help&#xA;build                          Builds all the dockerfiles in the repository.&#xA;dockerfiles                    Tests the changes to the Dockerfiles build.&#xA;image                          Build a Dockerfile (ex. DIR=telnet).&#xA;latest-versions                Checks all the latest versions of the Dockerfile contents.&#xA;run                            Run a Dockerfile from the command at the top of the file (ex. DIR=telnet).&#xA;shellcheck                     Runs the shellcheck tests on the scripts.&#xA;test                           Runs the tests on the repository.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jenkinsci/docker</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/jenkinsci/docker</id>
    <link href="https://github.com/jenkinsci/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker official jenkins repo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Jenkins Docker image&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jenkins/jenkins.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/jenkinsci/docker?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/jenkinsci/docker.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/jenkinsci/docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Jenkins Continuous Integration and Delivery server &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkins&#34;&gt;available on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a fully functional Jenkins server. &lt;a href=&#34;https://jenkins.io/&#34;&gt;https://jenkins.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://jenkins.io/sites/default/files/jenkins_logo.png&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: read the section &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/#connecting-agents&#34;&gt;&lt;em&gt;Connecting agents&lt;/em&gt;&lt;/a&gt; below for the role of the &lt;code&gt;50000&lt;/code&gt; port mapping.&lt;/p&gt; &#xA;&lt;p&gt;This will store the workspace in &lt;code&gt;/var/jenkins_home&lt;/code&gt;. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that an explicit volume so you can manage it and attach to another container for upgrades :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a &#39;jenkins_home&#39; &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;docker volume&lt;/a&gt; on the host machine. Docker volumes retain their content even when the container is stopped, started, or deleted.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Avoid using a &lt;a href=&#34;https://docs.docker.com/storage/bind-mounts/&#34;&gt;bind mount&lt;/a&gt; from a folder on the host machine into &lt;code&gt;/var/jenkins_home&lt;/code&gt;, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you &lt;em&gt;really&lt;/em&gt; need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use &lt;code&gt;-u some_other_user&lt;/code&gt; parameter with &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;this will run Jenkins in detached mode with port forwarding and volume added. You can access logs with command &#39;docker logs CONTAINER_ID&#39; in order to check first login token. ID of container will be returned from output of command above.&lt;/p&gt; &#xA;&lt;h2&gt;Backing up data&lt;/h2&gt; &#xA;&lt;p&gt;If you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.&lt;/p&gt; &#xA;&lt;p&gt;This is highly recommended. Treat the jenkins_home directory as you would a database - in Docker you would generally put a database on a volume.&lt;/p&gt; &#xA;&lt;p&gt;If your volume is inside a container - you can use &lt;code&gt;docker cp $ID:/var/jenkins_home&lt;/code&gt; command to extract the data, or other options to find where the volume data is. Note that some symlinks on some OSes may be converted to copies (this can confuse jenkins with lastStableBuild links etc)&lt;/p&gt; &#xA;&lt;p&gt;For more info check Docker docs section on &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Use volumes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setting the number of executors&lt;/h1&gt; &#xA;&lt;p&gt;You can define the number of executors on the Jenkins built-in node using a groovy script. By default it is set to 2 executors, but you can extend the image and change it to your desired number of executors (recommended 0 executors on the built-in node) :&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;executors.groovy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;import jenkins.model.*&#xA;Jenkins.instance.setNumExecutors(0) // Recommended to not run builds on the built-in node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts&#xA;COPY --chown=jenkins:jenkins executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Connecting agents&lt;/h1&gt; &#xA;&lt;p&gt;You can run builds on the controller out of the box. The Jenkins project recommends that no executors be enabled on the controller.&lt;/p&gt; &#xA;&lt;p&gt;In order to connect agents &lt;strong&gt;through an inbound TCP connection&lt;/strong&gt;, map the port: &lt;code&gt;-p 50000:50000&lt;/code&gt;. That port will be used when you connect agents to the controller.&lt;/p&gt; &#xA;&lt;p&gt;If you are only using &lt;a href=&#34;https://plugins.jenkins.io/ssh-slaves/&#34;&gt;SSH (outbound) build agents&lt;/a&gt;, this port is not required, as connections are established from the controller. If you connect agents using web sockets (since Jenkins 2.217), the TCP agent port is not used either.&lt;/p&gt; &#xA;&lt;h1&gt;Passing JVM parameters&lt;/h1&gt; &#xA;&lt;p&gt;You might need to customize the JVM running Jenkins, typically to adjust &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system properties&lt;/a&gt; or tweak heap memory settings. Use the &lt;code&gt;JAVA_OPTS&lt;/code&gt; or &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt; environment variables for this purpose :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JVM options specifically for the Jenkins controller should be set through &lt;code&gt;JENKINS_JAVA_OPTS&lt;/code&gt;, as other tools might also respond to the &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h1&gt;Configuring logging&lt;/h1&gt; &#xA;&lt;p&gt;Jenkins logging can be configured through a properties file and &lt;code&gt;java.util.logging.config.file&lt;/code&gt; Java property. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir data&#xA;cat &amp;gt; data/log.properties &amp;lt;&amp;lt;EOF&#xA;handlers=java.util.logging.ConsoleHandler&#xA;jenkins.level=FINEST&#xA;java.util.logging.ConsoleHandler.level=FINEST&#xA;EOF&#xA;docker run --name myjenkins -p 8080:8080 -p 50000:50000 --restart=on-failure --env JAVA_OPTS=&#34;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&#34; -v `pwd`/data:/var/jenkins_home jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuring reverse proxy&lt;/h1&gt; &#xA;&lt;p&gt;If you want to install Jenkins behind a reverse proxy with a prefix, example: mysite.com/jenkins, you need to add environment variable &lt;code&gt;JENKINS_OPTS=&#34;--prefix=/jenkins&#34;&lt;/code&gt; and then follow the below procedures to configure your reverse proxy, which will depend if you have Apache or Nginx:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-apache/&#34;&gt;Apache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/&#34;&gt;Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Passing Jenkins launcher parameters&lt;/h1&gt; &#xA;&lt;p&gt;Arguments you pass to docker running the Jenkins image are passed to jenkins launcher, so for example you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run jenkins/jenkins:lts-jdk11 --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will show the Jenkins version, the same as when you run Jenkins from an executable war.&lt;/p&gt; &#xA;&lt;p&gt;You can also define Jenkins arguments via &lt;code&gt;JENKINS_OPTS&lt;/code&gt;. This is useful for customizing arguments to the jenkins launcher in a derived Jenkins image. The following sample Dockerfile uses this option to force use of HTTPS with a certificate included in the image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;&#xA;COPY --chown=jenkins:jenkins https.pem /var/lib/jenkins/cert&#xA;COPY --chown=jenkins:jenkins https.key /var/lib/jenkins/pk&#xA;ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk&#xA;EXPOSE 8083&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also change the default agent port for Jenkins by defining &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; in a sample Dockerfile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;ENV JENKINS_SLAVE_AGENT_PORT 50001&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or as a parameter to docker,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name myjenkins -p 8080:8080 -p 50001:50001 --restart=on-failure --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts-jdk11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This environment variable will be used to set the &lt;a href=&#34;https://www.jenkins.io/doc/book/managing/system-properties/&#34;&gt;system property&lt;/a&gt; &lt;code&gt;jenkins.model.Jenkins.slaveAgentPort&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If this property is already set in &lt;strong&gt;JAVA_OPTS&lt;/strong&gt; or &lt;strong&gt;JENKINS_JAVA_OPTS&lt;/strong&gt;, then the value of &lt;code&gt;JENKINS_SLAVE_AGENT_PORT&lt;/code&gt; will be ignored.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installing more tools&lt;/h1&gt; &#xA;&lt;p&gt;You can run your container as root - and install via apt-get, install as part of build steps via jenkins tool installers, or you can create your own Dockerfile to customise, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;# if we want to install via apt&#xA;USER root&#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ruby make more-thing-here&#xA;# drop back to the regular jenkins user - good practice&#xA;USER jenkins&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In such a derived image, you can customize your jenkins instance with hook scripts or additional plugins. For this purpose, use &lt;code&gt;/usr/share/jenkins/ref&lt;/code&gt; as a place to define the default JENKINS_HOME content you wish the target installation to look like :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Preinstalling plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Install plugins script&lt;/h3&gt; &#xA;&lt;p&gt;You can rely on the plugin manager CLI to pass a set of plugins to download with their dependencies. This tool will perform downloads from update centers, and internet access is required for the default update centers.&lt;/p&gt; &#xA;&lt;h3&gt;Setting update centers&lt;/h3&gt; &#xA;&lt;p&gt;During the download, the script will use update centers defined by the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC&lt;/code&gt; - Main update center. This update center may offer plugin versions depending on the Jenkins LTS Core versions. Default value: &lt;a href=&#34;https://updates.jenkins.io&#34;&gt;https://updates.jenkins.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_EXPERIMENTAL&lt;/code&gt; - &lt;a href=&#34;https://jenkins.io/blog/2013/09/23/experimental-plugins-update-center/&#34;&gt;Experimental Update Center&lt;/a&gt;. This center offers Alpha and Beta versions of plugins. Default value: &lt;a href=&#34;https://updates.jenkins.io/experimental&#34;&gt;https://updates.jenkins.io/experimental&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_INCREMENTALS_REPO_MIRROR&lt;/code&gt; - Defines Maven mirror to be used to download plugins from the &lt;a href=&#34;https://jenkins.io/blog/2018/05/15/incremental-deployment/&#34;&gt;Incrementals repo&lt;/a&gt;. Default value: &lt;a href=&#34;https://repo.jenkins-ci.org/incrementals&#34;&gt;https://repo.jenkins-ci.org/incrementals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JENKINS_UC_DOWNLOAD&lt;/code&gt; - Download url of the Update Center. Default value: &lt;code&gt;$JENKINS_UC/download&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is possible to override the environment variables in images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;❗&lt;/span&gt; Note that changing update center variables &lt;strong&gt;will not&lt;/strong&gt; change the Update Center being used by Jenkins runtime.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Custom Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Installing prebuilt, custom plugins can be accomplished by copying the plugin HPI file into &lt;code&gt;/usr/share/jenkins/ref/plugins/&lt;/code&gt; within the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;COPY --chown=jenkins:jenkins path/to/custom.hpi /usr/share/jenkins/ref/plugins/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;You can run the CLI manually in Dockerfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;RUN jenkins-plugin-cli --plugins pipeline-model-definition github-branch-source:1.8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Furthermore it is possible to pass a file that contains this set of plugins (with or without line breaks).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM jenkins/jenkins:lts-jdk11&#xA;COPY --chown=jenkins:jenkins plugins.txt /usr/share/jenkins/ref/plugins.txt&#xA;RUN jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When jenkins container starts, it will check &lt;code&gt;JENKINS_HOME&lt;/code&gt; has this reference content, and copy them there if required. It will not override such files, so if you upgraded some plugins from UI they won&#39;t be reverted on next start.&lt;/p&gt; &#xA;&lt;p&gt;In case you &lt;em&gt;do&lt;/em&gt; want to override, append &#39;.override&#39; to the name of the reference file. E.g. a file named &lt;code&gt;/usr/share/jenkins/ref/config.xml.override&lt;/code&gt; will overwrite an existing &lt;code&gt;config.xml&lt;/code&gt; file in JENKINS_HOME.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://issues.jenkins.io/browse/JENKINS-24986&#34;&gt;JENKINS-24986&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here is an example to get the list of plugins from an existing server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JENKINS_HOST=username:password@myhost.com:port&#xA;curl -sSL &#34;http://$JENKINS_HOST/pluginManager/api/xml?depth=1&amp;amp;xpath=/*/*/shortName|/*/*/version&amp;amp;wrapper=plugins&#34; | perl -pe &#39;s/.*?&amp;lt;shortName&amp;gt;([\w-]+).*?&amp;lt;version&amp;gt;([^&amp;lt;]+)()(&amp;lt;\/\w+&amp;gt;)+/\1 \2\n/g&#39;|sed &#39;s/ /:/&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cucumber-testresult-plugin:0.8.2&#xA;pam-auth:1.1&#xA;matrix-project:1.4.1&#xA;script-security:1.13&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For 2.x-derived images, you may also want to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUN echo 2.0 &amp;gt; /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to indicate that this Jenkins installation is fully configured. Otherwise a banner will appear prompting the user to install additional plugins, which may be inappropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Updating plugins file&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkinsci/plugin-installation-manager-tool&#34;&gt;plugin-installation-manager-tool&lt;/a&gt; supports updating the plugin file for you.&lt;/p&gt; &#xA;&lt;p&gt;Example command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-command&#34;&gt;JENKINS_IMAGE=jenkins/jenkins:lts-jdk11&#xA;docker run -it ${JENKINS_IMAGE} bash -c &#34;stty -onlcr &amp;amp;&amp;amp; jenkins-plugin-cli -f /usr/share/jenkins/ref/plugins.txt --available-updates --output txt&#34; &amp;gt;  plugins2.txt&#xA;mv plugins2.txt plugins.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrading&lt;/h2&gt; &#xA;&lt;p&gt;All the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then &#34;docker pull&#34; the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.&lt;/p&gt; &#xA;&lt;p&gt;As always - please ensure that you know how to drive docker - especially volume handling!&lt;/p&gt; &#xA;&lt;h3&gt;Upgrading plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, plugins will be upgraded if they haven&#39;t been upgraded manually and if the version from the docker image is newer than the version in the container. Versions installed by the docker image are tracked through a marker file.&lt;/p&gt; &#xA;&lt;p&gt;To force upgrades of plugins that have been manually upgraded, run the docker image with &lt;code&gt;-e PLUGINS_FORCE_UPGRADE=true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default behaviour when upgrading from a docker image that didn&#39;t write marker files is to leave existing plugins in place. If you want to upgrade existing plugins without marker you may run the docker image with &lt;code&gt;-e TRY_UPGRADE_IF_NO_MARKER=true&lt;/code&gt;. Then plugins will be upgraded if the version provided by the docker image is newer.&lt;/p&gt; &#xA;&lt;h3&gt;Hacking&lt;/h3&gt; &#xA;&lt;p&gt;If you wish to contribute fixes to this repository, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/jenkinsci/docker/master/HACKING.adoc&#34;&gt;dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions?&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re on Gitter, &lt;a href=&#34;https://gitter.im/jenkinsci/docker&#34;&gt;https://gitter.im/jenkinsci/docker&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-node</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/microsoft/vscode-remote-try-node</id>
    <link href="https://github.com/microsoft/vscode-remote-try-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Node.js sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-node/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-node&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Node&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;node&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that &lt;code&gt;eslint&lt;/code&gt; and the &lt;code&gt;vscode-eslint&lt;/code&gt; extension are already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;dbaeumer.vscode-eslint&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;server.js&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 20).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 3000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 3000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If we didn&#39;t know the port was 3000, we could&#39;ve used a regex instead of &#34;3000&#34; in the &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as &#34;.+/server.js&#34;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:3000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>techno-tim/launchpad</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/techno-tim/launchpad</id>
    <link href="https://github.com/techno-tim/launchpad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;launchpad 🚀&lt;/h1&gt; &#xA;&lt;h2&gt;Info&lt;/h2&gt; &#xA;&lt;p&gt;A collection of quick starters for ansible, kubernetes, docker, linux, windows, and more. Great for HomeLabs, learning, and automation!&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to ⭐ this repo and fork it too! 👆&lt;/p&gt; &#xA;&lt;p&gt;See each folder for details 📁&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Created by &lt;a href=&#34;https://technotim.live&#34;&gt;TechnoTim&lt;/a&gt; and updated by the community with 💛&lt;/p&gt; &#xA;&lt;p&gt;► YouTube &lt;a href=&#34;https://www.youtube.com/technotimlive&#34;&gt;https://www.youtube.com/technotimlive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitch &lt;a href=&#34;https://www.twitch.tv/TechnoTim&#34;&gt;https://www.twitch.tv/TechnoTim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Twitter &lt;a href=&#34;https://twitter.com/TechnoTimLive&#34;&gt;https://twitter.com/TechnoTimLive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► Discord &lt;a href=&#34;https://l.technotim.live/discord&#34;&gt;https://l.technotim.live/discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;► GitHub &lt;a href=&#34;https://github.com/timothystewart6&#34;&gt;https://github.com/timothystewart6&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AlanTur1ng/Free-VPN-for-Coursera</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/AlanTur1ng/Free-VPN-for-Coursera</id>
    <link href="https://github.com/AlanTur1ng/Free-VPN-for-Coursera" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔑 🔓免费开源的科学上网工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VPN-for-Coursera&lt;/h1&gt; &#xA;&lt;p&gt;科学上网工具：主要是为了解决部分用户在Coursera上遇到的视频无法观看，黑屏，缓冲问题。&lt;br&gt;更多解决方法见： &lt;a href=&#34;https://blog.csdn.net/qq_39521554/article/details/79039548#comments&#34;&gt;Coursera视频无法观看的三种不同解决方法（亲测有效）&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;VPN工具一：Shadow-SSR-4.0&lt;/h2&gt; &#xA;&lt;h3&gt;使用方法&lt;br&gt;&lt;/h3&gt; &#xA;&lt;br&gt; 第一步：将文件解压缩至本地&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/1.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第二步：打开Shadow-ssr-dot-4.0（粉红小飞机图标）&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/2.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第三步：在任务栏图标处找到白色小飞机&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/3.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第四步：右键白色小飞机，选择import-SSR links from-clipboard &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/4.JPG&#34; alt=&#34;步骤一&#34;&gt; &lt;br&gt; &lt;em&gt;执行这一步前请先在项目文件内找到&lt;strong&gt;节点.txt&lt;/strong&gt;并ctrl+C复制里面内容)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第五步：双击白色小飞机，更改设置如下 &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/Capture.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;此时点击OK进行连接，即可科学上网，除了Coursera还可以上谷歌,FB,INS等网站&lt;/p&gt; &#xA;&lt;h2&gt;VPN工具二：SSTap&lt;/h2&gt; &#xA;&lt;h3&gt;使用方法&lt;br&gt;&lt;/h3&gt; &#xA;&lt;br&gt; 第一步：将文件解压缩至本地&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/5.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第二步：打开红色标记图标&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/6.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; 第三步：单击绿色加号，选择第三个选项&#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/7.JPG&#34; alt=&#34;步骤一&#34;&gt; &lt;br&gt; &lt;em&gt;执行这一步前请先在项目文件内找到&lt;strong&gt;节点.txt&lt;/strong&gt;并ctrl+C复制里面内容)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;第四步：点击闪电标志进行测试，如果运行正常则如下图所示 &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Y1ran/JavaSE/raw/master/%E6%95%99%E7%A8%8B%E5%9B%BE%E7%89%87/8.JPG&#34; alt=&#34;步骤一&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-plex</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/linuxserver/docker-plex</id>
    <link href="https://github.com/linuxserver/docker-plex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-plex&#34;&gt;linuxserver/plex&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fplex&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fplex?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-plex&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-plex.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-plex/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-plex.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-plex/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-plex/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/plex&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/plex&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/plex.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/plex&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/plex.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-plex/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-plex%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/plex/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fplex%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plex.tv&#34;&gt;Plex&lt;/a&gt; organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plex.tv&#34;&gt;&lt;img src=&#34;http://the-gadgeteer.com/wp-content/uploads/2015/10/plex-logo-e1446990678679.png&#34; alt=&#34;plex&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/plex:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases with Focal baseimage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;bionic&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED - Stable releases with Bionic baseimage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;Webui can be found at &lt;code&gt;&amp;lt;your-ip&amp;gt;:32400/web&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;** Note about updates, if there is no value set for the VERSION variable, then no updates will take place.**&lt;/p&gt; &#xA;&lt;p&gt;** For new users, no updates will take place on the first run of the container as there is no preferences file to read your token from, to update restart the Docker container after logging in through the webui**&lt;/p&gt; &#xA;&lt;p&gt;Valid settings for VERSION are:-&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;IMPORTANT NOTE:- YOU CANNOT UPDATE TO A PLEXPASS ONLY (BETA) VERSION IF YOU ARE NOT LOGGED IN WITH A PLEXPASS ACCOUNT&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/strong&gt;: Let Docker handle the Plex Version, we keep our Dockerhub Endpoint up to date with the latest public builds. This is the same as leaving this setting out of your create command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/strong&gt;: will update plex to the latest version available that you are entitled to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;public&lt;/code&gt;&lt;/strong&gt;: will update plexpass users to the latest public version, useful for plexpass users that don&#39;t want to be on the bleeding edge but still want the latest public updates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;specific-version&amp;gt;&lt;/code&gt;&lt;/strong&gt;: will select a specific version (eg 0.9.12.4.1192-9a47d21) of plex to install, note you cannot use this to access plexpass versions if you do not have plexpass.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardware Acceleration&lt;/h2&gt; &#xA;&lt;h3&gt;Intel&lt;/h3&gt; &#xA;&lt;p&gt;Hardware acceleration users for Intel Quicksync will need to mount their /dev/dri video device inside of the container by passing the following command when running or creating the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--device=/dev/dri:/dev/dri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We will automatically ensure the abc user inside of the container has the proper permissions to access this device.&lt;/p&gt; &#xA;&lt;h3&gt;Nvidia&lt;/h3&gt; &#xA;&lt;p&gt;Hardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker&#34;&gt;https://github.com/NVIDIA/nvidia-docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re/create the docker container with the nvidia container runtime &lt;code&gt;--runtime=nvidia&lt;/code&gt; and add an environment variable &lt;code&gt;-e NVIDIA_VISIBLE_DEVICES=all&lt;/code&gt; (can also be set to a specific gpu&#39;s UUID, this can be discovered by running &lt;code&gt;nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv&lt;/code&gt; ). NVIDIA automatically mounts the GPU and drivers from your host into the plex docker.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  plex:&#xA;    image: lscr.io/linuxserver/plex:latest&#xA;    container_name: plex&#xA;    network_mode: host&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - VERSION=docker&#xA;      - PLEX_CLAIM= #optional&#xA;    volumes:&#xA;      - /path/to/library:/config&#xA;      - /path/to/tvseries:/tv&#xA;      - /path/to/movies:/movies&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=plex \&#xA;  --net=host \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e VERSION=docker \&#xA;  -e PLEX_CLAIM= `#optional` \&#xA;  -v /path/to/library:/config \&#xA;  -v /path/to/tvseries:/tv \&#xA;  -v /path/to/movies:/movies \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/plex:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--net=host&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Host Networking&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e VERSION=docker&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set whether to update plex or not - see Application Setup section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PLEX_CLAIM=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally you can obtain a claim token from &lt;a href=&#34;https://plex.tv/claim&#34;&gt;https://plex.tv/claim&lt;/a&gt; and input here. Keep in mind that the claim tokens expire within 4 minutes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Plex library location. &lt;em&gt;This can grow very large, 50gb+ is likely for a large collection.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /tv&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Media goes here. Add as many as needed e.g. &lt;code&gt;/movies&lt;/code&gt;, &lt;code&gt;/tv&lt;/code&gt;, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /movies&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Media goes here. Add as many as needed e.g. &lt;code&gt;/movies&lt;/code&gt;, &lt;code&gt;/tv&lt;/code&gt;, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;Optional Parameters&lt;/h2&gt; &#xA;&lt;p&gt;If you want to run the container in bridge network mode (instead of the recommended host network mode) you will need to specify ports. The &lt;a href=&#34;https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/&#34;&gt;official documentation for ports&lt;/a&gt; lists 32400 as the only required port. The rest of the ports are optionally used for specific purposes listed in the documentation. If you have not already claimed your server (first time setup) you need to set &lt;code&gt;PLEX_CLAIM&lt;/code&gt; to claim a server set up with bridge networking.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  -p 32400:32400 \&#xA;  -p 1900:1900/udp \&#xA;  -p 3005:3005 \&#xA;  -p 5353:5353/udp \&#xA;  -p 8324:8324 \&#xA;  -p 32410:32410/udp \&#xA;  -p 32412:32412/udp \&#xA;  -p 32413:32413/udp \&#xA;  -p 32414:32414/udp \&#xA;  -p 32469:32469&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The application accepts a series of environment variables to further customize itself on boot:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--device=/dev/dri:/dev/dri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add this option to your run command if you plan on using Quicksync hardware acceleration - see Application Setup section.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--device=/dev/dvb:/dev/dvb&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add this option to your run command if you plan on using dvb devices.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=plex&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=plex&amp;amp;query=%24.mods%5B%27plex%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it plex /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f plex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; plex&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/plex:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-plex/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull plex&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d plex&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/plex:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop plex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm plex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once plex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-plex.git&#xA;cd docker-plex&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/plex:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.05.22:&lt;/strong&gt; - Pin opencl version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.03.22:&lt;/strong&gt; - Increase verbosity of video device permissions fix, attempt to fix missing group rw.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.12.21:&lt;/strong&gt; - Install Intel drivers from the official repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.01.21:&lt;/strong&gt; - Deprecate &lt;code&gt;UMASK_SET&lt;/code&gt; in favor of UMASK in baseimage, see above for more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.12.20:&lt;/strong&gt; - Add latest Intel Compute packages from github repo for opencl support on latest gen igpu.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.11.20:&lt;/strong&gt; - Add Bionic branch make Focal default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.05.20:&lt;/strong&gt; - Update exposed ports and example docs for bridge mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.03.20:&lt;/strong&gt; - Remove udev hack (no longer needed), suppress uuid error in log during first start.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.12.19:&lt;/strong&gt; - Add variable for setting PLEX_CLAIM. Remove &lt;code&gt;/transcode&lt;/code&gt; volume mapping as it is now set via plex gui and defaults to a location under &lt;code&gt;/config&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.08.19:&lt;/strong&gt; - Add variable for setting UMASK.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.07.19:&lt;/strong&gt; - Fix permissions for tuner (/dev/dvb) devices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.05.19:&lt;/strong&gt; - Bugfix do not allow Root group for Intel QuickSync ownership rules.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.03.19:&lt;/strong&gt; - Switching to new Base images, shift to arm32v7 tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.03.19:&lt;/strong&gt; - Fix update logic for &lt;code&gt;VERSION=public&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.03.19:&lt;/strong&gt; - Switch to new api endpoints, enable beta (plex pass) updates for armhf and aarch64.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.02.19:&lt;/strong&gt; - Clean up plex pid after unclean stop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.19:&lt;/strong&gt; - Fix nvidia variables, add device variables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.01.19:&lt;/strong&gt; - Add pipeline logic, multi arch, and HW transcoding configuration; remove avahi service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.09.18:&lt;/strong&gt; - Rebase to ubuntu bionic, add udev package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.12.17:&lt;/strong&gt; - Fix continuation lines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.07.17:&lt;/strong&gt; - Add inspect commands to README, move to jenkins build and push.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.05.17:&lt;/strong&gt; - Add unrar package as per requests, for subzero plugin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.01.17:&lt;/strong&gt; - Use Plex environment variables from pms docker, change abc home folder to /app to alleviate usermod chowning library&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.01.17:&lt;/strong&gt; - Use case insensitive version variable matching rather than export and make lowercase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.10.16:&lt;/strong&gt; - Allow use of uppercase version variable&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.10.16:&lt;/strong&gt; - Add TZ info to README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.09.16:&lt;/strong&gt; - Add layer badges to README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.08.16:&lt;/strong&gt; - Add badges to README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.08.16:&lt;/strong&gt; - Rebased to xenial and s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.04.16:&lt;/strong&gt; - removed &lt;code&gt;/transcode&lt;/code&gt; volume support (upstream Plex change) and modified PlexPass download method to prevent unauthorised usage of paid PMS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.09.15:&lt;/strong&gt; - added optional support for volume transcoding (/transcode), and various typo fixes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.09.15:&lt;/strong&gt; - Changed to run chmod only once&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.09.15:&lt;/strong&gt; - Plex updated their download servers from http to https&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.08.15:&lt;/strong&gt; - Removed plexpass from routine, and now uses VERSION as a combination fix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.07.15:&lt;/strong&gt; - Moved autoupdate to be hosted by linuxserver.io and implemented bugfix thanks to ljm42.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.07.15:&lt;/strong&gt; - Now with ability to pick static version number.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.07.15:&lt;/strong&gt; - Now with autoupdates. (Hosted by fanart.tv)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.07.15:&lt;/strong&gt; - Fixed a mistake that allowed plex to run as user plex rather than abc (99:100). Thanks to double16 for spotting this.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-code-server</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/linuxserver/docker-code-server</id>
    <link href="https://github.com/linuxserver/docker-code-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;linuxserver/code-server&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fcode-server&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fcode-server?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-code-server/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-code-server/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/code-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/code-server.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-code-server/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-code-server%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/code-server/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fcode-server%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;Code-server&lt;/a&gt; is VS Code running on a remote server, accessible through the browser.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code on your Chromebook, tablet, and laptop with a consistent dev environment.&lt;/li&gt; &#xA; &lt;li&gt;If you have a Windows or Mac workstation, more easily develop for Linux.&lt;/li&gt; &#xA; &lt;li&gt;Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.&lt;/li&gt; &#xA; &lt;li&gt;Preserve battery life when you&#39;re on the go.&lt;/li&gt; &#xA; &lt;li&gt;All intensive computation runs on your server.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re no longer running excess instances of Chrome.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coder.com&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png&#34; alt=&#34;code-server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/code-server:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Stable releases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;focal&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated, &lt;code&gt;latest&lt;/code&gt; is rebased on focal) - Stable releases, based on Ubuntu Focal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;development&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;DEPRECATED (no longer updated) - Prereleases from their GitHub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;Access the webui at &lt;code&gt;http://&amp;lt;your-ip&amp;gt;:8443&lt;/code&gt;. For github integration, drop your ssh key in to &lt;code&gt;/config/.ssh&lt;/code&gt;. Then open a terminal from the top menu and set your github username and email via the following commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &#34;username&#34;&#xA;git config --global user.email &#34;email address&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hashed code-server password&lt;/h3&gt; &#xA;&lt;p&gt;How to create the &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#can-i-store-my-password-hashed&#34;&gt;hashed password&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  code-server:&#xA;    image: lscr.io/linuxserver/code-server:latest&#xA;    container_name: code-server&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - PASSWORD=password #optional&#xA;      - HASHED_PASSWORD= #optional&#xA;      - SUDO_PASSWORD=password #optional&#xA;      - SUDO_PASSWORD_HASH= #optional&#xA;      - PROXY_DOMAIN=code-server.my.domain #optional&#xA;      - DEFAULT_WORKSPACE=/config/workspace #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 8443:8443&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=code-server \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e PASSWORD=password `#optional` \&#xA;  -e HASHED_PASSWORD= `#optional` \&#xA;  -e SUDO_PASSWORD=password `#optional` \&#xA;  -e SUDO_PASSWORD_HASH= `#optional` \&#xA;  -e PROXY_DOMAIN=code-server.my.domain `#optional` \&#xA;  -e DEFAULT_WORKSPACE=/config/workspace `#optional` \&#xA;  -p 8443:8443 \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/code-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;web gui&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, if &lt;code&gt;PASSWORD&lt;/code&gt; or &lt;code&gt;HASHED_PASSWORD&lt;/code&gt; is not provided, there will be no auth.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e HASHED_PASSWORD=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional web gui password, overrides &lt;code&gt;PASSWORD&lt;/code&gt;, instructions on how to create it is below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD=password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUDO_PASSWORD_HASH=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally set sudo password via hash (takes priority over &lt;code&gt;SUDO_PASSWORD&lt;/code&gt; var). Format is &lt;code&gt;$type$salt$hashed&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROXY_DOMAIN=code-server.my.domain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, this domain will be proxied for subdomain proxying. See &lt;a href=&#34;https://github.com/cdr/code-server/raw/master/docs/FAQ.md#sub-domains&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DEFAULT_WORKSPACE=/config/workspace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If this optional variable is set, code-server will open this directory by default&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=code-server&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=code-server&amp;amp;query=%24.mods%5B%27code-server%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it code-server /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-code-server/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d code-server&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/code-server:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm code-server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once code-server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-code-server.git&#xA;cd docker-code-server&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/code-server:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.02.22:&lt;/strong&gt; - Install using the official tarballs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.12.21:&lt;/strong&gt; - Add &lt;code&gt;install-extension&lt;/code&gt; as a helper for mods to install extensions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.12.21:&lt;/strong&gt; - Add &lt;code&gt;DEFAULT_WORKSPACE&lt;/code&gt; env var.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.11.21:&lt;/strong&gt; - Rebase to Ubuntu focal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.09.21:&lt;/strong&gt; - Fix slow &lt;code&gt;chown&lt;/code&gt; on large workspace (contents of workspace folder no longer chowned).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.07.21:&lt;/strong&gt; - Bump node to 14 to fix builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.05.21:&lt;/strong&gt; - Fix doc link&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.02.20:&lt;/strong&gt; - Allow setting gui password via hash using env var &lt;code&gt;HASHED_PASSWORD&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.12.20:&lt;/strong&gt; - Allow setting sudo password via hash using env var &lt;code&gt;SUDO_PASSWORD_HASH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add --domain-proxy support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.05.20:&lt;/strong&gt; - Shrink images, install via yarn, fix arm32v7 build.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.20:&lt;/strong&gt; - Switch to multi-arch images, install via npm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.04.20:&lt;/strong&gt; - Update start arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Structural changes required for v3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.01.20:&lt;/strong&gt; - Fix artifact url retrieval from github.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.10.19:&lt;/strong&gt; - Upgrade to v2 builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.09.19:&lt;/strong&gt; - Update project logo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.09.19:&lt;/strong&gt; - Add development builds/tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.07.19:&lt;/strong&gt; - Add optional sudo access.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.07.19:&lt;/strong&gt; - Add nano.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.19:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SL-Alpha-X-Team/Alpha-X-WA-Bot-Installer</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/SL-Alpha-X-Team/Alpha-X-WA-Bot-Installer</id>
    <link href="https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot-Installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Alpha-X-WA-Bot Installer 🔱&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;&lt;b&gt;👾 The Alpha-X Whatsapp User Bot 🍁&lt;/b&gt;&lt;/h1&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;~ ᴡᴏʀʟᴅ ꜰɪʀꜱᴛ ꜰᴜʟʟ ᴄᴜꜱᴛᴏᴍɪᴢᴀʙʟᴇ ᴜꜱᴇʀ ʙᴏᴛ ꜰᴏʀ ᴡʜᴀᴛꜱᴀᴘᴘ ~&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/SL-Alpha-X-Team&#34;&gt;&lt;img title=&#34;Logo&#34; src=&#34;https://telegra.ph/file/c265e654e3ec87c78d984.jpg&#34; width=&#34;300&#34; height=&#34;280&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team&#34;&gt; &lt;/a&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/SL-Alpha-X-Team&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/SL-Alpha-X-Team&#34;&gt;&lt;img title=&#34;Alpha-X-Tm&#34; src=&#34;https://img.shields.io/badge/Alpha_X_team-black?colorA=inactive&amp;amp;colorB=purple&amp;amp;style=social&amp;amp;logo=github&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h1&gt; 🔎 What is Alpha-X 🔎&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;Alpha-X ,&lt;/strong&gt; is a WhatsApp helper bot written by &lt;a href=&#34;https://github.com/Quiec&#34;&gt;Yusuf Usta&lt;/a&gt; and edited by &lt;a href=&#34;https://github.com/SL-Alpha-X-Team&#34;&gt;SL-Alpha-X-Team&lt;/a&gt;. Does not log into your account It is written on WhatsApp Web API. 🍂&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h1&gt; &amp;lt;💎&amp;gt; Alpha-X &amp;lt;💎&amp;gt; &lt;/h1&gt; &#xA; &lt;pre&gt;&lt;code&gt;Alpha-X Bot - Alpha Userbot is Open Source software open to development. &#xA;The user is responsible for all consequences that may arise from incorrect or misuse. &#xA;Since it is an open source project, anyone can copy the software, add and remove,&#xA;and use it in a way that they customize. In addition, plug-in support enables users to &#xA;install their own plugins to the original software and use them as they wish.&#xA;Using the bot out of purpose will explicitly ban you.&#xA;Usage is entirely the user&#39;s responsibility, Alpha Userbot is an &#xA;infrastructure only. Just as the operating system is not responsible &#xA;for the work done with the programs that are installed later, Alpha-X &#xA;is not responsible for the usage purpose and method of the users.&#xA;Marketing Alpha-X for money, making it available or having any material value&#xA;ıt is strictly forbidden to offer it for sale with anything. All legal investigations that may arise&#xA;the user is responsible.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt; 📢 Guide 📢 &lt;/h2&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://t.me/AlphaX_SUPPORT&#34;&gt;Join For Support &amp;amp; Helps On Telegram.&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://t.me/AlphaX_plugin&#34;&gt;New Telegram Plugin Group. &lt;/a&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://bit.ly/BOT_SUPPORT&#34;&gt;ꜱᴜᴘᴘᴏʀᴛ ɢʀᴏᴜᴘ&lt;/a&gt; | &lt;a href=&#34;https://Wa.me/947772978164&#34;&gt;ꜱʟ-ᴀʟᴘʜᴀ&lt;/a&gt; | &lt;a href=&#34;https://Wa.me/94763983965&#34;&gt;ʜᴀɴꜱᴀᴋᴀʙʀᴏ |&lt;/a&gt;&lt;/p&gt;&#xA; &lt;a href=&#34;https://Wa.me/94763983965&#34;&gt; &lt;/a&gt;&#xA; &lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://Wa.me/94763983965&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot/fork&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/SL-Alpha-X-Team/Alpha-X-WA-Bot?label=Fork&amp;amp;style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/SL-Alpha-X-Team/Alpha-X-WA-Bot?style=social&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/SL-Alpha-X-Team/Alpha-X-WA-Bot?color=purple&amp;amp;label=Repo%20Size&amp;amp;style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/SL-Alpha-X-Team/Alpha-X-WA-Bot?color=purple&amp;amp;label=Lisance&amp;amp;style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/SL-Alpha-X-Team/Alpha-X-WA-Bot?color=purple&amp;amp;label=Javascript&amp;amp;style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/SL-Alpha-X-Team/Alpha-X-WA-Bot&#34;&gt; &lt;img src=&#34;https://img.shields.io/static/v1?label=Author&amp;amp;message=AlphaXteam&amp;amp;color=purple&amp;amp;style=plastic&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://t.me/SL_AlphaX_Team&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Telegram-AlphaX%20Main-purple&amp;amp;style=plastic&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h1&gt; 🛃 Simple Method 🛃&lt;/h1&gt; &#xA; &lt;h3&gt;&lt;code&gt;• Get QR Code Using Repl.it ♻️&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Need a &lt;strong&gt;PC&lt;/strong&gt; for get qr and need a &lt;strong&gt;PHONE&lt;/strong&gt; to scan the qr.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://replit.com/@AlphaXteam/Alpha-X-Bot-QR&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/SL-Alpha-X-Team/Alpha-X-WA-Bot&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;&lt;code&gt;• For Termux Users 📲 [ RUN THIS CODE ON TERMUX ] 👇&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Need &lt;strong&gt;2 PHONES&lt;/strong&gt; , 1 for get qr &amp;amp; other one for scan the qr.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -L https://tinyurl.com/Alpha-X-QR-CODE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;• Watch tutorial&lt;/strong&gt; &lt;a href=&#34;https://youtu.be/6PpRFnr2dSg&#34;&gt;Video&lt;/a&gt; &lt;strong&gt;to get qr using termux&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;h3&gt;&lt;code&gt;• Deploy To Heroku 🚀&lt;/code&gt;&lt;/h3&gt; &#xA; &lt;h1&gt;fork this repo &lt;code&gt;if it doesn&#39;t working&lt;/code&gt; and make installer your self then deploy 🔩️&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/SL-Alpha-X/Alpha-X-WA-Bot-Installer&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Click the logo to watch Bot tutorial video ✅&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtube.com/watch?v=en4FLOsGRJY&#34;&gt;&lt;img title=&#34;Logo&#34; src=&#34;https://telegra.ph/file/b2494d5bc4d55ebab9980.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA; &lt;a href=&#34;https://youtube.com/watch?v=en4FLOsGRJY&#34;&gt; &#xA;  &lt;hr&gt; &lt;h1&gt; ⚠️ Warning! ⚠️️&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Due to Userbot ; Your WhatsApp account may be banned.&#xA;This is an open source project, you are responsible for everything you do. &#xA;Absolutely, Alpha-X executives do not accept responsibility.&#xA;By establishing the Alpha-X , you are deemed to have accepted these responsibilities.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;Be careful using using this commands 👇&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;add , remove , promote , demote&lt;/strong&gt; [ dont remove up to 1 person at same time ] it may banned your account from whatsapp 🚫&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;a href=&#34;https://youtube.com/watch?v=en4FLOsGRJY&#34;&gt; &#xA; &lt;hr&gt; &lt;/a&gt;&#xA;&lt;details&gt;&#xA; &lt;a href=&#34;https://youtube.com/watch?v=en4FLOsGRJY&#34;&gt; &lt;summary&gt;&lt;b&gt;&lt;h1 align=&#34;center&#34;&gt;Features 🔥 ==&lt;/h1&gt;&lt;/b&gt;&lt;/summary&gt; &lt;p align=&#34;left&#34;&gt; &lt;/p&gt;&lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; install &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Install external plugins. &lt;br&gt; &lt;code&gt;⚠️️ Warn:&lt;/code&gt; Get plugins only from &lt;a href=&#34;https://t.me/AlphaXplugin&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; plugin&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows the plugins you have installed.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; remove&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Removes the plugin.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; admin&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Admin menu.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; ban &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Ban someone in the group. Reply to message or tag a person to use command.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; gname &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Change group name.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; gdesc&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Change group discription.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; dis &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Disappearing message on/off. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .dis on/off&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; reset&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Reset group invitation link.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; gpp&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Set group profile picture&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; add&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Adds someone to the group.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; promote &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Makes any person an admin.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; demote &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Takes the authority of any admin.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; mute &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Mute the group chat. Only the admins can send a message. ⌨️ Example: .mute &amp;amp; .mute 5m etc&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; unmute &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Unmute the group chat. Anyone can send a message.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; invite &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Provides the group&#39;s invitation link.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; afk &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It makes you AFK - Away From Keyboard.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; art pack&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Beautifull artpack with more than 100 messages.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; aspm &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; This command for any emergency situation about any kind of WhatsApp SPAM in Group&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; alag &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; This command for any emergency situation about any kind of WhatsApp SPAM in Chat&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; linkblock &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Activates the block link tool. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .linkblock on / off&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; CrAsH&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; send BUG VIRUS to group.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; CrAsH high&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; send BUG VIRUS to group untill you stop.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; -carbon&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; clear&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Clears all the messages from the chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; qr &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; To create an qr code from the word you give.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; bcode &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; To create an barcode from the word you give.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; compliment&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It sends complimentry sentenses.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; toaudio&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Converts video to sound.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; toimage&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Converts the sticker to a photo.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tovideo&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Converts animated stickers to video.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; deepai&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Runs the most powerful artificial intelligence tools using artificial neural networks.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; details&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Displays metadata data of group or person.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; dict &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Use it as a dictionary. Eg: .dict enUS;lead For supporting languages send •.lngcode•&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; dst&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download status you repled.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; emedia&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It is a plugin with more than 25 media tools.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; emoji &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; You can get Emoji as image.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; print &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Prints the inside of the file on the server.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; bashmedia &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends audio, video and photos inside the server. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; video.mp4 &amp;amp;&amp;amp; media/gif/pic.mp4&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; addserver&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Uploads image, audio or video to the server.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; term &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Allows to run the command on the server&#39;s shell.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; mediainfo&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows the technical information of the replied video.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pmsend &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends a private message to the replied person.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pmttssend &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends a private voice message to the respondent.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; ffmpeg &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Applies the desired ffmpeg filter to the video. ⌨️ Example: .ffmpeg fade=in:0:30&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; filter &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It adds a filter. If someone writes your filter, it send the answer. If you just write .filter, it show&#39;s your filter list.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; stop &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Stops the filter you added previously.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; bgmlist&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Bgm List.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; github &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It Send Github User Data. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .github WhatsApp&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; welcome&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It sets the welcome message. If you leave it blank it shows the welcome message.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; goodbye&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sets the goodbye message. If you leave blank, it show&#39;s the goodbye message.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; help&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Gives information about using the bot from the Help menu.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; varset &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Changes the text of modules like alive, afk etc..&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; restart&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Restart bot.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; poweroff&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shutdown bot.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; dyno&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Check heroku dyno usage&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; setvar &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Set heroku config var&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; delvar &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Delete heroku config var&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; getvar &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get heroku config var&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; hpmod &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; To get mod apps info.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; insult&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It gives random insults.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; locate&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It send your location. &lt;br&gt; &lt;code&gt;⚠️️ Warn:&lt;/code&gt; Please open your location before using command!&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; logmsg&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Saves the message you reply to your private number. &lt;br&gt; &lt;code&gt;⚠️️ Warn:&lt;/code&gt; Does not support animated stickers!&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; logomaker&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows logomaker tools with unlimited access.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; meme &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Photo memes you replied to.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; movie &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows movie info.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; neko&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Replied messages will be added to nekobin.com.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; song &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Uploads the song you wrote.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; video &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Downloads video from YouTube.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; fb &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download video from facebook.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tiktok &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download tiktok video.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; notes&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows all your existing notes.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; save &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Reply a message and type .save or just use .save &#xA;  &lt;your note&gt;&#xA;    without replying&#xA;  &lt;/your&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; deleteNotes&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Deletes &lt;em&gt;all&lt;/em&gt; your saved notes.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; ocr &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Reads the text on the photo you have replied.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pinimg &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Downloas images from Pinterest.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; playst &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get app details from play store.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; profile&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Profile menu.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; getpp&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get pofile picture.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; setbio &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Set your about.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; getbio&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get user about.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; archive&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Archive chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; unarchive&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Unarchive chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pin&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Archive chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; unpin&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Unarchive chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pp&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Makes the profile photo what photo you reply.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; kickme&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It kicks you from the group you are using it in.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; block &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Block user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; unblock &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Unblock user.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; jid &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Giving user&#39;s JID.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; rdmore &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Add readmore to your message &amp;gt;&amp;gt; Use # to get readmore.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; removebg &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Removes the background of the photos.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; report &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends reports to group admins.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; roll&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Roll dice randomly.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; scam &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Creates 5 minutes of fake actions.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; scan &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Checks whether the entered number is registered on WhatApp.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; trt&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It translates with Google Translate. You must reply any message. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .trt en si (From English to Sinhala)&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; antilink &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Activates the Antilink tool. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .antilink on / off&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; autobio &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Add live clock to your bio! &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; .autobio on / off&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; detectlang&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Guess the language of the replied message.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; currency&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tts &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It converts text to sound.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; music &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Uploads the song you wrote.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; smp3 &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get song as a mp3 documet file&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; mp4 &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Downloads video from YouTube.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; yt &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It searchs on YouTube.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; wiki &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Searches query on Wikipedia.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; img &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Searches for related pics on Google.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; lyric &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Finds the lyrics of the song.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; covid &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows the daily and overall covid table of more than 15 countries.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; ss &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Takes a screenshot from the page in the given link.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; simi &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Are you bored? ... Fool around with SimSimi. ... World first popular Chatbot for daily conversation.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; spdf &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Site to pdf file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; insta &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Downloads videos or photos from Instagram.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; animesay &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It writes the text inside the banner the anime girl is holding&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; changesay &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Turns the text into the change my mind poster.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; trumpsay &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Converts the text to Trump&#39;s tweet.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; audio spam&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends the replied audio as spam.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; foto spam&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends the replied photo as spam.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; sticker spam&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Convert the replied photo or video to sticker and send it as spam.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; vid spam&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; killspam&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Stops spam command.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; spam &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It spam until you stop it. ⌨️ Example: .spam test&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; spotify &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get music details from spotify.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; st&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It converts your replied photo or video to sticker.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; sweather&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Gives you the weekly interpretations of space weather observations provided by the Space Weather Research Center (SWRC) for a p.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; alive &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Does bot work?&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; sysd&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows the system properties.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tagadmin&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tg &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Tags everyone in the group.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; pmall&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Sends the replied message to all members in the group.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; tblend &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Applies the selected TBlend effect to videos.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; link&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; The image you reply to uploads to telegra.ph and provides its link.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; unvoice&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Converts audio to sound recording.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; up&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Checks the update your bot.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; up now&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It makes updates.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; voicy&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It converts audio to text.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; wp&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; It sends high resolution wallpapers.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; wame &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Get a link to the user chat.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; weather &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shows the weather.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; speedtest &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Measures Download and Upload speed. &lt;br&gt; &lt;code&gt;💡 Example:&lt;/code&gt; speedtest user // speedtest server&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; ping&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Measures your ping.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; short &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Shorten the long link.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; calc &lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Performs simple math operations.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; xapi&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Xteam API key info.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; glowtext&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; send random glowtext by given word &amp;gt; with 140+ beautifull font styles.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; quote&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Send random quotes.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; vpn&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download ehi, sks, v2ray in one place.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; mfire&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download files using mediafire likns.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; mega&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download files using mega links.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;🤹️ command:&lt;/code&gt; down&lt;br&gt; &lt;code&gt;📍 description:&lt;/code&gt; Download files using direct links.&lt;/p&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;🤩 New features comming soon...&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h4&gt;E-Media Plugin Commands 🛠️&lt;/h4&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Command 💻&lt;/th&gt; &#xA;    &lt;th&gt;Description ℹ️&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4enhance&lt;/td&gt; &#xA;    &lt;td&gt;It improves the quality of the video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;x2mp4&lt;/td&gt; &#xA;    &lt;td&gt;It reduces the quality of the video by 2 times.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;x4mp4&lt;/td&gt; &#xA;    &lt;td&gt;It reduces the quality of the video by 4 times.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4reverse&lt;/td&gt; &#xA;    &lt;td&gt;Plays the video in reverse.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4blur&lt;/td&gt; &#xA;    &lt;td&gt;Blurs the video background.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4vintage&lt;/td&gt; &#xA;    &lt;td&gt;Applies a vintage effect to the video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4bw&lt;/td&gt; &#xA;    &lt;td&gt;Applies a monochrome effect to the video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4edge&lt;/td&gt; &#xA;    &lt;td&gt;It calculates the depth of the viden and applies the neon edge effect accordingly.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp4image&lt;/td&gt; &#xA;    &lt;td&gt;Converts photo to 5 seconds video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;gif&lt;/td&gt; &#xA;    &lt;td&gt;It makes the video gif.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;agif&lt;/td&gt; &#xA;    &lt;td&gt;Makes the video an audio gif.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;spectrum&lt;/td&gt; &#xA;    &lt;td&gt;It converts the spectrum of sound into video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;avec&lt;/td&gt; &#xA;    &lt;td&gt;Converts the frequency range of the sound to 3D video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;waves&lt;/td&gt; &#xA;    &lt;td&gt;It converts the wavelengths of sound into video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;frequency&lt;/td&gt; &#xA;    &lt;td&gt;Converts the frequency of the sound to video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;volumeaudio&lt;/td&gt; &#xA;    &lt;td&gt;Converts the decibel value of sound to video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;cqtaudio&lt;/td&gt; &#xA;    &lt;td&gt;Converts the cqt value of audio to video.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3eq&lt;/td&gt; &#xA;    &lt;td&gt;Adjusts the sound to a crystal clear level.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3bass&lt;/td&gt; &#xA;    &lt;td&gt;It add more bass to sound.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3low&lt;/td&gt; &#xA;    &lt;td&gt;It makes the sound deep and slow.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3pitch&lt;/td&gt; &#xA;    &lt;td&gt;It refines and accelerates the sound.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3crusher&lt;/td&gt; &#xA;    &lt;td&gt;It distorts the sound, makes it ridiculous.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3reverse&lt;/td&gt; &#xA;    &lt;td&gt;Plays the sound in reverse.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;x2mp3&lt;/td&gt; &#xA;    &lt;td&gt;It speeds up the sound 2 times.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;mp3volume&lt;/td&gt; &#xA;    &lt;td&gt;It increases the sound level 6 times.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bwimage&lt;/td&gt; &#xA;    &lt;td&gt;Makes the photo black and white.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;vintageimage&lt;/td&gt; &#xA;    &lt;td&gt;Applies a vintage effect to the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;edgeimage&lt;/td&gt; &#xA;    &lt;td&gt;It calculates the depth of the photo and appropriately applies an edge effect.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;enhanceimage&lt;/td&gt; &#xA;    &lt;td&gt;It improves the quality of the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;grenimage&lt;/td&gt; &#xA;    &lt;td&gt;Applies a grain effect to the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;blurimage&lt;/td&gt; &#xA;    &lt;td&gt;Blurs the background of the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;h4&gt;Scam Commands 🛠️&lt;/h4&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Command 💻&lt;/th&gt; &#xA;    &lt;th&gt;Description ℹ️&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;scam typing&lt;/td&gt; &#xA;    &lt;td&gt;It shows you typing for 5 minutes.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;scam recording&lt;/td&gt; &#xA;    &lt;td&gt;It shows you as recording for 5 minutes.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;scam online&lt;/td&gt; &#xA;    &lt;td&gt;It shows you online for 5 minutes.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;scam stop&lt;/td&gt; &#xA;    &lt;td&gt;Stops fake actions.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;h4&gt;Deep AI Commands 🛠️&lt;/h4&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Command 💻&lt;/th&gt; &#xA;    &lt;th&gt;Description ℹ️&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;colorai&lt;/td&gt; &#xA;    &lt;td&gt;Colorizes the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;superai&lt;/td&gt; &#xA;    &lt;td&gt;It improves the image quality.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;dreamai&lt;/td&gt; &#xA;    &lt;td&gt;Applies a deepdream effect to the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;waifuai&lt;/td&gt; &#xA;    &lt;td&gt;It mixes the color palettes of photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;neuraltalkai&lt;/td&gt; &#xA;    &lt;td&gt;Explain the incident in the photo.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;toonai&lt;/td&gt; &#xA;    &lt;td&gt;Applies a cartoon effect to the face of image.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ttiai&lt;/td&gt; &#xA;    &lt;td&gt;Generates nonexistent photos from your sentence.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;moodai&lt;/td&gt; &#xA;    &lt;td&gt;It determines your mood from the sentence you write.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;textai&lt;/td&gt; &#xA;    &lt;td&gt;Creates a virtual story from your sentence.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;nudityai&lt;/td&gt; &#xA;    &lt;td&gt;Shows the NSFW value of the photo between 1 and 0.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;ganstyle&lt;/td&gt; &#xA;    &lt;td&gt;Combines pictures with the image link in Config Vars with the help of artificial intelligence.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt; 🎨 Websites ==&amp;gt; &lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://alpha-x.ml&#34;&gt;&lt;img title=&#34;Alpha-X-Tm&#34; src=&#34;https://img.shields.io/badge/Alpha_X_Team-black?colorA=9cf&amp;amp;colorB=purple&amp;amp;style=social&amp;amp;logo=smrt&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://alpha-x.ml/wa-bot&#34;&gt;&lt;img title=&#34;Alpha-X-Tm&#34; src=&#34;https://img.shields.io/badge/Alpha_X_Bot-black?colorA=9cf&amp;amp;colorB=purple&amp;amp;style=social&amp;amp;logo=starship&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://alpha-x.ml/bot-help&#34;&gt;&lt;img title=&#34;Alpha-X-Tm&#34; src=&#34;https://img.shields.io/badge/Alpha_X_Bot_Help-black?colorA=9cf&amp;amp;colorB=purple&amp;amp;style=social&amp;amp;logo=google&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h1&gt;&lt;em&gt;?&lt;/em&gt; F.A.Q &lt;em&gt;?&lt;/em&gt;&lt;/h1&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Answer a few frequently asked questions •••&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Can you read my messages ? 😷&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;This project is open source so all the codes are clear. Neither less no more ; you can look what you want. &lt;strong&gt;We absolutely do not have access to your accounts.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;What about our security ? 🔱&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;If you are concerned about security, you can install it on your own computer. If you think someone else has captured your data, simply click on &lt;strong&gt;Whatsapp&amp;gt; Three Dots&amp;gt; Whatsapp Web&amp;gt; Logout&lt;/strong&gt; from all sessions button.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Is it paid ❓&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Of course not.&lt;/strong&gt; It will never happen. But you can donate to us. You can reach us via &lt;a href=&#34;https://t.me/AlphaX_SUPPORT&#34;&gt;Telegram&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Can i edit this repo ? 😒&lt;/h3&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Of couse you can!&lt;/strong&gt; fork this and edit yourself. but &lt;strong&gt;we don&#39;t help you&lt;/strong&gt; and we are &lt;strong&gt;Not responsible&lt;/strong&gt; for your project. It may reason for banned you from bot 🚫, but i think you don&#39;t have anything to change :)&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt; License &lt;/h2&gt; &#xA; &lt;p&gt;This project is protected by &lt;code&gt;GNU General Public Licence v3.0&lt;/code&gt; license.&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h2&gt; ⚡ Developers 🔥 &lt;/h2&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;a href=&#34;https://github.com/SL-Alpha-X&#34;&gt;&lt;img src=&#34;https://github.com/SL-Alpha-X.png?size=110&#34; alt=&#34;SL ALPHA&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;a href=&#34;https://github.com/HansakaBro&#34;&gt;&lt;img src=&#34;https://github.com/HansakaBro.png?size=110&#34; alt=&#34;HansakaBro&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;a href=&#34;https://github.com/UviYaBro&#34;&gt;&lt;img src=&#34;https://github.com/UviYaBro.png?size=110&#34; alt=&#34;UviYaBro&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/SL-Alpha-X&#34;&gt;• sʟ-ᴀʟᴘʜᴀ-x •&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/HansakaBro&#34;&gt;• ʜᴀɴsᴀᴋᴀʙʀᴏ •&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://github.com/UviYaBro&#34;&gt;• ᴜᴠɪʏᴀʙʀᴏ •&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>nodejs/docker-node</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/nodejs/docker-node</id>
    <link href="https://github.com/nodejs/docker-node" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Docker Image for Node.js 🐳 🐢 🚀&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://registry.hub.docker.com/_/node/&#34;&gt;&lt;img src=&#34;http://dockeri.co/image/_/node&#34; alt=&#34;dockeri.co&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/docker-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/nodejs/docker-node.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34; title=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nodejs/docker-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/nodejs/docker-node.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34; title=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The official Node.js docker image, made with love by the node community.&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#what-is-nodejs&#34;&gt;What is Node.js?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#how-to-use-this-image&#34;&gt;How to use this image&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#create-a-dockerfile-in-your-nodejs-app-project&#34;&gt;Create a &lt;code&gt;Dockerfile&lt;/code&gt; in your Node.js app project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#best-practices&#34;&gt;Best Practices&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#run-a-single-nodejs-script&#34;&gt;Run a single Node.js script&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#verbosity&#34;&gt;Verbosity&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#dockerfile&#34;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-run&#34;&gt;Docker Run&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#npm-run&#34;&gt;NPM run&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#image-variants&#34;&gt;Image Variants&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodeversion&#34;&gt;&lt;code&gt;node:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodealpine&#34;&gt;&lt;code&gt;node:alpine&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodebuster&#34;&gt;&lt;code&gt;node:buster&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodestretch&#34;&gt;&lt;code&gt;node:stretch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#nodeslim&#34;&gt;&lt;code&gt;node:slim&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#supported-docker-versions&#34;&gt;Supported Docker versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#supported-nodejs-versions&#34;&gt;Supported Node.js versions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#governance-and-current-members&#34;&gt;Governance and Current Members&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-members&#34;&gt;Docker Working Group Members&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-collaborators&#34;&gt;Docker Working Group Collaborators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#emeritus&#34;&gt;Emeritus&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/#docker-working-group-members-1&#34;&gt;Docker Working Group Members&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;What is Node.js?&lt;/h2&gt; &#xA;&lt;p&gt;Node.js is a platform built on Chrome&#39;s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;http://nodejs.org&#34;&gt;http://nodejs.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use this image&lt;/h2&gt; &#xA;&lt;h3&gt;Create a &lt;code&gt;Dockerfile&lt;/code&gt; in your Node.js app project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# specify the node base image with your desired version node:&amp;lt;version&amp;gt;&#xA;FROM node:16&#xA;# replace this with your application&#39;s default port&#xA;EXPOSE 8888&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then build and run the Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t my-nodejs-app .&#xA;$ docker run -it --rm --name my-running-app my-nodejs-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;version: &#34;2&#34;&#xA;services:&#xA;  node:&#xA;    image: &#34;node:8&#34;&#xA;    user: &#34;node&#34;&#xA;    working_dir: /home/node/app&#xA;    environment:&#xA;      - NODE_ENV=production&#xA;    volumes:&#xA;      - ./:/home/node/app&#xA;    expose:&#xA;      - &#34;8081&#34;&#xA;    command: &#34;npm start&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker Compose example copies your current directory (including node_modules) to the container. It assumes that your application has a file named &lt;a href=&#34;https://docs.npmjs.com/files/package.json&#34;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; defining &lt;a href=&#34;https://docs.npmjs.com/misc/scripts#default-values&#34;&gt;start script&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Best Practices&lt;/h3&gt; &#xA;&lt;p&gt;We have assembled a &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/docs/BestPractices.md&#34;&gt;Best Practices Guide&lt;/a&gt; for those using these images on a daily basis.&lt;/p&gt; &#xA;&lt;h3&gt;Run a single Node.js script&lt;/h3&gt; &#xA;&lt;p&gt;For many simple, single file projects, you may find it inconvenient to write a complete &lt;code&gt;Dockerfile&lt;/code&gt;. In such cases, you can run a Node.js script by using the Node.js Docker image directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --rm --name my-running-script -v &#34;$PWD&#34;:/usr/src/app -w /usr/src/app node:8 node your-daemon-or-script.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verbosity&lt;/h3&gt; &#xA;&lt;p&gt;Prior to 8.7.0 and 6.11.4 the docker images overrode the default npm log level from &lt;code&gt;warn&lt;/code&gt; to &lt;code&gt;info&lt;/code&gt;. However due to improvements to npm and new Docker patterns (e.g. multi-stage builds) the working group reached a &lt;a href=&#34;https://github.com/nodejs/docker-node/issues/528&#34;&gt;consensus&lt;/a&gt; to revert the log level to npm defaults. If you need more verbose output, please use one of the following methods to change the verbosity level.&lt;/p&gt; &#xA;&lt;h4&gt;Dockerfile&lt;/h4&gt; &#xA;&lt;p&gt;If you create your own &lt;code&gt;Dockerfile&lt;/code&gt; which inherits from the &lt;code&gt;node&lt;/code&gt; image you can simply use &lt;code&gt;ENV&lt;/code&gt; to override &lt;code&gt;NPM_CONFIG_LOGLEVEL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM node&#xA;ENV NPM_CONFIG_LOGLEVEL info&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Run&lt;/h4&gt; &#xA;&lt;p&gt;If you run the node image using &lt;code&gt;docker run&lt;/code&gt; you can use the &lt;code&gt;-e&lt;/code&gt; flag to override &lt;code&gt;NPM_CONFIG_LOGLEVEL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -e NPM_CONFIG_LOGLEVEL=info node ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NPM run&lt;/h4&gt; &#xA;&lt;p&gt;If you are running npm commands you can use &lt;code&gt;--loglevel&lt;/code&gt; to control the verbosity of the output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run node npm --loglevel=warn ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Image Variants&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;node&lt;/code&gt; images come in many flavors, each designed for a specific use case. All of the images contain pre-installed versions of &lt;code&gt;node&lt;/code&gt;, &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://yarnpkg.com&#34;&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/a&gt;. For each supported architecture, the supported variants are different. In the file: &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/versions.json&#34;&gt;versions.json&lt;/a&gt;, it lists all supported variants for all of the architectures that we support now.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of. This tag is based off of &lt;a href=&#34;https://registry.hub.docker.com/_/buildpack-deps/&#34;&gt;&lt;code&gt;buildpack-deps&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;buildpack-deps&lt;/code&gt; is designed for the average user of docker who has many images on their system. It, by design, has a large number of extremely common Debian packages. This reduces the number of packages that images that derive from it need to install, thus reducing the overall size of all images on your system.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:alpine&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on the popular &lt;a href=&#34;http://alpinelinux.org&#34;&gt;Alpine Linux project&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/alpine&#34;&gt;the &lt;code&gt;alpine&lt;/code&gt; official image&lt;/a&gt;. Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.&lt;/p&gt; &#xA;&lt;p&gt;This variant is highly recommended when final image size being as small as possible is desired. The main caveat to note is that it does use &lt;a href=&#34;http://www.musl-libc.org&#34;&gt;musl libc&lt;/a&gt; instead of &lt;a href=&#34;http://www.etalabs.net/compare_libcs.html&#34;&gt;glibc and friends&lt;/a&gt;, so certain software might run into issues depending on the depth of their libc requirements. However, most software doesn&#39;t have an issue with this, so this variant is usually a very safe choice. See &lt;a href=&#34;https://news.ycombinator.com/item?id=10782897&#34;&gt;this Hacker News comment thread&lt;/a&gt; for more discussion of the issues that might arise and some pro/con comparisons of using Alpine-based images. One common issue that may arise is a missing shared library required for use of &lt;code&gt;process.dlopen&lt;/code&gt;. To add the missing shared libraries to your image, adding the &lt;a href=&#34;https://pkgs.alpinelinux.org/package/edge/main/x86/libc6-compat&#34;&gt;&lt;code&gt;libc6-compat&lt;/code&gt;&lt;/a&gt; package in your Dockerfile is recommended: &lt;code&gt;apk add --no-cache libc6-compat&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To minimize image size, it&#39;s uncommon for additional related tools (such as &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;bash&lt;/code&gt;) to be included in Alpine-based images. Using this image as a base, add the things you need in your own Dockerfile (see the &lt;a href=&#34;https://hub.docker.com/_/alpine/&#34;&gt;&lt;code&gt;alpine&lt;/code&gt; image description&lt;/a&gt; for examples of how to install packages if you are unfamiliar).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:buster&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on version 10 of &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/debian&#34;&gt;the &lt;code&gt;debian&lt;/code&gt; official image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:stretch&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image is based on version 9 of &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, available in &lt;a href=&#34;https://hub.docker.com/_/debian&#34;&gt;the &lt;code&gt;debian&lt;/code&gt; official image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;node:slim&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This image does not contain the common packages contained in the default tag and only contains the minimal packages needed to run &lt;code&gt;node&lt;/code&gt;. Unless you are working in an environment where &lt;em&gt;only&lt;/em&gt; the Node.js image will be deployed and you have space constraints, we highly recommend using the default image of this repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/node/raw/master/LICENSE&#34;&gt;License information&lt;/a&gt; for the software contained in this image. &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/LICENSE&#34;&gt;License information&lt;/a&gt; for the Node.js Docker project.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Docker versions&lt;/h2&gt; &#xA;&lt;p&gt;This image is officially supported on Docker version 1.9.1.&lt;/p&gt; &#xA;&lt;p&gt;Support for older versions (down to 1.6) is provided on a best-effort basis.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://docs.docker.com/installation/&#34;&gt;the Docker installation documentation&lt;/a&gt; for details on how to upgrade your Docker daemon.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Node.js versions&lt;/h2&gt; &#xA;&lt;p&gt;This project will support Node.js versions as still under active support as per the &lt;a href=&#34;https://github.com/nodejs/Release&#34;&gt;Node.js release schedule&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Governance and Current Members&lt;/h2&gt; &#xA;&lt;p&gt;The Node.js Docker Image is governed by the Docker Working Group. See &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt; to learn more about the group&#39;s structure and &lt;a href=&#34;https://raw.githubusercontent.com/nodejs/docker-node/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for guidance about the expectations for all contributors to this project.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Working Group Members&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hans Kristian Flaatten (&lt;a href=&#34;https://github.com/starefossen&#34;&gt;starefossen&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Hugues Malphettes (&lt;a href=&#34;https://github.com/hmalphettes&#34;&gt;hmalphettes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;John Mitchell (&lt;a href=&#34;https://github.com/jlmitch5&#34;&gt;jlmitch5&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Working Group Collaborators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mikeal Rogers (&lt;a href=&#34;https://github.com/mikeal&#34;&gt;mikeal&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Laurent Goderre (&lt;a href=&#34;https://github.com/LaurentGoderre&#34;&gt;LaurentGoderre&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Simen Bekkhus (&lt;a href=&#34;https://github.com/SimenB&#34;&gt;SimenB&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Peter Dave Hello (&lt;a href=&#34;https://github.com/PeterDaveHello&#34;&gt;PeterDaveHello&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Emeritus&lt;/h3&gt; &#xA;&lt;h4&gt;Docker Working Group Members&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Christopher Horrell (&lt;a href=&#34;https://github.com/chorrell&#34;&gt;chorrell&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Peter Petrov (&lt;a href=&#34;https://github.com/pesho&#34;&gt;pesho&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>InzynieriaOprogramowaniaAGH/MDO2022_S</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/InzynieriaOprogramowaniaAGH/MDO2022_S</id>
    <link href="https://github.com/InzynieriaOprogramowaniaAGH/MDO2022_S" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Metodyki DevOps 2021/2022&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>vimagick/dockerfiles</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/vimagick/dockerfiles</id>
    <link href="https://github.com/vimagick/dockerfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐳 A collection of delicious docker recipes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dockerfiles&lt;/h1&gt; &#xA;&lt;p&gt;A collection of delicious docker recipes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/vimagick/dockerfiles&#34;&gt;&lt;img src=&#34;https://travis-ci.org/vimagick/dockerfiles.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) &lt;a href=&#34;https://github.com/vimagick/dockerfiles&#34;&gt;https://github.com/vimagick/dockerfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🪲&lt;/span&gt; &lt;a href=&#34;https://github.com/vimagick/dockerfiles/issues&#34;&gt;https://github.com/vimagick/dockerfiles/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📖&lt;/span&gt; &lt;a href=&#34;https://github.com/vimagick/dockerfiles/wiki&#34;&gt;https://github.com/vimagick/dockerfiles/wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🐳&lt;/span&gt; &lt;a href=&#34;https://hub.docker.com/u/vimagick/&#34;&gt;https://hub.docker.com/u/vimagick/&lt;/a&gt; (x86)&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🐳&lt;/span&gt; &lt;a href=&#34;https://hub.docker.com/u/easypi/&#34;&gt;https://hub.docker.com/u/easypi/&lt;/a&gt; (arm)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Affiliates&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.vultr.com/?ref=6821947&#34;&gt;&lt;img src=&#34;https://www.vultr.com/media/banner_1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; caddy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; dsniff&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ettercap&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; freelan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; gitbook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; gitolite&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; hashcat&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; imagemagick&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ipset&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; irc&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; libreswan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; nagios&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; openswan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; postfix&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; pritunl&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; pyinstaller&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; rtmpdump&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; sensu&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ssf&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; tshark&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; youtube-upload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Big Data&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; airflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ambari&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cmak (&lt;del&gt;kafka-manager&lt;/del&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; datax &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; kafka-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; luigi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nifi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openrefine&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prestodb (official)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prestosql (community)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; superset-arm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IoT&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;hass&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hbdg&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; node-red &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mqtt-io-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mosquitto &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tile38-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Automation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cronicle&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; drone-rsync-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; drone-scp-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; drone-ssh-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; errbot &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hubot &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jenkins-arm &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Machine Learning&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ludwig&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cluster&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ggr&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ggr-ui&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jsonwire-grid&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zookeeper-arm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Monitor&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; collectd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; elastalert&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; glances&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; graphite&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; influxdb&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; logstash&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; statsd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; telegraf&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; urlwatch &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vnstat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Daemon&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; alpine-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; apacheds&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; aria2 &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ariang&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cadvisor&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; casperjs &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; freegeoip&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; freeradius&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; frp &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; h2o&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; httpbin &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; monit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; moodle &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mosquitto&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; motion-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ndscheduler&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nfs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nginx&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ntopng&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nullmailer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nullmailer-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openhab&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openssh&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ot-frontend-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ot-recorder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ot-recorder-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; piknik&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; portia&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pure-ftpd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; redis-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rehook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rinetd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rslsync&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rsyncd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rsyslog&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; samba &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; samba-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; scrapyd &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; slacker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; swarm-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; taskd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tftpd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tmail &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; twemproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vsftpd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; webdis&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; webhook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; webkit &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Utility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; registry-cli&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; aircast-arm &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cmus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cmus-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; darkice &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; deface&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dvr-scan &lt;span&gt;📺&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; editly &lt;span&gt;📺&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ffmpeg&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ffmpeg-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ffserver &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; icecast &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; live555 &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; minidlna&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mpd &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; murmur&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; node-media-server-arm &lt;span&gt;📷&lt;/span&gt; &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; obs-web-arm &lt;span&gt;🕹&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openmeetings &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; paddle-ocr&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; plex &lt;span&gt;💰&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; red5 &lt;span&gt;👍&lt;/span&gt; &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; red5-arm &lt;span&gt;🚧&lt;/span&gt; &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rtmp-client-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rtmp-server &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shairplay-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shoutcast &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tesseract&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vnc2flv&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; youtube-dl &lt;span&gt;📺&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; youtube-worker &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Audio&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; audiowaveform&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; demucs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;discuz&lt;/del&gt; &lt;span&gt;🇨🇳&lt;/span&gt; &lt;span&gt;💀&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; django-cms&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dokuwiki &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gogs-arm &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hugo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hugo-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jamapi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; joomla&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; json-server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mantisbt&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mediagoblin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nginad&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nodebb &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; phpbb&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; phpmyadmin-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; phpvirtualbox-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; revive&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tabula&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; teleprompter&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tiddlywiki&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zoneminder &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;E-commerce&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; magento &lt;span&gt;🛍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; opencart &lt;span&gt;🛍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prestashop &lt;span&gt;🛍&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; aircrack-ng-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; amass&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; bro&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; clamav&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dsniff&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ferm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; grr&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hydra&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; iptables&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; kismet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; routersploit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; snort &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; snort3 &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sslsplit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wafw00f&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; webgoat&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Proxy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dante&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; delegated&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; fteproxy &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; fteproxy-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hans&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; haproxy-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; i2pd &lt;span&gt;🇷🇺&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; kcptun &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; microsocks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mtproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mysql-proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ngrok &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; obfsproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; polipo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; privoxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; privoxy-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; proxyhub&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowsocks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowsocks&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowsocks-libev &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowsocks-arm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowsocks-libev-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; spiped&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; squid&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; stunnel&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; stunnel-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tinyproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VPN&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dsvpn &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; n2n &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ocserv &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openconnect&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openconnect-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openvpn-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pptp&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pptp-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pptpd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shadowvpn&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; strongswan &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tinc &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tinc-arm &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wiregurad &lt;span&gt;🪲&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; xl2tpd&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DNS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; chinadns&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dnscrypt &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dnscrypt-proxy&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dnscrypt-server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dnsmasq&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dnsmasq-arm&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pdnsd&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3rd-party (sorted by basename)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; adguard/adguardhome&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ghcr.io/linuxserver/airsonic &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; archivebox/archivebox&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; docker.bintray.io/jfrog/artifactory-oss&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jeffail/benthos&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tutum/builder&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; calendso/calendso&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; browserless/chrome&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; certbot&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; codercom/code-server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; registry.gitlab.com/commento/commento&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; confluentinc &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cp-kafka-mqtt&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cp-kafka-rest&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ksqldb-cli&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ksqldb-server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; streamsets/datacollector&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; daskdev &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dask&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dask-notebook&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; deepquestai/deepstack&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; appbaseio/dejavu &lt;span&gt;🔍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cachethq/docker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; satishweb/doh-server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; snowzach/doods&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; drone/drone&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; drupal&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; elastichq/elasticsearch-hq &lt;span&gt;🔍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; elasticdump/elasticsearch-dump &lt;span&gt;🔍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; elk&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; andris9/emailengine &lt;span&gt;💰&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; esphome/esphome&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; quay.io/coreos/etcd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; audreyt/ethercalc&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; flogo/flogo-docker&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mher/flower&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; friendica&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ghost&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gitlab/gitlab-ce&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; atlassianlabs/gostatsd&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gitea/gitea &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gliderlabs/logspout&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gliderlabs/registrator&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; glot &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; bash&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; python&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gogs/gogs &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gotify/server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; grafana/grafana&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hasura/graphql-engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; haproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; healthchecks/healthchecks&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; homeassistant/home-assistant&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; h2non/imaginary&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jellyfin/jellyfin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jenkins &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; inbound-agent&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jenkins&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jmxtrans/jmxtrans&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; djmattyg007/jsoneditor&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wurstmeister/kafka&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mailgun/kafka-pixy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; devopsfaith/krakend&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; heartexlabs/label-studio&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mailhog/mailhog&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tootsuite/mastodon&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; getmeili/meilisearch &lt;span&gt;🔍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mitmproxy/mitmproxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; deluan/navidrome &lt;span&gt;🎵&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; netdata/netdata&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; nextcloud&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sonatype/nexus3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; jwilder/nginx-proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tiangolo/nginx-rtmp &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jazzdd/phpvirtualbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sonatype/nexus3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jupyter/notebook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mariadb&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; matomo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; metabase/metabase&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; metasploitframework/metasploit-framework &lt;span&gt;💀&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; minio/minio&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mongo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ccrisan/motioneye&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; neo4j&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; luzifer/nginx-sso&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; n8nio/n8n&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; illuspas/node-media-server &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; notaitech/nudenet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; odoo&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ohmyform &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ohmyform/api&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ohmyform/ui&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; osixia/openldap&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; openresty/openresty&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; kylemanna/openvpn&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; campbellsoftwaresolutions/osticket&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; outlinewiki/outline&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gabekangas/owncast&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; owncloud&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; dpage/pgadmin4&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; phplist/phplist&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; phpmyadmin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pihole/pihole&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mcr.microsoft.com/playwright&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; portainer/portainer &lt;span&gt;👍&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; postgres&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; postgrest/postgrest&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prom/prometheus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; prosody/prosody&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; registry&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; restic/rest-server&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rocker/rstudio&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rocket.chat&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; rundeck/rundeck&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wonderfall/searx&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; selenium &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; hub&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; node-chrome&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; node-firefox&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; standalone-firefox&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; aerokube &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; selenoid &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; video-recorder&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; chrome&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; firefox&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vnc&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; selenoid-ui&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ansiblesemaphore/semaphore&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; sentry&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; atmoz/sftp&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; quay.io/outline/shadowbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shlinkio/shlink&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; snipe/snipe-it&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; valeriansaliou/sonic&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; scrapinghub/splash&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; deezer/spleeter&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; teamatldocker &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; confluence&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; jira&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; strapi/strapi&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; amancevice/superset&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tensorflow &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; serving&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tile38/tile38&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; traefik&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; trinodb/trino&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; louislam/uptime-kuma&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; v2ray/official &lt;span&gt;🇨🇳&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; mpromonet/v4l2rtspserver &lt;span&gt;📷&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; centurylink/watchtower&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wekanteam/wekan&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; requarks/wiki&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; wordpress&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; yourls&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ghcr.io/linuxserver/wireguard&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; apache/zeppelin&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zookeeper&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; elkozmon/zoonavigator&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;auto-completion&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;#&#xA;# handy auto-completion for docker-exec&#xA;#&#xA;&#xA;enter() {&#xA;  local name=${1:?}&#xA;  docker exec -it $name sh -c &#39;exec $(command -v bash || command -v sh)&#39;&#xA;}&#xA;&#xA;__enter() {&#xA;  local cur=${COMP_WORDS[COMP_CWORD]}&#xA;  for cid in $(docker ps -q)&#xA;  do&#xA;    local name=$(docker inspect -f &#39;{{.Name}}&#39; $cid)&#xA;    name=${name#/}&#xA;    if [[ $name = $cur* ]]&#xA;    then&#xA;      COMPREPLY+=(&#34;$name&#34;)&#xA;    fi&#xA;  done&#xA;}&#xA;&#xA;complete -F __enter enter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#vimagick/dockerfiles&amp;amp;Timeline&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=vimagick/dockerfiles&amp;amp;type=Timeline&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-python</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/microsoft/vscode-remote-try-python</id>
    <link href="https://github.com/microsoft/vscode-remote-try-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: Python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-python&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Remote%20-%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Remote - Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Remote - Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-python/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more information on creating your codespace, visit the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Remote - Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-python&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Remote - Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the prerequisites (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;Python&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Remote-Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;vscode&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;app.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Terminal:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; to open a terminal window.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Type &lt;code&gt;python -m flask run --port 9000 --no-debugger --no-reload&lt;/code&gt; to run the app.&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The terminal will say your app is &lt;code&gt;Running on http://127.0.0.1:9000/&lt;/code&gt;. Click on the link in the terminal to view your app running in the browser.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Notice that the Python extension is already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;ms-python.python&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/p&gt; &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you use this container outside of VS Code via &lt;code&gt;docker run&lt;/code&gt; with &lt;code&gt;-p 9000&lt;/code&gt;, you may need to append &lt;code&gt;--host 0.0.0.0&lt;/code&gt; to the command above. The &lt;code&gt;-p&lt;/code&gt; option &#34;publishes&#34; the port rather than forwarding it. It therefore will not work if the application only listens to localhost. The &lt;code&gt;forwardPorts&lt;/code&gt; property in &lt;code&gt;devcontainer.json&lt;/code&gt; does not have this limitation, but you can use &lt;code&gt;appPort&lt;/code&gt; property instead if you want to mirror the &lt;code&gt;docker run&lt;/code&gt; behavior.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;app.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 9).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables (e.g. the app variable on line 7), examining locals, and more.&lt;/li&gt; &#xA;   &lt;li&gt;Continue (&lt;kbd&gt;F5&lt;/kbd&gt;). You can connect to the server in the container by either: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Clicking on &lt;code&gt;Open in Browser&lt;/code&gt; in the notification telling you: &lt;code&gt;Your service running on port 9000 is available&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Clicking the globe icon in the &#39;Ports&#39; view. The &#39;Ports&#39; view gives you an organized table of your forwarded ports, and you can access it with the command &lt;strong&gt;Ports: Focus on Ports View&lt;/strong&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Notice port 9000 in the &#39;Ports&#39; view is labeled &#34;Hello Remote World.&#34; In &lt;code&gt;devcontainer.json&lt;/code&gt;, you can set &lt;code&gt;&#34;portsAttributes&#34;&lt;/code&gt;, such as a label for your forwarded ports and the action to be taken when the port is autoforwarded.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In Remote - Containers, you can access your app at &lt;code&gt;http://localhost:9000&lt;/code&gt; in a local browser. But in a browser-based Codespace, you must click the link from the notification or the &lt;code&gt;Ports&lt;/code&gt; view so that the service handles port forwarding in the browser and generates the correct URL.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rebuild or update your container&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You may want to make changes to your container, such as installing a different version of a software or forwarding a new port. You&#39;ll rebuild your container for your changes to take effect.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Open browser automatically:&lt;/strong&gt; As an example change, let&#39;s update the &lt;code&gt;portsAttributes&lt;/code&gt; in the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file to open a browser when our port is automatically forwarded.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; file.&lt;/li&gt; &#xA;   &lt;li&gt;Modify the &lt;code&gt;&#34;onAutoForward&#34;&lt;/code&gt; attribute in your &lt;code&gt;portsAttributes&lt;/code&gt; from &lt;code&gt;&#34;notify&#34;&lt;/code&gt; to &lt;code&gt;&#34;openBrowser&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Remote-Containers: Rebuild Container&lt;/strong&gt; or &lt;strong&gt;Codespaces: Rebuild Container&lt;/strong&gt; command so the modifications are picked up.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;More samples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/python-sample-tweeterapp&#34;&gt;Tweeter App - Python and Django&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-swag</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/linuxserver/docker-swag</id>
    <link href="https://github.com/linuxserver/docker-swag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nginx webserver and reverse proxy with php support and a built-in Certbot (Let&#39;s Encrypt) client. It also contains fail2ban for intrusion prevention.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;linuxserver/swag&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fswag&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fswag?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-swag/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-swag/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/swag&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/swag.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-swag/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-swag%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/swag/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fswag%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let&#39;s Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let&#39;s Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif&#34; alt=&#34;swag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/swag:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Validation and initial setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before running this container, make sure that the url and subdomains are properly forwarded to this container&#39;s host, and that port 443 (and/or 80) is not being used by another service on the host (NAS gui, another webserver, etc.).&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;http&lt;/code&gt; validation, port 80 on the internet side of the router should be forwarded to this container&#39;s port 80&lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;dns&lt;/code&gt; validation, make sure to enter your credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cloudflare provides free accounts for managing dns and is very easy to use with this image. Make sure that it is set up for &#34;dns only&#34; instead of &#34;dns + proxy&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Google dns plugin is meant to be used with &#34;Google Cloud DNS&#34;, a paid enterprise product, and not for &#34;Google Domains DNS&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For &lt;code&gt;duckdns&lt;/code&gt; validation, either leave the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable empty or set it to &lt;code&gt;wildcard&lt;/code&gt;, and set the &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable with your duckdns token. Due to a limitation of duckdns, the resulting cert will only cover either main subdomain (ie. &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt;), or sub-subdomains (ie. &lt;code&gt;*.yoursubdomain.duckdns.org&lt;/code&gt;), but will not both at the same time. You can use our &lt;a href=&#34;https://hub.docker.com/r/linuxserver/duckdns/&#34;&gt;duckdns image&lt;/a&gt; to update your IP on duckdns.org.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cap-add=NET_ADMIN&lt;/code&gt; is required for fail2ban to modify iptables&lt;/li&gt; &#xA; &lt;li&gt;If you need a dynamic dns provider, you can use the free provider duckdns.org where the &lt;code&gt;URL&lt;/code&gt; will be &lt;code&gt;yoursubdomain.duckdns.org&lt;/code&gt; and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; can be &lt;code&gt;www,ftp,cloud&lt;/code&gt; with http validation, or &lt;code&gt;wildcard&lt;/code&gt; with dns validation.&lt;/li&gt; &#xA; &lt;li&gt;After setup, navigate to &lt;code&gt;https://yourdomain.url&lt;/code&gt; to access the default homepage (http access through port 80 is disabled by default, you can enable it by editing the default site config at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Certs are checked nightly and if expiration is within 30 days, renewal is attempted. If your cert is about to expire in less than 30 days, check the logs under &lt;code&gt;/config/log/letsencrypt&lt;/code&gt; to see why the renewals have been failing. It is recommended to input your e-mail in docker parameters so you receive expiration notices from Let&#39;s Encrypt in those circumstances.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security and password protection&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.&lt;/li&gt; &#xA; &lt;li&gt;Per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;, the container is shipping &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; as the &lt;code&gt;dhparams.pem&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file &lt;code&gt;docker exec -it swag htpasswd -c /config/nginx/.htpasswd &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can add multiple user:pass to &lt;code&gt;.htpasswd&lt;/code&gt;. For the first user, use the above command, for others, use the above command without the &lt;code&gt;-c&lt;/code&gt; flag, as it will force deletion of the existing &lt;code&gt;.htpasswd&lt;/code&gt; and creation of a new one&lt;/li&gt; &#xA; &lt;li&gt;You can also use ldap auth for security and access control. A sample, user configurable ldap.conf is provided, and it requires the separate image &lt;a href=&#34;https://hub.docker.com/r/linuxserver/ldap-auth/&#34;&gt;linuxserver/ldap-auth&lt;/a&gt; to communicate with an ldap server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Site config and reverse proxy&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default site config resides at &lt;code&gt;/config/nginx/site-confs/default&lt;/code&gt;. Feel free to modify this file, and you can add other conf files to this directory. However, if you delete the &lt;code&gt;default&lt;/code&gt; file, a new default will be created on container start.&lt;/li&gt; &#xA; &lt;li&gt;Preset reverse proxy config files are added for popular apps. See the &lt;code&gt;README.md&lt;/code&gt; file under &lt;code&gt;/config/nginx/proxy_confs&lt;/code&gt; for instructions on how to enable them. The preset confs reside in and get imported from &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs&#34;&gt;this repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you wish to hide your site from search engine crawlers, you may find it useful to add this configuration line to your site config, within the server block, above the line where ssl.conf is included &lt;code&gt;add_header X-Robots-Tag &#34;noindex, nofollow, nosnippet, noarchive&#34;;&lt;/code&gt; This will &lt;em&gt;ask&lt;/em&gt; Google et al not to index and list your site. Be careful with this, as you will eventually be de-listed if you leave this line in on a site you wish to be present on search engines&lt;/li&gt; &#xA; &lt;li&gt;If you wish to redirect http to https, you must expose port 80&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using certs in other containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes auto-generated pfx and private-fullchain-bundle pem certs that are needed by other apps like Emby and Znc. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To use these certs in other containers, do either of the following:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;em&gt;(Easier)&lt;/em&gt; Mount the container&#39;s config folder in other containers (ie. &lt;code&gt;-v /path-to-le-config:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/keys/letsencrypt/&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;(More secure)&lt;/em&gt; Mount the SWAG folder &lt;code&gt;etc&lt;/code&gt; that resides under &lt;code&gt;/config&lt;/code&gt; in other containers (ie. &lt;code&gt;-v /path-to-le-config/etc:/le-ssl&lt;/code&gt;) and in the other containers, use the cert location &lt;code&gt;/le-ssl/letsencrypt/live/&amp;lt;your.domain.url&amp;gt;/&lt;/code&gt; (This is more secure because the first method shares the entire SWAG config folder with other containers, including the www files, whereas the second method only shares the ssl certs)&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;These certs include:&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;cert.pem&lt;/code&gt;, &lt;code&gt;chain.pem&lt;/code&gt;, &lt;code&gt;fullchain.pem&lt;/code&gt; and &lt;code&gt;privkey.pem&lt;/code&gt;, which are generated by Certbot and used by nginx and various other apps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;privkey.pfx&lt;/code&gt;, a format supported by Microsoft and commonly used by dotnet apps such as Emby Server (no password)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;priv-fullchain-bundle.pem&lt;/code&gt;, a pem cert that bundles the private key and the fullchain, used by apps like ZNC&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using fail2ban&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container includes fail2ban set up with 5 jails by default: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;nginx-http-auth&lt;/li&gt; &#xA;   &lt;li&gt;nginx-badbots&lt;/li&gt; &#xA;   &lt;li&gt;nginx-botsearch&lt;/li&gt; &#xA;   &lt;li&gt;nginx-deny&lt;/li&gt; &#xA;   &lt;li&gt;nginx-unauthorized&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;To enable or disable other jails, modify the file &lt;code&gt;/config/fail2ban/jail.local&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To modify filters and actions, instead of editing the &lt;code&gt;.conf&lt;/code&gt; files, create &lt;code&gt;.local&lt;/code&gt; files with the same name and edit those because .conf files get overwritten when the actions and filters are updated. &lt;code&gt;.local&lt;/code&gt; files will append whatever&#39;s in the &lt;code&gt;.conf&lt;/code&gt; files (ie. &lt;code&gt;nginx-http-auth.conf&lt;/code&gt; --&amp;gt; &lt;code&gt;nginx-http-auth.local&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;You can check which jails are active via &lt;code&gt;docker exec -it swag fail2ban-client status&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can check the status of a specific jail via &lt;code&gt;docker exec -it swag fail2ban-client status &amp;lt;jail name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You can unban an IP via &lt;code&gt;docker exec -it swag fail2ban-client set &amp;lt;jail name&amp;gt; unbanip &amp;lt;IP&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A list of commands can be found here: &lt;a href=&#34;https://www.fail2ban.org/wiki/index.php/Commands&#34;&gt;https://www.fail2ban.org/wiki/index.php/Commands&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Updating configs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This container creates a number of configs for nginx, proxy samples, etc.&lt;/li&gt; &#xA; &lt;li&gt;Config updates are noted in the changelog but not automatically applied to your files.&lt;/li&gt; &#xA; &lt;li&gt;If you have modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Keep your existing configs as is (not broken, don&#39;t fix)&lt;/li&gt; &#xA;   &lt;li&gt;Review our repository commits and apply the new changes yourself&lt;/li&gt; &#xA;   &lt;li&gt;Delete the modified config file with listed updates, restart the container, reapply your changes&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you have NOT modified a file with noted changes in the changelog: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Delete the config file with listed updates, restart the container&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Proxy sample updates are not listed in the changelog. See the changes here: &lt;a href=&#34;https://github.com/linuxserver/reverse-proxy-confs/commits/master&#34;&gt;https://github.com/linuxserver/reverse-proxy-confs/commits/master&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Proxy sample files WILL be updated, however your renamed (enabled) proxy files will not.&lt;/li&gt; &#xA; &lt;li&gt;You can check the new sample and adjust your active config as needed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migration from the old &lt;code&gt;linuxserver/letsencrypt&lt;/code&gt; image&lt;/h3&gt; &#xA;&lt;p&gt;Please follow the instructions &lt;a href=&#34;https://www.linuxserver.io/blog/2020-08-21-introducing-swag#migrate&#34;&gt;on this blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  swag:&#xA;    image: lscr.io/linuxserver/swag:latest&#xA;    container_name: swag&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - URL=yourdomain.url&#xA;      - VALIDATION=http&#xA;      - SUBDOMAINS=www, #optional&#xA;      - CERTPROVIDER= #optional&#xA;      - DNSPLUGIN=cloudflare #optional&#xA;      - PROPAGATION= #optional&#xA;      - DUCKDNSTOKEN= #optional&#xA;      - EMAIL= #optional&#xA;      - ONLY_SUBDOMAINS=false #optional&#xA;      - EXTRA_DOMAINS= #optional&#xA;      - STAGING=false #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;    ports:&#xA;      - 443:443&#xA;      - 80:80 #optional&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=swag \&#xA;  --cap-add=NET_ADMIN \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e URL=yourdomain.url \&#xA;  -e VALIDATION=http \&#xA;  -e SUBDOMAINS=www, `#optional` \&#xA;  -e CERTPROVIDER= `#optional` \&#xA;  -e DNSPLUGIN=cloudflare `#optional` \&#xA;  -e PROPAGATION= `#optional` \&#xA;  -e DUCKDNSTOKEN= `#optional` \&#xA;  -e EMAIL= `#optional` \&#xA;  -e ONLY_SUBDOMAINS=false `#optional` \&#xA;  -e EXTRA_DOMAINS= `#optional` \&#xA;  -e STAGING=false `#optional` \&#xA;  -p 443:443 \&#xA;  -p 80:80 `#optional` \&#xA;  -v /path/to/appdata/config:/config \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/swag:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 443&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Https port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 80&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Http port (required for http validation and http -&amp;gt; https redirect)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e URL=yourdomain.url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Top url you have control over (&lt;code&gt;customdomain.com&lt;/code&gt; if you own it, or &lt;code&gt;customsubdomain.ddnsprovider.com&lt;/code&gt; if dynamic dns).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e VALIDATION=http&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certbot validation method to use, options are &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;dns&lt;/code&gt; or &lt;code&gt;duckdns&lt;/code&gt; (&lt;code&gt;dns&lt;/code&gt; method also requires &lt;code&gt;DNSPLUGIN&lt;/code&gt; variable set) (&lt;code&gt;duckdns&lt;/code&gt; method requires &lt;code&gt;DUCKDNSTOKEN&lt;/code&gt; variable set, and the &lt;code&gt;SUBDOMAINS&lt;/code&gt; variable must be either empty or set to &lt;code&gt;wildcard&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SUBDOMAINS=www,&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Subdomains you&#39;d like the cert to cover (comma separated, no spaces) ie. &lt;code&gt;www,ftp,cloud&lt;/code&gt;. For a wildcard cert, set this &lt;em&gt;exactly&lt;/em&gt; to &lt;code&gt;wildcard&lt;/code&gt; (wildcard cert is available via &lt;code&gt;dns&lt;/code&gt; and &lt;code&gt;duckdns&lt;/code&gt; validation only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e CERTPROVIDER=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally define the cert provider. Set to &lt;code&gt;zerossl&lt;/code&gt; for ZeroSSL certs (requires existing &lt;a href=&#34;https://app.zerossl.com/signup&#34;&gt;ZeroSSL account&lt;/a&gt; and the e-mail address entered in &lt;code&gt;EMAIL&lt;/code&gt; env var). Otherwise defaults to Let&#39;s Encrypt.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DNSPLUGIN=cloudflare&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;dns&lt;/code&gt;. Options are &lt;code&gt;aliyun&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;cloudflare&lt;/code&gt;, &lt;code&gt;cloudxns&lt;/code&gt;, &lt;code&gt;cpanel&lt;/code&gt;, &lt;code&gt;desec&lt;/code&gt;, &lt;code&gt;digitalocean&lt;/code&gt;, &lt;code&gt;directadmin&lt;/code&gt;, &lt;code&gt;dnsimple&lt;/code&gt;, &lt;code&gt;dnsmadeeasy&lt;/code&gt;, &lt;code&gt;dnspod&lt;/code&gt;, &lt;code&gt;domeneshop&lt;/code&gt;, &lt;code&gt;gandi&lt;/code&gt;, &lt;code&gt;gehirn&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;he&lt;/code&gt;, &lt;code&gt;hetzner&lt;/code&gt;, &lt;code&gt;infomaniak&lt;/code&gt;, &lt;code&gt;inwx&lt;/code&gt;, &lt;code&gt;ionos&lt;/code&gt;, &lt;code&gt;linode&lt;/code&gt;, &lt;code&gt;loopia&lt;/code&gt;, &lt;code&gt;luadns&lt;/code&gt;, &lt;code&gt;netcup&lt;/code&gt;, &lt;code&gt;njalla&lt;/code&gt;, &lt;code&gt;nsone&lt;/code&gt;, &lt;code&gt;ovh&lt;/code&gt;, &lt;code&gt;rfc2136&lt;/code&gt;, &lt;code&gt;route53&lt;/code&gt;, &lt;code&gt;sakuracloud&lt;/code&gt;, &lt;code&gt;standalone&lt;/code&gt;, &lt;code&gt;transip&lt;/code&gt; and &lt;code&gt;vultr&lt;/code&gt;. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under &lt;code&gt;/config/dns-conf&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PROPAGATION=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optionally override (in seconds) the default propagation time for the dns plugins.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e DUCKDNSTOKEN=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required if &lt;code&gt;VALIDATION&lt;/code&gt; is set to &lt;code&gt;duckdns&lt;/code&gt;. Retrieve your token from &lt;a href=&#34;https://www.duckdns.org&#34;&gt;https://www.duckdns.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EMAIL=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ONLY_SUBDOMAINS=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e EXTRA_DOMAINS=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional fully qualified domain names (comma separated, no spaces) ie. &lt;code&gt;extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e STAGING=false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser&#39;s security test. Only to be used for testing purposes.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All the config files including the webroot reside here.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=swag&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=swag&amp;amp;query=%24.mods%5B%27swag%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it swag /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-swag/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d swag&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/swag:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm swag&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once swag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-swag.git&#xA;cd docker-swag&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/swag:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;18.05.22:&lt;/strong&gt; - Added support for Azure DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.04.22:&lt;/strong&gt; - Added certbot-dns-loopia for DNS01 validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.22:&lt;/strong&gt; - Added support for standalone DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.03.22:&lt;/strong&gt; - created a logfile for fail2ban nginx-unauthorized in /etc/cont-init.d/50-config&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.01.22:&lt;/strong&gt; - Added a fail2ban jail for nginx unauthorized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.12.21:&lt;/strong&gt; - Fixed issue with iptables not working as expected&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30.11.21:&lt;/strong&gt; - Move maxmind to a &lt;a href=&#34;https://github.com/linuxserver/docker-mods/tree/swag-maxmind&#34;&gt;new mod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;22.11.21:&lt;/strong&gt; - Added support for Infomaniak DNS for certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.11.21:&lt;/strong&gt; - Added support for dnspod validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.11.21:&lt;/strong&gt; - Added support for deSEC DNS for wildcard certificate generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.10.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; proxy.conf - Mitigate &lt;a href=&#34;https://httpoxy.org/&#34;&gt;https://httpoxy.org/&lt;/a&gt; vulnerabilities. Ref: &lt;a href=&#34;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&#34;&gt;https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx#Defeating-the-Attack-using-NGINX-and-NGINX-Plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.10.21:&lt;/strong&gt; - Fix Hurricane Electric (HE) DNS validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.10.21:&lt;/strong&gt; - Fix deprecated LE root cert check to fix failures when using &lt;code&gt;STAGING=true&lt;/code&gt;, and failures in revoking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.21:&lt;/strong&gt; - Added support for Hurricane Electric (HE) DNS validation. Added lxml build deps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.10.21:&lt;/strong&gt; - Check if the cert uses the old LE root cert, revoke and regenerate if necessary. &lt;a href=&#34;https://twitter.com/letsencrypt/status/1443621997288767491&#34;&gt;Here&#39;s more info&lt;/a&gt; on LE root cert expiration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.09.21:&lt;/strong&gt; - Add an optional header to opt out of Google FLoC in &lt;code&gt;ssl.conf&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;17.09.21:&lt;/strong&gt; - Mark &lt;code&gt;SUBDOMAINS&lt;/code&gt; var as optional.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.08.21:&lt;/strong&gt; - Add support for ionos dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;15.07.21:&lt;/strong&gt; - Fix libmaxminddb issue due to upstream change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.07.21:&lt;/strong&gt; - Rebase to alpine 3.14.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;24.06.21:&lt;/strong&gt; - Update default nginx conf folder.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf - Use &lt;code&gt;resolver.conf&lt;/code&gt; and patch for &lt;code&gt;CVE-2021-32637&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.05.21:&lt;/strong&gt; - Modify resolver.conf generation to detect and ignore ipv6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.05.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, ssl.conf, proxy.conf, and the default site-conf - Rework nginx.conf to be inline with alpine upstream and relocate lines from other files. Use linuxserver.io wheel index for pip packages. Switch to using &lt;a href=&#34;https://ssl-config.mozilla.org/ffdhe4096.txt&#34;&gt;ffdhe4096&lt;/a&gt; for &lt;code&gt;dhparams.pem&lt;/code&gt; per &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7919&#34;&gt;RFC7919&lt;/a&gt;. Added &lt;code&gt;worker_processes.conf&lt;/code&gt;, which sets the number of nginx workers, and &lt;code&gt;resolver.conf&lt;/code&gt;, which sets the dns resolver. Both conf files are auto-generated only on first start and can be user modified later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;21.04.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; authelia-server.conf and authelia-location.conf - Add remote name/email headers and pass http method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add php7-gmp and php7-pecl-mailparse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.04.21:&lt;/strong&gt; - Add support for vultr dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.03.21:&lt;/strong&gt; - Add support for directadmin dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.02.21:&lt;/strong&gt; - Clean up rust/cargo cache, which ballooned the image size in the last couple of builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.02.21:&lt;/strong&gt; - Fix aliyun, domeneshop, inwx and transip dns confs for existing users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.21:&lt;/strong&gt; - Rebasing to alpine 3.13. Add nginx mods brotli and dav-ext. Remove nginx mods lua and lua-upstream (due to regression over the last couple of years).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.01.21:&lt;/strong&gt; - Add support for hetzner dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.01.21:&lt;/strong&gt; - Add check for ZeroSSL EAB retrieval.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.01.21:&lt;/strong&gt; - Add support for getting certs from &lt;a href=&#34;https://zerossl.com/&#34;&gt;ZeroSSL&lt;/a&gt; via optional &lt;code&gt;CERTPROVIDER&lt;/code&gt; env var. Update aliyun, domeneshop, inwx and transip dns plugins with the new plugin names. Hide &lt;code&gt;donoteditthisfile.conf&lt;/code&gt; because users were editing it despite its name. Suppress harmless error when no proxy confs are enabled.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.01.21:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; /config/nginx/site-confs/default - Add helper pages to aid troubleshooting&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.12.20:&lt;/strong&gt; - Add support for njalla dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.12.20:&lt;/strong&gt; - Check for template/conf updates and notify in the log. Add support for gehirn and sakuracloud dns validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.11.20:&lt;/strong&gt; - Add support for netcup dns validation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; ssl.conf - Add frame-ancestors to Content-Security-Policy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and ssl.conf - Minor cleanups and reordering.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf - Added geoip2 configs. Added MAXMINDDB_LICENSE_KEY variable to readme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.09.20:&lt;/strong&gt; - Add php7-xsl.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.09.20:&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linuxserver/docker-swag/raw/master/README.md#updating-configs&#34;&gt;Existing users should update:&lt;/a&gt; nginx.conf, proxy.conf, and various proxy samples - Global websockets across all configs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.08.20:&lt;/strong&gt; - Initial release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-wireguard</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/linuxserver/docker-wireguard</id>
    <link href="https://github.com/linuxserver/docker-wireguard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;linuxserver/wireguard&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fwireguard&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fwireguard?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-wireguard/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-wireguard/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/wireguard&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/wireguard.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-wireguard/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-wireguard%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard®&lt;/a&gt; is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;&lt;img src=&#34;https://www.wireguard.com/img/wireguard.svg?sanitize=true&#34; alt=&#34;wireguard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/wireguard:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;During container start, it will first check if the wireguard module is already installed and loaded. Kernels newer than 5.6 generally have the wireguard module built-in (along with some older custom kernels). However, the module may not be enabled. Make sure it is enabled prior to starting the container.&lt;/p&gt; &#xA;&lt;p&gt;If the kernel is not built-in, or installed on host, the container will check if the kernel headers are present (in &lt;code&gt;/usr/src&lt;/code&gt;) and if not, it will attempt to download the necessary kernel headers from the &lt;code&gt;ubuntu xenial/bionic&lt;/code&gt;, &lt;code&gt;debian/raspbian buster&lt;/code&gt; repos; then will attempt to compile and install the kernel module. If the kernel headers are not found in either &lt;code&gt;usr/src&lt;/code&gt; or in the repos mentioned, container will sleep indefinitely as wireguard cannot be installed.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re on a debian/ubuntu based host with a custom or downstream distro provided kernel (ie. Pop!_OS), the container won&#39;t be able to install the kernel headers from the regular ubuntu and debian repos. In those cases, you can try installing the headers on the host via &lt;code&gt;sudo apt install linux-headers-$(uname -r)&lt;/code&gt; (if distro version) and then add a volume mapping for &lt;code&gt;/usr/src:/usr/src&lt;/code&gt;, or if custom built, map the location of the existing headers to allow the container to use host installed headers to build the kernel module (tested successful on Pop!_OS, ymmv).&lt;/p&gt; &#xA;&lt;p&gt;With regards to arm32/64 devices, Raspberry Pi 2-4 running the &lt;a href=&#34;https://ubuntu.com/download/raspberry-pi&#34;&gt;official ubuntu images&lt;/a&gt; or Raspbian Buster are supported out of the box. For all other devices and OSes, you can try installing the kernel headers on the host, and mapping &lt;code&gt;/usr/src:/usr/src&lt;/code&gt; and it may just work (no guarantees).&lt;/p&gt; &#xA;&lt;p&gt;This can be run as a server or a client, based on the parameters used.&lt;/p&gt; &#xA;&lt;h2&gt;Server Mode&lt;/h2&gt; &#xA;&lt;p&gt;If the environment variable &lt;code&gt;PEERS&lt;/code&gt; is set to a number or a list of strings separated by comma, the container will run in server mode and the necessary server and peer/client confs will be generated. The peer/client config qr codes will be output in the docker log. They will also be saved in text and png format under &lt;code&gt;/config/peerX&lt;/code&gt; in case &lt;code&gt;PEERS&lt;/code&gt; is a variable and an integer or &lt;code&gt;/config/peer_X&lt;/code&gt; in case a list of names was provided instead of an integer.&lt;/p&gt; &#xA;&lt;p&gt;Variables &lt;code&gt;SERVERURL&lt;/code&gt;, &lt;code&gt;SERVERPORT&lt;/code&gt;, &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; and &lt;code&gt;PEERDNS&lt;/code&gt; are optional variables used for server mode. Any changes to these environment variables will trigger regeneration of server and peer confs. Peer/client confs will be recreated with existing private/public keys. Delete the peer folders for the keys to be recreated along with the confs.&lt;/p&gt; &#xA;&lt;p&gt;To add more peers/clients later on, you increment the &lt;code&gt;PEERS&lt;/code&gt; environment variable or add more elements to the list and recreate the container.&lt;/p&gt; &#xA;&lt;p&gt;To display the QR codes of active peers again, you can use the following command and list the peer numbers as arguments: &lt;code&gt;docker exec -it wireguard /app/show-peer 1 4 5&lt;/code&gt; or &lt;code&gt;docker exec -it wireguard /app/show-peer myPC myPhone myTablet&lt;/code&gt; (Keep in mind that the QR codes are also stored as PNGs in the config folder).&lt;/p&gt; &#xA;&lt;p&gt;The templates used for server and peer confs are saved under &lt;code&gt;/config/templates&lt;/code&gt;. Advanced users can modify these templates and force conf generation by deleting &lt;code&gt;/config/wg0.conf&lt;/code&gt; and restarting the container.&lt;/p&gt; &#xA;&lt;h2&gt;Client Mode&lt;/h2&gt; &#xA;&lt;p&gt;Do not set the &lt;code&gt;PEERS&lt;/code&gt; environment variable. Drop your client conf into the config folder as &lt;code&gt;/config/wg0.conf&lt;/code&gt; and start the container.&lt;/p&gt; &#xA;&lt;p&gt;If you get IPv6 related errors in the log and connection cannot be established, edit the &lt;code&gt;AllowedIPs&lt;/code&gt; line in your peer/client wg0.conf to include only &lt;code&gt;0.0.0.0/0&lt;/code&gt; and not &lt;code&gt;::/0&lt;/code&gt;; and restart the container.&lt;/p&gt; &#xA;&lt;h2&gt;Road warriors, roaming and returning home&lt;/h2&gt; &#xA;&lt;p&gt;If you plan to use Wireguard both remotely and locally, say on your mobile phone, you will need to consider routing. Most firewalls will not route ports forwarded on your WAN interface correctly to the LAN out of the box. This means that when you return home, even though you can see the Wireguard server, the return packets will probably get lost.&lt;/p&gt; &#xA;&lt;p&gt;This is not a Wireguard specific issue and the two generally accepted solutions are NAT reflection (setting your edge router/firewall up in such a way as it translates internal packets correctly) or split horizon DNS (setting your internal DNS to return the private rather than public IP when connecting locally).&lt;/p&gt; &#xA;&lt;p&gt;Both of these approaches have positives and negatives however their setup is out of scope for this document as everyone&#39;s network layout and equipment will be different.&lt;/p&gt; &#xA;&lt;h2&gt;Maintaining local access to attached services&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;When routing via Wireguard from another container using the &lt;code&gt;service&lt;/code&gt; option in docker, you might lose access to the containers webUI locally. To avoid this, exclude the docker subnet from being routed via Wireguard by modifying your &lt;code&gt;wg0.conf&lt;/code&gt; like so (modifying the subnets as you require):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Interface]&#xA;PrivateKey = &amp;lt;private key&amp;gt;&#xA;Address = 9.8.7.6/32&#xA;DNS = 8.8.8.8&#xA;PostUp = DROUTE=$(ip route | grep default | awk &#39;{print $3}&#39;); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT&#xA;PreDown = HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Site-to-site VPN&lt;/h2&gt; &#xA;&lt;p&gt;** Note: This is not a supported configuration by Linuxserver.io - use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;Site-to-site VPN in server mode requires customizing the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;. Since &lt;code&gt;wg0.conf&lt;/code&gt; is autogenerated when server vars are changed, it is not recommended to edit it manually.&lt;/p&gt; &#xA;&lt;p&gt;In order to customize the &lt;code&gt;AllowedIPs&lt;/code&gt; statement for a specific peer in &lt;code&gt;wg0.conf&lt;/code&gt;, you can set an env var &lt;code&gt;SERVER_ALLOWEDIPS_PEER_&amp;lt;peer name or number&amp;gt;&lt;/code&gt; to the additional subnets you&#39;d like to add, comma separated and excluding the peer IP (ie. &lt;code&gt;&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt;). Replace &lt;code&gt;&amp;lt;peer name or number&amp;gt;&lt;/code&gt; with either the name or number of a peer (whichever is used in the &lt;code&gt;PEERS&lt;/code&gt; var).&lt;/p&gt; &#xA;&lt;p&gt;For instance &lt;code&gt;SERVER_ALLOWEDIPS_PEER_laptop=&#34;192.168.1.0/24,192.168.2.0/24&#34;&lt;/code&gt; will result in the wg0.conf entry &lt;code&gt;AllowedIPs = 10.13.13.2,192.168.1.0/24,192.168.2.0/24&lt;/code&gt; for the peer named &lt;code&gt;laptop&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that this var will only be considered when the confs are regenerated. Adding this var for an existing peer won&#39;t force a regeneration. You can delete wg0.conf and restart the container to force regeneration if necessary.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to set the necessary POSTUP and POSTDOWN rules in your client&#39;s peer conf for lan access.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  wireguard:&#xA;    image: lscr.io/linuxserver/wireguard:latest&#xA;    container_name: wireguard&#xA;    cap_add:&#xA;      - NET_ADMIN&#xA;      - SYS_MODULE&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - SERVERURL=wireguard.domain.com #optional&#xA;      - SERVERPORT=51820 #optional&#xA;      - PEERS=1 #optional&#xA;      - PEERDNS=auto #optional&#xA;      - INTERNAL_SUBNET=10.13.13.0 #optional&#xA;      - ALLOWEDIPS=0.0.0.0/0 #optional&#xA;      - LOG_CONFS=true #optional&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;      - /lib/modules:/lib/modules&#xA;    ports:&#xA;      - 51820:51820/udp&#xA;    sysctls:&#xA;      - net.ipv4.conf.all.src_valid_mark=1&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=wireguard \&#xA;  --cap-add=NET_ADMIN \&#xA;  --cap-add=SYS_MODULE \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e SERVERURL=wireguard.domain.com `#optional` \&#xA;  -e SERVERPORT=51820 `#optional` \&#xA;  -e PEERS=1 `#optional` \&#xA;  -e PEERDNS=auto `#optional` \&#xA;  -e INTERNAL_SUBNET=10.13.13.0 `#optional` \&#xA;  -e ALLOWEDIPS=0.0.0.0/0 `#optional` \&#xA;  -e LOG_CONFS=true `#optional` \&#xA;  -p 51820:51820/udp \&#xA;  -v /path/to/appdata/config:/config \&#xA;  -v /lib/modules:/lib/modules \&#xA;  --sysctl=&#34;net.ipv4.conf.all.src_valid_mark=1&#34; \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/wireguard:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 51820/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;wireguard port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERURL=wireguard.domain.com&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External IP or domain name for docker host. Used in server mode. If set to &lt;code&gt;auto&lt;/code&gt;, the container will try to determine and set the external IP automatically&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e SERVERPORT=51820&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;External port for docker host. Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERS=1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of peers to create confs for. Required for server mode. Can also be a list of names: &lt;code&gt;myPC,myPhone,myTablet&lt;/code&gt; (alphanumeric only)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PEERDNS=auto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DNS server set in peer/client configs (can be set as &lt;code&gt;8.8.8.8&lt;/code&gt;). Used in server mode. Defaults to &lt;code&gt;auto&lt;/code&gt;, which uses wireguard docker host&#39;s DNS via included CoreDNS forward.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e INTERNAL_SUBNET=10.13.13.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e ALLOWEDIPS=0.0.0.0/0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: &#39;0.0.0.0/0, ::0/0&#39; This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server&#39;s WG ip, such as 10.13.13.1.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e LOG_CONFS=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generated QR codes will be displayed in the docker log. Set to &lt;code&gt;false&lt;/code&gt; to skip log output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /lib/modules&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maps host&#39;s modules folder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;--sysctl=&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Required for client mode.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portainer notice&lt;/h3&gt; &#xA;&lt;p&gt;This image utilises &lt;code&gt;cap_add&lt;/code&gt; or &lt;code&gt;sysctl&lt;/code&gt; to work properly. This is not implemented properly in some versions of Portainer, thus this image may not work if deployed through Portainer.&lt;/p&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=wireguard&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=wireguard&amp;amp;query=%24.mods%5B%27wireguard%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it wireguard /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-wireguard/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d wireguard&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/wireguard:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm wireguard&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once wireguard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-wireguard.git&#xA;cd docker-wireguard&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/wireguard:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.05.22:&lt;/strong&gt; - Improve NAT handling in server mode when multiple ethernet devices are present.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.04.22:&lt;/strong&gt; - Add pre-shared key support. Automatically added to all new peer confs generated, existing ones are left without to ensure no breaking changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.04.22:&lt;/strong&gt; - Rebase to Ubuntu Focal. Add &lt;code&gt;LOG_CONFS&lt;/code&gt; env var. Remove deprecated &lt;code&gt;add-peer&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.10.21:&lt;/strong&gt; - Add site-to-site vpn support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;11.02.21:&lt;/strong&gt; - Fix bug related to changing internal subnet and named peer confs not updating.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.10.20:&lt;/strong&gt; - Disable CoreDNS in client mode, or if port 53 is already in use in server mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;04.10.20:&lt;/strong&gt; - Allow to specify a list of names as PEERS and add ALLOWEDIPS environment variable. Also, add peer name/id to each one of the peer sections in wg0.conf. Important: Existing users need to delete &lt;code&gt;/config/templates/peer.conf&lt;/code&gt; and restart&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.09.20:&lt;/strong&gt; - Cleaning service binding example to have accurate PreDown script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.08.20:&lt;/strong&gt; - Replace resolvconf with openresolv due to dns issues when a client based on this image is connected to a server also based on this image. Add IPv6 info to readme. Display kernel version in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.07.20:&lt;/strong&gt; - Update Coredns config to detect dns loops (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.07.20:&lt;/strong&gt; - Update Coredns config to prevent issues with non-user-defined bridge networks (existing users need to delete &lt;code&gt;/config/coredns/Corefile&lt;/code&gt; and restart).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.07.20:&lt;/strong&gt; - Add Debian updates and security repos for headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.06.20:&lt;/strong&gt; - Simplify module tests, prevent iptables issues from resulting in false negatives.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.06.20:&lt;/strong&gt; - Add support for Ubuntu Focal (20.04) kernels. Compile wireguard tools and kernel module instead of using the ubuntu packages. Make module install optional. Improve verbosity in logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;29.05.20:&lt;/strong&gt; - Add support for 64bit raspbian.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;28.04.20:&lt;/strong&gt; - Add Buster/Stretch backports repos for Debian. Tested with OMV 5 and OMV 4 (on kernel 4.19.0-0.bpo.8-amd64).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.04.20:&lt;/strong&gt; - Fix typo in client mode conf existence check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;13.04.20:&lt;/strong&gt; - Fix bug that forced conf recreation on every start.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.04.20:&lt;/strong&gt; - Add arm32/64 builds and enable multi-arch (rpi4 with ubuntu and raspbian buster tested). Add CoreDNS for &lt;code&gt;PEERDNS=auto&lt;/code&gt; setting. Update the &lt;code&gt;add-peer&lt;/code&gt;/&lt;code&gt;show-peer&lt;/code&gt; scripts to utilize the templates and the &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; var (previously missed, oops).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;05.04.20:&lt;/strong&gt; - Add &lt;code&gt;INTERNAL_SUBNET&lt;/code&gt; variable to prevent subnet clashes. Add templates for server and peer confs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.04.20:&lt;/strong&gt; - Add &lt;code&gt;show-peer&lt;/code&gt; script and include info on host installed headers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;31.03.20:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nnn-training/yarn-training</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/nnn-training/yarn-training</id>
    <link href="https://github.com/nnn-training/yarn-training" rel="alternate"></link>
    <summary type="html">&lt;p&gt;入門コースの3章5節 yarnの練習&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>Gladtbam/ms365_e5_renewx</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/Gladtbam/ms365_e5_renewx</id>
    <link href="https://github.com/Gladtbam/ms365_e5_renewx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft365 E5 Renew X Docker 镜像&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;前言&lt;/h1&gt; &#xA;&lt;p&gt;本Docker基于&lt;a href=&#34;https://blog.csdn.net/qq_33212020?type=blog&#34;&gt;SundayRX&lt;/a&gt; &lt;a href=&#34;https://blog.csdn.net/qq_33212020/article/details/119747634&#34;&gt;E5 Renew X&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;链接&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gladtbam.top/posts/22256/&#34;&gt;Microsoft 365 E5 Renew X Docker 部署&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gladtbam.top/posts/37680/&#34;&gt;Microsoft 365 E5 Renew X 部署记录&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_33212020/article/details/119747634&#34;&gt;SundayRX博客&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/gladtbam/ms365_e5_renewx&#34;&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;支持版本&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CPU架构&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;是否支持&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux/amd64 v3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux/amd64 v2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux/amd64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux/arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux/arm v7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;p&gt;拉取镜像&lt;br&gt; &lt;code&gt;docker pull gladtbam/ms365_e5_renewx:latest&lt;/code&gt;&lt;br&gt; 或者&lt;br&gt; &lt;code&gt;docker pull ghcr.io/gladtbam/ms365_e5_renewx:latest&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;使用默认配置部署&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    -p 1066:1066 \&#xA;    --name RnewX \&#xA;gladtbam/ms365_e5_renewx:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;自定义配置&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;下载&lt;a href=&#34;https://sundayrx.lanzoui.com/aW09Lsss75g&#34;&gt;E5 Renew X&lt;/a&gt; 的配置文件&lt;code&gt;Config.xml&lt;/code&gt;，按照Config.xml文件说明进行修改&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动容器&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    -p 1066:1066 \&#xA;    -v $PWD/Deploy:/renewx/Deploy \&#xA;    -v $PWD/appdata:/renewx/appdata \&#xA;    --name RnewX \&#xA;gladtbam/ms365_e5_renewx:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Deploy内放置Config.xml文件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;自行构建&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Gladtbam/ms365_e5_renewx_docker&#34;&gt;Github下载Dockerfile&lt;/a&gt;文件&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build -f Dockerfile -t ms365_e5_renewx . --no-cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Nginx反向代理&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;location ~ / {&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header Host $http_host;&#xA;        proxy_redirect off;&#xA;        proxy_pass https://127.0.0.1:1066;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>aschmelyun/docker-compose-laravel</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/aschmelyun/docker-compose-laravel</id>
    <link href="https://github.com/aschmelyun/docker-compose-laravel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A docker-compose workflow for local Laravel development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docker-compose-laravel&lt;/h1&gt; &#xA;&lt;p&gt;A pretty simplified Docker Compose workflow that sets up a LEMP network of containers for local Laravel development. You can view the full article that inspired this repo &lt;a href=&#34;https://dev.to/aschmelyun/the-beauty-of-docker-for-local-laravel-development-13c0&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitnft.quine.sh/app/commits/list/repo/docker-compose-laravel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%94%AE-Open%20in%20GitNFT-darkviolet?style=flat&#34; alt=&#34;GitNFT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To get started, make sure you have &lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker installed&lt;/a&gt; on your system, and then clone this repository.&lt;/p&gt; &#xA;&lt;p&gt;Next, navigate in your terminal to the directory you cloned this, and spin up the containers for the web server by running &lt;code&gt;docker-compose up -d --build site&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After that completes, follow the steps from the &lt;a href=&#34;https://raw.githubusercontent.com/aschmelyun/docker-compose-laravel/main/src/README.md&#34;&gt;src/README.md&lt;/a&gt; file to get your Laravel project added in (or create a new blank one).&lt;/p&gt; &#xA;&lt;p&gt;Bringing up the Docker Compose network with &lt;code&gt;site&lt;/code&gt; instead of just using &lt;code&gt;up&lt;/code&gt;, ensures that only our site&#39;s containers are brought up at the start, instead of all of the command containers as well. The following are built for our web server, with their exposed ports detailed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;nginx&lt;/strong&gt; - &lt;code&gt;:80&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mysql&lt;/strong&gt; - &lt;code&gt;:3306&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;php&lt;/strong&gt; - &lt;code&gt;:9000&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;redis&lt;/strong&gt; - &lt;code&gt;:6379&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mailhog&lt;/strong&gt; - &lt;code&gt;:8025&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Three additional containers are included that handle Composer, NPM, and Artisan commands &lt;em&gt;without&lt;/em&gt; having to have these platforms installed on your local computer. Use the following command examples from your project root, modifying them to fit your particular use case.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm composer update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm npm run dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose run --rm artisan migrate&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Permissions Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issues with filesystem permissions while visiting your application or running a container command, try completing one of the sets of steps below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using your server or local environment as the root user:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bring any container(s) down with &lt;code&gt;docker-compose down&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rename &lt;code&gt;docker-compose.root.yml&lt;/code&gt; file to &lt;code&gt;docker-compose.root.yml&lt;/code&gt;, replacing the previous one&lt;/li&gt; &#xA; &lt;li&gt;Re-build the containers by running &lt;code&gt;docker-compose build --no-cache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are using your server or local environment as a user that is not root:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bring any container(s) down with &lt;code&gt;docker-compose down&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In your terminal, run &lt;code&gt;export UID=$(id -u)&lt;/code&gt; and then &lt;code&gt;export GID=$(id -g)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you see any errors about readonly variables from the above step, you can ignore them and continue&lt;/li&gt; &#xA; &lt;li&gt;Re-build the containers by running &lt;code&gt;docker-compose build --no-cache&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, either bring back up your container network or re-run the command you were trying before, and see if that fixes it.&lt;/p&gt; &#xA;&lt;h2&gt;Persistent MySQL Storage&lt;/h2&gt; &#xA;&lt;p&gt;By default, whenever you bring down the Docker network, your MySQL data will be removed after the containers are destroyed. If you would like to have persistent data that remains after bringing containers down and back up, do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;mysql&lt;/code&gt; folder in the project root, alongside the &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folders.&lt;/li&gt; &#xA; &lt;li&gt;Under the mysql service in your &lt;code&gt;docker-compose.yml&lt;/code&gt; file, add the following lines:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;volumes:&#xA;  - ./mysql:/var/lib/mysql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using BrowserSync with Laravel Mix&lt;/h2&gt; &#xA;&lt;p&gt;If you want to enable the hot-reloading that comes with Laravel Mix&#39;s BrowserSync option, you&#39;ll have to follow a few small steps. First, ensure that you&#39;re using the updated &lt;code&gt;docker-compose.yml&lt;/code&gt; with the &lt;code&gt;:3000&lt;/code&gt; and &lt;code&gt;:3001&lt;/code&gt; ports open on the npm service. Then, add the following to the end of your Laravel project&#39;s &lt;code&gt;webpack.mix.js&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;.browserSync({&#xA;    proxy: &#39;site&#39;,&#xA;    open: false,&#xA;    port: 3000,&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From your terminal window at the project root, run the following command to start watching for changes with the npm container and its mapped ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose run --rm --service-ports npm run watch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That should keep a small info pane open in your terminal (which you can exit with Ctrl + C). Visiting &lt;a href=&#34;http://localhost:3000&#34;&gt;localhost:3000&lt;/a&gt; in your browser should then load up your Laravel application with BrowserSync enabled and hot-reloading active.&lt;/p&gt; &#xA;&lt;h2&gt;MailHog&lt;/h2&gt; &#xA;&lt;p&gt;The current version of Laravel (8 as of today) uses MailHog as the default application for testing email sending and general SMTP work during local development. Using the provided Docker Hub image, getting an instance set up and ready is simple and straight-forward. The service is included in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, and spins up alongside the webserver and database services.&lt;/p&gt; &#xA;&lt;p&gt;To see the dashboard and view any emails coming through the system, visit &lt;a href=&#34;http://localhost:8025&#34;&gt;localhost:8025&lt;/a&gt; after running &lt;code&gt;docker-compose up -d site&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vikash-kumar01/DevOps_3rdProj</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/vikash-kumar01/DevOps_3rdProj</id>
    <link href="https://github.com/vikash-kumar01/DevOps_3rdProj" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>crazy-max/docker-jetbrains-license-server</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/crazy-max/docker-jetbrains-license-server</id>
    <link href="https://github.com/crazy-max/docker-jetbrains-license-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JetBrains License Server Docker image&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/crazy-max/docker-jetbrains-license-server&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;128&#34; src=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/.github/docker-jetbrains-license-server.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/crazymax/jetbrains-license-server/tags?page=1&amp;amp;ordering=last_updated&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/crazy-max/docker-jetbrains-license-server?label=version&amp;amp;style=flat-square&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/crazy-max/docker-jetbrains-license-server/actions?workflow=build&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/crazy-max/docker-jetbrains-license-server/build?label=build&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/crazymax/jetbrains-license-server/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/crazymax/jetbrains-license-server.svg?style=flat-square&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/crazymax/jetbrains-license-server/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/crazymax/jetbrains-license-server.svg?style=flat-square&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;a href=&#34;https://github.com/sponsors/crazy-max&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/sponsor-crazy--max-181717.svg?logo=github&amp;amp;style=flat-square&#34; alt=&#34;Become a sponsor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.me/crazyws&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-00457c.svg?logo=paypal&amp;amp;style=flat-square&#34; alt=&#34;Donate Paypal&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/help/license_server/getting_started.html&#34;&gt;JetBrains License Server&lt;/a&gt; Docker image based on Alpine Linux.&lt;br&gt; If you are interested, &lt;a href=&#34;https://hub.docker.com/r/crazymax/&#34;&gt;check out&lt;/a&gt; my other Docker images!&lt;/p&gt; &#xA;&lt;p&gt;💡 Want to be notified of new releases? Check out 🔔 &lt;a href=&#34;https://github.com/crazy-max/diun&#34;&gt;Diun (Docker Image Update Notifier)&lt;/a&gt; project!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#build-locally&#34;&gt;Build locally&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#image&#34;&gt;Image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#environment-variables&#34;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#volumes&#34;&gt;Volumes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#ports&#34;&gt;Ports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#docker-compose&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#command-line&#34;&gt;Command line&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#upgrade&#34;&gt;Upgrade&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#notes&#34;&gt;Notes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#error-403-passed-value-of-header-host-is-not-allowed&#34;&gt;Error 403 Passed value of header &#34;Host&#34; is not allowed&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run as non-root user&lt;/li&gt; &#xA; &lt;li&gt;Multi-platform image&lt;/li&gt; &#xA; &lt;li&gt;License server completely customizable via environment variables&lt;/li&gt; &#xA; &lt;li&gt;Registration data and configuration in a single directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crazy-max/docker-msmtpd&#34;&gt;msmtpd SMTP relay&lt;/a&gt; image to send emails&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/containous/traefik-library-image&#34;&gt;Traefik&lt;/a&gt; as reverse proxy and creation/renewal of Let&#39;s Encrypt certificates (see &lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/examples/traefik&#34;&gt;this template&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build locally&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/crazy-max/docker-jetbrains-license-server.git&#xA;cd docker-jetbrains-license-server&#xA;&#xA;# Build image and output to docker (default)&#xA;docker buildx bake&#xA;&#xA;# Build multi-platform image&#xA;docker buildx bake image-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Image&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Registry&lt;/th&gt; &#xA;   &lt;th&gt;Image&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/crazymax/jetbrains-license-server/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;crazymax/jetbrains-license-server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/users/crazy-max/packages/container/package/jetbrains-license-server&#34;&gt;GitHub Container Registry&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ghcr.io/crazy-max/jetbrains-license-server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TZ&lt;/code&gt;: The timezone assigned to the container (default &lt;code&gt;UTC&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PUID&lt;/code&gt;: JLS UID (default &lt;code&gt;1000&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PGID&lt;/code&gt;: JLS GID (default &lt;code&gt;1000&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_VIRTUAL_HOSTS&lt;/code&gt;: &lt;a href=&#34;https://www.jetbrains.com/help/license_server/setting_host_and_port.html#d1010e63&#34;&gt;Virtual hosts&lt;/a&gt; where license server will be available (comma delimited for several hosts)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_CONTEXT&lt;/code&gt;: &lt;a href=&#34;https://www.jetbrains.com/help/license_server/setting_host_and_port.html#d1010e63&#34;&gt;Context path&lt;/a&gt; used by the license server (default &lt;code&gt;/&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_PROXY_TYPE&lt;/code&gt;: Type of &lt;a href=&#34;https://www.jetbrains.com/help/license_server/configuring_proxy_settings.html&#34;&gt;proxy&lt;/a&gt; to use. Can be &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; (default &lt;code&gt;https&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_PROXY_HOST&lt;/code&gt;: The host name of your proxy server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_PROXY_PORT&lt;/code&gt;: The port number that the proxy server listens to&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_PROXY_USER&lt;/code&gt;: Username to connect to the proxy server (no auth if empty)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_PROXY_PASSWORD&lt;/code&gt;: Password to connect to the proxy server (no auth if empty)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_ACCESS_CONFIG&lt;/code&gt;: JSON file to configure &lt;a href=&#34;https://www.jetbrains.com/help/license_server/configuring_user_restrictions.html&#34;&gt;user restrictions&lt;/a&gt; (default &lt;code&gt;/data/access-config.json&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_STATS_RECIPIENTS&lt;/code&gt;: &lt;a href=&#34;https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40&#34;&gt;Reports recipients&lt;/a&gt; email addresses for stats (comma delimited)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_REPORT_OUT_OF_LICENSE&lt;/code&gt;: &lt;a href=&#34;https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40&#34;&gt;Warn about lack of licenses&lt;/a&gt; every hour following the percentage threshold (default &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_SMTP_SERVER&lt;/code&gt;: SMTP server host to use for sending &lt;a href=&#34;https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html&#34;&gt;stats&lt;/a&gt; (stats disabled if empty)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_SMTP_PORT&lt;/code&gt;: SMTP server port (default &lt;code&gt;25&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_SMTP_USERNAME&lt;/code&gt;: SMTP username (auth disabled if empty)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_SMTP_PASSWORD&lt;/code&gt;: SMTP password (auth disabled if empty)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_STATS_FROM&lt;/code&gt;: &lt;a href=&#34;https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e40&#34;&gt;From address&lt;/a&gt; for stats emails&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_STATS_TOKEN&lt;/code&gt;: Enables an auth token for the &lt;a href=&#34;https://www.jetbrains.com/help/license_server/detailed_server_usage_statistics.html#d461e312&#34;&gt;stats API&lt;/a&gt; at &lt;code&gt;/reportApi&lt;/code&gt; (HTTP POST)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_SERVICE_LOGLEVEL&lt;/code&gt;: Logging of IDE requests and responses (default &lt;code&gt;warn&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_REPORTING_LOGLEVEL&lt;/code&gt;: Logging of actions on a server: tickets obtaining and revoking with user and license information (default &lt;code&gt;warn&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JLS_TICKETS_LOGLEVEL&lt;/code&gt;: Logging of actions with tickets. For example, manual ticket revoking (default &lt;code&gt;warn&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Volumes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/data&lt;/code&gt;: Contains &lt;a href=&#34;https://www.jetbrains.com/help/license_server/migrate.html&#34;&gt;registration data&lt;/a&gt; and configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Note that the volumes should be owned by the user/group with the specified &lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;PGID&lt;/code&gt;. If you don&#39;t give the volume correct permissions, the container may not start.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Ports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;8000&lt;/code&gt;: Jetbrains License Server HTTP port&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;Docker compose is the recommended way to run this image. Copy the content of folder &lt;a href=&#34;https://raw.githubusercontent.com/crazy-max/docker-jetbrains-license-server/master/examples/compose&#34;&gt;examples/compose&lt;/a&gt; in &lt;code&gt;/var/jls/&lt;/code&gt; on your host for example. Edit the compose and env files with your preferences and run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;docker-compose logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command line&lt;/h3&gt; &#xA;&lt;p&gt;You can also use the following minimal command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run -d -p 8000:8000 --name jetbrains_license_server \&#xA;  -e TZ=&#34;Europe/Paris&#34; \&#xA;  -e JLS_VIRTUAL_HOSTS=jls.example.com \&#xA;  -v $(pwd)/data:/data \&#xA;  crazymax/jetbrains-license-server:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Upgrade&lt;/h2&gt; &#xA;&lt;p&gt;Recreate the container whenever I push an update:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose pull&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;p&gt;If you have any trouble using the license server, check the official &lt;a href=&#34;https://www.jetbrains.com/help/license_server/troubleshooting.html&#34;&gt;Troubleshooting page&lt;/a&gt; of Jetbrains.&lt;/p&gt; &#xA;&lt;h3&gt;Error 403 Passed value of header &#34;Host&#34; is not allowed&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve got the following message :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Passed value of header &#34;Host&#34; is not allowed. Please contact your license server administrator.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s because the license server is running behind a reverse proxy. Please configure virtual hosts using the &lt;code&gt;JLS_VIRTUAL_HOSTS&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? Awesome! The most basic way to show your support is to star the project, or to raise issues. You can also support this project by &lt;a href=&#34;https://github.com/sponsors/crazy-max&#34;&gt;&lt;strong&gt;becoming a sponsor on GitHub&lt;/strong&gt;&lt;/a&gt; or by making a &lt;a href=&#34;https://www.paypal.me/crazyws&#34;&gt;Paypal donation&lt;/a&gt; to ensure this journey continues indefinitely!&lt;/p&gt; &#xA;&lt;p&gt;Thanks again for your support, it is much appreciated! &lt;span&gt;🙏&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT. See &lt;code&gt;LICENSE&lt;/code&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ALPHA-OFFICIAL-TEAM/ALPHA-V5</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/ALPHA-OFFICIAL-TEAM/ALPHA-V5</id>
    <link href="https://github.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎭🇱🇰𝙰𝙻𝙿𝙷𝙰🇱🇰🎭 v5 World best Sinhala/English WhatsApp Button Bot Developer Achi Fernando Enjoy Our Bot&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://camo.githubusercontent.com/71b837571c48af3aa60a73dbc9d5936aa359d78efbfa8a6743cbbbc16b80ef4d/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3830353930323039333930363630383138362f3830353931333937323533353539303932322f74656e6f722e676966&#34;&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;h1&gt;🎭🇱🇰 𝙰𝙻𝙿𝙷𝙰 🇱🇰🎭 WhatsApp User Bot v5.0.0&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://telegra.ph/file/f3b0b4e681583334b7330.jpg&#34; width=&#34;300&#34; height=&#34;300&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://camo.githubusercontent.com/71b837571c48af3aa60a73dbc9d5936aa359d78efbfa8a6743cbbbc16b80ef4d/68747470733a2f2f63646e2e646973636f72646170702e636f6d2f6174746163686d656e74732f3830353930323039333930363630383138362f3830353931333937323533353539303932322f74656e6f722e676966&#34;&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5/main/#&#34;&gt;&lt;img title=&#34;Achi Fernando&#34; src=&#34;https://img.shields.io/badge/ACHIYA-red?colorA=%23ff0000&amp;amp;colorB=%23017e40&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;   &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/RIPPER-SER&#xA;&#34;&gt;&lt;img title=&#34;Author&#34; src=&#34;https://img.shields.io/badge/Author-RIPPER-SER/ALPHA_WA?color=blue&amp;amp;style=for-the-badge&amp;amp;logo=whatsapp&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; Project created by &lt;a href=&#34;https://github.com/RIPPER-SER&#34;&gt;Achiya&lt;/a&gt; to make it public &lt;br&gt; | © | Reserved | &lt;br&gt; &lt;/p&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;pre&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; World best Sinhala/English WhatsApp Button Bot Developer Achi Fernando Enjoy Our Bot &lt;br&gt; &lt;a href=&#34;https://chat.whatsapp.com/EmxfOklzLVIIyDEKPx4IYj&#34;&gt;Whatsapp Support Group 01&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/KpBbjUuoKCE5DclK9lKdr0&#34;&gt;Whatsapp Support Group 02&lt;/a&gt; | &lt;a href=&#34;https://t.me/+TaQGxVd7ZM43NDk1&#34;&gt;Telegarm Support Group&lt;/a&gt; | &lt;a href=&#34;https://achibrolk.wordpress.com/alpha-bot-service&#34;&gt;Official Web Site &lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/c/ABLKPGAchiBrolk&#34;&gt;Youtube Channel&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/FTtlr84ndUWIkR7PeHoqXJ&#34;&gt;Whatsapp Bot Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/KQRCEydZ4QwJ7JpKypx5gg&#34;&gt;Whatsapp Tech Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/BiRfTmouLQ2J7MaLdczOY5&#34;&gt;Whatsapp Ehi Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/GPUvBfhhz7OLZhckbGi8mj&#34;&gt;Whatsapp knowledge Group&lt;/a&gt; | &lt;a href=&#34;https://chat.whatsapp.com/GSijEqwPZBS4a3VzzlvKLM&#34;&gt;Whatsapp Market Group&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;  &lt;h4&gt;TOTAL REPO VIEWS&lt;/h4&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://profile-counter.glitch.me/ALPHA-OFFICIAL-TEAM/count.svg?sanitize=true&#34; alt=&#34;Visitor Count&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;h4 align=&#34;center&#34;&gt;Support Video For Deploy Bot 👇:&lt;/h4&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://youtu.be/uAuIcxlGFKw&#34; target=&#34;blank&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Logo_of_YouTube_%282015-2017%29.svg/1200px-Logo_of_YouTube_%282015-2017%29.svg.png&#34; height=&#34;45&#34; width=&#34;90&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;  &lt;p&gt;&amp;nbsp;&lt;img align=&#34;center&#34; src=&#34;https://github-readme-streak-stats.herokuapp.com/?user=ALPHA-OFFICIAL-TEAM&amp;amp;theme=dark&#34; alt=&#34;RIPPER-SER&#34; center&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;/p&gt; &#xA;  &lt;h2&gt;&lt;/h2&gt; &#xA;  &lt;h3 align=&#34;center&#34;&gt;📢 Support Group :&lt;/h3&gt; &#xA;  &lt;p align=&#34;center&#34;&gt; Click WA logo to Join Support Group 👇 &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://chat.whatsapp.com/EmxfOklzLVIIyDEKPx4IYj&#34; target=&#34;blank&#34;&gt;&lt;img align=&#34;center&#34; src=&#34;https://github.com/Alien-alfa/PublicBot/blob/main/wlogo.svg.png &#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;  &lt;h3&gt;QR CODE&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://replit.com/@ALPHAOFFICIAL/V5&#34;&gt;&lt;img src=&#34;https://repl.it/badge/github/quiec/whatsasena&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;h3&gt;Deploy Page&lt;/h3&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/ALPHA-OFFICIAL-TEAM/ALPHA-V5&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;a href=&#34;https://replit.com/@ALPHAOFFICIAL/V5&#34;&gt;&lt;img src=&#34;https://github.com/Platane/snk/raw/output/github-contribution-grid-snake.svg?sanitize=true&#34; alt=&#34;Run on Repl.it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>remote-android/redroid-doc</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/remote-android/redroid-doc</id>
    <link href="https://github.com/remote-android/redroid-doc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ReDroid (Remote-Android) is a multi-arch, GPU enabled, Android in Container solution. Track issues / docs here&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/README.zh-cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#native-bridge-support&#34;&gt;Native Bridge Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#gms-support&#34;&gt;GMS Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#webrtc-streaming&#34;&gt;WebRTC Streaming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#how-to-build&#34;&gt;How To Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#note&#34;&gt;Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#contact-me&#34;&gt;Contact Me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ReDroid&lt;/strong&gt; (&lt;em&gt;Re&lt;/em&gt;mote an&lt;em&gt;Droid&lt;/em&gt;) is a GPU accelerated AIC (Android In Container) solution. You can boot many instances in Linux host (&lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;podman&lt;/code&gt;, &lt;code&gt;k8s&lt;/code&gt; etc.). &lt;em&gt;ReDroid&lt;/em&gt; supports both &lt;code&gt;arm64&lt;/code&gt; and &lt;code&gt;amd64&lt;/code&gt; architectures. &lt;em&gt;ReDroid&lt;/em&gt; is suitable for Cloud Gaming, VMI (Virtual Mobile Infrastructure), Automation Test and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/assets/redroid11.png&#34; alt=&#34;Screenshot of ReDroid 11&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android 13 Preview (&lt;code&gt;redroid/redroid:13.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:13.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:13.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 (&lt;code&gt;redroid/redroid:12.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 12 64bit only (&lt;code&gt;redroid/redroid:12.0.0_64only-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0_64only-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:12.0.0_64only-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 11 (&lt;code&gt;redroid/redroid:11.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:11.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:11.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 10 (&lt;code&gt;redroid/redroid:10.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:10.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:10.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 9 (&lt;code&gt;redroid/redroid:9.0.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:9.0.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:9.0.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android 8.1 (&lt;code&gt;redroid/redroid:8.1.0-latest&lt;/code&gt;, &lt;code&gt;redroid/redroid:8.1.0-amd64&lt;/code&gt;, &lt;code&gt;redroid/redroid:8.1.0-arm64&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tested Platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 16.04 / 18.04 / 20.04 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;Amazon Linux 2 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;Alibaba Cloud Linux 2 (amd64)&lt;/li&gt; &#xA; &lt;li&gt;Alibaba Cloud Linux 3 (amd64 / arm64)&lt;/li&gt; &#xA; &lt;li&gt;WSL 2 (Ubuntu) (amd64)&lt;/li&gt; &#xA; &lt;li&gt;CentOS (amd64*, arm64*)&lt;/li&gt; &#xA; &lt;li&gt;OpenEuler 20.03 (amd64, arm64*)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* customized kernel required&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; requires some kernel modules (&lt;code&gt;binderfs&lt;/code&gt;, &lt;code&gt;ashmem&lt;/code&gt; etc.). &lt;strong&gt;Check &lt;a href=&#34;https://github.com/remote-android/redroid-modules&#34;&gt;kernel modules&lt;/a&gt; to install these modules.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# start and connect via `scrcpy`&#xA;docker run -itd --rm --memory-swappiness=0 --privileged \&#xA;    --pull always \&#xA;    -v ~/data:/data \&#xA;    -p 5555:5555 \&#xA;    redroid/redroid:11.0.0-latest&#xA;&#xA;adb connect &amp;lt;IP&amp;gt;:5555&#xA;scrcpy --serial &amp;lt;IP&amp;gt;:5555&#xA;&#xA;## Explanation:&#xA;##   --pull always    -- be sure to use the latest image&#xA;##   -v ~/data:/data  -- mount data partition&#xA;##   -p 5555:5555     -- expose adb port, you can connect via `adb connect &amp;lt;HOST-IP&amp;gt;`&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;required params (already added in docker image)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;qemu=1&lt;/li&gt; &#xA; &lt;li&gt;androidboot.hardware=redroid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;display params&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redroid.width=720&lt;/li&gt; &#xA; &lt;li&gt;redroid.height=1280&lt;/li&gt; &#xA; &lt;li&gt;redroid.fps=15&lt;/li&gt; &#xA; &lt;li&gt;ro.sf.lcd_density=320&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Network:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;net.eth0.dns1=&#xA;  &lt;ip&gt;&lt;/ip&gt;&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.type=[static|pac|none|unassigned]&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.host=&#xA;  &lt;ip&gt;&lt;/ip&gt;&lt;/li&gt; &#xA; &lt;li&gt;net.eth0.proxy.port=&#xA;  &lt;port&gt;&lt;/port&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GPU accelerating &lt;em&gt;ReDroid&lt;/em&gt; use mesa3d to accelerate 3D rendering. Currently tested platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AMD (arm64, amd64 with &lt;code&gt;amdgpu&lt;/code&gt; driver)&lt;/li&gt; &#xA; &lt;li&gt;Intel (amd64 with &lt;code&gt;i915&lt;/code&gt; driver)&lt;/li&gt; &#xA; &lt;li&gt;virtio-gpu (vendor agnostic, arm64 and amd64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;params:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redroid.gpu.mode=[auto|host|guest]&lt;/li&gt; &#xA; &lt;li&gt;redroid.gpu.node=[/dev/dri/renderDxxx]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: you can override system props prefixed with &lt;code&gt;qemu.&lt;/code&gt; or &lt;code&gt;ro.&lt;/code&gt;. for example, you can set &lt;code&gt;ro.secure=0&lt;/code&gt;, then you can get root adb shell by default.&lt;/p&gt; &#xA;&lt;h2&gt;Native Bridge Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to run &lt;code&gt;arm&lt;/code&gt; Apps in &lt;code&gt;x86&lt;/code&gt; &lt;em&gt;ReDroid&lt;/em&gt; instance via &lt;code&gt;libhoudini&lt;/code&gt;, &lt;code&gt;libndk_translator&lt;/code&gt; or &lt;code&gt;QEMU translator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Take &lt;code&gt;libndk_translator&lt;/code&gt; as an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# grab libndk_translator libs from Android 11 Emulator&#xA;find /system \( -name &#39;libndk_translation*&#39; -o -name &#39;*arm*&#39; -o -name &#39;ndk_translation*&#39; \) | tar -cf native-bridge.tar -T -&#xA;&#xA;# example structure, be careful the file owner and mode&#xA;&#xA;system/&#xA;├── bin&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── arm64&#xA;├── etc&#xA;│&amp;nbsp;&amp;nbsp; ├── binfmt_misc&#xA;│&amp;nbsp;&amp;nbsp; └── init&#xA;├── lib&#xA;│&amp;nbsp;&amp;nbsp; ├── arm&#xA;│&amp;nbsp;&amp;nbsp; └── libnb.so&#xA;└── lib64&#xA;    ├── arm64&#xA;    └── libnb.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# Dockerfile&#xA;FROM redroid/redroid:11.0.0-amd64&#xA;&#xA;ADD native-bridge.tar /&#xA;&#xA;COPY factory.prop /factory/factory.prop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;# factory.prop&#xA;ro.product.cpu.abilist=x86_64,arm64-v8a,x86,armeabi-v7a,armeabi&#xA;ro.product.cpu.abilist64=x86_64,arm64-v8a&#xA;ro.product.cpu.abilist32=x86,armeabi-v7a,armeabi&#xA;ro.dalvik.vm.isa.arm=x86&#xA;ro.dalvik.vm.isa.arm64=x86_64&#xA;ro.enable.native.bridge.exec=1&#xA;ro.dalvik.vm.native.bridge=libndk_translation.so&#xA;ro.ndk_translation.version=0.2.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# build docker image&#xA;docker build . -t redroid:11.0.0-amd64-nb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://gitlab.com/android-generic/android_vendor_google_emu-x86&#34;&gt;https://gitlab.com/android-generic/android_vendor_google_emu-x86&lt;/a&gt; to extract automatically libndk_translator from the Android 11 emulator images.&lt;/p&gt; &#xA;&lt;p&gt;After following the guide on &#34;Building&#34; section, you will get native-bridge.tar under vendor/google/emu-x86/proprietary.&lt;/p&gt; &#xA;&lt;p&gt;If you find errors in using libndk_translator, please try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;YOU MUST HAVE binfmt_misc kernel module loaded for supporting other binaries formats! If you have not loaded it already:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo modprobe binfmt_misc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or add binfmt_misc to /etc/modules to autoload it at boot (for example in Ubuntu).&lt;/p&gt; &lt;p&gt;Check your specific distribution wiki/docs if you don&#39;t have binfmt_misc module and you want to install it, or how to autoload the module at boot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the native bridge archive, preserving the permissions, set specific permissions for allowing init file to be executed and traverse of important dirs:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir native-bridge&#xA;cd native-bridge&#xA;sudo tar -xpf ../native-bridge.tar `#or path to your actual native bridge tarball`&#xA;sudo chmod 0644 system/etc/init/ndk_translation_arm64.rc&#xA;sudo chmod 0755 system/bin/arm&#xA;sudo chmod 0755 system/bin/arm64&#xA;sudo chmod 0755 system/lib/arm&#xA;sudo chmod 0755 system/lib64/arm64&#xA;sudo chmod 0644 system/etc/binfmt_misc/*&#xA;sudo tar -cpf native-bridge.tar system&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Move or copy your new native-bridge.tar into the dir where you have written your Dockerfile, and rebuild again the new image with native bridge support.&lt;/p&gt; &lt;p&gt;You must use sudo or a root shell to preserve the permissions and owners of the files.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GMS Support&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to add GMS (Google Mobile Service) support in &lt;em&gt;ReDroid&lt;/em&gt; via &lt;a href=&#34;https://opengapps.org/&#34;&gt;Open GApps&lt;/a&gt;, &lt;a href=&#34;https://microg.org/&#34;&gt;MicroG&lt;/a&gt; or &lt;a href=&#34;https://gitlab.com/MindTheGapps/vendor_gapps&#34;&gt;MindTheGapps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WebRTC Streaming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;CALL FOR HELP&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Plan to port &lt;code&gt;WebRTC&lt;/code&gt; solutions from &lt;code&gt;cuttlefish&lt;/code&gt;, including frontend (HTML5), backend and many virtual HALs.&lt;/p&gt; &#xA;&lt;h2&gt;How To Build&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s Same as AOSP building process. But I suggest to use &lt;code&gt;docker&lt;/code&gt; to build.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/remote-android/redroid-doc/master/android-builder-docker&#34;&gt;android-builder-docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container disappeared immediately&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;make sure the required kernel modules are installed; run &lt;code&gt;dmesg -T&lt;/code&gt; for detailed logs&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Container running, but adb cannot connect (device offline etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;run &lt;code&gt;docker exec -it &amp;lt;container&amp;gt; sh&lt;/code&gt;, then check &lt;code&gt;ps -A&lt;/code&gt; and &lt;code&gt;logcat&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;try &lt;code&gt;dmesg -T&lt;/code&gt; if cannot get a container shell&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kernel 5.7+, need enable &lt;code&gt;binderfs&lt;/code&gt; / &lt;code&gt;ashmem&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;redroid&lt;/code&gt; require &lt;code&gt;pid_max&lt;/code&gt; less than 65535, or else may run into problems. Change in host OS, or add &lt;code&gt;pid_max&lt;/code&gt; separation support in PID namespace&lt;/li&gt; &#xA; &lt;li&gt;SElinux is disabled in &lt;em&gt;ReDroid&lt;/em&gt;; possible enabled with &lt;a href=&#34;http://namei.org/presentations/selinux_namespacing_lca2018.pdf&#34;&gt;selinuxns POC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sdcardfs&lt;/code&gt; currently not implemented, use &lt;code&gt;fuse&lt;/code&gt; instead; may need run &lt;code&gt;modprobe fuse&lt;/code&gt; first in some OS (AmazonLinux2 ?)&lt;/li&gt; &#xA; &lt;li&gt;CGroups errors ignored; some (&lt;code&gt;stune&lt;/code&gt; for example) not supported in generic linux.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;procfs&lt;/code&gt; not fully seperated with host OS; Community use &lt;code&gt;lxcfs&lt;/code&gt; and some cloud vendor (&lt;a href=&#34;https://github.com/Tencent/TencentOS-kernel&#34;&gt;TencentOS&lt;/a&gt;) enhanced in their own kernel.&lt;/li&gt; &#xA; &lt;li&gt;vintf verify disabled (since no kernel)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:ziyang.zhou@outlook.com&#34;&gt;ziyang.zhou@outlook.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;remote-android.slack.com (invite link: &lt;a href=&#34;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&#34;&gt;https://join.slack.com/t/remote-android/shared_invite/zt-q40byk2o-YHUgWXmNIUC1nweQj0L9gA&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; itself is under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License&lt;/a&gt;, since &lt;em&gt;ReDroid&lt;/em&gt; includes many 3rd party modules, you may need to examine license carefully.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;ReDroid&lt;/em&gt; kernel modules are under &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GPL v2&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VergilGao/docker-mdc</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/VergilGao/docker-mdc</id>
    <link href="https://github.com/VergilGao/docker-mdc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://github.com/yoshiko2/Movie_Data_Capture 的 docker镜像，帮助你更优雅的管理硬盘中的大姐姐们。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Movie Data Capture - Docker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VergilGao/docker-mdc&#34;&gt;github&lt;/a&gt; &lt;a href=&#34;https://github.com/VergilGao/docker-mdc/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/VergilGao/docker-mdc&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; | &lt;a href=&#34;https://hub.docker.com/repository/docker/vergilgao/mdc&#34;&gt;dockerhub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/VergilGao/docker-mdc/workflows/publish/badge.svg?sanitize=true&#34; alt=&#34;publish&#34;&gt; &lt;a href=&#34;https://github.com/VergilGao/docker-mdc/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/VergilGao/docker-mdc&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;数据无价，请谨慎操作！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;数据无价，请谨慎操作！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;数据无价，请谨慎操作！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;重要的事情说三遍。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Movie_Data_Capture&lt;/code&gt; 以下简称 &lt;code&gt;mdc&lt;/code&gt;是一款由&lt;a href=&#34;https://github.com/yoshiko2&#34;&gt;yoshiko2&lt;/a&gt;使用 &lt;code&gt;python3&lt;/code&gt;编写的成人影片刮削器。&lt;/p&gt; &#xA;&lt;p&gt;本镜像能帮助用户在nas中无需安装运行时环境，可以更简单的使用 &lt;code&gt;mdc&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;本仓库针对 &lt;code&gt;unraid&lt;/code&gt;系统做出了特别优化，对于 &lt;code&gt;unraid&lt;/code&gt;用户，本镜像的默认配置即可避免权限问题。对于其他nas系统用户，请按照各自的系统权限策略设置 &lt;code&gt;UID&lt;/code&gt; &lt;code&gt;GID&lt;/code&gt; &lt;code&gt;UMASK&lt;/code&gt;三个环境变量。&lt;/p&gt; &#xA;&lt;p&gt;本镜像从仓库&lt;a href=&#34;https://github.com/yoshiko2/movie_data_Capture&#34;&gt;Movie_Data_Capture&lt;/a&gt;构建，因为本人工作较忙，很可能不会及时和上游release同步。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;注意，因为docker文件系统的特殊性，请仔细阅读以下操作指南后再行使用。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;镜像作者&lt;a href=&#34;https://github.com/VergilGao&#34;&gt;VergilGao&lt;/a&gt; &lt;a href=&#34;https://github.com/yoshiko2&#34;&gt;yoshiko2&lt;/a&gt;对使用此镜像导致的文件丢失、损坏均不负责。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;6.2.1版本有功能性BUG，已被上游作者废置，请酌情使用&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;p&gt;20220529：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;修复root用户运行&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;20220528：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;更新至上游6.2.2版本&lt;/li&gt; &#xA; &lt;li&gt;修复人脸识别未生效的问题&lt;/li&gt; &#xA; &lt;li&gt;通过环境变量启动程序的方法已经废弃，程序将在启动时检测是否存在配置文件，如果不存在，将会在config映射目录下创建，并且退出。请修改配置文件后再次启动程序。&lt;strong&gt;Breaking Change!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;环境变量&lt;code&gt;PUID&lt;/code&gt;,&lt;code&gt;PGID&lt;/code&gt;已经修改为&lt;code&gt;UID&lt;/code&gt; &lt;code&gt;GID&lt;/code&gt;&lt;strong&gt;Breaking Change!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UMASK&lt;/code&gt;的默认值改为&lt;code&gt;002&lt;/code&gt;&lt;strong&gt;Breaking Change!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;20220312:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增自定义配置文件功能，你现在可以使用自己编写的配置文件来运行程序了！请映射 &lt;code&gt;mdc.ini&lt;/code&gt; 文件至 &lt;code&gt;/config/mdc.ini&lt;/code&gt; 目录，程序会自动判断是否存在配置文件。如果配置文件存在，环境变量的设置及修改将会&lt;strong&gt;不起作用&lt;/strong&gt;，这意味着如果使用环境变量启动，程序只会应用&lt;strong&gt;首次&lt;/strong&gt;启动容器时的环境变量，反复启动程序时，新修改的环境变量将&lt;strong&gt;不起作用&lt;/strong&gt;。如果你的容器不是一次性的，请使用映射mdc.ini文件的方式启动。&lt;/li&gt; &#xA; &lt;li&gt;新增环境变量 &lt;code&gt;TZ&lt;/code&gt;，默认值为 &lt;code&gt;Asia/Shanghai&lt;/code&gt;，这将设置容器内的时间区域。&lt;/li&gt; &#xA; &lt;li&gt;新增环境变量 &lt;code&gt;UMASK&lt;/code&gt;，修改 &lt;code&gt;PUID&lt;/code&gt;和 &lt;code&gt;PGID&lt;/code&gt;的默认值，目前的默认值为 &lt;code&gt;PUID=99, PGID=100 UMASK=000&lt;/code&gt;，此为 &lt;code&gt;UNRAID&lt;/code&gt;系统用户的推荐配置，其他系统仍然需要自行修改以防止出现权限问题。&lt;/li&gt; &#xA; &lt;li&gt;删除 &lt;code&gt;s6-overlay&lt;/code&gt;驱动，权限问题将通过 &lt;code&gt;su&lt;/code&gt;命令解决，因此，本镜像的 &lt;code&gt;PUID&lt;/code&gt;和 &lt;code&gt;PGID&lt;/code&gt;环境变量事实上等同于 &lt;code&gt;UID&lt;/code&gt;和 &lt;code&gt;GID&lt;/code&gt;，为了保持兼容性，环境变量名不再修改。&lt;/li&gt; &#xA; &lt;li&gt;新增&lt;a href=&#34;https://github.com/VergilGao/docker-mdc/pkgs/container/mdc&#34;&gt;ghcr.io&lt;/a&gt;镜像仓库，此仓库只有 &lt;code&gt;vergilgao/mdc&lt;/code&gt;，同时dockerhub镜像仓库将继续保持 &lt;code&gt;vergilgao/avdc&lt;/code&gt;和 &lt;code&gt;vergilgao/mdc&lt;/code&gt;两个地址的更新。&lt;/li&gt; &#xA; &lt;li&gt;提升tag丰富度，将上游版本号按 &lt;code&gt;{major}.{minor}.{build}&lt;/code&gt;拆分更新，同时新增一个定义为 &lt;code&gt;{version}-r{release_count}&lt;/code&gt;的tag，用于标识同一个上游release下docker版本的更新次数。&lt;/li&gt; &#xA; &lt;li&gt;新增夜间构建tag，只会推送到 &lt;code&gt;vergilgao/mdc&lt;/code&gt;和 &lt;code&gt;ghcr.io/vergilgao/mdc&lt;/code&gt;，此tag将保持每周一次的更新频率，并不保证会更新至最新源码。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;20220209：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;文件挂载目录从 /app/data 变为 /data &lt;strong&gt;Breaking Change!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;增加 PUID PGID 两个环境变量，现在你可以通过设置这两个环境变量来控制程序刮削获取到的文件权限，注意，程序启动后同时也会用这两个环境变量设置整个挂载目录的所有文件的权限！两个环境变量的默认值均为 666 &lt;strong&gt;强烈推荐设置这两个环境变量&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;镜像从源代码运行改为了使用 alpine 运行二进制 &lt;strong&gt;仅测试了x64环境，其他环境如果有问题请发issue反馈&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;测试&lt;/h2&gt; &#xA;&lt;p&gt;首先你可以测试一下程序是否可用。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull ghcr.io/vergilgao/mdc:latest&#xA;mkdir test&#xA;dd if=/dev/zero of=&#34;./test/MIFD-046.mp4&#34; bs=250MB count=1&#xA;docker run --rm --name mdc_test -it -v ${PWD}/test:/data -v ${PWD}/config:/config -e UID=$(stat -c %u test) -e GID=$(stat -c %g test) ghcr.io/vergilgao/mdc:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后你会看到如下输出：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;---Setup Timezone to Asia/Shanghai---&#xA;---Checking if UID: 1000 matches user---&#xA;usermod: no changes&#xA;---Checking if GID: 1000 matches user---&#xA;usermod: no changes&#xA;---Setting umask to 002---&#xA;---Taking ownership of data...---&#xA;Checking if config file exist&#xA;Starting...&#xA;[*]================= Movie Data Capture =================&#xA;[*]                        6.2.1&#xA;[*]======================================================&#xA;[*] - Linux-5.4.0-110-generic-x86_64-with&#xA;[*] - x86_64 - Python-3.9.13&#xA;[*]======================================================&#xA;[*] - 严禁在墙内宣传本项目 -&#xA;[*]======================================================&#xA;[+]Start at 2022-05-26 15:12:30&#xA;[+]Load Config file &#39;/config/mdc.ini&#39;.&#xA;[+]Main Working mode ## 1: Scraping ## , nfo_skip_days=30&#xA;[+]Find 1 movies.&#xA;[*]======================================================&#xA;[!]                - 100.% [1/1] -             15:12:31&#xA;[!] [MIFD-046] As Number Processing for &#39;/data/御坂りあ/MIFD-046/MIFD-046.mp4&#39;&#xA;[+]Find movie [MIFD-046] metadata on website &#39;javbus&#39;&#xA;[+]Image Downloaded! MIFD-046-fanart.jpg&#xA;[+]Image Cutted!     MIFD-046-poster.jpg&#xA;[+]Wrote!            JAV_output/御坂りあ/MIFD-046/MIFD-046.nfo&#xA;[*]======================================================&#xA;[+]Deleting empty folder /data/JAV_output/御坂りあ/MIFD-046/extrafanart&#xA;[+]Deleting empty folder /data/failed&#xA;[+]Running time 0:00:17.748  End at 2022-05-26 15:12:47&#xA;[+]All finished!!!&#xA;Log file &#39;/config/.mlogs/mdc_20220526T151229.txt&#39; saved.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;确认程序没有问题后把测试数据删掉就好了。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rm -rf test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;docker环境变量&lt;/h2&gt; &#xA;&lt;p&gt;本镜像增加了权限设置功能，你可以通过使用 UID (用户id) GID (组id) 两个环境变量来配置程序运行后所有文件的权限。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;字段名&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;值语义&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;预设值&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UID&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;uid&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;99&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GID&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gid&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UMASK&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;data目录的umask&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;002&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TZ&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;容器内时间区域&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Asia/Shanghai&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;程序运行时配置&lt;/h2&gt; &#xA;&lt;h3&gt;映射mdc.ini文件&lt;/h3&gt; &#xA;&lt;p&gt;假设你的mdc.ini文件存放在当前目录的config子目录下。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm -it \&#xA;  --name mdc_test \&#xA;  -v ${PWD}/test:/data \&#xA;  -v ${PWD}/config:/config \&#xA;  -e PUID=1000&#xA;  -e PGID=1000&#xA;  vergilgao/mdc:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;程序将在启动时检测是否存在配置文件，如果不存在，将会在config映射目录下创建，并且退出。请修改配置文件后再次启动程序。&lt;/p&gt; &#xA;&lt;h3&gt;环境变量配置（已废弃）&lt;/h3&gt; &#xA;&lt;h2&gt;夜间构建版本（已暂停）&lt;/h2&gt; &#xA;&lt;p&gt;本仓库每周一次使用当时的最新上游源码构建，tag为nightly，你可以选择拉取 &lt;code&gt;vergilgao/mdc:nightly&lt;/code&gt;和 &lt;code&gt;ghcr.io/vergilgao/mdc:nightly&lt;/code&gt;进行测试，注意此tag仅用于测试，并不保证会更新至最新源码，更不保证功能的稳定性。 此外，由于配置文件兼容性问题，默认情况下，夜间构建版本会忽略传入的配置文件环境变量，使用夜间构建版本强烈建议自行映射配置文件。&lt;/p&gt; &#xA;&lt;h2&gt;构建（开发人员，构建方式已经发生变化，等待补充修改）&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd docker-mdc&#xA;docker build -t mdc --build-arg MDC_VERSION=&#34;6.0.1&#34; ./&#xA;&#xA;mkdir test&#xA;dd if=/dev/zero of=&#34;./test/MIFD-046.mp4&#34; bs=250MB count=1&#xA;docker run --rm --name mdc_test -it -v ${PWD}/test:/data -e UID=$(stat -c %u test) -e GID=$(stat -c %g test) vergilgao/mdc:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;申明&lt;/h2&gt; &#xA;&lt;p&gt;当你查阅、下载了本项目源代码或二进制程序，即代表你接受了以下条款&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件仅供技术交流，学术交流使用&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;请勿在墙内的社交平台上宣传此项目&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;本软件作者编写出该软件旨在学习 Python ，提高编程水平&lt;/li&gt; &#xA; &lt;li&gt;本软件不提供任何影片下载的线索&lt;/li&gt; &#xA; &lt;li&gt;用户在使用本软件前，请用户了解并遵守当地法律法规，如果本软件使用过程中存在违反当地法律法规的行为，请勿使用该软件&lt;/li&gt; &#xA; &lt;li&gt;用户在使用本软件时，若用户在当地产生一切违法行为由用户承担&lt;/li&gt; &#xA; &lt;li&gt;严禁用户将本软件使用于商业和个人其他意图&lt;/li&gt; &#xA; &lt;li&gt;源代码和二进制程序请在下载后24小时内删除&lt;/li&gt; &#xA; &lt;li&gt;出售源码者的母亲会升天&lt;/li&gt; &#xA; &lt;li&gt;本项目发起者yoshiko2保留最终决定权和最终解释权&lt;/li&gt; &#xA; &lt;li&gt;若用户不同意上述条款任意一条，请勿使用本软件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;When you view and download the source code or binary program of this project, it means that you have accepted the following terms&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This software is only for technical exchange and academic exchange&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Please do not promote this project on popular social platforms&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;The software author wrote this software to learn Python and improve programming&lt;/li&gt; &#xA; &lt;li&gt;This software does not provide any clues for video download&lt;/li&gt; &#xA; &lt;li&gt;Before using this software, please understand and abide by local laws and regulations. If there is any violation of local laws and regulations during the use of this software, * please do not use this software&lt;/li&gt; &#xA; &lt;li&gt;When the user uses this software, if the user has any illegal acts in the local area, the user shall bear&lt;/li&gt; &#xA; &lt;li&gt;It is strictly forbidden for users to use this software for commercial and personal intentions&lt;/li&gt; &#xA; &lt;li&gt;Please delete the source code and binary program within 24 hours after downloading&lt;/li&gt; &#xA; &lt;li&gt;The mother of the source seller will die&lt;/li&gt; &#xA; &lt;li&gt;The author of this software yoshiko2 reserves the right of final decision and final interpretation&lt;/li&gt; &#xA; &lt;li&gt;If the user does not agree with any of the above terms, please do not use this software&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;本プロジェクトのソースコード、バイナリファイルをダウンロード、または表示するしたうえで、あなたは本規約に同意したものと見なします。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;このソフトウェアは、開発技術学習することのみに使用できます。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ソーシャルメディアで本プロジェクトの宣伝をご遠慮ください&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;作者はPythonの勉強と技術力の向上のために、このソフトウェアを作成しました&lt;/li&gt; &#xA; &lt;li&gt;本ソフトウェアは、あらゆる動画ダウンロード機能一切提供しません&lt;/li&gt; &#xA; &lt;li&gt;本ソフトウェアを使用する前に、現地の法律規範をよく理解する必要があります。あなたは、適用される現地の法令を順守する責任を負います&lt;/li&gt; &#xA; &lt;li&gt;本ソフトウェアを使用した結果生じた損害や法的責任につきまして作者は一切責任を負いません&lt;/li&gt; &#xA; &lt;li&gt;本ソフトウェアを商用、業務、その他の営利目的のために使用することは一切禁止します。&lt;/li&gt; &#xA; &lt;li&gt;本プロジェクトのソースコード、バイナリファイルをダウンロードした場合、24時間以内に削除してください&lt;/li&gt; &#xA; &lt;li&gt;元売り手の母親が天に召される&lt;/li&gt; &#xA; &lt;li&gt;最終解釈権は作者yoshiko2に属します&lt;/li&gt; &#xA; &lt;li&gt;本規約およびすべての適用法、規約および規則を遵守する場合にのみ本ソフトウェアを使用することができます&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>linuxserver/docker-qbittorrent</title>
    <updated>2022-05-31T01:37:50Z</updated>
    <id>tag:github.com,2022-05-31:/linuxserver/docker-qbittorrent</id>
    <link href="https://github.com/linuxserver/docker-qbittorrent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://linuxserver.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png&#34; alt=&#34;linuxserver.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34; title=&#34;all the things you can do with our containers including How-To guides, opinions and much more!&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Blog&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YWrKVTn&#34; title=&#34;realtime support / chat with the community and the team.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/354974912613449730.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Discord&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discourse.linuxserver.io&#34; title=&#34;post on our community forum.&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=discourse&#34; alt=&#34;Discourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fleet.linuxserver.io&#34; title=&#34;an online web interface which displays all of our maintained images.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Fleet&#34; alt=&#34;Fleet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver&#34; title=&#34;view the source for all of our repositories.&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub&amp;amp;logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/linuxserver&#34; title=&#34;please consider helping us by either donating or contributing to our budget&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=Supporters&amp;amp;logo=open%20collective&#34; alt=&#34;Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://linuxserver.io&#34;&gt;LinuxServer.io&lt;/a&gt; team brings you another container release featuring:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;regular and timely application updates&lt;/li&gt; &#xA; &lt;li&gt;easy user mappings (PGID, PUID)&lt;/li&gt; &#xA; &lt;li&gt;custom base image with s6 overlay&lt;/li&gt; &#xA; &lt;li&gt;weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth&lt;/li&gt; &#xA; &lt;li&gt;regular security updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find us at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.linuxserver.io&#34;&gt;Blog&lt;/a&gt; - all the things you can do with our containers including How-To guides, opinions and much more!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/YWrKVTn&#34;&gt;Discord&lt;/a&gt; - realtime support / chat with the community and the team.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.linuxserver.io&#34;&gt;Discourse&lt;/a&gt; - post on our community forum.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fleet.linuxserver.io&#34;&gt;Fleet&lt;/a&gt; - an online web interface which displays all of our maintained images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linuxserver&#34;&gt;GitHub&lt;/a&gt; - view the source for all of our repositories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/linuxserver&#34;&gt;Open Collective&lt;/a&gt; - please consider helping us by either donating or contributing to our budget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent&#34;&gt;linuxserver/qbittorrent&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fqbittorrent&#34;&gt;&lt;img src=&#34;https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fqbittorrent?color=94398d&amp;amp;label-color=555555&amp;amp;logo-color=ffffff&amp;amp;style=for-the-badge&amp;amp;package-type=docker&#34; alt=&#34;Scarf.io pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/linuxserver/docker-qbittorrent.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/linuxserver/docker-qbittorrent.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent/packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitHub%20Package&amp;amp;logo=github&#34; alt=&#34;GitHub Package Repository&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/linuxserver.io/docker-qbittorrent/container_registry&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=GitLab%20Registry&amp;amp;logo=gitlab&#34; alt=&#34;GitLab Container Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/linuxserver.io/qbittorrent&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=linuxserver.io&amp;amp;message=Quay.io&#34; alt=&#34;Quay.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/qbittorrent&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/linuxserver/qbittorrent.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=pulls&amp;amp;logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/linuxserver/qbittorrent&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/linuxserver/qbittorrent.svg?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=stars&amp;amp;logo=docker&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-qbittorrent/job/master/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-qbittorrent%2Fjob%2Fmaster%2F&amp;amp;logo=jenkins&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-tests.linuxserver.io/linuxserver/qbittorrent/latest/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=CI&amp;amp;query=CI&amp;amp;url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fqbittorrent%2Flatest%2Fci-status.yml&#34; alt=&#34;LSIO CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.qbittorrent.org/&#34;&gt;Qbittorrent&lt;/a&gt; project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.qbittorrent.org/&#34;&gt;&lt;img src=&#34;https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png&#34; alt=&#34;qbittorrent&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;We utilise the docker manifest for multi-platform awareness. More information is available from docker &lt;a href=&#34;https://github.com/docker/distribution/raw/master/docs/spec/manifest-v2-2.md#manifest-list&#34;&gt;here&lt;/a&gt; and our announcement &lt;a href=&#34;https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simply pulling &lt;code&gt;lscr.io/linuxserver/qbittorrent:latest&lt;/code&gt; should retrieve the correct image for your arch, but you can also pull specific arch images via tags.&lt;/p&gt; &#xA;&lt;p&gt;The architectures supported by this image are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86-64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;amd64-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;arm64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm64v8-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;armhf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;arm32v7-&amp;lt;version tag&amp;gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Version Tags&lt;/h2&gt; &#xA;&lt;p&gt;This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tag&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Available&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;latest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Stable qbittorrent releases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Application Setup&lt;/h2&gt; &#xA;&lt;p&gt;The webui is at &lt;code&gt;&amp;lt;your-ip&amp;gt;:8080&lt;/code&gt; and the default username/password is &lt;code&gt;admin/adminadmin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Change username/password via the webui in the webui section of settings.&lt;/p&gt; &#xA;&lt;h3&gt;WEBUI_PORT variable&lt;/h3&gt; &#xA;&lt;p&gt;Due to issues with CSRF and port mapping, should you require to alter the port for the webui you need to change both sides of the -p 8080 switch AND set the WEBUI_PORT variable to the new port.&lt;/p&gt; &#xA;&lt;p&gt;For example, to set the port to 8090 you need to set -p 8090:8090 and -e WEBUI_PORT=8090&lt;/p&gt; &#xA;&lt;p&gt;This should alleviate the &#34;white screen&#34; issue.&lt;/p&gt; &#xA;&lt;p&gt;If you have no webui , check the file /config/qBittorrent/qBittorrent.conf&lt;/p&gt; &#xA;&lt;p&gt;edit or add the following lines&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;WebUI\Address=*&#xA;&#xA;WebUI\ServerDomains=*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are running a very old (3.x) kernel you may run into &lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent/issues/103&#34;&gt;this issue&lt;/a&gt; which can be worked around using &lt;a href=&#34;https://github.com/linuxserver/docker-qbittorrent/issues/103#issuecomment-831238484&#34;&gt;this method&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Here are some example snippets to help you get started creating a container.&lt;/p&gt; &#xA;&lt;h3&gt;docker-compose (recommended, &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;version: &#34;2.1&#34;&#xA;services:&#xA;  qbittorrent:&#xA;    image: lscr.io/linuxserver/qbittorrent:latest&#xA;    container_name: qbittorrent&#xA;    environment:&#xA;      - PUID=1000&#xA;      - PGID=1000&#xA;      - TZ=Europe/London&#xA;      - WEBUI_PORT=8080&#xA;    volumes:&#xA;      - /path/to/appdata/config:/config&#xA;      - /path/to/downloads:/downloads&#xA;    ports:&#xA;      - 8080:8080&#xA;      - 6881:6881&#xA;      - 6881:6881/udp&#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker cli (&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;click here for more info&lt;/a&gt;)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name=qbittorrent \&#xA;  -e PUID=1000 \&#xA;  -e PGID=1000 \&#xA;  -e TZ=Europe/London \&#xA;  -e WEBUI_PORT=8080 \&#xA;  -p 8080:8080 \&#xA;  -p 6881:6881 \&#xA;  -p 6881:6881/udp \&#xA;  -v /path/to/appdata/config:/config \&#xA;  -v /path/to/downloads:/downloads \&#xA;  --restart unless-stopped \&#xA;  lscr.io/linuxserver/qbittorrent:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Container images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;code&gt;&amp;lt;external&amp;gt;:&amp;lt;internal&amp;gt;&lt;/code&gt; respectively. For example, &lt;code&gt;-p 8080:80&lt;/code&gt; would expose port &lt;code&gt;80&lt;/code&gt; from inside the container to be accessible from the host&#39;s IP on port &lt;code&gt;8080&lt;/code&gt; outside the container.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;WebUI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 6881&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tcp connection port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-p 6881/udp&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;udp connection port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PUID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for UserID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e PGID=1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for GroupID - see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e TZ=Europe/London&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify a timezone to use EG Europe/London&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-e WEBUI_PORT=8080&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;for changing the port of the webui, see below for explanation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /config&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Contains all relevant configuration files.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;-v /downloads&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Location of downloads on disk.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Environment variables from files (Docker secrets)&lt;/h2&gt; &#xA;&lt;p&gt;You can set any environment variable from a file by using a special prepend &lt;code&gt;FILE__&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-e FILE__PASSWORD=/run/secrets/mysecretpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Will set the environment variable &lt;code&gt;PASSWORD&lt;/code&gt; based on the contents of the &lt;code&gt;/run/secrets/mysecretpassword&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Umask for running applications&lt;/h2&gt; &#xA;&lt;p&gt;For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional &lt;code&gt;-e UMASK=022&lt;/code&gt; setting. Keep in mind umask is not chmod it subtracts from permissions based on it&#39;s value it does not add. Please read up &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;here&lt;/a&gt; before asking for support.&lt;/p&gt; &#xA;&lt;h2&gt;User / Group Identifiers&lt;/h2&gt; &#xA;&lt;p&gt;When using volumes (&lt;code&gt;-v&lt;/code&gt; flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user &lt;code&gt;PUID&lt;/code&gt; and group &lt;code&gt;PGID&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.&lt;/p&gt; &#xA;&lt;p&gt;In this instance &lt;code&gt;PUID=1000&lt;/code&gt; and &lt;code&gt;PGID=1000&lt;/code&gt;, to find yours use &lt;code&gt;id user&lt;/code&gt; as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ id username&#xA;    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Mods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mods.linuxserver.io/?mod=qbittorrent&#34; title=&#34;view available mods for this container.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=qbittorrent&amp;amp;query=%24.mods%5B%27qbittorrent%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Mods&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mods.linuxserver.io/?mod=universal&#34; title=&#34;view available universal mods.&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/yaml?color=94398d&amp;amp;labelColor=555555&amp;amp;logoColor=ffffff&amp;amp;style=for-the-badge&amp;amp;label=universal&amp;amp;query=%24.mods%5B%27universal%27%5D.mod_count&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml&#34; alt=&#34;Docker Universal Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We publish various &lt;a href=&#34;https://github.com/linuxserver/docker-mods&#34;&gt;Docker Mods&lt;/a&gt; to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.&lt;/p&gt; &#xA;&lt;h2&gt;Support Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shell access whilst the container is running: &lt;code&gt;docker exec -it qbittorrent /bin/bash&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To monitor the logs of the container in realtime: &lt;code&gt;docker logs -f qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;container version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;image version number &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker inspect -f &#39;{{ index .Config.Labels &#34;build_version&#34; }}&#39; lscr.io/linuxserver/qbittorrent:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating Info&lt;/h2&gt; &#xA;&lt;p&gt;Most of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/linuxserver/docker-qbittorrent/master/#application-setup&#34;&gt;Application Setup&lt;/a&gt; section above to see if it is recommended for the image.&lt;/p&gt; &#xA;&lt;p&gt;Below are the instructions for updating containers:&lt;/p&gt; &#xA;&lt;h3&gt;Via Docker Compose&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update all images: &lt;code&gt;docker-compose pull&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single image: &lt;code&gt;docker-compose pull qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Let compose update all containers as necessary: &lt;code&gt;docker-compose up -d&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;or update a single container: &lt;code&gt;docker-compose up -d qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Docker Run&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the image: &lt;code&gt;docker pull lscr.io/linuxserver/qbittorrent:latest&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stop the running container: &lt;code&gt;docker stop qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Delete the container: &lt;code&gt;docker rm qbittorrent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your &lt;code&gt;/config&lt;/code&gt; folder and settings will be preserved)&lt;/li&gt; &#xA; &lt;li&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Via Watchtower auto-updater (only use if you don&#39;t remember the original parameters)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest image at its tag and replace it with the same env variables in one run:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm \&#xA;-v /var/run/docker.sock:/var/run/docker.sock \&#xA;containrrr/watchtower \&#xA;--run-once qbittorrent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also remove the old dangling images: &lt;code&gt;docker image prune&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using &lt;a href=&#34;https://docs.linuxserver.io/general/docker-compose&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Image Update Notifications - Diun (Docker Image Update Notifier)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We recommend &lt;a href=&#34;https://crazymax.dev/diun/&#34;&gt;Diun&lt;/a&gt; for update notifications. Other tools that automatically update containers unattended are not recommended or supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building locally&lt;/h2&gt; &#xA;&lt;p&gt;If you want to make local modifications to these images for development purposes or just to customize the logic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/linuxserver/docker-qbittorrent.git&#xA;cd docker-qbittorrent&#xA;docker build \&#xA;  --no-cache \&#xA;  --pull \&#xA;  -t lscr.io/linuxserver/qbittorrent:latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The ARM variants can be built on x86_64 hardware using &lt;code&gt;multiarch/qemu-user-static&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm --privileged multiarch/qemu-user-static:register --reset&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once registered you can define the dockerfile to use with &lt;code&gt;-f Dockerfile.aarch64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.05.22:&lt;/strong&gt; - Fetch qbitorrent-cli from upstream repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.03.22:&lt;/strong&gt; - Add unrar, 7zip, and qbitorrent-cli.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.03.22:&lt;/strong&gt; - Add python for search plugin support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.02.22:&lt;/strong&gt; - Rebase to Alpine Edge, install from Alpine repos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.02.22:&lt;/strong&gt; - Add jq to build-stage&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;07.01.22:&lt;/strong&gt; - Rebase to Alpine, build from source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;06.01.22:&lt;/strong&gt; - Deprecate unstable branch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;10.02.21:&lt;/strong&gt; - Rebase to focal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;20.01.21:&lt;/strong&gt; - Deprecate &lt;code&gt;UMASK_SET&lt;/code&gt; in favor of UMASK in baseimage, see above for more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.11.20:&lt;/strong&gt; - Stop creating /config/data directory on startup&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;03.04.20:&lt;/strong&gt; - Fix adding search engine plugin&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.08.19:&lt;/strong&gt; - Add qbitorrent-cli for processing scripts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;23.03.19:&lt;/strong&gt; - Switching to new Base images, shift to arm32v7 tag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.01.19:&lt;/strong&gt; - Rebase to Ubuntu, add multi arch and pipeline logic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;25.09.18:&lt;/strong&gt; - Use buildstage type build, bump qbitorrent to 4.1.3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;14.08.18:&lt;/strong&gt; - Rebase to alpine 3.8, bump libtorrent to 1.1.9 and qbitorrent to 4.1.2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;08.06.18:&lt;/strong&gt; - Bump qbitorrent to 4.1.1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;26.04.18:&lt;/strong&gt; - Bump libtorrent to 1.1.7.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.03.18:&lt;/strong&gt; - Bump qbitorrent to 4.0.4 and libtorrent to 1.1.6.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;02.01.18:&lt;/strong&gt; - Deprecate cpu_core routine lack of scaling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;19.12.17:&lt;/strong&gt; - Update to v4.0.3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;09.02.17:&lt;/strong&gt; - Rebase to alpine 3.7&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.12.17:&lt;/strong&gt; - Update to v4.0.2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;27.11.17:&lt;/strong&gt; - Update to v4 and use cpu_core routine to speed up builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;16.09.17:&lt;/strong&gt; - Bump to 3.3.16, Add WEBUI_PORT variable and notes to README to allow changing port of webui.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;01.08.17:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;12.02.18:&lt;/strong&gt; - Initial Release.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>