<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-05T01:38:18Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>arlanbutarbutar/arlanbutarbutar</title>
    <updated>2022-07-05T01:38:18Z</updated>
    <id>tag:github.com,2022-07-05:/arlanbutarbutar/arlanbutarbutar</id>
    <link href="https://github.com/arlanbutarbutar/arlanbutarbutar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hi, I&#39;m arcodeüëã&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üî• I am a Software Engineer&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; More specifically as a Back End Web Developer. I also have my own startup called &#xA;&lt;a href=&#34;https://www.netmedia-framecode.com/&#34; target=&#34;_blank&#34;&gt;Netmedia Framecode&lt;/a&gt; which has started a business since 2018. I am currently a student at Widya Mandira Catholic University. I have participated in various off-campus activities, such as Re-Cloud from &#xA;&lt;a href=&#34;https://codepolitan.com/&#34; target=&#34;_blank&#34;&gt;Codepolitan&lt;/a&gt; and &#xA;&lt;a href=&#34;https://id.alibabacloud.com/&#34; target=&#34;_blank&#34;&gt;Alibaba Cloud Indonesia&lt;/a&gt;. &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;‚ö° My Job&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; I started learning coding since I was in junior high school, when it happened that my uncle was studying at STIKOM and I was also learning how to create a website. Currently, I can create complex website-based applications such as administrative bookkeeping applications and others. In learning programming languages, I didn&#39;t go straight to the database management system stage, but started from how to design a website to make it attractive. &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üå† Another life&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; I not only have skills in the programming world but I also learned how to be a video editor and photo editor. &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üéÆ Skills and experience&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; * PHP Native &#xA;&lt;br&gt; * HTML, CSS, JS &#xA;&lt;br&gt; * Dart, Flutter &#xA;&lt;br&gt; * Laravel 8 &#xA;&lt;br&gt; * CodeIgniter 3 &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üèÜ GitHub stats &amp;amp; Most used languages&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;count_private=true&amp;amp;theme=tokyonight&#34; alt=&#34;Anurag&#39;s GitHub stats&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arlanbutarbutar&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=arlanbutarbutar&amp;amp;layout=compact&amp;amp;theme=tokyonight&#34; alt=&#34;Top Langs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üïì Repository in Progress&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar/faktek&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;theme=dark&amp;amp;repo=faktek&#34; alt=&#34;Readme Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;üå©Ô∏è My top repository&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar/gui_free&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;theme=dark&amp;amp;repo=gui_free&#34; alt=&#34;Readme Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar/lucita_ddos&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;theme=dark&amp;amp;repo=lucita_ddos&#34; alt=&#34;Readme Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar/DVWA&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;theme=dark&amp;amp;repo=DVWA&#34; alt=&#34;Readme Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar/wargabantuwarga.com&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=arlanbutarbutar&amp;amp;show_icons=true&amp;amp;theme=dark&amp;amp;repo=wargabantuwarga.com&#34; alt=&#34;Readme Card&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;i&gt;&lt;strong&gt;‚ö° Recent GitHub Activity&lt;/strong&gt;&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/arlanbutarbutar&#34;&gt;&lt;img alt=&#34;Arlan Butar Butar Activity Graph&#34; src=&#34;https://activity-graph.herokuapp.com/graph?username=arlanbutarbutar&amp;amp;custom_title=Arlan%20Butar%20Butar%20Contribution%20Graph&amp;amp;theme=react-dark&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table width=&#34;100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;p&gt;&amp;nbsp; &lt;br&gt; &lt;a href=&#34;https://open.spotify.com/user/ptkgaep2xbue6hb51q4dvfl4i&#34;&gt;&lt;img src=&#34;https://novatorem.vercel.app/api/spotify?background_color=0d1117&amp;amp;border_color=ffffff&#34; alt=&#34;Spotify&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p align=&#34;center&#34;&gt;This repository is &lt;a href=&#34;https://www.arcode.pw&#34;&gt;unlicense&lt;/a&gt;[d], feel free to fork!&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://www.linkedin.com/in/sahala-zakaria-recardo-butar-butar-ba253220a&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/linked-in-369?style=flat-square&amp;amp;logo=linkedin&amp;amp;logoColor=white&amp;amp;color=blue&#34; alt=&#34;Linkedin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mail.google.com/mail/u/0/#inbox?compose=DPRbkNwbXdpSqRRGSdnjbQCQcGkXHjhPBdKsWgkplDDDThjxjTfqClGHjLWMxWxLcsmpwqVvBqRlsHhGPqqPfMzGPfZCpskSTfqQBVlPrzVcHRg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/email-reveal-2a8?style=flat-square&amp;amp;logo=gmail&amp;amp;logoColor=white&#34; alt=&#34;E-Mail&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/arlanbutarbutar&#34;&gt;&lt;img src=&#34;https://komarev.com/ghpvc/?username=arlanbutarbutar&amp;amp;logo=GitHub&amp;amp;label=github%20visits&amp;amp;color=336699&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Visits&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>bitnami/bitnami-docker-php-fpm</title>
    <updated>2022-07-05T01:38:18Z</updated>
    <id>tag:github.com,2022-07-05:/bitnami/bitnami-docker-php-fpm</id>
    <link href="https://github.com/bitnami/bitnami-docker-php-fpm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitnami Docker Image for PHP-FPM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PHP-FPM packaged by Bitnami&lt;/h1&gt; &#xA;&lt;h2&gt;What is PHP-FPM?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size, especially busier sites.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://php-fpm.org/&#34;&gt;Overview of PHP-FPM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trademarks: This software listing is packaged by Bitnami. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.&lt;/p&gt; &#xA;&lt;h2&gt;TL;DR&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --name phpfpm -v /path/to/app:/app bitnami/php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Compose&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -sSL https://raw.githubusercontent.com/bitnami/bitnami-docker-php-fpm/master/docker-compose.yml &amp;gt; docker-compose.yml&#xA;$ docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why use Bitnami Images?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bitnami closely tracks upstream source changes and promptly publishes new versions of this image using our automated systems.&lt;/li&gt; &#xA; &lt;li&gt;With Bitnami images the latest bug fixes and features are available as soon as possible.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami containers, virtual machines and cloud images use the same components and configuration approach - making it easy to switch between formats based on your project needs.&lt;/li&gt; &#xA; &lt;li&gt;All our images are based on &lt;a href=&#34;https://github.com/bitnami/minideb&#34;&gt;minideb&lt;/a&gt; a minimalist Debian based container image which gives you a small base container image and the familiarity of a leading Linux distribution.&lt;/li&gt; &#xA; &lt;li&gt;All Bitnami images available in Docker Hub are signed with &lt;a href=&#34;https://docs.docker.com/engine/security/trust/content_trust/&#34;&gt;Docker Content Trust (DCT)&lt;/a&gt;. You can use &lt;code&gt;DOCKER_CONTENT_TRUST=1&lt;/code&gt; to verify the integrity of the images.&lt;/li&gt; &#xA; &lt;li&gt;Bitnami container images are released on a regular basis with the latest distribution packages available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported tags and respective &lt;code&gt;Dockerfile&lt;/code&gt; links&lt;/h2&gt; &#xA;&lt;p&gt;Learn more about the Bitnami tagging policy and the difference between rolling tags and immutable tags &lt;a href=&#34;https://docs.bitnami.com/tutorials/understand-rolling-tags-containers/&#34;&gt;in our documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/raw/8.1.7-debian-11-r10/8.1/debian-11/Dockerfile&#34;&gt;&lt;code&gt;8.1&lt;/code&gt;, &lt;code&gt;8.1-debian-11&lt;/code&gt;, &lt;code&gt;8.1.7&lt;/code&gt;, &lt;code&gt;8.1.7-debian-11-r10&lt;/code&gt;, &lt;code&gt;latest&lt;/code&gt; (8.1/debian-11/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/raw/8.0.20-debian-11-r10/8.0/debian-11/Dockerfile&#34;&gt;&lt;code&gt;8.0&lt;/code&gt;, &lt;code&gt;8.0-debian-11&lt;/code&gt;, &lt;code&gt;8.0.20&lt;/code&gt;, &lt;code&gt;8.0.20-debian-11-r10&lt;/code&gt; (8.0/debian-11/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/raw/7.4.30-debian-11-r11/7.4/debian-11/Dockerfile&#34;&gt;&lt;code&gt;7.4&lt;/code&gt;, &lt;code&gt;7.4-debian-11&lt;/code&gt;, &lt;code&gt;7.4.30&lt;/code&gt;, &lt;code&gt;7.4.30-debian-11-r11&lt;/code&gt; (7.4/debian-11/Dockerfile)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Subscribe to project updates by watching the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm&#34;&gt;bitnami/php-fpm GitHub repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Deprecation Note (2022-01-21)&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;prod&lt;/code&gt; tags has been removed; from now on just the regular container images will be released.&lt;/p&gt; &#xA;&lt;h3&gt;Deprecation Note (2020-08-18)&lt;/h3&gt; &#xA;&lt;p&gt;The formatting convention for &lt;code&gt;prod&lt;/code&gt; tags has been changed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;BRANCH-debian-10-prod&lt;/code&gt; is now tagged as &lt;code&gt;BRANCH-prod-debian-10&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VERSION-debian-10-rX-prod&lt;/code&gt; is now tagged as &lt;code&gt;VERSION-prod-debian-10-rX&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;latest-prod&lt;/code&gt; is now deprecated&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get this image&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to get the Bitnami PHP-FPM Docker Image is to pull the prebuilt image from the &lt;a href=&#34;https://hub.docker.com/r/bitnami/php-fpm&#34;&gt;Docker Hub Registry&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/php-fpm:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a specific version, you can pull a versioned tag. You can view the &lt;a href=&#34;https://hub.docker.com/r/bitnami/php-fpm/tags/&#34;&gt;list of available versions&lt;/a&gt; in the Docker Hub Registry.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/php-fpm:[TAG]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish, you can also build the image yourself.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker build -t bitnami/php-fpm &#39;https://github.com/bitnami/bitnami-docker-php-fpm.git#master:8.1/debian-11&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Connecting to other containers&lt;/h2&gt; &#xA;&lt;p&gt;This image is designed to be used with a web server to serve your PHP app, you can use docker networking to create a network and attach all the containers to that network.&lt;/p&gt; &#xA;&lt;h3&gt;Serving your PHP app through an nginx frontend&lt;/h3&gt; &#xA;&lt;p&gt;We will use PHP-FPM with nginx to serve our PHP app. Doing so will allow us to setup more complex configuration, serve static assets using nginx, load balance to different PHP-FPM instances, etc.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Create a network&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker network create app-tier --driver bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;2&#39;&#xA;&#xA;networks:&#xA;  app-tier:&#xA;    driver: bridge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Create a server block&lt;/h4&gt; &#xA;&lt;p&gt;Let&#39;s create an nginx server block to reverse proxy to our PHP-FPM container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {&#xA;  listen 0.0.0.0:80;&#xA;  server_name myapp.com;&#xA;&#xA;  root /app;&#xA;&#xA;  location / {&#xA;    try_files $uri $uri/index.php;&#xA;  }&#xA;&#xA;  location ~ \.php$ {&#xA;    # fastcgi_pass [PHP_FPM_LINK_NAME]:9000;&#xA;    fastcgi_pass phpfpm:9000;&#xA;    fastcgi_index index.php;&#xA;    include fastcgi.conf;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice we&#39;ve substituted the link alias name &lt;code&gt;myapp&lt;/code&gt;, we will use the same name when creating the container.&lt;/p&gt; &#xA;&lt;p&gt;Copy the server block above, saving the file somewhere on your host. We will mount it as a volume in our nginx container.&lt;/p&gt; &#xA;&lt;h4&gt;Step 3: Run the PHP-FPM image with a specific name&lt;/h4&gt; &#xA;&lt;p&gt;Docker&#39;s linking system uses container ids or names to reference containers. We can explicitly specify a name for our PHP-FPM server to make it easier to connect to other containers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --name phpfpm \&#xA;  --network app-tier&#xA;  -v /path/to/app:/app \&#xA;  bitnami/php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  phpfpm:&#xA;    image: &#39;bitnami/php-fpm:latest&#39;&#xA;    networks:&#xA;      - app-tier&#xA;    volumes:&#xA;      - /path/to/app:/app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 4: Run the nginx image&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it \&#xA;  -v /path/to/server_block.conf:/opt/bitnami/nginx/conf/server_blocks/yourapp.conf \&#xA;  --network app-tier \&#xA;  bitnami/nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  nginx:&#xA;    image: &#39;bitnami/nginx:latest&#39;&#xA;    depends_on:&#xA;      - phpfpm&#xA;    networks:&#xA;      - app-tier&#xA;    ports:&#xA;      - &#39;80:80&#39;&#xA;      - &#39;443:443&#39;&#xA;    volumes:&#xA;      - /path/to/server_block.conf:/opt/bitnami/nginx/conf/server_blocks/yourapp.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;PHP runtime&lt;/h2&gt; &#xA;&lt;p&gt;Since this image bundles a PHP runtime, you may want to make use of PHP outside of PHP-FPM. By default, running this image will start a server. To use the PHP runtime instead, we can override the the default command Docker runs by stating a different command to run after the image name.&lt;/p&gt; &#xA;&lt;h3&gt;Entering the REPL&lt;/h3&gt; &#xA;&lt;p&gt;PHP provides a REPL where you can interactively test and try things out in PHP.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --name phpfpm bitnami/php-fpm php -a&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://php.net/manual/en/features.commandline.interactive.php&#34;&gt;PHP Interactive Shell Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running your PHP script&lt;/h2&gt; &#xA;&lt;p&gt;The default work directory for the PHP-FPM image is &lt;code&gt;/app&lt;/code&gt;. You can mount a folder from your host here that includes your PHP script, and run it normally using the &lt;code&gt;php&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it --name php-fpm -v /path/to/app:/app bitnami/php-fpm \&#xA;  php script.php&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Mount a custom config file&lt;/h3&gt; &#xA;&lt;p&gt;You can mount a custom config file from your host to edit the default configuration for the php-fpm docker image. The following is an example to alter the configuration of the &lt;em&gt;php-fpm.conf&lt;/em&gt; configuration file:&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Run the PHP-FPM image&lt;/h4&gt; &#xA;&lt;p&gt;Run the PHP-FPM image, mounting a file from your host.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name phpfpm -v /path/to/php-fpm.conf:/opt/bitnami/php/etc/php-fpm.conf bitnami/php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or by modifying the &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/raw/master/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; file present in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  phpfpm:&#xA;  ...&#xA;    volumes:&#xA;      - /path/to/php-fpm.conf:/opt/bitnami/php/etc/php-fpm.conf&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 2: Edit the configuration&lt;/h4&gt; &#xA;&lt;p&gt;Edit the configuration on your host using your favorite editor.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ vi /path/to/php-fpm.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 3: Restart PHP-FPM&lt;/h4&gt; &#xA;&lt;p&gt;After changing the configuration, restart your PHP-FPM container for the changes to take effect.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker restart phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose restart phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Add additional .ini files&lt;/h3&gt; &#xA;&lt;p&gt;PHP has been configured at compile time to scan the &lt;code&gt;/opt/bitnami/php/etc/conf.d/&lt;/code&gt; folder for extra .ini configuration files so it is also possible to mount your customizations there.&lt;/p&gt; &#xA;&lt;p&gt;Multiple files are loaded in alphabetical order. It is common to have a file per extension and use a numeric prefix to guarantee an order loading the configuration.&lt;/p&gt; &#xA;&lt;p&gt;Please check &lt;a href=&#34;http://php.net/manual/en/configuration.file.php#configuration.file.scan&#34;&gt;http://php.net/manual/en/configuration.file.php#configuration.file.scan&lt;/a&gt; to know more about this feature.&lt;/p&gt; &#xA;&lt;p&gt;In order to override the default &lt;code&gt;max_file_uploads&lt;/code&gt; settings you can do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a file called &lt;em&gt;custom.ini&lt;/em&gt; with the following content:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;max_file_uploads = 30M&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run the php-fpm container mounting the custom file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run -it -v /path/to/custom.ini:/opt/bitnami/php/etc/conf.d/custom.ini bitnami/php-fpm php -i | grep max_file_uploads&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see that PHP is using the new specified value for the &lt;code&gt;max_file_uploads&lt;/code&gt; setting.&lt;/p&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;The Bitnami PHP-FPM Docker Image sends the container logs to the &lt;code&gt;stdout&lt;/code&gt;. You can configure the containers &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#logging-drivers-log-driver&#34;&gt;logging driver&lt;/a&gt; using the &lt;code&gt;--log-driver&lt;/code&gt; option. By defauly the &lt;code&gt;json-file&lt;/code&gt; driver is used.&lt;/p&gt; &#xA;&lt;p&gt;To view the logs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker logs phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose logs phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;The &lt;code&gt;docker logs&lt;/code&gt; command is only available when the &lt;code&gt;json-file&lt;/code&gt; or &lt;code&gt;journald&lt;/code&gt; logging driver is in use.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Maintenance&lt;/h2&gt; &#xA;&lt;h3&gt;Upgrade this image&lt;/h3&gt; &#xA;&lt;p&gt;Bitnami provides up-to-date versions of PHP-FPM, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.&lt;/p&gt; &#xA;&lt;h4&gt;Step 1: Get the updated image&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker pull bitnami/php-fpm:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you&#39;re using Docker Compose, update the value of the image property to &lt;code&gt;bitnami/php-fpm:latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Step 2: Stop and backup the currently running container&lt;/h4&gt; &#xA;&lt;p&gt;Stop the currently running container using the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker stop php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose stop php-fpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, take a snapshot of the persistent volume &lt;code&gt;/path/to/php-fpm-persistence&lt;/code&gt; using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rsync -a /path/to/php-fpm-persistence /path/to/php-fpm-persistence.bkp.$(date +%Y%m%d-%H.%M.%S)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use this snapshot to restore the database state should the upgrade fail.&lt;/p&gt; &#xA;&lt;h4&gt;Step 3: Remove the currently running container&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker rm -v phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose rm -v phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Step 4: Run the new image&lt;/h4&gt; &#xA;&lt;p&gt;Re-create your container from the new image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker run --name phpfpm bitnami/php-fpm:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using Docker Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ docker-compose up phpfpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.bitnami.com/containers/how-to/create-amp-environment-containers/&#34;&gt;Create An AMP Development Environment With Bitnami Containers &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.bitnami.com/containers/how-to/create-emp-environment-containers/&#34;&gt;Create An EMP Development Environment With Bitnami Containers &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notable Changes&lt;/h2&gt; &#xA;&lt;h3&gt;7.2.3-r2, 7.1.15-r2, 7.0.28-r2 and 5.6.34-r2 (2018-03-13)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PHP has been configured at compile time to scan the &lt;code&gt;/opt/bitnami/php/etc/conf.d/&lt;/code&gt; folder for extra .ini configuration files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7.0.6-r0 (2016-05-17)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All volumes have been merged at &lt;code&gt;/bitnami/php-fpm&lt;/code&gt;. Now you only need to mount a single volume at &lt;code&gt;/bitnami/php-fpm&lt;/code&gt; for persistence.&lt;/li&gt; &#xA; &lt;li&gt;The logs are always sent to the &lt;code&gt;stdout&lt;/code&gt; and are no longer collected in the volume.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.5.30-2 (2015-12-07)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enables support for imagick extension&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.5.30-0-r01 (2015-11-10)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;php.ini&lt;/code&gt; is now exposed in the volume mounted at &lt;code&gt;/bitnami/php-fpm/conf/&lt;/code&gt; allowing users to change the defaults as per their requirements.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5.5.30-0 (2015-10-06)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/app&lt;/code&gt; directory is no longer exported as a volume. This caused problems when building on top of the image, since changes in the volume are not persisted between Dockerfile &lt;code&gt;RUN&lt;/code&gt; instructions. To keep the previous behavior (so that you can mount the volume in another container), create the container with the &lt;code&gt;-v /app&lt;/code&gt; option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love for you to contribute to this Docker image. You can request new features by creating an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/issues&#34;&gt;issue&lt;/a&gt;, or submit a &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/pulls&#34;&gt;pull request&lt;/a&gt; with your contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you encountered a problem running this container, you can file an &lt;a href=&#34;https://github.com/bitnami/bitnami-docker-php-fpm/issues/new&#34;&gt;issue&lt;/a&gt;. For us to provide better support, be sure to include the following information in your issue:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Host OS and version&lt;/li&gt; &#xA; &lt;li&gt;Docker version (&lt;code&gt;docker version&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Output of &lt;code&gt;docker info&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Version of this container&lt;/li&gt; &#xA; &lt;li&gt;The command you used to run the container, and any relevant output you saw (masking any sensitive information)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright ¬© 2022 Bitnami&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DataDog/dd-trace-java-docker-build</title>
    <updated>2022-07-05T01:38:18Z</updated>
    <id>tag:github.com,2022-07-05:/DataDog/dd-trace-java-docker-build</id>
    <link href="https://github.com/DataDog/dd-trace-java-docker-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker container to build Java APM Tracer&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>