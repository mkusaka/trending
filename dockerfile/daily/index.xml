<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-23T01:35:39Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rubys/dockerfile-rails</title>
    <updated>2023-01-23T01:35:39Z</updated>
    <id>tag:github.com,2023-01-23:/rubys/dockerfile-rails</id>
    <link href="https://github.com/rubys/dockerfile-rails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Provide Rails generators to produce Dockerfiles and related files.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Provides Rails generators to produce Dockerfiles and related files. This is being proposed as the generator to be included in Rails 7.1, and a substantial number of pull requests along those lines have already been merged. This repository contains fixes and features beyond those pull requests. Highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports all &lt;a href=&#34;https://guides.rubyonrails.org/maintenance_policy.html&#34;&gt;Rails supported releases&lt;/a&gt;, not just Rails 7.1, and likely works with a number of previous releases.&lt;/li&gt; &#xA; &lt;li&gt;Can be customized using flags on the &lt;code&gt;generate dockerfile&lt;/code&gt; command, and rerun to produce a custom tailored dockerfile based on detecting the actual features used by your application.&lt;/li&gt; &#xA; &lt;li&gt;Can produce a &lt;code&gt;docker-compose.yml&lt;/code&gt; file for locally testing your configuration before deploying.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle add dockerfile-rails --group development&#xA;bin/rails generate dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;General options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--force&lt;/code&gt; - overwrite existing files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ci&lt;/code&gt; - include test gems in deployed image&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--platform=s&lt;/code&gt; - specify target platform. See &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#from&#34;&gt;FROM&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--cache&lt;/code&gt; - use build caching to speed up builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--parallel&lt;/code&gt; - use multi-stage builds to install gems and node modules in parallel&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--compose&lt;/code&gt; - generate a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dependencies:&lt;/p&gt; &#xA;&lt;p&gt;Generally the dockerfile generator will be able to determine what dependencies you are actually using. But should you be using DATABASE_URL, for example, at runtime additional support may be needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--mysql&lt;/code&gt; - add mysql libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--postgresql&lt;/code&gt; - add postgresql libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--redis&lt;/code&gt; - add redis libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--sqlite3&lt;/code&gt; - add sqlite3 libraries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optimizations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--fullstaq&lt;/code&gt; - use &lt;a href=&#34;https://fullstaqruby.org/&#34;&gt;fullstaq&lt;/a&gt; &lt;a href=&#34;https://github.com/evilmartians/fullstaq-ruby-docker&#34;&gt;images&lt;/a&gt; on &lt;a href=&#34;https://quay.io/repository/evl.ms/fullstaq-ruby?tab=tags&amp;amp;tag=latest&#34;&gt;quay.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--jemalloc&lt;/code&gt; - use &lt;a href=&#34;https://jemalloc.net/&#34;&gt;jemalloc&lt;/a&gt; memory allocator&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--yjit&lt;/code&gt; - enable &lt;a href=&#34;https://github.com/ruby/ruby/raw/master/doc/yjit/yjit.md&#34;&gt;YJIT&lt;/a&gt; optimizing compiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--swap=n&lt;/code&gt; - allocate swap space. See &lt;a href=&#34;https://man7.org/linux/man-pages/man1/fallocate.1.html#OPTIONS&#34;&gt;falloc options&lt;/a&gt; for suffixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The current testing strategy is to run &lt;code&gt;rails new&lt;/code&gt; and &lt;code&gt;generate dockerfile&lt;/code&gt; with various configurations and compare the generated artifacts with expected results. &lt;code&gt;ARG&lt;/code&gt; values in &lt;code&gt;Dockerfiles&lt;/code&gt; are masked before comparison.&lt;/p&gt; &#xA;&lt;p&gt;Running all tests, or even a single individual test can be done as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test&#xA;ruby test/test_minimal.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To assis with this process, outputs of tests can be captured automatically. This is useful when adding new tests and when making a change that affects many tests. Be sure to inspect the output (e.g., by using &lt;code&gt;git diff&lt;/code&gt;) before committing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rake test:capture&#xA;TEST_CAPTURE=1 ruby test/test_minimal.rb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;Many of the following links relate to the current development status with respect to Rails 7.1 and will be removed once that is resolved.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rubys/dockerfile-rails/main/DEMO.md&#34;&gt;Demos&lt;/a&gt; - scripts to copy and paste into an empty directory to launch demo apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rubys/dockerfile-rails/main/test/results&#34;&gt;Test Results&lt;/a&gt; - expected outputs for each test&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.fly.io/t/preparations-for-rails-7-1/9512&#34;&gt;Preparations for Rails 7.1&lt;/a&gt; - &lt;a href=&#34;https://fly.io/&#34;&gt;Fly.io&lt;/a&gt;&#39;s plans and initial discussions with DHH&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.rubyonrails.org/t/rails-dockerfile-futures/82091/1&#34;&gt;Rails Dockerfile futures&lt;/a&gt; - rationale for a generator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fly.io/docs/rails/cookbooks/&#34;&gt;Fly Cookbooks&lt;/a&gt; - deeper dive into Dockerfile design choices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rails/rails/raw/main/railties/lib/rails/generators/rails/app/templates/Dockerfile.tt&#34;&gt;app/templates/Dockerfile.tt&lt;/a&gt; - current Rails 7.1 template&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>sosiristseng/template-juliabook</title>
    <updated>2023-01-23T01:35:39Z</updated>
    <id>tag:github.com,2023-01-23:/sosiristseng/template-juliabook</id>
    <link href="https://github.com/sosiristseng/template-juliabook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Template for running Julia code in Jupyter Book, dockerized version.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jupyter book template for Julia Jupyter notebooks&lt;/h1&gt; &#xA;&lt;p&gt;Click &lt;code&gt;Use this template&lt;/code&gt; green button to copy this repository to your account.&lt;/p&gt; &#xA;&lt;h2&gt;Jupyter Book&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jupyterbook.org/index.html&#34;&gt;Jupyter book&lt;/a&gt; creates a beautiful website from Markdown and Jupyter Notebook files.&lt;/p&gt; &#xA;&lt;h2&gt;CI/CD&lt;/h2&gt; &#xA;&lt;p&gt;When changes are pushed to GitHub, continuous integration/deployment (CI/CD) will build the notebooks and publish the website. Execution results are executed on the fly so you can push notebooks with empty output cells and obtain the execution results generated by the CI service.&lt;/p&gt; &#xA;&lt;h3&gt;GitHub actions&lt;/h3&gt; &#xA;&lt;p&gt;To enable GitHub pages for the generated website: Open your repository settings =&amp;gt; Pages =&amp;gt; GitHub Pages =&amp;gt; Build and deployment =&amp;gt; Source, Select &lt;code&gt;GitHub actions&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cirrus CI&lt;/h3&gt; &#xA;&lt;p&gt;Related files for &lt;a href=&#34;https://cirrus-ci.org/&#34;&gt;Cirrus CI&lt;/a&gt; workflow&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sosiristseng/template-juliabook/main/.cirrus.yml&#34;&gt;.cirrus.yml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sosiristseng/template-juliabook/main/cirrus.Dockerfile&#34;&gt;cirrus.Dockerfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sosiristseng/template-juliabook/main/.github/workflows/email.yml&#34;&gt;email.yml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable GitHub pages for the generated website: Open your repository settings =&amp;gt; Pages =&amp;gt; GitHub Pages =&amp;gt; Build and deployment =&amp;gt; Source, Select the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Auto update Julia dependencies&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/sosiristseng/template-juliabook/main/.github/workflows/update-manifest.yml&#34;&gt;update-manifest.yml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This template repository periodically updates Julia dependent packages and make a PR if the notebooks are executed successfully with the updated packages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/peter-evans/create-pull-request/raw/main/docs/concepts-guidelines.md#triggering-further-workflow-runs&#34;&gt;See the instructions&lt;/a&gt; for how to trigger CI workflows in a PR. In this repo, I use a custom &lt;a href=&#34;https://github.com/peter-evans/create-pull-request/raw/main/docs/concepts-guidelines.md#authenticating-with-github-app-generated-tokens&#34;&gt;GitHub APP&lt;/a&gt; to generate a temporary token.&lt;/p&gt; &#xA;&lt;h2&gt;Renovate Bot&lt;/h2&gt; &#xA;&lt;p&gt;Config file: &lt;a href=&#34;https://raw.githubusercontent.com/sosiristseng/template-juliabook/main/renovate.json&#34;&gt;renovate.json&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Other dependency updates (GitHub actions, python packages, dockerfiles) are done by the &lt;a href=&#34;https://docs.renovatebot.com/&#34;&gt;Renovate bot&lt;/a&gt;. Please enable the &lt;a href=&#34;https://github.com/apps/renovate&#34;&gt;Renovate Github APP&lt;/a&gt; to use it.&lt;/p&gt;</summary>
  </entry>
</feed>