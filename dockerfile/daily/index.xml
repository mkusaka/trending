<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-11T01:38:43Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LandmakTechnology/metric-server</title>
    <updated>2022-07-11T01:38:43Z</updated>
    <id>tag:github.com,2022-07-11:/LandmakTechnology/metric-server</id>
    <link href="https://github.com/LandmakTechnology/metric-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Landmark Technology - &lt;a href=&#34;http://www.mylandmarktech.com&#34;&gt;www.mylandmarktech.com&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;TEL: +1 437 215 2483 - TEL: +1 437 215 2483&lt;/h1&gt; &#xA;&lt;h1&gt;Kubernetes Metrics Server&lt;/h1&gt; &#xA;&lt;p&gt;Metrics-server aggregates resource consumption data like CPU and memory usage for Kubernetes nodes, pods and containers. These metrics are collected from the API exposed by the Kubelet on each node.&lt;/p&gt; &#xA;&lt;p&gt;The metrics server is commonly used by other Kubernetes add ons, such as the Horizontal Pod Autoscaler or the Kubernetes Dashboard.&lt;/p&gt; &#xA;&lt;p&gt;It is not deployed by default.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;In order to deploy metrics-server in your kubernetes master machine clone &lt;a href=&#34;https://github.com/LandmakTechnology/metric-server.git&#34;&gt;https://github.com/LandmakTechnology/metric-server.git&lt;/a&gt; and run the following command from the top-level directory(metrics-server) of this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ kubectl apply -f deploy/1.8+/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Display node metrics&#xA;$ kubectl top nodes&#xA;&#xA;# Display pod metrics&#xA;$ kubectl top pods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User guide&lt;/h2&gt; &#xA;&lt;p&gt;You can find the user guide in &lt;a href=&#34;https://kubernetes.io/docs/tasks/debug-application-cluster/resource-metrics-pipeline/&#34;&gt;the official Kubernetes documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Design&lt;/h2&gt; &#xA;&lt;p&gt;The detailed design of the project can be found in the following docs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/resource-metrics-api.md&#34;&gt;Metrics API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/metrics-server.md&#34;&gt;Metrics Server&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/metrics-server.git&#34;&gt;Metrics Server Git Hub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the broader view of monitoring in Kubernetes take a look into &lt;a href=&#34;https://github.com/kubernetes/community/raw/master/contributors/design-proposals/instrumentation/monitoring_architecture.md&#34;&gt;Monitoring architecture&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LandmakTechnology/Dockerfiles1</title>
    <updated>2022-07-11T01:38:43Z</updated>
    <id>tag:github.com,2022-07-11:/LandmakTechnology/Dockerfiles1</id>
    <link href="https://github.com/LandmakTechnology/Dockerfiles1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>sweetield/CLIB</title>
    <updated>2022-07-11T01:38:43Z</updated>
    <id>tag:github.com,2022-07-11:/sweetield/CLIB</id>
    <link href="https://github.com/sweetield/CLIB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/koyeb/koyeb-cli/workflows/Release/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Koyeb CLI&lt;/h1&gt; &#xA;&lt;p&gt;The Koyeb CLI (Command Line Interface) is a powerful tool to manage your Koyeb serverless infrastructure directly from your terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Download from GitHub&lt;/h3&gt; &#xA;&lt;p&gt;The CLI can be installed from pre-compiled binaries for macOS (darwin), Linux and Windows. You can download the appropriate version from the &lt;a href=&#34;https://github.com/koyeb/koyeb-cli/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;You can install the latest version of the Koyeb CLI on macOS using &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;brew install koyeb/tap/koyeb&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can upgrade an existing installation of the Koyeb CLI running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;brew upgrade koyeb&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Living at the Edge&lt;/h3&gt; &#xA;&lt;p&gt;To install the latest &lt;code&gt;koyeb&lt;/code&gt; binary with go, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;go get github.com/koyeb/koyeb-cli/cmd/koyeb&#xA;&#xA;go install github.com/koyeb/koyeb-cli/cmd/koyeb&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need a go environment, follow the &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;official Go installation documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Initial configuration&lt;/h3&gt; &#xA;&lt;p&gt;Generate an API token and run &lt;code&gt;koyeb login&lt;/code&gt; to create a new configuration file.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;cloudflare workers example&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&#xA;const SingleDay = &#39;appname.app.com&#39;&#xA;&#xA;const DoubleDay = &#39;appname.app.com&#39;&#xA;&#xA;addEventListener(&#xA;&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;&#xA;    &#xA;&#xA;        let nd = new Date();&#xA;&#xA;        if (nd.getDate()%2) {&#xA;&#xA;            host = SingleDay&#xA;&#xA;        } else {&#xA;&#xA;            host = DoubleDay&#xA;&#xA;        }&#xA;&#xA;        &#xA;&#xA;        let url=new URL(event.request.url);&#xA;&#xA;        url.hostname=host;&#xA;&#xA;        let request=new Request(url,event.request);&#xA;&#xA;        event. respondWith(&#xA;&#xA;            fetch(request)&#xA;&#xA;        )&#xA;&#xA;    }&#xA;&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CADDYIndexPage&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/sweetield/indexpage/raw/main/README.md&#34;&gt;https://github.com/sweetield/indexpage/blob/main/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>