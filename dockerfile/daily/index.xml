<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-05T01:27:30Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>haxqer/jira</title>
    <updated>2023-04-05T01:27:30Z</updated>
    <id>tag:github.com,2023-04-05:/haxqer/jira</id>
    <link href="https://github.com/haxqer/jira" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The simplest docker file of JIRA. Support v9.7.0(latest) and v9.4.4(lts)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/haxqer/jira/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/haxqer/jira.svg?sanitize=true&#34; alt=&#34;docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/haxqer/jira/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/haxqer/jira.svg?sanitize=true&#34; alt=&#34;docker stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://microbadger.com/images/haxqer/jira&#34; title=&#34;haxqer/jira image metadata&#34;&gt;&lt;img src=&#34;https://images.microbadger.com/badges/image/haxqer/jira.svg?sanitize=true&#34; alt=&#34;image metadata&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haxqer/charts&#34;&gt;kubernetes helm charts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;jira&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haxqer/jira/rm/README.md&#34;&gt;README&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/haxqer/jira/rm/README_zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Long Term Support Version: v9.4.4&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Latest Version: v9.7.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/haxqer/jira#arm&#34;&gt;Arm Version&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;default port: 8080&lt;/p&gt; &#xA;&lt;h2&gt;requirement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker: 17.09.0+&lt;/li&gt; &#xA; &lt;li&gt;docker-compose: 1.24.0+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to run with docker-compose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start jira &amp;amp; mysql&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    git clone https://github.com/haxqer/jira.git \&#xA;        &amp;amp;&amp;amp; cd jira \&#xA;        &amp;amp;&amp;amp; git checkout rm \&#xA;        &amp;amp;&amp;amp; docker-compose pull \&#xA;        &amp;amp;&amp;amp; docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start jira &amp;amp; mysql daemon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;default db(mysql8.0) configure:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    driver=mysql8.0&#xA;    host=mysql-jira&#xA;    port=3306&#xA;    db=jira&#xA;    user=root&#xA;    passwd=123456&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to run with docker&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;start jira&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    docker volume create jira_home_data &amp;amp;&amp;amp; docker network create jira-network &amp;amp;&amp;amp; docker run -p 8080:8080 -v jira_home_data:/var/jira --network jira-network --name jira-srv -e TZ=&#39;Asia/Shanghai&#39; haxqer/jira:9.7.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;config your own db:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to hack jira&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec jira-srv java -jar /var/agent/atlassian-agent.jar \&#xA;    -p jira \&#xA;    -m haxqer666@gmail.com \&#xA;    -n haxqer666@gmail.com \&#xA;    -o http://website \&#xA;    -s you-server-id-xxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to hack jira plugin&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;.eg I want to use BigGantt plugin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install BigGantt from jira marketplace.&lt;/li&gt; &#xA; &lt;li&gt;Find &lt;code&gt;App Key&lt;/code&gt; of BigGantt is : &lt;code&gt;eu.softwareplant.biggantt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execute :&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec jira-srv java -jar /var/agent/atlassian-agent.jar \&#xA;    -p eu.softwareplant.biggantt \&#xA;    -m haxqer666@gmail.com \&#xA;    -n haxqer666@gmail.com \&#xA;    -o http://website \&#xA;    -s you-server-id-xxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Paste your license&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to upgrade&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd jira &amp;amp;&amp;amp; git pull&#xA;docker pull haxqer/jira:rm &amp;amp;&amp;amp; docker-compose stop&#xA;docker-compose rm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enter &lt;code&gt;y&lt;/code&gt;, then start server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Arm&lt;/h2&gt; &#xA;&lt;p&gt;Not completely tested. Tested machines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac mini(M1,2020)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/odidev&#34;&gt;odidev&lt;/a&gt; for the Arm image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    git clone https://github.com/haxqer/jira.git \&#xA;        &amp;amp;&amp;amp; cd jira \&#xA;        &amp;amp;&amp;amp; git checkout rm &amp;amp;&amp;amp; cd lts_arm \&#xA;        &amp;amp;&amp;amp; docker-compose pull \&#xA;        &amp;amp;&amp;amp; docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hack Jira Service Management(jsm) Plugin&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d1m0nstr&#34;&gt;d1m0nstr&lt;/a&gt; for &lt;a href=&#34;https://github.com/haxqer/jira/issues/11&#34;&gt;Jira Service Management&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec jira-srv java -jar /var/agent/atlassian-agent.jar \&#xA;    -p jsm \&#xA;    -m haxqer666@gmail.com \&#xA;    -n haxqer666@gmail.com \&#xA;    -o http://website/ \&#xA;    -s you-server-id&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>CircleCI-Public/cimg-ruby</title>
    <updated>2023-04-05T01:27:30Z</updated>
    <id>tag:github.com,2023-04-05:/CircleCI-Public/cimg-ruby</id>
    <link href="https://github.com/CircleCI-Public/cimg-ruby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The CircleCI Ruby Docker Convenience Image.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;img alt=&#34;CircleCI Logo&#34; src=&#34;https://raw.github.com/CircleCI-Public/cimg-ruby/main/img/circle-circleci.svg?sanitize=true&#34; width=&#34;75&#34;&gt; &lt;img alt=&#34;Docker Logo&#34; src=&#34;https://raw.github.com/CircleCI-Public/cimg-ruby/main/img/circle-docker.svg?sanitize=true&#34; width=&#34;75&#34;&gt; &lt;img alt=&#34;Ruby Logo&#34; src=&#34;https://raw.github.com/CircleCI-Public/cimg-ruby/main/img/circle-ruby.svg?sanitize=true&#34; width=&#34;75&#34;&gt; &lt;/p&gt; &#xA; &lt;h1&gt;CircleCI Convenience Images =&amp;gt; Ruby&lt;/h1&gt; &#xA; &lt;h3&gt;A Continuous Integration focused Ruby Docker image built to run on CircleCI&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/CircleCI-Public/cimg-ruby&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/CircleCI-Public/cimg-ruby.svg?style=shield&#34; alt=&#34;CircleCI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;Software License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/cimg/ruby&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/cimg/ruby&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discuss.circleci.com/c/ecosystem/circleci-images&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/community-CircleCI%20Discuss-343434.svg?sanitize=true&#34; alt=&#34;CircleCI Community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CircleCI-Public/cimg-ruby&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-README-brightgreen&#34; alt=&#34;Repository&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;This image is designed to supercede the legacy CircleCI Ruby image, &lt;code&gt;circleci/ruby&lt;/code&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cimg/ruby&lt;/code&gt; is a Docker image created by CircleCI with continuous integration builds in mind. Each tag contains a complete Ruby version, the &lt;code&gt;gem&lt;/code&gt; command, Bundler, and any binaries and tools that are required for builds to complete successfully in a CircleCI environment.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#how-this-image-works&#34;&gt;How This Image Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This image can be used with the CircleCI &lt;code&gt;docker&lt;/code&gt; executor. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  build:&#xA;    docker:&#xA;      - image: cimg/ruby:2.7.2&#xA;    steps:&#xA;      - checkout&#xA;      - run: ruby --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above example, the CircleCI Ruby Docker image is used for the primary container. More specifically, the tag &lt;code&gt;2.7.2&lt;/code&gt; is used meaning the version of Ruby will be Ruby v2.7.2. You can now use Ruby within the steps for this job.&lt;/p&gt; &#xA;&lt;h2&gt;How This Image Works&lt;/h2&gt; &#xA;&lt;p&gt;This image contains the Ruby programming language. This includes the &lt;code&gt;gem&lt;/code&gt; command as well as Bundler pre-installed.&lt;/p&gt; &#xA;&lt;h3&gt;Variants&lt;/h3&gt; &#xA;&lt;p&gt;Variant images typically contain the same base software, but with a few additional modifications.&lt;/p&gt; &#xA;&lt;h4&gt;Node.js&lt;/h4&gt; &#xA;&lt;p&gt;The Node.js variant is the same Ruby image but with Node.js also installed. The Node.js variant can be used by appending &lt;code&gt;-node&lt;/code&gt; to the end of an existing &lt;code&gt;cimg/ruby&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  build:&#xA;    docker:&#xA;      - image: cimg/ruby:2.7-node&#xA;    steps:&#xA;      - checkout&#xA;      - run: ruby --version&#xA;      - run: node --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Browsers&lt;/h4&gt; &#xA;&lt;p&gt;The browsers variant is the same Ruby image but with Node.js, Java, Selenium, and browser dependencies pre-installed via apt. The browsers variant can be used by appending &lt;code&gt;-browser&lt;/code&gt; to the end of an existing &lt;code&gt;cimg/ruby&lt;/code&gt; tag. The browsers variant is designed to work in conjunction with the &lt;a href=&#34;https://circleci.com/developer/orbs/orb/circleci/browser-tools&#34;&gt;CircleCI Browser Tools orb&lt;/a&gt;. You can use the orb to install a version of Google Chrome and/or Firefox into your build. The image contains all of the supporting tools needed to use both the browser and its driver.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;orbs:&#xA;  browser-tools: circleci/browser-tools@1.1&#xA;jobs:&#xA;  build:&#xA;    docker:&#xA;      - image: cimg/ruby:2.7-browsers&#xA;    steps:&#xA;      - browser-tools/install-browser-tools&#xA;      - checkout&#xA;      - run: |&#xA;          ruby --version&#xA;          node --version&#xA;          java --version&#xA;          google-chrome --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tagging Scheme&lt;/h3&gt; &#xA;&lt;p&gt;This image has the following tagging scheme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cimg/ruby:&amp;lt;ruby-version&amp;gt;[-variant]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;&amp;lt;ruby-version&amp;gt;&lt;/code&gt; - The version of Ruby to use. This can be a full SemVer point release (such as &lt;code&gt;3.2.0&lt;/code&gt;) or just the minor release (such as &lt;code&gt;3.2&lt;/code&gt;). If you use the minor release tag, it will automatically point to future patch updates as they are released. For example, the tag &lt;code&gt;3.2&lt;/code&gt; points to Ruby v3.2.0 now, but when the next release comes out, it will point to Ruby v3.2.1.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;[-variant]&lt;/code&gt; - Variant tags, if available, can optionally be used. For example, the Node.js variant can be used like this: &lt;code&gt;cimg/ruby:3.2.0-node&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Images can be built and run locally with this repository. This has the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;local machine of Linux (Ubuntu tested) or macOS&lt;/li&gt; &#xA; &lt;li&gt;modern version of Bash (v4+)&lt;/li&gt; &#xA; &lt;li&gt;modern version of Docker Engine (v19.03+)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cloning For Community Users (no write access to this repository)&lt;/h3&gt; &#xA;&lt;p&gt;Fork this repository on GitHub. When you get your clone URL, you&#39;ll want to add &lt;code&gt;--recurse-submodules&lt;/code&gt; to the clone command in order to populate the Git submodule contained in this repo. It would look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recurse-submodules &amp;lt;my-clone-url&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you missed this step and already cloned, you can just run &lt;code&gt;git submodule update --recursive&lt;/code&gt; to populate the submodule. Then you can optionally add this repo as an upstream to your own:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/CircleCI-Public/cimg-ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cloning For Maintainers ( you have write access to this repository)&lt;/h3&gt; &#xA;&lt;p&gt;Clone the project with the following command so that you populate the submodule:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recurse-submodules git@github.com:CircleCI-Public/cimg-ruby.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generating Dockerfiles&lt;/h3&gt; &#xA;&lt;p&gt;Dockerfiles can be generated for a specific Ruby version using the &lt;code&gt;gen-dockerfiles.sh&lt;/code&gt; script. For example, to generate the Dockerfile for Ruby v3.2.0, you would run the following from the root of the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./shared/gen-dockerfiles.sh 3.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The generated Dockerfile will be located at &lt;code&gt;./3.2/Dockefile&lt;/code&gt;. To build this image locally and try it out, you can run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 3.2/&#xA;docker build -t test/ruby:3.2.0 .&#xA;docker run -it test/ruby:3.2.0 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building the Dockerfiles&lt;/h3&gt; &#xA;&lt;p&gt;To build the Docker images locally as this repository does, you&#39;ll want to run the &lt;code&gt;build-images.sh&lt;/code&gt; script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./build-images.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This would need to be run after generating the Dockerfiles first. When releasing proper images for CircleCI, this script is run from a CircleCI pipeline and not locally.&lt;/p&gt; &#xA;&lt;h3&gt;Publishing Official Images (for Maintainers only)&lt;/h3&gt; &#xA;&lt;p&gt;The individual scripts (above) can be used to create the correct files for an image, and then added to a new git branch, committed, etc. A release script is included to make this process easier. To make a proper release for this image, let&#39;s use the fake Ruby version of v9.99, you would run the following from the repo root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./shared/release.sh 9.99&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically create a new Git branch, generate the Dockerfile(s), stage the changes, commit them, and push them to GitHub. The commit message will end with the string &lt;code&gt;[release]&lt;/code&gt;. This string is used by CircleCI to know when to push images to Docker Hub. All that would need to be done after that is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;wait for build to pass on CircleCI&lt;/li&gt; &#xA; &lt;li&gt;review the PR&lt;/li&gt; &#xA; &lt;li&gt;merge the PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The main branch build will then publish a release.&lt;/p&gt; &#xA;&lt;h3&gt;Incorporating Changes&lt;/h3&gt; &#xA;&lt;p&gt;How changes are incorporated into this image depends on where they come from.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;build scripts&lt;/strong&gt; - Changes within the &lt;code&gt;./shared&lt;/code&gt; submodule happen in its &lt;a href=&#34;https://github.com/CircleCI-Public/cimg-shared&#34;&gt;own repository&lt;/a&gt;. For those changes to affect this image, the submodule needs to be updated. Typically like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd shared&#xA;git pull&#xA;cd ..&#xA;git add shared&#xA;git commit -m &#34;Updating submodule for foo.&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;parent image&lt;/strong&gt; - By design, when changes happen to a parent image, they don&#39;t appear in existing Ruby images. This is to aid in &#34;determinism&#34; and prevent breaking customer builds. New Ruby images/versions though will automatically pick up the changes.&lt;/p&gt; &#xA;&lt;p&gt;If you &lt;em&gt;really&lt;/em&gt; want to publish changes from a parent image into the Ruby image, you have to build a specific image version as if it was a new image. This will create a new Dockerfile and once published, a new image.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby specific changes&lt;/strong&gt; - Editing the &lt;code&gt;Dockerfile.template&lt;/code&gt; file in this repo is how to modify the Ruby image specifically. Don&#39;t forget that to see any of these changes locally, the &lt;code&gt;gen-dockerfiles.sh&lt;/code&gt; script will need to be run again (see above).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage &lt;a href=&#34;https://github.com/CircleCI-Public/cimg-ruby/issues&#34;&gt;issues&lt;/a&gt; to and &lt;a href=&#34;https://github.com/CircleCI-Public/cimg-ruby/pulls&#34;&gt;pull requests&lt;/a&gt; against this repository however, in order to value your time, here are some things to consider:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;We won&#39;t include just anything in this image. In order for us to add a tool within the Ruby image, it has to be something that is maintained and useful to a large number of Ruby developers. Every tool added makes the image larger and slower for all users so being thorough on what goes in the image will benefit everyone.&lt;/li&gt; &#xA; &lt;li&gt;PRs are welcome. If you have a PR that will potentially take a large amount of time to make, it will be better to open an issue to discuss it first to make sure it&#39;s something worth investing the time in.&lt;/li&gt; &#xA; &lt;li&gt;Issues should be to report bugs or request additional/removal of tools in this image. For help with images, please visit &lt;a href=&#34;https://discuss.circleci.com/c/ecosystem/circleci-images&#34;&gt;CircleCI Discuss&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/docs/&#34;&gt;CircleCI Docs&lt;/a&gt; - The official CircleCI Documentation website. &lt;a href=&#34;https://circleci.com/docs/2.0/configuration-reference/#section=configuration&#34;&gt;CircleCI Configuration Reference&lt;/a&gt; - From CircleCI Docs, the configuration reference page is one of the most useful pages we have. It will list all of the keys and values supported in &lt;code&gt;.circleci/config.yml&lt;/code&gt;. &lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker Docs&lt;/a&gt; - For simple projects this won&#39;t be needed but if you want to dive deeper into learning Docker, this is a great resource.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository is licensed under the MIT license. The license can be found &lt;a href=&#34;https://raw.githubusercontent.com/CircleCI-Public/cimg-ruby/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>