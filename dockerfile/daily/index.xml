<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-27T01:40:06Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CoolKit-Technologies/ha-addon</title>
    <updated>2022-06-27T01:40:06Z</updated>
    <id>tag:github.com,2022-06-27:/CoolKit-Technologies/ha-addon</id>
    <link href="https://github.com/CoolKit-Technologies/ha-addon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Source Code Link&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoolKit-Technologies/ha-addon-frontEnd&#34;&gt;FrontEnd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoolKit-Technologies/ha-addon-backEnd&#34;&gt;BackEnd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Home-Assistant-AddOn&lt;/h1&gt; &#xA;&lt;h2&gt;ADD-ON:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer to &lt;a href=&#34;https://bit.ly/eWeLinkaddon&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DOCKER:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Use host network to discover and control DIY and LAN devices.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Currently, port forwarding is not supported, please make sure that port 3000 is idle.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/CoolKit-Technologies/ha-addon.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd ha-addon/eWeLink_Smart_Home/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker build . -t ewelink_smart_home&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the code below. Replace &lt;code&gt;yourHomeAssistantUrl&lt;/code&gt; with your current Home Assisant URL.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;    --restart=always \&#xA;    --network host \&#xA;    -e HA_URL=yourHomeAssistantUrl \&#xA;    -e SUPERVISOR_TOKEN=yourHomeAssitantLongLivedAccessToken \&#xA;    ewelink_smart_home&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Example:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;  docker run -d \&#xA;  --restart=always \&#xA;  --network host \&#xA;  -e HA_URL=http://192.168.1.100:8123 \&#xA;  -e SUPERVISOR_TOKEN=eyJ~iJ9.eyJ~jF9.CkQ~Lho&#xA;  ewelink_smart_home&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Access port &lt;code&gt;3000&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>abes-esr/theses-docker</title>
    <updated>2022-06-27T01:40:06Z</updated>
    <id>tag:github.com,2022-06-27:/abes-esr/theses-docker</id>
    <link href="https://github.com/abes-esr/theses-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configuration docker üê≥ permettant de d√©ployer le portail national des th√®ses dont le but est de donner acc√®s √† toutes les theses de theses.fr √† l&#39;ensemble de l&#39;enseignement sup√©rieur et recherche.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;theses-docker&lt;/h1&gt; &#xA;&lt;p&gt;(travail en cours)&lt;/p&gt; &#xA;&lt;p&gt;Configuration docker üê≥ permettant de d√©ployer le portail national des th√®ses dont le but est de donner acc√®s √† toutes les theses de theses.fr √† l&#39;ensemble de l&#39;enseignement sup√©rieur et recherche. Ces configurations visent √† permettre un d√©ploiement uniforme en local sur la machine d&#39;un d√©veloppeur, et sur les serveurs de dev, test, et prod.&lt;/p&gt; &#xA;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vSh7awYvbYr54GU3F7hsmcbvK25QKixZ1I_a8-mg_X2nimit9SbllmdkXA_n-MaQQBR0KsgrX0dQvga/pub?w=100&#34;&gt; &#xA;&lt;p&gt;Les URL des d√©ploiements temporaires seront les suivantes :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;en dev : &lt;a href=&#34;https://apollo-dev.theses.fr&#34;&gt;https://apollo-dev.theses.fr&lt;/a&gt; (pas encore dispo)&lt;/li&gt; &#xA; &lt;li&gt;en test : &lt;a href=&#34;https://apollo-test.theses.fr&#34;&gt;https://apollo-test.theses.fr&lt;/a&gt; (pas encore dispo)&lt;/li&gt; &#xA; &lt;li&gt;en pr√©prod : &lt;a href=&#34;https://apollo-prod.theses.fr&#34;&gt;https://apollo-prod.theses.fr&lt;/a&gt; (pas encore dispo)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A noter que les images docker de theses.fr sont g√©n√©r√©es √† partir des codes open sources disponibles ici :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/docker-shibboleth-renater-sp&#34;&gt;https://github.com/abes-esr/docker-shibboleth-renater-sp&lt;/a&gt; (pour l&#39;authentification avec la f√©d√©ration d&#39;identit√©s)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/theses-api-diffusion&#34;&gt;https://github.com/abes-esr/theses-api-diffusion&lt;/a&gt; (√† cr√©er)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/theses-api-recherche&#34;&gt;https://github.com/abes-esr/theses-api-recherche&lt;/a&gt; (√† cr√©er)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/theses-api-indexation&#34;&gt;https://github.com/abes-esr/theses-api-indexation&lt;/a&gt; (√† cr√©er)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/theses-front&#34;&gt;https://github.com/abes-esr/theses-front&lt;/a&gt; (√† cr√©er)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abes-esr/theses-batch&#34;&gt;https://github.com/abes-esr/theses-batch&lt;/a&gt; (√† ajuster)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/ # √† adapter en local car vous pouvez cloner le d√©p√¥t dans votre homedir&#xA;git clone https://github.com/abes-esr/theses-docker.git&#xA;&#xA;cd /opt/pod/theses-docker/&#xA;cp .env-dist .env&#xA;# personnalisez alors le .env en partant des valeurs exemple pr√©sentes dans le .env-dist&#xA;# pour un d√©ploiement en local, vous n&#39;avez pas besoin de personnaliser le .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sp√©cificit√© en local pour simuler le vrai nom de domaine (sans cette modification theses-rp ne fonctionnera pas avec la f√©d√©ration d&#39;identit√©s) :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# ajouter ces lignes dans votre fichier /etc/hosts (sous linux - besoin de droits admin)&#xA;# et dans C:\Windows\System32\drivers\etc\hosts (sous windows - besoin de droits admin)&#xA;127.0.0.1 apollo-dev.theses.fr&#xA;127.0.0.1 apollo-test.theses.fr&#xA;127.0.0.1 apollo-prod.theses.fr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;D√©marrage et arret&lt;/h2&gt; &#xA;&lt;p&gt;Pour d√©marrer l&#39;application :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/theses-docker/&#xA;docker-compose up&#xA;# ajouter -d si vous souhaitez d√©marrer l&#39;application en tache de fond&#xA;# dans le cas contraire, utilisez CTRL+C pour ensuite quitter l&#39;application&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;L&#39;application va alors √©couter sur les ports 443 (port par d√©faut du https) et vous pourrez la consultez en suivant ce lien :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apollo-dev.theses.fr/&#34;&gt;https://apollo-dev.theses.fr/&lt;/a&gt; (racine publique de l&#39;application =&amp;gt; affiche normalement &#34;It Works !&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apollo-dev.theses.fr/&#34;&gt;https://apollo-dev.theses.fr/&lt;/a&gt; (PDF sous contr√¥le d&#39;acc√®s =&amp;gt; affiche normalement le PDF une fois la phase d&#39;authentification termin√©e)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pour arr√™ter l&#39;application :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/theses-docker/&#xA;docker-compose stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Pour configurer l&#39;application, il est n√©cessaire de cr√©er un fichier &lt;code&gt;.env&lt;/code&gt; au m√™me niveau que le fichier &lt;code&gt;docker-compose.yml&lt;/code&gt; de ce d√©p√¥t. Le contenu du &lt;code&gt;.env&lt;/code&gt; est une liste de param√®tres (cl√©s/valeurs) dont un exemple est pr√©sent dans le fichier &lt;a href=&#34;https://github.com/abes-esr/theses-docker/raw/develop/.env-dist&#34;&gt;&lt;code&gt;.env-dist&lt;/code&gt;&lt;/a&gt;. La liste des param√®tres est la suivante :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;RENATER_SP_TEST_OR_PROD&lt;/code&gt; : pour activer la f√©d√©ration d&#39;identit√©s de test (valeur &#34;TEST&#34;) ou de prod (valeur &#34;PROD&#34;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RENATER_SP_ENTITY_ID&lt;/code&gt; : l&#39;identifiant de votre fournisseur de service au niveau de la f√©d√©ration d&#39;identit√©s (vaut &lt;code&gt;https://apollo-dev.theses.fr/sp&lt;/code&gt; en local ou en dev, &lt;code&gt;https://apollo-test.theses.fr/sp&lt;/code&gt; en local ou en test)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RENATER_SP_ADMIN_MAIL&lt;/code&gt; : l&#39;adresse mail de contact qui s&#39;affichera en cas d&#39;erreur au niveau du serveur web de &lt;code&gt;theses-rp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;RENATER_SP_HTTPD_SERVER_NAME&lt;/code&gt; : l&#39;URL racine de l&#39;instance theses.fr (vaut &lt;code&gt;https://apollo-dev.theses.fr&lt;/code&gt; en local ou en dev, et &lt;code&gt;https://apollo-test.theses.fr&lt;/code&gt; en local ou en test)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;TODO : expliquer comment configurer les certificats SSL n√©cessaires √† la f√©d√© de &lt;code&gt;theses-rp&lt;/code&gt; pour la production (√† placer dans un volume mont√© sur &lt;code&gt;theses-rp&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;TODO: compl√©ter pour le d√©ploiement sur dev,test,prod avec la couche du reverse proxy raiponce&lt;/p&gt; &#xA;&lt;h2&gt;Supervision&lt;/h2&gt; &#xA;&lt;p&gt;Pour v√©rifier que l&#39;application est d√©marr√©e, on peut consulter l&#39;√©tat des conteneurs :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/theses-docker/&#xA;docker-compose ps&#xA;# doit retourner quelque chose comme ceci :&#xA;#19:12 $ docker-compose ps&#xA;#                Name                       Command        State                      Ports                    &#xA;#--------------------------------------------------------------------------------------------------------------&#xA;#theses-docker_theses-api-diffusion_1   httpd-foreground   Up      80/tcp                                      &#xA;#theses-docker_theses-rp_1              httpd-foreground   Up      0.0.0.0:443-&amp;gt;443/tcp,:::443-&amp;gt;443/tcp, 80/tcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pour v√©rifier que l&#39;application est bien lanc√©e, on peut aussi consulter ses logs :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/theses-docker/&#xA;docker-compose logs --tail=50 -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;TODO : ajouter remarque pour le versement des logs dans le puits de log (quand ce sera fait)&lt;/p&gt; &#xA;&lt;h2&gt;Mise √† jour de l&#39;application&lt;/h2&gt; &#xA;&lt;p&gt;(TODO : compl√©ter et adapter si on d√©porte les num√©ro de version dans le &lt;code&gt;.env&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;En suposant qu&#39;une nouvelle version de &lt;a href=&#34;https://github.com/abes-esr/docker-shibboleth-renater-sp&#34;&gt;https://github.com/abes-esr/docker-shibboleth-renater-sp&lt;/a&gt; est diponible, on peut mettre √† jour &lt;code&gt;theses-rp&lt;/code&gt; en sp√©cifiant le nouveau num√©ro de version dans le docker-compose.yml &lt;a href=&#34;https://github.com/abes-esr/theses-docker/raw/develop/docker-compose.yml#L15&#34;&gt;√† la ligne qui pointe vers l&#39;image docker abesesr/docker-shibboleth-renater-sp:x.x.x&lt;/a&gt;. Ensuite il suffit de r√©cup√©rer l&#39;image docker en question et de relancer l&#39;application comme ceci :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /opt/pod/theses-docker/&#xA;docker-compose pull # facultatif car le &#34;docker-compose up&#34; va faire le t√©l√©chargement si besoin&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sauvegardes et restauration&lt;/h2&gt; &#xA;&lt;p&gt;Pour sauvegarder l&#39;application, il faut :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sauvegarder la base de donn√©es (base Oracle sur les serveurs orpin) : todo pr√©ciser de quel sch√©ma et de quelles tables on parle&lt;/li&gt; &#xA; &lt;li&gt;Sauvegarder le fichier &lt;code&gt;.env&lt;/code&gt; qui est le seul fichier non versionn√© et qui permet de configurer tous les conteneurs docker de l&#39;appli&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Pour restaurer l&#39;application, il faut :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;restaurer la base de donn√©es&lt;/li&gt; &#xA; &lt;li&gt;r√©installer l&#39;application (cf plus haut la section installation) en r√©utilisant le &lt;code&gt;.env&lt;/code&gt; pr√©c√©dement sauvegard√©.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Voici la liste et la description des conteneurs d√©ploy√©s par le &lt;a href=&#34;https://github.com/abes-esr/theses-docker/raw/develop/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-rp&lt;/code&gt; : conteneur servant de reverse proxy d√©di√© √† l&#39;authentification des utilisateurs souhaitant acc√©der √† des th√®ses en acc√®s restreint. Cette authentification est d√©l√©gu√©e √† la f√©d√©ration d&#39;identit√©s Education-Recherche. Ce conteneur est l&#39;instanciation de l&#39;image docker &lt;a href=&#34;https://github.com/abes-esr/docker-shibboleth-renater-sp&#34;&gt;docker-shibboleth-renater-sp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-api-diffusion&lt;/code&gt; : conteneur qui sera charg√© de l&#39;API (en Java Spring) de theses.fr (travail en cours). Dans le cadre du PoC f√©d√©, ce conteneur est charg√© de mettre √† disposition un PDF en passant par la f√©d√©.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-api-recherche&lt;/code&gt; : conteneur qui sera charg√© de mettre √† disposition l&#39;API de recherche elle m√™me bas√©e sur le conteneur &lt;code&gt;theses-elasticsearch&lt;/code&gt; (travail en cours)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-api-indexation&lt;/code&gt; : conteneur qui sera charg√© de&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-front&lt;/code&gt; : conteneur qui sera charg√© du front (en VueJS) de theses.fr (travail en cours)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-batch&lt;/code&gt; : conteneur qui sera charg√© des batchs ponctuels ou p√©riodiques de theses.fr et en particulier d&#39;un batch qui permettra d&#39;indexer en masse les 500 000 th√®ses dans &lt;code&gt;theses-elasticsearch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-elasticsearch&lt;/code&gt; : conteneur qui sera charg√© d&#39;instancier le moteur de recherche elasticsearch qui contiendra l&#39;indexation des TEF de theses.fr&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;theses-kibana&lt;/code&gt; : conteneur qui sera charg√© du backoffice de &lt;code&gt;theses-elasticsearch&lt;/code&gt; en proposant des tableaux visuels&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tiangolo/nginx-rtmp-docker</title>
    <updated>2022-06-27T01:40:06Z</updated>
    <id>tag:github.com,2022-06-27:/tiangolo/nginx-rtmp-docker</id>
    <link href="https://github.com/tiangolo/nginx-rtmp-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image with Nginx using the nginx-rtmp-module module for live multimedia (video) streaming.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker/actions?query=workflow%3ADeploy&#34;&gt;&lt;img src=&#34;https://github.com/tiangolo/nginx-rtmp-docker/workflows/Deploy/badge.svg?sanitize=true&#34; alt=&#34;Deploy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported tags and respective &lt;code&gt;Dockerfile&lt;/code&gt; links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker/raw/master/Dockerfile&#34;&gt;&lt;code&gt;latest&lt;/code&gt; &lt;em&gt;(Dockerfile)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Note: There are &lt;a href=&#34;https://hub.docker.com/r/tiangolo/nginx-rtmp/tags&#34;&gt;tags for each build date&lt;/a&gt;. If you need to &#34;pin&#34; the Docker image version you use, you can select one of those tags. E.g. &lt;code&gt;tiangolo/nginx-rtmp:latest-2020-08-16&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;nginx-rtmp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/a&gt; image with &lt;a href=&#34;http://nginx.org/en/&#34;&gt;&lt;strong&gt;Nginx&lt;/strong&gt;&lt;/a&gt; using the &lt;a href=&#34;https://github.com/arut/nginx-rtmp-module&#34;&gt;&lt;strong&gt;nginx-rtmp-module&lt;/strong&gt;&lt;/a&gt; module for live multimedia (video) streaming.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://www.docker.com/&#34;&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/a&gt; image can be used to create an RTMP server for multimedia / video streaming using &lt;a href=&#34;http://nginx.org/en/&#34;&gt;&lt;strong&gt;Nginx&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/arut/nginx-rtmp-module&#34;&gt;&lt;strong&gt;nginx-rtmp-module&lt;/strong&gt;&lt;/a&gt;, built from the current latest sources (Nginx 1.15.0 and nginx-rtmp-module 1.2.1).&lt;/p&gt; &#xA;&lt;p&gt;This was inspired by other similar previous images from &lt;a href=&#34;https://hub.docker.com/r/dvdgiessen/nginx-rtmp-docker/&#34;&gt;dvdgiessen&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/jasonrivers/nginx-rtmp/&#34;&gt;jasonrivers&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/aevumdecessus/docker-nginx-rtmp/&#34;&gt;aevumdecessus&lt;/a&gt; and by an &lt;a href=&#34;https://obsproject.com/forum/resources/how-to-set-up-your-own-private-rtmp-server-using-nginx.50/&#34;&gt;OBS Studio post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The main purpose (and test case) to build it was to allow streaming from &lt;a href=&#34;https://obsproject.com/&#34;&gt;&lt;strong&gt;OBS Studio&lt;/strong&gt;&lt;/a&gt; to different clients at the same time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub repo&lt;/strong&gt;: &lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker&#34;&gt;https://github.com/tiangolo/nginx-rtmp-docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Docker Hub image&lt;/strong&gt;: &lt;a href=&#34;https://hub.docker.com/r/tiangolo/nginx-rtmp/&#34;&gt;https://hub.docker.com/r/tiangolo/nginx-rtmp/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For the simplest case, just run a container with this image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 1935:1935 --name nginx-rtmp tiangolo/nginx-rtmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to test with OBS Studio and VLC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run a container with the command above&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS Studio&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &#34;Settings&#34; button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to the &#34;Stream&#34; section&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In &#34;Stream Type&#34; select &#34;Custom Streaming Server&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &#34;URL&#34; enter the &lt;code&gt;rtmp://&amp;lt;ip_of_host&amp;gt;/live&lt;/code&gt; replacing &lt;code&gt;&amp;lt;ip_of_host&amp;gt;&lt;/code&gt; with the IP of the host in which the container is running. For example: &lt;code&gt;rtmp://192.168.0.30/live&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &#34;Stream key&#34; use a &#34;key&#34; that will be used later in the client URL to display that specific stream. For example: &lt;code&gt;test&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &#34;OK&#34; button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the section &#34;Sources&#34; click de &#34;Add&#34; button (&lt;code&gt;+&lt;/code&gt;) and select a source (for example &#34;Screen Capture&#34;) and configure it as you need&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &#34;Start Streaming&#34; button&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a &lt;a href=&#34;http://www.videolan.org/vlc/index.html&#34;&gt;VLC&lt;/a&gt; player (it also works in Raspberry Pi using &lt;code&gt;omxplayer&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click in the &#34;Media&#34; menu&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click in &#34;Open Network Stream&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enter the URL from above as &lt;code&gt;rtmp://&amp;lt;ip_of_host&amp;gt;/live/&amp;lt;key&amp;gt;&lt;/code&gt; replacing &lt;code&gt;&amp;lt;ip_of_host&amp;gt;&lt;/code&gt; with the IP of the host in which the container is running and &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; with the key you created in OBS Studio. For example: &lt;code&gt;rtmp://192.168.0.30/live/test&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &#34;Play&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now VLC should start playing whatever you are transmitting from OBS Studio&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;If something is not working you can check the logs of the container with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker logs nginx-rtmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extending&lt;/h2&gt; &#xA;&lt;p&gt;If you need to modify the configurations you can create a file &lt;code&gt;nginx.conf&lt;/code&gt; and replace the one in this image using a &lt;code&gt;Dockerfile&lt;/code&gt; that is based on the image, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM tiangolo/nginx-rtmp&#xA;&#xA;COPY nginx.conf /etc/nginx/nginx.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The current &lt;code&gt;nginx.conf&lt;/code&gt; contains:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Nginx&#34;&gt;worker_processes auto;&#xA;rtmp_auto_push on;&#xA;events {}&#xA;rtmp {&#xA;    server {&#xA;        listen 1935;&#xA;        listen [::]:1935 ipv6only=on;&#xA;&#xA;        application live {&#xA;            live on;&#xA;            record off;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can start from it and modify it as you need. Here&#39;s the &lt;a href=&#34;https://github.com/arut/nginx-rtmp-module/wiki/Directives&#34;&gt;documentation related to &lt;code&gt;nginx-rtmp-module&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Technical details&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;This image is built from the same base official images that most of the other official images, as Python, Node, Postgres, Nginx itself, etc. Specifically, &lt;a href=&#34;https://hub.docker.com/_/buildpack-deps/&#34;&gt;buildpack-deps&lt;/a&gt; which is in turn based on &lt;a href=&#34;https://hub.docker.com/_/debian/&#34;&gt;debian&lt;/a&gt;. So, if you have any other image locally you probably have the base image layers already downloaded.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is built from the official sources of &lt;strong&gt;Nginx&lt;/strong&gt; and &lt;strong&gt;nginx-rtmp-module&lt;/strong&gt; without adding anything else. (Surprisingly, most of the available images that include &lt;strong&gt;nginx-rtmp-module&lt;/strong&gt; are made from different sources, old versions or add several other components).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It has a simple default configuration that should allow you to send one or more streams to it and have several clients receiving multiple copies of those streams simultaneously. (It includes &lt;code&gt;rtmp_auto_push&lt;/code&gt; and an automatic number of worker processes).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Latest Changes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üë∑ Add Latest Changes GitHub Action. PR &lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker/pull/29&#34;&gt;#29&lt;/a&gt; by &lt;a href=&#34;https://github.com/tiangolo&#34;&gt;@tiangolo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add CI with GitHub actions. PR &lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker/pull/15&#34;&gt;#15&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Upgrade Nginx to version 1.18.0. PR &lt;a href=&#34;https://github.com/tiangolo/nginx-rtmp-docker/pull/13&#34;&gt;#13&lt;/a&gt; by &lt;a href=&#34;https://github.com/Nathanael-Mtd&#34;&gt;@Nathanael-Mtd&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the terms of the MIT License.&lt;/p&gt;</summary>
  </entry>
</feed>