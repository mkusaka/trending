<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-07T01:30:47Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xmtp/didethresolver</title>
    <updated>2023-12-07T01:30:47Z</updated>
    <id>tag:github.com,2023-12-07:/xmtp/didethresolver</id>
    <link href="https://github.com/xmtp/didethresolver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;XMTP Registry Resolver&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;didethresolver&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xmtp/didethresolver/actions/workflows/ci-image.yml&#34;&gt;&lt;img src=&#34;https://github.com/xmtp/didethresolver/actions/workflows/ci-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This resolver service implements a DID registry resolver to resolve decentralized identifiers for the XMTP client sdk.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction to DID Specification&lt;/h2&gt; &#xA;&lt;p&gt;The Decentralized Identifiers (DIDs) v1.0 specification, as outlined by W3C, describes a system for creating verifiable, decentralized digital identities. DIDs are unique identifiers that can refer to any subject, such as a person or organization, and are controlled by their creator rather than a centralized authority. This approach aims to decouple identity management from centralized registries and certificate authorities.&lt;/p&gt; &#xA;&lt;p&gt;Key aspects of DIDs include:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Decentralization&lt;/strong&gt;: DIDs eliminate reliance on centralized authorities for identifier management. They offer a way to manage digital identities without a single point of failure&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Control and Privacy&lt;/strong&gt;: Entities can directly control their digital identifiers and manage the privacy of their information, including what personal data is revealed in different contexts&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interoperability and Portability&lt;/strong&gt;: DIDs are designed to be interoperable and can be used across different systems and networks. This promotes a seamless experience across various digital platforms&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;: The architecture of DIDs involves several components, including DID subjects (the entities identified by the DIDs), DID controllers (those who have the capability to make changes to a DID document), and verifiable data registries (systems that record DIDs and DID documents for resolution)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Conformance&lt;/strong&gt;: The specification outlines conformance criteria for different components of the DID ecosystem, including DIDs, DID documents, DID resolvers, and DID URL dereferencers. Conformance ensures that these components operate consistently within the DID infrastructure&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Reference Implementation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veramolabs/did-eth/tree/main/packages/did-eth-resolver&#34;&gt;Veramo Labs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start (Dev Containers)&lt;/h2&gt; &#xA;&lt;p&gt;This project supports containerized development. From Visual Studio Code Dev Containers extension specify the Dockerfile as the target:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Reopen in Container&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;Command line build using docker&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker build . -t didethresolver:1&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>eoovve/node-ws</title>
    <updated>2023-12-07T01:30:47Z</updated>
    <id>tag:github.com,2023-12-07:/eoovve/node-ws</id>
    <link href="https://github.com/eoovve/node-ws" rel="alternate"></link>
    <summary type="html">&lt;p&gt;node环境通用项目&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node-ws说明&lt;/h1&gt; &#xA;&lt;p&gt;用于node环境的玩具和容器，基于node三方ws库，集成哪吒探针服务，可自行添加环境变量&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;PaaS 平台设置的环境变量&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;变量名&lt;/th&gt; &#xA;     &lt;th&gt;是否必须&lt;/th&gt; &#xA;     &lt;th&gt;默认值&lt;/th&gt; &#xA;     &lt;th&gt;备注&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;UUID&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;0dc5f3c0-002b-420e-86ef-7a779dfc9101&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;3000&lt;/td&gt; &#xA;     &lt;td&gt;监听端口&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;TIME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;2 * 60 * 1000&lt;/td&gt; &#xA;     &lt;td&gt;保活间隔时间，默认2分钟&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;URL&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;a href=&#34;https://www.google.com&#34;&gt;https://www.google.com&lt;/a&gt;&lt;/td&gt; &#xA;     &lt;td&gt;保活的域名，不填写不开启&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_SERVER&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒客户端域名&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_PORT&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;5555&lt;/td&gt; &#xA;     &lt;td&gt;当哪吒端口为443时，自动开启tls，无需设置TLS变量&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NEZHA_KEY&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;哪吒探针客户端专用 Key&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;NAME&lt;/td&gt; &#xA;     &lt;td&gt;否&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;节点名称前缀，例如：Serv00&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOMAIN&lt;/td&gt; &#xA;     &lt;td&gt;是&lt;/td&gt; &#xA;     &lt;td&gt;&lt;/td&gt; &#xA;     &lt;td&gt;项目分配的域名或已反代的域名，不包括&lt;a href=&#34;https://%E5%89%8D%E7%BC%80&#34;&gt;https://前缀&lt;/a&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目已编译自访问功能，如需要，在index.js第3行中添加项目分配的域名，第4行为访问周期，根据需要修改。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;域名/sub查看节点信息，也是订阅地址，包含 https:// 或 http:// 前缀，非标端口，域名:端口/sub&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;右边的Releases中有适配FreeBSD系统的Serv00和CT8的压缩包&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;温馨提示：对于风控比较严格的平台建议修改完变量后，混肴后再部署，能够避免被封号，绝对安全，READAME.md为说明文件，请不要上传。 js混肴地址：&lt;a href=&#34;https://obfuscator.io&#34;&gt;https://obfuscator.io&lt;/a&gt; 全部使用默认配置就好，&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如需进一步修改，右边的Releases中有未混淆的源代码&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>