<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-10T01:30:22Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>crossoverJie/k8s-combat</title>
    <updated>2023-09-10T01:30:22Z</updated>
    <id>tag:github.com,2023-09-10:/crossoverJie/k8s-combat</id>
    <link href="https://github.com/crossoverJie/k8s-combat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;☸️适用于研发人员的 k8s 实战项目🐳&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/crossoverJie/k8s-combat/main/docs/title.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;背景&lt;/h1&gt; &#xA;&lt;p&gt;最近这这段时间更新了一些 k8s 相关的博客和视频，也收到了一些反馈；大概分为这几类：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;公司已经经历过服务化改造了，但还未接触过云原生。&lt;/li&gt; &#xA; &lt;li&gt;公司部分应用进行了云原生改造，但大部分工作是由基础架构和运维部门推动的，自己只是作为开发并不了解其中的细节，甚至 k8s 也接触不到。&lt;/li&gt; &#xA; &lt;li&gt;还处于比较传统的以虚拟机部署的传统运维为主。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;其中以第二种占大多数，虽然公司进行了云原生改造，但似乎和纯业务研发同学来说没有太大关系，自己工作也没有什么变化。&lt;/p&gt; &#xA;&lt;p&gt;恰好我之前正好从业务研发的角度转换到了基础架构部门，两个角色我都接触过，也帮助过一些业务研发了解公司的云原生架构；&lt;/p&gt; &#xA;&lt;p&gt;为此所以我想系统性的带大家以&lt;strong&gt;研发&lt;/strong&gt;的角度对 k8s 进行实践。&lt;/p&gt; &#xA;&lt;p&gt;因为 k8s 部分功能其实是偏运维的，对研发来说优先级并不太高； 所以我不太会涉及一些 k8s 运维的知识点，比如安装、组件等模块；主要以我们日常开发会使用到的组件为主。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/09/02/BtYcF6jp8u3nzJs.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;入门&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/k8s-combat/main/#%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E5%88%B0-k8s&#34;&gt;部署应用到 k8s&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/k8s-combat/main/#%E8%B7%A8%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8&#34;&gt;跨服务调用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;集群外部访问&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;进阶&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如何使用配置&lt;/li&gt; &#xA; &lt;li&gt;服务网格实战&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;运维你的应用&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;应用探针&lt;/li&gt; &#xA; &lt;li&gt;滚动更新与回滚&lt;/li&gt; &#xA; &lt;li&gt;优雅采集日志&lt;/li&gt; &#xA; &lt;li&gt;应用可观测性 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;指标可视化&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;部署应用到 k8s&lt;/h1&gt; &#xA;&lt;p&gt;首先从第一章【部署应用到 k8s】开始，我会用 Go 写一个简单的 Web 应用，然后打包为一个 Docker 镜像，之后部署到 k8s 中，并完成其中的接口调用。&lt;/p&gt; &#xA;&lt;h2&gt;编写应用&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func main() {  &#xA;   http.HandleFunc(&#34;/ping&#34;, func(w http.ResponseWriter, r *http.Request) {  &#xA;      log.Println(&#34;ping&#34;)  &#xA;      fmt.Fprint(w, &#34;pong&#34;)  &#xA;   })  &#xA;  &#xA;   http.ListenAndServe(&#34;:8081&#34;, nil)  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;应用非常简单就是提供了一个 &lt;code&gt;ping&lt;/code&gt; 接口，然后返回了一个 &lt;code&gt;pong&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dockerfile&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# 第一阶段：编译 Go 程序  &#xA;FROM golang:1.19 AS dependencies  &#xA;ENV GOPROXY=https://goproxy.cn,direct  &#xA;WORKDIR /go/src/app  &#xA;COPY go.mod .  &#xA;#COPY ../../go.sum .  &#xA;RUN --mount=type=ssh go mod download  &#xA;  &#xA;# 第二阶段：构建可执行文件  &#xA;FROM golang:1.19 AS builder  &#xA;WORKDIR /go/src/app  &#xA;COPY . .  &#xA;#COPY --from=dependencies /go/pkg /go/pkg  &#xA;RUN go build  &#xA;  &#xA;# 第三阶段：部署  &#xA;FROM debian:stable-slim  &#xA;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y curl  &#xA;COPY --from=builder /go/src/app/k8s-combat /go/bin/k8s-combat  &#xA;ENV PATH=&#34;/go/bin:${PATH}&#34;  &#xA;  &#xA;# 启动 Go 程序  &#xA;CMD [&#34;k8s-combat&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;之后编写了一个 &lt;code&gt;dockerfile&lt;/code&gt; 用于构建 &lt;code&gt;docker&lt;/code&gt; 镜像。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-makefile&#34;&gt;docker:  &#xA;   @echo &#34;Docker Build...&#34;  &#xA;   docker build . -t crossoverjie/k8s-combat:v1 &amp;amp;&amp;amp; docker image push crossoverjie/k8s-combat:v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用 &lt;code&gt;make docker&lt;/code&gt; 会在本地构建镜像并上传到 &lt;code&gt;dockerhub&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;编写 deployment&lt;/h2&gt; &#xA;&lt;p&gt;下一步便是整个过程中最重要的环节了，也是唯一和 k8s 打交道的地方，那就是编写 deployment。&lt;/p&gt; &#xA;&lt;p&gt;在之前的视频[《一分钟了解 k8s》](【一分钟带你了解 k8s】 &lt;a href=&#34;https://www.bilibili.com/video/BV1Cm4y1n7yG/?share_source=copy_web&amp;amp;vd_source=358858ab808efe832b0dda9dbc4701da&#34;&gt;https://www.bilibili.com/video/BV1Cm4y1n7yG/?share_source=copy_web&amp;amp;vd_source=358858ab808efe832b0dda9dbc4701da&lt;/a&gt;) 中讲过常见的组件： &lt;img src=&#34;https://s2.loli.net/2023/09/04/hrOUSVsmP2KkNlC.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;其中我们最常见的就是 deployment，通常用于部署无状态应用；现在还不太需要了解其他的组件，先看看 deployment 如何编写：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: apps/v1  &#xA;kind: Deployment  &#xA;metadata:  &#xA;  labels:  &#xA;    app: k8s-combat  &#xA;  name: k8s-combat  &#xA;spec:  &#xA;  replicas: 1  &#xA;  selector:  &#xA;    matchLabels:  &#xA;      app: k8s-combat  &#xA;  template:  &#xA;    metadata:  &#xA;      labels:  &#xA;        app: k8s-combat  &#xA;    spec:  &#xA;      containers:  &#xA;        - name: k8s-combat  &#xA;          image: crossoverjie/k8s-combat:v1  &#xA;          imagePullPolicy: Always  &#xA;          resources:  &#xA;            limits:  &#xA;              cpu: &#34;1&#34;  &#xA;              memory: 300Mi  &#xA;            requests:  &#xA;              cpu: &#34;0.1&#34;  &#xA;              memory: 30Mi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;开头两行的 &lt;code&gt;apiVersion&lt;/code&gt; 和 &lt;code&gt;kind&lt;/code&gt; 可以暂时不要关注，就理解为 deployment 的固定写法即可。&lt;/p&gt; &#xA;&lt;p&gt;metadata：顾名思义就是定义元数据的地方，告诉 &lt;code&gt;Pod&lt;/code&gt; 我们这个 &lt;code&gt;deployment&lt;/code&gt; 叫什么名字，这里定义为：&lt;code&gt;k8s-combat&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;中间的：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;metadata:  &#xA;  labels:  &#xA;    app: k8s-combat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;也很容易理解，就是给这个 &lt;code&gt;deployment&lt;/code&gt; 打上标签，通常是将这个标签和其他的组件进行关联使用才有意义，不然就只是一个标签而已。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;标签是键值对的格式，key, value 都可以自定义。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;而这里的 &lt;code&gt;app: k8s-combat&lt;/code&gt; 便是和下面的 spec 下的 selector 选择器匹配，表明都使用 &lt;code&gt;app: k8s-combat&lt;/code&gt; 进行关联。&lt;/p&gt; &#xA;&lt;p&gt;而 template 中所定义的标签也是为了让选择器和 template 中的定义的 Pod 进行关联。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Pod 是 k8s 中相同功能容器的分组，一个 Pod 可以绑定多个容器，这里就只有我们应用容器一个了；后续在讲到 istio 和日志采集时便可以看到其他的容器。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;template 中定义的内容就很容易理解了，指定了我们的容器拉取地址，以及所占用的资源(&lt;code&gt;cpu/ memory&lt;/code&gt;)。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;replicas: 1&lt;/code&gt;：表示只部署一个副本，也就是只有一个节点的意思。&lt;/p&gt; &#xA;&lt;h2&gt;部署应用&lt;/h2&gt; &#xA;&lt;p&gt;之后我们使用命令:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl apply -f deployment/deployment.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;生产环境中往往会使用云厂商所提供的 k8s 环境，我们本地可以使用 &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;https://minikube.sigs.k8s.io/docs/start/&lt;/a&gt; minikube 来模拟。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;就会应用这个 deployment 同时将容器部署到 k8s 中，之后使用:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl get pod&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;在后台 k8s 会根据我们填写的资源选择一个合适的节点，将当前这个 Pod 部署过去。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;就会列出我们刚才部署的 Pod:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;❯ kubectl get pod&#xA;NAME                                READY   STATUS    RESTARTS   AGE&#xA;k8s-combat-57f794c59b-7k58n         1/1     Running   0          17h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;我们使用命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubectl exec -it k8s-combat-57f794c59b-7k58n  bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;就会进入我们的容器，这个和使用 docker 类似。&lt;/p&gt; &#xA;&lt;p&gt;之后执行 curl 命令便可以访问我们的接口了：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;root@k8s-combat-57f794c59b-7k58n:/# curl http://127.0.0.1:8081/ping&#xA;pong&#xA;root@k8s-combat-57f794c59b-7k58n:/#&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这时候我们再开一个终端执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;❯ kubectl logs -f k8s-combat-57f794c59b-7k58n&#xA;2023/09/03 09:28:07 ping&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;便可以打印容器中的日志，当然前提是应用的日志是写入到了标准输出中。&lt;/p&gt; &#xA;&lt;h1&gt;跨服务调用&lt;/h1&gt; &#xA;&lt;p&gt;在做传统业务开发的时候，当我们的服务提供方有多个实例时，往往我们需要将对方的服务列表保存在本地，然后采用一定的算法进行调用；当服务提供方的列表变化时还得及时通知调用方。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;student:&#xA;&#x9;url:&#xA;&#x9;  - 192.168.1.1:8081&#xA;&#x9;  - 192.168.1.2:8081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这样自然是对双方都带来不少的负担，所以后续推出的服务调用框架都会想办法解决这个问题。&lt;/p&gt; &#xA;&lt;p&gt;以 &lt;code&gt;spring cloud&lt;/code&gt; 为例： &lt;img src=&#34;https://s2.loli.net/2023/09/06/IW1jaidQ25Xk9u4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;服务提供方会向一个服务注册中心注册自己的服务（名称、IP等信息），客户端每次调用的时候会向服务注册中心获取一个节点信息，然后发起调用。&lt;/p&gt; &#xA;&lt;p&gt;但当我们切换到 &lt;code&gt;k8s&lt;/code&gt; 后，这些基础设施都交给了 &lt;code&gt;k8s&lt;/code&gt; 处理了，所以 &lt;code&gt;k8s&lt;/code&gt; 自然得有一个组件来解决服务注册和调用的问题。&lt;/p&gt; &#xA;&lt;p&gt;也就是我们今天重点介绍的 &lt;code&gt;service&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;service&lt;/h1&gt; &#xA;&lt;p&gt;在介绍 &lt;code&gt;service&lt;/code&gt; 之前我先调整了源码：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;func main() {  &#xA;   http.HandleFunc(&#34;/ping&#34;, func(w http.ResponseWriter, r *http.Request) {  &#xA;      name, _ := os.Hostname()  &#xA;      log.Printf(&#34;%s ping&#34;, name)  &#xA;      fmt.Fprint(w, &#34;pong&#34;)  &#xA;   })  &#xA;   http.HandleFunc(&#34;/service&#34;, func(w http.ResponseWriter, r *http.Request) {  &#xA;      resp, err := http.Get(&#34;http://k8s-combat-service:8081/ping&#34;)  &#xA;      if err != nil {  &#xA;         log.Println(err)  &#xA;         fmt.Fprint(w, err)  &#xA;         return  &#xA;      }  &#xA;      fmt.Fprint(w, resp.Status)  &#xA;   })  &#xA;  &#xA;   http.ListenAndServe(&#34;:8081&#34;, nil)  &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;新增了一个 &lt;code&gt;/service&lt;/code&gt; 的接口，这个接口会通过 service 的方式调用服务提供者的服务，然后重新打包。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;同时也新增了一个 &lt;code&gt;deployment-service.yaml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: apps/v1  &#xA;kind: Deployment  &#xA;metadata:  &#xA;  labels:  &#xA;    app: k8s-combat-service # 通过标签选择关联  &#xA;  name: k8s-combat-service  &#xA;spec:  &#xA;  replicas: 1  &#xA;  selector:  &#xA;    matchLabels:  &#xA;      app: k8s-combat-service  &#xA;  template:  &#xA;    metadata:  &#xA;      labels:  &#xA;        app: k8s-combat-service  &#xA;    spec:  &#xA;      containers:  &#xA;        - name: k8s-combat-service  &#xA;          image: crossoverjie/k8s-combat:v1  &#xA;          imagePullPolicy: Always  &#xA;          resources:  &#xA;            limits:  &#xA;              cpu: &#34;1&#34;  &#xA;              memory: 100Mi  &#xA;            requests:  &#xA;              cpu: &#34;0.1&#34;  &#xA;              memory: 10Mi  &#xA;---  &#xA;apiVersion: v1  &#xA;kind: Service  &#xA;metadata:  &#xA;  name: k8s-combat-service  &#xA;spec:  &#xA;  selector:  &#xA;    app: k8s-combat-service # 通过标签选择关联  &#xA;  type: ClusterIP  &#xA;  ports:  &#xA;    - port: 8081        # 本 Service 的端口  &#xA;      targetPort: 8081  # 容器端口  &#xA;      name: app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;使用相同的镜像部署一个新的 deployment，名称为 &lt;code&gt;k8s-combat-service&lt;/code&gt;，重点是新增了一个&lt;code&gt;kind: Service&lt;/code&gt; 的对象。&lt;/p&gt; &#xA;&lt;p&gt;这个就是用于声明 &lt;code&gt;service&lt;/code&gt; 的组件，在这个组件中也是使用 &lt;code&gt;selector&lt;/code&gt; 标签和 &lt;code&gt;deployment&lt;/code&gt; 进行了关联。&lt;/p&gt; &#xA;&lt;p&gt;也就是说这个 &lt;code&gt;service&lt;/code&gt; 用于服务于名称等于 &lt;code&gt;k8s-combat-service&lt;/code&gt; 的 &lt;code&gt;deployment&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;下面的两个端口也很好理解，一个是代理的端口， 另一个是 service 自身提供出去的端口。&lt;/p&gt; &#xA;&lt;p&gt;至于 &lt;code&gt;type: ClusterIP&lt;/code&gt; 是用于声明不同类型的 &lt;code&gt;service&lt;/code&gt;，除此之外的类型还有：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport&#34;&gt;&lt;code&gt;NodePort&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer&#34;&gt;&lt;code&gt;LoadBalancer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#externalname&#34;&gt;&lt;code&gt;ExternalName&lt;/code&gt;&lt;/a&gt; 等类型，默认是 &lt;code&gt;ClusterIP&lt;/code&gt;，现在不用纠结这几种类型的作用，后续我们在讲到 &lt;code&gt;Ingress&lt;/code&gt; 的时候会具体介绍。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;负载测试&lt;/h2&gt; &#xA;&lt;p&gt;我们先分别将这两个 &lt;code&gt;deployment&lt;/code&gt; 部署好：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;k apply -f deployment/deployment.yaml&#xA;k apply -f deployment/deployment-service.yaml&#xA;&#xA;❯ k get pod&#xA;NAME                                  READY   STATUS    RESTARTS   AGE&#xA;k8s-combat-7867bfb596-67p5m           1/1     Running   0          3h22m&#xA;k8s-combat-service-5b77f59bf7-zpqwt   1/1     Running   0          3h22m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;由于我新增了一个 &lt;code&gt;/service&lt;/code&gt; 的接口，用于在 &lt;code&gt;k8s-combat&lt;/code&gt; 中通过 &lt;code&gt;service&lt;/code&gt; 调用 &lt;code&gt;k8s-combat-service&lt;/code&gt; 的接口。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;resp, err := http.Get(&#34;http://k8s-combat-service:8081/ping&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;其中 &lt;code&gt;k8s-combat-service&lt;/code&gt; 服务的域名就是他的服务名称。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果是跨 namespace 调用时，需要指定一个完整名称，在后续的章节会演示。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;我们整个的调用流程如下： &lt;img src=&#34;https://s2.loli.net/2023/09/06/i12pR3DjC6wnIXQ.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;相信大家也看得出来相对于 &lt;code&gt;spring cloud&lt;/code&gt; 这类微服务框架提供的客户端负载方式，&lt;code&gt;service&lt;/code&gt; 是一种服务端负载，有点类似于 &lt;code&gt;Nginx&lt;/code&gt; 的反向代理。&lt;/p&gt; &#xA;&lt;p&gt;为了更直观的验证这个流程，此时我将 &lt;code&gt;k8s-combat-service&lt;/code&gt; 的副本数增加到 2：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;spec:  &#xA;  replicas: 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;只需要再次执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;❯ k apply -f deployment/deployment-service.yaml&#xA;deployment.apps/k8s-combat-service configured&#xA;service/k8s-combat-service unchanged&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/09/06/ZC8UrjEz6ia1Qgo.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;不管我们对 &lt;code&gt;deployment&lt;/code&gt; 的做了什么变更，都只需要 &lt;code&gt;apply&lt;/code&gt; 这个 &lt;code&gt;yaml&lt;/code&gt; 文件即可， k8s 会自动将当前的 &lt;code&gt;deployment&lt;/code&gt; 调整为我们预期的状态（比如这里的副本数量增加为 2）；这也就是 &lt;code&gt;k8s&lt;/code&gt; 中常说的&lt;strong&gt;声明式 API&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;可以看到此时 &lt;code&gt;k8s-combat-service&lt;/code&gt; 的副本数已经变为两个了。 如果我们此时查看这个 &lt;code&gt;service&lt;/code&gt; 的描述时：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;❯ k describe svc k8s-combat-service |grep Endpoints&#xA;Endpoints:         192.168.130.133:8081,192.168.130.29:8081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;会发现它已经代理了这两个 &lt;code&gt;Pod&lt;/code&gt; 的 IP。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/09/06/HbjyEcnaeCK6uMJ.png&#34; alt=&#34;image.png&#34;&gt; 此时我进入了 &lt;code&gt;k8s-combat-7867bfb596-67p5m&lt;/code&gt; 的容器：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;k exec -it k8s-combat-7867bfb596-67p5m bash&#xA;curl http://127.0.0.1:8081/service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;并执行两次 &lt;code&gt;/service&lt;/code&gt; 接口，发现请求会轮训进入 &lt;code&gt;k8s-combat-service&lt;/code&gt; 的代理的 IP 中。&lt;/p&gt; &#xA;&lt;p&gt;由于 &lt;code&gt;k8s service&lt;/code&gt; 是基于 &lt;code&gt;TCP/UDP&lt;/code&gt; 的四层负载，所以在 &lt;code&gt;http1.1&lt;/code&gt; 中是可以做到请求级的负载均衡，但如果是类似于 &lt;code&gt;gRPC&lt;/code&gt; 这类长链接就无法做到请求级的负载均衡。&lt;/p&gt; &#xA;&lt;p&gt;换句话说 &lt;code&gt;service&lt;/code&gt; 只支持连接级别的负载。&lt;/p&gt; &#xA;&lt;p&gt;如果要支持 &lt;code&gt;gRPC&lt;/code&gt;，就得使用 Istio 这类服务网格，相关内容会在后续章节详解。&lt;/p&gt; &#xA;&lt;p&gt;总的来说 &lt;code&gt;k8s service&lt;/code&gt; 提供了简易的服务注册发现和负载均衡功能，当我们只提供 http 服务时是完全够用的。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jakzal/phpqa</title>
    <updated>2023-09-10T01:30:22Z</updated>
    <id>tag:github.com,2023-09-10:/jakzal/phpqa</id>
    <link href="https://github.com/jakzal/phpqa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image that provides static analysis tools for PHP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Static Analysis Tools for PHP&lt;/h1&gt; &#xA;&lt;p&gt;Docker image providing static analysis tools for PHP. The list of available tools and the installer are actually managed in the &lt;a href=&#34;https://github.com/jakzal/toolbox&#34;&gt;&lt;code&gt;jakzal/toolbox&lt;/code&gt; repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jakzal/phpqa/actions&#34;&gt;&lt;img src=&#34;https://github.com/jakzal/phpqa/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jakzal/phpqa/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jakzal/phpqa&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported platforms and PHP versions&lt;/h2&gt; &#xA;&lt;p&gt;Docker hub repository: &lt;a href=&#34;https://hub.docker.com/r/jakzal/phpqa/&#34;&gt;https://hub.docker.com/r/jakzal/phpqa/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nightly builds: &lt;a href=&#34;https://hub.docker.com/r/jakzal/phpqa-nightly/&#34;&gt;https://hub.docker.com/r/jakzal/phpqa-nightly/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;debian&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0&lt;/code&gt;, &lt;code&gt;1.91&lt;/code&gt;, &lt;code&gt;1.91.0-debian&lt;/code&gt;, &lt;code&gt;1.91-debian&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.0&lt;/code&gt;, &lt;code&gt;1.91-php8.0&lt;/code&gt;, &lt;code&gt;php8.0-debian&lt;/code&gt;, &lt;code&gt;php8.0&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.1&lt;/code&gt;, &lt;code&gt;1.91-php8.1&lt;/code&gt;, &lt;code&gt;php8.1-debian&lt;/code&gt;, &lt;code&gt;php8.1&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.2&lt;/code&gt;, &lt;code&gt;1.91-php8.2&lt;/code&gt;, &lt;code&gt;php8.2-debian&lt;/code&gt;, &lt;code&gt;php8.2&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alpine&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-alpine&lt;/code&gt;, &lt;code&gt;1.91-alpine&lt;/code&gt;, (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.0-alpine&lt;/code&gt;, &lt;code&gt;1.91-php8.0-alpine&lt;/code&gt;, &lt;code&gt;php8.0-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.1-alpine&lt;/code&gt;, &lt;code&gt;1.91-php8.1-alpine&lt;/code&gt;, &lt;code&gt;php8.1-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.91.0-php8.2-alpine&lt;/code&gt;, &lt;code&gt;1.91-php8.2-alpine&lt;/code&gt;, &lt;code&gt;php8.2-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.91.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Legacy&lt;/h3&gt; &#xA;&lt;p&gt;These are the latest tags for PHP versions that are no longer supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;1.80.0-php7.4&lt;/code&gt;, &lt;code&gt;1.80-php7.4&lt;/code&gt;, &lt;code&gt;php7.4-debian&lt;/code&gt;, &lt;code&gt;php7.4&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.80.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.80.0-php7.4-alpine&lt;/code&gt;, &lt;code&gt;1.80-php7.4-alpine&lt;/code&gt;, &lt;code&gt;php7.4-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.80.0/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.61.2-php7.3&lt;/code&gt;, &lt;code&gt;1.61-php7.3&lt;/code&gt;, &lt;code&gt;php7.3-debian&lt;/code&gt;, &lt;code&gt;php7.3&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.61.2/debian/Dockerfile&#34;&gt;debian/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.61.2-php7.3-alpine&lt;/code&gt;, &lt;code&gt;1.61-php7.3-alpine&lt;/code&gt;, &lt;code&gt;php7.3-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.61.2/alpine/Dockerfile&#34;&gt;alpine/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.44.0-php7.2&lt;/code&gt;, &lt;code&gt;1.44-php7.2&lt;/code&gt;, &lt;code&gt;php7.2&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.44.0/7.2/debian/Dockerfile&#34;&gt;7.2/debian/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.44.0-php7.2-alpine&lt;/code&gt;, &lt;code&gt;1.44-php7.2-alpine&lt;/code&gt;, &lt;code&gt;php7.2-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.44.0/7.2/alpine/Dockerfile&#34;&gt;7.2/alpine/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.26.0-php7.1&lt;/code&gt;, &lt;code&gt;1.26-php7.1&lt;/code&gt;, &lt;code&gt;php7.1&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.26.0/7.1/debian/Dockerfile&#34;&gt;7.1/debian/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1.26.0-php7.1-alpine&lt;/code&gt;, &lt;code&gt;1.26-php7.1-alpine&lt;/code&gt;, &lt;code&gt;php7.1-alpine&lt;/code&gt; (&lt;a href=&#34;https://github.com/jakzal/phpqa/raw/v1.26.0/7.1/alpine/Dockerfile&#34;&gt;7.1/alpine/Dockerfile&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Available tools&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;PHP 8.0&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;PHP 8.1&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;PHP 8.2&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;behat&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://behat.org/&#34;&gt;Helps to test business expectations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;box&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/humbug/box&#34;&gt;Fast, zero config application bundler with PHARs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;box-3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/humbug/box&#34;&gt;Fast, zero config application bundler with PHARs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;churn&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/bmitch/churn-php&#34;&gt;Discovers good candidates for refactoring&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;codeception&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://codeception.com/&#34;&gt;Codeception is a BDD-styled PHP testing framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://getcomposer.org/&#34;&gt;Dependency Manager for PHP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-bin-plugin&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/bamarni/composer-bin-plugin&#34;&gt;Composer plugin to install bin vendors in isolated locations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-normalize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/ergebnis/composer-normalize&#34;&gt;Composer plugin to normalize composer.json files&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-require-checker&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/maglnet/ComposerRequireChecker&#34;&gt;Verify that no unknown symbols are used in the sources of a package.&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-require-checker-3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/maglnet/ComposerRequireChecker&#34;&gt;Verify that no unknown symbols are used in the sources of a package.&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-unused&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/icanhazstring/composer-unused&#34;&gt;Show unused packages by scanning your code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dephpend&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://dephpend.com/&#34;&gt;Detect flaws in your architecture&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;deprecation-detector&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sensiolabs-de/deprecation-detector&#34;&gt;Finds usages of deprecated code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;deptrac&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/qossmic/deptrac&#34;&gt;Enforces dependency rules between software layers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;diffFilter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/exussum12/coverageChecker&#34;&gt;Applies QA tools to run on a single pull request&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ecs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Symplify/EasyCodingStandard&#34;&gt;Sets up and runs coding standard checks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;infection&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://infection.github.io/&#34;&gt;AST based PHP Mutation Testing Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;larastan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/nunomaduro/larastan&#34;&gt;PHPStan extension for Laravel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;local-php-security-checker&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/fabpot/local-php-security-checker&#34;&gt;Checks composer dependencies for known security vulnerabilities&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;parallel-lint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/php-parallel-lint/PHP-Parallel-Lint&#34;&gt;Checks PHP file syntax&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;paratest&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/paratestphp/paratest&#34;&gt;Parallel testing for PHPUnit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pdepend&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pdepend.org/&#34;&gt;Static Analysis Tool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pest&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/pestphp/pest&#34;&gt;The elegant PHP Testing Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phan/phan&#34;&gt;Static Analysis Tool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phive&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phar.io/&#34;&gt;PHAR Installation and Verification Environment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php-coupling-detector&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://akeneo.github.io/php-coupling-detector/&#34;&gt;Detects code coupling issues&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php-cs-fixer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://cs.symfony.com/&#34;&gt;PHP Coding Standards Fixer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php-fuzzer&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/nikic/PHP-Fuzzer&#34;&gt;A fuzzer for PHP, which can be used to find bugs in libraries by feeding them &#39;random&#39; inputs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php-semver-checker&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/tomzx/php-semver-checker&#34;&gt;Suggests a next version according to semantic versioning&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpa&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/rskuipers/php-assumptions&#34;&gt;Checks for weak assumptions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phparkitect&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phparkitect/arkitect&#34;&gt;Helps to put architectural constraints in a PHP code base&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpat&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/carlosas/phpat&#34;&gt;Easy to use architecture testing tool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpbench&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpbench/phpbench&#34;&gt;PHP Benchmarking framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpca&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/wapmorgan/PhpCodeAnalyzer&#34;&gt;Finds usage of non-built-in extensions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcb&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/mayflower/PHP_CodeBrowser&#34;&gt;PHP Code Browser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcbf&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;Automatically corrects coding standard violations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcodesniffer-composer-install&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Dealerdirect/phpcodesniffer-composer-installer&#34;&gt;Easy installation of PHP_CodeSniffer coding standards (rulesets).&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcov&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phpcov&#34;&gt;a command-line frontend for the PHP_CodeCoverage library&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcpd&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phpcpd&#34;&gt;Copy/Paste Detector&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;Detects coding standard violations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcs-security-audit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/FloeDesignTechnologies/phpcs-security-audit&#34;&gt;Finds vulnerabilities and weaknesses related to security in PHP code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpda&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://mamuz.github.io/PhpDependencyAnalysis/&#34;&gt;Generates dependency graphs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpdd&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://wapmorgan.github.io/PhpDeprecationDetector&#34;&gt;Finds usage of deprecated features&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpDocumentor&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.phpdoc.org/&#34;&gt;Documentation generator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpinsights&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phpinsights.com/&#34;&gt;Analyses code quality, style, architecture and complexity&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phplint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/overtrue/phplint&#34;&gt;Lints php files in parallel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phploc&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phploc&#34;&gt;A tool for quickly measuring the size of a PHP project&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpmd&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phpmd.org/&#34;&gt;A tool for finding problems in PHP code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpmetrics&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.phpmetrics.org/&#34;&gt;Static Analysis Tool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpmnd&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/povils/phpmnd&#34;&gt;Helps to detect magic numbers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpspec&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.phpspec.net/&#34;&gt;SpecBDD Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan&#34;&gt;Static Analysis Tool&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-banned-code&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/ekino/phpstan-banned-code&#34;&gt;PHPStan rules for detecting calls to specific functions you don&#39;t want in your project&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-beberlei-assert&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-beberlei-assert&#34;&gt;PHPStan extension for beberlei/assert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-deprecation-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-deprecation-rules&#34;&gt;PHPStan rules for detecting deprecated code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-doctrine&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-doctrine&#34;&gt;Doctrine extensions for PHPStan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-ergebnis-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/ergebnis/phpstan-rules&#34;&gt;Additional rules for PHPstan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-exception-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/pepakriz/phpstan-exception-rules&#34;&gt;PHPStan rules for checked and unchecked exceptions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-larastan&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan&#34;&gt;Separate installation of phpstan for larastan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-phpunit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-phpunit&#34;&gt;PHPUnit extensions and rules for PHPStan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-strict-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-strict-rules&#34;&gt;Extra strict and opinionated rules for PHPStan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-symfony&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-symfony&#34;&gt;Symfony extension for PHPStan&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-webmozart-assert&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/phpstan/phpstan-webmozart-assert&#34;&gt;PHPStan extension for webmozart/assert&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpunit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phpunit.de/&#34;&gt;The PHP testing framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpunit-8&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phpunit.de/&#34;&gt;The PHP testing framework (8.x version)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpunit-9&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://phpunit.de/&#34;&gt;The PHP testing framework (9.x version)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/laravel/pint&#34;&gt;Opinionated PHP code style fixer for Laravel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;psalm&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://psalm.dev/&#34;&gt;Finds errors in PHP applications&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;psalm-plugin-doctrine&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/weirdan/doctrine-psalm-plugin&#34;&gt;Stubs to let Psalm understand Doctrine better&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;psalm-plugin-phpunit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/psalm/psalm-plugin-phpunit&#34;&gt;Psalm plugin for PHPUnit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;psalm-plugin-symfony&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/psalm/psalm-plugin-symfony&#34;&gt;Psalm Plugin for Symfony&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;psecio-parse&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/psecio/parse&#34;&gt;Scans code for potential security-related issues&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rector&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/rectorphp/rector&#34;&gt;Tool for instant code upgrades and refactoring&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;roave-backward-compatibility-check&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Roave/BackwardCompatibilityCheck&#34;&gt;Tool to compare two revisions of a class API to check for BC breaks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;simple-phpunit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://symfony.com/doc/current/components/phpunit_bridge.html&#34;&gt;Provides utilities to report legacy tests and usage of deprecated code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twig-lint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/asm89/twig-lint&#34;&gt;Standalone cli twig 1.X linter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twig-linter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sserbin/twig-linter&#34;&gt;Standalone cli twig 3.X linter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;twigcs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/friendsoftwig/twigcs&#34;&gt;The missing checkstyle for twig!&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yaml-lint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/j13k/yaml-lint&#34;&gt;Compact command line utility for checking YAML file syntax&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;More tools&lt;/h2&gt; &#xA;&lt;p&gt;Some tools are not included in the docker image, to use them refer to their documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;exakat - &lt;a href=&#34;https://www.exakat.io&#34;&gt;a real time PHP static analyser&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Removed tools&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Summary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;analyze&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Qafoo/QualityAnalyzer&#34;&gt;Visualizes metrics and source code&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;box-legacy&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://box-project.github.io/box2/&#34;&gt;Legacy version of box&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;composer-normalize&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/localheinz/composer-normalize&#34;&gt;Composer plugin to normalize composer.json files&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;design-pattern&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/Halleck45/DesignPatternDetector&#34;&gt;Detects design patterns&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;parallel-lint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/JakubOnderka/PHP-Parallel-Lint&#34;&gt;Checks PHP file syntax&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php-formatter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/mmoreram/php-formatter&#34;&gt;Custom coding standards fixer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpcf&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://wapmorgan.github.io/PhpCodeFixer/&#34;&gt;Finds usage of deprecated features&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpdoc-to-typehint&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/dunglas/phpdoc-to-typehint&#34;&gt;Automatically adds type hints and return types based on PHPDocs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpstan-localheinz-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/localheinz/phpstan-rules&#34;&gt;Additional rules for PHPstan&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;security-checker&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/sensiolabs/security-checker&#34;&gt;Checks composer dependencies for known security vulnerabilities&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;testability&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/edsonmedina/php_testability&#34;&gt;Analyses and reports testability issues of a php codebase&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Running tools&lt;/h2&gt; &#xA;&lt;p&gt;Pull the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull jakzal/phpqa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default command will list available tools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm jakzal/phpqa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the selected tool inside the container, you&#39;ll need to mount the project directory on the container with &lt;code&gt;-v &#34;$(pwd):/project&#34;&lt;/code&gt;. Some tools like to write to the &lt;code&gt;/tmp&lt;/code&gt; directory (like PHPStan, or Behat in some cases), therefore it&#39;s often useful to share it between docker runs, i.e. with &lt;code&gt;-v &#34;$(pwd)/tmp-phpqa:/tmp&#34;&lt;/code&gt;. If you want to be able to interrupt the selected tool if it takes too much time to complete, you can use the &lt;code&gt;--init&lt;/code&gt; option. Please refer to the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/run/&#34;&gt;docker run documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --init -it --rm -v &#34;$(pwd):/project&#34; -v &#34;$(pwd)/tmp-phpqa:/tmp&#34; -w /project jakzal/phpqa phpstan analyse src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You might want to tweak this command to your needs and create an alias for convenience:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias phpqa=&#39;docker run --init -it --rm -v &#34;$(pwd):/project&#34; -v &#34;$(pwd)/tmp-phpqa:/tmp&#34; -w /project jakzal/phpqa:alpine&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add it to your &lt;code&gt;~/.bashrc&lt;/code&gt; so it&#39;s defined every time you start a new terminal session.&lt;/p&gt; &#xA;&lt;p&gt;Now the command becomes a lot simpler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;phpqa phpstan analyse src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/jakzal/phpqa.git&#xA;cd phpqa&#xA;make build-debian&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the alpine version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make build-alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cookbook&lt;/h2&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/jakzal/phpqa/master/docs/cookbook/README.md&#34;&gt;cookbook&lt;/a&gt; for further tips &amp;amp; tricks.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/jakzal/phpqa/master/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; to learn about contributing to this project. Please note that this project is released with a &lt;a href=&#34;https://raw.githubusercontent.com/jakzal/phpqa/master/CODE_OF_CONDUCT.md&#34;&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eitsupi/devcontainer-try-r</title>
    <updated>2023-09-10T01:30:22Z</updated>
    <id>tag:github.com,2023-09-10:/eitsupi/devcontainer-try-r</id>
    <link href="https://github.com/eitsupi/devcontainer-try-r" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains some example Dev Container definitions for R and can be run on GitHub Codespaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: R&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains some example Dev Container definitions for R and can be run on GitHub Codespaces (click on the badges!).&lt;/p&gt; &#xA;&lt;h2&gt;Dev Container Definitions&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eitsupi/devcontainer-try-r/main/.devcontainer/example-rig-rstudio&#34;&gt;Combination of r-rig and rstudio-server&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/eitsupi/devcontainer-try-r?devcontainer_path=.devcontainer%2Fexample-rig-rstudio%2Fdevcontainer.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-example--rig--rstudio-blue?logo=github&#34; alt=&#34;Open Combination of r-rig and rstudio-server in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is configured to install &lt;a href=&#34;https://github.com/rocker-org/devcontainer-features/tree/main/src/r-rig&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer-features/r-rig&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/rocker-org/devcontainer-features/tree/main/src/rstudio-server&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer-features/rstudio-server&lt;/code&gt;&lt;/a&gt; on top of &lt;a href=&#34;https://github.com/devcontainers/images/tree/main/src/base-ubuntu&#34;&gt;&lt;code&gt;mcr.microsoft.com/devcontainers/base:ubuntu&lt;/code&gt;&lt;/a&gt;. Initially, the latest release version of R is installed, but &lt;a href=&#34;https://github.com/r-lib/rig&#34;&gt;&lt;code&gt;rig&lt;/code&gt;&lt;/a&gt; makes it easy to install a different version of R and switch between these.&lt;/p&gt; &#xA;&lt;p&gt;RStudio Server is configured to run immediately after container startup.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eitsupi/devcontainer-try-r/main/.devcontainer/template-r-ver&#34;&gt;R (rocker/r-ver base) template&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/eitsupi/devcontainer-try-r?devcontainer_path=.devcontainer%2Ftemplate-r-ver%2Fdevcontainer.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-template--r--ver-blue?logo=github&#34; alt=&#34;Open R (rocker/r-ver base) in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple template that runs a Docker image &lt;a href=&#34;https://rocker-project.org/images/devcontainer/images.html&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer/r-ver&lt;/code&gt;&lt;/a&gt; configured to be used as a Dev Container. Many R packages are already installed.&lt;/p&gt; &#xA;&lt;p&gt;It is just a download of the Dev Container Template &lt;a href=&#34;https://github.com/rocker-org/devcontainer-templates/tree/main/src/r-ver&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer-templates/r-ver&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eitsupi/devcontainer-try-r/main/.devcontainer/template-r2u&#34;&gt;R (r2u and bspm configured) template&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codespaces.new/eitsupi/devcontainer-try-r?devcontainer_path=.devcontainer%2Ftemplate-r2u%2Fdevcontainer.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Open-template--r2u-blue?logo=github&#34; alt=&#34;Open R (r2u and bspm configured) in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is configured to install &lt;a href=&#34;https://github.com/rocker-org/devcontainer-features/tree/main/src/r-apt&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer-features/r-apt&lt;/code&gt;&lt;/a&gt; on top of &lt;a href=&#34;https://github.com/devcontainers/images/tree/main/src/base-ubuntu&#34;&gt;&lt;code&gt;mcr.microsoft.com/devcontainers/base:ubuntu&lt;/code&gt;&lt;/a&gt;. Installing many R packages quickly thanks to &lt;a href=&#34;https://eddelbuettel.github.io/r2u/&#34;&gt;&lt;code&gt;r2u&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is just a download of the Dev Container Template &lt;a href=&#34;https://github.com/rocker-org/devcontainer-templates/tree/main/src/r2u&#34;&gt;&lt;code&gt;ghcr.io/rocker-org/devcontainer-templates/r2u&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>