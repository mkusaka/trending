<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-03T01:29:43Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openwrt/docker</title>
    <updated>2024-09-03T01:29:43Z</updated>
    <id>tag:github.com,2024-09-03:/openwrt/docker</id>
    <link href="https://github.com/openwrt/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker containers of the ImageBuilder and SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenWrt Docker repository&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openwrt/docker/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/openwrt/docker.svg?style=flat-square&#34; alt=&#34;GPL-2.0-only License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openwrt/docker/actions/workflows/containers.yml&#34;&gt;&lt;img src=&#34;https://github.com/openwrt/docker/actions/workflows/containers.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/u/openwrt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docker--hub-openwrt-blue.svg?style=flat-square&#34; alt=&#34;Docker Hub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains files to create OpenWrt containers. While mostly used for our CI you may use the scripts to build containers on your own.&lt;/p&gt; &#xA;&lt;p&gt;Available containers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sdk&lt;/code&gt; compile OpenWrt packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;imagebuilder&lt;/code&gt; create firmware images&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rootfs&lt;/code&gt; test software inside an OpenWrt runtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All containers are mirrored to the follwing three registries under &lt;code&gt;openwrt&lt;/code&gt; account:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;docker.io (&lt;a href=&#34;https://hub.docker.com/r/openwrt/sdk&#34;&gt;sdk&lt;/a&gt; | &lt;a href=&#34;https://hub.docker.com/r/openwrt/imagebuilder&#34;&gt;imagebuilder&lt;/a&gt; | &lt;a href=&#34;https://hub.docker.com/r/openwrt/rootfs&#34;&gt;rootfs&lt;/a&gt;) &lt;code&gt;*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ghcr.io (&lt;a href=&#34;https://github.com/openwrt/docker-openwrt/pkgs/container/sdk&#34;&gt;sdk&lt;/a&gt; | &lt;a href=&#34;https://github.com/openwrt/docker-openwrt/pkgs/container/imagebuilder&#34;&gt;imagebuilder&lt;/a&gt; | &lt;a href=&#34;https://github.com/openwrt/docker-openwrt/pkgs/container/rootfs&#34;&gt;rootfs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;quay.io (&lt;a href=&#34;https://quay.io/repository/openwrt/sdk&#34;&gt;sdk&lt;/a&gt; | &lt;a href=&#34;https://quay.io/repository/openwrt/imagebuilder&#34;&gt;imagebuilder&lt;/a&gt; | &lt;a href=&#34;https://quay.io/repository/openwrt/rootfs&#34;&gt;rootfs&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;*&lt;/code&gt; We have switched our account from &lt;code&gt;openwrtorg&lt;/code&gt; to &lt;code&gt;openwrt&lt;/code&gt; on docker.io&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Find more details on the container types below&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;sdk&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Contains the &lt;a href=&#34;https://openwrt.org/docs/guide-developer/toolchain/using_the_sdk&#34;&gt;OpenWrt SDK&lt;/a&gt; based on the same container we use for our &lt;a href=&#34;https://buildbot.org&#34;&gt;Buildbot&lt;/a&gt; infrastructure. This can be useful when building packages on macOS, Windows or via CI.&lt;/p&gt; &#xA;&lt;h3&gt;SDK Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v &#34;$(pwd)&#34;/bin/:/builder/bin -it openwrt/sdk&#xA;# inside the Docker container&#xA;./scripts/feeds update packages&#xA;make defconfig&#xA;./scripts/feeds install tmate&#xA;make package/tmate/{clean,compile} -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enjoy a local OpenWrt SDK container building the &lt;code&gt;tmate&lt;/code&gt; package and but the binary in hosts &lt;code&gt;./bin&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;SDK Tags&lt;/h3&gt; &#xA;&lt;p&gt;All currently available SDKs via tags in the following format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;target&amp;gt;-&amp;lt;subtarget&amp;gt;[-&amp;lt;branch|tag|version&amp;gt;]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;branch|tag|version&lt;/code&gt; can be something like &lt;code&gt;openwrt-22.03&lt;/code&gt; (branch), &lt;code&gt;v22.03.4&lt;/code&gt; (tag) or &lt;code&gt;21.02.3&lt;/code&gt; (version). To use daily builds use either &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;SNAPSHOT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;imagebuilder&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Contains the &lt;a href=&#34;https://openwrt.org/docs/guide-user/additional-software/imagebuilder&#34;&gt;OpenWrt ImageBuilder&lt;/a&gt; based on the same container we use for our &lt;a href=&#34;https://raw.githubusercontent.com/openwrt/docker/main/buildbot.org&#34;&gt;buildbot&lt;/a&gt; infrastructure. This can be useful when creating images on macOS, Windows or via CI.&lt;/p&gt; &#xA;&lt;h3&gt;ImageBuilder Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v &#34;$(pwd)&#34;/bin/:/builder/bin -it openwrt/imagebuilder&#xA;# inside the Docker container&#xA;make image PROFILE=generic PACKAGES=tmate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enjoy a local OpenWrt ImageBuilder container building an image for x86/64 and store the binary in hosts &lt;code&gt;./bin&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;ImageBuilder Tags&lt;/h3&gt; &#xA;&lt;p&gt;All currently available ImageBuilders via tags in the following format:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;target&amp;gt;-&amp;lt;subtarget&amp;gt;[-&amp;lt;branch|tag|version&amp;gt;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;arch&amp;gt;[-&amp;lt;branch|tag|version&amp;gt;]&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;branch|tag|version&lt;/code&gt; can be something like &lt;code&gt;openwrt-22.03&lt;/code&gt; (branch), &lt;code&gt;v22.03.4&lt;/code&gt; (tag) or &lt;code&gt;21.02.3&lt;/code&gt; (version). To use daily builds use either &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;SNAPSHOT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;rootfs&lt;/code&gt; (experimental)&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The OpenWrt runtime uses multiple active services to work, it&#39;s not really suited as a container. This &lt;code&gt;rootfs&lt;/code&gt; should only be used for special cases like CI testing.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;An unpackaged version of OpenWrt&#39;s rootfs for different architectures. The &lt;code&gt;./rootfs&lt;/code&gt; folder requires slight modifications to work within Docker, additional files for the rootfs should be added there before building.&lt;/p&gt; &#xA;&lt;h3&gt;Rootfs Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -it openwrt/rootfs&#xA;# inside the Docker container&#xA;mkdir /var/lock/&#xA;opkg update&#xA;opkg install tmate&#xA;tmate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enjoy a local OpenWrt container running the x86/64 architecture with internet access. Once closed the container is removed.&lt;/p&gt; &#xA;&lt;h3&gt;Rootfs Tags&lt;/h3&gt; &#xA;&lt;p&gt;&#34;|||armvirt/32|armvirt/64|malta/be|mvebu/cortexa9&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;x86/64&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;x86/generic&lt;/code&gt; or &lt;code&gt;i386_pentium4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;x86/geode&lt;/code&gt; or &lt;code&gt;i386_pentium-mmx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;armvirt/32&lt;/code&gt; or &lt;code&gt;arm_cortex-a15_neon-vfpv4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;armvirt/64&lt;/code&gt; or &lt;code&gt;aarch64_cortex-a53&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;malta/be&lt;/code&gt; or &lt;code&gt;mips_24kc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mvebu/cortexa9&lt;/code&gt; or &lt;code&gt;arm_cortex-a9_vfpv3-d16&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Your Own&lt;/h2&gt; &#xA;&lt;p&gt;If you wan to create your own container you can use the &lt;code&gt;Dockerfile&lt;/code&gt;. You can set the following build arguments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TARGET&lt;/code&gt; - the target to build for (e.g. &lt;code&gt;x86/64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOWNLOAD_FILE&lt;/code&gt; - the file to download (e.g. &lt;code&gt;imagebuilder-.*x86_64.tar.xz&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FILE_HOST&lt;/code&gt; - the host to download the ImageBuilder/SDK/rootfs from (e.g. &lt;code&gt;downloads.openwrt.org&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;VERSION_PATH&lt;/code&gt; - the path to the ImageBuilder/SDK/rootfs (e.g. &lt;code&gt;snapshots&lt;/code&gt; or &lt;code&gt;releases/21.02.3&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example ImageBuilder&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you plan to use your own server please add your own GPG key to the &lt;code&gt;./keys/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build \&#xA;    --build-arg TARGET=x86/64 \&#xA;    --build-arg DOWNLOAD_FILE=&#34;imagebuilder-.*x86_64.tar.xz&#34; \&#xA;    --build-arg FILE_HOST=downloads.openwrt.org \&#xA;    --build-arg VERSION_PATH=snapshots \&#xA;    -t openwrt/x86_64 .&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>