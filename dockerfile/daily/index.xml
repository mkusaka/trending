<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-18T01:31:22Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>drum-grammer/docker-pro-2312</title>
    <updated>2023-11-18T01:31:22Z</updated>
    <id>tag:github.com,2023-11-18:/drum-grammer/docker-pro-2312</id>
    <link href="https://github.com/drum-grammer/docker-pro-2312" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker : 나만의 도커 이미지 만들기 부터, 클라우드 배포까지!&lt;/h1&gt; &#xA;&lt;p&gt;8월 원티드 프리 온보딩 챌린지 - docker 뽀개기&lt;/p&gt; &#xA;&lt;h2&gt;I. 사전 미션하는 법&lt;/h2&gt; &#xA;&lt;h3&gt;방법 1&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;해당 repository를 fork 하세요.&lt;/li&gt; &#xA; &lt;li&gt;아래 사전 미션 내용을 보고 답안을 마크다운 형식으로 작성하시고, &lt;code&gt;./mission/{nickName}&lt;/code&gt; 디렉토리 저장해주세요.&lt;/li&gt; &#xA; &lt;li&gt;로컬에서 작업한 커밋을 fork한 repository에 push 하세요.&lt;/li&gt; &#xA; &lt;li&gt;Pull Request를 생성하여, 사전 미션을 제출해주세요.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;방법 2&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;해당 repository를 clone 하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:drum-grammer/docker-pro-wanted.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;별도의 브랜치를 생성하세요:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout -b my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;아래 사전 미션 내용을 보고 답안을 마크다운 형식으로 작성하시고, &lt;code&gt;./mission/{nickName}&lt;/code&gt; 디렉토리 저장해주세요.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;해당 브랜치를 푸쉬해주세요.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;해당 레파지토리에 직접 푸쉬할 권한은 &lt;a href=&#34;https://github.com/drum-grammer/docker-pro-2312/issues/1&#34;&gt;Issues&lt;/a&gt;에 댓글로 아이디 남겨주시면 권한 부여해드립니다. 🙌&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push -u origin my-branch-xx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Pull Request를 생성하여, 사전 미션을 제출해주세요.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;[공통] PR 생성 시, PR 화면 우측의 &lt;code&gt;Reviews&lt;/code&gt;, &lt;code&gt;Assignees&lt;/code&gt;, &lt;code&gt;Labels&lt;/code&gt;를 아래와 같이 등록해주세요&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reviews: drum-grammer&lt;/li&gt; &#xA; &lt;li&gt;Assignees: 본인 계정&lt;/li&gt; &#xA; &lt;li&gt;Labels: 사전 미션 과제&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/drum-grammer/docker-pro-2312/assets/48014144/2b580a8b-8f6e-4448-9ea0-083d8544100c&#34; alt=&#34;PR 이미지&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;II. 사전 미션&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;컨테이너 기술이란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커란 무엇입니까? (100자 이내로 요약)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;도커 파일, 도커 이미지, 도커 컨테이너의 개념은 무엇이고, 서로 어떤 관계입니까?&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[실전 미션] 도커 설치하기 (참조: &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;도커 공식 설치 페이지&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;아래 &lt;code&gt;도커 설치부터 실행 튜토리얼&lt;/code&gt;을 참조하여 도커를 설치하고, 도커 컨테이너를 실행한 화면을 캡쳐해서 Pull Request에 올리세요.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;III. 도커 설치부터 실행 튜토리얼&lt;/h2&gt; &#xA;&lt;h3&gt;도커 설치&lt;/h3&gt; &#xA;&lt;h4&gt;1. 도커 공식 웹사이트에서 &#34;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Get Started&lt;/a&gt;&#34;를 클릭합니다.&lt;/h4&gt; &#xA;&lt;h4&gt;2. OS에 맞는 설치 파일을 다운로드 받습니다.&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS의 경우 &#34;Download for Mac&#34;을 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;Window 일 경우 &#34;Download for Windows&#34;를 클릭합니다.&lt;/li&gt; &#xA; &lt;li&gt;다운로드한 설치 파일을 실행합니다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;도커 컨테이너 실행 시키기&lt;/h3&gt; &#xA;&lt;h4&gt;1. &lt;code&gt;나의 사전 미션 폴더&lt;/code&gt;를 만들고 해당 폴더로 이동합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd path/to/docker-pro-wanted/mission&#xA;mkdir my-name&#xA;cd my-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. &#34;Hello, World!&#34;를 출력하는 도커 파일을 만듭니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;vim Dockerfile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;i&lt;/code&gt;를 눌러 편집모드로 전환 후 아래 내용을 작성합니다:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Dockerfile&#34;&gt;FROM alpine:latest&#xA;CMD [&#34;echo&#34;, &#34;Hello, World&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt;를 눌러 명령모드로 전환 후, &lt;code&gt;:wq&lt;/code&gt; 입력, &lt;code&gt;enter&lt;/code&gt;키를 눌러 &lt;code&gt;Dockerfile&lt;/code&gt;을 생성합니다.&lt;/p&gt; &#xA;&lt;h4&gt;3. 도커 파일로 도커 이미지를 빌드합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t hello-world .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(위 명령어의 의미는 &#34;현재 디렉토리에서 &lt;code&gt;Dockerfile&lt;/code&gt;을 읽어 도커 이미지를 만들고, 해당 이미지에 &lt;code&gt;hello-world&lt;/code&gt;라는 &lt;code&gt;tag&lt;/code&gt; 를 붙혀라&#34; 입니다.)&lt;/p&gt; &#xA;&lt;h4&gt;4. 빌드한 도커 이미지를 실행합니다.&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run hello-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;이 명령어는 hello-world라는 이름의 도커 이미지를 실행시켜 &#34;Hello, World!&#34;를 출력합니다.&lt;/p&gt; &#xA;&lt;h2&gt;IV. 도커 커맨드 라인 명령어 정리&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/run/&#34;&gt;공식 문서&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/drum-grammer/docker-pro-2312/main/lecture/1st/cli.md&#34;&gt;cheat sheet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>