<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-10T01:27:57Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jfloff/alpine-python</title>
    <updated>2023-10-10T01:27:57Z</updated>
    <id>tag:github.com,2023-10-10:/jfloff/alpine-python</id>
    <link href="https://github.com/jfloff/alpine-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A small, more complete, Python Docker image based on Alpine Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;alpine-python&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jfloff/alpine-python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jfloff/alpine-python.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jfloff/alpine-python/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jfloff/alpine-python.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/jfloff/alpine-python&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jfloff/alpine-python.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A small Python Docker image based on &lt;a href=&#34;http://alpinelinux.org/&#34;&gt;Alpine Linux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- MDTOC maxdepth:6 firsth1:0 numbering:0 flatten:0 bullets:1 updateOnSave:1 --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#alpine-python&#34;&gt;alpine-python&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#supported-tags&#34;&gt;Supported tags&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#why&#34;&gt;Why?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#details&#34;&gt;Details&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#usage-of-onbuild-images&#34;&gt;Usage of &lt;code&gt;onbuild&lt;/code&gt; images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#usage-of-slim-images&#34;&gt;Usage of &lt;code&gt;slim&lt;/code&gt; images&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#via-docker-run&#34;&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#pip-dependencies&#34;&gt;Pip Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#run-time-dependencies&#34;&gt;Run-Time Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#build-time-dependencies&#34;&gt;Build-Time Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#creating-images&#34;&gt;Creating Images&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#debugging&#34;&gt;Debugging&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#additional-arguments&#34;&gt;Additional Arguments&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#ecosystem&#34;&gt;Ecosystem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jfloff/alpine-python/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /MDTOC --&gt; &#xA;&lt;h2&gt;Supported tags&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;2.7&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/2.7/Dockerfile&#34;&gt;2.7/Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;2.7-onbuild&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/2.7-onbuild/Dockerfile&#34;&gt;2.7-onbuild/Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;2.7-slim&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/2.7-slim/Dockerfile&#34;&gt;2.7-slim/Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.6&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.6/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.6-onbuild&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.6-onbuild/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.6-slim&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.6-slim/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.7&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.7/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.7-onbuild&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.7-onbuild/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.7-slim&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.7-slim/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.8&lt;/code&gt; &lt;code&gt;latest&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.8/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.8-onbuild&lt;/code&gt; &lt;code&gt;latest-onbuild&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.8-onbuild/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;3.8-slim&lt;/code&gt; &lt;code&gt;latest-slim&lt;/code&gt; (&lt;a href=&#34;https://github.com/jfloff/alpine-python/raw/master/3.8-slim/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTES:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;onbuild&lt;/code&gt; images install the &lt;code&gt;requirements.txt&lt;/code&gt; of your project from the get go. This allows you to cache your requirements right in the build. &lt;em&gt;Make sure you are in the same directory of your &lt;code&gt;requirements.txt&lt;/code&gt; file&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;The default docker python images are too &lt;a href=&#34;https://github.com/docker-library/python/issues/45&#34;&gt;big&lt;/a&gt;, much larger than they need to be. Hence I built this simple image based on &lt;a href=&#34;https://github.com/gliderlabs/docker-alpine&#34;&gt;docker-alpine&lt;/a&gt;, that has everything needed for the most common python projects - including &lt;code&gt;python-dev&lt;/code&gt; (which is not common in most minimal alpine python packages).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;REPOSITORY&lt;/th&gt; &#xA;   &lt;th&gt;TAG&lt;/th&gt; &#xA;   &lt;th&gt;SIZE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;2.7-slim&lt;/td&gt; &#xA;   &lt;td&gt;60MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;2.7-slim&lt;/td&gt; &#xA;   &lt;td&gt;120MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;2.7-alpine&lt;/td&gt; &#xA;   &lt;td&gt;61.2MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;   &lt;td&gt;235MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;   &lt;td&gt;912MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;3.6-slim&lt;/td&gt; &#xA;   &lt;td&gt;76.3MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.6-slim&lt;/td&gt; &#xA;   &lt;td&gt;138MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.6-alpine&lt;/td&gt; &#xA;   &lt;td&gt;79MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;3.6&lt;/td&gt; &#xA;   &lt;td&gt;252MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.6&lt;/td&gt; &#xA;   &lt;td&gt;922MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;3.7-slim&lt;/td&gt; &#xA;   &lt;td&gt;80.4MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.7-slim&lt;/td&gt; &#xA;   &lt;td&gt;86.7MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.7-alpine&lt;/td&gt; &#xA;   &lt;td&gt;143MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jfloff/alpine-python&lt;/td&gt; &#xA;   &lt;td&gt;3.7&lt;/td&gt; &#xA;   &lt;td&gt;256MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;td&gt;3.7&lt;/td&gt; &#xA;   &lt;td&gt;927MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Perhaps this could be even smaller, but I&#39;m not an Alpine guru. &lt;strong&gt;Feel free to post a PR.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installs &lt;code&gt;build-base&lt;/code&gt; and &lt;code&gt;python-dev&lt;/code&gt;, allowing the use of more advanced packages such as &lt;code&gt;gevent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Installs &lt;code&gt;bash&lt;/code&gt; allowing interaction with the container&lt;/li&gt; &#xA; &lt;li&gt;Just like the main &lt;code&gt;python&lt;/code&gt; docker image, it creates useful symlinks that are expected to exist, e.g. &lt;code&gt;python3&lt;/code&gt; &amp;gt; &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;pip2.7&lt;/code&gt; &amp;gt; &lt;code&gt;pip&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;testing&lt;/code&gt; and &lt;code&gt;community&lt;/code&gt; repositories to Alpine&#39;s &lt;code&gt;/etc/apk/repositories&lt;/code&gt; file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This image runs &lt;code&gt;python&lt;/code&gt; command on &lt;code&gt;docker run&lt;/code&gt;. You can either specify your own command, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python python hello.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also access &lt;code&gt;bash&lt;/code&gt; inside the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage of &lt;code&gt;onbuild&lt;/code&gt; images&lt;/h2&gt; &#xA;&lt;p&gt;These images can be used to bake your dependencies into an image by extending the plain python images. To do so, create a custom &lt;code&gt;Dockerfile&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM jfloff/alpine-python:3.6-onbuild&#xA;&#xA;# for a flask server&#xA;EXPOSE 5000&#xA;CMD python manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to build that &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build --rm=true -t jfloff/app .&#xA;&#xA;docker run --rm -t jfloff/app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Personally, I build an extended &lt;code&gt;Dockerfile&lt;/code&gt; version (like shown above), and mount my specific application inside the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v &#34;$(pwd)&#34;:/home/app -w /home/app -p 5000:5000 -ti jfloff/app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage of &lt;code&gt;slim&lt;/code&gt; images&lt;/h2&gt; &#xA;&lt;p&gt;These images are very small to download, and can install requirements at run-time via flags. The install only happens the first time the container is run, and dependencies can be baked in (see Creating Images).&lt;/p&gt; &#xA;&lt;h4&gt;Via &lt;code&gt;docker run&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;These images can be run in multiple ways. With no arguments, it will run &lt;code&gt;python&lt;/code&gt; interactively:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python:2.7-slim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you specify a command, they will run that:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python:2.7-slim python hello.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Pip Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Pip dependencies can be installed by the &lt;code&gt;-p&lt;/code&gt; switch, or a &lt;code&gt;requirements.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If the file is at &lt;code&gt;/requirements.txt&lt;/code&gt; it will be automatically read for dependencies. If not, use the &lt;code&gt;-P&lt;/code&gt; or &lt;code&gt;-r&lt;/code&gt; switch to specify a file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# This runs interactive Python with &#39;simplejson&#39; and &#39;requests&#39; installed&#xA;docker run --rm -ti jfloff/alpine-python:2.7-slim -p simplejson -p requests&#xA;&#xA;# Don&#39;t forget to add &#39;--&#39; after your dependencies to run a custom command:&#xA;docker run --rm -ti jfloff/alpine-python:2.7-slim -p simplejson -p requests -- python hello.py&#xA;&#xA;# This accomplishes the same thing by mounting a requirements.txt in:&#xA;echo &#39;simplejson&#39; &amp;gt; requirements.txt&#xA;echo &#39;requests&#39; &amp;gt; requirements.txt&#xA;docker run --rm -ti \&#xA;  -v requirements.txt:/requirements.txt \&#xA;  jfloff/alpine-python:2.7-slim python hello.py&#xA;&#xA;# This does too, but with the file somewhere else:&#xA;echo &#39;simplejson requests&#39; &amp;gt; myapp/requirements.txt&#xA;docker run --rm -ti \&#xA;  -v myapp:/usr/src/app \&#xA;  jfloff/alpine-python:2.7-slim \&#xA;    -r /usr/src/app/requirements.txt \&#xA;    -- python /usr/src/app/hello.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run-Time Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Alpine package dependencies can be installed by the &lt;code&gt;-a&lt;/code&gt; switch, or an &lt;code&gt;apk-requirements.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;If the file is at &lt;code&gt;/apk-requirements.txt&lt;/code&gt; it will be automatically read for dependencies. If not, use the &lt;code&gt;-A&lt;/code&gt; switch to specify a file.&lt;/p&gt; &#xA;&lt;p&gt;You can also try installing some Python modules via this method, but it is possible for Pip to interfere if it detects a version problem.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Unknown why you&#39;d need to do this, but you can!&#xA;docker run --rm -ti jfloff/alpine-python:2.7-slim -a openssl -- python hello.py&#xA;&#xA;# This installs libxml2 module faster than via Pip, but then Pip reinstalls it because Ajenti&#39;s dependencies make it think it&#39;s the wrong version.&#xA;docker run --rm -ti jfloff/alpine-python:2.7-slim -a py-libxml2 -p ajenti&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build-Time Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Build-time Alpine package dependencies (such as compile headers) can be installed by the &lt;code&gt;-b&lt;/code&gt; switch, or a &lt;code&gt;build-requirements.txt&lt;/code&gt; file. They will be removed after the dependencies are installed to save space.&lt;/p&gt; &#xA;&lt;p&gt;If the file is at &lt;code&gt;/build-requirements.txt&lt;/code&gt; it will be automatically read for dependencies. If not, use the &lt;code&gt;-B&lt;/code&gt; switch to specify a file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;build-base&lt;/code&gt;, &lt;code&gt;linux-headers&lt;/code&gt; and &lt;code&gt;python-dev&lt;/code&gt; are always build dependencies, you don&#39;t need to include them.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python:2.7-slim \&#xA;  -p gevent \&#xA;  -p libxml2 \&#xA;  -b libxslt-dev \&#xA;  -b libxml-dev \&#xA;  -- python hello.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating Images&lt;/h4&gt; &#xA;&lt;p&gt;Similar to the onbuild images, dependencies can be baked into a new image by using a custom &lt;code&gt;Dockerfile&lt;/code&gt;, e.g:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM jfloff/alpine-python:2.7-slim&#xA;RUN /entrypoint.sh \&#xA;  -p ajenti-panel \&#xA;  -p ajenti.plugin.dashboard \&#xA;  -p ajenti.plugin.settings \&#xA;  -p ajenti.plugin.plugins \&#xA;  -b libxml2-dev \&#xA;  -b libxslt-dev \&#xA;  -b libffi-dev \&#xA;  -b openssl-dev \&#xA;&amp;amp;&amp;amp; echo&#xA;CMD [&#34;ajenti-panel&#34;]&#xA;# you won&#39;t be able to add more dependencies later though-- see &#39;Debugging&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;code&gt;/entrypoint.sh&lt;/code&gt; script that manages dependencies in the slim images creates an empty file, &lt;code&gt;/requirements.installed&lt;/code&gt;, telling the script not to install any dependencies after the container&#39;s first run. Removing this file will allow the script to work again if it is needed.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;-x&lt;/code&gt; flag to see everything the &lt;code&gt;/entrypoint.sh&lt;/code&gt; script is doing.&lt;/p&gt; &#xA;&lt;p&gt;You can also access &lt;code&gt;bash&lt;/code&gt; inside the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -ti jfloff/alpine-python:2.7-slim bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Additional Arguments&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;-q&lt;/code&gt;: silences output from &lt;code&gt;/entrypoint.sh&lt;/code&gt; &lt;code&gt;-x&lt;/code&gt;: turns on Bash debugging, making the output very verbose.&lt;/p&gt; &#xA;&lt;h2&gt;Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;These are some of the images that use &lt;code&gt;jfloff/alpine-python&lt;/code&gt; as base image. &lt;em&gt;If you have another image that uses this as base image, please submit an issue or PR for it to be added. Image has to be published on Docker Hub.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jfloff/docker-alscipy&#34;&gt;jfloff/alscipy&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;https://hub.docker.com/r/jfloff/alscipy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jfloff/alscipy.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jfloff/alscipy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jfloff/alscipy.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; : image with common packages for Science in Alpine Python.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jfloff/docker-pywfm&#34;&gt;jfloff/pywfm&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;https://hub.docker.com/r/jfloff/pywfm/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/jfloff/pywfm.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/jfloff/pywfm/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/jfloff/pywfm.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; : image from the python wrapper for Steffen Rendle&#39;s factorization machines library libFM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bismuthfoundation/Bismuth-Docker&#34;&gt;bismuthfoundation/Bismuth-Docker&lt;/a&gt;&lt;/strong&gt; &lt;a href=&#34;https://hub.docker.com/r/eggdrasyl/bismuth-node/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/stars/eggdrasyl/bismuth-node.svg?sanitize=true&#34; alt=&#34;Docker Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/eggdrasyl/bismuth-node/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/eggdrasyl/bismuth-node.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; : node and associated services, from scratch crypto-currency with Python codebase.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute with whatever you feel like this image is missing. There is also some changes that happen often like, updating Alpine or Python versions. Do not forget that this repo folders mirror &lt;strong&gt;Python&lt;/strong&gt; version and &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; Alpine versions.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository, unless otherwise noted, is MIT licensed. See the &lt;code&gt;LICENSE&lt;/code&gt; file in this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>atmlvs/scripts</title>
    <updated>2023-10-10T01:27:57Z</updated>
    <id>tag:github.com,2023-10-10:/atmlvs/scripts</id>
    <link href="https://github.com/atmlvs/scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;untils in general task&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;p&gt;Untils in general tasks.&lt;/p&gt; &#xA;&lt;p&gt;Description:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;create target directories using YEAR.&lt;/li&gt; &#xA; &lt;li&gt;read date time from EXIF as part of photo name.&lt;/li&gt; &#xA; &lt;li&gt;use system creation time for photos with limit EXIF.&lt;/li&gt; &#xA; &lt;li&gt;copy photos from src directory to corresponding target directories.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;tested on Mac OS X 10.8.2/Python 2.7.3&lt;/p&gt;</summary>
  </entry>
</feed>