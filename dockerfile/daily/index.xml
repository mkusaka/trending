<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-10T01:30:32Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NREL/docker-openstudio</title>
    <updated>2025-02-10T01:30:32Z</updated>
    <id>tag:github.com,2025-02-10:/NREL/docker-openstudio</id>
    <link href="https://github.com/NREL/docker-openstudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for managing the builds of OpenStudio Docker images.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenStudio&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NREL/docker-openstudio/actions/workflows/docker-openstudio.yml&#34;&gt;&lt;img src=&#34;https://github.com/NREL/docker-openstudio/actions/workflows/docker-openstudio.yml/badge.svg?sanitize=true&#34; alt=&#34;openstudio-docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo provides a container for OpenStudio as well as several dependencies, including Ruby 2.x, Bundler, build-essentials and various development libraries for gem support.&lt;/p&gt; &#xA;&lt;p&gt;At the moment, there is only one target container for this project, however, we are working on containers for a slim version and a version compatible with &lt;a href=&#34;https://singularity.lbl.gov&#34;&gt;Singularity&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Tags&lt;/h2&gt; &#xA;&lt;p&gt;Below is a table of the various docker tags and their meanings as seen on &lt;a href=&#34;https://hub.docker.com/r/nrel/openstudio/tags/&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x.y.z&lt;/td&gt; &#xA;   &lt;td&gt;Build of official OpenStudio release (recommended use)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;latest&lt;/td&gt; &#xA;   &lt;td&gt;Latest official release of OpenStudio (e.g. 2.5.1)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;develop&lt;/td&gt; &#xA;   &lt;td&gt;Release of &lt;a href=&#34;https://github.com/NREL/docker-openstudio/tree/develop&#34;&gt;develop branch&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Building OpenStudio Container&lt;/h2&gt; &#xA;&lt;p&gt;These images are automatically built in TravisCI. To trigger TravisCI for a new build do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;On develop branch update the &lt;a href=&#34;https://raw.githubusercontent.com/NREL/docker-openstudio/develop/.travis.yml&#34;&gt;.travis.yml&lt;/a&gt; with the new version of OpenStudio and SHA&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; - OPENSTUDIO_VERSION: 2.6.0&#xA; - OPENSTUDIO_SHA: e3cb91f98a&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Push changes to the feature branch, make and merge a pull request to develop&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait for CI to finish and verify new develop image is available on &lt;a href=&#34;https://hub.docker.com/r/nrel/openstudio/tags/&#34;&gt;docker hub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Test locally (if needed)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull nrel/openstudio:develop&#xA;docker run -it --rm nrel/openstudio:develop bash&#xA;irb&#xA;require &#39;openstudio&#39;&#xA;puts OpenStudio.getOpenStudioCLI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build Locally&lt;/h3&gt; &#xA;&lt;p&gt;Begin by installing the &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;docker toolkit&lt;/a&gt; version 17.03.1 or later, as described in the linked documentation. Once the toolkit is installed and activated, run the command below to build the base image with OpenStudio 2.6.1.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --target base -t openstudio-local --build-arg OPENSTUDIO_VERSION=2.6.1 --build-arg OPENSTUDIO_SHA=ab0dddde0b .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The version of OpenStudio and the SHAs are listed &lt;a href=&#34;https://github.com/NREL/OpenStudio/wiki/OpenStudio-Version-Compatibility-Matrix&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;--target&lt;/code&gt; is not passed, then the docker build will contain only the CLI.&lt;/p&gt; &#xA;&lt;h2&gt;Executing OpenStudio Container&lt;/h2&gt; &#xA;&lt;p&gt;There are two options to acquire the docker container required for execution. Both assume that the &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;docker tool-kit&lt;/a&gt; version 17.03.1 or later is installed. The first option, building the container from a GitHub checkout, is outlined above. Additionally, it is typically easiest to &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/tag/&#34;&gt;tag the resulting container&lt;/a&gt; as &lt;code&gt;nrel/openstudio:latest&lt;/code&gt;. For a more extensive discussion of the latest tag and associated best practices &lt;a href=&#34;https://medium.com/@mccode/the-misunderstood-docker-tag-latest-af3babfd6375&#34;&gt;please refer to this Medium article&lt;/a&gt;. The second option, downloading a release from DockerHub, requires determining the &lt;a href=&#34;https://hub.docker.com/r/nrel/openstudio/tags/&#34;&gt;docker-openstudio tagged release&lt;/a&gt; that is desired, and then running &lt;code&gt;docker pull nrel/openstudio:&amp;lt;tag&amp;gt;&lt;/code&gt;. As an example, to download the 2.1.1 docker-openstudio image, the command would be &lt;code&gt;docker pull nrel/openstudio:2.1.1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once the desired container is available, either through a build or pull process, the next step is to run the container. To simply access the container tagged with &#39;tag&#39;, (where tag was respectively &#39;latest&#39; or &#39;2.1.1&#39; in the above paragraph,) run &lt;code&gt;docker run -it --rm nrel/openstudio:tag /bin/bash&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To execute an OpenStudio Workflow directly from the command line requires &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#volume-shared-filesystems&#34;&gt;mounting the requisite files to the container&lt;/a&gt;, as well as invoking the &lt;a href=&#34;https://nrel.github.io/OpenStudio-user-documentation/reference/command_line_interface/&#34;&gt;OpenStudio CLI&lt;/a&gt; (command line interface.) The docker container by default executes commands in the &lt;code&gt;/var/simdata/openstudio&lt;/code&gt; directory, (this is defined in the &lt;a href=&#34;https://raw.githubusercontent.com/NREL/docker-openstudio/develop/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;.) If the desired OSW was located at &lt;code&gt;/Users/myuser/demo_os_files/example.osw&lt;/code&gt; on the host computer, the appropriate docker command to execute the OSW would be &lt;code&gt;docker run -it --rm -v=/Users/myuser/demo_os_files:/var/simdata/openstudio nrel/openstudio /usr/bin/openstudio run -w example.osw&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If gem dependencies are required as part of the CLI outside of those &lt;a href=&#34;https://github.com/NREL/OpenStudio/raw/develop/dependencies/ruby/Gemfile&#34;&gt;packed with OpenStudio&lt;/a&gt; please contact Kyle Benne, Ry Horsey, and Dan Macumber at their NREL email addresses.&lt;/p&gt; &#xA;&lt;h1&gt;Issues&lt;/h1&gt; &#xA;&lt;p&gt;Please submit issues on the project&#39;s &lt;a href=&#34;https://github.com/nrel/docker-openstudio&#34;&gt;Github&lt;/a&gt; page.&lt;/p&gt;</summary>
  </entry>
</feed>