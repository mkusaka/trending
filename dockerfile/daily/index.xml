<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-10T01:33:42Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dicksoi/H1</title>
    <updated>2022-10-10T01:33:42Z</updated>
    <id>tag:github.com,2022-10-10:/Dicksoi/H1</id>
    <link href="https://github.com/Dicksoi/H1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;由大佬开发的加密版。本人修改为vless+ws+tls。 性能至上、可扩展性空前，目标是全场景终极协议&lt;/p&gt;&lt;hr&gt;&lt;p&gt;申请Freenom域名的正确做法 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFXjm4iy26Mvv-ES?e=cCC6Wl&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFXjm4iy26Mvv-ES?e=cCC6Wl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CloudFlare Workers 被墙解决方案 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFK69rvLkNevKxyY?e=HegeOL&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFK69rvLkNevKxyY?e=HegeOL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Heroku搭建教程 &lt;a href=&#34;https://1drv.ms/w/s!Akco49yyqyqDtFOlWqW7k2FHnBnG?e=Q4sZl2&#34;&gt;https://1drv.ms/w/s!Akco49yyqyqDtFOlWqW7k2FHnBnG?e=Q4sZl2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;讨论群组 &lt;a href=&#34;https://t.me/herokuvless&#34;&gt;https://t.me/herokuvless&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;v2ray-heroku&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://heroku.com/deploy?template=https://github.com/qq198812/Hreoku.git&#34;&gt;&lt;img src=&#34;https://www.herokucdn.com/deploy/button.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://heroku.com/deploy?template=&#34;&gt;https://heroku.com/deploy?template=&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;h3&gt;heroku上部署v2ray&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持VMess和VLESS两种协议&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用v2ray最新版构建&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;环境变量说明&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;值&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PROTOCOL&lt;/td&gt; &#xA;   &lt;td&gt;vless&lt;br&gt;vmess（可选）&lt;/td&gt; &#xA;   &lt;td&gt;协议：vless+ws+tls或vmess+ws+tls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UUID&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.uuidgenerator.net&#34; title=&#34;uuid在线生成器&#34;&gt;uuid在线生成器&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用户主ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;CloudFlare Workers反代代码&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=&#34;appname.herokuapp.com&#34;;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const SingleDay = &#39;app0.herokuapp.com&#39;&#xA;const DoubleDay = &#39;app1.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        if (nd.getDate()%2) {&#xA;            host = SingleDay&#xA;        } else {&#xA;            host = DoubleDay&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers每五天轮换一遍式反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDate() % 5;&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4){&#xA;            host = Day4&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Workers一周轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const Day0 = &#39;app0.herokuapp.com&#39;&#xA;const Day1 = &#39;app1.herokuapp.com&#39;&#xA;const Day2 = &#39;app2.herokuapp.com&#39;&#xA;const Day3 = &#39;app3.herokuapp.com&#39;&#xA;const Day4 = &#39;app4.herokuapp.com&#39;&#xA;const Day5 = &#39;app5.herokuapp.com&#39;&#xA;const Day6 = &#39;app6.herokuapp.com&#39;&#xA;addEventListener(&#xA;    &#34;fetch&#34;,event =&amp;gt; {&#xA;    &#xA;        let nd = new Date();&#xA;        let day = nd.getDay();&#xA;        if (day === 0) {&#xA;            host = Day0&#xA;        } else if (day === 1) {&#xA;            host = Day1&#xA;        } else if (day === 2) {&#xA;            host = Day2&#xA;        } else if (day === 3){&#xA;            host = Day3&#xA;        } else if (day === 4) {&#xA;            host = Day4&#xA;        } else if (day === 5) {&#xA;            host = Day5&#xA;        } else if (day === 6) {&#xA;            host = Day6&#xA;        } else {&#xA;            host = Day1&#xA;        }&#xA;        &#xA;        let url=new URL(event.request.url);&#xA;        url.hostname=host;&#xA;        let request=new Request(url,event.request);&#xA;        event. respondWith(&#xA;            fetch(request)&#xA;        )&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单账户反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      url.hostname = &#39;app0.herokuapp.com&#39;&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;CloudFlare Pages单双日轮换反代代码&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default {&#xA;  async fetch(request, env) {&#xA;    const day1 = &#39;app0.herokuapp.com&#39;&#xA;    const day2 = &#39;app1.herokuapp.com&#39;&#xA;    let url = new URL(request.url);&#xA;    if (url.pathname.startsWith(&#39;/&#39;)) {&#xA;      let day = new Date()&#xA;      if (day.getDay() % 2) {&#xA;        url.hostname = day1&#xA;      } else {&#xA;        url.hostname = day2&#xA;      }&#xA;      let new_request = new Request(url, request);&#xA;      return fetch(new_request);&#xA;    }&#xA;    return env.ASSETS.fetch(request);&#xA;  },&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;客户端配置&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;  - 别名: &#34;yourName&#34;&#xA;    协议: vless&#xA;    地址: yourName.workers.dev&#xA;    端口: 443&#xA;    用户id: yourUuid&#xA;    流控: xtls-rprx-direct&#xA;    加密: none&#xA;    伪装域名: yourName.workers.dev&#xA;    传输类型: ws&#xA;    路径: /&#xA;    传输层安全：tls   跳过证书验证：false&#xA;    SNI：yourName.workers.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;特别鸣谢：Misaka、rptec、DaoChen6大佬提供脚本、教程和思路&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vscode-remote-try-cpp</title>
    <updated>2022-10-10T01:33:42Z</updated>
    <id>tag:github.com,2022-10-10:/microsoft/vscode-remote-try-cpp</id>
    <link href="https://github.com/microsoft/vscode-remote-try-cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ sample project for trying out the VS Code Remote - Containers extension&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Try Out Development Containers: C++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Dev%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode&#34; alt=&#34;Open in Dev Containers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;strong&gt;development container&lt;/strong&gt; is a running &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; container with a well-defined tool/runtime stack and its prerequisites. You can try out development containers with &lt;strong&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;https://aka.ms/vscode-remote/containers&#34;&gt;Visual Studio Code Dev Containers&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is a sample project that lets you try out either option in a few easy steps. We have a variety of other &lt;a href=&#34;https://github.com/search?q=org%3Amicrosoft+vscode-remote-try-&amp;amp;type=Repositories&#34;&gt;vscode-remote-try-*&lt;/a&gt; sample projects, too.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have a Codespace or dev container, you can jump to the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vscode-remote-try-cpp/main/#things-to-try&#34;&gt;Things to try&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development container&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a Codespace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the Code drop-down menu and select the &lt;strong&gt;Open with Codespaces&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;+ New codespace&lt;/strong&gt; at the bottom on the pane.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more info, check out the &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;VS Code Dev Containers&lt;/h3&gt; &#xA;&lt;p&gt;If you already have VS Code and Docker installed, you can click the badge above or &lt;a href=&#34;https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-cpp&#34;&gt;here&lt;/a&gt; to get started. Clicking these links will cause VS Code to automatically install the Dev Containers extension if needed, clone the source code into a container volume, and spin up a dev container for use.&lt;/p&gt; &#xA;&lt;p&gt;Follow these steps to open this sample in a container using the VS Code Dev Containers extension:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If this is your first time using a development container, please ensure your system meets the pre-reqs (i.e. have Docker installed) in the &lt;a href=&#34;https://aka.ms/vscode-remote/containers/getting-started&#34;&gt;getting started steps&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To use this repository, you can either open the repository in an isolated Docker volume:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Dev Containers: Try a Sample...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the &#34;C++&#34; sample, wait for the container to start, and try things out! &#xA;    &lt;blockquote&gt; &#xA;     &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Under the hood, this will use the &lt;strong&gt;Dev Containers: Clone Repository in Container Volume...&lt;/strong&gt; command to clone the source code in a Docker volume instead of the local filesystem. &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;Volumes&lt;/a&gt; are the preferred mechanism for persisting container data.&lt;/p&gt; &#xA;    &lt;/blockquote&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Or open a locally cloned copy of the code:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Clone this repository to your local filesystem.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F1&lt;/kbd&gt; and select the &lt;strong&gt;Dev Containers: Open Folder in Container...&lt;/strong&gt; command.&lt;/li&gt; &#xA;   &lt;li&gt;Select the cloned copy of this folder, wait for the container to start, and try things out!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to try&lt;/h2&gt; &#xA;&lt;p&gt;Once you have this sample opened, you&#39;ll be able to work with it like you would locally.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This container runs as a non-root user with sudo access by default. Comment out &lt;code&gt;&#34;remoteUser&#34;: &#34;vscode&#34;&lt;/code&gt; in &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; if you&#39;d prefer to run as root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Some things to try:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Edit:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;main.cpp&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Try adding some code and check out the language features.&lt;/li&gt; &#xA;   &lt;li&gt;Notice that the C++ extension is already installed in the container since the &lt;code&gt;.devcontainer/devcontainer.json&lt;/code&gt; lists &lt;code&gt;&#34;ms-vscode.cpptools&#34;&lt;/code&gt; as an extension to install automatically when the container is created.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Terminal:&lt;/strong&gt; Press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;`&lt;/kbd&gt; and type &lt;code&gt;uname&lt;/code&gt; and other Linux commands from the terminal window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build, Run, and Debug:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open &lt;code&gt;main.cpp&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add a breakpoint (e.g. on line 7).&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;kbd&gt;F5&lt;/kbd&gt; to launch the app in the container.&lt;/li&gt; &#xA;   &lt;li&gt;Once the breakpoint is hit, try hovering over variables, examining locals, and more.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © Microsoft Corporation All rights reserved.&lt;br&gt; Licensed under the MIT License. See LICENSE in the project root for license information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CalvinHaynes/MIT6.S081-2020-labs</title>
    <updated>2022-10-10T01:33:42Z</updated>
    <id>tag:github.com,2022-10-10:/CalvinHaynes/MIT6.S081-2020-labs</id>
    <link href="https://github.com/CalvinHaynes/MIT6.S081-2020-labs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MIT6.S081实验官方纯净源代码，转载于MIT官方仓库git clone git://g.csail.mit.edu/xv6-labs-2020，由于GitHub上没有放出2020版本的MIT6.S081的实验源代码仓库，故在此转载一下，方便大家Fork，也方便我自己使用&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MIT6.S081-2020-labs&lt;/h1&gt; &#xA;&lt;p&gt;MIT6.S081实验官方纯净源代码，转载于MIT官方仓库git clone git://g.csail.mit.edu/xv6-labs-2020，由于GitHub上没有放出2020版本的MIT6.S081的实验源代码仓库，故在此转载一下，方便大家Fork，也方便我自己使用&lt;/p&gt; &#xA;&lt;h2&gt;分支说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;main&lt;/code&gt;分支：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;我搭建的一个Docker环境，集成了code-server（网页端Vscode），以达到开箱即用的效果，通过&lt;code&gt;Docker&lt;/code&gt;的&lt;code&gt;Volumes&lt;/code&gt;机制可通过&lt;code&gt;Docker&lt;/code&gt;访问宿主机的文件，并可以修改和执行（相当于将宿主机的文件挂载在Docker的虚拟环境中），具体搭建&amp;amp;使用流程点&lt;a href=&#34;https://zhuanlan.zhihu.com/p/449687883&#34;&gt;这里&lt;/a&gt;，效果图如下：&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/662e3c37f47f849a515958594a24097708c823fa5af56a6b880e0ef6f6b3cb79/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f43616c76696e4861796e65732f496d616765487562406d61696e2f426c6f67496d6167652f696d6167652e356c383430616b35767730302e706e67&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;一些学习笔记&lt;/li&gt; &#xA;   &lt;li&gt;一些操作系统的资料&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他分支：根据官方的项目一个个&lt;code&gt;clone&lt;/code&gt;过来的，因为mit-pdos的github组织没有开源这个实验的环境，所以我建立这个github仓库方便大家直接fork成自己的项目并且通过github跟踪自己的实验过程，鼓励大家开源自己的学习成果，共同进步，共同学习！！！加油！！！&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>