<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-30T01:33:29Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BharathSharath/cicd-for-webapp</title>
    <updated>2022-12-30T01:33:29Z</updated>
    <id>tag:github.com,2022-12-30:/BharathSharath/cicd-for-webapp</id>
    <link href="https://github.com/BharathSharath/cicd-for-webapp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>chang-alan-l/dl-dev-container</title>
    <updated>2022-12-30T01:33:29Z</updated>
    <id>tag:github.com,2022-12-30:/chang-alan-l/dl-dev-container</id>
    <link href="https://github.com/chang-alan-l/dl-dev-container" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Experimental deep learning development container&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Experimental Deep Learning Development Container&lt;/h1&gt; &#xA;&lt;h1&gt;Planned Usage&lt;/h1&gt; &#xA;&lt;p&gt;Use the pre-built container together with VSCode remote containers to set up dev environments on remote virtual servers for GPU compute, rather than having to individually set up the dev environment each time.&lt;/p&gt; &#xA;&lt;h2&gt;With VSCode&lt;/h2&gt; &#xA;&lt;p&gt;Requirements&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;VSCode Dev Containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvidia-cuda-toolkit&lt;/code&gt; for GPU usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Using the .devcontainer.json specification, can open a folder using the dev container, which will build the image according to the Dockerfile and .devcontainer.json specification.&lt;/p&gt; &#xA;&lt;h2&gt;Using Jupyter&lt;/h2&gt; &#xA;&lt;p&gt;Works with opening the parent folder with VSCode Dev Containers, following build and activation, jupyter works from creating a &lt;code&gt;.ipynb&lt;/code&gt; file and opening with VSCode.&lt;/p&gt; &#xA;&lt;h1&gt;Build&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;docker build -f docker/Dockerfile .&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Run in Detached Mode&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run -dt --gpus all ghcr.io/chang-alan-l/dl-dev:latest&lt;/code&gt; or use the relevant tag. Attach with &lt;code&gt;docker exec -it $CONTAINER_ID /bin/bash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TODOs&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Test pulling the image from the DockerHub or other repository on remote machine&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Requirements are also a bit different for deployment, or direct training (for example the entrypoint will be the python binary, with train.py or infer.py as the command. Might also use &lt;code&gt;cog&lt;/code&gt; for this purpose.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Expose correct ports for &lt;code&gt;wandb&lt;/code&gt;?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>