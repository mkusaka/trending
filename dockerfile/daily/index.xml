<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-14T01:33:59Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vinceHuyghe/turtlesim</title>
    <updated>2023-01-14T01:33:59Z</updated>
    <id>tag:github.com,2023-01-14:/vinceHuyghe/turtlesim</id>
    <link href="https://github.com/vinceHuyghe/turtlesim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Turtlesim&lt;/h1&gt; &#xA;&lt;p&gt;dockerized environment for ROS tutorials&lt;/p&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;p&gt;fork this repo and clone it to your local machine&lt;/p&gt; &#xA;&lt;p&gt;navigate to the turtlesim directory&lt;/p&gt; &#xA;&lt;h3&gt;building the image&lt;/h3&gt; &#xA;&lt;p&gt;run &lt;code&gt;.docker/build_image.sh&lt;/code&gt; to build the docker image or &lt;code&gt;.docker/build_image_zsh.sh&lt;/code&gt; to build the docker image if you are using zsh&lt;/p&gt; &#xA;&lt;h3&gt;running the container&lt;/h3&gt; &#xA;&lt;p&gt;run &lt;code&gt;.docker/run_user.sh&lt;/code&gt; to run the docker container or &lt;code&gt;.docker/run_user_nvidia.sh&lt;/code&gt; if you have an nvidia gpu and have installed the nvidia docker package&lt;/p&gt; &#xA;&lt;p&gt;This will mount the users home directory to the container and run the container in interactive mode. You will not own the workspace run &lt;code&gt;sudo chown -R $USER /dev_ws&lt;/code&gt; to take ownership of the workspace.&lt;/p&gt; &#xA;&lt;h3&gt;terminal&lt;/h3&gt; &#xA;&lt;h4&gt;multiple terminals&lt;/h4&gt; &#xA;&lt;p&gt;terminator is installed in the container and can be run with &lt;code&gt;terminator&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;sourcing the ROS environment&lt;/h4&gt; &#xA;&lt;p&gt;Add the following to your .bashrc (located in home/$USER) to automatically source the ROS environment when opening a new shell in the container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -f &#34;/dev_ws/setup.bash&#34; ]; then&#xA;    source /dev_ws/setup.bash&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you are using zsh to your .zshrc&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;if [ -f &#34;/dev_ws/setup.zsh&#34; ]; then&#xA;    source /dev_ws/setup.zsh&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;vscode integration&lt;/h3&gt; &#xA;&lt;p&gt;requires the following vscode extensions to be installed&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/containers/overview&#34;&gt;docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/remote/remote-overview&#34;&gt;remote development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;devcontainer.json is included in the .docker directory of this repo.&lt;/p&gt; &#xA;&lt;h4&gt;Attach vs code to container&lt;/h4&gt; &#xA;&lt;p&gt;In vs code go to the Docker tab in the side bar. Right click on the container named turtlesim:latest. Select attach vscode.&lt;/p&gt; &#xA;&lt;h4&gt;When attaching to the container for first time:&lt;/h4&gt; &#xA;&lt;p&gt;In vs code open the command palette (Ctrl-Shift-P). Select Remote-containers: Open attached container configuration file. Copy paste content of devcontainer.json and save. Close the vscode window and reattach.&lt;/p&gt;</summary>
  </entry>
</feed>