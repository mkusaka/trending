<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-11T01:31:13Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>poulainpi/oryx-with-custom-qmk</title>
    <updated>2025-07-11T01:31:13Z</updated>
    <id>tag:github.com,2025-07-11:/poulainpi/oryx-with-custom-qmk</id>
    <link href="https://github.com/poulainpi/oryx-with-custom-qmk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enhance your Oryx layout with advanced QMK features like Achordion, while retaining the ability to edit it via Oryx, then build it seamlessly with GitHub Actions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Oryx with custom QMK&lt;/h1&gt; &#xA;&lt;p&gt;This repository allows combining the convenience of &lt;a href=&#34;https://www.zsa.io/oryx&#34;&gt;Oryx’s&lt;/a&gt; graphical layout editing with the power of &lt;a href=&#34;https://qmk.fm&#34;&gt;QMK&lt;/a&gt;, allowing you to customize your Oryx layout with advanced QMK features like Achordion and Repeat Key, while automating firmware builds through GitHub Actions.&lt;/p&gt; &#xA;&lt;p&gt;For a detailed guide, check out the full &lt;a href=&#34;https://blog.zsa.io/oryx-custom-qmk-features&#34;&gt;blog post here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Each time you run the GitHub Action, the workflow will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fetch the latest changes made in Oryx.&lt;/li&gt; &#xA; &lt;li&gt;Merge them with any QMK features you&#39;ve added in the source code.&lt;/li&gt; &#xA; &lt;li&gt;Build the firmware, incorporating modifications from both Oryx and your custom source code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this repository (be sure to &lt;strong&gt;uncheck the &#34;Copy the main branch only&#34; option&lt;/strong&gt;).&lt;/li&gt; &#xA; &lt;li&gt;To initialize the repository with your layout: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Go to the &lt;strong&gt;Actions&lt;/strong&gt; tab.&lt;/li&gt; &#xA;   &lt;li&gt;Select &lt;strong&gt;Fetch and build layout&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Run workflow&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Input your layout ID and keyboard type (your layout must be public in Oryx), then run the workflow.&lt;/li&gt; &#xA;   &lt;li&gt;(To avoid having to input values each time, you can modify the default values at the top of the &lt;code&gt;.github/workflows/fetch-and-build-layout.yml&lt;/code&gt; file).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A folder containing your layout will be generated at the root of the repository.&lt;/li&gt; &#xA; &lt;li&gt;You can now add your custom QMK features to this folder: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Edit &lt;code&gt;config.h&lt;/code&gt;, &lt;code&gt;keymap.c&lt;/code&gt; and &lt;code&gt;rules.mk&lt;/code&gt; according to the &lt;a href=&#34;https://github.com/qmk/qmk_firmware/tree/master/docs/features&#34;&gt;QMK documentation&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Commit and push to the &lt;strong&gt;main&lt;/strong&gt; branch.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can continue editing your layout through Oryx: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Make your changes in Oryx.&lt;/li&gt; &#xA;   &lt;li&gt;Optionally, add a description of your changes in the &lt;strong&gt;Some notes about what you changed&lt;/strong&gt; field; if provided, this will be used as commit message.&lt;/li&gt; &#xA;   &lt;li&gt;Confirm changes by clicking the &lt;strong&gt;Compile this layout&lt;/strong&gt; button.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;To build the firmware (including both Oryx and code modifications), rerun the GitHub Action. The firmware will be available for download in the action’s artifacts.&lt;/li&gt; &#xA; &lt;li&gt;Flash your downloaded firmware using &lt;a href=&#34;https://www.zsa.io/flash#flash-keymap&#34;&gt;Keymapp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Oryx Chrome extension&lt;/h2&gt; &#xA;&lt;p&gt;To make building even easier, &lt;a href=&#34;https://github.com/nivekmai&#34;&gt;@nivekmai&lt;/a&gt; created an &lt;a href=&#34;https://chromewebstore.google.com/detail/oryx-extension/bocjciklgnhkejkdfilcikhjfbmbcjal&#34;&gt;Oryx Chrome extension&lt;/a&gt; to be able to trigger the GitHub Actions from inside Oryx itself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubesphere/devops-agent</title>
    <updated>2025-07-11T01:31:13Z</updated>
    <id>tag:github.com,2025-07-11:/kubesphere/devops-agent</id>
    <link href="https://github.com/kubesphere/devops-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Agents for Kubesphere DevOps&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/kubesphere/devops-agent&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;KubeSphere DevOps Agent&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://kubesphere.io/&#34;&gt;KubeSphere&lt;/a&gt; DevOps, the pipeline runs on the agent of Jenkins. The agent depends on the &lt;a href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;&gt;kubernetes-plugin&lt;/a&gt;. It&#39;s necessary to provide Kubernetes a podTemplate, and the podTemplate defines the agent.&lt;/p&gt; &#xA;&lt;p&gt;The definition method of podTemplate is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;podTemplate(containers: [&#xA;    containerTemplate(name: &#39;base&#39;, image: &#39;kubesphere/builder-base:latest&#39;, ttyEnabled: true, command: &#39;cat&#39;)&#xA;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repo stores the build files of image for these podTemplate.&lt;/p&gt; &#xA;&lt;p&gt;Welcome to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;p&gt;Images for both production and development:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Introduction&lt;/th&gt; &#xA;   &lt;th&gt;Docker Pulls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-base&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kubesphere/devops-agent/master/base/README.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-base/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-base.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The image with tag &lt;code&gt;x.y.z-podman&lt;/code&gt; has the very same utilities installed compared to the &lt;code&gt;x.y.z&lt;/code&gt; image, the only difference is that the &lt;code&gt;x.y.z-podman&lt;/code&gt; image makes a symbolic link of &lt;code&gt;docker&lt;/code&gt; to &lt;code&gt;podman&lt;/code&gt;, for easy use and backward compatibility.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Legacy Images&lt;/h2&gt; &#xA;&lt;p&gt;Legacy images built on centos:7 are no longer developed but may be still working.&lt;/p&gt; &#xA;&lt;p&gt;For production:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Docker Pulls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-go/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-go.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-maven/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-maven.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-gradle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-gradle/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-gradle.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-nodejs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-nodejs/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-nodejs.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-dotnet&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-dotnet/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-dotnet.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubesphere/builder-python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubesphere/builder-python/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubesphere/builder-python.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For development:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Docker Pulls&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-go&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-go/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-go.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-maven/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-maven.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-gradle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-gradle/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-gradle.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-nodejs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-nodejs/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-nodejs.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-dotnet&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-dotnet/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-dotnet.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;kubespheredev/builder-python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/kubespheredev/builder-python/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/kubespheredev/builder-python.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;p&gt;Check out the Makefile.&lt;/p&gt; &#xA;&lt;p&gt;For example, build the base image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build-base&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Join &amp;amp; Contact Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slack &lt;a href=&#34;https://kubesphere.slack.com/messages/sig-devops&#34;&gt;#sig-devops&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/KubeSphere&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list &lt;a href=&#34;https://groups.google.com/group/kubesphere-sig-devops/topics&#34;&gt;archive&lt;/a&gt; | &lt;a href=&#34;mailto:kubesphere-sig-devops+subscribe@googlegroups.com&#34;&gt;subscribe&lt;/a&gt; | &lt;a href=&#34;mailto:kubesphere-sig-devops+unsubscribe@googlegroups.com&#34;&gt;unsubscribe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itnext.io/@kubesphere&#34;&gt;Medium (Blog)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>