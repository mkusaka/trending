<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-21T01:42:14Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ververica/flink-sql-cookbook</title>
    <updated>2022-07-21T01:42:14Z</updated>
    <id>tag:github.com,2022-07-21:/ververica/flink-sql-cookbook</id>
    <link href="https://github.com/ververica/flink-sql-cookbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Apache Flink SQL Cookbook is a curated collection of examples, patterns, and use cases of Apache Flink SQL. Many of the recipes are completely self-contained and can be run in Ververica Platform as is.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Flink SQL Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.ververica.com/user_guide/sql_development/index.html&#34;&gt;Apache Flink SQL&lt;/a&gt; Cookbook is a curated collection of examples, patterns, and use cases of Apache Flink SQL. Many of the recipes are completely self-contained and can be run in &lt;a href=&#34;https://docs.ververica.com/index.html&#34;&gt;Ververica Platform&lt;/a&gt; as is.&lt;/p&gt; &#xA;&lt;p&gt;The cookbook is a living document. &lt;span&gt;🌱&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;h3&gt;Foundations&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/01_create_table/01_create_table.md&#34;&gt;Creating Tables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/02_insert_into/02_insert_into.md&#34;&gt;Inserting Into Tables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/03_temporary_table/03_temporary_table.md&#34;&gt;Working with Temporary Tables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/04_where/04_where.md&#34;&gt;Filtering Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/05_group_by/05_group_by.md&#34;&gt;Aggregating Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/06_order_by/06_order_by.md&#34;&gt;Sorting Tables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/07_views/07_views.md&#34;&gt;Encapsulating Logic with (Temporary) Views&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/08_statement_sets/08_statement_sets.md&#34;&gt;Writing Results into Multiple Tables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/foundations/09_convert_timezones/09_convert_timezones.md&#34;&gt;Convert timestamps with timezones&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Aggregations and Analytics&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/01_group_by_window/01_group_by_window_tvf.md&#34;&gt;Aggregating Time Series Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/02_watermarks/02_watermarks.md&#34;&gt;Watermarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/03_group_by_session_window/03_group_by_session_window.md&#34;&gt;Analyzing Sessions in Time Series Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/04_over/04_over.md&#34;&gt;Rolling Aggregations on Time Series Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/05_top_n/05_top_n.md&#34;&gt;Continuous Top-N&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/06_dedup/06_dedup.md&#34;&gt;Deduplication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/07_chained_windows/07_chained_windows.md&#34;&gt;Chained (Event) Time Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/08_match_recognize/08_match_recognize.md&#34;&gt;Detecting Patterns with MATCH_RECOGNIZE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/09_cdc_materialized_view/09_cdc_materialized_view.md&#34;&gt;Maintaining Materialized Views with Change Data Capture (CDC) and Debezium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/10_hopping_time_windows/10_hopping_time_windows.md&#34;&gt;Hopping Time Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/11_window_top_n/11_window_top_n.md&#34;&gt;Window Top-N&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/12_lag/12_lag.md&#34;&gt;Retrieve previous row value without self-join&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Other Built-in Functions &amp;amp; Operators&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/01_date_time/01_date_time.md&#34;&gt;Working with Dates and Timestamps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/02_union-all/02_union-all.md&#34;&gt;Building the Union of Multiple Streams&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/03_current_watermark/03_current_watermark.md&#34;&gt;Filtering out Late Data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/04_override_table_options/04_override_table_options.md&#34;&gt;Overriding table options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/05_expanding_arrays/05_expanding_arrays.md&#34;&gt;Expanding arrays into new rows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/other-builtin-functions/06_split_strings_into_maps/06_split_strings_into_maps.md&#34;&gt;Split strings into maps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;User-Defined Functions (UDFs)&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/udfs/01_python_udfs/01_python_udfs.md&#34;&gt;Extending SQL with Python UDFs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Joins&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/01_regular_joins/01_regular_joins.md&#34;&gt;Regular Joins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/02_interval_joins/02_interval_joins.md&#34;&gt;Interval Joins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/03_kafka_join/03_kafka_join.md&#34;&gt;Temporal Table Join between a non-compacted and compacted Kafka Topic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/04_lookup_joins/04_lookup_joins.md&#34;&gt;Lookup Joins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/05_star_schema/05_star_schema.md&#34;&gt;Star Schema Denormalization (N-Way Join)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/joins/06_lateral_join/06_lateral_join.md&#34;&gt;Lateral Table Join&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Former Recipes&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ververica/flink-sql-cookbook/main/aggregations-and-analytics/01_group_by_window/01_group_by_window.md&#34;&gt;Aggregating Time Series Data (Before Flink 1.13)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;About Apache Flink&lt;/h2&gt; &#xA;&lt;p&gt;Apache Flink is an open source stream processing framework with powerful stream- and batch-processing capabilities.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about Flink at &lt;a href=&#34;https://flink.apache.org/&#34;&gt;https://flink.apache.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2020-2022 Ververica GmbH&lt;/p&gt; &#xA;&lt;p&gt;Distributed under Apache License, Version 2.0.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wenshunbiao/docker</title>
    <updated>2022-07-21T01:42:14Z</updated>
    <id>tag:github.com,2022-07-21:/wenshunbiao/docker</id>
    <link href="https://github.com/wenshunbiao/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CoreOS Docker，让你更便捷、系统化的使用Docker管理你的服务&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CoreOS Docker&lt;/h1&gt; &#xA;&lt;p&gt;让你更便捷、系统化的使用Docker管理你的服务，一键定制你的环境&lt;br&gt; 需借助 Systemd 服务管理，支持此服务的 Linux 系统都可安装，建议使用 Centos7+ 系统&lt;/p&gt; &#xA;&lt;h2&gt;Step.1 Install Docker&lt;/h2&gt; &#xA;&lt;p&gt;请自行安装Docker&lt;br&gt; 参考教程：&lt;a href=&#34;https://www.kancloud.cn/wenshunbiao/wenshunbiao/1310878&#34;&gt;https://www.kancloud.cn/wenshunbiao/wenshunbiao/1310878&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Step.2 Install CoreOS Docker&lt;/h2&gt; &#xA;&lt;p&gt;请使用root用户安装，忽略一些常规性的报错输出&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# useradd -d /home/core -m core &amp;amp;&amp;amp; cd /home/core&#xA;# git clone https://github.com/wenshunbiao/docker.git&#xA;# chmod -R 777 docker/shell &amp;amp;&amp;amp; export PATH=&#34;/home/core/docker/shell:$PATH&#34;&#xA;# install_coreos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;安装到此结束，以下是一些使用示例或提示。&lt;/h2&gt; &#xA;&lt;h2&gt;一些常用服务及快捷命令列表&lt;/h2&gt; &#xA;&lt;p&gt;在 /home/core/docker 预先封装了大量服务，文件夹名称即是服务名称&lt;br&gt; 所有服务都安装在 /home/core/data 目录，需要修改服务的配置请在这里修改，改完使用 &lt;code&gt;s service_name&lt;/code&gt; 重启生效&lt;/p&gt; &#xA;&lt;p&gt;以 redis 为例，安装 redis 后，在 /home/core/data/redis 下能看到以下文件：&lt;br&gt; &lt;code&gt;redis.conf&lt;/code&gt; &lt;code&gt;redis.service&lt;/code&gt;&lt;br&gt; &lt;code&gt;redis.conf&lt;/code&gt; 是 redis 的配置文件&lt;br&gt; &lt;code&gt;redis.service&lt;/code&gt; 是启动 redis 服务所使用的启动参数，修改映射端口、目录等启动参数在这个文件修改&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;常用服务 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;mysql&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;nginx&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;daemon&lt;/code&gt; supervisor守护进程服务&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ofelia&lt;/code&gt; 秒级定时器，可替代crontab，能和docker容器更方便的交互，&lt;a href=&#34;https://github.com/mcuadros/ofelia&#34;&gt;https://github.com/mcuadros/ofelia&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;v2ray&lt;/code&gt; 飞机场&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多快捷命令请查看 /home/core/docker/shell&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;快捷命令 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;dps&lt;/code&gt; # 显示所有docker服务&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;dpp&lt;/code&gt; # 显示所有docker服务映射端口&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;i service_name&lt;/code&gt; # 安装服务&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;s service_name&lt;/code&gt; # 启动/重启 服务&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;p service_name&lt;/code&gt; # 停止服务&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;d service_name&lt;/code&gt; # 进入服务容器&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;j service_name&lt;/code&gt; # 查看服务历史记录日志&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;jf service_name&lt;/code&gt; # 滚动查看服务日志&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;atop&lt;/code&gt; # 查看系统负载&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;iotop&lt;/code&gt; # 查看系统I/O&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fio&lt;/code&gt; # 测试系统I/O&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;docker_mirror_aliyun&lt;/code&gt; # 为docker配置阿里云源&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;install service&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;i php                         # install php server&#xA;i nginx                       # install nginx share&#xA;i redis                       # install redis server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;start/restart service&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;s php                         # start/restart php server&#xA;s nginx                       # start/restart nginx share&#xA;s redis                       # start/restart redis server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;stop service&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;p php                         # stop php server&#xA;p nginx                       # stop nginx share&#xA;p redis                       # stop redis server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;进阶&lt;/h2&gt; &#xA;&lt;p&gt;如果您觉得本项目不错，当现有服务不能完全适合您，或者没有您需要的服务时，您可以选择 Fork 本仓库&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;扩展服务非常简单，如新增一个 nas 服务，您可以复制一份已有的服务来修改，如 &lt;code&gt;cp -r redis nas&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;接着修改里面的文件，如Dockerfile的构建内容、redis.service重命名为nas.service并修改里面的内容和换成你自己的镜像&lt;/li&gt; &#xA; &lt;li&gt;潜规则：conf目录下的配置文件，安装服务的时候会一起copy到/home/core/data/nas下&lt;/li&gt; &#xA; &lt;li&gt;然后可以着手build自己的镜像并推送到云仓库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;这样一个服务就扩展完毕啦，修改原有服务的话，直接修改原文件就好了，然后自己重新build一个镜像，并把service文件里面的镜像替换成自己的&lt;/p&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://www.jetbrains.com/?from=coreos%20docker&#34;&gt;JetBrains&lt;/a&gt; 对开源项目的支持与帮助&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wenshunbiao/docker/master/docs/images/jetbrains-variant-100.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The CoreOS Docker is open-sourced software licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kubesimplify/workshops-content</title>
    <updated>2022-07-21T01:42:14Z</updated>
    <id>tag:github.com,2022-07-21:/kubesimplify/workshops-content</id>
    <link href="https://github.com/kubesimplify/workshops-content" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo consists of all the code, slides and information about the Kubesimplify workshops&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;workshops-content&lt;/h1&gt; &#xA;&lt;p&gt;This repo consists of all the code, slides and information about the Kubesimplify workshops&lt;/p&gt;</summary>
  </entry>
</feed>