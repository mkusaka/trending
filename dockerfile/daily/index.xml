<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-20T01:33:37Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>osrf/icra2023_ros2_gz_tutorial</title>
    <updated>2023-05-20T01:33:37Z</updated>
    <id>tag:github.com,2023-05-20:/osrf/icra2023_ros2_gz_tutorial</id>
    <link href="https://github.com/osrf/icra2023_ros2_gz_tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ICRA 2023 tutorial on ROS 2 and the new Gazebo (MT28, ICC Capital Suite 14)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tutorial: &#34;All about ROS 2 and the new Gazebo&#34;&lt;/h1&gt; &#xA;&lt;p&gt;This is a tutorial that has been accepted to ICRA 2023.&lt;/p&gt; &#xA;&lt;p&gt;This repository will be updated in the time leading up to the conference.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#schedule&#34;&gt;Schedule&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#breakouts&#34;&gt;Breakouts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/#organizers&#34;&gt;Organizers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Software development, an end in itself in industry, is often a means to an end in academic robotics research, where the goal is to create a prototype, which happens to require software, to illustrate that a novel method works in most cases, downscoped by its assumptions.&lt;/p&gt; &#xA;&lt;p&gt;Whereas academic users expect software to &#34;just work&#34; out of the box, including sophisticated features such as advanced mathematics, to demonstrate a &#34;good enough&#34; nominal case, industry users require all corner cases of vanilla features to be robust or even guaranteed by certification for mission-critical production software. On the other hand, academic research has lately imposed stronger requirements on robustness in simulation, for large-scale long-duration machine learning training.&lt;/p&gt; &#xA;&lt;p&gt;While industry users can afford the engineering to exactly suit their needs, academic users are motivated by factors such as a timeline characterized by transient student graduation cycles and limited software development time between short publication cycles, development toward software prototypes as opposed to robust long-term reliable or mission-critical production software, sophisticated algorithmic developments that potentially depend on multiple large existing packages simultaneously (for example, ROS, Gazebo, MoveIt, and OpenAI Gym) to create cutting-edge research innovations, typically smaller software packages and development teams, and smaller fleets of robots compared to large warehouse logistic operations, to name a few.&lt;/p&gt; &#xA;&lt;p&gt;These factors mean that academic users have less time to understand the foundations of software tools, for example, network communications underlying middleware, physics and rendering underlying robotics simulation, software design paradigms and performance, and proper development process for open source software. As a concrete example, Data Distribution Service (DDS) is a critical building block of ROS 2 when it comes to basic usage and performance. For Gazebo, it means understanding how physics engines differ and choosing the one with the numerical stability or performance best for the specific robotics sub-domain. These choices can affect simulation and real robot results dramatically. Without understanding these differences and choices, it could make a software appear unsuitable or even unusable, when the solution is simply proper configuration.&lt;/p&gt; &#xA;&lt;p&gt;After &lt;a href=&#34;https://docs.ros.org/en/rolling/Releases.html&#34;&gt;8 distribution releases of ROS 2&lt;/a&gt; and with &lt;a href=&#34;http://wiki.ros.org/Distributions&#34;&gt;ROS 1 official support coming to an end in 2025&lt;/a&gt;, at ICRA 2022 Philadelphia, we found that many current ROS 1 users in academia still had questions about whether and when they should migrate to ROS 2.&lt;/p&gt; &#xA;&lt;p&gt;While ROS 2 has seen wide industry adoption, including mission-critical space applications and autonomous vehicles, academic users have been uncertain. In this tutorial, we hope to address the uncertainty by exposing attendees to new features in ROS 2 and the new Gazebo (formerly Ignition) through hands-on exercises using examples developed for real-world applications.&lt;/p&gt; &#xA;&lt;p&gt;Audience:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ros.org/&#34;&gt;ROS&lt;/a&gt; 1 users wondering whether to to migrate to ROS 2 users new to ROS&lt;/li&gt; &#xA; &lt;li&gt;ROS 2 users&lt;/li&gt; &#xA; &lt;li&gt;Gazebo-classic users wondering whether to migrate to new Gazebo&lt;/li&gt; &#xA; &lt;li&gt;Users wondering whether the new Gazebo is right for them&lt;/li&gt; &#xA; &lt;li&gt;Users of other simulators looking to learn about the new Gazebo and existing infrastructure we worked on with Nvidia, DeepMind, and Toyota Research Institute in the past few years to handle format conversions between SDF and formats used by OmniVerse, MuJoCo, and Drake.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Clone this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/osrf/icra2023_ros2_gz_tutorial.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Follow the installation instructions in &lt;a href=&#34;https://github.com/osrf/icra2023_ros2_gz_tutorial/raw/main/docker/README.md&#34;&gt;&lt;code&gt;docker/README.md&lt;/code&gt;&lt;/a&gt; to get set up and running.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/osrf/icra2023_ros2_gz_tutorial/main/PROJECTS.md&#34;&gt;list&lt;/a&gt; of open source products and projects publically known to be using ROS 2 and/or new Gazebo.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to submit your project to be added this list, please follow the directions below.&lt;/p&gt; &#xA;&lt;p&gt;The list is meant to serve as usage examples for the communityâ€™s reference and interactions in their own time. It is not meant for for-profit advertisement. We do not promise to feature any of the entries live on the tutorial day.&lt;/p&gt; &#xA;&lt;h4&gt;Criteria&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Must use ROS 2 or the new &lt;a href=&#34;https://gazebosim.org&#34;&gt;Gazebo&lt;/a&gt; (formerly Ignition), i.e. if the project uses ROS 1 and &lt;a href=&#34;https://classic.gazebosim.org&#34;&gt;Gazebo-classic&lt;/a&gt;, it does not satisfy this criterion.&lt;/li&gt; &#xA; &lt;li&gt;Open source&lt;/li&gt; &#xA; &lt;li&gt;Preferably, there is a visual representation (image, video, etc) in the URL you provide.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;What to submit&lt;/h4&gt; &#xA;&lt;p&gt;This is not a contribution in the formal sense. We are simply asking for a project title, URL, and a one-line description (please keep it short).&lt;/p&gt; &#xA;&lt;p&gt;These should be substantial projects beyond hello-world tutorials and examples we already provide.&lt;/p&gt; &#xA;&lt;p&gt;For example projects, see recent &lt;a href=&#34;https://community.gazebosim.org/tag/meeting&#34;&gt;monthly Gazebo Community Meetings&lt;/a&gt; and &lt;a href=&#34;https://discourse.ros.org/tag/weekly-update&#34;&gt;ROS News for the Week&lt;/a&gt;, e.g.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.gazebosim.org/t/community-meeting-interns-2022-aug-2022/1549&#34;&gt;Gazebo Community Meeting Aug 2022: Intern projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.gazebosim.org/t/community-meeting-maritime-jun-2022/1472&#34;&gt;Gazebo Community Meeting Jun 2022: Surface ocean wave rendering and AUV simulation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.gazebosim.org/t/community-meeting-mov-ai-flow-ros-ide-apr-2022/1379&#34;&gt;Gazebo Community Meeting Apr 2022: MOV.AI Flow ROS IDE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.gazebosim.org/t/community-meeting-pan-african-competition-simulation-for-ci-jan-2022/1230&#34;&gt;Gazebo Community Meeting Jan 2022: Pan-African competition&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;How to submit&lt;/h4&gt; &#xA;&lt;p&gt;Open a pull request in this repository. Your code change should be a short one-line bullet list item added to the PROJECTS.md file. Fill out the pull request template for Project Contribution. Prefix your pull request title with [Project].&lt;/p&gt; &#xA;&lt;h4&gt;Why submit&lt;/h4&gt; &#xA;&lt;p&gt;Visibility for your open source project and community interaction.&lt;/p&gt; &#xA;&lt;h4&gt;When to submit&lt;/h4&gt; &#xA;&lt;p&gt;There is no formal deadline in the conventional sense of workshop contributions. View this as an open source contribution, where pull requests are opened and reviewed on a reasonable timeline.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your contribution.&lt;/p&gt; &#xA;&lt;h2&gt;Schedule&lt;/h2&gt; &#xA;&lt;p&gt;While it is impossible to cover all of the software foundations underlying ROS 2 and Gazebo (or other simulators), we hope to expose attendees to such factors, the new features in ROS 2 and Gazebo, and give them an avenue of resources to follow when they encounter obstacles while using these software in their robotics research.&lt;/p&gt; &#xA;&lt;p&gt;In the first half of the day, we will first discuss reasons one might choose ROS 2, feature comparisons between ROS 1 and ROS 2 [&lt;a href=&#34;https://www.science.org/stoken/author-tokens/ST-483/full&#34;&gt;1&lt;/a&gt;], whether ROS 2 is right for different applications, and our migration resources. Then, we will have a short breakout discussion for attendees to share and discuss their use of ROS and ROS 2. The main portion of the tutorial is a hands-on session for the attendees to try out ROS 2 on their laptops, using &lt;a href=&#34;https://hub.docker.com/_/ros&#34;&gt;our Dockerfiles&lt;/a&gt;, which is part of our regular infrastructure and is automatically updated nightly on Docker Hub.&lt;/p&gt; &#xA;&lt;p&gt;In the second half of the day, we will have a similar discussion about migrating from &lt;a href=&#34;https://classic.gazebosim.org/&#34;&gt;Gazebo-classic&lt;/a&gt; to the &lt;a href=&#34;https://gazebosim.org/&#34;&gt;new Gazebo&lt;/a&gt; (formerly Ignition), and hands-on practice.&lt;/p&gt; &#xA;&lt;p&gt;References&lt;/p&gt; &#xA;&lt;p&gt;[1] Steven Macenski, Tully Foote, Brian Gerkey, Chris Lalancette, and William Woodall. &lt;a href=&#34;https://www.science.org/stoken/author-tokens/ST-483/full&#34;&gt;Robot Operating System 2: Design, architecture, and uses in the wild&lt;/a&gt;. Science Robotics, May 2022. Volume 7, issue 66. DOI 10.1126/scirobotics.abm6074&lt;/p&gt; &#xA;&lt;h3&gt;Schedule (tentative):&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Welcome and Intro (9:00 am, 5 mins)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Is ROS 2 right for me? (9:05 am, 50 mins)&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Discuss top 5 reasons collected at ICRA 2022 Philadelphia through informal conversations, why people aren&#39;t using ROS 2. (Mabel, 5 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Show the table in ROS 2 paper on Science Robotics highlighting ROS 1 vs. 2, 10 bite-size paragraphs of what&#39;s new in ROS 2, and 5 example use cases. (5 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Present and elaborate on points of whether people should switch to ROS 2. (Chris, 30 mins) &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;ROS 2 in different domains &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://www.open-rmf.org/&#34;&gt;Open Robotics Middleware Framework (Open-RMF)&lt;/a&gt; for indoor robot fleets (&lt;a href=&#34;https://github.com/open-rmf&#34;&gt;GitHub&lt;/a&gt;)&lt;/li&gt; &#xA;       &lt;li&gt;MBZIRC for surface vessels (&lt;a href=&#34;https://github.com/osrf/mbzirc&#34;&gt;GitHub&lt;/a&gt;)&lt;/li&gt; &#xA;       &lt;li&gt;VIPER for space (publicly &lt;a href=&#34;https://www.nasa.gov/viper/lunar-operations&#34;&gt;announced&lt;/a&gt;, code not public)&lt;/li&gt; &#xA;       &lt;li&gt;SpaceROS&lt;/li&gt; &#xA;       &lt;li&gt;Examples from the community &#xA;        &lt;ol&gt; &#xA;         &lt;li&gt;Deep reinforcement learning manipulation ROS 2 + MoveIt2 + Gazebo + OpenAI Gym (&lt;a href=&#34;https://github.com/AndrejOrsula/drl_grasping&#34;&gt;Andrej Orsula GitHub&lt;/a&gt;)&lt;/li&gt; &#xA;        &lt;/ol&gt; &lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Pluggable comms/rmw layer at runtime (default middleware is DDS)&lt;/li&gt; &#xA;     &lt;li&gt;Cross-platform (Linux, Ubuntu, macOS)&lt;/li&gt; &#xA;     &lt;li&gt;Launch in Python, XML, YAML&lt;/li&gt; &#xA;     &lt;li&gt;Composable nodes&lt;/li&gt; &#xA;     &lt;li&gt;Lifecycle nodes for better determinism&lt;/li&gt; &#xA;     &lt;li&gt;Security (SROS2)&lt;/li&gt; &#xA;     &lt;li&gt;Rolling release&lt;/li&gt; &#xA;     &lt;li&gt;Projects built on top of ROS 2 &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;microROS for running on embedded systems&lt;/li&gt; &#xA;       &lt;li&gt;navigation2&lt;/li&gt; &#xA;       &lt;li&gt;MoveIt 2&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Simple DDS configurations &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;code&gt;RMW_IMPLEMENTATION&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Composition to avoid some performance problems&lt;/li&gt; &#xA;     &lt;li&gt;Inter-process communications can give very good performance&lt;/li&gt; &#xA;     &lt;li&gt;Per-DDS vendor config files&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Resources - links to &lt;a href=&#34;https://docs.ros.org/en/humble/Tutorials.html&#34;&gt;tutorials&lt;/a&gt;, API documentation, design documents, Discourse, list of Working Groups, simple ROS 2 DDS configurations, ROSCon (all past videos free online), Diversity Scholarships, etc. (5 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Q&amp;amp;A (5 mins)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ROS 2 breakout discussions (10:00 am, 30 mins)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refreshment break (10:30 am, 10 mins)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ROS 2 hands-on guided session with ROS 2 Dockerfile (10:40 am, 105 mins)&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Show the existence of ROS 2 &lt;a href=&#34;https://docs.ros.org/en/humble/Tutorials.html&#34;&gt;tutorials&lt;/a&gt; (2 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Demonstrate CLI tools briefly (10 mins interactive)&lt;/li&gt; &#xA;   &lt;li&gt;Brief walkthrough of code for simple publisher / subscriber example, demonstrate (15 mins interactive) &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;C++ talker + Python subscriber&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Demonstrate what you can do with ROS 2 using an existing world from real applications in one of our public repositories above. Includes ROS 2, simulation in new Gazebo, RViz, robot controls. &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/turtlebot/turtlebot4_simulator/tree/humble&#34;&gt;TB4&lt;/a&gt; (45 mins interactive) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;Launch files (new XML, show Python exists, new YAML)&lt;/li&gt; &#xA;       &lt;li&gt;Services and actions, if TB4 has them&lt;/li&gt; &#xA;       &lt;li&gt;Parameters&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Lunch (12:30-1:30 pm)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All about the new Gazebo (1:30 pm, 50 mins)&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;What is the new Gazebo (5 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Videos of different application domains: land, space, marine, manipulation (15 mins) &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;DARPA SubTerranean Challenge (&lt;a href=&#34;https://github.com/osrf/subt&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://app.gazebosim.org/OpenRobotics/fuel/collections/SubT%20Tech%20Repo&#34;&gt;3D model collection on Fuel&lt;/a&gt;): physics-based rendering (PBR), levels (LOD)&lt;/li&gt; &#xA;     &lt;li&gt;Demo worlds from Gazebo &lt;a href=&#34;https://app.gazebosim.org/OpenRobotics/fuel/worlds/Edifice%20demo&#34;&gt;Edifice&lt;/a&gt;, &lt;a href=&#34;https://app.gazebosim.org/OpenRobotics/fuel/worlds/Fortress%20demo&#34;&gt;Fortress&lt;/a&gt;, Garden releases. 3D models on Gazebo Fuel, a free online database&lt;/li&gt; &#xA;     &lt;li&gt;MBZIRC for surface vessels (&lt;a href=&#34;https://github.com/osrf/mbzirc&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://app.gazebosim.org/OpenRobotics/fuel/collections/mbzirc&#34;&gt;3D model collection on Fuel&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;MBARI LRAUV for underwater (&lt;a href=&#34;https://github.com/osrf/lrauv&#34;&gt;GitHub&lt;/a&gt;): science data visualization, 3D plot of robot movement&lt;/li&gt; &#xA;     &lt;li&gt;MBARI Buoy Sim (&lt;a href=&#34;https://github.com/osrf/buoy_sim&#34;&gt;GitHub&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;From community: &lt;a href=&#34;https://community.gazebosim.org/t/simulate-surface-waves-and-marine-vehicle-dynamics/1268/6&#34;&gt;Rhys Mainwaring Wave simulation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Blender resources for modeling - &lt;a href=&#34;https://github.com/gazebosim/gz-sim/raw/31f7d5b384408eb88db3fcc85cc5529eb926f069/tutorials/blender_sdf_exporter.md&#34;&gt;SDF export&lt;/a&gt;, &lt;a href=&#34;https://github.com/gazebosim/gz-sim/raw/31f7d5b384408eb88db3fcc85cc5529eb926f069/tutorials/blender_procedural_datasets.md&#34;&gt;procedural generation&lt;/a&gt; (5 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Format conversions with other simulators (10 mins) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Nvidia Omniverse (&lt;a href=&#34;https://github.com/gazebosim/gz-omni&#34;&gt;OSRF GitHub gz-omni&lt;/a&gt;, &lt;a href=&#34;https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/tutorial_ros2_gazebosim.html?highlight=gazebo&#34;&gt;Nvidia docs&lt;/a&gt;, &lt;a href=&#34;https://community.gazebosim.org/t/ign-omni-is-available/1413&#34;&gt;OSRF announcement&lt;/a&gt;, &lt;a href=&#34;https://discourse.ros.org/t/nvidia-isaac-sim-latest-release-update-with-gazebo-bridge-and-new-features/26130&#34;&gt;Nvidia announcement&lt;/a&gt;, and &lt;a href=&#34;https://developer.nvidia.com/blog/expedite-the-development-testing-and-training-of-ai-robots-with-isaac-sim&#34;&gt;Nvidia Isaac announcement&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;MuJoCo (&lt;a href=&#34;https://github.com/gazebosim/gz-mujoco&#34;&gt;OSRF gz-mujoco&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;Drake (&lt;a href=&#34;https://github.com/orgs/gazebosim/projects/2&#34;&gt;OSRF GitHub Project Board&lt;/a&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Resources - &lt;a href=&#34;https://gazebosim.org/docs&#34;&gt;Documentation&lt;/a&gt;, &lt;a href=&#34;https://gazebosim.org/api/sim/7/tutorials.html&#34;&gt;Tutorials&lt;/a&gt;, &lt;a href=&#34;https://gazebosim.org/api/sim/7/&#34;&gt;API documentation&lt;/a&gt;, &lt;a href=&#34;https://community.gazebosim.org/&#34;&gt;Gazebo Community site&lt;/a&gt;, past Gazebo Community Meetings, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Q&amp;amp;A&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gazebo breakout discussions (2:20 pm, 30 mins)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gazebo hands-on guided session with ROS 2 Dockerfile, which ships new Gazebo (2:50 pm, 90 mins)&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Show where to find &lt;a href=&#34;https://gazebosim.org/docs&#34;&gt;documentation&lt;/a&gt; (2 mins)&lt;/li&gt; &#xA;   &lt;li&gt;Show &lt;a href=&#34;https://app.gazebosim.org/dashboard&#34;&gt;Gazebo Fuel&lt;/a&gt;, free online database of 3D models and worlds (5 mins) &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;MBZIRC boats, SubT, etc&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Demonstrate CLI tools briefly, show &lt;code&gt;--help&lt;/code&gt;, bash completion (15+ mins interactive)&lt;/li&gt; &#xA;   &lt;li&gt;Demonstrate what you can do with new Gazebo using simple &lt;a href=&#34;https://github.com/gazebosim/gz-sim/tree/ign-gazebo6/examples&#34;&gt;example&lt;/a&gt; worlds that ship with Gazebo &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;code&gt;gz sim&lt;/code&gt; (10 mins) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;Splash screen demo worlds - Nao robot&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gazebosim/gz-sim/raw/ign-gazebo6/examples/worlds/diff_drive.sdf&#34;&gt;&lt;code&gt;diff_drive.sdf&lt;/code&gt;&lt;/a&gt; (5 mins) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;Keyboard control&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/gazebosim/gz-sim/raw/ign-gazebo6/examples/worlds/multi_lrauv_race.sdf&#34;&gt;&lt;code&gt;multi_lrauv_race.sdf&lt;/code&gt;&lt;/a&gt; (15 mins) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;Physics panel: time steps, real time factor&lt;/li&gt; &#xA;       &lt;li&gt;Entity tree panel&lt;/li&gt; &#xA;       &lt;li&gt;Multi-robot&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Demonstrate what you can do with new Gazebo using a world(s) from real applications in one of our public repositories in the presentation list above. Includes models from Gazebo Fuel. &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;Physics-based rendering (PBR) (live demo presenter only, not interactive, to save time) (5 mins)&lt;/li&gt; &#xA;     &lt;li&gt;2D plots of topics (10-15 mins) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/osrf/buoy_entrypoint&#34;&gt;MBARI Buoy&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;Point cloud visualization from csv (10 mins) &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/osrf/lrauv/&#34;&gt;MBARI LRAUV&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;del&gt;Levels (LOD) rendering (10 mins)&lt;/del&gt; &#xA;      &lt;ol&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://github.com/gazebosim/gz-sim/raw/gz-sim7/tutorials/levels.md&#34;&gt;Levels tutorial&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;gz sim levels.sdf --levels&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;gz topic -t &#34;/model/vehicle_blue/cmd_vel&#34; -m gz.msgs.Twist -p &#34;linear: {x: 4.0}&#34;&lt;/code&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;gz topic -t &#34;/model/vehicle_red/cmd_vel&#34; -m gz.msgs.Twist -p &#34;linear: {x: 2.0}&#34;&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;/ol&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Show developer resources (5 mins) &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;Show list of &lt;a href=&#34;https://gazebosim.org/libs&#34;&gt;development libraries&lt;/a&gt;, explain gz-sim is entry point&lt;/li&gt; &#xA;     &lt;li&gt;Show &lt;a href=&#34;https://github.com/gazebosim&#34;&gt;gazebosim GitHub org&lt;/a&gt;, &lt;a href=&#34;https://github.com/orgs/gazebosim/projects/1&#34;&gt;GitHub Project board&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://gazebosim.org/docs/garden/comparison&#34;&gt;Feature comparison&lt;/a&gt; with Gazebo-classic&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://gazebosim.org/docs/garden/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://gazebosim.org/docs/garden/development&#34;&gt;Development&lt;/a&gt; (CI, contributing guidelines, release process)&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refreshment break (4:20 pm, 10 minutes)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Conclusion (4:30 pm, 30 mins)&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Ways to get involved with us &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;For hands-on questions with the community: &lt;a href=&#34;https://answers.ros.org/questions/&#34;&gt;ROS Answers&lt;/a&gt;, &lt;a href=&#34;https://answers.gazebosim.org/questions/&#34;&gt;Gazebo Answers&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;For high-level discussions: &lt;a href=&#34;https://discourse.ros.org/&#34;&gt;ROS Discourse&lt;/a&gt;, &lt;a href=&#34;https://community.gazebosim.org/&#34;&gt;Gazebo Community&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Pull requests to our GitHub repositories: &lt;a href=&#34;https://github.com/ros2&#34;&gt;ros2&lt;/a&gt;, &lt;a href=&#34;https://github.com/gazebosim/&#34;&gt;gazebosim&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Participate in ROS Working Groups - Navigation, Manipulation, Control, Embedded, Real-time, Safety, &lt;a href=&#34;https://github.com/ros-maritime/community/&#34;&gt;Maritime&lt;/a&gt;, etc. See &lt;a href=&#34;https://docs.ros.org/en/rolling/The-ROS2-Project/Governance.html&#34;&gt;Project Governance&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Monthly Gazebo Community Meetings&lt;/li&gt; &#xA;     &lt;li&gt;Summer internships through Google Summer of Code (GSoC) and Google Season of Docs (GSoD)&lt;/li&gt; &#xA;     &lt;li&gt;ROSCon annual conference, and Diversity Scholarships to attend ROSCon&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Open-floor Q&amp;amp;A and discussions&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Breakouts&lt;/h2&gt; &#xA;&lt;p&gt;Please take notes &lt;a href=&#34;https://drive.google.com/drive/folders/17guPLFHlZiY3TJ-tWCqIEWgCdLxUG7Lg?usp=share_link&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;ROS 2&lt;/h3&gt; &#xA;&lt;p&gt;Suggested discussion topics for ROS 2 breakout:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;What ROS version are you using, ROS 1 or 2? If you are not using ROS, what middleware are you using?&lt;/li&gt; &#xA; &lt;li&gt;What is your application domain?&lt;/li&gt; &#xA; &lt;li&gt;What problems have you encountered with ROS 1, if any? To your knowledge, does ROS 2 solve any of them?&lt;/li&gt; &#xA; &lt;li&gt;If you are using ROS 1, what stops you from migrating to ROS 2?&lt;/li&gt; &#xA; &lt;li&gt;If you have used both ROS 1 and ROS 2, what do you like and dislike about each? Are there problems in one version that are solved in the other?&lt;/li&gt; &#xA; &lt;li&gt;What problems have you encountered with ROS 2?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Gazebo&lt;/h3&gt; &#xA;&lt;p&gt;Suggested discussion topics for Gazebo breakout:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;What simulator do you currently use? Why did you choose it? Which other simulators have you evaluated before choosing it, if any?&lt;/li&gt; &#xA; &lt;li&gt;If you are using a simulator, what are you using it for? Are you using it for development? For testing? For continuous integration?&lt;/li&gt; &#xA; &lt;li&gt;Have you ever used Gazebo-classic? Have you heard of the new Gazebo (formerly Ignition)? What do you know about the new Gazebo?&lt;/li&gt; &#xA; &lt;li&gt;What are the most important problems that your current simulator DOES address for your use case?&lt;/li&gt; &#xA; &lt;li&gt;What are the most important problems that simulators do not address for your use case? This can be a limit of the state of the art, or of the particular simulators you have tried. For example, contact physics, deformable objects, approximate hydrodynamics, rendering of specific environments, etc.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Organizers&lt;/h2&gt; &#xA;&lt;p&gt;Mabel Zhang, Open Robotics team at Intrinsic&lt;/p&gt; &#xA;&lt;p&gt;Chris Lalancette, Open Robotics team at Intrinsic&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Sxela/WarpFusion</title>
    <updated>2023-05-20T01:33:37Z</updated>
    <id>tag:github.com,2023-05-20:/Sxela/WarpFusion</id>
    <link href="https://github.com/Sxela/WarpFusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WarpFusion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WarpFusion&lt;/h1&gt; &#xA;&lt;p&gt;WarpFusion&lt;/p&gt; &#xA;&lt;h1&gt;Local installation guide for Windows&lt;/h1&gt; &#xA;&lt;h2&gt;Run once&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://github.com/git-for-windows/git/releases/download/v2.39.1.windows.1/Git-2.39.1-64-bit.exe&#34;&gt;git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe&#34;&gt;miniconda&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can skip these two steps and get a batch file &lt;a href=&#34;https://github.com/Sxela/WarpFusion/releases/download/v0.1.0/install_git_conda.bat&#34;&gt;here&lt;/a&gt;. Download it and run (doesn&#39;t matter which folder you run it from) It will download and install Git and Miniconda for you, you&#39;ll just need to accept all the incoming menus with default settings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run once per notebook version (recommended)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a folder for WarpFusion. It&#39;s recommended to have a general folder for WarpFusion and subfolders for each version. Like &lt;code&gt;C:\code\WarpFusion\v5.27.5\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/Sxela/WarpFusion/releases/download/v0.1.0/prepare_env_relative.bat&#34;&gt;prepare_env_relative.bat&lt;/a&gt; and save it into your WarpFolder, &lt;code&gt;C:\code\WarpFusion\v5.27.5\&lt;/code&gt; in this example.&lt;/li&gt; &#xA; &lt;li&gt;Run prepare_env_relative.bat. It will create a virtual python environment called &#34;env&#34; inside our folder and install dependencies, required to run the notebook and jupyter server for local colab.&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/Sxela/WarpFusion/releases/download/v0.1.0/run_relative.bat&#34;&gt;run_relative.bat&lt;/a&gt; and save it into your WarpFolder, &lt;code&gt;C:\code\WarpFusion\v5.27.5\&lt;/code&gt; in this example.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Run to launch&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Execute run_relative.bat. It will activate the environment and start jupyter server.&lt;/li&gt; &#xA; &lt;li&gt;After the server has launched, go to &lt;a href=&#34;https://colab.research.google.com&#34;&gt;https://colab.research.google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click File -&amp;gt; Upload Notebook and upload the *.ipynb file&lt;/li&gt; &#xA; &lt;li&gt;Click on the dropdown menu near &#34;Connect&#34; or &#34;Reconnect&#34; button on the topright part of the interface.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;connect to a local runtime&#34; and paste the URL that will be generated below, which looks like &#34;&lt;a href=&#34;http://localhost:8888/?token=somenumbers&#34;&gt;http://localhost:8888/?token=somenumbers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Connect&#34; and CTRL+F9 to run all cells.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Docker install&lt;/h1&gt; &#xA;&lt;h2&gt;Run once to install (and once per notebook version)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a folder for warp, for example &lt;code&gt;d:\warp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download Dockerfile and docker-compose.yml to &lt;code&gt;d:\warp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edit docker-compose.yml so that volumes point to your model, init_images, images_out folders that are outside of the warp folder. For example, &lt;code&gt;d:\models\:/content/models&lt;/code&gt; will expose d:\models as /content/models to the notebook&lt;/li&gt; &#xA; &lt;li&gt;Download and install docker from here - &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up --build&lt;/code&gt; inside the warp folder.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://colab.research.google.com&#34;&gt;https://colab.research.google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click File -&amp;gt; Upload Notebook and upload the *.ipynb file&lt;/li&gt; &#xA; &lt;li&gt;Click on the dropdown menu near &#34;Connect&#34; or &#34;Reconnect&#34; button on the topright part of the interface.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;connect to a local runtime&#34; and paste the token that was generated in your docker container, but leave the url as localhost. Should look like &#34;&lt;a href=&#34;http://localhost:8888/?token=somenumbers&#34;&gt;http://localhost:8888/?token=somenumbers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Connect&#34; and CTRL+F9 to run all cells.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Run to launch&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up &lt;/code&gt; inside the warp folder.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://colab.research.google.com&#34;&gt;https://colab.research.google.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File -&amp;gt; open notebook -&amp;gt; open your previouslty uploaded notebook&lt;/li&gt; &#xA; &lt;li&gt;Click on the dropdown menu near &#34;Connect&#34; or &#34;Reconnect&#34; button on the topright part of the interface.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;connect to a local runtime&#34; and paste the token that was generated in your docker container, but leave the url as localhost. Should look like &#34;&lt;a href=&#34;http://localhost:8888/?token=somenumbers&#34;&gt;http://localhost:8888/?token=somenumbers&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Connect&#34; and CTRL+F9 to run all cells.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>mkirova/day-of-code</title>
    <updated>2023-05-20T01:33:37Z</updated>
    <id>tag:github.com,2023-05-20:/mkirova/day-of-code</id>
    <link href="https://github.com/mkirova/day-of-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Day of Code&lt;/h1&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;p&gt;This project is meant to provide a setup that can be used to build a Ruby on Rails application from scratch using GitHub Codespaces. This is being used to organise Day of Code, an event based on tutorials provided by Rails Girls.&lt;/p&gt; &#xA;&lt;h2&gt;Day of Code Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1: Fork this repository&lt;/h3&gt; &#xA;&lt;p&gt;Forking means creating a personal copy of someone elseâ€™s project. You can do that by selecting &lt;strong&gt;Fork&lt;/strong&gt; on the top-right of the current repository page. Itâ€™s OK to leave all the default settings for the fork and you could enter an optional description if you would like to reference back to this project later on.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2: Run the codespace&lt;/h3&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;Code &amp;gt; Codespaces&lt;/code&gt; in the upper right and click &lt;code&gt;Create codespace on main&lt;/code&gt;. A Codespace is a convenient development environment hosted in the cloud that you can use from your browser without the need to install anything (like the Ruby language, Rails framework or any coding editors) on your computer.&lt;/p&gt; &#xA;&lt;h3&gt;Step 3: Chat with your coach&lt;/h3&gt; &#xA;&lt;p&gt;While you wait for your codespace to be ready your coach will explain the processes that are going on and how your environment is being set up. This setup will take a bit over five minutes, so grab a cup of tea!&lt;/p&gt; &#xA;&lt;h3&gt;Step 4: Youâ€™re ready to go&lt;/h3&gt; &#xA;&lt;p&gt;Congratulations, youâ€™re up and running! You will see your own copy of Visual Studio Code (VS Code) which is an IDE (Integrated Development Environment) where you can write and run code.&lt;/p&gt; &#xA;&lt;p&gt;Ask your coach to explain what the different components of VS Code are: the editor, project navigation, the Terminal.&lt;/p&gt; &#xA;&lt;p&gt;Now you&#39;re ready to move on to the next step in the Day of Code Guides!&lt;/p&gt; &#xA;&lt;h3&gt;A note for when you run your Rails server for the first time&lt;/h3&gt; &#xA;&lt;p&gt;This will become important after you&#39;ve completed the first few steps in the Rails Girls guides and created your app with &lt;code&gt;rails new&lt;/code&gt; - the official Rails Girls guides assume that you are installing and running Ruby and Rails locally on your computer.&lt;/p&gt; &#xA;&lt;p&gt;This has been skipped with the current setup, so before you run &lt;code&gt;rails server&lt;/code&gt; for the first time you will need to add one small bit of configuration to allow web requests to the non-local codespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Insert the following code at the bottom of config/environments/development.rb, before the final `end`&#xA;&#xA;config.hosts &amp;lt;&amp;lt; &#34;&amp;lt;codespace_subdomain&amp;gt;-3000.preview.app.github.dev&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where &lt;code&gt;&amp;lt;codespace_subdomain&amp;gt;&lt;/code&gt; is the first part of your codespace URL. Check the browser&#39;s address bar to find it, it will look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://&amp;lt;codespace_subdomain&amp;gt;.github.dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;https://&amp;lt;codespace_subdomain&amp;gt;-3000.preview.app.github.dev&lt;/code&gt; will be the host URL we will use in this workshop, and not &lt;code&gt;http://localhost:3000 &lt;/code&gt; as indicated in the Rails Girls instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Find out more&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/fork-a-repo&#34;&gt;Forking a repository explained&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/codespaces/overview&#34;&gt;GitHub codespaces overview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>