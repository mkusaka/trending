<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Dockerfile Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-07T01:38:06Z</updated>
  <subtitle>Daily Trending of Dockerfile in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>composer/docker</title>
    <updated>2022-08-07T01:38:06Z</updated>
    <id>tag:github.com,2022-08-07:/composer/docker</id>
    <link href="https://github.com/composer/docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Composer in Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Images&lt;/h1&gt; &#xA;&lt;p&gt;Source behind the following images:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DockerHub &lt;a href=&#34;https://hub.docker.com/_/composer&#34;&gt;https://hub.docker.com/_/composer&lt;/a&gt; (official)&lt;/li&gt; &#xA; &lt;li&gt;DockerHub &lt;a href=&#34;https://hub.docker.com/r/composer/composer&#34;&gt;https://hub.docker.com/r/composer/composer&lt;/a&gt; (community)&lt;/li&gt; &#xA; &lt;li&gt;AWS ECR &lt;a href=&#34;https://gallery.ecr.aws/composer/composer&#34;&gt;https://gallery.ecr.aws/composer/composer&lt;/a&gt; (community)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Docker Hub documentation can be found at &lt;a href=&#34;https://github.com/docker-library/docs/tree/master/composer&#34;&gt;https://github.com/docker-library/docs/tree/master/composer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Official Image (Docker Hub only)&lt;/h2&gt; &#xA;&lt;p&gt;The &#34;official&#34; image release workflow is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; a new tag is pushed to &lt;a href=&#34;https://github.com/composer/composer&#34;&gt;Composer repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; &lt;a href=&#34;https://github.com/composer/composer/raw/832af78e284b23a8f43914b2571fb4c48a7b108a/.github/workflows/release.yml#L81-L96&#34;&gt;release workflow&lt;/a&gt; on &lt;a href=&#34;https://github.com/composer/composer&#34;&gt;Composer repository&lt;/a&gt; creates an issue regarding new tag on &lt;a href=&#34;https://github.com/composer/docker&#34;&gt;Docker repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;‚úç&lt;/span&gt; modification to relevant &lt;code&gt;Dockerfile&lt;/code&gt;s is pushed/merged&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;‚úç&lt;/span&gt; a pull request is submitted to the &lt;a href=&#34;https://github.com/docker-library/official-images/&#34;&gt;official images repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;‚úç&lt;/span&gt; pull request is merged, resulting in new release being added to &lt;a href=&#34;https://hub.docker.com/_/composer&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community / Vendor Image&lt;/h2&gt; &#xA;&lt;p&gt;The &#34;community&#34; image release workflow is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; a new tag is pushed to &lt;a href=&#34;https://github.com/composer/composer&#34;&gt;Composer repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; &lt;a href=&#34;https://github.com/composer/composer/raw/832af78e284b23a8f43914b2571fb4c48a7b108a/.github/workflows/release.yml#L81-L96&#34;&gt;release workflow&lt;/a&gt; on &lt;a href=&#34;https://github.com/composer/composer&#34;&gt;Composer repository&lt;/a&gt; creates an issue regarding new tag on &lt;a href=&#34;https://github.com/composer/docker&#34;&gt;Docker repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;‚úç&lt;/span&gt; modification to relevant &lt;code&gt;Dockerfile&lt;/code&gt;s is pushed/merged&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; &lt;a href=&#34;https://github.com/composer/docker/tree/main/.github/workflows&#34;&gt;docker workflows&lt;/a&gt; builds and pushes new release to &lt;a href=&#34;https://hub.docker.com/r/composer/composer&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;ü§ñ&lt;/span&gt; &lt;a href=&#34;https://github.com/composer/docker/tree/main/.github/workflows&#34;&gt;docker workflows&lt;/a&gt; builds and pushes new release to &lt;a href=&#34;https://gallery.ecr.aws/composer/composer&#34;&gt;Amazon Public ECR&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mingchen/docker-android-build-box</title>
    <updated>2022-08-07T01:38:06Z</updated>
    <id>tag:github.com,2022-08-07:/mingchen/docker-android-build-box</id>
    <link href="https://github.com/mingchen/docker-android-build-box" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An optimized docker image includes Android, Kotlin, Flutter sdk.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Android Build Box&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/mingc/android-build-box/&#34;&gt;&lt;img src=&#34;https://dockeri.co/image/mingc/android-build-box&#34; alt=&#34;docker icon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mingchen/docker-android-build-box/actions/workflows/docker-image.yml&#34;&gt;&lt;img src=&#34;https://github.com/mingchen/docker-android-build-box/actions/workflows/docker-image.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker Image CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;An optimized &lt;strong&gt;Docker&lt;/strong&gt; image that includes the &lt;strong&gt;Android SDK&lt;/strong&gt; and &lt;strong&gt;Flutter SDK&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What Is Inside&lt;/h2&gt; &#xA;&lt;p&gt;It includes the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu 20.04&lt;/li&gt; &#xA; &lt;li&gt;Java (OpenJDK) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.8&lt;/li&gt; &#xA;   &lt;li&gt;11&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android SDKs for platforms: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;26&lt;/li&gt; &#xA;   &lt;li&gt;27&lt;/li&gt; &#xA;   &lt;li&gt;28&lt;/li&gt; &#xA;   &lt;li&gt;29&lt;/li&gt; &#xA;   &lt;li&gt;30&lt;/li&gt; &#xA;   &lt;li&gt;31&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android build tools: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;26.0.0 26.0.1 26.0.2&lt;/li&gt; &#xA;   &lt;li&gt;27.0.1 27.0.2 27.0.3&lt;/li&gt; &#xA;   &lt;li&gt;28.0.1 28.0.2 28.0.3&lt;/li&gt; &#xA;   &lt;li&gt;29.0.2 29.0.3&lt;/li&gt; &#xA;   &lt;li&gt;30.0.0 30.0.2 30.0.3&lt;/li&gt; &#xA;   &lt;li&gt;31.0.0&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android NDK (always the latest version, side-by-side install)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/bundletool&#34;&gt;Android bundletool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android Emulator&lt;/li&gt; &#xA; &lt;li&gt;cmake&lt;/li&gt; &#xA; &lt;li&gt;TestNG&lt;/li&gt; &#xA; &lt;li&gt;Python 3.8.10&lt;/li&gt; &#xA; &lt;li&gt;Node.js 14, npm, React Native&lt;/li&gt; &#xA; &lt;li&gt;Ruby, RubyGems&lt;/li&gt; &#xA; &lt;li&gt;fastlane&lt;/li&gt; &#xA; &lt;li&gt;Flutter 2.10.3&lt;/li&gt; &#xA; &lt;li&gt;jenv&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pull Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;The docker image is a publicly automated build on &lt;a href=&#34;https://hub.docker.com/r/mingc/android-build-box/&#34;&gt;Docker Hub&lt;/a&gt; based on the &lt;code&gt;Dockerfile&lt;/code&gt; in this repo, so there is no hidden stuff in it. To pull the latest docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker pull mingc/android-build-box:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt; You can use a tag to a specific stable version, rather than &lt;code&gt;latest&lt;/code&gt; of docker image, to avoid breaking your build. e.g. &lt;code&gt;mingc/android-build-box:1.22.0&lt;/code&gt;. Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/mingchen/docker-android-build-box/master/#tags&#34;&gt;&lt;strong&gt;Tags&lt;/strong&gt;&lt;/a&gt; section, at the bottom of this page, to see all the available tags.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Use the image to build an Android project&lt;/h3&gt; &#xA;&lt;p&gt;You can use this docker image to build your Android project with a single docker command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &amp;lt;android project directory&amp;gt;  # change working directory to your project root directory.&#xA;docker run --rm -v `pwd`:/project mingc/android-build-box bash -c &#39;cd /project; ./gradlew build&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build &lt;code&gt;.aab&lt;/code&gt; bundle release, use &lt;code&gt;./gradlew bundleRelease&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &amp;lt;android project directory&amp;gt;  # change working directory to your project root directory.&#xA;docker run --rm -v `pwd`:/project mingc/android-build-box bash -c &#39;cd /project; ./gradlew bundleRelease&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run docker image with interactive bash shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -v `pwd`:/project -it mingc/android-build-box bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following arguments to the docker command to cache the home gradle folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;-v &#34;$HOME/.dockercache/gradle&#34;:&#34;/root/.gradle&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --rm -v `pwd`:/project  -v &#34;$HOME/.dockercache/gradle&#34;:&#34;/root/.gradle&#34;   mingc/android-build-box bash -c &#39;cd /project; ./gradlew build&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build an Android project with &lt;a href=&#34;https://bitbucket.org/product/features/pipelines&#34;&gt;Bitbucket Pipelines&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you have an Android project in a Bitbucket repository and want to use the pipeline feature to build it, you can simply specify this docker image. Here is an example of &lt;code&gt;bitbucket-pipelines.yml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;image: mingc/android-build-box:latest&#xA;&#xA;pipelines:&#xA;  default:&#xA;    - step:&#xA;        caches:&#xA;          - gradle&#xA;          - gradle-wrapper&#xA;          - android-emulator&#xA;        script:&#xA;          - bash ./gradlew assemble&#xA;definitions:&#xA;  caches:&#xA;    gradle-wrapper: ~/.gradle/wrapper&#xA;    android-emulator: $ANDROID_HOME/system-images/android-21&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The caches are used to &lt;a href=&#34;https://confluence.atlassian.com/bitbucket/caching-dependencies-895552876.html&#34;&gt;store downloaded dependencies&lt;/a&gt; from previous builds, to speed up the next builds.&lt;/p&gt; &#xA;&lt;h3&gt;Build a Flutter project with &lt;a href=&#34;https://github.com/features/actions&#34;&gt;Github Actions&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Here is an example &lt;code&gt;.github/workflows/main.yml&lt;/code&gt; to build a Flutter project with this docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: CI&#xA;&#xA;on: [push]&#xA;&#xA;jobs:&#xA;  build:&#xA;&#xA;    runs-on: ubuntu-18.04&#xA;    container: mingc/android-build-box:latest&#xA;&#xA;    steps:&#xA;    - uses: actions/checkout@v2&#xA;    - uses: actions/cache@v1&#xA;      with:&#xA;        path: /root/.gradle/caches&#xA;        key: ${{ runner.os }}-gradle-${{ hashFiles(&#39;**/*.gradle&#39;) }}&#xA;        restore-keys: |&#xA;          ${{ runner.os }}-gradle-&#xA;    - name: Build&#xA;      run: |&#xA;        echo &#34;Work dir: $(pwd)&#34;&#xA;        echo &#34;User: $(whoami)&#34;&#xA;        flutter --version&#xA;        flutter analyze&#xA;        flutter build apk&#xA;    - name: Archive apk&#xA;      uses: actions/upload-artifact@v1&#xA;      with:&#xA;        name: apk&#xA;        path: build/app/outputs/apk&#xA;    - name: Test&#xA;      run: flutter test&#xA;    - name: Clean build to avoid action/cache error&#xA;      run: rm -fr build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run an Android emulator in the Docker build machine&lt;/h3&gt; &#xA;&lt;p&gt;Using guidelines from...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@AndreSand/android-emulator-on-docker-container-f20c49b129ef&#34;&gt;https://medium.com/@AndreSand/android-emulator-on-docker-container-f20c49b129ef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spin.atomicobject.com/2016/03/10/android-test-script/&#34;&gt;https://spin.atomicobject.com/2016/03/10/android-test-script/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paulemtz.blogspot.com/2013/05/android-testing-in-headless-emulator.html&#34;&gt;https://paulemtz.blogspot.com/2013/05/android-testing-in-headless-emulator.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...You can write a script to create and launch an ARM emulator, which can be used for running integration tests or instrumentation tests or unit tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash&#xA;&#xA;# Arm emulators can be quite slow. For this reason it is convenient&#xA;# to increase the adb timeout to avoid errors.&#xA;export ADB_INSTALL_TIMEOUT=30&#xA;&#xA;# Download an ARM system image to create an ARM emulator.&#xA;sdkmanager &#34;system-images;android-22;default;armeabi-v7a&#34;&#xA;&#xA;# Create an ARM AVD emulator, with a 100 MB SD card storage space. Echo &#34;no&#34;&#xA;# because it will ask if you want to use a custom hardware profile, and you don&#39;t.&#xA;# https://medium.com/@AndreSand/android-emulator-on-docker-container-f20c49b129ef&#xA;echo &#34;no&#34; | avdmanager create avd \&#xA;    -n Android_5.1_API_22 \&#xA;    -k &#34;system-images;android-22;default;armeabi-v7a&#34; \&#xA;    -c 100M \&#xA;    --force&#xA;&#xA;# Launch the emulator in the background&#xA;$ANDROID_HOME/emulator/emulator -avd Android_5.1_API_22 -no-skin -no-audio -no-window -no-boot-anim -gpu off &amp;amp;&#xA;&#xA;# Note: You will have to add a suitable time delay, to wait for the emulator to launch.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that x86_64 emulators are not currently supported. See &lt;a href=&#34;https://github.com/mingchen/docker-android-build-box/issues/18&#34;&gt;Issue #18&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Choose the system Java version&lt;/h3&gt; &#xA;&lt;p&gt;Both Java 1.8 and Java 11 are installed.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;docker-android-build-box version&lt;/th&gt; &#xA;   &lt;th&gt;Date released&lt;/th&gt; &#xA;   &lt;th&gt;Java version available&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.19 and below&lt;/td&gt; &#xA;   &lt;td&gt;2 July 2020 and earlier&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Java 8&lt;/strong&gt; installed only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.20 - 1.23&lt;/td&gt; &#xA;   &lt;td&gt;7 August 2020 - 23 Sept 2021&lt;/td&gt; &#xA;   &lt;td&gt;Both &lt;strong&gt;Java 8 and Java 11&lt;/strong&gt; installed. &lt;br&gt;The default is Java 8.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.23.1&lt;/td&gt; &#xA;   &lt;td&gt;28 September 2021&lt;/td&gt; &#xA;   &lt;td&gt;Both &lt;strong&gt;Java 8 and Java 11&lt;/strong&gt; installed. &lt;br&gt;The default is Java 11.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Use &lt;code&gt;update-alternatives&lt;/code&gt; to switch &lt;code&gt;java&lt;/code&gt; version.&lt;/p&gt; &#xA;&lt;p&gt;List all the available &lt;code&gt;java&lt;/code&gt; paths:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# update-alternatives --list java&#xA;/usr/lib/jvm/java-11-openjdk-arm64/bin/java&#xA;/usr/lib/jvm/java-8-openjdk-arm64/jre/bin/java&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Switch current &lt;code&gt;java&lt;/code&gt; version to &lt;strong&gt;Java 8&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# update-alternatives --set java /usr/lib/jvm/java-8-openjdk-arm64/jre/bin/java&#xA;update-alternatives: using /usr/lib/jvm/java-8-openjdk-arm64/jre/bin/java to provide /usr/bin/java (java) in manual mode&#xA;root@9b816ba2e3cb:/project# java -version&#xA;openjdk version &#34;1.8.0_312&#34;&#xA;OpenJDK Runtime Environment (build 1.8.0_312-8u312-b07-0ubuntu1~20.04-b07)&#xA;OpenJDK 64-Bit Server VM (build 25.312-b07, mixed mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Switch current &lt;code&gt;java&lt;/code&gt; version to &lt;strong&gt;Java 11&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# update-alternatives --set java /usr/lib/jvm/java-11-openjdk-arm64/bin/java&#xA;update-alternatives: using /usr/lib/jvm/java-11-openjdk-arm64/bin/java to provide /usr/bin/java (java) in manual mode&#xA;root@9b816ba2e3cb:/project# java -version&#xA;openjdk version &#34;11.0.14&#34; 2022-01-18&#xA;OpenJDK Runtime Environment (build 11.0.14+9-Ubuntu-0ubuntu2.20.04)&#xA;OpenJDK 64-Bit Server VM (build 11.0.14+9-Ubuntu-0ubuntu2.20.04, mixed mode)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build the Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;If you want to build the docker image by yourself, you can use following command. The image itself is around 5 GB, so check your free disk space before building it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t android-build-box .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tags&lt;/h2&gt; &#xA;&lt;p&gt;You can use a tag to a specific stable version, rather than &lt;code&gt;latest&lt;/code&gt; of docker image, to avoid breaking your build. For example &lt;code&gt;mingc/android-build-box:1.22.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: versions &lt;code&gt;1.0.0&lt;/code&gt; up to &lt;code&gt;1.17.0&lt;/code&gt; included every single Build Tool version and every Android Platform version available. This generated large Docker images, around 5 GB. Newer versions of &lt;code&gt;android-build-box&lt;/code&gt; only include a subset of the newest Android Tools, so the Docker images are smaller.&lt;/p&gt; &#xA;&lt;h2&gt;1.24.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PR #76: Tidy up to reduce image size @ozmium&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.23.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove JDK 16, Android build not support JDK 16 yet.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.23.0&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: missed this tag in DockerHub due to a github action error, should use &lt;code&gt;1.23.1&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter 2.2.0 to 2.5.1&lt;/li&gt; &#xA; &lt;li&gt;PR #71: Ubuunt 20.04, JDK 16, gradle 7.2 @sedwards&lt;/li&gt; &#xA; &lt;li&gt;Fix #57: Correct repositories.cfg path&lt;/li&gt; &#xA; &lt;li&gt;Add jenv to choose java version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.22.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Nodejs from 12.x to 14.x&lt;/li&gt; &#xA; &lt;li&gt;Push image to docker hub from github action directly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.21.1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update dockerhub build hook.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.21.0&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter to 2.2.0&lt;/li&gt; &#xA; &lt;li&gt;CI switched from travis-ci to Github Action.&lt;/li&gt; &#xA; &lt;li&gt;PR #63: Add cache gradle to README @dewijones92&lt;/li&gt; &#xA; &lt;li&gt;PR #62: Make the Android SDK directory writeable @DanDevine&lt;/li&gt; &#xA; &lt;li&gt;Fix #60: Remove BUNDLE_GEMFILE env.&lt;/li&gt; &#xA; &lt;li&gt;PR #59: Fix #58: Updated README: Run emulator with ADB_INSTALL_TIMEOUT @felHR85&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.20.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter to 1.22.0&lt;/li&gt; &#xA; &lt;li&gt;Upgrade NDK to r21d&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.19.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PR #50: Remove all the &#34;extras&#34; items of local libraries in the Android SDK @ozmium&lt;/li&gt; &#xA; &lt;li&gt;Fix #48: Add timezone setting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.18.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add platform sdk 30 and build build 30.0.0&lt;/li&gt; &#xA; &lt;li&gt;PR #47: Remove old Build Tools (versions 24-17), and old Android Platform versions (versions 24-16), and old Google APIs (versions 24-16) @ozmium&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.17.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add build-tools;29.0.3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.16.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter to 1.17.1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.15.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PR #41: Update Dockerfile to install Yarn, fastlane using bundler. @mayankkapoor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.14.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade NDK to r21.&lt;/li&gt; &#xA; &lt;li&gt;Upgrade nodejs to 12.x.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.13.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade flutter to v1.12.13+hotfix.8.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.12.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add bundler for fastlane.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.11.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix #34: Add android sdk level 29 license.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.11.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add file, less and tiny-vim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.11.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade NDK from r19 to r20.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.10.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter from 1.2.1 to 1.5.4.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.9.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Ubuntu from 17.10 to 18.04.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.8.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade Flutter from 1.0.0 to 1.2.1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.7.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade ndk from 18b to 19.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.6.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgrade nodejs from 8.x to 10.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.5.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do not send flutter analytics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.5.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add Flutter 1.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add kotlin 1.3 support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.3.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PR #21: Update sdk to 28.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PR #17: Update sdk to 27.&lt;/li&gt; &#xA; &lt;li&gt;PR #20: Fix issue #18 Remove pre-installed x86_64 emulator. Explain how to create and launch an ARM emulator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix License for package not accepted issue&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix environment variable concatenation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update to latest sdk 25.2.3 and ndk 13b; add build tools 21.1.2 22.0.1 23.0.1 23.0.2 23.0.3 24 24.0.1 24.0.2 24.0.3 25 25.0.1 25.0.2 25.2.3&lt;/li&gt; &#xA; &lt;li&gt;nodejs 7.x and react-native support&lt;/li&gt; &#xA; &lt;li&gt;fastlane support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.0.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial release&lt;/li&gt; &#xA; &lt;li&gt;Android SDK 16,17,18,19.20,21,22,23,24&lt;/li&gt; &#xA; &lt;li&gt;Android build tool 24.0.2&lt;/li&gt; &#xA; &lt;li&gt;Android NDK r13&lt;/li&gt; &#xA; &lt;li&gt;extra-android-m2repository&lt;/li&gt; &#xA; &lt;li&gt;extra-google-google_play_services&lt;/li&gt; &#xA; &lt;li&gt;extra-google-m2repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you want to enhance this docker image or fix something, feel free to send &lt;a href=&#34;https://github.com/mingchen/docker-android-build-box/pull/new/master&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfile reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/&#34;&gt;Best practices for writing Dockerfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/getstarted/step_four/&#34;&gt;Build your own image&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/uber/android-build-environment/&#34;&gt;uber android build environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.replicated.com/refactoring-a-dockerfile-for-image-size/&#34;&gt;Refactoring a Dockerfile for image size&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://label-schema.org/&#34;&gt;Label Schema&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jboss-dockerfiles/wildfly</title>
    <updated>2022-08-07T01:38:06Z</updated>
    <id>tag:github.com,2022-08-07:/jboss-dockerfiles/wildfly</id>
    <link href="https://github.com/jboss-dockerfiles/wildfly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Docker image for WildFly project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WildFly Docker image&lt;/h1&gt; &#xA;&lt;p&gt;This is an example Dockerfile with &lt;a href=&#34;http://wildfly.org/&#34;&gt;WildFly application server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Official builds for this image are now published to &lt;a href=&#34;https://quay.io/wildfly/wildfly&#34;&gt;https://quay.io/wildfly/wildfly&lt;/a&gt;.&lt;br&gt; Previous repository at &lt;a href=&#34;https://hub.docker.com/r/jboss/wildfly&#34;&gt;https://hub.docker.com/r/jboss/wildfly&lt;/a&gt; is no longer updated with new images&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To boot in standalone mode&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it quay.io/wildfly/wildfly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To boot in standalone mode with admin console available remotely&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 -p 9990:9990 -it quay.io/wildfly/wildfly /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To boot in domain mode&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it quay.io/wildfly/wildfly /opt/jboss/wildfly/bin/domain.sh -b 0.0.0.0 -bmanagement 0.0.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Application deployment&lt;/h2&gt; &#xA;&lt;p&gt;With the WildFly server you can &lt;a href=&#34;https://docs.jboss.org/author/display/WFLY8/Application+deployment&#34;&gt;deploy your application in multiple ways&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can use CLI&lt;/li&gt; &#xA; &lt;li&gt;You can use the web console&lt;/li&gt; &#xA; &lt;li&gt;You can use the management API directly&lt;/li&gt; &#xA; &lt;li&gt;You can use the deployment scanner&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The most popular way of deploying an application is using the deployment scanner. In WildFly this method is enabled by default and the only thing you need to do is to place your application inside of the &lt;code&gt;deployments/&lt;/code&gt; directory. It can be &lt;code&gt;/opt/jboss/wildfly/standalone/deployments/&lt;/code&gt; or &lt;code&gt;/opt/jboss/wildfly/domain/deployments/&lt;/code&gt; depending on &lt;a href=&#34;https://docs.jboss.org/author/display/WFLY8/Operating+modes&#34;&gt;which mode&lt;/a&gt; you choose (standalone is default in the &lt;code&gt;jboss/wildfly&lt;/code&gt; image -- see above).&lt;/p&gt; &#xA;&lt;p&gt;The simplest and cleanest way to deploy an application to WildFly running in a container started from the &lt;code&gt;quay.io/wildfly/wildfly&lt;/code&gt; image is to use the deployment scanner method mentioned above.&lt;/p&gt; &#xA;&lt;p&gt;To do this you just need to extend the &lt;code&gt;quay.io/wildfly/wildfly&lt;/code&gt; image by creating a new one. Place your application inside the &lt;code&gt;deployments/&lt;/code&gt; directory with the &lt;code&gt;ADD&lt;/code&gt; command (but make sure to include the trailing slash on the deployment folder path, &lt;a href=&#34;https://docs.docker.com/reference/builder/#add&#34;&gt;more info&lt;/a&gt;). You can also do the changes to the configuration (if any) as additional steps (&lt;code&gt;RUN&lt;/code&gt; command).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/goldmann/wildfly-docker-deployment-example&#34;&gt;A simple example&lt;/a&gt; was prepared to show how to do it, but the steps are following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;Dockerfile&lt;/code&gt; with following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; FROM quay.io/wildfly/wildfly&#xA; ADD your-awesome-app.war /opt/jboss/wildfly/standalone/deployments/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Place your &lt;code&gt;your-awesome-app.war&lt;/code&gt; file in the same directory as your &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the build with &lt;code&gt;docker build --tag=wildfly-app .&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the container with &lt;code&gt;docker run -it wildfly-app&lt;/code&gt;. Application will be deployed on the container boot.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This way of deployment is great because of a few things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It utilizes Docker as the build tool providing stable builds&lt;/li&gt; &#xA; &lt;li&gt;Rebuilding image this way is very fast (once again: Docker)&lt;/li&gt; &#xA; &lt;li&gt;You only need to do changes to the base WildFly image that are required to run your application&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;Logging can be done in many ways. &lt;a href=&#34;https://goldmann.pl/blog/2014/07/18/logging-with-the-wildfly-docker-image/&#34;&gt;This blog post&lt;/a&gt; describes a lot of them.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing configuration&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you need to customize the application server configuration. There are many ways to do it and &lt;a href=&#34;https://goldmann.pl/blog/2014/07/23/customizing-the-configuration-of-the-wildfly-docker-image/&#34;&gt;this blog post&lt;/a&gt; tries to summarize it.&lt;/p&gt; &#xA;&lt;h2&gt;Extending the image&lt;/h2&gt; &#xA;&lt;p&gt;To be able to create a management user to access the administration console create a Dockerfile with the following content&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;FROM quay.io/wildfly/wildfly&#xA;RUN /opt/jboss/wildfly/bin/add-user.sh admin Admin#70365 --silent&#xA;CMD [&#34;/opt/jboss/wildfly/bin/standalone.sh&#34;, &#34;-b&#34;, &#34;0.0.0.0&#34;, &#34;-bmanagement&#34;, &#34;0.0.0.0&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build the image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --tag=jboss/wildfly-admin .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it jboss/wildfly-admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Administration console will be available on the port &lt;code&gt;9990&lt;/code&gt; of the container.&lt;/p&gt; &#xA;&lt;h2&gt;Building on your own&lt;/h2&gt; &#xA;&lt;p&gt;You don&#39;t need to do this on your own, because we prepared a trusted build for this repository, but if you really want:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --rm=true --tag=jboss/wildfly .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Image internals [updated Dec 13, 2018]&lt;/h2&gt; &#xA;&lt;p&gt;This image extends the &lt;a href=&#34;https://github.com/jboss-dockerfiles/base-jdk/tree/jdk11&#34;&gt;&lt;code&gt;jboss/base-jdk:11&lt;/code&gt;&lt;/a&gt; image which adds the OpenJDK distribution on top of the &lt;a href=&#34;https://github.com/jboss-dockerfiles/base&#34;&gt;&lt;code&gt;jboss/base&lt;/code&gt;&lt;/a&gt; image. Please refer to the README.md for selected images for more info.&lt;/p&gt; &#xA;&lt;p&gt;The server is run as the &lt;code&gt;jboss&lt;/code&gt; user which has the uid/gid set to &lt;code&gt;1000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;WildFly is installed in the &lt;code&gt;/opt/jboss/wildfly&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;The source is &lt;a href=&#34;https://github.com/jboss-dockerfiles/wildfly&#34;&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report any issues or file RFEs on &lt;a href=&#34;https://github.com/jboss-dockerfiles/wildfly/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>